{
  "metadata": {
    "timestamp": 1736548734453,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA=="
  },
  "repositories": [
    {
      "nameWithOwner": "CompVis/stable-diffusion",
      "stars": 69094,
      "defaultBranch": "main",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.05,
          "content": "Copyright (c) 2022 Robin Rombach and Patrick Esser and contributors\n\nCreativeML Open RAIL-M\ndated August 22, 2022\n\nSection I: PREAMBLE\n\nMultimodal generative models are being widely adopted and used, and have the potential to transform the way artists, among other individuals, conceive and benefit from AI or ML technologies as a tool for content creation.\n\nNotwithstanding the current and potential benefits that these artifacts can bring to society at large, there are also concerns about potential misuses of them, either due to their technical limitations or ethical considerations.\n\nIn short, this license strives for both the open and responsible downstream use of the accompanying model. When it comes to the open character, we took inspiration from open source permissive licenses regarding the grant of IP rights. Referring to the downstream responsible use, we added use-based restrictions not permitting the use of the Model in very specific scenarios, in order for the licensor to be able to enforce the license in case potential misuses of the Model may occur. At the same time, we strive to promote open and responsible research on generative models for art and content generation.\n\nEven though downstream derivative versions of the model could be released under different licensing terms, the latter will always have to include - at minimum - the same use-based restrictions as the ones in the original license (this license). We believe in the intersection between open and responsible AI development; thus, this License aims to strike a balance between both in order to enable responsible open-science in the field of AI.\n\nThis License governs the use of the model (and its derivatives) and is informed by the model card associated with the model.\n\nNOW THEREFORE, You and Licensor agree as follows:\n\n1. Definitions\n\n- \"License\" means the terms and conditions for use, reproduction, and Distribution as defined in this document.\n- \"Data\" means a collection of information and/or content extracted from the dataset used with the Model, including to train, pretrain, or otherwise evaluate the Model. The Data is not licensed under this License.\n- \"Output\" means the results of operating a Model as embodied in informational content resulting therefrom.\n- \"Model\" means any accompanying machine-learning based assemblies (including checkpoints), consisting of learnt weights, parameters (including optimizer states), corresponding to the model architecture as embodied in the Complementary Material, that have been trained or tuned, in whole or in part on the Data, using the Complementary Material.\n- \"Derivatives of the Model\" means all modifications to the Model, works based on the Model, or any other model which is created or initialized by transfer of patterns of the weights, parameters, activations or output of the Model, to the other model, in order to cause the other model to perform similarly to the Model, including - but not limited to - distillation methods entailing the use of intermediate data representations or methods based on the generation of synthetic data by the Model for training the other model.\n- \"Complementary Material\" means the accompanying source code and scripts used to define, run, load, benchmark or evaluate the Model, and used to prepare data for training or evaluation, if any. This includes any accompanying documentation, tutorials, examples, etc, if any.\n- \"Distribution\" means any transmission, reproduction, publication or other sharing of the Model or Derivatives of the Model to a third party, including providing the Model as a hosted service made available by electronic or other remote means - e.g. API-based or web access.\n- \"Licensor\" means the copyright owner or entity authorized by the copyright owner that is granting the License, including the persons or entities that may have rights in the Model and/or distributing the Model.\n- \"You\" (or \"Your\") means an individual or Legal Entity exercising permissions granted by this License and/or making use of the Model for whichever purpose and in any field of use, including usage of the Model in an end-use application - e.g. chatbot, translator, image generator.\n- \"Third Parties\" means individuals or legal entities that are not under common control with Licensor or You.\n- \"Contribution\" means any work of authorship, including the original version of the Model and any modifications or additions to that Model or Derivatives of the Model thereof, that is intentionally submitted to Licensor for inclusion in the Model by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Model, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n- \"Contributor\" means Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Model.\n\nSection II: INTELLECTUAL PROPERTY RIGHTS\n\nBoth copyright and patent grants apply to the Model, Derivatives of the Model and Complementary Material. The Model and Derivatives of the Model are subject to additional terms as described in Section III.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare, publicly display, publicly perform, sublicense, and distribute the Complementary Material, the Model, and Derivatives of the Model.\n3. Grant of Patent License. Subject to the terms and conditions of this License and where and as applicable, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this paragraph) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Model and the Complementary Material, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Model to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Model and/or Complementary Material or a Contribution incorporated within the Model and/or Complementary Material constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for the Model and/or Work shall terminate as of the date such litigation is asserted or filed.\n\nSection III: CONDITIONS OF USAGE, DISTRIBUTION AND REDISTRIBUTION\n\n4. Distribution and Redistribution. You may host for Third Party remote access purposes (e.g. software-as-a-service), reproduce and distribute copies of the Model or Derivatives of the Model thereof in any medium, with or without modifications, provided that You meet the following conditions:\nUse-based restrictions as referenced in paragraph 5 MUST be included as an enforceable provision by You in any type of legal agreement (e.g. a license) governing the use and/or distribution of the Model or Derivatives of the Model, and You shall give notice to subsequent users You Distribute to, that the Model or Derivatives of the Model are subject to paragraph 5. This provision does not apply to the use of Complementary Material.\nYou must give any Third Party recipients of the Model or Derivatives of the Model a copy of this License;\nYou must cause any modified files to carry prominent notices stating that You changed the files;\nYou must retain all copyright, patent, trademark, and attribution notices excluding those notices that do not pertain to any part of the Model, Derivatives of the Model.\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions - respecting paragraph 4.a. - for use, reproduction, or Distribution of Your modifications, or for any such Derivatives of the Model as a whole, provided Your use, reproduction, and Distribution of the Model otherwise complies with the conditions stated in this License.\n5. Use-based restrictions. The restrictions set forth in Attachment A are considered Use-based restrictions. Therefore You cannot use the Model and the Derivatives of the Model for the specified restricted uses. You may use the Model subject to this License, including only for lawful purposes and in accordance with the License. Use may include creating any content with, finetuning, updating, running, training, evaluating and/or reparametrizing the Model. You shall require all of Your users who use the Model or a Derivative of the Model to comply with the terms of this paragraph (paragraph 5).\n6. The Output You Generate. Except as set forth herein, Licensor claims no rights in the Output You generate using the Model. You are accountable for the Output you generate and its subsequent uses. No use of the output can contravene any provision as stated in the License.\n\nSection IV: OTHER PROVISIONS\n\n7. Updates and Runtime Restrictions. To the maximum extent permitted by law, Licensor reserves the right to restrict (remotely or otherwise) usage of the Model in violation of this License, update the Model through electronic means, or modify the Output of the Model based on updates. You shall undertake reasonable efforts to use the latest version of the Model.\n8. Trademarks and related. Nothing in this License permits You to make use of Licensors’ trademarks, trade names, logos or to otherwise suggest endorsement or misrepresent the relationship between the parties; and any rights not expressly granted herein are reserved by the Licensors.\n9. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Model and the Complementary Material (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Model, Derivatives of the Model, and the Complementary Material and assume any risks associated with Your exercise of permissions under this License.\n10. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Model and the Complementary Material (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n11. Accepting Warranty or Additional Liability. While redistributing the Model, Derivatives of the Model and the Complementary Material thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n12. If any provision of this License is held to be invalid, illegal or unenforceable, the remaining provisions shall be unaffected thereby and remain valid as if such provision had not been set forth herein.\n\nEND OF TERMS AND CONDITIONS\n\n\n\n\nAttachment A\n\nUse Restrictions\n\nYou agree not to use the Model or Derivatives of the Model:\n- In any way that violates any applicable national, federal, state, local or international law or regulation;\n- For the purpose of exploiting, harming or attempting to exploit or harm minors in any way;\n- To generate or disseminate verifiably false information and/or content with the purpose of harming others;\n- To generate or disseminate personal identifiable information that can be used to harm an individual;\n- To defame, disparage or otherwise harass others;\n- For fully automated decision making that adversely impacts an individual’s legal rights or otherwise creates or modifies a binding, enforceable obligation;\n- For any use intended to or which has the effect of discriminating against or harming individuals or groups based on online or offline social behavior or known or predicted personal or personality characteristics;\n- To exploit any of the vulnerabilities of a specific group of persons based on their age, social, physical or mental characteristics, in order to materially distort the behavior of a person pertaining to that group in a manner that causes or is likely to cause that person or another person physical or psychological harm;\n- For any use intended to or which has the effect of discriminating against individuals or groups based on legally protected characteristics or categories;\n- To provide medical advice and medical results interpretation;\n- To generate or disseminate information for the purpose to be used for administration of justice, law enforcement, immigration or asylum processes, such as predicting an individual will commit fraud/crime commitment (e.g. by text profiling, drawing causal relationships between assertions made in documents, indiscriminate and arbitrarily-targeted use).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.15,
          "content": "# Stable Diffusion\n*Stable Diffusion was made possible thanks to a collaboration with [Stability AI](https://stability.ai/) and [Runway](https://runwayml.com/) and builds upon our previous work:*\n\n[**High-Resolution Image Synthesis with Latent Diffusion Models**](https://ommer-lab.com/research/latent-diffusion-models/)<br/>\n[Robin Rombach](https://github.com/rromb)\\*,\n[Andreas Blattmann](https://github.com/ablattmann)\\*,\n[Dominik Lorenz](https://github.com/qp-qp)\\,\n[Patrick Esser](https://github.com/pesser),\n[Björn Ommer](https://hci.iwr.uni-heidelberg.de/Staff/bommer)<br/>\n_[CVPR '22 Oral](https://openaccess.thecvf.com/content/CVPR2022/html/Rombach_High-Resolution_Image_Synthesis_With_Latent_Diffusion_Models_CVPR_2022_paper.html) |\n[GitHub](https://github.com/CompVis/latent-diffusion) | [arXiv](https://arxiv.org/abs/2112.10752) | [Project page](https://ommer-lab.com/research/latent-diffusion-models/)_\n\n![txt2img-stable2](assets/stable-samples/txt2img/merged-0006.png)\n[Stable Diffusion](#stable-diffusion-v1) is a latent text-to-image diffusion\nmodel.\nThanks to a generous compute donation from [Stability AI](https://stability.ai/) and support from [LAION](https://laion.ai/), we were able to train a Latent Diffusion Model on 512x512 images from a subset of the [LAION-5B](https://laion.ai/blog/laion-5b/) database. \nSimilar to Google's [Imagen](https://arxiv.org/abs/2205.11487), \nthis model uses a frozen CLIP ViT-L/14 text encoder to condition the model on text prompts.\nWith its 860M UNet and 123M text encoder, the model is relatively lightweight and runs on a GPU with at least 10GB VRAM.\nSee [this section](#stable-diffusion-v1) below and the [model card](https://huggingface.co/CompVis/stable-diffusion).\n\n  \n## Requirements\nA suitable [conda](https://conda.io/) environment named `ldm` can be created\nand activated with:\n\n```\nconda env create -f environment.yaml\nconda activate ldm\n```\n\nYou can also update an existing [latent diffusion](https://github.com/CompVis/latent-diffusion) environment by running\n\n```\nconda install pytorch torchvision -c pytorch\npip install transformers==4.19.2 diffusers invisible-watermark\npip install -e .\n``` \n\n\n## Stable Diffusion v1\n\nStable Diffusion v1 refers to a specific configuration of the model\narchitecture that uses a downsampling-factor 8 autoencoder with an 860M UNet\nand CLIP ViT-L/14 text encoder for the diffusion model. The model was pretrained on 256x256 images and \nthen finetuned on 512x512 images.\n\n*Note: Stable Diffusion v1 is a general text-to-image diffusion model and therefore mirrors biases and (mis-)conceptions that are present\nin its training data. \nDetails on the training procedure and data, as well as the intended use of the model can be found in the corresponding [model card](Stable_Diffusion_v1_Model_Card.md).*\n\nThe weights are available via [the CompVis organization at Hugging Face](https://huggingface.co/CompVis) under [a license which contains specific use-based restrictions to prevent misuse and harm as informed by the model card, but otherwise remains permissive](LICENSE). While commercial use is permitted under the terms of the license, **we do not recommend using the provided weights for services or products without additional safety mechanisms and considerations**, since there are [known limitations and biases](Stable_Diffusion_v1_Model_Card.md#limitations-and-bias) of the weights, and research on safe and ethical deployment of general text-to-image models is an ongoing effort. **The weights are research artifacts and should be treated as such.**\n\n[The CreativeML OpenRAIL M license](LICENSE) is an [Open RAIL M license](https://www.licenses.ai/blog/2022/8/18/naming-convention-of-responsible-ai-licenses), adapted from the work that [BigScience](https://bigscience.huggingface.co/) and [the RAIL Initiative](https://www.licenses.ai/) are jointly carrying in the area of responsible AI licensing. See also [the article about the BLOOM Open RAIL license](https://bigscience.huggingface.co/blog/the-bigscience-rail-license) on which our license is based.\n\n### Weights\n\nWe currently provide the following checkpoints:\n\n- `sd-v1-1.ckpt`: 237k steps at resolution `256x256` on [laion2B-en](https://huggingface.co/datasets/laion/laion2B-en).\n  194k steps at resolution `512x512` on [laion-high-resolution](https://huggingface.co/datasets/laion/laion-high-resolution) (170M examples from LAION-5B with resolution `>= 1024x1024`).\n- `sd-v1-2.ckpt`: Resumed from `sd-v1-1.ckpt`.\n  515k steps at resolution `512x512` on [laion-aesthetics v2 5+](https://laion.ai/blog/laion-aesthetics/) (a subset of laion2B-en with estimated aesthetics score `> 5.0`, and additionally\nfiltered to images with an original size `>= 512x512`, and an estimated watermark probability `< 0.5`. The watermark estimate is from the [LAION-5B](https://laion.ai/blog/laion-5b/) metadata, the aesthetics score is estimated using the [LAION-Aesthetics Predictor V2](https://github.com/christophschuhmann/improved-aesthetic-predictor)).\n- `sd-v1-3.ckpt`: Resumed from `sd-v1-2.ckpt`. 195k steps at resolution `512x512` on \"laion-aesthetics v2 5+\" and 10\\% dropping of the text-conditioning to improve [classifier-free guidance sampling](https://arxiv.org/abs/2207.12598).\n- `sd-v1-4.ckpt`: Resumed from `sd-v1-2.ckpt`. 225k steps at resolution `512x512` on \"laion-aesthetics v2 5+\" and 10\\% dropping of the text-conditioning to improve [classifier-free guidance sampling](https://arxiv.org/abs/2207.12598).\n\nEvaluations with different classifier-free guidance scales (1.5, 2.0, 3.0, 4.0,\n5.0, 6.0, 7.0, 8.0) and 50 PLMS sampling\nsteps show the relative improvements of the checkpoints:\n![sd evaluation results](assets/v1-variants-scores.jpg)\n\n\n\n### Text-to-Image with Stable Diffusion\n![txt2img-stable2](assets/stable-samples/txt2img/merged-0005.png)\n![txt2img-stable2](assets/stable-samples/txt2img/merged-0007.png)\n\nStable Diffusion is a latent diffusion model conditioned on the (non-pooled) text embeddings of a CLIP ViT-L/14 text encoder.\nWe provide a [reference script for sampling](#reference-sampling-script), but\nthere also exists a [diffusers integration](#diffusers-integration), which we\nexpect to see more active community development.\n\n#### Reference Sampling Script\n\nWe provide a reference sampling script, which incorporates\n\n- a [Safety Checker Module](https://github.com/CompVis/stable-diffusion/pull/36),\n  to reduce the probability of explicit outputs,\n- an [invisible watermarking](https://github.com/ShieldMnt/invisible-watermark)\n  of the outputs, to help viewers [identify the images as machine-generated](scripts/tests/test_watermark.py).\n\nAfter [obtaining the `stable-diffusion-v1-*-original` weights](#weights), link them\n```\nmkdir -p models/ldm/stable-diffusion-v1/\nln -s <path/to/model.ckpt> models/ldm/stable-diffusion-v1/model.ckpt \n```\nand sample with\n```\npython scripts/txt2img.py --prompt \"a photograph of an astronaut riding a horse\" --plms \n```\n\nBy default, this uses a guidance scale of `--scale 7.5`, [Katherine Crowson's implementation](https://github.com/CompVis/latent-diffusion/pull/51) of the [PLMS](https://arxiv.org/abs/2202.09778) sampler, \nand renders images of size 512x512 (which it was trained on) in 50 steps. All supported arguments are listed below (type `python scripts/txt2img.py --help`).\n\n\n```commandline\nusage: txt2img.py [-h] [--prompt [PROMPT]] [--outdir [OUTDIR]] [--skip_grid] [--skip_save] [--ddim_steps DDIM_STEPS] [--plms] [--laion400m] [--fixed_code] [--ddim_eta DDIM_ETA]\n                  [--n_iter N_ITER] [--H H] [--W W] [--C C] [--f F] [--n_samples N_SAMPLES] [--n_rows N_ROWS] [--scale SCALE] [--from-file FROM_FILE] [--config CONFIG] [--ckpt CKPT]\n                  [--seed SEED] [--precision {full,autocast}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --prompt [PROMPT]     the prompt to render\n  --outdir [OUTDIR]     dir to write results to\n  --skip_grid           do not save a grid, only individual samples. Helpful when evaluating lots of samples\n  --skip_save           do not save individual samples. For speed measurements.\n  --ddim_steps DDIM_STEPS\n                        number of ddim sampling steps\n  --plms                use plms sampling\n  --laion400m           uses the LAION400M model\n  --fixed_code          if enabled, uses the same starting code across samples\n  --ddim_eta DDIM_ETA   ddim eta (eta=0.0 corresponds to deterministic sampling\n  --n_iter N_ITER       sample this often\n  --H H                 image height, in pixel space\n  --W W                 image width, in pixel space\n  --C C                 latent channels\n  --f F                 downsampling factor\n  --n_samples N_SAMPLES\n                        how many samples to produce for each given prompt. A.k.a. batch size\n  --n_rows N_ROWS       rows in the grid (default: n_samples)\n  --scale SCALE         unconditional guidance scale: eps = eps(x, empty) + scale * (eps(x, cond) - eps(x, empty))\n  --from-file FROM_FILE\n                        if specified, load prompts from this file\n  --config CONFIG       path to config which constructs model\n  --ckpt CKPT           path to checkpoint of model\n  --seed SEED           the seed (for reproducible sampling)\n  --precision {full,autocast}\n                        evaluate at this precision\n```\nNote: The inference config for all v1 versions is designed to be used with EMA-only checkpoints. \nFor this reason `use_ema=False` is set in the configuration, otherwise the code will try to switch from\nnon-EMA to EMA weights. If you want to examine the effect of EMA vs no EMA, we provide \"full\" checkpoints\nwhich contain both types of weights. For these, `use_ema=False` will load and use the non-EMA weights.\n\n\n#### Diffusers Integration\n\nA simple way to download and sample Stable Diffusion is by using the [diffusers library](https://github.com/huggingface/diffusers/tree/main#new--stable-diffusion-is-now-fully-compatible-with-diffusers):\n```py\n# make sure you're logged in with `huggingface-cli login`\nfrom torch import autocast\nfrom diffusers import StableDiffusionPipeline\n\npipe = StableDiffusionPipeline.from_pretrained(\n\t\"CompVis/stable-diffusion-v1-4\", \n\tuse_auth_token=True\n).to(\"cuda\")\n\nprompt = \"a photo of an astronaut riding a horse on mars\"\nwith autocast(\"cuda\"):\n    image = pipe(prompt)[\"sample\"][0]  \n    \nimage.save(\"astronaut_rides_horse.png\")\n```\n\n\n### Image Modification with Stable Diffusion\n\nBy using a diffusion-denoising mechanism as first proposed by [SDEdit](https://arxiv.org/abs/2108.01073), the model can be used for different \ntasks such as text-guided image-to-image translation and upscaling. Similar to the txt2img sampling script, \nwe provide a script to perform image modification with Stable Diffusion.  \n\nThe following describes an example where a rough sketch made in [Pinta](https://www.pinta-project.com/) is converted into a detailed artwork.\n```\npython scripts/img2img.py --prompt \"A fantasy landscape, trending on artstation\" --init-img <path-to-img.jpg> --strength 0.8\n```\nHere, strength is a value between 0.0 and 1.0, that controls the amount of noise that is added to the input image. \nValues that approach 1.0 allow for lots of variations but will also produce images that are not semantically consistent with the input. See the following example.\n\n**Input**\n\n![sketch-in](assets/stable-samples/img2img/sketch-mountains-input.jpg)\n\n**Outputs**\n\n![out3](assets/stable-samples/img2img/mountains-3.png)\n![out2](assets/stable-samples/img2img/mountains-2.png)\n\nThis procedure can, for example, also be used to upscale samples from the base model.\n\n\n## Comments \n\n- Our codebase for the diffusion models builds heavily on [OpenAI's ADM codebase](https://github.com/openai/guided-diffusion)\nand [https://github.com/lucidrains/denoising-diffusion-pytorch](https://github.com/lucidrains/denoising-diffusion-pytorch). \nThanks for open-sourcing!\n\n- The implementation of the transformer encoder is from [x-transformers](https://github.com/lucidrains/x-transformers) by [lucidrains](https://github.com/lucidrains?tab=repositories). \n\n\n## BibTeX\n\n```\n@misc{rombach2021highresolution,\n      title={High-Resolution Image Synthesis with Latent Diffusion Models}, \n      author={Robin Rombach and Andreas Blattmann and Dominik Lorenz and Patrick Esser and Björn Ommer},\n      year={2021},\n      eprint={2112.10752},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n\n"
        },
        {
          "name": "Stable_Diffusion_v1_Model_Card.md",
          "type": "blob",
          "size": 9.13,
          "content": "# Stable Diffusion v1 Model Card\nThis model card focuses on the model associated with the Stable Diffusion model, available [here](https://github.com/CompVis/stable-diffusion).\n\n## Model Details\n- **Developed by:** Robin Rombach, Patrick Esser\n- **Model type:** Diffusion-based text-to-image generation model\n- **Language(s):** English\n- **License:** [Proprietary](LICENSE)\n- **Model Description:** This is a model that can be used to generate and modify images based on text prompts. It is a [Latent Diffusion Model](https://arxiv.org/abs/2112.10752) that uses a fixed, pretrained text encoder ([CLIP ViT-L/14](https://arxiv.org/abs/2103.00020)) as suggested in the [Imagen paper](https://arxiv.org/abs/2205.11487).\n- **Resources for more information:** [GitHub Repository](https://github.com/CompVis/stable-diffusion), [Paper](https://arxiv.org/abs/2112.10752).\n- **Cite as:**\n\n      @InProceedings{Rombach_2022_CVPR,\n          author    = {Rombach, Robin and Blattmann, Andreas and Lorenz, Dominik and Esser, Patrick and Ommer, Bj\\\"orn},\n          title     = {High-Resolution Image Synthesis With Latent Diffusion Models},\n          booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n          month     = {June},\n          year      = {2022},\n          pages     = {10684-10695}\n      }\n\n# Uses\n\n## Direct Use \nThe model is intended for research purposes only. Possible research areas and\ntasks include\n\n- Safe deployment of models which have the potential to generate harmful content.\n- Probing and understanding the limitations and biases of generative models.\n- Generation of artworks and use in design and other artistic processes.\n- Applications in educational or creative tools.\n- Research on generative models.\n\nExcluded uses are described below.\n\n ### Misuse, Malicious Use, and Out-of-Scope Use\n_Note: This section is taken from the [DALLE-MINI model card](https://huggingface.co/dalle-mini/dalle-mini), but applies in the same way to Stable Diffusion v1_.\n\nThe model should not be used to intentionally create or disseminate images that create hostile or alienating environments for people. This includes generating images that people would foreseeably find disturbing, distressing, or offensive; or content that propagates historical or current stereotypes.\n\n#### Out-of-Scope Use\nThe model was not trained to be factual or true representations of people or events, and therefore using the model to generate such content is out-of-scope for the abilities of this model.\n\n#### Misuse and Malicious Use\nUsing the model to generate content that is cruel to individuals is a misuse of this model. This includes, but is not limited to:\n\n- Generating demeaning, dehumanizing, or otherwise harmful representations of people or their environments, cultures, religions, etc.\n- Intentionally promoting or propagating discriminatory content or harmful stereotypes.\n- Impersonating individuals without their consent.\n- Sexual content without consent of the people who might see it.\n- Mis- and disinformation\n- Representations of egregious violence and gore\n- Sharing of copyrighted or licensed material in violation of its terms of use.\n- Sharing content that is an alteration of copyrighted or licensed material in violation of its terms of use.\n\n## Limitations and Bias\n\n### Limitations\n\n- The model does not achieve perfect photorealism\n- The model cannot render legible text\n- The model does not perform well on more difficult tasks which involve compositionality, such as rendering an image corresponding to “A red cube on top of a blue sphere”\n- Faces and people in general may not be generated properly.\n- The model was trained mainly with English captions and will not work as well in other languages.\n- The autoencoding part of the model is lossy\n- The model was trained on a large-scale dataset\n  [LAION-5B](https://laion.ai/blog/laion-5b/) which contains adult material\n  and is not fit for product use without additional safety mechanisms and\n  considerations.\n- No additional measures were used to deduplicate the dataset. As a result, we observe some degree of memorization for images that are duplicated in the training data.\n  The training data can be searched at [https://rom1504.github.io/clip-retrieval/](https://rom1504.github.io/clip-retrieval/) to possibly assist in the detection of memorized images.\n\n### Bias\nWhile the capabilities of image generation models are impressive, they can also reinforce or exacerbate social biases. \nStable Diffusion v1 was primarily trained on subsets of [LAION-2B(en)](https://laion.ai/blog/laion-5b/), \nwhich consists of images that are limited to English descriptions. \nTexts and images from communities and cultures that use other languages are likely to be insufficiently accounted for. \nThis affects the overall output of the model, as white and western cultures are often set as the default. Further, the \nability of the model to generate content with non-English prompts is significantly worse than with English-language prompts.\nStable Diffusion v1 mirrors and exacerbates biases to such a degree that viewer discretion must be advised irrespective of the input or its intent.\n\n\n## Training\n\n**Training Data**\nThe model developers used the following dataset for training the model:\n\n- LAION-5B and subsets thereof (see next section)\n\n**Training Procedure**\nStable Diffusion v1 is a latent diffusion model which combines an autoencoder with a diffusion model that is trained in the latent space of the autoencoder. During training, \n\n- Images are encoded through an encoder, which turns images into latent representations. The autoencoder uses a relative downsampling factor of 8 and maps images of shape H x W x 3 to latents of shape H/f x W/f x 4\n- Text prompts are encoded through a ViT-L/14 text-encoder.\n- The non-pooled output of the text encoder is fed into the UNet backbone of the latent diffusion model via cross-attention.\n- The loss is a reconstruction objective between the noise that was added to the latent and the prediction made by the UNet.\n\nWe currently provide the following checkpoints:\n\n- `sd-v1-1.ckpt`: 237k steps at resolution `256x256` on [laion2B-en](https://huggingface.co/datasets/laion/laion2B-en).\n  194k steps at resolution `512x512` on [laion-high-resolution](https://huggingface.co/datasets/laion/laion-high-resolution) (170M examples from LAION-5B with resolution `>= 1024x1024`).\n- `sd-v1-2.ckpt`: Resumed from `sd-v1-1.ckpt`.\n  515k steps at resolution `512x512` on [laion-aesthetics v2 5+](https://laion.ai/blog/laion-aesthetics/) (a subset of laion2B-en with estimated aesthetics score `> 5.0`, and additionally\nfiltered to images with an original size `>= 512x512`, and an estimated watermark probability `< 0.5`. The watermark estimate is from the [LAION-5B](https://laion.ai/blog/laion-5b/) metadata, the aesthetics score is estimated using the [LAION-Aesthetics Predictor V2](https://github.com/christophschuhmann/improved-aesthetic-predictor)).\n- `sd-v1-3.ckpt`: Resumed from `sd-v1-2.ckpt`. 195k steps at resolution `512x512` on \"laion-aesthetics v2 5+\" and 10\\% dropping of the text-conditioning to improve [classifier-free guidance sampling](https://arxiv.org/abs/2207.12598).\n- `sd-v1-4.ckpt`: Resumed from `sd-v1-2.ckpt`. 225k steps at resolution `512x512` on \"laion-aesthetics v2 5+\" and 10\\% dropping of the text-conditioning to improve [classifier-free guidance sampling](https://arxiv.org/abs/2207.12598).\n\n- **Hardware:** 32 x 8 x A100 GPUs\n- **Optimizer:** AdamW\n- **Gradient Accumulations**: 2\n- **Batch:** 32 x 8 x 2 x 4 = 2048\n- **Learning rate:** warmup to 0.0001 for 10,000 steps and then kept constant\n\n## Evaluation Results \nEvaluations with different classifier-free guidance scales (1.5, 2.0, 3.0, 4.0,\n5.0, 6.0, 7.0, 8.0) and 50 PLMS sampling\nsteps show the relative improvements of the checkpoints:\n\n![pareto](assets/v1-variants-scores.jpg) \n\nEvaluated using 50 PLMS steps and 10000 random prompts from the COCO2017 validation set, evaluated at 512x512 resolution.  Not optimized for FID scores.\n\n## Environmental Impact\n\n**Stable Diffusion v1** **Estimated Emissions**\nBased on that information, we estimate the following CO2 emissions using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700). The hardware, runtime, cloud provider, and compute region were utilized to estimate the carbon impact.\n\n- **Hardware Type:** A100 PCIe 40GB\n- **Hours used:** 150000\n- **Cloud Provider:** AWS\n- **Compute Region:** US-east\n- **Carbon Emitted (Power consumption x Time x Carbon produced based on location of power grid):** 11250 kg CO2 eq.\n\n## Citation\n    @InProceedings{Rombach_2022_CVPR,\n        author    = {Rombach, Robin and Blattmann, Andreas and Lorenz, Dominik and Esser, Patrick and Ommer, Bj\\\"orn},\n        title     = {High-Resolution Image Synthesis With Latent Diffusion Models},\n        booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n        month     = {June},\n        year      = {2022},\n        pages     = {10684-10695}\n    }\n\n*This model card was written by: Robin Rombach and Patrick Esser and is based on the [DALL-E Mini model card](https://huggingface.co/dalle-mini/dalle-mini).*\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "environment.yaml",
          "type": "blob",
          "size": 0.72,
          "content": "name: ldm\nchannels:\n  - pytorch\n  - defaults\ndependencies:\n  - python=3.8.5\n  - pip=20.3\n  - cudatoolkit=11.3\n  - pytorch=1.11.0\n  - torchvision=0.12.0\n  - numpy=1.19.2\n  - pip:\n    - albumentations==0.4.3\n    - diffusers\n    - opencv-python==4.1.2.30\n    - pudb==2019.2\n    - invisible-watermark\n    - imageio==2.9.0\n    - imageio-ffmpeg==0.4.2\n    - pytorch-lightning==1.4.2\n    - omegaconf==2.1.1\n    - test-tube>=0.7.5\n    - streamlit>=0.73.1\n    - einops==0.3.0\n    - torch-fidelity==0.3.0\n    - transformers==4.19.2\n    - torchmetrics==0.6.0\n    - kornia==0.6\n    - -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers\n    - -e git+https://github.com/openai/CLIP.git@main#egg=clip\n    - -e .\n"
        },
        {
          "name": "ldm",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 27.51,
          "content": "import argparse, os, sys, datetime, glob, importlib, csv\nimport numpy as np\nimport time\nimport torch\nimport torchvision\nimport pytorch_lightning as pl\n\nfrom packaging import version\nfrom omegaconf import OmegaConf\nfrom torch.utils.data import random_split, DataLoader, Dataset, Subset\nfrom functools import partial\nfrom PIL import Image\n\nfrom pytorch_lightning import seed_everything\nfrom pytorch_lightning.trainer import Trainer\nfrom pytorch_lightning.callbacks import ModelCheckpoint, Callback, LearningRateMonitor\nfrom pytorch_lightning.utilities.distributed import rank_zero_only\nfrom pytorch_lightning.utilities import rank_zero_info\n\nfrom ldm.data.base import Txt2ImgIterableBaseDataset\nfrom ldm.util import instantiate_from_config\n\n\ndef get_parser(**parser_kwargs):\n    def str2bool(v):\n        if isinstance(v, bool):\n            return v\n        if v.lower() in (\"yes\", \"true\", \"t\", \"y\", \"1\"):\n            return True\n        elif v.lower() in (\"no\", \"false\", \"f\", \"n\", \"0\"):\n            return False\n        else:\n            raise argparse.ArgumentTypeError(\"Boolean value expected.\")\n\n    parser = argparse.ArgumentParser(**parser_kwargs)\n    parser.add_argument(\n        \"-n\",\n        \"--name\",\n        type=str,\n        const=True,\n        default=\"\",\n        nargs=\"?\",\n        help=\"postfix for logdir\",\n    )\n    parser.add_argument(\n        \"-r\",\n        \"--resume\",\n        type=str,\n        const=True,\n        default=\"\",\n        nargs=\"?\",\n        help=\"resume from logdir or checkpoint in logdir\",\n    )\n    parser.add_argument(\n        \"-b\",\n        \"--base\",\n        nargs=\"*\",\n        metavar=\"base_config.yaml\",\n        help=\"paths to base configs. Loaded from left-to-right. \"\n             \"Parameters can be overwritten or added with command-line options of the form `--key value`.\",\n        default=list(),\n    )\n    parser.add_argument(\n        \"-t\",\n        \"--train\",\n        type=str2bool,\n        const=True,\n        default=False,\n        nargs=\"?\",\n        help=\"train\",\n    )\n    parser.add_argument(\n        \"--no-test\",\n        type=str2bool,\n        const=True,\n        default=False,\n        nargs=\"?\",\n        help=\"disable test\",\n    )\n    parser.add_argument(\n        \"-p\",\n        \"--project\",\n        help=\"name of new or path to existing project\"\n    )\n    parser.add_argument(\n        \"-d\",\n        \"--debug\",\n        type=str2bool,\n        nargs=\"?\",\n        const=True,\n        default=False,\n        help=\"enable post-mortem debugging\",\n    )\n    parser.add_argument(\n        \"-s\",\n        \"--seed\",\n        type=int,\n        default=23,\n        help=\"seed for seed_everything\",\n    )\n    parser.add_argument(\n        \"-f\",\n        \"--postfix\",\n        type=str,\n        default=\"\",\n        help=\"post-postfix for default name\",\n    )\n    parser.add_argument(\n        \"-l\",\n        \"--logdir\",\n        type=str,\n        default=\"logs\",\n        help=\"directory for logging dat shit\",\n    )\n    parser.add_argument(\n        \"--scale_lr\",\n        type=str2bool,\n        nargs=\"?\",\n        const=True,\n        default=True,\n        help=\"scale base-lr by ngpu * batch_size * n_accumulate\",\n    )\n    return parser\n\n\ndef nondefault_trainer_args(opt):\n    parser = argparse.ArgumentParser()\n    parser = Trainer.add_argparse_args(parser)\n    args = parser.parse_args([])\n    return sorted(k for k in vars(args) if getattr(opt, k) != getattr(args, k))\n\n\nclass WrappedDataset(Dataset):\n    \"\"\"Wraps an arbitrary object with __len__ and __getitem__ into a pytorch dataset\"\"\"\n\n    def __init__(self, dataset):\n        self.data = dataset\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, idx):\n        return self.data[idx]\n\n\ndef worker_init_fn(_):\n    worker_info = torch.utils.data.get_worker_info()\n\n    dataset = worker_info.dataset\n    worker_id = worker_info.id\n\n    if isinstance(dataset, Txt2ImgIterableBaseDataset):\n        split_size = dataset.num_records // worker_info.num_workers\n        # reset num_records to the true number to retain reliable length information\n        dataset.sample_ids = dataset.valid_ids[worker_id * split_size:(worker_id + 1) * split_size]\n        current_id = np.random.choice(len(np.random.get_state()[1]), 1)\n        return np.random.seed(np.random.get_state()[1][current_id] + worker_id)\n    else:\n        return np.random.seed(np.random.get_state()[1][0] + worker_id)\n\n\nclass DataModuleFromConfig(pl.LightningDataModule):\n    def __init__(self, batch_size, train=None, validation=None, test=None, predict=None,\n                 wrap=False, num_workers=None, shuffle_test_loader=False, use_worker_init_fn=False,\n                 shuffle_val_dataloader=False):\n        super().__init__()\n        self.batch_size = batch_size\n        self.dataset_configs = dict()\n        self.num_workers = num_workers if num_workers is not None else batch_size * 2\n        self.use_worker_init_fn = use_worker_init_fn\n        if train is not None:\n            self.dataset_configs[\"train\"] = train\n            self.train_dataloader = self._train_dataloader\n        if validation is not None:\n            self.dataset_configs[\"validation\"] = validation\n            self.val_dataloader = partial(self._val_dataloader, shuffle=shuffle_val_dataloader)\n        if test is not None:\n            self.dataset_configs[\"test\"] = test\n            self.test_dataloader = partial(self._test_dataloader, shuffle=shuffle_test_loader)\n        if predict is not None:\n            self.dataset_configs[\"predict\"] = predict\n            self.predict_dataloader = self._predict_dataloader\n        self.wrap = wrap\n\n    def prepare_data(self):\n        for data_cfg in self.dataset_configs.values():\n            instantiate_from_config(data_cfg)\n\n    def setup(self, stage=None):\n        self.datasets = dict(\n            (k, instantiate_from_config(self.dataset_configs[k]))\n            for k in self.dataset_configs)\n        if self.wrap:\n            for k in self.datasets:\n                self.datasets[k] = WrappedDataset(self.datasets[k])\n\n    def _train_dataloader(self):\n        is_iterable_dataset = isinstance(self.datasets['train'], Txt2ImgIterableBaseDataset)\n        if is_iterable_dataset or self.use_worker_init_fn:\n            init_fn = worker_init_fn\n        else:\n            init_fn = None\n        return DataLoader(self.datasets[\"train\"], batch_size=self.batch_size,\n                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,\n                          worker_init_fn=init_fn)\n\n    def _val_dataloader(self, shuffle=False):\n        if isinstance(self.datasets['validation'], Txt2ImgIterableBaseDataset) or self.use_worker_init_fn:\n            init_fn = worker_init_fn\n        else:\n            init_fn = None\n        return DataLoader(self.datasets[\"validation\"],\n                          batch_size=self.batch_size,\n                          num_workers=self.num_workers,\n                          worker_init_fn=init_fn,\n                          shuffle=shuffle)\n\n    def _test_dataloader(self, shuffle=False):\n        is_iterable_dataset = isinstance(self.datasets['train'], Txt2ImgIterableBaseDataset)\n        if is_iterable_dataset or self.use_worker_init_fn:\n            init_fn = worker_init_fn\n        else:\n            init_fn = None\n\n        # do not shuffle dataloader for iterable dataset\n        shuffle = shuffle and (not is_iterable_dataset)\n\n        return DataLoader(self.datasets[\"test\"], batch_size=self.batch_size,\n                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)\n\n    def _predict_dataloader(self, shuffle=False):\n        if isinstance(self.datasets['predict'], Txt2ImgIterableBaseDataset) or self.use_worker_init_fn:\n            init_fn = worker_init_fn\n        else:\n            init_fn = None\n        return DataLoader(self.datasets[\"predict\"], batch_size=self.batch_size,\n                          num_workers=self.num_workers, worker_init_fn=init_fn)\n\n\nclass SetupCallback(Callback):\n    def __init__(self, resume, now, logdir, ckptdir, cfgdir, config, lightning_config):\n        super().__init__()\n        self.resume = resume\n        self.now = now\n        self.logdir = logdir\n        self.ckptdir = ckptdir\n        self.cfgdir = cfgdir\n        self.config = config\n        self.lightning_config = lightning_config\n\n    def on_keyboard_interrupt(self, trainer, pl_module):\n        if trainer.global_rank == 0:\n            print(\"Summoning checkpoint.\")\n            ckpt_path = os.path.join(self.ckptdir, \"last.ckpt\")\n            trainer.save_checkpoint(ckpt_path)\n\n    def on_pretrain_routine_start(self, trainer, pl_module):\n        if trainer.global_rank == 0:\n            # Create logdirs and save configs\n            os.makedirs(self.logdir, exist_ok=True)\n            os.makedirs(self.ckptdir, exist_ok=True)\n            os.makedirs(self.cfgdir, exist_ok=True)\n\n            if \"callbacks\" in self.lightning_config:\n                if 'metrics_over_trainsteps_checkpoint' in self.lightning_config['callbacks']:\n                    os.makedirs(os.path.join(self.ckptdir, 'trainstep_checkpoints'), exist_ok=True)\n            print(\"Project config\")\n            print(OmegaConf.to_yaml(self.config))\n            OmegaConf.save(self.config,\n                           os.path.join(self.cfgdir, \"{}-project.yaml\".format(self.now)))\n\n            print(\"Lightning config\")\n            print(OmegaConf.to_yaml(self.lightning_config))\n            OmegaConf.save(OmegaConf.create({\"lightning\": self.lightning_config}),\n                           os.path.join(self.cfgdir, \"{}-lightning.yaml\".format(self.now)))\n\n        else:\n            # ModelCheckpoint callback created log directory --- remove it\n            if not self.resume and os.path.exists(self.logdir):\n                dst, name = os.path.split(self.logdir)\n                dst = os.path.join(dst, \"child_runs\", name)\n                os.makedirs(os.path.split(dst)[0], exist_ok=True)\n                try:\n                    os.rename(self.logdir, dst)\n                except FileNotFoundError:\n                    pass\n\n\nclass ImageLogger(Callback):\n    def __init__(self, batch_frequency, max_images, clamp=True, increase_log_steps=True,\n                 rescale=True, disabled=False, log_on_batch_idx=False, log_first_step=False,\n                 log_images_kwargs=None):\n        super().__init__()\n        self.rescale = rescale\n        self.batch_freq = batch_frequency\n        self.max_images = max_images\n        self.logger_log_images = {\n            pl.loggers.TestTubeLogger: self._testtube,\n        }\n        self.log_steps = [2 ** n for n in range(int(np.log2(self.batch_freq)) + 1)]\n        if not increase_log_steps:\n            self.log_steps = [self.batch_freq]\n        self.clamp = clamp\n        self.disabled = disabled\n        self.log_on_batch_idx = log_on_batch_idx\n        self.log_images_kwargs = log_images_kwargs if log_images_kwargs else {}\n        self.log_first_step = log_first_step\n\n    @rank_zero_only\n    def _testtube(self, pl_module, images, batch_idx, split):\n        for k in images:\n            grid = torchvision.utils.make_grid(images[k])\n            grid = (grid + 1.0) / 2.0  # -1,1 -> 0,1; c,h,w\n\n            tag = f\"{split}/{k}\"\n            pl_module.logger.experiment.add_image(\n                tag, grid,\n                global_step=pl_module.global_step)\n\n    @rank_zero_only\n    def log_local(self, save_dir, split, images,\n                  global_step, current_epoch, batch_idx):\n        root = os.path.join(save_dir, \"images\", split)\n        for k in images:\n            grid = torchvision.utils.make_grid(images[k], nrow=4)\n            if self.rescale:\n                grid = (grid + 1.0) / 2.0  # -1,1 -> 0,1; c,h,w\n            grid = grid.transpose(0, 1).transpose(1, 2).squeeze(-1)\n            grid = grid.numpy()\n            grid = (grid * 255).astype(np.uint8)\n            filename = \"{}_gs-{:06}_e-{:06}_b-{:06}.png\".format(\n                k,\n                global_step,\n                current_epoch,\n                batch_idx)\n            path = os.path.join(root, filename)\n            os.makedirs(os.path.split(path)[0], exist_ok=True)\n            Image.fromarray(grid).save(path)\n\n    def log_img(self, pl_module, batch, batch_idx, split=\"train\"):\n        check_idx = batch_idx if self.log_on_batch_idx else pl_module.global_step\n        if (self.check_frequency(check_idx) and  # batch_idx % self.batch_freq == 0\n                hasattr(pl_module, \"log_images\") and\n                callable(pl_module.log_images) and\n                self.max_images > 0):\n            logger = type(pl_module.logger)\n\n            is_train = pl_module.training\n            if is_train:\n                pl_module.eval()\n\n            with torch.no_grad():\n                images = pl_module.log_images(batch, split=split, **self.log_images_kwargs)\n\n            for k in images:\n                N = min(images[k].shape[0], self.max_images)\n                images[k] = images[k][:N]\n                if isinstance(images[k], torch.Tensor):\n                    images[k] = images[k].detach().cpu()\n                    if self.clamp:\n                        images[k] = torch.clamp(images[k], -1., 1.)\n\n            self.log_local(pl_module.logger.save_dir, split, images,\n                           pl_module.global_step, pl_module.current_epoch, batch_idx)\n\n            logger_log_images = self.logger_log_images.get(logger, lambda *args, **kwargs: None)\n            logger_log_images(pl_module, images, pl_module.global_step, split)\n\n            if is_train:\n                pl_module.train()\n\n    def check_frequency(self, check_idx):\n        if ((check_idx % self.batch_freq) == 0 or (check_idx in self.log_steps)) and (\n                check_idx > 0 or self.log_first_step):\n            try:\n                self.log_steps.pop(0)\n            except IndexError as e:\n                print(e)\n                pass\n            return True\n        return False\n\n    def on_train_batch_end(self, trainer, pl_module, outputs, batch, batch_idx, dataloader_idx):\n        if not self.disabled and (pl_module.global_step > 0 or self.log_first_step):\n            self.log_img(pl_module, batch, batch_idx, split=\"train\")\n\n    def on_validation_batch_end(self, trainer, pl_module, outputs, batch, batch_idx, dataloader_idx):\n        if not self.disabled and pl_module.global_step > 0:\n            self.log_img(pl_module, batch, batch_idx, split=\"val\")\n        if hasattr(pl_module, 'calibrate_grad_norm'):\n            if (pl_module.calibrate_grad_norm and batch_idx % 25 == 0) and batch_idx > 0:\n                self.log_gradients(trainer, pl_module, batch_idx=batch_idx)\n\n\nclass CUDACallback(Callback):\n    # see https://github.com/SeanNaren/minGPT/blob/master/mingpt/callback.py\n    def on_train_epoch_start(self, trainer, pl_module):\n        # Reset the memory use counter\n        torch.cuda.reset_peak_memory_stats(trainer.root_gpu)\n        torch.cuda.synchronize(trainer.root_gpu)\n        self.start_time = time.time()\n\n    def on_train_epoch_end(self, trainer, pl_module, outputs):\n        torch.cuda.synchronize(trainer.root_gpu)\n        max_memory = torch.cuda.max_memory_allocated(trainer.root_gpu) / 2 ** 20\n        epoch_time = time.time() - self.start_time\n\n        try:\n            max_memory = trainer.training_type_plugin.reduce(max_memory)\n            epoch_time = trainer.training_type_plugin.reduce(epoch_time)\n\n            rank_zero_info(f\"Average Epoch time: {epoch_time:.2f} seconds\")\n            rank_zero_info(f\"Average Peak memory {max_memory:.2f}MiB\")\n        except AttributeError:\n            pass\n\n\nif __name__ == \"__main__\":\n    # custom parser to specify config files, train, test and debug mode,\n    # postfix, resume.\n    # `--key value` arguments are interpreted as arguments to the trainer.\n    # `nested.key=value` arguments are interpreted as config parameters.\n    # configs are merged from left-to-right followed by command line parameters.\n\n    # model:\n    #   base_learning_rate: float\n    #   target: path to lightning module\n    #   params:\n    #       key: value\n    # data:\n    #   target: main.DataModuleFromConfig\n    #   params:\n    #      batch_size: int\n    #      wrap: bool\n    #      train:\n    #          target: path to train dataset\n    #          params:\n    #              key: value\n    #      validation:\n    #          target: path to validation dataset\n    #          params:\n    #              key: value\n    #      test:\n    #          target: path to test dataset\n    #          params:\n    #              key: value\n    # lightning: (optional, has sane defaults and can be specified on cmdline)\n    #   trainer:\n    #       additional arguments to trainer\n    #   logger:\n    #       logger to instantiate\n    #   modelcheckpoint:\n    #       modelcheckpoint to instantiate\n    #   callbacks:\n    #       callback1:\n    #           target: importpath\n    #           params:\n    #               key: value\n\n    now = datetime.datetime.now().strftime(\"%Y-%m-%dT%H-%M-%S\")\n\n    # add cwd for convenience and to make classes in this file available when\n    # running as `python main.py`\n    # (in particular `main.DataModuleFromConfig`)\n    sys.path.append(os.getcwd())\n\n    parser = get_parser()\n    parser = Trainer.add_argparse_args(parser)\n\n    opt, unknown = parser.parse_known_args()\n    if opt.name and opt.resume:\n        raise ValueError(\n            \"-n/--name and -r/--resume cannot be specified both.\"\n            \"If you want to resume training in a new log folder, \"\n            \"use -n/--name in combination with --resume_from_checkpoint\"\n        )\n    if opt.resume:\n        if not os.path.exists(opt.resume):\n            raise ValueError(\"Cannot find {}\".format(opt.resume))\n        if os.path.isfile(opt.resume):\n            paths = opt.resume.split(\"/\")\n            # idx = len(paths)-paths[::-1].index(\"logs\")+1\n            # logdir = \"/\".join(paths[:idx])\n            logdir = \"/\".join(paths[:-2])\n            ckpt = opt.resume\n        else:\n            assert os.path.isdir(opt.resume), opt.resume\n            logdir = opt.resume.rstrip(\"/\")\n            ckpt = os.path.join(logdir, \"checkpoints\", \"last.ckpt\")\n\n        opt.resume_from_checkpoint = ckpt\n        base_configs = sorted(glob.glob(os.path.join(logdir, \"configs/*.yaml\")))\n        opt.base = base_configs + opt.base\n        _tmp = logdir.split(\"/\")\n        nowname = _tmp[-1]\n    else:\n        if opt.name:\n            name = \"_\" + opt.name\n        elif opt.base:\n            cfg_fname = os.path.split(opt.base[0])[-1]\n            cfg_name = os.path.splitext(cfg_fname)[0]\n            name = \"_\" + cfg_name\n        else:\n            name = \"\"\n        nowname = now + name + opt.postfix\n        logdir = os.path.join(opt.logdir, nowname)\n\n    ckptdir = os.path.join(logdir, \"checkpoints\")\n    cfgdir = os.path.join(logdir, \"configs\")\n    seed_everything(opt.seed)\n\n    try:\n        # init and save configs\n        configs = [OmegaConf.load(cfg) for cfg in opt.base]\n        cli = OmegaConf.from_dotlist(unknown)\n        config = OmegaConf.merge(*configs, cli)\n        lightning_config = config.pop(\"lightning\", OmegaConf.create())\n        # merge trainer cli with config\n        trainer_config = lightning_config.get(\"trainer\", OmegaConf.create())\n        # default to ddp\n        trainer_config[\"accelerator\"] = \"ddp\"\n        for k in nondefault_trainer_args(opt):\n            trainer_config[k] = getattr(opt, k)\n        if not \"gpus\" in trainer_config:\n            del trainer_config[\"accelerator\"]\n            cpu = True\n        else:\n            gpuinfo = trainer_config[\"gpus\"]\n            print(f\"Running on GPUs {gpuinfo}\")\n            cpu = False\n        trainer_opt = argparse.Namespace(**trainer_config)\n        lightning_config.trainer = trainer_config\n\n        # model\n        model = instantiate_from_config(config.model)\n\n        # trainer and callbacks\n        trainer_kwargs = dict()\n\n        # default logger configs\n        default_logger_cfgs = {\n            \"wandb\": {\n                \"target\": \"pytorch_lightning.loggers.WandbLogger\",\n                \"params\": {\n                    \"name\": nowname,\n                    \"save_dir\": logdir,\n                    \"offline\": opt.debug,\n                    \"id\": nowname,\n                }\n            },\n            \"testtube\": {\n                \"target\": \"pytorch_lightning.loggers.TestTubeLogger\",\n                \"params\": {\n                    \"name\": \"testtube\",\n                    \"save_dir\": logdir,\n                }\n            },\n        }\n        default_logger_cfg = default_logger_cfgs[\"testtube\"]\n        if \"logger\" in lightning_config:\n            logger_cfg = lightning_config.logger\n        else:\n            logger_cfg = OmegaConf.create()\n        logger_cfg = OmegaConf.merge(default_logger_cfg, logger_cfg)\n        trainer_kwargs[\"logger\"] = instantiate_from_config(logger_cfg)\n\n        # modelcheckpoint - use TrainResult/EvalResult(checkpoint_on=metric) to\n        # specify which metric is used to determine best models\n        default_modelckpt_cfg = {\n            \"target\": \"pytorch_lightning.callbacks.ModelCheckpoint\",\n            \"params\": {\n                \"dirpath\": ckptdir,\n                \"filename\": \"{epoch:06}\",\n                \"verbose\": True,\n                \"save_last\": True,\n            }\n        }\n        if hasattr(model, \"monitor\"):\n            print(f\"Monitoring {model.monitor} as checkpoint metric.\")\n            default_modelckpt_cfg[\"params\"][\"monitor\"] = model.monitor\n            default_modelckpt_cfg[\"params\"][\"save_top_k\"] = 3\n\n        if \"modelcheckpoint\" in lightning_config:\n            modelckpt_cfg = lightning_config.modelcheckpoint\n        else:\n            modelckpt_cfg =  OmegaConf.create()\n        modelckpt_cfg = OmegaConf.merge(default_modelckpt_cfg, modelckpt_cfg)\n        print(f\"Merged modelckpt-cfg: \\n{modelckpt_cfg}\")\n        if version.parse(pl.__version__) < version.parse('1.4.0'):\n            trainer_kwargs[\"checkpoint_callback\"] = instantiate_from_config(modelckpt_cfg)\n\n        # add callback which sets up log directory\n        default_callbacks_cfg = {\n            \"setup_callback\": {\n                \"target\": \"main.SetupCallback\",\n                \"params\": {\n                    \"resume\": opt.resume,\n                    \"now\": now,\n                    \"logdir\": logdir,\n                    \"ckptdir\": ckptdir,\n                    \"cfgdir\": cfgdir,\n                    \"config\": config,\n                    \"lightning_config\": lightning_config,\n                }\n            },\n            \"image_logger\": {\n                \"target\": \"main.ImageLogger\",\n                \"params\": {\n                    \"batch_frequency\": 750,\n                    \"max_images\": 4,\n                    \"clamp\": True\n                }\n            },\n            \"learning_rate_logger\": {\n                \"target\": \"main.LearningRateMonitor\",\n                \"params\": {\n                    \"logging_interval\": \"step\",\n                    # \"log_momentum\": True\n                }\n            },\n            \"cuda_callback\": {\n                \"target\": \"main.CUDACallback\"\n            },\n        }\n        if version.parse(pl.__version__) >= version.parse('1.4.0'):\n            default_callbacks_cfg.update({'checkpoint_callback': modelckpt_cfg})\n\n        if \"callbacks\" in lightning_config:\n            callbacks_cfg = lightning_config.callbacks\n        else:\n            callbacks_cfg = OmegaConf.create()\n\n        if 'metrics_over_trainsteps_checkpoint' in callbacks_cfg:\n            print(\n                'Caution: Saving checkpoints every n train steps without deleting. This might require some free space.')\n            default_metrics_over_trainsteps_ckpt_dict = {\n                'metrics_over_trainsteps_checkpoint':\n                    {\"target\": 'pytorch_lightning.callbacks.ModelCheckpoint',\n                     'params': {\n                         \"dirpath\": os.path.join(ckptdir, 'trainstep_checkpoints'),\n                         \"filename\": \"{epoch:06}-{step:09}\",\n                         \"verbose\": True,\n                         'save_top_k': -1,\n                         'every_n_train_steps': 10000,\n                         'save_weights_only': True\n                     }\n                     }\n            }\n            default_callbacks_cfg.update(default_metrics_over_trainsteps_ckpt_dict)\n\n        callbacks_cfg = OmegaConf.merge(default_callbacks_cfg, callbacks_cfg)\n        if 'ignore_keys_callback' in callbacks_cfg and hasattr(trainer_opt, 'resume_from_checkpoint'):\n            callbacks_cfg.ignore_keys_callback.params['ckpt_path'] = trainer_opt.resume_from_checkpoint\n        elif 'ignore_keys_callback' in callbacks_cfg:\n            del callbacks_cfg['ignore_keys_callback']\n\n        trainer_kwargs[\"callbacks\"] = [instantiate_from_config(callbacks_cfg[k]) for k in callbacks_cfg]\n\n        trainer = Trainer.from_argparse_args(trainer_opt, **trainer_kwargs)\n        trainer.logdir = logdir  ###\n\n        # data\n        data = instantiate_from_config(config.data)\n        # NOTE according to https://pytorch-lightning.readthedocs.io/en/latest/datamodules.html\n        # calling these ourselves should not be necessary but it is.\n        # lightning still takes care of proper multiprocessing though\n        data.prepare_data()\n        data.setup()\n        print(\"#### Data #####\")\n        for k in data.datasets:\n            print(f\"{k}, {data.datasets[k].__class__.__name__}, {len(data.datasets[k])}\")\n\n        # configure learning rate\n        bs, base_lr = config.data.params.batch_size, config.model.base_learning_rate\n        if not cpu:\n            ngpu = len(lightning_config.trainer.gpus.strip(\",\").split(','))\n        else:\n            ngpu = 1\n        if 'accumulate_grad_batches' in lightning_config.trainer:\n            accumulate_grad_batches = lightning_config.trainer.accumulate_grad_batches\n        else:\n            accumulate_grad_batches = 1\n        print(f\"accumulate_grad_batches = {accumulate_grad_batches}\")\n        lightning_config.trainer.accumulate_grad_batches = accumulate_grad_batches\n        if opt.scale_lr:\n            model.learning_rate = accumulate_grad_batches * ngpu * bs * base_lr\n            print(\n                \"Setting learning rate to {:.2e} = {} (accumulate_grad_batches) * {} (num_gpus) * {} (batchsize) * {:.2e} (base_lr)\".format(\n                    model.learning_rate, accumulate_grad_batches, ngpu, bs, base_lr))\n        else:\n            model.learning_rate = base_lr\n            print(\"++++ NOT USING LR SCALING ++++\")\n            print(f\"Setting learning rate to {model.learning_rate:.2e}\")\n\n\n        # allow checkpointing via USR1\n        def melk(*args, **kwargs):\n            # run all checkpoint hooks\n            if trainer.global_rank == 0:\n                print(\"Summoning checkpoint.\")\n                ckpt_path = os.path.join(ckptdir, \"last.ckpt\")\n                trainer.save_checkpoint(ckpt_path)\n\n\n        def divein(*args, **kwargs):\n            if trainer.global_rank == 0:\n                import pudb;\n                pudb.set_trace()\n\n\n        import signal\n\n        signal.signal(signal.SIGUSR1, melk)\n        signal.signal(signal.SIGUSR2, divein)\n\n        # run\n        if opt.train:\n            try:\n                trainer.fit(model, data)\n            except Exception:\n                melk()\n                raise\n        if not opt.no_test and not trainer.interrupted:\n            trainer.test(model, data)\n    except Exception:\n        if opt.debug and trainer.global_rank == 0:\n            try:\n                import pudb as debugger\n            except ImportError:\n                import pdb as debugger\n            debugger.post_mortem()\n        raise\n    finally:\n        # move newly created debug project to debug_runs\n        if opt.debug and not opt.resume and trainer.global_rank == 0:\n            dst, name = os.path.split(logdir)\n            dst = os.path.join(dst, \"debug_runs\", name)\n            os.makedirs(os.path.split(dst)[0], exist_ok=True)\n            os.rename(logdir, dst)\n        if trainer.global_rank == 0:\n            print(trainer.profiler.summary())\n"
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebook_helpers.py",
          "type": "blob",
          "size": 9.86,
          "content": "from torchvision.datasets.utils import download_url\nfrom ldm.util import instantiate_from_config\nimport torch\nimport os\n# todo ?\nfrom google.colab import files\nfrom IPython.display import Image as ipyimg\nimport ipywidgets as widgets\nfrom PIL import Image\nfrom numpy import asarray\nfrom einops import rearrange, repeat\nimport torch, torchvision\nfrom ldm.models.diffusion.ddim import DDIMSampler\nfrom ldm.util import ismap\nimport time\nfrom omegaconf import OmegaConf\n\n\ndef download_models(mode):\n\n    if mode == \"superresolution\":\n        # this is the small bsr light model\n        url_conf = 'https://heibox.uni-heidelberg.de/f/31a76b13ea27482981b4/?dl=1'\n        url_ckpt = 'https://heibox.uni-heidelberg.de/f/578df07c8fc04ffbadf3/?dl=1'\n\n        path_conf = 'logs/diffusion/superresolution_bsr/configs/project.yaml'\n        path_ckpt = 'logs/diffusion/superresolution_bsr/checkpoints/last.ckpt'\n\n        download_url(url_conf, path_conf)\n        download_url(url_ckpt, path_ckpt)\n\n        path_conf = path_conf + '/?dl=1' # fix it\n        path_ckpt = path_ckpt + '/?dl=1' # fix it\n        return path_conf, path_ckpt\n\n    else:\n        raise NotImplementedError\n\n\ndef load_model_from_config(config, ckpt):\n    print(f\"Loading model from {ckpt}\")\n    pl_sd = torch.load(ckpt, map_location=\"cpu\")\n    global_step = pl_sd[\"global_step\"]\n    sd = pl_sd[\"state_dict\"]\n    model = instantiate_from_config(config.model)\n    m, u = model.load_state_dict(sd, strict=False)\n    model.cuda()\n    model.eval()\n    return {\"model\": model}, global_step\n\n\ndef get_model(mode):\n    path_conf, path_ckpt = download_models(mode)\n    config = OmegaConf.load(path_conf)\n    model, step = load_model_from_config(config, path_ckpt)\n    return model\n\n\ndef get_custom_cond(mode):\n    dest = \"data/example_conditioning\"\n\n    if mode == \"superresolution\":\n        uploaded_img = files.upload()\n        filename = next(iter(uploaded_img))\n        name, filetype = filename.split(\".\") # todo assumes just one dot in name !\n        os.rename(f\"{filename}\", f\"{dest}/{mode}/custom_{name}.{filetype}\")\n\n    elif mode == \"text_conditional\":\n        w = widgets.Text(value='A cake with cream!', disabled=True)\n        display(w)\n\n        with open(f\"{dest}/{mode}/custom_{w.value[:20]}.txt\", 'w') as f:\n            f.write(w.value)\n\n    elif mode == \"class_conditional\":\n        w = widgets.IntSlider(min=0, max=1000)\n        display(w)\n        with open(f\"{dest}/{mode}/custom.txt\", 'w') as f:\n            f.write(w.value)\n\n    else:\n        raise NotImplementedError(f\"cond not implemented for mode{mode}\")\n\n\ndef get_cond_options(mode):\n    path = \"data/example_conditioning\"\n    path = os.path.join(path, mode)\n    onlyfiles = [f for f in sorted(os.listdir(path))]\n    return path, onlyfiles\n\n\ndef select_cond_path(mode):\n    path = \"data/example_conditioning\"  # todo\n    path = os.path.join(path, mode)\n    onlyfiles = [f for f in sorted(os.listdir(path))]\n\n    selected = widgets.RadioButtons(\n        options=onlyfiles,\n        description='Select conditioning:',\n        disabled=False\n    )\n    display(selected)\n    selected_path = os.path.join(path, selected.value)\n    return selected_path\n\n\ndef get_cond(mode, selected_path):\n    example = dict()\n    if mode == \"superresolution\":\n        up_f = 4\n        visualize_cond_img(selected_path)\n\n        c = Image.open(selected_path)\n        c = torch.unsqueeze(torchvision.transforms.ToTensor()(c), 0)\n        c_up = torchvision.transforms.functional.resize(c, size=[up_f * c.shape[2], up_f * c.shape[3]], antialias=True)\n        c_up = rearrange(c_up, '1 c h w -> 1 h w c')\n        c = rearrange(c, '1 c h w -> 1 h w c')\n        c = 2. * c - 1.\n\n        c = c.to(torch.device(\"cuda\"))\n        example[\"LR_image\"] = c\n        example[\"image\"] = c_up\n\n    return example\n\n\ndef visualize_cond_img(path):\n    display(ipyimg(filename=path))\n\n\ndef run(model, selected_path, task, custom_steps, resize_enabled=False, classifier_ckpt=None, global_step=None):\n\n    example = get_cond(task, selected_path)\n\n    save_intermediate_vid = False\n    n_runs = 1\n    masked = False\n    guider = None\n    ckwargs = None\n    mode = 'ddim'\n    ddim_use_x0_pred = False\n    temperature = 1.\n    eta = 1.\n    make_progrow = True\n    custom_shape = None\n\n    height, width = example[\"image\"].shape[1:3]\n    split_input = height >= 128 and width >= 128\n\n    if split_input:\n        ks = 128\n        stride = 64\n        vqf = 4  #\n        model.split_input_params = {\"ks\": (ks, ks), \"stride\": (stride, stride),\n                                    \"vqf\": vqf,\n                                    \"patch_distributed_vq\": True,\n                                    \"tie_braker\": False,\n                                    \"clip_max_weight\": 0.5,\n                                    \"clip_min_weight\": 0.01,\n                                    \"clip_max_tie_weight\": 0.5,\n                                    \"clip_min_tie_weight\": 0.01}\n    else:\n        if hasattr(model, \"split_input_params\"):\n            delattr(model, \"split_input_params\")\n\n    invert_mask = False\n\n    x_T = None\n    for n in range(n_runs):\n        if custom_shape is not None:\n            x_T = torch.randn(1, custom_shape[1], custom_shape[2], custom_shape[3]).to(model.device)\n            x_T = repeat(x_T, '1 c h w -> b c h w', b=custom_shape[0])\n\n        logs = make_convolutional_sample(example, model,\n                                         mode=mode, custom_steps=custom_steps,\n                                         eta=eta, swap_mode=False , masked=masked,\n                                         invert_mask=invert_mask, quantize_x0=False,\n                                         custom_schedule=None, decode_interval=10,\n                                         resize_enabled=resize_enabled, custom_shape=custom_shape,\n                                         temperature=temperature, noise_dropout=0.,\n                                         corrector=guider, corrector_kwargs=ckwargs, x_T=x_T, save_intermediate_vid=save_intermediate_vid,\n                                         make_progrow=make_progrow,ddim_use_x0_pred=ddim_use_x0_pred\n                                         )\n    return logs\n\n\n@torch.no_grad()\ndef convsample_ddim(model, cond, steps, shape, eta=1.0, callback=None, normals_sequence=None,\n                    mask=None, x0=None, quantize_x0=False, img_callback=None,\n                    temperature=1., noise_dropout=0., score_corrector=None,\n                    corrector_kwargs=None, x_T=None, log_every_t=None\n                    ):\n\n    ddim = DDIMSampler(model)\n    bs = shape[0]  # dont know where this comes from but wayne\n    shape = shape[1:]  # cut batch dim\n    print(f\"Sampling with eta = {eta}; steps: {steps}\")\n    samples, intermediates = ddim.sample(steps, batch_size=bs, shape=shape, conditioning=cond, callback=callback,\n                                         normals_sequence=normals_sequence, quantize_x0=quantize_x0, eta=eta,\n                                         mask=mask, x0=x0, temperature=temperature, verbose=False,\n                                         score_corrector=score_corrector,\n                                         corrector_kwargs=corrector_kwargs, x_T=x_T)\n\n    return samples, intermediates\n\n\n@torch.no_grad()\ndef make_convolutional_sample(batch, model, mode=\"vanilla\", custom_steps=None, eta=1.0, swap_mode=False, masked=False,\n                              invert_mask=True, quantize_x0=False, custom_schedule=None, decode_interval=1000,\n                              resize_enabled=False, custom_shape=None, temperature=1., noise_dropout=0., corrector=None,\n                              corrector_kwargs=None, x_T=None, save_intermediate_vid=False, make_progrow=True,ddim_use_x0_pred=False):\n    log = dict()\n\n    z, c, x, xrec, xc = model.get_input(batch, model.first_stage_key,\n                                        return_first_stage_outputs=True,\n                                        force_c_encode=not (hasattr(model, 'split_input_params')\n                                                            and model.cond_stage_key == 'coordinates_bbox'),\n                                        return_original_cond=True)\n\n    log_every_t = 1 if save_intermediate_vid else None\n\n    if custom_shape is not None:\n        z = torch.randn(custom_shape)\n        print(f\"Generating {custom_shape[0]} samples of shape {custom_shape[1:]}\")\n\n    z0 = None\n\n    log[\"input\"] = x\n    log[\"reconstruction\"] = xrec\n\n    if ismap(xc):\n        log[\"original_conditioning\"] = model.to_rgb(xc)\n        if hasattr(model, 'cond_stage_key'):\n            log[model.cond_stage_key] = model.to_rgb(xc)\n\n    else:\n        log[\"original_conditioning\"] = xc if xc is not None else torch.zeros_like(x)\n        if model.cond_stage_model:\n            log[model.cond_stage_key] = xc if xc is not None else torch.zeros_like(x)\n            if model.cond_stage_key =='class_label':\n                log[model.cond_stage_key] = xc[model.cond_stage_key]\n\n    with model.ema_scope(\"Plotting\"):\n        t0 = time.time()\n        img_cb = None\n\n        sample, intermediates = convsample_ddim(model, c, steps=custom_steps, shape=z.shape,\n                                                eta=eta,\n                                                quantize_x0=quantize_x0, img_callback=img_cb, mask=None, x0=z0,\n                                                temperature=temperature, noise_dropout=noise_dropout,\n                                                score_corrector=corrector, corrector_kwargs=corrector_kwargs,\n                                                x_T=x_T, log_every_t=log_every_t)\n        t1 = time.time()\n\n        if ddim_use_x0_pred:\n            sample = intermediates['pred_x0'][-1]\n\n    x_sample = model.decode_first_stage(sample)\n\n    try:\n        x_sample_noquant = model.decode_first_stage(sample, force_not_quantize=True)\n        log[\"sample_noquant\"] = x_sample_noquant\n        log[\"sample_diff\"] = torch.abs(x_sample_noquant - x_sample)\n    except:\n        pass\n\n    log[\"sample\"] = x_sample\n    log[\"time\"] = t1 - t0\n\n    return log"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.23,
          "content": "from setuptools import setup, find_packages\n\nsetup(\n    name='latent-diffusion',\n    version='0.0.1',\n    description='',\n    packages=find_packages(),\n    install_requires=[\n        'torch',\n        'numpy',\n        'tqdm',\n    ],\n)"
        }
      ]
    },
    {
      "nameWithOwner": "moby/moby",
      "stars": 68993,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.07,
          "content": ".git\nbundles/\ncli/winresources/**/winres.json\ncli/winresources/**/*.syso\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.12,
          "content": "Dockerfile* linguist-language=Dockerfile\nvendor.mod linguist-language=Go-Module\nvendor.sum linguist-language=Go-Checksums\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.45,
          "content": "# If you want to ignore files created by your editor/tools, please consider a\n# [global .gitignore](https://help.github.com/articles/ignoring-files).\n\n*~\n*.bak\n*.orig\n.*.swp\n.DS_Store\nthumbs.db\n\n# local repository customization\n.envrc\n.bashrc\n.editorconfig\n\n# build artifacts\nbundles/\ncli/winresources/*/*.syso\ncli/winresources/*/winres.json\ncontrib/builder/rpm/*/changelog\n\n# ci artifacts\n*.exe\n*.gz\ngo-test-report.json\njunit-report.xml\nprofile.out\ntest.main\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 8.68,
          "content": "linters:\n  enable:\n    - copyloopvar   # Detects places where loop variables are copied.\n    - depguard\n    - dupword       # Detects duplicate words.\n    - goimports\n    - gosec         # Detects security problems.\n    - gosimple\n    - govet\n    - forbidigo\n    - importas\n    - ineffassign\n    - misspell      # Detects commonly misspelled English words in comments.\n    - revive        # Metalinter; drop-in replacement for golint.\n    - staticcheck\n    - typecheck\n    - unconvert     # Detects unnecessary type conversions.\n    - unused\n\n  disable:\n    - errcheck\n\nrun:\n  # prevent golangci-lint from deducting the go version to lint for through go.mod,\n  # which causes it to fallback to go1.17 semantics.\n  go: \"1.23.4\"\n  concurrency: 2\n  # Only supported with go modules enabled (build flag -mod=vendor only valid when using modules)\n  # modules-download-mode: vendor\n\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: io/ioutil\n            desc: The io/ioutil package has been deprecated, see https://go.dev/doc/go1.16#ioutil\n          - pkg: \"github.com/stretchr/testify/assert\"\n            desc: Use \"gotest.tools/v3/assert\" instead\n          - pkg: \"github.com/stretchr/testify/require\"\n            desc: Use \"gotest.tools/v3/assert\" instead\n          - pkg: \"github.com/stretchr/testify/suite\"\n            desc: Do not use\n          - pkg: \"github.com/containerd/containerd/errdefs\"\n            desc: The errdefs package has moved to a separate module, https://github.com/containerd/errdefs\n          - pkg: \"github.com/containerd/containerd/log\"\n            desc: The logs package has moved to a separate module, https://github.com/containerd/log\n          - pkg: \"github.com/containerd/containerd/pkg/userns\"\n            desc: Use github.com/moby/sys/userns instead.\n          - pkg: \"github.com/tonistiigi/fsutil\"\n            desc: The fsutil module does not have a stable API, so we should not have a direct dependency unless necessary.\n\n  dupword:\n    ignore:\n      - \"true\"    # some tests use this as expected output\n      - \"false\"   # some tests use this as expected output\n      - \"root\"    # for tests using \"ls\" output with files owned by \"root:root\"\n\n  forbidigo:\n    forbid:\n      - pkg: ^sync/atomic$\n        p: ^atomic\\.(Add|CompareAndSwap|Load|Store|Swap).\n        msg: Go 1.19 atomic types should be used instead.\n      - pkg: ^regexp$\n        p: ^regexp\\.MustCompile\n        msg: Use internal/lazyregexp.New instead.\n      - pkg: github.com/vishvananda/netlink$\n        p: ^netlink\\.(Handle\\.)?(AddrList|BridgeVlanList|ChainList|ClassList|ConntrackTableList|ConntrackDeleteFilter$|ConntrackDeleteFilters|DevLinkGetDeviceList|DevLinkGetAllPortList|DevlinkGetDeviceParams|FilterList|FouList|GenlFamilyList|GTPPDPList|LinkByName|LinkByAlias|LinkList|LinkSubscribeWithOptions|NeighList$|NeighProxyList|NeighListExecute|NeighSubscribeWithOptions|LinkGetProtinfo|QdiscList|RdmaLinkList|RdmaLinkByName|RdmaLinkDel|RouteList|RouteListFilteredIter|RuleListFiltered$|RouteSubscribeWithOptions|RuleList$|RuleListFiltered|SocketGet|SocketDiagTCPInfo|SocketDiagTCP|SocketDiagUDPInfo|SocketDiagUDP|UnixSocketDiagInfo|UnixSocketDiag|VDPAGetDevConfigList|VDPAGetDevList|VDPAGetMGMTDevList|XfrmPolicyList|XfrmStateList)\n        msg: Use internal nlwrap package for EINTR handling.\n      - pkg: github.com/docker/docker/internal/nlwrap$\n        p: ^nlwrap.Handle.(BridgeVlanList|ChainList|ClassList|ConntrackDeleteFilter$|DevLinkGetDeviceList|DevLinkGetAllPortList|DevlinkGetDeviceParams|FilterList|FouList|GenlFamilyList|GTPPDPList|LinkByAlias|LinkSubscribeWithOptions|NeighList$|NeighProxyList|NeighListExecute|NeighSubscribeWithOptions|LinkGetProtinfo|QdiscList|RdmaLinkList|RdmaLinkByName|RdmaLinkDel|RouteListFilteredIter|RuleListFiltered$|RouteSubscribeWithOptions|RuleList$|RuleListFiltered|SocketGet|SocketDiagTCPInfo|SocketDiagTCP|SocketDiagUDPInfo|SocketDiagUDP|UnixSocketDiagInfo|UnixSocketDiag|VDPAGetDevConfigList|VDPAGetDevList|VDPAGetMGMTDevList)\n        msg: Add a wrapper to nlwrap.Handle for EINTR handling and update the list in .golangci.yml.\n    analyze-types: true\n\n  gosec:\n    excludes:\n      - G104 # G104: Errors unhandled; (TODO: reduce unhandled errors, or explicitly ignore)\n      - G113 # G113: Potential uncontrolled memory consumption in Rat.SetString (CVE-2022-23772); (only affects go < 1.16.14. and go < 1.17.7)\n      - G115 # G115: integer overflow conversion; (TODO: verify these: https://github.com/moby/moby/issues/48358)\n      - G204 # G204: Subprocess launched with variable; too many false positives.\n      - G301 # G301: Expect directory permissions to be 0750 or less (also EXC0009); too restrictive\n      - G302 # G302: Expect file permissions to be 0600 or less (also EXC0009); too restrictive\n      - G304 # G304: Potential file inclusion via variable.\n      - G306 # G306: Expect WriteFile permissions to be 0600 or less (too restrictive; also flags \"0o644\" permissions)\n      - G307 # G307: Deferring unsafe method \"*os.File\" on type \"Close\" (also EXC0008); (TODO: evaluate these and fix where needed: G307: Deferring unsafe method \"*os.File\" on type \"Close\")\n      - G504 # G504: Blocklisted import net/http/cgi: Go versions < 1.6.3 are vulnerable to Httpoxy attack: (CVE-2016-5386); (only affects go < 1.6.3)\n\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment # TODO: evaluate which ones should be updated.\n\n  importas:\n    # Do not allow unaliased imports of aliased packages.\n    no-unaliased: true\n\n    alias:\n      # Enforce alias to prevent it accidentally being used instead of our\n      # own errdefs package (or vice-versa).\n      - pkg: github.com/containerd/errdefs\n        alias: cerrdefs\n      - pkg: github.com/containerd/containerd/images\n        alias: c8dimages\n      - pkg: github.com/opencontainers/image-spec/specs-go/v1\n        alias: ocispec\n\n  revive:\n    rules:\n      # FIXME make sure all packages have a description. Currently, there's many packages without.\n      - name: package-comments\n        disabled: true\n\nissues:\n  # The default exclusion rules are a bit too permissive, so copying the relevant ones below\n  exclude-use-default: false\n\n  exclude-dirs:\n    - docs\n\n  exclude-rules:\n    # We prefer to use an \"exclude-list\" so that new \"default\" exclusions are not\n    # automatically inherited. We can decide whether or not to follow upstream\n    # defaults when updating golang-ci-lint versions.\n    # Unfortunately, this means we have to copy the whole exclusion pattern, as\n    # (unlike the \"include\" option), the \"exclude\" option does not take exclusion\n    # ID's.\n    #\n    # These exclusion patterns are copied from the default excludes at:\n    # https://github.com/golangci/golangci-lint/blob/v1.61.0/pkg/config/issues.go#L11-L104\n    #\n    # The default list of exclusions can be found at:\n    # https://golangci-lint.run/usage/false-positives/#default-exclusions\n\n    # EXC0001\n    - text: \"Error return value of .((os\\\\.)?std(out|err)\\\\..*|.*Close|.*Flush|os\\\\.Remove(All)?|.*print(f|ln)?|os\\\\.(Un)?Setenv). is not checked\"\n      linters:\n        - errcheck\n\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - errcheck\n\n    - text: \"G404: Use of weak random number generator\"\n      path: _test\\.go\n      linters:\n        - gosec\n\n    # Suppress golint complaining about generated types in api/types/\n    - text: \"type name will be used as (container|volume)\\\\.(Container|Volume).* by other packages, and that stutters; consider calling this\"\n      path: \"api/types/(volume|container)/\"\n      linters:\n        - revive\n    # FIXME temporarily suppress these (see https://github.com/gotestyourself/gotest.tools/issues/272)\n    - text: \"SA1019: (assert|cmp|is)\\\\.ErrorType is deprecated\"\n      linters:\n        - staticcheck\n\n    - text: \"ineffectual assignment to ctx\"\n      source: \"ctx[, ].*=.*\\\\(ctx[,)]\"\n      linters:\n        - ineffassign\n\n    - text: \"SA4006: this value of `ctx` is never used\"\n      source: \"ctx[, ].*=.*\\\\(ctx[,)]\"\n      linters:\n        - staticcheck\n\n    - text: '^shadow: declaration of \"(ctx|err|ok)\" shadows declaration'\n      linters:\n        - govet\n    - text: '^shadow: declaration of \"(out)\" shadows declaration'\n      path: _test\\.go\n      linters:\n        - govet\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: _test\\.go\n      linters:\n        - forbidigo\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: \"internal/lazyregexp\"\n      linters:\n        - forbidigo\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: \"libnetwork/cmd/networkdb-test/dbclient\"\n      linters:\n        - forbidigo\n\n  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 39.13,
          "content": "# This file lists the canonical name and email of contributors, and is used to\n# generate AUTHORS (in hack/generate-authors.sh).\n#\n# To find new duplicates, regenerate AUTHORS and scan for name duplicates, or\n# run the following to find email duplicates:\n#   git log --format='%aE - %aN' | sort -uf | awk -v IGNORECASE=1 '$1 in a {print a[$1]; print}; {a[$1]=$0}'\n#\n# For an explanation of this file format, consult gitmailmap(5).\n\nAaron Yoshitake <airandfingers@gmail.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron L. Xu <liker.xu@foxmail.com> <likexu@harmonycloud.cn>\nAaron Lehmann <alehmann@netflix.com>\nAaron Lehmann <alehmann@netflix.com> <aaron.lehmann@docker.com>\nAbhinandan Prativadi <aprativadi@gmail.com>\nAbhinandan Prativadi <aprativadi@gmail.com> <abhi@docker.com>\nAbhinandan Prativadi <aprativadi@gmail.com> abhi <user.email>\nAbhishek Chanda <abhishek.becs@gmail.com>\nAbhishek Chanda <abhishek.becs@gmail.com> <abhishek.chanda@emc.com>\nAda Mancini <ada@docker.com>\nAdam Dobrawy <naczelnik@jawnosc.tk>\nAdam Dobrawy <naczelnik@jawnosc.tk> <ad-m@users.noreply.github.com>\nAdrien Gallouët <adrien@gallouet.fr> <angt@users.noreply.github.com>\nAhmed Kamal <email.ahmedkamal@googlemail.com>\nAhmet Alp Balkan <ahmetb@microsoft.com> <ahmetalpbalkan@gmail.com>\nAJ Bowen <aj@soulshake.net>\nAJ Bowen <aj@soulshake.net> <aj@gandi.net>\nAJ Bowen <aj@soulshake.net> <amy@gandi.net>\nAkihiro Matsushima <amatsusbit@gmail.com> <amatsus@users.noreply.github.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAkshay Moghe <akshay.moghe@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlano Terblanche <alano.terblanche@docker.com> <18033717+Benehiko@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com>\nAlbin Kerouanton <albinker@gmail.com> <557933+akerouanton@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com> <albin@akerouanton.name>\nAleksa Sarai <asarai@suse.de>\nAleksa Sarai <asarai@suse.de> <asarai@suse.com>\nAleksa Sarai <asarai@suse.de> <cyphar@cyphar.com>\nAleksandrs Fadins <aleks@s-ko.net>\nAlessandro Boch <aboch@tetrationanalytics.com>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@docker.com>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@socketplane.io>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@users.noreply.github.com>\nAlex Chan <alex@alexwlchan.net>\nAlex Chan <alex@alexwlchan.net> <alex.chan@metaswitch.com>\nAlex Chen <alexchenunix@gmail.com> <root@localhost.localdomain>\nAlex Ellis <alexellis2@gmail.com>\nAlex Goodman <wagoodman@gmail.com> <wagoodman@users.noreply.github.com>\nAlexander Larsson <alexl@redhat.com> <alexander.larsson@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAlexandre Beslic <alexandre.beslic@gmail.com> <abronan@docker.com>\nAlexandre González <agonzalezro@gmail.com>\nAlexis Ries <ries.alexis@gmail.com>\nAlexis Ries <ries.alexis@gmail.com> <alexis.ries.ext@orange.com>\nAlexis Thomas <fr.alexisthomas@gmail.com>\nAlicia Lauerman <alicia@eta.im> <allydevour@me.com>\nAllen Sun <allensun.shl@alibaba-inc.com> <allen.sun@daocloud.io>\nAllen Sun <allensun.shl@alibaba-inc.com> <shlallen1990@gmail.com>\nAnca Iordache <anca.iordache@docker.com>\nAndrea Denisse Gómez <crypto.andrea@protonmail.ch>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me> andrew <>\nAndrew Kim <taeyeonkim90@gmail.com>\nAndrew Kim <taeyeonkim90@gmail.com> <akim01@fortinet.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@microsoft.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@outlook.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com> <andrey.kolomentsev@gmail.com>\nAndré Martins  <aanm90@gmail.com> <martins@noironetworks.com>\nAndy Rothfusz <github@developersupport.net> <github@metaliveblog.com>\nAndy Smith <github@anarkystic.com>\nAndy Zhang <andy.zhangtao@hotmail.com>\nAndy Zhang <andy.zhangtao@hotmail.com> <ztao@tibco-support.com>\nAnkush Agarwal <ankushagarwal11@gmail.com> <ankushagarwal@users.noreply.github.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <amurdaca@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <me@runcom.ninja>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@linux.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@users.noreply.github.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com> <abahuguna@fiberlink.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com> <anusha@docker.com>\nAnyu Wang <wanganyu@outlook.com>\nArko Dasgupta <arko@tetrate.io>\nArko Dasgupta <arko@tetrate.io> <arko.dasgupta@docker.com>\nArko Dasgupta <arko@tetrate.io> <arkodg@users.noreply.github.com>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Porterie <icecrime@gmail.com> <arnaud.porterie@docker.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com> <elboulangero@gmail.com>\nArthur Gautier <baloo@gandi.net> <superbaloo+registrations.github@superbaloo.net>\nArtur Meyster <arthurfbi@yahoo.com>\nAvi Miller <avi.miller@oracle.com> <avi.miller@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Golub <ben.golub@dotcloud.com>\nBen Toews <mastahyeti@gmail.com> <mastahyeti@users.noreply.github.com>\nBenny Ng <benny.tpng@gmail.com>\nBenoit Chesneau <bchesneau@gmail.com>\nBevisy Zhang <binbin36520@gmail.com>\nBhiraj Butala <abhiraj.butala@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBilal Amarni <bilal.amarni@gmail.com> <bamarni@users.noreply.github.com>\nBill Wang <ozbillwang@gmail.com> <SydOps@users.noreply.github.com>\nBily Zhang <xcoder@tenxcloud.com>\nBin Liu <liubin0329@gmail.com>\nBin Liu <liubin0329@gmail.com> <liubin0329@users.noreply.github.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBjorn Neergaard <bjorn@neersighted.com>\nBjorn Neergaard <bjorn@neersighted.com> <bjorn.neergaard@docker.com>\nBjorn Neergaard <bjorn@neersighted.com> <bneergaard@mirantis.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nBojun Zhu <bojun.zhu@foxmail.com>\nBoqin Qin <bobbqqin@gmail.com>\nBoshi Lian <farmer1992@gmail.com>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.co>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.org>\nBrent Salisbury <brent.salisbury@docker.com> <brent@docker.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.home>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.local>\nBrian Goff <cpuguy83@gmail.com> <brian.goff@microsoft.com>\nBrian Goff <cpuguy83@gmail.com> <cpuguy@hey.com>\nCalvin Liu <flycalvin@qq.com>\nCameron Sparr <gh@sparr.email>\nCarlos de Paula <me@carlosedp.com>\nChander Govindarajan <chandergovind@gmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com> <chaowang@localhost.localdomain>\nCharles Hooper <charles.hooper@dotcloud.com> <chooper@plumata.com>\nChen Chao <cc272309126@gmail.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nChen Qiu <cheney-90@hotmail.com> <21321229@zju.edu.cn>\nChengfei Shang <cfshang@alauda.io>\nChentianze <cmoman@126.com>\nChris Dias <cdias@microsoft.com>\nChris McKinnel <chris.mckinnel@tangentlabs.co.uk>\nChris Price <cprice@mirantis.com>\nChris Price <cprice@mirantis.com> <chris.price@docker.com>\nChris Telfer <ctelfer@docker.com>\nChris Telfer <ctelfer@docker.com> <ctelfer@users.noreply.github.com>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Latham <sudosurootdev@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com> <47751006+krissetto@users.noreply.github.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com> <chenchun.feed@gmail.com>\nCorbin Coleman <corbin.coleman@docker.com>\nCristian Ariza <dev@cristianrz.com>\nCristian Staretu <cristian.staretu@gmail.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejack@users.noreply.github.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejacksons@gmail.com>\ncui fliter <imcusg@gmail.com>\ncui fliter <imcusg@gmail.com> cuishuang <imcusg@gmail.com>\nCUI Wei <ghostplant@qq.com> cuiwei13 <cuiwei13@pku.edu.cn>\nDaehyeok Mun <daehyeok@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeok-ui-MacBook-Air.local>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeokui-MacBook-Air.local>\nDan Feldman <danf@jfrog.com>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Dao <dqminh@cloudflare.com> <dqminh89@gmail.com>\nDaniel Garcia <daniel@danielgarcia.info>\nDaniel Gasienica <daniel@gasienica.ch> <dgasienica@zynga.com>\nDaniel Goosen <daniel.goosen@surveysampling.com> <djgoosen@users.noreply.github.com>\nDaniel Grunwell <mwgrunny@gmail.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com> <dhiltgen@users.noreply.github.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <daniel@dotcloud.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <mzdaniel@glidelink.net>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <root@vagrant-ubuntu-12.10.vagrantup.com>\nDaniel Nephin <dnephin@docker.com> <dnephin@gmail.com>\nDaniel Norberg <dano@spotify.com> <daniel.norberg@gmail.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDaniel Zhang <jmzwcn@gmail.com>\nDanny Yates <danny@codeaholics.org> <Danny.Yates@mailonline.co.uk>\nDarren Shepherd <darren.s.shepherd@gmail.com> <darren@rancher.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com> <Dave.Henderson@ca.ibm.com>\nDave Tucker <dt@docker.com> <dave@dtucker.co.uk>\nDavid Dooling <dooling@gmail.com>\nDavid Dooling <dooling@gmail.com> <david.dooling@docker.com>\nDavid M. Karr <davidmichaelkarr@gmail.com>\nDavid Sheets <dsheets@docker.com> <sheets@alum.mit.edu>\nDavid Sissitka <me@dsissitka.com>\nDavid Williamson <david.williamson@docker.com> <davidwilliamson@users.noreply.github.com>\nDerek Ch <denc716@gmail.com>\nDerek McGowan <derek@mcg.dev>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nDeshi Xiao <dxiao@redhat.com> <dsxiao@dataman-inc.com>\nDeshi Xiao <dxiao@redhat.com> <xiaods@gmail.com>\nDhilip Kumars <dhilip.kumar.s@huawei.com>\nDiego Siqueira <dieg0@live.com>\nDiogo Monica <diogo@docker.com> <diogo.monica@gmail.com>\nDmitry Sharshakov <d3dx12.xx@gmail.com>\nDmitry Sharshakov <d3dx12.xx@gmail.com> <sh7dm@outlook.com>\nDmytro Iakovliev <dmytro.iakovliev@zodiacsystems.com>\nDominic Yin <yindongchao@inspur.com>\nDominik Honnef <dominik@honnef.co> <dominikh@fork-bomb.org>\nDoug Davis <dug@us.ibm.com> <duglin@users.noreply.github.com>\nDoug Tangren <d.tangren@gmail.com>\nDrew Erny <derny@mirantis.com>\nDrew Erny <derny@mirantis.com> <drew.erny@docker.com>\nElan Ruusamäe <glen@pld-linux.org>\nElan Ruusamäe <glen@pld-linux.org> <glen@delfi.ee>\nElango Sivanandam <elango.siva@docker.com>\nElango Sivanandam <elango.siva@docker.com> <elango@docker.com>\nEli Uriegas <seemethere101@gmail.com>\nEli Uriegas <seemethere101@gmail.com> <eli.uriegas@docker.com>\nEric G. Noriega <enoriega@vizuri.com> <egnoriega@users.noreply.github.com>\nEric Hanchrow <ehanchrow@ine.com> <eric.hanchrow@gmail.com>\nEric Rosenberg <ehaydenr@gmail.com> <ehaydenr@users.noreply.github.com>\nErica Windisch <erica@windisch.us> <eric@windisch.us>\nErica Windisch <erica@windisch.us> <ewindisch@docker.com>\nErik Hollensbe <github@hollensbe.org> <erik+github@hollensbe.org>\nErwin van der Koogh <info@erronis.nl>\nEthan Bell <ebgamer29@gmail.com>\nEuan Kemp <euan.kemp@coreos.com> <euank@amazon.com>\nEugen Krizo <eugen.krizo@gmail.com>\nEvan Hazlett <ejhazlett@gmail.com> <ehazlett@users.noreply.github.com>\nEvelyn Xu <evelynhsu21@gmail.com>\nEvgeny Shmarnev <shmarnev@gmail.com>\nFaiz Khan <faizkhan00@gmail.com>\nFangming Fang <fangming.fang@arm.com>\nFelix Hupfeld <felix@quobyte.com> <quofelix@users.noreply.github.com>\nFelix Ruess <felix.ruess@gmail.com> <felix.ruess@roboception.de>\nFeng Yan <fy2462@gmail.com>\nFengtu Wang <wangfengtu@huawei.com> <wangfengtu@huawei.com>\nFilipe Pina <hzlu1ot0@duck.com>\nFilipe Pina <hzlu1ot0@duck.com> <636320+fopina@users.noreply.github.com>\nFrancisco Carriedo <fcarriedo@gmail.com>\nFrank Rosquin <frank.rosquin+github@gmail.com> <frank.rosquin@gmail.com>\nFrank Yang <yyb196@gmail.com>\nFrederick F. Kautz IV <fkautz@redhat.com> <fkautz@alumni.cmu.edu>\nFu JinLin <withlin@yeah.net>\nGabriel Goller <gabrielgoller123@gmail.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGaetan de Villele <gdevillele@gmail.com>\nGang Qiao <qiaohai8866@gmail.com> <1373319223@qq.com>\nGeon Kim <geon0250@gmail.com>\nGeorge Kontridze <george@bugsnag.com>\nGerwim Feiken <g.feiken@tfe.nl> <gerwim@gmail.com>\nGiampaolo Mancini <giampaolo@trampolineup.com>\nGiovan Isa Musthofa <giovanism@outlook.co.id>\nGopikannan Venugopalsamy <gopikannan.venugopalsamy@gmail.com>\nGou Rao <gou@portworx.com> <gourao@users.noreply.github.com>\nGrant Millar <rid@cylo.io>\nGrant Millar <rid@cylo.io> <grant@cylo.io>\nGrant Millar <rid@cylo.io> <grant@seednet.eu>\nGreg Stephens <greg@udon.org>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <charmes.guillaume@gmail.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume.charmes@dotcloud.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@charmes.net>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@docker.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@dotcloud.com>\nGunadhya S. <6939749+gunadhya@users.noreply.github.com>\nGuoqiang QI <guoqiang.qi1@gmail.com>\nGuri <odg0318@gmail.com>\nGurjeet Singh <gurjeet@singh.im> <singh.gurjeet@gmail.com>\nGustav Sinder <gustav.sinder@gmail.com>\nGünther Jungbluth <gunther@gameslabs.net>\nHakan Özler <hakan.ozler@kodcu.com>\nHao Shu Wei <haoshuwei24@gmail.com>\nHao Shu Wei <haoshuwei24@gmail.com> <haoshuwei1989@163.com>\nHao Shu Wei <haoshuwei24@gmail.com> <haosw@cn.ibm.com>\nHarald Albers <github@albersweb.de> <albers@users.noreply.github.com>\nHarald Niesche <harald@niesche.de>\nHarold Cooper <hrldcpr@gmail.com>\nHarry Zhang <harryz@hyper.sh>\nHarry Zhang <harryz@hyper.sh> <harryzhang@zju.edu.cn>\nHarry Zhang <harryz@hyper.sh> <resouer@163.com>\nHarry Zhang <harryz@hyper.sh> <resouer@gmail.com>\nHarshal Patil <harshal.patil@in.ibm.com> <harche@users.noreply.github.com>\nHe Simei <hesimei@zju.edu.cn>\nHelen Xie <chenjg@harmonycloud.cn>\nHiroyuki Sasagawa <hs19870702@gmail.com>\nHollie Teal <hollie@docker.com>\nHollie Teal <hollie@docker.com> <hollie.teal@docker.com>\nHollie Teal <hollie@docker.com> <hollietealok@users.noreply.github.com>\nhsinko <21551195@zju.edu.cn> <hsinko@users.noreply.github.com>\nHu Keping <hukeping@huawei.com>\nHuajin Tong <fliterdashen@gmail.com>\nHui Kang <hkang.sunysb@gmail.com>\nHui Kang <hkang.sunysb@gmail.com> <kangh@us.ibm.com>\nHuu Nguyen <huu@prismskylabs.com> <whoshuu@gmail.com>\nHyeongkyu Lee <hyeongkyu.lee@navercorp.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com> <1187766782@qq.com>\nIan Campbell <ian.campbell@docker.com>\nIan Campbell <ian.campbell@docker.com> <ijc@docker.com>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nIskander Sharipov <quasilyte@gmail.com>\nIvan Babrou <ibobrik@gmail.com>\nIvan Markin <sw@nogoegst.net> <twim@riseup.net>\nJack Laxson <jackjrabbit@gmail.com>\nJacob Atzen <jacob@jacobatzen.dk> <jatzen@gmail.com>\nJacob Tomlinson <jacob@tom.linson.uk> <jacobtomlinson@users.noreply.github.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Moshenko <jake@devtable.com>\nJakub Drahos <jdrahos@pulsepoint.com>\nJakub Drahos <jdrahos@pulsepoint.com> <jack.drahos@gmail.com>\nJames Nesbitt <jnesbitt@mirantis.com>\nJames Nesbitt <jnesbitt@mirantis.com> <james.nesbitt@wunderkraut.com>\nJamie Hannaford <jamie@limetree.org> <jamie.hannaford@rackspace.com>\nJan Götte <jaseg@jaseg.net>\nJana Radhakrishnan <mrjana@docker.com>\nJana Radhakrishnan <mrjana@docker.com> <mrjana@socketplane.io>\nJavier Bassi <javierbassi@gmail.com>\nJavier Bassi <javierbassi@gmail.com> <CrimsonGlory@users.noreply.github.com>\nJay Lim <jay@imjching.com>\nJay Lim <jay@imjching.com> <imjching@hotmail.com>\nJean Rouge <rougej+github@gmail.com> <jer329@cornell.edu>\nJean-Baptiste Barth <jeanbaptiste.barth@gmail.com>\nJean-Baptiste Dalido <jeanbaptiste@appgratis.com>\nJean-Tiare Le Bigot <jt@yadutaf.fr> <admin@jtlebi.fr>\nJeff Anderson <jeff@docker.com> <jefferya@programmerq.net>\nJeff Nickoloff <jeff.nickoloff@gmail.com> <jeff@allingeek.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJessica Frazelle <jess@oxide.computer>\nJessica Frazelle <jess@oxide.computer> <acidburn@docker.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@google.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@microsoft.com>\nJessica Frazelle <jess@oxide.computer> <jess@docker.com>\nJessica Frazelle <jess@oxide.computer> <jess@mesosphere.com>\nJessica Frazelle <jess@oxide.computer> <jessfraz@google.com>\nJessica Frazelle <jess@oxide.computer> <jfrazelle@users.noreply.github.com>\nJessica Frazelle <jess@oxide.computer> <me@jessfraz.com>\nJessica Frazelle <jess@oxide.computer> <princess@docker.com>\nJian Liao <jliao@alauda.io>\nJiang Jinyang <jjyruby@gmail.com>\nJiang Jinyang <jjyruby@gmail.com> <jiangjinyang@outlook.com>\nJim Galasyn <jim.galasyn@docker.com>\nJiuyue Ma <majiuyue@huawei.com>\nJoey Geiger <jgeiger@gmail.com>\nJoffrey F <joffrey@docker.com>\nJoffrey F <joffrey@docker.com> <f.joffrey@gmail.com>\nJoffrey F <joffrey@docker.com> <joffrey@dotcloud.com>\nJohan Euphrosine <proppy@google.com> <proppy@aminche.com>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Howard <github@lowenna.com> <10522484+lowenna@users.noreply.github.com>\nJohn Howard <github@lowenna.com> <jhoward@microsoft.com>\nJohn Howard <github@lowenna.com> <jhoward@ntdev.microsoft.com>\nJohn Howard <github@lowenna.com> <jhowardmsft@users.noreply.github.com>\nJohn Howard <github@lowenna.com> <john.howard@microsoft.com>\nJohn Howard <github@lowenna.com> <john@lowenna.com>\nJohn Stephens <johnstep@docker.com> <johnstep@users.noreply.github.com>\nJon Surrell <jon.surrell@gmail.com> <jon.surrell@automattic.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com> <jonathan.sternberg@docker.com>\nJonathan Choy <jonathan.j.choy@gmail.com>\nJonathan Choy <jonathan.j.choy@gmail.com> <oni@tetsujinlabs.com>\nJordan Arentsen <blissdev@gmail.com>\nJordan Jennings <jjn2009@gmail.com> <jjn2009@users.noreply.github.com>\nJorit Kleine-Möllhoff <joppich@bricknet.de> <joppich@users.noreply.github.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <jose@seatgeek.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <josegonzalez@users.noreply.github.com>\nJosh Bonczkowski <josh.bonczkowski@gmail.com>\nJosh Eveleth <joshe@opendns.com> <jeveleth@users.noreply.github.com>\nJosh Hawn <josh.hawn@docker.com> <jlhawn@berkeley.edu>\nJosh Horwitz <horwitz@addthis.com> <horwitzja@gmail.com>\nJosh Soref <jsoref@gmail.com> <jsoref@users.noreply.github.com>\nJosh Wilson <josh.wilson@fivestars.com> <jcwilson@users.noreply.github.com>\nJoyce Jang <mail@joycejang.com>\nJulien Bordellier <julienbordellier@gmail.com> <git@julienbordellier.com>\nJulien Bordellier <julienbordellier@gmail.com> <me@julienbordellier.com>\nJun Du <dujun5@huawei.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Cormack <justin.cormack@docker.com> <justin.cormack@unikernel.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com> <jkeller@vb-jkeller-mbp.local>\nJustin Simonelis <justin.p.simonelis@gmail.com> <justin.simonelis@PTS-JSIMON2.toronto.exclamation.com>\nJustin Terry <juterry@microsoft.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@dotcloud.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@gmail.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jp@enix.org>\nK. Heller <pestophagous@gmail.com> <pestophagous@users.noreply.github.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com> <wkqwu@cn.ibm.com>\nKamil Domański <kamil@domanski.co>\nKamjar Gerami <kami.gerami@gmail.com>\nKarthik Nayak <karthik.188@gmail.com>\nKarthik Nayak <karthik.188@gmail.com> <Karthik.188@gmail.com>\nKen Cochrane <kencochrane@gmail.com> <KenCochrane@gmail.com>\nKen Herner <kherner@progress.com> <chosenken@gmail.com>\nKen Reese <krrgithub@gmail.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Alvarez <github@crazymax.dev> <1951866+crazy-max@users.noreply.github.com>\nKevin Alvarez <github@crazymax.dev> <crazy-max@users.noreply.github.com>\nKevin Feyrer <kevin.feyrer@btinternet.com> <kevinfeyrer@users.noreply.github.com>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com> <kir@openvz.org>\nKir Kolyshkin <kolyshkin@gmail.com> <kolyshkin@users.noreply.github.com>\nKonrad Kleine <konrad.wilhelm.kleine@gmail.com> <kwk@users.noreply.github.com>\nKonstantin Gribov <grossws@gmail.com>\nKonstantin Pelykh <kpelykh@zettaset.com>\nKotaro Yoshimatsu <kotaro.yoshimatsu@gmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp> <btkushuwahak@KUNAL-PC.swh.swh.nttdata.co.jp>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp> <kunal.kushwaha@gmail.com>\nKyle Squizzato <ksquizz@gmail.com>\nKyle Squizzato <ksquizz@gmail.com> <kyle.squizzato@docker.com>\nLajos Papp <lajos.papp@sequenceiq.com> <lalyos@yahoo.com>\nLei Gong <lgong@alauda.io>\nLei Jitang <leijitang@huawei.com>\nLei Jitang <leijitang@huawei.com> <leijitang@gmail.com>\nLei Jitang <leijitang@huawei.com> <leijitang@outlook.com>\nLeiiwang <u2takey@gmail.com>\nLiang Mingqiang <mqliang.zju@gmail.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nLiao Qingwei <liaoqingwei@huawei.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLinus Heckemann <lheckemann@twig-world.com> <anonymouse2048@gmail.com>\nLokesh Mandvekar <lsm5@fedoraproject.org> <lsm5@redhat.com>\nLorenzo Fontana <fontanalorenz@gmail.com> <fontanalorenzo@me.com>\nLorenzo Fontana <fontanalorenz@gmail.com> <lo@linux.com>\nLouis Opter <kalessin@kalessin.fr>\nLouis Opter <kalessin@kalessin.fr> <louis@dotcloud.com>\nLuca Favatella <luca.favatella@erlang-solutions.com> <lucafavatella@users.noreply.github.com>\nLuke Marsden <me@lukemarsden.net> <luke@digital-crocus.com>\nLyn <energylyn@zju.edu.cn>\nLynda O'Leary <lyndaoleary29@gmail.com>\nLynda O'Leary <lyndaoleary29@gmail.com> <lyndaoleary@hotmail.com>\nMa Müller <mueller-ma@users.noreply.github.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com> <madhanm@corp.microsoft.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com> <madhanm@microsoft.com>\nMadhu Venugopal <mavenugo@gmail.com> <madhu@docker.com>\nMadhu Venugopal <mavenugo@gmail.com> <madhu@socketplane.io>\nMageee <fangpuyi@foxmail.com> <21521230.zju.edu.cn>\nMansi Nahar <mmn4185@rit.edu> <mansi.nahar@macbookpro-mansinahar.local>\nMansi Nahar <mmn4185@rit.edu> <mansinahar@users.noreply.github.com>\nMarc Abramowitz <marc@marc-abramowitz.com> <msabramo@gmail.com>\nMarcelo Horacio Fortino <info@fortinux.com> <fortinux@users.noreply.github.com>\nMarcus Linke <marcus.linke@gmx.de>\nMarianna Tessel <mtesselh@gmail.com>\nMark Oates <fl0yd@me.com>\nMarkan Patel <mpatel678@gmail.com>\nMarkus Kortlang <hyp3rdino@googlemail.com> <markus.kortlang@lhsystems.com>\nMartin Redmond <redmond.martin@gmail.com> <martin@tinychat.com>\nMartin Redmond <redmond.martin@gmail.com> <xgithub@redmond5.com>\nMaru Newby <mnewby@thesprawl.net>\nMary Anthony <mary.anthony@docker.com> <mary@docker.com>\nMary Anthony <mary.anthony@docker.com> <moxieandmore@gmail.com>\nMary Anthony <mary.anthony@docker.com> moxiegirl <mary@docker.com>\nMasato Ohba <over.rye@gmail.com>\nMathieu Paturel <mathieu.paturel@gmail.com>\nMatt Bentley <matt.bentley@docker.com> <mbentley@mbentley.net>\nMatt Schurenko <matt.schurenko@gmail.com>\nMatt Williams <mattyw@me.com>\nMatt Williams <mattyw@me.com> <gh@mattyw.net>\nMatthew Heon <mheon@redhat.com> <mheon@mheonlaptop.redhat.com>\nMatthew Mosesohn <raytrac3r@gmail.com>\nMatthew Mueller <mattmuelle@gmail.com>\nMatthias Kühnle <git.nivoc@neverbox.com> <kuehnle@online.de>\nMauricio Garavaglia <mauricio@medallia.com> <mauriciogaravaglia@gmail.com>\nMaxwell <csuhp007@gmail.com>\nMaxwell <csuhp007@gmail.com> <csuhqg@foxmail.com>\nMenghui Chen <menghui.chen@alibaba-inc.com>\nMichael Beskin <mrbeskin@gmail.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <crosby.michael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@crosbymichael.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@docker.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@thepasture.io>\nMichael Hudson-Doyle <michael.hudson@canonical.com> <michael.hudson@linaro.org>\nMichael Huettermann <michael@huettermann.net>\nMichael Käufl <docker@c.michael-kaeufl.de> <michael-k@users.noreply.github.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com> <code@getbraintree.com>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichael Stapelberg <michael+gh@stapelberg.de>\nMichael Stapelberg <michael+gh@stapelberg.de> <stapelberg@google.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com> <kostrzewa.michal@o2.pl>\nMichal Minář <miminar@redhat.com>\nMichał Gryko <github@odkurzacz.org>\nMichiel de Jong <michiel@unhosted.org>\nMickaël Fortunato <morsi.morsicus@gmail.com>\nMiguel Angel Alvarez Cabrerizo <doncicuto@gmail.com> <30386061+doncicuto@users.noreply.github.com>\nMiguel Angel Fernández <elmendalerenda@gmail.com>\nMihai Borobocea <MihaiBorob@gmail.com> <MihaiBorobocea@gmail.com>\nMikael Davranche <mikael.davranche@corp.ovh.com>\nMikael Davranche <mikael.davranche@corp.ovh.com> <mikael.davranche@corp.ovh.net>\nMike Casas <mkcsas0@gmail.com> <mikecasas@users.noreply.github.com>\nMike Goelzer <mike.goelzer@docker.com> <mgoelzer@docker.com>\nMilas Bowman <devnull@milas.dev>\nMilas Bowman <devnull@milas.dev> <milas.bowman@docker.com>\nMilas Bowman <devnull@milas.dev> <milasb@gmail.com>\nMilind Chawre <milindchawre@gmail.com>\nMisty Stanley-Jones <misty@docker.com> <misty@apache.org>\nMohammad Banikazemi <MBanikazemi@gmail.com>\nMohammad Banikazemi <MBanikazemi@gmail.com> <mb@us.ibm.com>\nMohd Sadiq <mohdsadiq058@gmail.com> <42430865+msadiq058@users.noreply.github.com>\nMohd Sadiq <mohdsadiq058@gmail.com> <mohdsadiq058@gmail.com>\nMohit Soni <mosoni@ebay.com> <mohitsoni1989@gmail.com>\nMoorthy RS <rsmoorthy@gmail.com> <rsmoorthy@users.noreply.github.com>\nMoysés Borges <moysesb@gmail.com>\nMoysés Borges <moysesb@gmail.com> <moyses.furtado@wplex.com.br>\nmrfly <mr.wrfly@gmail.com> <wrfly@users.noreply.github.com>\nNace Oroz <orkica@gmail.com>\nNatasha Jarus <linuxmercedes@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathan.leclaire@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathanleclaire@gmail.com>\nNeil Horman <nhorman@tuxdriver.com> <nhorman@hmswarspite.think-freely.org>\nNick Russo <nicholasjamesrusso@gmail.com> <nicholasrusso@icloud.com>\nNicolas Borboën <ponsfrilus@gmail.com> <ponsfrilus@users.noreply.github.com>\nNigel Poulton <nigelpoulton@hotmail.com>\nNik Nyby <nikolas@gnu.org> <nnyby@columbia.edu>\nNolan Darilek <nolan@thewordnerd.info>\nO.S. Tezer <ostezer@gmail.com>\nO.S. Tezer <ostezer@gmail.com> <ostezer@users.noreply.github.com>\nOh Jinkyun <tintypemolly@gmail.com> <tintypemolly@Ohui-MacBook-Pro.local>\nOliver Reason <oli@overrateddev.co>\nOlli Janatuinen <olli.janatuinen@gmail.com>\nOlli Janatuinen <olli.janatuinen@gmail.com> <olljanat@users.noreply.github.com>\nOnur Filiz <onur.filiz@microsoft.com>\nOnur Filiz <onur.filiz@microsoft.com> <ofiliz@users.noreply.github.com>\nOuyang Liduo <oyld0210@163.com>\nPatrick St. laurent <patrick@saint-laurent.us>\nPatrick Stapleton <github@gdi2290.com>\nPaul Liljenberg <liljenberg.paul@gmail.com> <letters@paulnotcom.se>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com> <ptikhomirov@parallels.com>\nPawel Konczalski <mail@konczalski.de>\nPeter Choi <phkchoi89@gmail.com> <reikani@Peters-MacBook-Pro.local>\nPeter Dave Hello <hsu@peterdavehello.org> <PeterDaveHello@users.noreply.github.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Nagy <xificurC@gmail.com> <pnagy@gratex.com>\nPeter Waller <p@pwaller.net> <peter@scraperwiki.com>\nPhil Estes <estesp@gmail.com>\nPhil Estes <estesp@gmail.com> <estesp@amazon.com>\nPhil Estes <estesp@gmail.com> <estesp@linux.vnet.ibm.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilipp Gillé <philipp.gille@gmail.com> <philippgille@users.noreply.github.com>\nPrasanna Gautam <prasannagautam@gmail.com>\nPuneet Pruthi <puneet.pruthi@oracle.com>\nPuneet Pruthi <puneet.pruthi@oracle.com> <puneetpruthi@gmail.com>\nQiang Huang <h.huangqiang@huawei.com>\nQiang Huang <h.huangqiang@huawei.com> <qhuang@10.0.2.15>\nQin TianHuan <tianhuan@bingotree.cn>\nRay Tsang <rayt@google.com> <saturnism@users.noreply.github.com>\nRenaud Gaubert <rgaubert@nvidia.com> <renaud.gaubert@gmail.com>\nRichard Scothern <richard.scothern@gmail.com>\nRob Murray <rob.murray@docker.com>\nRob Murray <rob.murray@docker.com> <148866618+robmry@users.noreply.github.com>\nRobert Terhaar <rterhaar@atlanticdynamic.com> <robbyt@users.noreply.github.com>\nRoberto G. Hashioka <roberto.hashioka@docker.com> <roberto_hashioka@hotmail.com>\nRoberto Muñoz Fernández <robertomf@gmail.com> <roberto.munoz.fernandez.contractor@bbva.com>\nRobin Thoni <robin@rthoni.com>\nRoman Dudin <katrmr@gmail.com> <decadent@users.noreply.github.com>\nRong Zhang <rongzhang@alauda.io>\nRongxiang Song <tinysong1226@gmail.com>\nRony Weng <ronyweng@synology.com>\nRoss Boucher <rboucher@gmail.com>\nRui Cao <ruicao@alauda.io>\nRui JingAn <quiterace@gmail.com>\nRunshen Zhu <runshen.zhu@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nRyoga Saito <contact@proelbtn.com>\nRyoga Saito <contact@proelbtn.com> <proelbtn@users.noreply.github.com>\nSainath Grandhi <sainath.grandhi@intel.com>\nSainath Grandhi <sainath.grandhi@intel.com> <saiallforums@gmail.com>\nSakeven Jiang <jc5930@sina.cn>\nSamuel Karp <me@samuelkarp.com> <skarp@amazon.com>\nSandeep Bansal <sabansal@microsoft.com>\nSandeep Bansal <sabansal@microsoft.com> <msabansal@microsoft.com>\nSanthosh Manohar <santhosh@docker.com>\nSargun Dhillon <sargun@netflix.com> <sargun@sargun.me>\nSatoshi Tagomori <tagomoris@gmail.com>\nSean Lee <seanlee@tw.ibm.com> <scaleoutsean@users.noreply.github.com>\nSebastiaan van Stijn <github@gone.nl>\nSebastiaan van Stijn <github@gone.nl> <moby@example.com>\nSebastiaan van Stijn <github@gone.nl> <sebastiaan@ws-key-sebas3.dpi1.dpi>\nSebastiaan van Stijn <github@gone.nl> <thaJeztah@users.noreply.github.com>\nSebastian Thomschke <sebthom@users.noreply.github.com>\nSeongyeol Lim <seongyeol37@gmail.com>\nSerhii Nakon <serhii.n@thescimus.com>\nShaun Kaasten <shaunk@gmail.com>\nShawn Landden <shawn@churchofgit.com> <shawnlandden@gmail.com>\nShengbo Song <thomassong@tencent.com>\nShengbo Song <thomassong@tencent.com> <mymneo@163.com>\nShih-Yuan Lee <fourdollars@gmail.com>\nShishir Mahajan <shishir.mahajan@redhat.com> <smahajan@redhat.com>\nShu-Wai Chow <shu-wai.chow@seattlechildrens.org>\nShukui Yang <yangshukui@huawei.com>\nSidhartha Mani <sidharthamn@gmail.com>\nSjoerd Langkemper <sjoerd-github@linuxonly.nl> <sjoerd@byte.nl>\nSmark Meng <smark@freecoop.net>\nSmark Meng <smark@freecoop.net> <smarkm@users.noreply.github.com>\nSolomon Hykes <solomon@docker.com> <s@docker.com>\nSolomon Hykes <solomon@docker.com> <solomon.hykes@dotcloud.com>\nSolomon Hykes <solomon@docker.com> <solomon@dotcloud.com>\nSoshi Katsuta <soshi.katsuta@gmail.com>\nSoshi Katsuta <soshi.katsuta@gmail.com> <katsuta_soshi@cyberagent.co.jp>\nSridhar Ratnakumar <sridharr@activestate.com>\nSridhar Ratnakumar <sridharr@activestate.com> <github@srid.name>\nSrini Brahmaroutu <srbrahma@us.ibm.com> <sbrahma@us.ibm.com>\nSrinivasan Srivatsan <srinivasan.srivatsan@hpe.com> <srinsriv@users.noreply.github.com>\nStefan Berger <stefanb@linux.vnet.ibm.com>\nStefan Berger <stefanb@linux.vnet.ibm.com> <stefanb@us.ibm.com>\nStefan J. Wernli <swernli@microsoft.com> <swernli@ntdev.microsoft.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Scherer <stefan.scherer@docker.com> <scherer_stefan@icloud.com>\nStephan Spindler <shutefan@gmail.com> <shutefan@users.noreply.github.com>\nStephen Day <stevvooe@gmail.com>\nStephen Day <stevvooe@gmail.com> <stephen.day@docker.com>\nStephen Day <stevvooe@gmail.com> <stevvooe@users.noreply.github.com>\nSteve Desmond <steve@vtsv.ca> <stevedesmond-ca@users.noreply.github.com>\nSun Gengze <690388648@qq.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSun Jianbo <wonderflow.sun@gmail.com> <wonderflow@zju.edu.cn>\nSven Dowideit <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <sven@t440s.home.gateway>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@docker.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@fosiki.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@users.noreply.github.com>\nSven Dowideit <SvenDowideit@home.org.au> <¨SvenDowideit@home.org.au¨>\nSylvain Baubeau <lebauce@gmail.com>\nSylvain Baubeau <lebauce@gmail.com> <sbaubeau@redhat.com>\nSylvain Bellemare <sylvain@ascribe.io>\nSylvain Bellemare <sylvain@ascribe.io> <sylvain.bellemare@ezeep.com>\nTakuto Sato <tockn.jp@gmail.com>\nTangi Colin <tangicolin@gmail.com>\nTejesh Mehta <tejesh.mehta@gmail.com> <tj@init.me>\nTerry Chu <zue.hterry@gmail.com>\nTerry Chu <zue.hterry@gmail.com> <jubosh.tw@gmail.com>\nThatcher Peskens <thatcher@docker.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@dotcloud.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@gmx.net>\nThiago Alves Silva <thiago.alves@aurea.com>\nThiago Alves Silva <thiago.alves@aurea.com> <thiagoalves@users.noreply.github.com>\nThomas Gazagnaire <thomas@gazagnaire.org> <thomas@gazagnaire.com>\nThomas Ledos <thomas.ledos92@gmail.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Léveil <thomasleveil@gmail.com> <thomasleveil@users.noreply.github.com>\nTibor Vass <teabee89@gmail.com> <tibor@docker.com>\nTibor Vass <teabee89@gmail.com> <tiborvass@users.noreply.github.com>\nTill Claassen <pixelistik@users.noreply.github.com>\nTim Bart <tim@fewagainstmany.com>\nTim Bosse <taim@bosboot.org> <maztaim@users.noreply.github.com>\nTim Potter <tpot@hpe.com>\nTim Potter <tpot@hpe.com> <tpot@Tims-MacBook-Pro.local>\nTim Ruffles <oi@truffles.me.uk> <timruffles@googlemail.com>\nTim Terhorst <mynamewastaken+git@gmail.com>\nTim Wagner <tim.wagner@freenet.ag>\nTim Wagner <tim.wagner@freenet.ag> <33624860+herrwagner@users.noreply.github.com>\nTim Zju <21651152@zju.edu.cn>\nTimothy Hobbs <timothyhobbs@seznam.cz>\nToli Kuznets <toli@docker.com>\nTom Barlow <tomwbarlow@gmail.com>\nTom Denham <tom@tomdee.co.uk>\nTom Denham <tom@tomdee.co.uk> <tom.denham@metaswitch.com>\nTom Sweeney <tsweeney@redhat.com>\nTom Wilkie <tom.wilkie@gmail.com>\nTom Wilkie <tom.wilkie@gmail.com> <tom@weave.works>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrace Andreason <tandreason@gmail.com>\nTrapier Marshall <tmarshall@mirantis.com>\nTrapier Marshall <tmarshall@mirantis.com> <trapier.marshall@docker.com>\nTrishna Guha <trishnaguha17@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTristan Carel <tristan@cogniteev.com> <tristan.carel@gmail.com>\nTyler Brown <tylers.pile@gmail.com>\nUmesh Yadav <umesh4257@gmail.com>\nUmesh Yadav <umesh4257@gmail.com> <dungeonmaster18@users.noreply.github.com>\nVictor Lyuboslavsky <victor@victoreda.com>\nVictor Vieux <victor.vieux@docker.com> <dev@vvieux.com>\nVictor Vieux <victor.vieux@docker.com> <victor.vieux@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victor@docker.com>\nVictor Vieux <victor.vieux@docker.com> <victor@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victorvieux@gmail.com>\nVictor Vieux <victor.vieux@docker.com> <vieux@docker.com>\nVikas Choudhary <choudharyvikas16@gmail.com>\nVikram bir Singh <vsingh@mirantis.com>\nVikram bir Singh <vsingh@mirantis.com> <vikrambir.singh@docker.com>\nViktor Vojnovski <viktor.vojnovski@amadeus.com> <vojnovski@gmail.com>\nVincent Batts <vbatts@redhat.com> <vbatts@hashbangbash.com>\nVincent Bernat <vincent@bernat.ch>\nVincent Bernat <vincent@bernat.ch> <bernat@luffy.cx>\nVincent Bernat <vincent@bernat.ch> <Vincent.Bernat@exoscale.ch>\nVincent Bernat <vincent@bernat.ch> <vincent@bernat.im>\nVincent Boulineau <vincent.boulineau@datadoghq.com>\nVincent Demeester <vincent.demeester@docker.com> <vincent+github@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@sbr.pm>\nVishnu Kannan <vishnuk@google.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com> <tmp6154@yandex.ru>\nVladimir Rutsky <altsysrq@gmail.com> <iamironbob@gmail.com>\nVladislav Kolesnikov <vkolesnikov@beget.ru>\nVladislav Kolesnikov <vkolesnikov@beget.ru> <prime@vladqa.ru>\nWalter Stanish <walter@pratyeka.org>\nWang Chao <chao.wang@ucloud.cn>\nWang Chao <chao.wang@ucloud.cn> <wcwxyz@gmail.com>\nWang Guoliang <liangcszzu@163.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com> <root@localhost>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWayne Chang <wayne@neverfear.org>\nWayne Song <wsong@docker.com> <wsong@users.noreply.github.com>\nWei Wu <wuwei4455@gmail.com> cizixs <cizixs@163.com>\nWei-Ting Kuo <waitingkuo0527@gmail.com>\nWen Cheng Ma <wenchma@cn.ibm.com>\nWenjun Tang <tangwj2@lenovo.com> <dodia@163.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWill Weaver <monkey@buildingbananas.com>\nWing-Kam Wong <wingkwong.code@gmail.com>\nWuLonghui <wlh6666@qq.com>\nXian Chaobo <xianchaobo@huawei.com>\nXian Chaobo <xianchaobo@huawei.com> <jimmyxian2004@yahoo.com.cn>\nXianglin Gao <xlgao@zju.edu.cn>\nXianjie <guxianjie@gmail.com>\nXianjie <guxianjie@gmail.com> <datastream@datastream-laptop.local>\nXianlu Bird <xianlubird@gmail.com>\nXiao YongBiao <xyb4638@gmail.com>\nXiao Zhang <xiaozhang0210@hotmail.com>\nXiaodong Liu <liuxiaodong@loongson.cn>\nXiaodong Zhang <a4012017@sina.com>\nXiaohua Ding <xiao_hua_ding@sina.cn>\nXiaoyu Zhang <zhang.xiaoyu33@zte.com.cn>\nXinfeng Liu <XinfengLiu@icloud.com>\nXinfeng Liu <XinfengLiu@icloud.com> <xinfeng.liu@gmail.com>\nXuecong Liao <satorulogic@gmail.com>\nYamasaki Masahide <masahide.y@gmail.com>\nYao Zaiyong <yaozaiyong@hotmail.com>\nYassine Tijani <yasstij11@gmail.com>\nYazhong Liu <yorkiefixer@gmail.com>\nYestin Sun <sunyi0804@gmail.com> <yestin.sun@polyera.com>\nYi EungJun <eungjun.yi@navercorp.com> <semtlenori@gmail.com>\nYing Li <ying.li@docker.com>\nYing Li <ying.li@docker.com> <cyli@twistedmatrix.com>\nYong Tang <yong.tang.github@outlook.com> <yongtang@users.noreply.github.com>\nYongxin Li <yxli@alauda.io>\nYosef Fertel <yfertel@gmail.com> <frosforever@users.noreply.github.com>\nYu Changchun <yuchangchun1@huawei.com>\nYu Chengxia <yuchengxia@huawei.com>\nYu Peng <yu.peng36@zte.com.cn>\nYu Peng <yu.peng36@zte.com.cn> <yupeng36@zte.com.cn>\nYuan Sun <sunyuan3@huawei.com>\nYue Zhang <zy675793960@yeah.net>\nYufei Xiong <yufei.xiong@qq.com>\nZach Gershman <zachgersh@gmail.com>\nZach Gershman <zachgersh@gmail.com> <zachgersh@users.noreply.github.com>\nZachary Jaffee <zjaffee@us.ibm.com> <zij@case.edu>\nZachary Jaffee <zjaffee@us.ibm.com> <zjaffee@apache.org>\nZhang Kun <zkazure@gmail.com>\nZhang Wentao <zhangwentao234@huawei.com>\nZhangHang <stevezhang2014@gmail.com>\nZhenkun Bi <bi.zhenkun@zte.com.cn>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Kunjia <zhu.kunjia@zte.com.cn>\nZiheng Liu <lzhfromustc@gmail.com>\nZou Yu <zouyu7@huawei.com>\nZuhayr Elahi <zuhayr.elahi@docker.com>\nZuhayr Elahi <zuhayr.elahi@docker.com> <elahi.zuhayr@gmail.com>\n정재영 <jjy600901@gmail.com>\n정재영 <jjy600901@gmail.com> <43400316+J-jaeyoung@users.noreply.github.com>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 90.14,
          "content": "# File @generated by hack/generate-authors.sh. DO NOT EDIT.\n# This file lists all contributors to the repository.\n# See hack/generate-authors.sh to make modifications.\n\nAanand Prasad <aanand.prasad@gmail.com>\nAaron Davidson <aaron@databricks.com>\nAaron Feng <aaron.feng@gmail.com>\nAaron Hnatiw <aaron@griddio.com>\nAaron Huslage <huslage@gmail.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron Lehmann <alehmann@netflix.com>\nAaron Welch <welch@packet.net>\nAaron Yoshitake <airandfingers@gmail.com>\nAbel Muiño <amuino@gmail.com>\nAbhijeet Kasurde <akasurde@redhat.com>\nAbhinandan Prativadi <aprativadi@gmail.com>\nAbhinav Ajgaonkar <abhinav316@gmail.com>\nAbhishek Chanda <abhishek.becs@gmail.com>\nAbhishek Sharma <abhishek@asharma.me>\nAbin Shahab <ashahab@altiscale.com>\nAbirdcfly <fp544037857@gmail.com>\nAda Mancini <ada@docker.com>\nAdam Avilla <aavilla@yp.com>\nAdam Dobrawy <naczelnik@jawnosc.tk>\nAdam Eijdenberg <adam.eijdenberg@gmail.com>\nAdam Kunk <adam.kunk@tiaa-cref.org>\nAdam Miller <admiller@redhat.com>\nAdam Mills <adam@armills.info>\nAdam Pointer <adam.pointer@skybettingandgaming.com>\nAdam Singer <financeCoding@gmail.com>\nAdam Thornton <adam.thornton@maryville.com>\nAdam Walz <adam@adamwalz.net>\nAdam Williams <awilliams@mirantis.com>\nAdamKorcz <adam@adalogics.com>\nAddam Hardy <addam.hardy@gmail.com>\nAditi Rajagopal <arajagopal@us.ibm.com>\nAditya <aditya@netroy.in>\nAdnan Khan <adnkha@amazon.com>\nAdolfo Ochagavía <aochagavia92@gmail.com>\nAdria Casas <adriacasas88@gmail.com>\nAdrian Moisey <adrian@changeover.za.net>\nAdrian Mouat <adrian.mouat@gmail.com>\nAdrian Oprea <adrian@codesi.nz>\nAdrien Folie <folie.adrien@gmail.com>\nAdrien Gallouët <adrien@gallouet.fr>\nAhmed Kamal <email.ahmedkamal@googlemail.com>\nAhmet Alp Balkan <ahmetb@microsoft.com>\nAidan Feldman <aidan.feldman@gmail.com>\nAidan Hobson Sayers <aidanhs@cantab.net>\nAJ Bowen <aj@soulshake.net>\nAjey Charantimath <ajey.charantimath@gmail.com>\najneu <ajneu@users.noreply.github.com>\nAkash Gupta <akagup@microsoft.com>\nAkhil Mohan <akhil.mohan@mayadata.io>\nAkihiro Matsushima <amatsusbit@gmail.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkim Demaille <akim.demaille@docker.com>\nAkira Koyasu <mail@akirakoyasu.net>\nAkshay Karle <akshay.a.karle@gmail.com>\nAkshay Moghe <akshay.moghe@gmail.com>\nAl Tobey <al@ooyala.com>\nalambike <alambike@gmail.com>\nAlan Hoyle <alan@alanhoyle.com>\nAlan Scherger <flyinprogrammer@gmail.com>\nAlan Thompson <cloojure@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlbert Callarisa <shark234@gmail.com>\nAlbert Zhang <zhgwenming@gmail.com>\nAlbin Kerouanton <albinker@gmail.com>\nAlec Benson <albenson@redhat.com>\nAlejandro González Hevia <alejandrgh11@gmail.com>\nAleksa Sarai <asarai@suse.de>\nAleksandr Chebotov <v-aleche@microsoft.com>\nAleksandrs Fadins <aleks@s-ko.net>\nAlena Prokharchyk <alena@rancher.com>\nAlessandro Boch <aboch@tetrationanalytics.com>\nAlessio Biancalana <dottorblaster@gmail.com>\nAlex Chan <alex@alexwlchan.net>\nAlex Chen <alexchenunix@gmail.com>\nAlex Coventry <alx@empirical.com>\nAlex Crawford <alex.crawford@coreos.com>\nAlex Ellis <alexellis2@gmail.com>\nAlex Gaynor <alex.gaynor@gmail.com>\nAlex Goodman <wagoodman@gmail.com>\nAlex Nordlund <alexander.nordlund@nasdaq.com>\nAlex Olshansky <i@creagenics.com>\nAlex Samorukov <samm@os2.kiev.ua>\nAlex Stockinger <alex@atomicjar.com>\nAlex Warhawk <ax.warhawk@gmail.com>\nAlexander Artemenko <svetlyak.40wt@gmail.com>\nAlexander Boyd <alex@opengroove.org>\nAlexander Larsson <alexl@redhat.com>\nAlexander Midlash <amidlash@docker.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Polakov <plhk@sdf.org>\nAlexander Shopov <ash@kambanaria.org>\nAlexandre Beslic <alexandre.beslic@gmail.com>\nAlexandre Garnier <zigarn@gmail.com>\nAlexandre González <agonzalezro@gmail.com>\nAlexandre Jomin <alexandrejomin@gmail.com>\nAlexandru Sfirlogea <alexandru.sfirlogea@gmail.com>\nAlexei Margasov <alexei38@yandex.ru>\nAlexey Guskov <lexag@mail.ru>\nAlexey Kotlyarov <alexey@infoxchange.net.au>\nAlexey Shamrin <shamrin@gmail.com>\nAlexis Ries <ries.alexis@gmail.com>\nAlexis Thomas <fr.alexisthomas@gmail.com>\nAlfred Landrum <alfred.landrum@docker.com>\nAli Dehghani <ali.dehghani.g@gmail.com>\nAlicia Lauerman <alicia@eta.im>\nAlihan Demir <alihan_6153@hotmail.com>\nAllen Madsen <blatyo@gmail.com>\nAllen Sun <allensun.shl@alibaba-inc.com>\nalmoehi <almoehi@users.noreply.github.com>\nAlvaro Saurin <alvaro.saurin@gmail.com>\nAlvin Deng <alvin.q.deng@utexas.edu>\nAlvin Richards <alvin.richards@docker.com>\namangoel <amangoel@gmail.com>\nAmen Belayneh <amenbelayneh@gmail.com>\nAmeya Gawde <agawde@mirantis.com>\nAmir Goldstein <amir73il@aquasec.com>\nAmit Bakshi <ambakshi@gmail.com>\nAmit Krishnan <amit.krishnan@oracle.com>\nAmit Shukla <amit.shukla@docker.com>\nAmr Gawish <amr.gawish@gmail.com>\nAmy Lindburg <amy.lindburg@docker.com>\nAnand Patil <anand.prabhakar.patil@gmail.com>\nAnandkumarPatel <anandkumarpatel@gmail.com>\nAnatoly Borodin <anatoly.borodin@gmail.com>\nAnca Iordache <anca.iordache@docker.com>\nAnchal Agrawal <aagrawa4@illinois.edu>\nAnda Xu <anda.xu@docker.com>\nAnders Janmyr <anders@janmyr.com>\nAndre Dublin <81dublin@gmail.com>\nAndre Granovsky <robotciti@live.com>\nAndrea Denisse Gómez <crypto.andrea@protonmail.ch>\nAndrea Luzzardi <aluzzardi@gmail.com>\nAndrea Turli <andrea.turli@gmail.com>\nAndreas Elvers <andreas@work.de>\nAndreas Köhler <andi5.py@gmx.net>\nAndreas Savvides <andreas@editd.com>\nAndreas Tiefenthaler <at@an-ti.eu>\nAndrei Gherzan <andrei@resin.io>\nAndrei Ushakov <aushakov@netflix.com>\nAndrei Vagin <avagin@gmail.com>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me>\nAndrew C. Bodine <acbodine@us.ibm.com>\nAndrew Clay Shafer <andrewcshafer@gmail.com>\nAndrew Duckworth <grillopress@gmail.com>\nAndrew France <andrew@avito.co.uk>\nAndrew Gerrand <adg@golang.org>\nAndrew Guenther <guenther.andrew.j@gmail.com>\nAndrew He <he.andrew.mail@gmail.com>\nAndrew Hsu <andrewhsu@docker.com>\nAndrew Kim <taeyeonkim90@gmail.com>\nAndrew Kuklewicz <kookster@gmail.com>\nAndrew Macgregor <andrew.macgregor@agworld.com.au>\nAndrew Macpherson <hopscotch23@gmail.com>\nAndrew Martin <sublimino@gmail.com>\nAndrew McDonnell <bugs@andrewmcdonnell.net>\nAndrew Munsell <andrew@wizardapps.net>\nAndrew Pennebaker <andrew.pennebaker@gmail.com>\nAndrew Po <absourd.noise@gmail.com>\nAndrew Weiss <andrew.weiss@docker.com>\nAndrew Williams <williams.andrew@gmail.com>\nAndrews Medina <andrewsmedina@gmail.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com>\nAndrey Petrov <andrey.petrov@shazow.net>\nAndrey Stolbovsky <andrey.stolbovsky@gmail.com>\nAndré Martins <aanm90@gmail.com>\nAndy Chambers <anchambers@paypal.com>\nandy diller <dillera@gmail.com>\nAndy Goldstein <agoldste@redhat.com>\nAndy Kipp <andy@rstudio.com>\nAndy Lindeman <alindeman@salesforce.com>\nAndy Rothfusz <github@developersupport.net>\nAndy Smith <github@anarkystic.com>\nAndy Wilson <wilson.andrew.j+github@gmail.com>\nAndy Zhang <andy.zhangtao@hotmail.com>\nAneesh Kulkarni <askthefactorcamera@gmail.com>\nAnes Hasicic <anes.hasicic@gmail.com>\nAngel Velazquez <angelcar@amazon.com>\nAnil Belur <askb23@gmail.com>\nAnil Madhavapeddy <anil@recoil.org>\nAnkit Jain <ajatkj@yahoo.co.in>\nAnkush Agarwal <ankushagarwal11@gmail.com>\nAnonmily <michelle@michelleliu.io>\nAnran Qiao <anran.qiao@daocloud.io>\nAnshul Pundir <anshul.pundir@docker.com>\nAnthon van der Neut <anthon@mnt.org>\nAnthony Baire <Anthony.Baire@irisa.fr>\nAnthony Bishopric <git@anthonybishopric.com>\nAnthony Dahanne <anthony.dahanne@gmail.com>\nAnthony Sottile <asottile@umich.edu>\nAnton Löfgren <anton.lofgren@gmail.com>\nAnton Nikitin <anton.k.nikitin@gmail.com>\nAnton Polonskiy <anton.polonskiy@gmail.com>\nAnton Tiurin <noxiouz@yandex.ru>\nAntonio Aguilar <antonio@zoftko.com>\nAntonio Murdaca <antonio.murdaca@gmail.com>\nAntonis Kalipetis <akalipetis@gmail.com>\nAntony Messerli <amesserl@rackspace.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com>\nAnuj Varma <anujvarma@thumbtack.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com>\nAnyu Wang <wanganyu@outlook.com>\napocas <petermdias@gmail.com>\nArash Deshmeh <adeshmeh@ca.ibm.com>\narcosx <arcosx@outlook.com>\nArikaChen <eaglesora@gmail.com>\nArko Dasgupta <arko@tetrate.io>\nArnaud Lefebvre <a.lefebvre@outlook.fr>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com>\nArtem Khramov <akhramov@pm.me>\nArthur Barr <arthur.barr@uk.ibm.com>\nArthur Gautier <baloo@gandi.net>\nArtur Meyster <arthurfbi@yahoo.com>\nArun Gupta <arun.gupta@gmail.com>\nAsad Saeeduddin <masaeedu@gmail.com>\nAsbjørn Enge <asbjorn@hanafjedle.net>\nAustin Vazquez <macedonv@amazon.com>\naveragehuman <averagehuman@users.noreply.github.com>\nAvi Das <andas222@gmail.com>\nAvi Kivity <avi@scylladb.com>\nAvi Miller <avi.miller@oracle.com>\nAvi Vaid <avaid1996@gmail.com>\nAzat Khuyiyakhmetov <shadow_uz@mail.ru>\nBao Yonglei <baoyonglei@huawei.com>\nBardia Keyoumarsi <bkeyouma@ucsc.edu>\nBarnaby Gray <barnaby@pickle.me.uk>\nBarry Allard <barry.allard@gmail.com>\nBartłomiej Piotrowski <b@bpiotrowski.pl>\nBastiaan Bakker <bbakker@xebia.com>\nBastien Pascard <bpascard@hotmail.com>\nbdevloed <boris.de.vloed@gmail.com>\nBearice Ren <bearice@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Firshman <ben@firshman.co.uk>\nBen Golub <ben.golub@dotcloud.com>\nBen Gould <ben@bengould.co.uk>\nBen Hall <ben@benhall.me.uk>\nBen Langfeld <ben@langfeld.me>\nBen Lovy <ben@deciduously.com>\nBen Sargent <ben@brokendigits.com>\nBen Severson <BenSeverson@users.noreply.github.com>\nBen Toews <mastahyeti@gmail.com>\nBen Wiklund <ben@daisyowl.com>\nBenjamin Atkin <ben@benatkin.com>\nBenjamin Baker <Benjamin.baker@utexas.edu>\nBenjamin Boudreau <boudreau.benjamin@gmail.com>\nBenjamin Böhmke <benjamin@boehmke.net>\nBenjamin Wang <wachao@vmware.com>\nBenjamin Yolken <yolken@stripe.com>\nBenny Ng <benny.tpng@gmail.com>\nBenoit Chesneau <bchesneau@gmail.com>\nBernerd Schaefer <bj.schaefer@gmail.com>\nBernhard M. Wiedemann <bwiedemann@suse.de>\nBert Goethals <bert@bertg.be>\nBertrand Roussel <broussel@sierrawireless.com>\nBevisy Zhang <binbin36520@gmail.com>\nBharath Thiruveedula <bharath_ves@hotmail.com>\nBhiraj Butala <abhiraj.butala@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBilal Amarni <bilal.amarni@gmail.com>\nBill Wang <ozbillwang@gmail.com>\nBilly Ridgway <wrridgwa@us.ibm.com>\nBily Zhang <xcoder@tenxcloud.com>\nBin Liu <liubin0329@gmail.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBjorn Neergaard <bjorn@neersighted.com>\nBlake Geno <blakegeno@gmail.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nbobby abbott <ttobbaybbob@gmail.com>\nBojun Zhu <bojun.zhu@foxmail.com>\nBoqin Qin <bobbqqin@gmail.com>\nBoris Pruessmann <boris@pruessmann.org>\nBoshi Lian <farmer1992@gmail.com>\nBouke Haarsma <bouke@webatoom.nl>\nBoyd Hemphill <boyd@feedmagnet.com>\nboynux <boynux@gmail.com>\nBradley Cicenas <bradley.cicenas@gmail.com>\nBradley Wright <brad@intranation.com>\nBrandon Liu <bdon@bdon.org>\nBrandon Philips <brandon.philips@coreos.com>\nBrandon Rhodes <brandon@rhodesmill.org>\nBrendan Dixon <brendand@microsoft.com>\nBrennan Kinney <5098581+polarathene@users.noreply.github.com>\nBrent Salisbury <brent.salisbury@docker.com>\nBrett Higgins <brhiggins@arbor.net>\nBrett Kochendorfer <brett.kochendorfer@gmail.com>\nBrett Milford <brettmilford@gmail.com>\nBrett Randall <javabrett@gmail.com>\nBrian (bex) Exelbierd <bexelbie@redhat.com>\nBrian Bland <brian.bland@docker.com>\nBrian DeHamer <brian@dehamer.com>\nBrian Dorsey <brian@dorseys.org>\nBrian Flad <bflad417@gmail.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian McCallister <brianm@skife.org>\nBrian Olsen <brian@maven-group.org>\nBrian Schwind <brianmschwind@gmail.com>\nBrian Shumate <brian@couchbase.com>\nBrian Torres-Gil <brian@dralth.com>\nBrian Trump <btrump@yelp.com>\nBrice Jaglin <bjaglin@teads.tv>\nBriehan Lombaard <briehan.lombaard@gmail.com>\nBrielle Broder <bbroder@google.com>\nBruno Bigras <bigras.bruno@gmail.com>\nBruno Binet <bruno.binet@gmail.com>\nBruno Gazzera <bgazzera@paginar.com>\nBruno Renié <brutasse@gmail.com>\nBruno Tavares <btavare@thoughtworks.com>\nBryan Bess <squarejaw@bsbess.com>\nBryan Boreham <bjboreham@gmail.com>\nBryan Matsuo <bryan.matsuo@gmail.com>\nBryan Murphy <bmurphy1976@gmail.com>\nBurke Libbey <burke@libbey.me>\nByung Kang <byung.kang.ctr@amrdec.army.mil>\nCaleb Spare <cespare@gmail.com>\nCalen Pennington <cale@edx.org>\nCalvin Liu <flycalvin@qq.com>\nCameron Boehmer <cameron.boehmer@gmail.com>\nCameron Sparr <gh@sparr.email>\nCameron Spear <cameronspear@gmail.com>\nCampbell Allen <campbell.allen@gmail.com>\nCandid Dauth <cdauth@cdauth.eu>\nCao Weiwei <cao.weiwei30@zte.com.cn>\nCarl Henrik Lunde <chlunde@ping.uio.no>\nCarl Loa Odin <carlodin@gmail.com>\nCarl X. Su <bcbcarl@gmail.com>\nCarlo Mion <mion00@gmail.com>\nCarlos Alexandro Becker <caarlos0@gmail.com>\nCarlos de Paula <me@carlosedp.com>\nCarlos Sanchez <carlos@apache.org>\nCarol Fager-Higgins <carol.fager-higgins@docker.com>\nCary <caryhartline@users.noreply.github.com>\nCasey Bisson <casey.bisson@joyent.com>\nCatalin Pirvu <pirvu.catalin94@gmail.com>\nCe Gao <ce.gao@outlook.com>\nCedric Davies <cedricda@microsoft.com>\nCezar Sa Espinola <cezarsa@gmail.com>\nChad Swenson <chadswen@gmail.com>\nChance Zibolski <chance.zibolski@gmail.com>\nChander Govindarajan <chandergovind@gmail.com>\nChanhun Jeong <keyolk@gmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com>\nCharles Chan <charleswhchan@users.noreply.github.com>\nCharles Hooper <charles.hooper@dotcloud.com>\nCharles Law <claw@conduce.com>\nCharles Lindsay <chaz@chazomatic.us>\nCharles Merriam <charles.merriam@gmail.com>\nCharles Sarrazin <charles@sarraz.in>\nCharles Smith <charles.smith@docker.com>\nCharlie Drage <charlie@charliedrage.com>\nCharlie Lewis <charliel@lab41.org>\nChase Bolt <chase.bolt@gmail.com>\nChaYoung You <yousbe@gmail.com>\nChee Hau Lim <ch33hau@gmail.com>\nChen Chao <cc272309126@gmail.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Hanxiao <chenhanxiao@cn.fujitsu.com>\nChen Min <chenmin46@huawei.com>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nCheng-mean Liu <soccerl@microsoft.com>\nChengfei Shang <cfshang@alauda.io>\nChengguang Xu <cgxu519@gmx.com>\nChentianze <cmoman@126.com>\nChenyang Yan <memory.yancy@gmail.com>\nchenyuzhu <chenyuzhi@oschina.cn>\nChetan Birajdar <birajdar.chetan@gmail.com>\nChewey <prosto-chewey@users.noreply.github.com>\nChia-liang Kao <clkao@clkao.org>\nChiranjeevi Tirunagari <vchiranjeeviak.tirunagari@gmail.com>\nchli <chli@freewheel.tv>\nCholerae Hu <choleraehyq@gmail.com>\nChris Alfonso <calfonso@redhat.com>\nChris Armstrong <chris@opdemand.com>\nChris Dias <cdias@microsoft.com>\nChris Dituri <csdituri@gmail.com>\nChris Fordham <chris@fordham-nagy.id.au>\nChris Gavin <chris@chrisgavin.me>\nChris Gibson <chris@chrisg.io>\nChris Khoo <chris.khoo@gmail.com>\nChris Kreussling (Flatbush Gardener) <xrisfg@gmail.com>\nChris McKinnel <chris.mckinnel@tangentlabs.co.uk>\nChris McKinnel <chrismckinnel@gmail.com>\nChris Price <cprice@mirantis.com>\nChris Seto <chriskseto@gmail.com>\nChris Snow <chsnow123@gmail.com>\nChris St. Pierre <chris.a.st.pierre@gmail.com>\nChris Stivers <chris@stivers.us>\nChris Swan <chris.swan@iee.org>\nChris Telfer <ctelfer@docker.com>\nChris Wahl <github@wahlnetwork.com>\nChris Weyl <cweyl@alumni.drew.edu>\nChris White <me@cwprogram.com>\nChristian Becker <christian.becker@sixt.com>\nChristian Berendt <berendt@b1-systems.de>\nChristian Brauner <christian.brauner@ubuntu.com>\nChristian Böhme <developement@boehme3d.de>\nChristian Muehlhaeuser <muesli@gmail.com>\nChristian Persson <saser@live.se>\nChristian Rotzoll <ch.rotzoll@gmail.com>\nChristian Simon <simon@swine.de>\nChristian Stefanescu <st.chris@gmail.com>\nChristoph Ziebuhr <chris@codefrickler.de>\nChristophe Mehay <cmehay@online.net>\nChristophe Troestler <christophe.Troestler@umons.ac.be>\nChristophe Vidal <kriss@krizalys.com>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Crone <christopher.crone@docker.com>\nChristopher Currie <codemonkey+github@gmail.com>\nChristopher Jones <tophj@linux.vnet.ibm.com>\nChristopher Latham <sudosurootdev@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com>\nChristopher Rigor <crigor@gmail.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com>\nCiro S. Costa <ciro.costa@usp.br>\nClayton Coleman <ccoleman@redhat.com>\nClint Armstrong <clint@clintarmstrong.net>\nClinton Kitson <clintonskitson@gmail.com>\nclubby789 <jamie@hill-daniel.co.uk>\nCody Roseborough <crrosebo@amazon.com>\nCoenraad Loubser <coenraad@wish.org.za>\nColin Dunklau <colin.dunklau@gmail.com>\nColin Hebert <hebert.colin@gmail.com>\nColin Panisset <github@clabber.com>\nColin Rice <colin@daedrum.net>\nColin Walters <walters@verbum.org>\nCollin Guarino <collin.guarino@gmail.com>\nColm Hally <colmhally@gmail.com>\ncompanycy <companycy@gmail.com>\nConor Evans <coevans@tcd.ie>\nCorbin Coleman <corbin.coleman@docker.com>\nCorey Farrell <git@cfware.com>\nCory Forsyth <cory.forsyth@gmail.com>\nCory Snider <csnider@mirantis.com>\ncressie176 <github@stephen-cresswell.net>\nCristian Ariza <dev@cristianrz.com>\nCristian Staretu <cristian.staretu@gmail.com>\ncristiano balducci <cristiano.balducci@gmail.com>\nCristina Yenyxe Gonzalez Garcia <cristina.yenyxe@gmail.com>\nCruceru Calin-Cristian <crucerucalincristian@gmail.com>\ncui fliter <imcusg@gmail.com>\nCUI Wei <ghostplant@qq.com>\nCuong Manh Le <cuong.manhle.vn@gmail.com>\nCyprian Gracz <cyprian.gracz@micro-jumbo.eu>\nCyril F <cyrilf7x@gmail.com>\nDa McGrady <dabkb@aol.com>\nDaan van Berkel <daan.v.berkel.1980@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com>\nDafydd Crosby <dtcrsby@gmail.com>\ndalanlan <dalanlan925@gmail.com>\nDamian Smyth <damian@dsau.co>\nDamien Nadé <github@livna.org>\nDamien Nozay <damien.nozay@gmail.com>\nDamjan Georgievski <gdamjan@gmail.com>\nDan Anolik <dan@anolik.net>\nDan Buch <d.buch@modcloth.com>\nDan Cotora <dan@bluevision.ro>\nDan Feldman <danf@jfrog.com>\nDan Griffin <dgriffin@peer1.com>\nDan Hirsch <thequux@upstandinghackers.com>\nDan Keder <dan.keder@gmail.com>\nDan Levy <dan@danlevy.net>\nDan McPherson <dmcphers@redhat.com>\nDan Plamadeala <cornul11@gmail.com>\nDan Stine <sw@stinemail.com>\nDan Williams <me@deedubs.com>\nDani Hodovic <dani.hodovic@gmail.com>\nDani Louca <dani.louca@docker.com>\nDaniel Antlinger <d.antlinger@gmx.at>\nDaniel Black <daniel@linux.ibm.com>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Exner <dex@dragonslave.de>\nDaniel Farrell <dfarrell@redhat.com>\nDaniel Garcia <daniel@danielgarcia.info>\nDaniel Gasienica <daniel@gasienica.ch>\nDaniel Grunwell <mwgrunny@gmail.com>\nDaniel Helfand <helfand.4@gmail.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Menet <membership@sontags.ch>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com>\nDaniel Nephin <dnephin@docker.com>\nDaniel Norberg <dano@spotify.com>\nDaniel Nordberg <dnordberg@gmail.com>\nDaniel P. Berrangé <berrange@redhat.com>\nDaniel Robinson <gottagetmac@gmail.com>\nDaniel S <dan.streby@gmail.com>\nDaniel Sweet <danieljsweet@icloud.com>\nDaniel Von Fange <daniel@leancoder.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDaniel X Moore <yahivin@gmail.com>\nDaniel YC Lin <dlin.tw@gmail.com>\nDaniel Zhang <jmzwcn@gmail.com>\nDaniele Rondina <geaaru@sabayonlinux.org>\nDanny Berger <dpb587@gmail.com>\nDanny Milosavljevic <dannym@scratchpost.org>\nDanny Yates <danny@codeaholics.org>\nDanyal Khaliq <danyal.khaliq@tenpearls.com>\nDarren Coxall <darren@darrencoxall.com>\nDarren Shepherd <darren.s.shepherd@gmail.com>\nDarren Stahl <darst@microsoft.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDavanum Srinivas <davanum@gmail.com>\nDave Barboza <dbarboza@datto.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com>\nDave MacDonald <mindlapse@gmail.com>\nDave Tucker <dt@docker.com>\nDavid Anderson <dave@natulte.net>\nDavid Bellotti <dbellotti@pivotal.io>\nDavid Calavera <david.calavera@gmail.com>\nDavid Chung <david.chung@docker.com>\nDavid Corking <dmc-source@dcorking.com>\nDavid Cramer <davcrame@cisco.com>\nDavid Currie <david_currie@uk.ibm.com>\nDavid Davis <daviddavis@redhat.com>\nDavid Dooling <dooling@gmail.com>\nDavid Gageot <david@gageot.net>\nDavid Gebler <davidgebler@gmail.com>\nDavid Glasser <glasser@davidglasser.net>\nDavid Karlsson <35727626+dvdksn@users.noreply.github.com>\nDavid Lawrence <david.lawrence@docker.com>\nDavid Lechner <david@lechnology.com>\nDavid M. Karr <davidmichaelkarr@gmail.com>\nDavid Mackey <tdmackey@booleanhaiku.com>\nDavid Manouchehri <manouchehri@riseup.net>\nDavid Mat <david@davidmat.com>\nDavid Mcanulty <github@hellspark.com>\nDavid McKay <david@rawkode.com>\nDavid O'Rourke <david@scalefactory.com>\nDavid P Hilton <david.hilton.p@gmail.com>\nDavid Pelaez <pelaez89@gmail.com>\nDavid R. Jenni <david.r.jenni@gmail.com>\nDavid Röthlisberger <david@rothlis.net>\nDavid Sheets <dsheets@docker.com>\nDavid Sissitka <me@dsissitka.com>\nDavid Trott <github@davidtrott.com>\nDavid Wang <00107082@163.com>\nDavid Williamson <david.williamson@docker.com>\nDavid Xia <dxia@spotify.com>\nDavid Young <yangboh@cn.ibm.com>\nDavide Ceretti <davide.ceretti@hogarthww.com>\nDawn Chen <dawnchen@google.com>\ndbdd <wangtong2712@gmail.com>\ndcylabs <dcylabs@gmail.com>\nDebayan De <debayande@users.noreply.github.com>\nDeborah Gertrude Digges <deborah.gertrude.digges@gmail.com>\ndeed02392 <georgehafiz@gmail.com>\nDeep Debroy <ddebroy@docker.com>\nDeng Guangxing <dengguangxing@huawei.com>\nDeni Bertovic <deni@kset.org>\nDenis Defreyne <denis@soundcloud.com>\nDenis Gladkikh <denis@gladkikh.email>\nDenis Ollier <larchunix@users.noreply.github.com>\nDennis Chen <barracks510@gmail.com>\nDennis Chen <dennis.chen@arm.com>\nDennis Docter <dennis@d23.nl>\nDerek <crq@kernel.org>\nDerek <crquan@gmail.com>\nDerek Ch <denc716@gmail.com>\nDerek McGowan <derek@mcg.dev>\nDeric Crago <deric.crago@gmail.com>\nDeshi Xiao <dxiao@redhat.com>\nDevon Estes <devon.estes@klarna.com>\nDevvyn Murphy <devvyn@devvyn.com>\nDharmit Shah <shahdharmit@gmail.com>\nDhawal Yogesh Bhanushali <dbhanushali@vmware.com>\nDhilip Kumars <dhilip.kumar.s@huawei.com>\nDiego Romero <idiegoromero@gmail.com>\nDiego Siqueira <dieg0@live.com>\nDieter Reuter <dieter.reuter@me.com>\nDillon Dixon <dillondixon@gmail.com>\nDima Stopel <dima@twistlock.com>\nDimitri John Ledkov <dimitri.j.ledkov@intel.com>\nDimitris Mandalidis <dimitris.mandalidis@gmail.com>\nDimitris Rozakis <dimrozakis@gmail.com>\nDimitry Andric <d.andric@activevideo.com>\nDinesh Subhraveti <dineshs@altiscale.com>\nDing Fei <dingfei@stars.org.cn>\ndingwei <dingwei@cmss.chinamobile.com>\nDiogo Monica <diogo@docker.com>\nDiuDiugirl <sophia.wang@pku.edu.cn>\nDjibril Koné <kone.djibril@gmail.com>\nDjordje Lukic <djordje.lukic@docker.com>\ndkumor <daniel@dkumor.com>\nDmitri Logvinenko <dmitri.logvinenko@gmail.com>\nDmitri Shuralyov <shurcooL@gmail.com>\nDmitry Demeshchuk <demeshchuk@gmail.com>\nDmitry Gusev <dmitry.gusev@gmail.com>\nDmitry Kononenko <d@dm42.ru>\nDmitry Sharshakov <d3dx12.xx@gmail.com>\nDmitry Shyshkin <dmitry@shyshkin.org.ua>\nDmitry Smirnov <onlyjob@member.fsf.org>\nDmitry V. Krivenok <krivenok.dmitry@gmail.com>\nDmitry Vorobev <dimahabr@gmail.com>\nDmytro Iakovliev <dmytro.iakovliev@zodiacsystems.com>\ndocker-unir[bot] <docker-unir[bot]@users.noreply.github.com>\nDolph Mathews <dolph.mathews@gmail.com>\nDominic Tubach <dominic.tubach@to.com>\nDominic Yin <yindongchao@inspur.com>\nDominik Dingel <dingel@linux.vnet.ibm.com>\nDominik Finkbeiner <finkes93@gmail.com>\nDominik Honnef <dominik@honnef.co>\nDon Kirkby <donkirkby@users.noreply.github.com>\nDon Kjer <don.kjer@gmail.com>\nDon Spaulding <donspauldingii@gmail.com>\nDonald Huang <don.hcd@gmail.com>\nDong Chen <dongluo.chen@docker.com>\nDonghwa Kim <shanytt@gmail.com>\nDonovan Jones <git@gamma.net.nz>\nDorin Geman <dorin.geman@docker.com>\nDoron Podoleanu <doronp@il.ibm.com>\nDoug Davis <dug@us.ibm.com>\nDoug MacEachern <dougm@vmware.com>\nDoug Tangren <d.tangren@gmail.com>\nDouglas Curtis <dougcurtis1@gmail.com>\nDr Nic Williams <drnicwilliams@gmail.com>\ndragon788 <dragon788@users.noreply.github.com>\nDražen Lučanin <kermit666@gmail.com>\nDrew Erny <derny@mirantis.com>\nDrew Hubl <drew.hubl@gmail.com>\nDustin Sallings <dustin@spy.net>\nEd Costello <epc@epcostello.com>\nEdmund Wagner <edmund-wagner@web.de>\nEiichi Tsukata <devel@etsukata.com>\nEike Herzbach <eike@herzbach.net>\nEivin Giske Skaaren <eivinsn@axis.com>\nEivind Uggedal <eivind@uggedal.com>\nElan Ruusamäe <glen@pld-linux.org>\nElango Sivanandam <elango.siva@docker.com>\nElena Morozova <lelenanam@gmail.com>\nEli Uriegas <seemethere101@gmail.com>\nElias Faxö <elias.faxo@tre.se>\nElias Koromilas <elias.koromilas@gmail.com>\nElias Probst <mail@eliasprobst.eu>\nElijah Zupancic <elijah@zupancic.name>\neluck <mail@eluck.me>\nElvir Kuric <elvirkuric@gmail.com>\nEmil Davtyan <emil2k@gmail.com>\nEmil Hernvall <emil@quench.at>\nEmily Maier <emily@emilymaier.net>\nEmily Rose <emily@contactvibe.com>\nEmir Ozer <emirozer@yandex.com>\nEng Zer Jun <engzerjun@gmail.com>\nEnguerran <engcolson@gmail.com>\nEnrico Weigelt, metux IT consult <info@metux.net>\nEohyung Lee <liquidnuker@gmail.com>\nepeterso <epeterson@breakpoint-labs.com>\ner0k <er0k@er0k.net>\nEric Barch <barch@tomesoftware.com>\nEric Curtin <ericcurtin17@gmail.com>\nEric G. Noriega <enoriega@vizuri.com>\nEric Hanchrow <ehanchrow@ine.com>\nEric Lee <thenorthsecedes@gmail.com>\nEric Mountain <eric.mountain@datadoghq.com>\nEric Myhre <hash@exultant.us>\nEric Paris <eparis@redhat.com>\nEric Rafaloff <erafaloff@gmail.com>\nEric Rosenberg <ehaydenr@gmail.com>\nEric Sage <eric.david.sage@gmail.com>\nEric Soderstrom <ericsoderstrom@gmail.com>\nEric Yang <windfarer@gmail.com>\nEric-Olivier Lamey <eo@lamey.me>\nErica Windisch <erica@windisch.us>\nErich Cordoba <erich.cm@yandex.com>\nErik Bray <erik.m.bray@gmail.com>\nErik Dubbelboer <erik@dubbelboer.com>\nErik Hollensbe <github@hollensbe.org>\nErik Inge Bolsø <knan@redpill-linpro.com>\nErik Kristensen <erik@erikkristensen.com>\nErik Sipsma <erik@sipsma.dev>\nErik Sjölund <erik.sjolund@gmail.com>\nErik St. Martin <alakriti@gmail.com>\nErik Weathers <erikdw@gmail.com>\nErno Hopearuoho <erno.hopearuoho@gmail.com>\nErwin van der Koogh <info@erronis.nl>\nEspen Suenson <mail@espensuenson.dk>\nEthan Bell <ebgamer29@gmail.com>\nEthan Mosbaugh <ethan@replicated.com>\nEuan Harris <euan.harris@docker.com>\nEuan Kemp <euan.kemp@coreos.com>\nEugen Krizo <eugen.krizo@gmail.com>\nEugene Yakubovich <eugene.yakubovich@coreos.com>\nEvan Allrich <evan@unguku.com>\nEvan Carmi <carmi@users.noreply.github.com>\nEvan Hazlett <ejhazlett@gmail.com>\nEvan Krall <krall@yelp.com>\nEvan Lezar <elezar@nvidia.com>\nEvan Phoenix <evan@fallingsnow.net>\nEvan Wies <evan@neomantra.net>\nEvelyn Xu <evelynhsu21@gmail.com>\nEverett Toews <everett.toews@rackspace.com>\nEvgeniy Makhrov <e.makhrov@corp.badoo.com>\nEvgeny Shmarnev <shmarnev@gmail.com>\nEvgeny Vereshchagin <evvers@ya.ru>\nEwa Czechowska <ewa@ai-traders.com>\nEystein Måløy Stenberg <eystein.maloy.stenberg@cfengine.com>\nezbercih <cem.ezberci@gmail.com>\nEzra Silvera <ezra@il.ibm.com>\nFabian Kramm <kramm@covexo.com>\nFabian Lauer <kontakt@softwareschmiede-saar.de>\nFabian Raetz <fabian.raetz@gmail.com>\nFabiano Rosas <farosas@br.ibm.com>\nFabio Falci <fabiofalci@gmail.com>\nFabio Kung <fabio.kung@gmail.com>\nFabio Rapposelli <fabio@vmware.com>\nFabio Rehm <fgrehm@gmail.com>\nFabrizio Regini <freegenie@gmail.com>\nFabrizio Soppelsa <fsoppelsa@mirantis.com>\nFaiz Khan <faizkhan00@gmail.com>\nfalmp <chico.lopes@gmail.com>\nFangming Fang <fangming.fang@arm.com>\nFangyuan Gao <21551127@zju.edu.cn>\nfanjiyun <fan.jiyun@zte.com.cn>\nFareed Dudhia <fareeddudhia@googlemail.com>\nFathi Boudra <fathi.boudra@linaro.org>\nFederico Gimenez <fgimenez@coit.es>\nFelipe Oliveira <felipeweb.programador@gmail.com>\nFelipe Ruhland <felipe.ruhland@gmail.com>\nFelix Abecassis <fabecassis@nvidia.com>\nFelix Geisendörfer <felix@debuggable.com>\nFelix Hupfeld <felix@quobyte.com>\nFelix Rabe <felix@rabe.io>\nFelix Ruess <felix.ruess@gmail.com>\nFelix Schindler <fschindler@weluse.de>\nFeng Yan <fy2462@gmail.com>\nFengtu Wang <wangfengtu@huawei.com>\nFerenc Szabo <pragmaticfrank@gmail.com>\nFernando <fermayo@gmail.com>\nFero Volar <alian@alian.info>\nFeroz Salam <feroz.salam@sourcegraph.com>\nFerran Rodenas <frodenas@gmail.com>\nFilipe Brandenburger <filbranden@google.com>\nFilipe Oliveira <contato@fmoliveira.com.br>\nFilipe Pina <hzlu1ot0@duck.com>\nFlavio Castelli <fcastelli@suse.com>\nFlavio Crisciani <flavio.crisciani@docker.com>\nFlorian <FWirtz@users.noreply.github.com>\nFlorian Klein <florian.klein@free.fr>\nFlorian Maier <marsmensch@users.noreply.github.com>\nFlorian Noeding <noeding@adobe.com>\nFlorian Schmaus <flo@geekplace.eu>\nFlorian Weingarten <flo@hackvalue.de>\nFlorin Asavoaie <florin.asavoaie@gmail.com>\nFlorin Patan <florinpatan@gmail.com>\nfonglh <fonglh@gmail.com>\nFoysal Iqbal <foysal.iqbal.fb@gmail.com>\nFrancesc Campoy <campoy@google.com>\nFrancesco Degrassi <francesco.degrassi@optionfactory.net>\nFrancesco Mari <mari.francesco@gmail.com>\nFrancis Chuang <francis.chuang@boostport.com>\nFrancisco Carriedo <fcarriedo@gmail.com>\nFrancisco Souza <f@souza.cc>\nFrank Groeneveld <frank@ivaldi.nl>\nFrank Herrmann <fgh@4gh.tv>\nFrank Macreery <frank@macreery.com>\nFrank Rosquin <frank.rosquin+github@gmail.com>\nFrank Villaro-Dixon <frank.villarodixon@merkle.com>\nFrank Yang <yyb196@gmail.com>\nFred Lifton <fred.lifton@docker.com>\nFrederick F. Kautz IV <fkautz@redhat.com>\nFrederico F. de Oliveira <FreddieOliveira@users.noreply.github.com>\nFrederik Loeffert <frederik@zitrusmedia.de>\nFrederik Nordahl Jul Sabroe <frederikns@gmail.com>\nFreek Kalter <freek@kalteronline.org>\nFrieder Bluemle <frieder.bluemle@gmail.com>\nfrobnicaty <92033765+frobnicaty@users.noreply.github.com>\nFrédéric Dalleau <frederic.dalleau@docker.com>\nFu JinLin <withlin@yeah.net>\nFélix Baylac-Jacqué <baylac.felix@gmail.com>\nFélix Cantournet <felix.cantournet@cloudwatt.com>\nGabe Rosenhouse <gabe@missionst.com>\nGabor Nagy <mail@aigeruth.hu>\nGabriel Adrian Samfira <gsamfira@cloudbasesolutions.com>\nGabriel Goller <gabrielgoller123@gmail.com>\nGabriel L. Somlo <gsomlo@gmail.com>\nGabriel Linder <linder.gabriel@gmail.com>\nGabriel Monroy <gabriel@opdemand.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGabriel Tomitsuka <gabriel@tomitsuka.com>\nGaetan de Villele <gdevillele@gmail.com>\nGalen Sampson <galen.sampson@gmail.com>\nGang Qiao <qiaohai8866@gmail.com>\nGareth Rushgrove <gareth@morethanseven.net>\nGarrett Barboza <garrett@garrettbarboza.com>\nGary Schaetz <gary@schaetzkc.com>\nGaurav <gaurav.gosec@gmail.com>\nGaurav Singh <gaurav1086@gmail.com>\nGaël PORTAY <gael.portay@savoirfairelinux.com>\nGenki Takiuchi <genki@s21g.com>\nGennadySpb <lipenkov@gmail.com>\nGeoff Levand <geoff@infradead.org>\nGeoffrey Bachelet <grosfrais@gmail.com>\nGeon Kim <geon0250@gmail.com>\nGeorge Kontridze <george@bugsnag.com>\nGeorge Ma <mayangang@outlook.com>\nGeorge MacRorie <gmacr31@gmail.com>\nGeorge Xie <georgexsh@gmail.com>\nGeorgi Hristozov <georgi@forkbomb.nl>\nGeorgy Yakovlev <gyakovlev@gentoo.org>\nGereon Frey <gereon.frey@dynport.de>\nGerman DZ <germ@ndz.com.ar>\nGert van Valkenhoef <g.h.m.van.valkenhoef@rug.nl>\nGerwim Feiken <g.feiken@tfe.nl>\nGhislain Bourgeois <ghislain.bourgeois@gmail.com>\nGiampaolo Mancini <giampaolo@trampolineup.com>\nGianluca Borello <g.borello@gmail.com>\nGildas Cuisinier <gildas.cuisinier@gcuisinier.net>\nGiovan Isa Musthofa <giovanism@outlook.co.id>\ngissehel <public-devgit-dantus@gissehel.org>\nGiuseppe Mazzotta <gdm85@users.noreply.github.com>\nGiuseppe Scrivano <gscrivan@redhat.com>\nGleb Fotengauer-Malinovskiy <glebfm@altlinux.org>\nGleb M Borisov <borisov.gleb@gmail.com>\nGlyn Normington <gnormington@gopivotal.com>\nGoBella <caili_welcome@163.com>\nGoffert van Gool <goffert@phusion.nl>\nGoldwyn Rodrigues <rgoldwyn@suse.com>\nGopikannan Venugopalsamy <gopikannan.venugopalsamy@gmail.com>\nGosuke Miyashita <gosukenator@gmail.com>\nGou Rao <gou@portworx.com>\nGovinda Fichtner <govinda.fichtner@googlemail.com>\nGrant Millar <rid@cylo.io>\nGrant Reaber <grant.reaber@gmail.com>\nGraydon Hoare <graydon@pobox.com>\nGreg Fausak <greg@tacodata.com>\nGreg Pflaum <gpflaum@users.noreply.github.com>\nGreg Stephens <greg@udon.org>\nGreg Thornton <xdissent@me.com>\nGrzegorz Jaśkiewicz <gj.jaskiewicz@gmail.com>\nGuilhem Lettron <guilhem+github@lettron.fr>\nGuilherme Salgado <gsalgado@gmail.com>\nGuillaume Dufour <gdufour.prestataire@voyages-sncf.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com>\nGunadhya S. <6939749+gunadhya@users.noreply.github.com>\nGuoqiang QI <guoqiang.qi1@gmail.com>\nguoxiuyan <guoxiuyan@huawei.com>\nGuri <odg0318@gmail.com>\nGurjeet Singh <gurjeet@singh.im>\nGuruprasad <lgp171188@gmail.com>\nGustav Sinder <gustav.sinder@gmail.com>\ngwx296173 <gaojing3@huawei.com>\nGünter Zöchbauer <guenter@gzoechbauer.com>\nHaichao Yang <yang.haichao@zte.com.cn>\nhaikuoliu <haikuo@amazon.com>\nhaining.cao <haining.cao@daocloud.io>\nHakan Özler <hakan.ozler@kodcu.com>\nHamish Hutchings <moredhel@aoeu.me>\nHannes Ljungberg <hannes@5monkeys.se>\nHans Kristian Flaatten <hans@starefossen.com>\nHans Rødtang <hansrodtang@gmail.com>\nHao Shu Wei <haoshuwei24@gmail.com>\nHao Zhang <21521210@zju.edu.cn>\nHarald Albers <github@albersweb.de>\nHarald Niesche <harald@niesche.de>\nHarley Laue <losinggeneration@gmail.com>\nHarold Cooper <hrldcpr@gmail.com>\nHarrison Turton <harrisonturton@gmail.com>\nHarry Zhang <harryz@hyper.sh>\nHarshal Patil <harshal.patil@in.ibm.com>\nHarshal Patil <harshalp@linux.vnet.ibm.com>\nHe Simei <hesimei@zju.edu.cn>\nHe Xiaoxi <tossmilestone@gmail.com>\nHe Xin <he_xinworld@126.com>\nheartlock <21521209@zju.edu.cn>\nHector Castro <hectcastro@gmail.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHenning Sprang <henning.sprang@gmail.com>\nHiroshi Hatake <hatake@clear-code.com>\nHiroyuki Sasagawa <hs19870702@gmail.com>\nHobofan <goisser94@gmail.com>\nHollie Teal <hollie@docker.com>\nHong Xu <hong@topbug.net>\nHongbin Lu <hongbin034@gmail.com>\nHongxu Jia <hongxu.jia@windriver.com>\nHonza Pokorny <me@honza.ca>\nHsing-Hui Hsu <hsinghui@amazon.com>\nHsing-Yu (David) Chen <davidhsingyuchen@gmail.com>\nhsinko <21551195@zju.edu.cn>\nHu Keping <hukeping@huawei.com>\nHu Tao <hutao@cn.fujitsu.com>\nHuajin Tong <fliterdashen@gmail.com>\nhuang-jl <1046678590@qq.com>\nHuanHuan Ye <logindaveye@gmail.com>\nHuanzhong Zhang <zhanghuanzhong90@gmail.com>\nHuayi Zhang <irachex@gmail.com>\nHugo Barrera <hugo@barrera.io>\nHugo Duncan <hugo@hugoduncan.org>\nHugo Marisco <0x6875676f@gmail.com>\nHui Kang <hkang.sunysb@gmail.com>\nHunter Blanks <hunter@twilio.com>\nhuqun <huqun@zju.edu.cn>\nHuu Nguyen <huu@prismskylabs.com>\nHyeongkyu Lee <hyeongkyu.lee@navercorp.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nIago López Galeiras <iago@kinvolk.io>\nIan Bishop <ianbishop@pace7.com>\nIan Bull <irbull@gmail.com>\nIan Calvert <ianjcalvert@gmail.com>\nIan Campbell <ian.campbell@docker.com>\nIan Chen <ianre657@gmail.com>\nIan Lee <IanLee1521@gmail.com>\nIan Main <imain@redhat.com>\nIan Philpot <ian.philpot@microsoft.com>\nIan Truslove <ian.truslove@gmail.com>\nIavael <iavaelooeyt@gmail.com>\nIcaro Seara <icaro.seara@gmail.com>\nIgnacio Capurro <icapurrofagian@gmail.com>\nIgor Dolzhikov <bluesriverz@gmail.com>\nIgor Karpovich <i.karpovich@currencysolutions.com>\nIliana Weller <iweller@amazon.com>\nIlkka Laukkanen <ilkka@ilkka.io>\nIllia Antypenko <ilya@antipenko.pp.ua>\nIllo Abdulrahim <abdulrahim.illo@nokia.com>\nIlya Dmitrichenko <errordeveloper@gmail.com>\nIlya Gusev <mail@igusev.ru>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nimalasong <2879499479@qq.com>\nimre Fitos <imre.fitos+github@gmail.com>\ninglesp <peter.inglesby@gmail.com>\nIngo Gottwald <in.gottwald@gmail.com>\nInnovimax <innovimax@gmail.com>\nIsaac Dupree <antispam@idupree.com>\nIsabel Jimenez <contact.isabeljimenez@gmail.com>\nIsaiah Grace <irgkenya4@gmail.com>\nIsao Jonas <isao.jonas@gmail.com>\nIskander Sharipov <quasilyte@gmail.com>\nIvan Babrou <ibobrik@gmail.com>\nIvan Fraixedes <ifcdev@gmail.com>\nIvan Grcic <igrcic@gmail.com>\nIvan Markin <sw@nogoegst.net>\nJ Bruni <joaohbruni@yahoo.com.br>\nJ. Nunn <jbnunn@gmail.com>\nJack Danger Canty <jackdanger@squareup.com>\nJack Laxson <jackjrabbit@gmail.com>\nJack Walker <90711509+j2walker@users.noreply.github.com>\nJacob Atzen <jacob@jacobatzen.dk>\nJacob Edelman <edelman.jd@gmail.com>\nJacob Tomlinson <jacob@tom.linson.uk>\nJacob Vallejo <jakeev@amazon.com>\nJacob Wen <jian.w.wen@oracle.com>\nJaime Cepeda <jcepedavillamayor@gmail.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Champlin <jake.champlin.27@gmail.com>\nJake Moshenko <jake@devtable.com>\nJake Sanders <jsand@google.com>\nJakub Drahos <jdrahos@pulsepoint.com>\nJakub Guzik <jakubmguzik@gmail.com>\nJames Allen <jamesallen0108@gmail.com>\nJames Carey <jecarey@us.ibm.com>\nJames Carr <james.r.carr@gmail.com>\nJames DeFelice <james.defelice@ishisystems.com>\nJames Harrison Fisher <jameshfisher@gmail.com>\nJames Kyburz <james.kyburz@gmail.com>\nJames Kyle <james@jameskyle.org>\nJames Lal <james@lightsofapollo.com>\nJames Mills <prologic@shortcircuit.net.au>\nJames Nesbitt <jnesbitt@mirantis.com>\nJames Nugent <james@jen20.com>\nJames Sanders <james3sanders@gmail.com>\nJames Turnbull <james@lovedthanlost.net>\nJames Watkins-Harvey <jwatkins@progi-media.com>\nJamie Hannaford <jamie@limetree.org>\nJamshid Afshar <jafshar@yahoo.com>\nJan Breig <git@pygos.space>\nJan Chren <dev.rindeal@gmail.com>\nJan Garcia <github-public@n-garcia.com>\nJan Götte <jaseg@jaseg.net>\nJan Keromnes <janx@linux.com>\nJan Koprowski <jan.koprowski@gmail.com>\nJan Pazdziora <jpazdziora@redhat.com>\nJan Toebes <jan@toebes.info>\nJan-Gerd Tenberge <janten@gmail.com>\nJan-Jaap Driessen <janjaapdriessen@gmail.com>\nJana Radhakrishnan <mrjana@docker.com>\nJannick Fahlbusch <git@jf-projects.de>\nJanuar Wayong <januar@gmail.com>\nJared Biel <jared.biel@bolderthinking.com>\nJared Hocutt <jaredh@netapp.com>\nJaroslav Jindrak <dzejrou@gmail.com>\nJaroslaw Zabiello <hipertracker@gmail.com>\nJasmine Hegman <jasmine@jhegman.com>\nJason A. Donenfeld <Jason@zx2c4.com>\nJason Divock <jdivock@gmail.com>\nJason Giedymin <jasong@apache.org>\nJason Green <Jason.Green@AverInformatics.Com>\nJason Hall <imjasonh@gmail.com>\nJason Heiss <jheiss@aput.net>\nJason Livesay <ithkuil@gmail.com>\nJason McVetta <jason.mcvetta@gmail.com>\nJason Plum <jplum@devonit.com>\nJason Shepherd <jason@jasonshepherd.net>\nJason Smith <jasonrichardsmith@gmail.com>\nJason Sommer <jsdirv@gmail.com>\nJason Stangroome <jason@codeassassin.com>\nJasper Siepkes <siepkes@serviceplanet.nl>\nJavier Bassi <javierbassi@gmail.com>\njaxgeller <jacksongeller@gmail.com>\nJay <teguhwpurwanto@gmail.com>\nJay Kamat <github@jgkamat.33mail.com>\nJay Lim <jay@imjching.com>\nJean Rouge <rougej+github@gmail.com>\nJean-Baptiste Barth <jeanbaptiste.barth@gmail.com>\nJean-Baptiste Dalido <jeanbaptiste@appgratis.com>\nJean-Christophe Berthon <huygens@berthon.eu>\nJean-Michel Rouet <jm.rouet@gmail.com>\nJean-Paul Calderone <exarkun@twistedmatrix.com>\nJean-Pierre Huynh <jean-pierre.huynh@ounet.fr>\nJean-Tiare Le Bigot <jt@yadutaf.fr>\nJeeva S. Chelladhurai <sjeeva@gmail.com>\nJeff Anderson <jeff@docker.com>\nJeff Hajewski <jeff.hajewski@gmail.com>\nJeff Johnston <jeff.johnston.mn@gmail.com>\nJeff Lindsay <progrium@gmail.com>\nJeff Mickey <j@codemac.net>\nJeff Minard <jeff@creditkarma.com>\nJeff Nickoloff <jeff.nickoloff@gmail.com>\nJeff Silberman <jsilberm@gmail.com>\nJeff Welch <whatthejeff@gmail.com>\nJeff Zvier <zvier20@gmail.com>\nJeffrey Bolle <jeffreybolle@gmail.com>\nJeffrey Morgan <jmorganca@gmail.com>\nJeffrey van Gogh <jvg@google.com>\nJenny Gebske <jennifer@gebske.de>\nJeongseok Kang <piono623@naver.com>\nJeremy Chambers <jeremy@thehipbot.com>\nJeremy Grosser <jeremy@synack.me>\nJeremy Huntwork <jhuntwork@lightcubesolutions.com>\nJeremy Price <jprice.rhit@gmail.com>\nJeremy Qian <vanpire110@163.com>\nJeremy Unruh <jeremybunruh@gmail.com>\nJeremy Yallop <yallop@docker.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJeroen Jacobs <github@jeroenj.be>\nJesse Dearing <jesse.dearing@gmail.com>\nJesse Dubay <jesse@thefortytwo.net>\nJessica Frazelle <jess@oxide.computer>\nJeyanthinath Muthuram <jeyanthinath10@gmail.com>\nJezeniel Zapanta <jpzapanta22@gmail.com>\nJhon Honce <jhonce@redhat.com>\nJi.Zhilong <zhilongji@gmail.com>\nJian Liao <jliao@alauda.io>\nJian Zeng <anonymousknight96@gmail.com>\nJian Zhang <zhangjian.fnst@cn.fujitsu.com>\nJiang Jinyang <jjyruby@gmail.com>\nJianyong Wu <jianyong.wu@arm.com>\nJie Luo <luo612@zju.edu.cn>\nJie Ma <jienius@outlook.com>\nJihyun Hwang <jhhwang@telcoware.com>\nJilles Oldenbeuving <ojilles@gmail.com>\nJim Alateras <jima@comware.com.au>\nJim Carroll <jim.carroll@docker.com>\nJim Ehrismann <jim.ehrismann@docker.com>\nJim Galasyn <jim.galasyn@docker.com>\nJim Lin <b04705003@ntu.edu.tw>\nJim Minter <jminter@redhat.com>\nJim Perrin <jperrin@centos.org>\nJimmy Cuadra <jimmy@jimmycuadra.com>\nJimmy Puckett <jimmy.puckett@spinen.com>\nJimmy Song <rootsongjc@gmail.com>\nJinsoo Park <cellpjs@gmail.com>\nJintao Zhang <zhangjintao9020@gmail.com>\nJiri Appl <jiria@microsoft.com>\nJiri Popelka <jpopelka@redhat.com>\nJiuyue Ma <majiuyue@huawei.com>\nJiří Župka <jzupka@redhat.com>\nJoakim Roubert <joakim.roubert@axis.com>\nJoao Fernandes <joao.fernandes@docker.com>\nJoao Trindade <trindade.joao@gmail.com>\nJoe Beda <joe.github@bedafamily.com>\nJoe Doliner <jdoliner@pachyderm.io>\nJoe Ferguson <joe@infosiftr.com>\nJoe Gordon <joe.gordon0@gmail.com>\nJoe Shaw <joe@joeshaw.org>\nJoe Van Dyk <joe@tanga.com>\nJoel Friedly <joelfriedly@gmail.com>\nJoel Handwell <joelhandwell@gmail.com>\nJoel Hansson <joel.hansson@ecraft.com>\nJoel Wurtz <jwurtz@jolicode.com>\nJoey Geiger <jgeiger@gmail.com>\nJoey Geiger <jgeiger@users.noreply.github.com>\nJoey Gibson <joey@joeygibson.com>\nJoffrey F <joffrey@docker.com>\nJohan Euphrosine <proppy@google.com>\nJohan Rydberg <johan.rydberg@gmail.com>\nJohanan Lieberman <johanan.lieberman@gmail.com>\nJohannes 'fish' Ziemke <github@freigeist.org>\nJohn Costa <john.costa@gmail.com>\nJohn Feminella <jxf@jxf.me>\nJohn Gardiner Myers <jgmyers@proofpoint.com>\nJohn Gossman <johngos@microsoft.com>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Laswell <john.n.laswell@gmail.com>\nJohn Maguire <jmaguire@duosecurity.com>\nJohn Mulhausen <john@docker.com>\nJohn OBrien III <jobrieniii@yahoo.com>\nJohn Starks <jostarks@microsoft.com>\nJohn Stephens <johnstep@docker.com>\nJohn Tims <john.k.tims@gmail.com>\nJohn V. Martinez <jvmatl@gmail.com>\nJohn Warwick <jwarwick@gmail.com>\nJohn Willis <john.willis@docker.com>\nJon Johnson <jonjohnson@google.com>\nJon Surrell <jon.surrell@gmail.com>\nJon Wedaman <jweede@gmail.com>\nJonas Dohse <jonas@dohse.ch>\nJonas Geiler <git@jonasgeiler.com>\nJonas Heinrich <Jonas@JonasHeinrich.com>\nJonas Pfenniger <jonas@pfenniger.name>\nJonathan A. Schweder <jonathanschweder@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan Boulle <jonathanboulle@gmail.com>\nJonathan Camp <jonathan@irondojo.com>\nJonathan Choy <jonathan.j.choy@gmail.com>\nJonathan Dowland <jon+github@alcopop.org>\nJonathan Lebon <jlebon@redhat.com>\nJonathan Lomas <jonathan@floatinglomas.ca>\nJonathan McCrohan <jmccrohan@gmail.com>\nJonathan Mueller <j.mueller@apoveda.ch>\nJonathan Pares <jonathanpa@users.noreply.github.com>\nJonathan Rudenberg <jonathan@titanous.com>\nJonathan Stoppani <jonathan.stoppani@divio.com>\nJonh Wendell <jonh.wendell@redhat.com>\nJoni Sar <yoni@cocycles.com>\nJoost Cassee <joost@cassee.net>\nJordan Arentsen <blissdev@gmail.com>\nJordan Jennings <jjn2009@gmail.com>\nJordan Sissel <jls@semicomplete.com>\nJordi Massaguer Pla <jmassaguerpla@suse.de>\nJorge Marin <chipironcin@users.noreply.github.com>\nJorit Kleine-Möllhoff <joppich@bricknet.de>\nJose Diaz-Gonzalez <email@josediazgonzalez.com>\nJoseph Anthony Pasquale Holsten <joseph@josephholsten.com>\nJoseph Hager <ajhager@gmail.com>\nJoseph Kern <jkern@semafour.net>\nJoseph Rothrock <rothrock@rothrock.org>\nJosh <jokajak@gmail.com>\nJosh Bodah <jb3689@yahoo.com>\nJosh Bonczkowski <josh.bonczkowski@gmail.com>\nJosh Chorlton <jchorlton@gmail.com>\nJosh Eveleth <joshe@opendns.com>\nJosh Hawn <josh.hawn@docker.com>\nJosh Horwitz <horwitz@addthis.com>\nJosh Poimboeuf <jpoimboe@redhat.com>\nJosh Soref <jsoref@gmail.com>\nJosh Wilson <josh.wilson@fivestars.com>\nJosiah Kiehl <jkiehl@riotgames.com>\nJosé Tomás Albornoz <jojo@eljojo.net>\nJoyce Jang <mail@joycejang.com>\nJP <jpellerin@leapfrogonline.com>\nJulian Taylor <jtaylor.debian@googlemail.com>\nJulien Barbier <write0@gmail.com>\nJulien Bisconti <veggiemonk@users.noreply.github.com>\nJulien Bordellier <julienbordellier@gmail.com>\nJulien Dubois <julien.dubois@gmail.com>\nJulien Kassar <github@kassisol.com>\nJulien Maitrehenry <julien.maitrehenry@me.com>\nJulien Pervillé <julien.perville@perfect-memory.com>\nJulien Pivotto <roidelapluie@inuits.eu>\nJulio Guerra <julio@sqreen.com>\nJulio Montes <imc.coder@gmail.com>\nJun Du <dujun5@huawei.com>\nJun-Ru Chang <jrjang@gmail.com>\njunxu <xujun@cmss.chinamobile.com>\nJussi Nummelin <jussi.nummelin@gmail.com>\nJustas Brazauskas <brazauskasjustas@gmail.com>\nJusten Martin <jmart@the-coder.com>\nJustin Chadwell <me@jedevc.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Force <justin.force@gmail.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com>\nJustin Menga <justin.menga@gmail.com>\nJustin Plock <jplock@users.noreply.github.com>\nJustin Simonelis <justin.p.simonelis@gmail.com>\nJustin Terry <juterry@microsoft.com>\nJustyn Temme <justyntemme@gmail.com>\nJyrki Puttonen <jyrkiput@gmail.com>\nJérémy Leherpeur <amenophis@leherpeur.net>\nJérôme Petazzoni <jerome.petazzoni@docker.com>\nJörg Thalheim <joerg@higgsboson.tk>\nK. Heller <pestophagous@gmail.com>\nKai Blin <kai@samba.org>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKaijie Chen <chen@kaijie.org>\nKamil Domański <kamil@domanski.co>\nKamjar Gerami <kami.gerami@gmail.com>\nKanstantsin Shautsou <kanstantsin.sha@gmail.com>\nKara Alexandra <kalexandra@us.ibm.com>\nKaran Lyons <karan@karanlyons.com>\nKareem Khazem <karkhaz@karkhaz.com>\nkargakis <kargakis@users.noreply.github.com>\nKarl Grzeszczak <karlgrz@gmail.com>\nKarol Duleba <mr.fuxi@gmail.com>\nKarthik Karanth <karanth.karthik@gmail.com>\nKarthik Nayak <karthik.188@gmail.com>\nKasper Fabæch Brandt <poizan@poizan.dk>\nKate Heddleston <kate.heddleston@gmail.com>\nKatie McLaughlin <katie@glasnt.com>\nKato Kazuyoshi <kato.kazuyoshi@gmail.com>\nKatrina Owen <katrina.owen@gmail.com>\nKawsar Saiyeed <kawsar.saiyeed@projiris.com>\nKay Yan <kay.yan@daocloud.io>\nkayrus <kay.diam@gmail.com>\nKazuhiro Sera <seratch@gmail.com>\nKazuyoshi Kato <katokazu@amazon.com>\nKe Li <kel@splunk.com>\nKe Xu <leonhartx.k@gmail.com>\nKei Ohmura <ohmura.kei@gmail.com>\nKeith Hudgins <greenman@greenman.org>\nKeli Hu <dev@keli.hu>\nKen Bannister <kb2ma@runbox.com>\nKen Cochrane <kencochrane@gmail.com>\nKen Herner <kherner@progress.com>\nKen ICHIKAWA <ichikawa.ken@jp.fujitsu.com>\nKen Reese <krrgithub@gmail.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKenjiro Nakayama <nakayamakenjiro@gmail.com>\nKent Johnson <kentoj@gmail.com>\nKenta Tada <Kenta.Tada@sony.com>\nKevin \"qwazerty\" Houdebert <kevin.houdebert@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Burke <kev@inburke.com>\nKevin Clark <kevin.clark@gmail.com>\nKevin Feyrer <kevin.feyrer@btinternet.com>\nKevin J. Lynagh <kevin@keminglabs.com>\nKevin Jing Qiu <kevin@idempotent.ca>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Menard <kevin@nirvdrum.com>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKevin P. Kucharczyk <kevinkucharczyk@gmail.com>\nKevin Parsons <kevpar@microsoft.com>\nKevin Richardson <kevin@kevinrichardson.co>\nKevin Shi <kshi@andrew.cmu.edu>\nKevin Wallace <kevin@pentabarf.net>\nKevin Yap <me@kevinyap.ca>\nKeyvan Fatehi <keyvanfatehi@gmail.com>\nkies <lleelm@gmail.com>\nKim BKC Carlbacker <kim.carlbacker@gmail.com>\nKim Eik <kim@heldig.org>\nKimbro Staken <kstaken@kstaken.com>\nKir Kolyshkin <kolyshkin@gmail.com>\nKiran Gangadharan <kiran.daredevil@gmail.com>\nKirill SIbirev <l0kix2@gmail.com>\nKirk Easterson <kirk.easterson@gmail.com>\nknappe <tyler.knappe@gmail.com>\nKohei Tsuruta <coheyxyz@gmail.com>\nKoichi Shiraishi <k@zchee.io>\nKonrad Kleine <konrad.wilhelm.kleine@gmail.com>\nKonrad Ponichtera <konpon96@gmail.com>\nKonstantin Gribov <grossws@gmail.com>\nKonstantin L <sw.double@gmail.com>\nKonstantin Pelykh <kpelykh@zettaset.com>\nKostadin Plachkov <k.n.plachkov@gmail.com>\nkpcyrd <git@rxv.cc>\nKrasi Georgiev <krasi@vip-consult.solutions>\nKrasimir Georgiev <support@vip-consult.co.uk>\nKris-Mikael Krister <krismikael@protonmail.com>\nKristian Haugene <kristian.haugene@capgemini.com>\nKristina Zabunova <triara.xiii@gmail.com>\nKrystian Wojcicki <kwojcicki@sympatico.ca>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKunal Tyagi <tyagi.kunal@live.com>\nKyle Conroy <kyle.j.conroy@gmail.com>\nKyle Linden <linden.kyle@gmail.com>\nKyle Squizzato <ksquizz@gmail.com>\nKyle Wuolle <kyle.wuolle@gmail.com>\nkyu <leehk1227@gmail.com>\nLachlan Coote <lcoote@vmware.com>\nLai Jiangshan <jiangshanlai@gmail.com>\nLajos Papp <lajos.papp@sequenceiq.com>\nLakshan Perera <lakshan@laktek.com>\nLalatendu Mohanty <lmohanty@redhat.com>\nLance Chen <cyen0312@gmail.com>\nLance Kinley <lkinley@loyaltymethods.com>\nLars Andringa <l.s.andringa@rug.nl>\nLars Butler <Lars.Butler@gmail.com>\nLars Kellogg-Stedman <lars@redhat.com>\nLars R. Damerow <lars@pixar.com>\nLars-Magnus Skog <ralphtheninja@riseup.net>\nLaszlo Meszaros <lacienator@gmail.com>\nLaura Brehm <laurabrehm@hey.com>\nLaura Frank <ljfrank@gmail.com>\nLaurent Bernaille <laurent.bernaille@datadoghq.com>\nLaurent Erignoux <lerignoux@gmail.com>\nLaurie Voss <github@seldo.com>\nLeandro Motta Barros <lmb@stackedboxes.org>\nLeandro Siqueira <leandro.siqueira@gmail.com>\nLee Calcote <leecalcote@gmail.com>\nLee Chao <932819864@qq.com>\nLee, Meng-Han <sunrisedm4@gmail.com>\nLei Gong <lgong@alauda.io>\nLei Jitang <leijitang@huawei.com>\nLeiiwang <u2takey@gmail.com>\nLen Weincier <len@cloudafrica.net>\nLennie <github@consolejunkie.net>\nLeo Gallucci <elgalu3@gmail.com>\nLeonardo Nodari <me@leonardonodari.it>\nLeonardo Taccari <leot@NetBSD.org>\nLeszek Kowalski <github@leszekkowalski.pl>\nLevi Blackstone <levi.blackstone@rackspace.com>\nLevi Gross <levi@levigross.com>\nLevi Harrison <levisamuelharrison@gmail.com>\nLewis Daly <lewisdaly@me.com>\nLewis Marshall <lewis@lmars.net>\nLewis Peckover <lew+github@lew.io>\nLi Yi <denverdino@gmail.com>\nLiam Macgillavry <liam@kumina.nl>\nLiana Lo <liana.lixia@gmail.com>\nLiang Mingqiang <mqliang.zju@gmail.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nliangwei <liangwei14@huawei.com>\nLiao Qingwei <liaoqingwei@huawei.com>\nLifubang <lifubang@acmcoder.com>\nLihua Tang <lhtang@alauda.io>\nLily Guo <lily.guo@docker.com>\nlimeidan <limeidan@loongson.cn>\nLin Lu <doraalin@163.com>\nLingFaKe <lingfake@huawei.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLiran Tal <liran.tal@gmail.com>\nLiron Levin <liron@twistlock.com>\nLiu Bo <bo.li.liu@oracle.com>\nLiu Hua <sdu.liu@huawei.com>\nliwenqi <vikilwq@zju.edu.cn>\nlixiaobing10051267 <li.xiaobing1@zte.com.cn>\nLiz Zhang <lizzha@microsoft.com>\nLIZAO LI <lzlarryli@gmail.com>\nLizzie Dixon <_@lizzie.io>\nLloyd Dewolf <foolswisdom@gmail.com>\nLokesh Mandvekar <lsm5@fedoraproject.org>\nlongliqiang88 <394564827@qq.com>\nLorenz Leutgeb <lorenz.leutgeb@gmail.com>\nLorenzo Fontana <fontanalorenz@gmail.com>\nLotus Fenn <fenn.lotus@gmail.com>\nLouis Delossantos <ldelossa.ld@gmail.com>\nLouis Opter <kalessin@kalessin.fr>\nLuboslav Pivarc <lpivarc@redhat.com>\nLuca Favatella <luca.favatella@erlang-solutions.com>\nLuca Marturana <lucamarturana@gmail.com>\nLuca Orlandi <luca.orlandi@gmail.com>\nLuca-Bogdan Grigorescu <Luca-Bogdan Grigorescu>\nLucas Chan <lucas-github@lucaschan.com>\nLucas Chi <lucas@teacherspayteachers.com>\nLucas Molas <lmolas@fundacionsadosky.org.ar>\nLucas Silvestre <lukas.silvestre@gmail.com>\nLuciano Mores <leslau@gmail.com>\nLuis Henrique Mulinari <luis.mulinari@gmail.com>\nLuis Martínez de Bartolomé Izquierdo <lmartinez@biicode.com>\nLuiz Svoboda <luizek@gmail.com>\nLukas Heeren <lukas-heeren@hotmail.com>\nLukas Waslowski <cr7pt0gr4ph7@gmail.com>\nlukaspustina <lukas.pustina@centerdevice.com>\nLukasz Zajaczkowski <Lukasz.Zajaczkowski@ts.fujitsu.com>\nLuke Marsden <me@lukemarsden.net>\nLyn <energylyn@zju.edu.cn>\nLynda O'Leary <lyndaoleary29@gmail.com>\nLénaïc Huard <lhuard@amadeus.com>\nMa Müller <mueller-ma@users.noreply.github.com>\nMa Shimiao <mashimiao.fnst@cn.fujitsu.com>\nMabin <bin.ma@huawei.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com>\nMadhav Puri <madhav.puri@gmail.com>\nMadhu Venugopal <mavenugo@gmail.com>\nMageee <fangpuyi@foxmail.com>\nMahesh Tiyyagura <tmahesh@gmail.com>\nmalnick <malnick@gmail..com>\nMalte Janduda <mail@janduda.net>\nManfred Touron <m@42.am>\nManfred Zabarauskas <manfredas@zabarauskas.com>\nManjunath A Kumatagi <mkumatag@in.ibm.com>\nMansi Nahar <mmn4185@rit.edu>\nManuel Meurer <manuel@krautcomputing.com>\nManuel Rüger <manuel@rueg.eu>\nManuel Woelker <github@manuel.woelker.org>\nmapk0y <mapk0y@gmail.com>\nMarat Radchenko <marat@slonopotamus.org>\nMarc Abramowitz <marc@marc-abramowitz.com>\nMarc Kuo <kuomarc2@gmail.com>\nMarc Tamsky <mtamsky@gmail.com>\nMarcel Edmund Franke <marcel.edmund.franke@gmail.com>\nMarcelo Horacio Fortino <info@fortinux.com>\nMarcelo Salazar <chelosalazar@gmail.com>\nMarco Hennings <marco.hennings@freiheit.com>\nMarcus Cobden <mcobden@cisco.com>\nMarcus Farkas <toothlessgear@finitebox.com>\nMarcus Linke <marcus.linke@gmx.de>\nMarcus Martins <marcus@docker.com>\nMarcus Ramberg <marcus@nordaaker.com>\nMarek Goldmann <marek.goldmann@gmail.com>\nMarian Marinov <mm@yuhu.biz>\nMarianna Tessel <mtesselh@gmail.com>\nMario Loriedo <mario.loriedo@gmail.com>\nMarius Gundersen <me@mariusgundersen.net>\nMarius Sturm <marius@graylog.com>\nMarius Voila <marius.voila@gmail.com>\nMark Allen <mrallen1@yahoo.com>\nMark Feit <mfeit@internet2.edu>\nMark Jeromin <mark.jeromin@sysfrog.net>\nMark McGranaghan <mmcgrana@gmail.com>\nMark McKinstry <mmckinst@umich.edu>\nMark Milstein <mark@epiloque.com>\nMark Oates <fl0yd@me.com>\nMark Parker <godefroi@users.noreply.github.com>\nMark Vainomaa <mikroskeem@mikroskeem.eu>\nMark West <markewest@gmail.com>\nMarkan Patel <mpatel678@gmail.com>\nMarko Mikulicic <mmikulicic@gmail.com>\nMarko Tibold <marko@tibold.nl>\nMarkus Fix <lispmeister@gmail.com>\nMarkus Kortlang <hyp3rdino@googlemail.com>\nMartijn Dwars <ikben@martijndwars.nl>\nMartijn van Oosterhout <kleptog@svana.org>\nMartin Braun <braun@neuroforge.de>\nMartin Dojcak <martin.dojcak@lablabs.io>\nMartin Honermeyer <maze@strahlungsfrei.de>\nMartin Jirku <martin@jirku.sk>\nMartin Kelly <martin@surround.io>\nMartin Mosegaard Amdisen <martin.amdisen@praqma.com>\nMartin Muzatko <martin@happy-css.com>\nMartin Redmond <redmond.martin@gmail.com>\nMaru Newby <mnewby@thesprawl.net>\nMary Anthony <mary.anthony@docker.com>\nMasahito Zembutsu <zembutsu@users.noreply.github.com>\nMasato Ohba <over.rye@gmail.com>\nMasayuki Morita <minamijoyo@gmail.com>\nMason Malone <mason.malone@gmail.com>\nMateusz Sulima <sulima.mateusz@gmail.com>\nMathias Monnerville <mathias@monnerville.com>\nMathieu Champlon <mathieu.champlon@docker.com>\nMathieu Le Marec - Pasquet <kiorky@cryptelium.net>\nMathieu Parent <math.parent@gmail.com>\nMathieu Paturel <mathieu.paturel@gmail.com>\nMatt Apperson <me@mattapperson.com>\nMatt Bachmann <bachmann.matt@gmail.com>\nMatt Bajor <matt@notevenremotelydorky.com>\nMatt Bentley <matt.bentley@docker.com>\nMatt Haggard <haggardii@gmail.com>\nMatt Hoyle <matt@deployable.co>\nMatt McCormick <matt.mccormick@kitware.com>\nMatt Moore <mattmoor@google.com>\nMatt Morrison <3maven@gmail.com>\nMatt Richardson <matt@redgumtech.com.au>\nMatt Rickard <mrick@google.com>\nMatt Robenolt <matt@ydekproductions.com>\nMatt Schurenko <matt.schurenko@gmail.com>\nMatt Williams <mattyw@me.com>\nMatthew Heon <mheon@redhat.com>\nMatthew Lapworth <matthewl@bit-shift.net>\nMatthew Mayer <matthewkmayer@gmail.com>\nMatthew Mosesohn <raytrac3r@gmail.com>\nMatthew Mueller <mattmuelle@gmail.com>\nMatthew Riley <mattdr@google.com>\nMatthias Klumpp <matthias@tenstral.net>\nMatthias Kühnle <git.nivoc@neverbox.com>\nMatthias Rampke <mr@soundcloud.com>\nMatthieu Fronton <m@tthieu.fr>\nMatthieu Hauglustaine <matt.hauglustaine@gmail.com>\nMattias Jernberg <nostrad@gmail.com>\nMauricio Garavaglia <mauricio@medallia.com>\nmauriyouth <mauriyouth@gmail.com>\nMax Harmathy <max.harmathy@web.de>\nMax Shytikov <mshytikov@gmail.com>\nMax Timchenko <maxvt@pagerduty.com>\nMaxim Fedchyshyn <sevmax@gmail.com>\nMaxim Ivanov <ivanov.maxim@gmail.com>\nMaxim Kulkin <mkulkin@mirantis.com>\nMaxim Treskin <zerthurd@gmail.com>\nMaxime Petazzoni <max@signalfuse.com>\nMaximiliano Maccanti <maccanti@amazon.com>\nMaxwell <csuhp007@gmail.com>\nMeaglith Ma <genedna@gmail.com>\nmeejah <meejah@meejah.ca>\nMegan Kostick <mkostick@us.ibm.com>\nMehul Kar <mehul.kar@gmail.com>\nMei ChunTao <mei.chuntao@zte.com.cn>\nMengdi Gao <usrgdd@gmail.com>\nMenghui Chen <menghui.chen@alibaba-inc.com>\nMert Yazıcıoğlu <merty@users.noreply.github.com>\nmgniu <mgniu@dataman-inc.com>\nMicah Zoltu <micah@newrelic.com>\nMichael A. Smith <michael@smith-li.com>\nMichael Beskin <mrbeskin@gmail.com>\nMichael Bridgen <mikeb@squaremobius.net>\nMichael Brown <michael@netdirect.ca>\nMichael Chiang <mchiang@docker.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Currie <mcurrie@bruceforceresearch.com>\nMichael Friis <friism@gmail.com>\nMichael Gorsuch <gorsuch@github.com>\nMichael Grauer <michael.grauer@kitware.com>\nMichael Holzheu <holzheu@linux.vnet.ibm.com>\nMichael Hudson-Doyle <michael.hudson@canonical.com>\nMichael Huettermann <michael@huettermann.net>\nMichael Irwin <mikesir87@gmail.com>\nMichael Kebe <michael.kebe@hkm.de>\nMichael Kuehn <micha@kuehn.io>\nMichael Käufl <docker@c.michael-kaeufl.de>\nMichael Neale <michael.neale@gmail.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com>\nMichael Prokop <github@michael-prokop.at>\nMichael Scharf <github@scharf.gr>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichael Stapelberg <michael+gh@stapelberg.de>\nMichael Steinert <mike.steinert@gmail.com>\nMichael Thies <michaelthies78@gmail.com>\nMichael Weidmann <michaelweidmann@web.de>\nMichael West <mwest@mdsol.com>\nMichael Zhao <michael.zhao@arm.com>\nMichal Fojtik <mfojtik@redhat.com>\nMichal Gebauer <mishak@mishak.net>\nMichal Jemala <michal.jemala@gmail.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com>\nMichal Minář <miminar@redhat.com>\nMichal Rostecki <mrostecki@opensuse.org>\nMichal Wieczorek <wieczorek-michal@wp.pl>\nMichaël Pailloncy <mpapo.dev@gmail.com>\nMichał Czeraszkiewicz <czerasz@gmail.com>\nMichał Gryko <github@odkurzacz.org>\nMichał Kosek <mihao@users.noreply.github.com>\nMichiel de Jong <michiel@unhosted.org>\nMickaël Fortunato <morsi.morsicus@gmail.com>\nMickaël Remars <mickael@remars.com>\nMiguel Angel Fernández <elmendalerenda@gmail.com>\nMiguel Morales <mimoralea@gmail.com>\nMiguel Perez <miguel@voyat.com>\nMihai Borobocea <MihaiBorob@gmail.com>\nMihuleacc Sergiu <mihuleac.sergiu@gmail.com>\nMikael Davranche <mikael.davranche@corp.ovh.com>\nMike Brown <brownwm@us.ibm.com>\nMike Bush <mpbush@gmail.com>\nMike Casas <mkcsas0@gmail.com>\nMike Chelen <michael.chelen@gmail.com>\nMike Danese <mikedanese@google.com>\nMike Dillon <mike@embody.org>\nMike Dougherty <mike.dougherty@docker.com>\nMike Estes <mike.estes@logos.com>\nMike Gaffney <mike@uberu.com>\nMike Goelzer <mike.goelzer@docker.com>\nMike Leone <mleone896@gmail.com>\nMike Lundy <mike@fluffypenguin.org>\nMike MacCana <mike.maccana@gmail.com>\nMike Naberezny <mike@naberezny.com>\nMike Snitzer <snitzer@redhat.com>\nMike Sul <mike.sul@foundries.io>\nmikelinjie <294893458@qq.com>\nMikhail Sobolev <mss@mawhrin.net>\nMiklos Szegedi <miklos.szegedi@cloudera.com>\nMilas Bowman <devnull@milas.dev>\nMilind Chawre <milindchawre@gmail.com>\nMiloslav Trmač <mitr@redhat.com>\nmingqing <limingqing@cyou-inc.com>\nMingzhen Feng <fmzhen@zju.edu.cn>\nMisty Stanley-Jones <misty@docker.com>\nMitch Capper <mitch.capper@gmail.com>\nMizuki Urushida <z11111001011@gmail.com>\nmlarcher <github@ringabell.org>\nMohammad Banikazemi <MBanikazemi@gmail.com>\nMohammad Nasirifar <farnasirim@gmail.com>\nMohammed Aaqib Ansari <maaquib@gmail.com>\nMohd Sadiq <mohdsadiq058@gmail.com>\nMohit Soni <mosoni@ebay.com>\nMoorthy RS <rsmoorthy@gmail.com>\nMorgan Bauer <mbauer@us.ibm.com>\nMorgante Pell <morgante.pell@morgante.net>\nMorgy93 <thomas@ulfertsprygoda.de>\nMorten Siebuhr <sbhr@sbhr.dk>\nMorton Fox <github@qslw.com>\nMoysés Borges <moysesb@gmail.com>\nmrfly <mr.wrfly@gmail.com>\nMrunal Patel <mrunalp@gmail.com>\nMuayyad Alsadi <alsadi@gmail.com>\nMuhammad Zohaib Aslam <zohaibse011@gmail.com>\nMustafa Akın <mustafa91@gmail.com>\nMuthukumar R <muthur@gmail.com>\nMáximo Cuadros <mcuadros@gmail.com>\nMédi-Rémi Hashim <medimatrix@users.noreply.github.com>\nNace Oroz <orkica@gmail.com>\nNahum Shalman <nshalman@omniti.com>\nNakul Pathak <nakulpathak3@hotmail.com>\nNalin Dahyabhai <nalin@redhat.com>\nNan Monnand Deng <monnand@gmail.com>\nNaoki Orii <norii@cs.cmu.edu>\nNatalie Parker <nparker@omnifone.com>\nNatanael Copa <natanael.copa@docker.com>\nNatasha Jarus <linuxmercedes@gmail.com>\nNate Brennand <nate.brennand@clever.com>\nNate Eagleson <nate@nateeag.com>\nNate Jones <nate@endot.org>\nNathan Carlson <carl4403@umn.edu>\nNathan Herald <me@nathanherald.com>\nNathan Hsieh <hsieh.nathan@gmail.com>\nNathan Kleyn <nathan@nathankleyn.com>\nNathan LeClaire <nathan.leclaire@docker.com>\nNathan McCauley <nathan.mccauley@docker.com>\nNathan Williams <nathan@teamtreehouse.com>\nNaveed Jamil <naveed.jamil@tenpearls.com>\nNeal McBurnett <neal@mcburnett.org>\nNeil Horman <nhorman@tuxdriver.com>\nNeil Peterson <neilpeterson@outlook.com>\nNelson Chen <crazysim@gmail.com>\nNeyazul Haque <nuhaque@gmail.com>\nNghia Tran <nghia@google.com>\nNiall O'Higgins <niallo@unworkable.org>\nNicholas E. Rabenau <nerab@gmx.at>\nNick Adcock <nick.adcock@docker.com>\nNick DeCoursin <n.decoursin@foodpanda.com>\nNick Irvine <nfirvine@nfirvine.com>\nNick Neisen <nwneisen@gmail.com>\nNick Parker <nikaios@gmail.com>\nNick Payne <nick@kurai.co.uk>\nNick Russo <nicholasjamesrusso@gmail.com>\nNick Santos <nick.santos@docker.com>\nNick Stenning <nick.stenning@digital.cabinet-office.gov.uk>\nNick Stinemates <nick@stinemates.org>\nNick Wood <nwood@microsoft.com>\nNickrenREN <yuquan.ren@easystack.cn>\nNicola Kabar <nicolaka@gmail.com>\nNicolas Borboën <ponsfrilus@gmail.com>\nNicolas De Loof <nicolas.deloof@gmail.com>\nNicolas Dudebout <nicolas.dudebout@gatech.edu>\nNicolas Goy <kuon@goyman.com>\nNicolas Kaiser <nikai@nikai.net>\nNicolas Sterchele <sterchele.nicolas@gmail.com>\nNicolas V Castet <nvcastet@us.ibm.com>\nNicolás Hock Isaza <nhocki@gmail.com>\nNiel Drummond <niel@drummond.lu>\nNigel Poulton <nigelpoulton@hotmail.com>\nNik Nyby <nikolas@gnu.org>\nNikhil Chawla <chawlanikhil24@gmail.com>\nNikolaMandic <mn080202@gmail.com>\nNikolas Garofil <nikolas.garofil@uantwerpen.be>\nNikolay Edigaryev <edigaryev@gmail.com>\nNikolay Milovanov <nmil@itransformers.net>\nningmingxiao <ning.mingxiao@zte.com.cn>\nNirmal Mehta <nirmalkmehta@gmail.com>\nNishant Totla <nishanttotla@gmail.com>\nNIWA Hideyuki <niwa.niwa@nifty.ne.jp>\nNoah Meyerhans <nmeyerha@amazon.com>\nNoah Treuhaft <noah.treuhaft@docker.com>\nNobodyOnSE <ich@sektor.selfip.com>\nnoducks <onemannoducks@gmail.com>\nNolan Darilek <nolan@thewordnerd.info>\nNolan Miles <nolanpmiles@gmail.com>\nNoriki Nakamura <noriki.nakamura@miraclelinux.com>\nnponeccop <andy.melnikov@gmail.com>\nNurahmadie <nurahmadie@gmail.com>\nNuutti Kotivuori <naked@iki.fi>\nnzwsch <hi@nzwsch.com>\nO.S. Tezer <ostezer@gmail.com>\nobjectified <objectified@gmail.com>\nOdin Ugedal <odin@ugedal.com>\nOguz Bilgic <fisyonet@gmail.com>\nOh Jinkyun <tintypemolly@gmail.com>\nOhad Schneider <ohadschn@users.noreply.github.com>\nohmystack <jun.jiang02@ele.me>\nOle Reifschneider <mail@ole-reifschneider.de>\nOliver Neal <ItsVeryWindy@users.noreply.github.com>\nOliver Reason <oli@overrateddev.co>\nOlivier Gambier <dmp42@users.noreply.github.com>\nOlle Jonsson <olle.jonsson@gmail.com>\nOlli Janatuinen <olli.janatuinen@gmail.com>\nOlly Pomeroy <oppomeroy@gmail.com>\nOmri Shiv <Omri.Shiv@teradata.com>\nOnur Filiz <onur.filiz@microsoft.com>\nOriol Francès <oriolfa@gmail.com>\nOscar Bonilla <6f6231@gmail.com>\noscar.chen <2972789494@qq.com>\nOskar Niburski <oskarniburski@gmail.com>\nOtto Kekäläinen <otto@seravo.fi>\nOuyang Liduo <oyld0210@163.com>\nOvidio Mallo <ovidio.mallo@gmail.com>\nPanagiotis Moustafellos <pmoust@elastic.co>\nPaolo G. Giarrusso <p.giarrusso@gmail.com>\nPascal <pascalgn@users.noreply.github.com>\nPascal Bach <pascal.bach@siemens.com>\nPascal Borreli <pascal@borreli.com>\nPascal Hartig <phartig@rdrei.net>\nPatrick Böänziger <patrick.baenziger@bsi-software.com>\nPatrick Devine <patrick.devine@docker.com>\nPatrick Haas <patrickhaas@google.com>\nPatrick Hemmer <patrick.hemmer@gmail.com>\nPatrick St. laurent <patrick@saint-laurent.us>\nPatrick Stapleton <github@gdi2290.com>\nPatrik Cyvoct <patrik@ptrk.io>\npattichen <craftsbear@gmail.com>\nPaul \"TBBle\" Hampson <Paul.Hampson@Pobox.com>\nPaul <paul9869@gmail.com>\npaul <paul@inkling.com>\nPaul Annesley <paul@annesley.cc>\nPaul Bellamy <paul.a.bellamy@gmail.com>\nPaul Bowsher <pbowsher@globalpersonals.co.uk>\nPaul Furtado <pfurtado@hubspot.com>\nPaul Hammond <paul@paulhammond.org>\nPaul Jimenez <pj@place.org>\nPaul Kehrer <paul.l.kehrer@gmail.com>\nPaul Lietar <paul@lietar.net>\nPaul Liljenberg <liljenberg.paul@gmail.com>\nPaul Morie <pmorie@gmail.com>\nPaul Nasrat <pnasrat@gmail.com>\nPaul Seiffert <paul.seiffert@jimdo.com>\nPaul Weaver <pauweave@cisco.com>\nPaulo Gomes <pjbgf@linux.com>\nPaulo Ribeiro <paigr.io@gmail.com>\nPavel Lobashov <ShockwaveNN@gmail.com>\nPavel Matěja <pavel@verotel.cz>\nPavel Pletenev <cpp.create@gmail.com>\nPavel Pospisil <pospispa@gmail.com>\nPavel Sutyrin <pavel.sutyrin@gmail.com>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com>\nPavlos Ratis <dastergon@gentoo.org>\nPavol Vargovcik <pallly.vargovcik@gmail.com>\nPawel Konczalski <mail@konczalski.de>\nPaweł Gronowski <pawel.gronowski@docker.com>\npayall4u <payall4u@qq.com>\nPeeyush Gupta <gpeeyush@linux.vnet.ibm.com>\nPeggy Li <peggyli.224@gmail.com>\nPei Su <sillyousu@gmail.com>\nPeng Tao <bergwolf@gmail.com>\nPenghan Wang <ph.wang@daocloud.io>\nPer Weijnitz <per.weijnitz@gmail.com>\nperhapszzy@sina.com <perhapszzy@sina.com>\nPete Woods <pete.woods@circleci.com>\nPeter Bourgon <peter@bourgon.org>\nPeter Braden <peterbraden@peterbraden.co.uk>\nPeter Bücker <peter.buecker@pressrelations.de>\nPeter Choi <phkchoi89@gmail.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Edge <peter.edge@gmail.com>\nPeter Ericson <pdericson@gmail.com>\nPeter Esbensen <pkesbensen@gmail.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Kang <peter@spell.run>\nPeter Malmgren <ptmalmgren@gmail.com>\nPeter Salvatore <peter@psftw.com>\nPeter Volpe <petervo@redhat.com>\nPeter Waller <p@pwaller.net>\nPetr Švihlík <svihlik.petr@gmail.com>\nPetros Angelatos <petrosagg@gmail.com>\nPhil <underscorephil@gmail.com>\nPhil Estes <estesp@gmail.com>\nPhil Sphicas <phil.sphicas@att.com>\nPhil Spitler <pspitler@gmail.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilip K. Warren <pkwarren@gmail.com>\nPhilip Monroe <phil@philmonroe.com>\nPhilipp Fruck <dev@p-fruck.de>\nPhilipp Gillé <philipp.gille@gmail.com>\nPhilipp Wahala <philipp.wahala@gmail.com>\nPhilipp Weissensteiner <mail@philippweissensteiner.com>\nPhillip Alexander <git@phillipalexander.io>\nphineas <phin@phineas.io>\npidster <pid@pidster.com>\nPiergiuliano Bossi <pgbossi@gmail.com>\nPierre <py@poujade.org>\nPierre Carrier <pierre@meteor.com>\nPierre Dal-Pra <dalpra.pierre@gmail.com>\nPierre Wacrenier <pierre.wacrenier@gmail.com>\nPierre-Alain RIVIERE <pariviere@ippon.fr>\nPiotr Bogdan <ppbogdan@gmail.com>\nPiotr Karbowski <piotr.karbowski@protonmail.ch>\nPorjo <porjo38@yahoo.com.au>\nPoul Kjeldager Sørensen <pks@s-innovations.net>\nPradeep Chhetri <pradeep@indix.com>\nPradip Dhara <pradipd@microsoft.com>\nPradipta Kr. Banerjee <bpradip@in.ibm.com>\nPrasanna Gautam <prasannagautam@gmail.com>\nPratik Karki <prertik@outlook.com>\nPrayag Verma <prayag.verma@gmail.com>\nPriya Wadhwa <priyawadhwa@google.com>\nProjjol Banerji <probaner23@gmail.com>\nPrzemek Hejman <przemyslaw.hejman@gmail.com>\nPuneet Pruthi <puneet.pruthi@oracle.com>\nPure White <daniel48@126.com>\npysqz <randomq@126.com>\nQiang Huang <h.huangqiang@huawei.com>\nQin TianHuan <tianhuan@bingotree.cn>\nQinglan Peng <qinglanpeng@zju.edu.cn>\nQuan Tian <tianquan@cloudin.cn>\nqudongfang <qudongfang@gmail.com>\nQuentin Brossard <qbrossard@gmail.com>\nQuentin Perez <qperez@ocs.online.net>\nQuentin Tayssier <qtayssier@gmail.com>\nr0n22 <cameron.regan@gmail.com>\nRachit Sharma <rachitsharma613@gmail.com>\nRadostin Stoyanov <rstoyanov1@gmail.com>\nRafal Jeczalik <rjeczalik@gmail.com>\nRafe Colton <rafael.colton@gmail.com>\nRaghavendra K T <raghavendra.kt@linux.vnet.ibm.com>\nRaghuram Devarakonda <draghuram@gmail.com>\nRaja Sami <raja.sami@tenpearls.com>\nRajat Pandit <rp@rajatpandit.com>\nRajdeep Dua <dua_rajdeep@yahoo.com>\nRalf Sippl <ralf.sippl@gmail.com>\nRalle <spam@rasmusa.net>\nRalph Bean <rbean@redhat.com>\nRamkumar Ramachandra <artagnon@gmail.com>\nRamon Brooker <rbrooker@aetherealmind.com>\nRamon van Alteren <ramon@vanalteren.nl>\nRaviTeja Pothana <ravi-teja@live.com>\nRay Tsang <rayt@google.com>\nReadmeCritic <frankensteinbot@gmail.com>\nrealityone <realityone@me.com>\nRecursive Madman <recursive.madman@gmx.de>\nReficul <xuzhenglun@gmail.com>\nRegan McCooey <rmccooey27@aol.com>\nRemi Rampin <remirampin@gmail.com>\nRemy Suen <remy.suen@gmail.com>\nRenato Riccieri Santos Zannon <renato.riccieri@gmail.com>\nRenaud Gaubert <rgaubert@nvidia.com>\nRhys Hiltner <rhys@twitch.tv>\nRi Xu <xuri.me@gmail.com>\nRicardo N Feliciano <FelicianoTech@gmail.com>\nRich Horwood <rjhorwood@apple.com>\nRich Moyse <rich@moyse.us>\nRich Seymour <rseymour@gmail.com>\nRichard Burnison <rburnison@ebay.com>\nRichard Hansen <rhansen@rhansen.org>\nRichard Harvey <richard@squarecows.com>\nRichard Mathie <richard.mathie@amey.co.uk>\nRichard Metzler <richard@paadee.com>\nRichard Scothern <richard.scothern@gmail.com>\nRicho Healey <richo@psych0tik.net>\nRick Bradley <rick@users.noreply.github.com>\nRick van de Loo <rickvandeloo@gmail.com>\nRick Wieman <git@rickw.nl>\nRik Nijessen <rik@keefo.nl>\nRiku Voipio <riku.voipio@linaro.org>\nRiley Guerin <rileytg.dev@gmail.com>\nRitesh H Shukla <sritesh@vmware.com>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com>\nRob Cowsill <42620235+rcowsill@users.noreply.github.com>\nRob Gulewich <rgulewich@netflix.com>\nRob Murray <rob.murray@docker.com>\nRob Vesse <rvesse@dotnetrdf.org>\nRobert Bachmann <rb@robertbachmann.at>\nRobert Bittle <guywithnose@gmail.com>\nRobert Obryk <robryk@gmail.com>\nRobert Schneider <mail@shakeme.info>\nRobert Shade <robert.shade@gmail.com>\nRobert Stern <lexandro2000@gmail.com>\nRobert Terhaar <rterhaar@atlanticdynamic.com>\nRobert Wallis <smilingrob@gmail.com>\nRobert Wang <robert@arctic.tw>\nRoberto G. Hashioka <roberto.hashioka@docker.com>\nRoberto Muñoz Fernández <robertomf@gmail.com>\nRobin Naundorf <r.naundorf@fh-muenster.de>\nRobin Schneider <ypid@riseup.net>\nRobin Speekenbrink <robin@kingsquare.nl>\nRobin Thoni <robin@rthoni.com>\nrobpc <rpcann@gmail.com>\nRodolfo Carvalho <rhcarvalho@gmail.com>\nRodrigo Campos <rodrigo@kinvolk.io>\nRodrigo Vaz <rodrigo.vaz@gmail.com>\nRoel Van Nyen <roel.vannyen@gmail.com>\nRoger Peppe <rogpeppe@gmail.com>\nRohit Jnagal <jnagal@google.com>\nRohit Kadam <rohit.d.kadam@gmail.com>\nRohit Kapur <rkapur@flatiron.com>\nRojin George <rojingeorge@huawei.com>\nRoland Huß <roland@jolokia.org>\nRoland Kammerer <roland.kammerer@linbit.com>\nRoland Moriz <rmoriz@users.noreply.github.com>\nRoma Sokolov <sokolov.r.v@gmail.com>\nRoman Dudin <katrmr@gmail.com>\nRoman Mazur <roman@balena.io>\nRoman Strashkin <roman.strashkin@gmail.com>\nRoman Volosatovs <roman.volosatovs@docker.com>\nRoman Zabaluev <gpg@haarolean.dev>\nRon Smits <ron.smits@gmail.com>\nRon Williams <ron.a.williams@gmail.com>\nRong Gao <gaoronggood@163.com>\nRong Zhang <rongzhang@alauda.io>\nRongxiang Song <tinysong1226@gmail.com>\nRony Weng <ronyweng@synology.com>\nroot <docker-dummy@example.com>\nroot <root@lxdebmas.marist.edu>\nroot <root@ubuntu-14.04-amd64-vbox>\nroot <root@webm215.cluster016.ha.ovh.net>\nRory Hunter <roryhunter2@gmail.com>\nRory McCune <raesene@gmail.com>\nRoss Boucher <rboucher@gmail.com>\nRovanion Luckey <rovanion.luckey@gmail.com>\nRoy Reznik <roy@wiz.io>\nRoyce Remer <royceremer@gmail.com>\nRozhnov Alexandr <nox73@ya.ru>\nRudolph Gottesheim <r.gottesheim@loot.at>\nRui Cao <ruicao@alauda.io>\nRui JingAn <quiterace@gmail.com>\nRui Lopes <rgl@ruilopes.com>\nRuilin Li <liruilin4@huawei.com>\nRunshen Zhu <runshen.zhu@gmail.com>\nRuss Magee <rmagee@gmail.com>\nRyan Abrams <rdabrams@gmail.com>\nRyan Anderson <anderson.ryanc@gmail.com>\nRyan Aslett <github@mixologic.com>\nRyan Barry <rbarry@mirantis.com>\nRyan Belgrave <rmb1993@gmail.com>\nRyan Campbell <campbellr@gmail.com>\nRyan Detzel <ryan.detzel@gmail.com>\nRyan Fowler <rwfowler@gmail.com>\nRyan Liu <ryanlyy@me.com>\nRyan McLaughlin <rmclaughlin@insidesales.com>\nRyan O'Donnell <odonnellryanc@gmail.com>\nRyan Seto <ryanseto@yak.net>\nRyan Shea <sheabot03@gmail.com>\nRyan Simmen <ryan.simmen@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nRyan Thomas <rthomas@atlassian.com>\nRyan Trauntvein <rtrauntvein@novacoast.com>\nRyan Wallner <ryan.wallner@clusterhq.com>\nRyan Zhang <ryan.zhang@docker.com>\nryancooper7 <ryan.cooper7@gmail.com>\nRyanDeng <sheldon.d1018@gmail.com>\nRyo Nakao <nakabonne@gmail.com>\nRyoga Saito <contact@proelbtn.com>\nRégis Behmo <regis@behmo.com>\nRémy Greinhofer <remy.greinhofer@livelovely.com>\ns. rannou <mxs@sbrk.org>\nSabin Basyal <sabin.basyal@gmail.com>\nSachin Joshi <sachin_jayant_joshi@hotmail.com>\nSagar Hani <sagarhani33@gmail.com>\nSainath Grandhi <sainath.grandhi@intel.com>\nSakeven Jiang <jc5930@sina.cn>\nSalahuddin Khan <salah@docker.com>\nSally O'Malley <somalley@redhat.com>\nSam Abed <sam.abed@gmail.com>\nSam Alba <sam.alba@gmail.com>\nSam Bailey <cyprix@cyprix.com.au>\nSam J Sharpe <sam.sharpe@digital.cabinet-office.gov.uk>\nSam Neirinck <sam@samneirinck.com>\nSam Reis <sreis@atlassian.com>\nSam Rijs <srijs@airpost.net>\nSam Thibault <sam.thibault@docker.com>\nSam Whited <sam@samwhited.com>\nSambuddha Basu <sambuddhabasu1@gmail.com>\nSami Wagiaalla <swagiaal@redhat.com>\nSamuel Andaya <samuel@andaya.net>\nSamuel Dion-Girardeau <samuel.diongirardeau@gmail.com>\nSamuel Karp <me@samuelkarp.com>\nSamuel PHAN <samuel-phan@users.noreply.github.com>\nsanchayanghosh <sanchayanghosh@outlook.com>\nSandeep Bansal <sabansal@microsoft.com>\nSankar சங்கர் <sankar.curiosity@gmail.com>\nSanket Saurav <sanketsaurav@gmail.com>\nSanthosh Manohar <santhosh@docker.com>\nsapphiredev <se.imas.kr@gmail.com>\nSargun Dhillon <sargun@netflix.com>\nSascha Andres <sascha.andres@outlook.com>\nSascha Grunert <sgrunert@suse.com>\nSataQiu <qiushida@beyondcent.com>\nSatnam Singh <satnam@raintown.org>\nSatoshi Amemiya <satoshi_amemiya@voyagegroup.com>\nSatoshi Tagomori <tagomoris@gmail.com>\nScott Bessler <scottbessler@gmail.com>\nScott Collier <emailscottcollier@gmail.com>\nScott Johnston <scott@docker.com>\nScott Moser <smoser@brickies.net>\nScott Percival <scottp@lastyard.com>\nScott Stamp <scottstamp851@gmail.com>\nScott Walls <sawalls@umich.edu>\nsdreyesg <sdreyesg@gmail.com>\nSean Christopherson <sean.j.christopherson@intel.com>\nSean Cronin <seancron@gmail.com>\nSean Lee <seanlee@tw.ibm.com>\nSean McIntyre <s.mcintyre@xverba.ca>\nSean OMeara <sean@chef.io>\nSean P. Kane <skane@newrelic.com>\nSean Rodman <srodman7689@gmail.com>\nSebastiaan van Steenis <mail@superseb.nl>\nSebastiaan van Stijn <github@gone.nl>\nSebastian Höffner <sebastian.hoeffner@mevis.fraunhofer.de>\nSebastian Radloff <sradloff23@gmail.com>\nSebastian Thomschke <sebthom@users.noreply.github.com>\nSebastien Goasguen <runseb@gmail.com>\nSenthil Kumar Selvaraj <senthil.thecoder@gmail.com>\nSenthil Kumaran <senthil@uthcode.com>\nSeongJae Park <sj38.park@gmail.com>\nSeongyeol Lim <seongyeol37@gmail.com>\nSerge Hallyn <serge.hallyn@ubuntu.com>\nSergey Alekseev <sergey.alekseev.minsk@gmail.com>\nSergey Evstifeev <sergey.evstifeev@gmail.com>\nSergii Kabashniuk <skabashnyuk@codenvy.com>\nSergio Lopez <slp@redhat.com>\nSerhat Gülçiçek <serhat25@gmail.com>\nSerhii Nakon <serhii.n@thescimus.com>\nSeungUkLee <lsy931106@gmail.com>\nSevki Hasirci <s@sevki.org>\nShane Canon <scanon@lbl.gov>\nShane da Silva <shane@dasilva.io>\nShaun Kaasten <shaunk@gmail.com>\nshaunol <shaunol@gmail.com>\nShawn Landden <shawn@churchofgit.com>\nShawn Siefkas <shawn.siefkas@meredith.com>\nshawnhe <shawnhe@shawnhedeMacBook-Pro.local>\nShayan Pooya <shayan@liveve.org>\nShayne Wang <shaynexwang@gmail.com>\nShekhar Gulati <shekhargulati84@gmail.com>\nSheng Yang <sheng@yasker.org>\nShengbo Song <thomassong@tencent.com>\nShengjing Zhu <zhsj@debian.org>\nShev Yan <yandong_8212@163.com>\nShih-Yuan Lee <fourdollars@gmail.com>\nShihao Xia <charlesxsh@hotmail.com>\nShijiang Wei <mountkin@gmail.com>\nShijun Qin <qinshijun16@mails.ucas.ac.cn>\nShishir Mahajan <shishir.mahajan@redhat.com>\nShoubhik Bose <sbose78@gmail.com>\nShourya Sarcar <shourya.sarcar@gmail.com>\nShu-Wai Chow <shu-wai.chow@seattlechildrens.org>\nshuai-z <zs.broccoli@gmail.com>\nShukui Yang <yangshukui@huawei.com>\nSian Lerk Lau <kiawin@gmail.com>\nSiarhei Rasiukevich <s_rasiukevich@wargaming.net>\nSidhartha Mani <sidharthamn@gmail.com>\nsidharthamani <sid@rancher.com>\nSilas Sewell <silas@sewell.org>\nSilvan Jegen <s.jegen@gmail.com>\nSimão Reis <smnrsti@gmail.com>\nSimon Barendse <simon.barendse@gmail.com>\nSimon Eskildsen <sirup@sirupsen.com>\nSimon Ferquel <simon.ferquel@docker.com>\nSimon Leinen <simon.leinen@gmail.com>\nSimon Menke <simon.menke@gmail.com>\nSimon Taranto <simon.taranto@gmail.com>\nSimon Vikstrom <pullreq@devsn.se>\nSindhu S <sindhus@live.in>\nSjoerd Langkemper <sjoerd-github@linuxonly.nl>\nskanehira <sho19921005@gmail.com>\nSmark Meng <smark@freecoop.net>\nSolganik Alexander <solganik@gmail.com>\nSolomon Hykes <solomon@docker.com>\nSong Gao <song@gao.io>\nSoshi Katsuta <soshi.katsuta@gmail.com>\nSotiris Salloumis <sotiris.salloumis@gmail.com>\nSoulou <leo@unbekandt.eu>\nSpencer Brown <spencer@spencerbrown.org>\nSpencer Smith <robertspencersmith@gmail.com>\nSpike Curtis <spike.curtis@metaswitch.com>\nSridatta Thatipamala <sthatipamala@gmail.com>\nSridhar Ratnakumar <sridharr@activestate.com>\nSrini Brahmaroutu <srbrahma@us.ibm.com>\nSrinivasan Srivatsan <srinivasan.srivatsan@hpe.com>\nStaf Wagemakers <staf@wagemakers.be>\nStanislav Bondarenko <stanislav.bondarenko@gmail.com>\nStanislav Levin <slev@altlinux.org>\nSteeve Morin <steeve.morin@gmail.com>\nStefan Berger <stefanb@linux.vnet.ibm.com>\nStefan Gehrig <stefan.gehrig.hn@googlemail.com>\nStefan J. Wernli <swernli@microsoft.com>\nStefan Praszalowicz <stefan@greplin.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Staudenmeyer <doerte@instana.com>\nStefan Weil <sw@weilnetz.de>\nSteffen Butzer <steffen.butzer@outlook.com>\nStephan Henningsen <stephan-henningsen@users.noreply.github.com>\nStephan Spindler <shutefan@gmail.com>\nStephen Benjamin <stephen@redhat.com>\nStephen Crosby <stevecrozz@gmail.com>\nStephen Day <stevvooe@gmail.com>\nStephen Drake <stephen@xenolith.net>\nStephen Rust <srust@blockbridge.com>\nSteve Desmond <steve@vtsv.ca>\nSteve Dougherty <steve@asksteved.com>\nSteve Durrheimer <s.durrheimer@gmail.com>\nSteve Francia <steve.francia@gmail.com>\nSteve Koch <stevekochscience@gmail.com>\nSteven Burgess <steven.a.burgess@hotmail.com>\nSteven Erenst <stevenerenst@gmail.com>\nSteven Hartland <steven.hartland@multiplay.co.uk>\nSteven Iveson <sjiveson@outlook.com>\nSteven Merrill <steven.merrill@gmail.com>\nSteven Richards <steven@axiomzen.co>\nSteven Taylor <steven.taylor@me.com>\nStéphane Este-Gracias <sestegra@gmail.com>\nStig Larsson <stig@larsson.dev>\nSu Wang <su.wang@docker.com>\nSubhajit Ghosh <isubuz.g@gmail.com>\nSujith Haridasan <sujith.h@gmail.com>\nSun Gengze <690388648@qq.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSune Keller <sune.keller@gmail.com>\nSunny Gogoi <indiasuny000@gmail.com>\nSuryakumar Sudar <surya.trunks@gmail.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSwapnil Daingade <swapnil.daingade@gmail.com>\nSylvain Baubeau <lebauce@gmail.com>\nSylvain Bellemare <sylvain@ascribe.io>\nSébastien <sebastien@yoozio.com>\nSébastien HOUZÉ <cto@verylastroom.com>\nSébastien Luttringer <seblu@seblu.net>\nSébastien Stormacq <sebsto@users.noreply.github.com>\nSören Tempel <soeren+git@soeren-tempel.net>\nTabakhase <mail@tabakhase.com>\nTadej Janež <tadej.j@nez.si>\nTakuto Sato <tockn.jp@gmail.com>\ntang0th <tang0th@gmx.com>\nTangi Colin <tangicolin@gmail.com>\nTatsuki Sugiura <sugi@nemui.org>\nTatsushi Inagaki <e29253@jp.ibm.com>\nTaylan Isikdemir <taylani@google.com>\nTaylor Jones <monitorjbl@gmail.com>\nTed M. Young <tedyoung@gmail.com>\nTehmasp Chaudhri <tehmasp@gmail.com>\nTejaswini Duggaraju <naduggar@microsoft.com>\nTejesh Mehta <tejesh.mehta@gmail.com>\nTerry Chu <zue.hterry@gmail.com>\nterryding77 <550147740@qq.com>\nThatcher Peskens <thatcher@docker.com>\ntheadactyl <thea.lamkin@gmail.com>\nThell 'Bo' Fowler <thell@tbfowler.name>\nThermionix <bond711@gmail.com>\nThiago Alves Silva <thiago.alves@aurea.com>\nThijs Terlouw <thijsterlouw@gmail.com>\nThomas Bikeev <thomas.bikeev@mac.com>\nThomas Frössman <thomasf@jossystem.se>\nThomas Gazagnaire <thomas@gazagnaire.org>\nThomas Graf <tgraf@suug.ch>\nThomas Grainger <tagrain@gmail.com>\nThomas Hansen <thomas.hansen@gmail.com>\nThomas Ledos <thomas.ledos92@gmail.com>\nThomas Leonard <thomas.leonard@docker.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Orozco <thomas@orozco.fr>\nThomas Riccardi <riccardi@systran.fr>\nThomas Schroeter <thomas@cliqz.com>\nThomas Sjögren <konstruktoid@users.noreply.github.com>\nThomas Swift <tgs242@gmail.com>\nThomas Tanaka <thomas.tanaka@oracle.com>\nThomas Texier <sharkone@en-mousse.org>\nTi Zhou <tizhou1986@gmail.com>\nTiago Seabra <tlgs@users.noreply.github.com>\nTianon Gravi <admwiggin@gmail.com>\nTianyi Wang <capkurmagati@gmail.com>\nTibor Vass <teabee89@gmail.com>\nTiffany Jernigan <tiffany.f.j@gmail.com>\nTiffany Low <tiffany@box.com>\nTill Claassen <pixelistik@users.noreply.github.com>\nTill Wegmüller <toasterson@gmail.com>\nTim <elatllat@gmail.com>\nTim Bart <tim@fewagainstmany.com>\nTim Bosse <taim@bosboot.org>\nTim Dettrick <t.dettrick@uq.edu.au>\nTim Düsterhus <tim@bastelstu.be>\nTim Hockin <thockin@google.com>\nTim Potter <tpot@hpe.com>\nTim Ruffles <oi@truffles.me.uk>\nTim Smith <timbot@google.com>\nTim Terhorst <mynamewastaken+git@gmail.com>\nTim Wagner <tim.wagner@freenet.ag>\nTim Wang <timwangdev@gmail.com>\nTim Waugh <twaugh@redhat.com>\nTim Wraight <tim.wraight@tangentlabs.co.uk>\nTim Zju <21651152@zju.edu.cn>\ntimchenxiaoyu <837829664@qq.com>\ntimfeirg <kkcocogogo@gmail.com>\nTimo Rothenpieler <timo@rothenpieler.org>\nTimothy Hobbs <timothyhobbs@seznam.cz>\ntjwebb123 <tjwebb123@users.noreply.github.com>\ntobe <tobegit3hub@gmail.com>\nTobias Bieniek <Tobias.Bieniek@gmx.de>\nTobias Bradtke <webwurst@gmail.com>\nTobias Gesellchen <tobias@gesellix.de>\nTobias Klauser <tklauser@distanz.ch>\nTobias Munk <schmunk@usrbin.de>\nTobias Pfandzelter <tobias@pfandzelter.com>\nTobias Schmidt <ts@soundcloud.com>\nTobias Schwab <tobias.schwab@dynport.de>\nTodd Crane <todd@toddcrane.com>\nTodd Lunter <tlunter@gmail.com>\nTodd Whiteman <todd.whiteman@joyent.com>\nToli Kuznets <toli@docker.com>\nTom Barlow <tomwbarlow@gmail.com>\nTom Booth <tombooth@gmail.com>\nTom Denham <tom@tomdee.co.uk>\nTom Fotherby <tom+github@peopleperhour.com>\nTom Howe <tom.howe@enstratius.com>\nTom Hulihan <hulihan.tom159@gmail.com>\nTom Maaswinkel <tom.maaswinkel@12wiki.eu>\nTom Parker <palfrey@tevp.net>\nTom Sweeney <tsweeney@redhat.com>\nTom Wilkie <tom.wilkie@gmail.com>\nTom X. Tobin <tomxtobin@tomxtobin.com>\nTom Zhao <zlwangel@gmail.com>\nTomas Janousek <tomi@nomi.cz>\nTomas Kral <tomas.kral@gmail.com>\nTomas Tomecek <ttomecek@redhat.com>\nTomasz Kopczynski <tomek@kopczynski.net.pl>\nTomasz Lipinski <tlipinski@users.noreply.github.com>\nTomasz Nurkiewicz <nurkiewicz@gmail.com>\nTomek Mańko <tomek.manko@railgun-solutions.com>\nTommaso Visconti <tommaso.visconti@gmail.com>\nTomoya Tabuchi <t@tomoyat1.com>\nTomáš Hrčka <thrcka@redhat.com>\nTomáš Virtus <nechtom@gmail.com>\ntonic <tonicbupt@gmail.com>\nTonny Xu <tonny.xu@gmail.com>\nTony Abboud <tdabboud@hotmail.com>\nTony Daws <tony@daws.ca>\nTony Miller <mcfiredrill@gmail.com>\ntoogley <toogley@mailbox.org>\nTorstein Husebø <torstein@huseboe.net>\nToshiaki Makita <makita.toshiaki@lab.ntt.co.jp>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrace Andreason <tandreason@gmail.com>\ntracylihui <793912329@qq.com>\nTrapier Marshall <tmarshall@mirantis.com>\nTravis Cline <travis.cline@gmail.com>\nTravis Thieman <travis.thieman@gmail.com>\nTrent Ogren <tedwardo2@gmail.com>\nTrevor <trevinwoodstock@gmail.com>\nTrevor Pounds <trevor.pounds@gmail.com>\nTrevor Sullivan <pcgeek86@gmail.com>\nTrishna Guha <trishnaguha17@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTroy Denton <trdenton@gmail.com>\nTudor Brindus <me@tbrindus.ca>\nTy Alexander <ty.alexander@sendgrid.com>\nTycho Andersen <tycho@docker.com>\nTyler Brock <tyler.brock@gmail.com>\nTyler Brown <tylers.pile@gmail.com>\nTzu-Jung Lee <roylee17@gmail.com>\nuhayate <uhayate.gong@daocloud.io>\nUlysse Carion <ulyssecarion@gmail.com>\nUmesh Yadav <umesh4257@gmail.com>\nUtz Bacher <utz.bacher@de.ibm.com>\nvagrant <vagrant@ubuntu-14.04-amd64-vbox>\nVaidas Jablonskis <jablonskis@gmail.com>\nValentin Kulesh <valentin.kulesh@virtuozzo.com>\nvanderliang <lansheng@meili-inc.com>\nVelko Ivanov <vivanov@deeperplane.com>\nVeres Lajos <vlajos@gmail.com>\nVictor Algaze <valgaze@gmail.com>\nVictor Coisne <victor.coisne@dotcloud.com>\nVictor Costan <costan@gmail.com>\nVictor I. Wood <viw@t2am.com>\nVictor Lyuboslavsky <victor@victoreda.com>\nVictor Marmol <vmarmol@google.com>\nVictor Palma <palma.victor@gmail.com>\nVictor Toni <victor.toni@gmail.com>\nVictor Vieux <victor.vieux@docker.com>\nVictoria Bialas <victoria.bialas@docker.com>\nVijaya Kumar K <vijayak@caviumnetworks.com>\nVikas Choudhary <choudharyvikas16@gmail.com>\nVikram bir Singh <vsingh@mirantis.com>\nViktor Stanchev <me@viktorstanchev.com>\nViktor Vojnovski <viktor.vojnovski@amadeus.com>\nVinayRaghavanKS <raghavan.vinay@gmail.com>\nVincent Batts <vbatts@redhat.com>\nVincent Bernat <vincent@bernat.ch>\nVincent Boulineau <vincent.boulineau@datadoghq.com>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Giersch <vincent.giersch@ovh.net>\nVincent Mayers <vincent.mayers@inbloom.org>\nVincent Woo <me@vincentwoo.com>\nVinod Kulkarni <vinod.kulkarni@gmail.com>\nVishal Doshi <vishal.doshi@gmail.com>\nVishnu Kannan <vishnuk@google.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com>\nVitor Anjos <bartier@users.noreply.github.com>\nVitor Monteiro <vmrmonteiro@gmail.com>\nVivek Agarwal <me@vivek.im>\nVivek Dasgupta <vdasgupt@redhat.com>\nVivek Goyal <vgoyal@redhat.com>\nVladimir Bulyga <xx@ccxx.cc>\nVladimir Kirillov <proger@wilab.org.ua>\nVladimir Pouzanov <farcaller@google.com>\nVladimir Rutsky <altsysrq@gmail.com>\nVladimir Varankin <nek.narqo+git@gmail.com>\nVladimirAus <v_roudakov@yahoo.com>\nVladislav Kolesnikov <vkolesnikov@beget.ru>\nVlastimil Zeman <vlastimil.zeman@diffblue.com>\nVojtech Vitek (V-Teq) <vvitek@redhat.com>\nvoloder <110066198+voloder@users.noreply.github.com>\nWalter Leibbrandt <github@wrl.co.za>\nWalter Stanish <walter@pratyeka.org>\nWang Chao <chao.wang@ucloud.cn>\nWang Guoliang <liangcszzu@163.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Long <long.wanglong@huawei.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWang Yumu <37442693@qq.com>\nwanghuaiqing <wanghuaiqing@loongson.cn>\nWard Vandewege <ward@jhvc.com>\nWarheadsSE <max@warheads.net>\nWassim Dhif <wassimdhif@gmail.com>\nWataru Ishida <ishida.wataru@lab.ntt.co.jp>\nWayne Chang <wayne@neverfear.org>\nWayne Song <wsong@docker.com>\nweebney <weebney@gmail.com>\nWeerasak Chongnguluam <singpor@gmail.com>\nWei Fu <fuweid89@gmail.com>\nWei Wu <wuwei4455@gmail.com>\nWei-Ting Kuo <waitingkuo0527@gmail.com>\nweipeng <weipeng@tuscloud.io>\nweiyan <weiyan3@huawei.com>\nWeiyang Zhu <cnresonant@gmail.com>\nWen Cheng Ma <wenchma@cn.ibm.com>\nWendel Fleming <wfleming@usc.edu>\nWenjun Tang <tangwj2@lenovo.com>\nWenkai Yin <yinw@vmware.com>\nwenlxie <wenlxie@ebay.com>\nWenxuan Zhao <viz@linux.com>\nWenyu You <21551128@zju.edu.cn>\nWenzhi Liang <wenzhi.liang@gmail.com>\nWes Morgan <cap10morgan@gmail.com>\nWesley Pettit <wppttt@amazon.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWiktor Kwapisiewicz <wiktor@metacode.biz>\nWill Dietz <w@wdtz.org>\nWill Rouesnel <w.rouesnel@gmail.com>\nWill Weaver <monkey@buildingbananas.com>\nwillhf <willhf@gmail.com>\nWilliam Delanoue <william.delanoue@gmail.com>\nWilliam Henry <whenry@redhat.com>\nWilliam Hubbs <w.d.hubbs@gmail.com>\nWilliam Martin <wmartin@pivotal.io>\nWilliam Riancho <wr.wllm@gmail.com>\nWilliam Thurston <thurstw@amazon.com>\nWilson Júnior <wilsonpjunior@gmail.com>\nWing-Kam Wong <wingkwong.code@gmail.com>\nWiseTrem <shepelyov.g@gmail.com>\nWolfgang Nagele <mail@wnagele.com>\nWolfgang Powisch <powo@powo.priv.at>\nWonjun Kim <wonjun.kim@navercorp.com>\nWuLonghui <wlh6666@qq.com>\nxamyzhao <x.amy.zhao@gmail.com>\nXia Wu <xwumzn@amazon.com>\nXian Chaobo <xianchaobo@huawei.com>\nXianglin Gao <xlgao@zju.edu.cn>\nXianjie <guxianjie@gmail.com>\nXianlu Bird <xianlubird@gmail.com>\nXiao YongBiao <xyb4638@gmail.com>\nXiao Zhang <xiaozhang0210@hotmail.com>\nXiaoBing Jiang <s7v7nislands@gmail.com>\nXiaodong Liu <liuxiaodong@loongson.cn>\nXiaodong Zhang <a4012017@sina.com>\nXiaohua Ding <xiao_hua_ding@sina.cn>\nXiaoxi He <xxhe@alauda.io>\nXiaoxu Chen <chenxiaoxu14@otcaix.iscas.ac.cn>\nXiaoyu Zhang <zhang.xiaoyu33@zte.com.cn>\nxichengliudui <1693291525@qq.com>\nxiekeyang <xiekeyang@huawei.com>\nXimo Guanter Gonzálbez <joaquin.guantergonzalbez@telefonica.com>\nxin.li <xin.li@daocloud.io>\nXinbo Weng <xihuanbo_0521@zju.edu.cn>\nXinfeng Liu <XinfengLiu@icloud.com>\nXinzi Zhou <imdreamrunner@gmail.com>\nXiuming Chen <cc@cxm.cc>\nXuecong Liao <satorulogic@gmail.com>\nxuzhaokui <cynicholas@gmail.com>\nYadnyawalkya Tale <ytale@redhat.com>\nYahya <ya7yaz@gmail.com>\nyalpul <yalpul@gmail.com>\nYAMADA Tsuyoshi <tyamada@minimum2scp.org>\nYamasaki Masahide <masahide.y@gmail.com>\nYamazaki Masashi <masi19bw@gmail.com>\nYan Feng <yanfeng2@huawei.com>\nYan Zhu <yanzhu@alauda.io>\nYang Bai <hamo.by@gmail.com>\nYang Li <idealhack@gmail.com>\nYang Pengfei <yangpengfei4@huawei.com>\nyangchenliang <yangchenliang@huawei.com>\nYann Autissier <yann.autissier@gmail.com>\nYanqiang Miao <miao.yanqiang@zte.com.cn>\nYao Zaiyong <yaozaiyong@hotmail.com>\nYash Murty <yashmurty@gmail.com>\nYassine Tijani <yasstij11@gmail.com>\nYasunori Mahata <nori@mahata.net>\nYazhong Liu <yorkiefixer@gmail.com>\nYestin Sun <sunyi0804@gmail.com>\nYi EungJun <eungjun.yi@navercorp.com>\nYibai Zhang <xm1994@gmail.com>\nYihang Ho <hoyihang5@gmail.com>\nYing Li <ying.li@docker.com>\nYohei Ueda <yohei@jp.ibm.com>\nYong Tang <yong.tang.github@outlook.com>\nYongxin Li <yxli@alauda.io>\nYongzhi Pan <panyongzhi@gmail.com>\nYosef Fertel <yfertel@gmail.com>\nYou-Sheng Yang (楊有勝) <vicamo@gmail.com>\nyoucai <omegacoleman@gmail.com>\nYoucef YEKHLEF <yyekhlef@gmail.com>\nYoufu Zhang <zhangyoufu@gmail.com>\nYu Changchun <yuchangchun1@huawei.com>\nYu Chengxia <yuchengxia@huawei.com>\nYu Peng <yu.peng36@zte.com.cn>\nYu-Ju Hong <yjhong@google.com>\nYuan Sun <sunyuan3@huawei.com>\nYuanhong Peng <pengyuanhong@huawei.com>\nYue Zhang <zy675793960@yeah.net>\nYufei Xiong <yufei.xiong@qq.com>\nYuhao Fang <fangyuhao@gmail.com>\nYuichiro Kaneko <spiketeika@gmail.com>\nYujiOshima <yuji.oshima0x3fd@gmail.com>\nYunxiang Huang <hyxqshk@vip.qq.com>\nYurii Rashkovskii <yrashk@gmail.com>\nYusuf Tarık Günaydın <yusuf_tarik@hotmail.com>\nYves Blusseau <90z7oey02@sneakemail.com>\nYves Junqueira <yves.junqueira@gmail.com>\nZac Dover <zdover@redhat.com>\nZach Borboa <zachborboa@gmail.com>\nZach Gershman <zachgersh@gmail.com>\nZachary Jaffee <zjaffee@us.ibm.com>\nZain Memon <zain@inzain.net>\nZaiste! <oh@zaiste.net>\nZane DeGraffenried <zane.deg@gmail.com>\nZefan Li <lizefan@huawei.com>\nZen Lin(Zhinan Lin) <linzhinan@huawei.com>\nZhang Kun <zkazure@gmail.com>\nZhang Wei <zhangwei555@huawei.com>\nZhang Wentao <zhangwentao234@huawei.com>\nzhangguanzhang <zhangguanzhang@qq.com>\nZhangHang <stevezhang2014@gmail.com>\nzhangxianwei <xianwei.zw@alibaba-inc.com>\nZhenan Ye <21551168@zju.edu.cn>\nzhenghenghuo <zhenghenghuo@zju.edu.cn>\nZhenhai Gao <gaozh1988@live.com>\nZhenkun Bi <bi.zhenkun@zte.com.cn>\nZhiPeng Lu <lu.zhipeng@zte.com.cn>\nzhipengzuo <zuozhipeng@baidu.com>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Guihua <zhugh.fnst@cn.fujitsu.com>\nZhu Kunjia <zhu.kunjia@zte.com.cn>\nZhuoyun Wei <wzyboy@wzyboy.org>\nZiheng Liu <lzhfromustc@gmail.com>\nZilin Du <zilin.du@gmail.com>\nzimbatm <zimbatm@zimbatm.com>\nZiming Dong <bnudzm@foxmail.com>\nZJUshuaizhou <21551191@zju.edu.cn>\nzmarouf <zeid.marouf@gmail.com>\nZoltan Tombol <zoltan.tombol@gmail.com>\nZou Yu <zouyu7@huawei.com>\nzqh <zqhxuyuan@gmail.com>\nZuhayr Elahi <zuhayr.elahi@docker.com>\nZunayed Ali <zunayed@gmail.com>\nÁlvaro Lázaro <alvaro.lazaro.g@gmail.com>\nÁtila Camurça Alves <camurca.home@gmail.com>\n吴小白 <296015668@qq.com>\n尹吉峰 <jifeng.yin@gmail.com>\n屈骏 <qujun@tiduyun.com>\n徐俊杰 <paco.xu@daocloud.io>\n慕陶 <jihui.xjh@alibaba-inc.com>\n搏通 <yufeng.pyf@alibaba-inc.com>\n黄艳红00139573 <huang.yanhong@zte.com.cn>\n정재영 <jjy600901@gmail.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 18.68,
          "content": "# Contribute to the Moby Project\n\nWant to hack on the Moby Project? Awesome! We have a contributor's guide that explains\n[setting up a development environment and the contribution\nprocess](docs/contributing/). \n\n[![Contributors guide](docs/static_files/contributors.png)](https://docs.docker.com/opensource/project/who-written-for/)\n\nThis page contains information about reporting issues as well as some tips and\nguidelines useful to experienced open source contributors. Finally, make sure\nyou read our [community guidelines](#moby-community-guidelines) before you\nstart participating.\n\n## Topics\n\n* [Reporting Security Issues](#reporting-security-issues)\n* [Design and Cleanup Proposals](#design-and-cleanup-proposals)\n* [Reporting Issues](#reporting-other-issues)\n* [Quick Contribution Tips and Guidelines](#quick-contribution-tips-and-guidelines)\n* [Community Guidelines](#moby-community-guidelines)\n\n## Reporting security issues\n\nThe Moby maintainers take security seriously. If you discover a security\nissue, please bring it to their attention right away!\n\nPlease **DO NOT** file a public issue, instead send your report privately to\n[security@docker.com](mailto:security@docker.com).\n\nSecurity reports are greatly appreciated and we will publicly thank you for it,\nalthough we keep your name confidential if you request it. We also like to send\ngifts&mdash;if you're into schwag, make sure to let us know. We currently do not\noffer a paid security bounty program, but are not ruling it out in the future.\n\n\n## Reporting other issues\n\nA great way to contribute to the project is to send a detailed report when you\nencounter an issue. We always appreciate a well-written, thorough bug report,\nand will thank you for it!\n\nCheck that [our issue database](https://github.com/moby/moby/issues)\ndoesn't already include that problem or suggestion before submitting an issue.\nIf you find a match, you can use the \"subscribe\" button to get notified on\nupdates. Do *not* leave random \"+1\" or \"I have this too\" comments, as they\nonly clutter the discussion, and don't help resolving it. However, if you\nhave ways to reproduce the issue or have additional information that may help\nresolving the issue, please leave a comment.\n\nWhen reporting issues, always include:\n\n* The output of `docker version`.\n* The output of `docker info`.\n\nAlso include the steps required to reproduce the problem if possible and\napplicable. This information will help us review and fix your issue faster.\nWhen sending lengthy log-files, consider posting them as a gist (https://gist.github.com).\nDon't forget to remove sensitive data from your logfiles before posting (you can\nreplace those parts with \"REDACTED\").\n\n## Quick contribution tips and guidelines\n\nThis section gives the experienced contributor some tips and guidelines.\n\n### Pull requests are always welcome\n\nNot sure if that typo is worth a pull request? Found a bug and know how to fix\nit? Do it! We will appreciate it. Any significant improvement should be\ndocumented as [a GitHub issue](https://github.com/moby/moby/issues) before\nanybody starts working on it.\n\nWe are always thrilled to receive pull requests. We do our best to process them\nquickly. If your pull request is not accepted on the first try,\ndon't get discouraged! Our contributor's guide explains [the review process we\nuse for simple changes](https://docs.docker.com/contribute/overview/).\n\n### Design and cleanup proposals\n\nYou can propose new designs for existing Docker features. You can also design\nentirely new features. We really appreciate contributors who want to refactor or\notherwise cleanup our project. For information on making these types of\ncontributions, see [the advanced contribution\nsection](https://docs.docker.com/opensource/workflow/advanced-contributing/) in\nthe contributors guide.\n\n### Connect with other Moby Project contributors\n\n<table class=\"tg\">\n  <col width=\"45%\">\n  <col width=\"65%\">\n  <tr>\n    <td>Forums</td>\n    <td>\n      A public forum for users to discuss questions and explore current design patterns and\n      best practices about all the Moby projects. To participate, log in with your Github\n      account or create an account at <a href=\"https://forums.mobyproject.org\" target=\"_blank\">https://forums.mobyproject.org</a>.\n    </td>\n  </tr>\n  <tr>\n    <td>Slack</td>\n    <td>\n      <p>\n        Register for the Docker Community Slack at\n\t<a href=\"https://dockr.ly/comm-slack\" target=\"_blank\">https://dockr.ly/comm-slack</a>.\n        We use the #moby-project channel for general discussion, and there are separate channels for other Moby projects such as #containerd.\n      </p>\n    </td>\n  </tr>\n  <tr>\n    <td>Twitter</td>\n    <td>\n      You can follow <a href=\"https://twitter.com/moby/\" target=\"_blank\">Moby Project Twitter feed</a>\n      to get updates on our products. You can also tweet us questions or just\n      share blogs or stories.\n    </td>\n  </tr>\n</table>\n\n\n### Conventions\n\nFork the repository and make changes on your fork in a feature branch:\n\n- If it's a bug fix branch, name it XXXX-something where XXXX is the number of\n\tthe issue. \n- If it's a feature branch, create an enhancement issue to announce\n\tyour intentions, and name it XXXX-something where XXXX is the number of the\n\tissue.\n\nSubmit tests for your changes. See [TESTING.md](./TESTING.md) for details.\n\nIf your changes need integration tests, write them against the API. The `cli`\nintegration tests are slowly either migrated to API tests or moved away as unit\ntests in `docker/cli` and end-to-end tests for Docker.\n\nUpdate the documentation when creating or modifying features. Test your\ndocumentation changes for clarity, concision, and correctness, as well as a\nclean documentation build. See our contributors guide for [our style\nguide](https://docs.docker.com/opensource/doc-style) and instructions on [building\nthe documentation](https://docs.docker.com/opensource/project/test-and-docs/#build-and-test-the-documentation).\n\nWrite clean code. Universally formatted code promotes ease of writing, reading,\nand maintenance. Always run `gofmt -s -w file.go` on each changed file before\ncommitting your changes. Most editors have plug-ins that do this automatically.\n\nPull request descriptions should be as clear as possible and include a reference\nto all the issues that they address.\n\n### Successful Changes\n\nBefore contributing large or high impact changes, make the effort to coordinate\nwith the maintainers of the project before submitting a pull request. This\nprevents you from doing extra work that may or may not be merged.\n\nLarge PRs that are just submitted without any prior communication are unlikely\nto be successful.\n\nWhile pull requests are the methodology for submitting changes to code, changes\nare much more likely to be accepted if they are accompanied by additional\nengineering work. While we don't define this explicitly, most of these goals\nare accomplished through communication of the design goals and subsequent\nsolutions. Often times, it helps to first state the problem before presenting\nsolutions.\n\nTypically, the best methods of accomplishing this are to submit an issue,\nstating the problem. This issue can include a problem statement and a\nchecklist with requirements. If solutions are proposed, alternatives should be\nlisted and eliminated. Even if the criteria for elimination of a solution is\nfrivolous, say so.\n\nLarger changes typically work best with design documents. These are focused on\nproviding context to the design at the time the feature was conceived and can\ninform future documentation contributions.\n\n### Commit Messages\n\nCommit messages must start with a capitalized and short summary (max. 50 chars)\nwritten in the imperative, followed by an optional, more detailed explanatory\ntext which is separated from the summary by an empty line.\n\nCommit messages should follow best practices, including explaining the context\nof the problem and how it was solved, including in caveats or follow up changes\nrequired. They should tell the story of the change and provide readers\nunderstanding of what led to it.\n\nIf you're lost about what this even means, please see [How to Write a Git\nCommit Message](http://chris.beams.io/posts/git-commit/) for a start.\n\nIn practice, the best approach to maintaining a nice commit message is to\nleverage a `git add -p` and `git commit --amend` to formulate a solid\nchangeset. This allows one to piece together a change, as information becomes\navailable.\n\nIf you squash a series of commits, don't just submit that. Re-write the commit\nmessage, as if the series of commits was a single stroke of brilliance.\n\nThat said, there is no requirement to have a single commit for a PR, as long as\neach commit tells the story. For example, if there is a feature that requires a\npackage, it might make sense to have the package in a separate commit then have\na subsequent commit that uses it.\n\nRemember, you're telling part of the story with the commit message. Don't make\nyour chapter weird.\n\n### Review\n\nCode review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Post\na comment after pushing. New commits show up in the pull request automatically,\nbut the reviewers are notified only when you comment.\n\nPull requests must be cleanly rebased on top of master without multiple branches\nmixed into the PR.\n\n**Git tip**: If your PR no longer merges cleanly, use `rebase master` in your\nfeature branch to update your pull request rather than `merge master`.\n\nBefore you make a pull request, squash your commits into logical units of work\nusing `git rebase -i` and `git push -f`. A logical unit of work is a consistent\nset of patches that should be reviewed together: for example, upgrading the\nversion of a vendored dependency and taking advantage of its now available new\nfeature constitute two separate units of work. Implementing a new function and\ncalling it in another file constitute a single logical unit of work. The very\nhigh majority of submissions should have a single commit, so if in doubt: squash\ndown to one.\n\nAfter every commit, [make sure the test suite passes](./TESTING.md). Include\ndocumentation changes in the same pull request so that a revert would remove\nall traces of the feature or fix.\n\nInclude an issue reference like `Closes #XXXX` or `Fixes #XXXX` in commits that\nclose an issue. Including references automatically closes the issue on a merge.\n\nPlease do not add yourself to the `AUTHORS` file, as it is regenerated regularly\nfrom the Git history.\n\nPlease see the [Coding Style](#coding-style) for further guidelines.\n\n### Merge approval\n\nMoby maintainers use LGTM (Looks Good To Me) in comments on the code review to\nindicate acceptance, or use the Github review approval feature.\n\nFor an explanation of the review and approval process see the\n[REVIEWING](project/REVIEWING.md) page.\n\n### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n### How can I become a maintainer?\n\nThe procedures for adding new maintainers are explained in the \n[/project/GOVERNANCE.md](/project/GOVERNANCE.md)\nfile in this repository.\n\nDon't forget: being a maintainer is a time investment. Make sure you\nwill have time to make yourself available. You don't have to be a\nmaintainer to make a difference on the project!\n\n## Moby community guidelines\n\nWe want to keep the Moby community awesome, growing and collaborative. We need\nyour help to keep it that way. To help with this we've come up with some general\nguidelines for the community as a whole:\n\n* Be nice: Be courteous, respectful and polite to fellow community members:\n  no regional, racial, gender, or other abuse will be tolerated. We like\n  nice people way better than mean ones!\n\n* Encourage diversity and participation: Make everyone in our community feel\n  welcome, regardless of their background and the extent of their\n  contributions, and do everything possible to encourage participation in\n  our community.\n\n* Keep it legal: Basically, don't get us in trouble. Share only content that\n  you own, do not share private or sensitive information, and don't break\n  the law.\n\n* Stay on topic: Make sure that you are posting to the correct channel and\n  avoid off-topic discussions. Remember when you update an issue or respond\n  to an email you are potentially sending to a large number of people. Please\n  consider this before you update. Also remember that nobody likes spam.\n\n* Don't send email to the maintainers: There's no need to send email to the\n  maintainers to ask them to investigate an issue or to take a look at a\n  pull request. Instead of sending an email, GitHub mentions should be\n  used to ping maintainers to review a pull request, a proposal or an\n  issue.\n\nThe open source governance for this repository is handled via the [Moby Technical Steering Committee (TSC)](https://github.com/moby/tsc)\ncharter. For any concerns with the community process regarding technical contributions,\nplease contact the TSC. More information on project governance is available in\nour [project/GOVERNANCE.md](/project/GOVERNANCE.md) document.\n\n### Guideline violations — 3 strikes method\n\nThe point of this section is not to find opportunities to punish people, but we\ndo need a fair way to deal with people who are making our community suck.\n\n1. First occurrence: We'll give you a friendly, but public reminder that the\n   behavior is inappropriate according to our guidelines.\n\n2. Second occurrence: We will send you a private message with a warning that\n   any additional violations will result in removal from the community.\n\n3. Third occurrence: Depending on the violation, we may need to delete or ban\n   your account.\n\n**Notes:**\n\n* Obvious spammers are banned on first occurrence. If we don't do this, we'll\n  have spam all over the place.\n\n* Violations are forgiven after 6 months of good behavior, and we won't hold a\n  grudge.\n\n* People who commit minor infractions will get some education, rather than\n  hammering them in the 3 strikes process.\n\n* The rules apply equally to everyone in the community, no matter how much\n\tyou've contributed.\n\n* Extreme violations of a threatening, abusive, destructive or illegal nature\n\twill be addressed immediately and are not subject to 3 strikes or forgiveness.\n\n* Contact abuse@docker.com to report abuse or appeal violations. In the case of\n\tappeals, we know that mistakes happen, and we'll work with you to come up with a\n\tfair solution if there has been a misunderstanding.\n\n## Coding Style\n\nUnless explicitly stated, we follow all coding guidelines from the Go\ncommunity. While some of these standards may seem arbitrary, they somehow seem\nto result in a solid, consistent codebase.\n\nIt is possible that the code base does not currently comply with these\nguidelines. We are not looking for a massive PR that fixes this, since that\ngoes against the spirit of the guidelines. All new contributions should make a\nbest effort to clean up and make the code base better than they left it.\nObviously, apply your best judgement. Remember, the goal here is to make the\ncode base easier for humans to navigate and understand. Always keep that in\nmind when nudging others to comply.\n\nThe rules:\n\n1. All code should be formatted with `gofmt -s`.\n2. All code should pass the default levels of\n   [`golint`](https://github.com/golang/lint).\n3. All code should follow the guidelines covered in [Effective\n   Go](http://golang.org/doc/effective_go.html) and [Go Code Review\n   Comments](https://github.com/golang/go/wiki/CodeReviewComments).\n4. Comment the code. Tell us the why, the history and the context.\n5. Document _all_ declarations and methods, even private ones. Declare\n   expectations, caveats and anything else that may be important. If a type\n   gets exported, having the comments already there will ensure it's ready.\n6. Variable name length should be proportional to its context and no longer.\n   `noCommaALongVariableNameLikeThisIsNotMoreClearWhenASimpleCommentWouldDo`.\n   In practice, short methods will have short variable names and globals will\n   have longer names.\n7. No underscores in package names. If you need a compound name, step back,\n   and re-examine why you need a compound name. If you still think you need a\n   compound name, lose the underscore.\n8. No utils or helpers packages. If a function is not general enough to\n   warrant its own package, it has not been written generally enough to be a\n   part of a util package. Just leave it unexported and well-documented.\n9. All tests should run with `go test` and outside tooling should not be\n   required. No, we don't need another unit testing framework. Assertion\n   packages are acceptable if they provide _real_ incremental value.\n10. Even though we call these \"rules\" above, they are actually just\n    guidelines. Since you've read all the rules, you now know that.\n\nIf you are having trouble getting into the mood of idiomatic Go, we recommend\nreading through [Effective Go](https://go.dev/doc/effective_go). The\n[Go Blog](https://go.dev/blog/) is also a great resource. Drinking the\nkool-aid is a lot easier than going thirsty.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 27.63,
          "content": "# syntax=docker/dockerfile:1.7\n\nARG GO_VERSION=1.23.4\nARG BASE_DEBIAN_DISTRO=\"bookworm\"\nARG GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\"\nARG XX_VERSION=1.6.1\n\nARG VPNKIT_VERSION=0.5.0\n\nARG DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\"\nARG DOCKERCLI_VERSION=v27.3.1\n# cli version used for integration-cli tests\nARG DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\"\nARG DOCKERCLI_INTEGRATION_VERSION=v17.06.2-ce\nARG BUILDX_VERSION=0.18.0\nARG COMPOSE_VERSION=v2.30.3\n\nARG SYSTEMD=\"false\"\nARG FIREWALLD=\"false\"\nARG DOCKER_STATIC=1\n\n# REGISTRY_VERSION specifies the version of the registry to download from\n# https://hub.docker.com/r/distribution/distribution. This version of\n# the registry is used to test schema 2 manifests. Generally,  the version\n# specified here should match a current release.\nARG REGISTRY_VERSION=3.0.0-rc.1\n\n# delve is currently only supported on linux/amd64 and linux/arm64;\n# https://github.com/go-delve/delve/blob/v1.8.1/pkg/proc/native/support_sentinel.go#L1-L6\nARG DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64}\nARG DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}\nARG DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}\n\n# cross compilation helper\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# dummy stage to make sure the image is built for deps that don't support some\n# architectures\nFROM --platform=$BUILDPLATFORM busybox AS build-dummy\nRUN mkdir -p /build\nFROM scratch AS binary-dummy\nCOPY --from=build-dummy /build /build\n\n# base\nFROM --platform=$BUILDPLATFORM ${GOLANG_IMAGE} AS base\nCOPY --from=xx / /\nRUN echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache\nRUN apt-get update && apt-get install --no-install-recommends -y file\nENV GO111MODULE=off\nENV GOTOOLCHAIN=local\n\nFROM base AS criu\nADD --chmod=0644 https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key /etc/apt/trusted.gpg.d/criu.gpg.asc\nRUN --mount=type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt \\\n        echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version\n\n# registry\nFROM base AS registry-src\nWORKDIR /usr/src/registry\nRUN git init . && git remote add origin \"https://github.com/distribution/distribution.git\"\n\nFROM base AS registry\nWORKDIR /go/src/github.com/docker/distribution\n\n# REGISTRY_VERSION_SCHEMA1 specifies the version of the registry to build and\n# install from the https://github.com/docker/distribution repository. This is\n# an older (pre v2.3.0) version of the registry that only supports schema1\n# manifests. This version of the registry is not working on arm64, so installation\n# is skipped on that architecture.\nARG REGISTRY_VERSION_SCHEMA1=v2.1.0\nARG TARGETPLATFORM\nRUN --mount=from=registry-src,src=/usr/src/registry,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=registry-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=tmpfs,target=/go/src <<EOT\n  set -ex\n  export GOPATH=\"/go/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"\n  # Make the /build directory no matter what so that it doesn't fail on arm64 or\n  # any other platform where we don't build this registry\n  mkdir /build\n  case $TARGETPLATFORM in\n    linux/amd64|linux/arm/v7|linux/ppc64le|linux/s390x)\n      git fetch -q --depth 1 origin \"${REGISTRY_VERSION_SCHEMA1}\" +refs/tags/*:refs/tags/*\n      git checkout -q FETCH_HEAD\n      CGO_ENABLED=0 xx-go build -o /build/registry-v2-schema1 -v ./cmd/registry\n      xx-verify /build/registry-v2-schema1\n      ;;\n  esac\nEOT\n\nFROM distribution/distribution:$REGISTRY_VERSION AS registry-v2\nRUN mkdir /build && mv /bin/registry /build/registry-v2\n\n# go-swagger\nFROM base AS swagger-src\nWORKDIR /usr/src/swagger\n# Currently uses a fork from https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix\n# TODO: move to under moby/ or fix upstream go-swagger to work for us.\nRUN git init . && git remote add origin \"https://github.com/kolyshkin/go-swagger.git\"\n# GO_SWAGGER_COMMIT specifies the version of the go-swagger binary to build and\n# install. Go-swagger is used in CI for validating swagger.yaml in hack/validate/swagger-gen\nARG GO_SWAGGER_COMMIT=c56166c036004ba7a3a321e5951ba472b9ae298c\nRUN git fetch -q --depth 1 origin \"${GO_SWAGGER_COMMIT}\" && git checkout -q FETCH_HEAD\n\nFROM base AS swagger\nWORKDIR /go/src/github.com/go-swagger/go-swagger\nARG TARGETPLATFORM\nRUN --mount=from=swagger-src,src=/usr/src/swagger,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=tmpfs,target=/go/src/ <<EOT\n  set -e\n  xx-go build -o /build/swagger ./cmd/swagger\n  xx-verify /build/swagger\nEOT\n\n# frozen-images\n# See also frozenImages in \"testutil/environment/protect.go\" (which needs to\n# be updated when adding images to this list)\nFROM debian:${BASE_DEBIAN_DISTRO} AS frozen-images\nRUN --mount=type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt \\\n       apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq\n# Get useful and necessary Hub images so we can \"docker load\" locally instead of pulling\nCOPY contrib/download-frozen-image-v2.sh /\nARG TARGETARCH\nARG TARGETVARIANT\nRUN /download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:bookworm-slim@sha256:2bc5c236e9b262645a323e9088dfa3bb1ecb16cc75811daf40a23a824d665be9 \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343\n\n# delve\nFROM base AS delve-src\nWORKDIR /usr/src/delve\nRUN git init . && git remote add origin \"https://github.com/go-delve/delve.git\"\n# DELVE_VERSION specifies the version of the Delve debugger binary\n# from the https://github.com/go-delve/delve repository.\n# It can be used to run Docker with a possibility of\n# attaching debugger to it.\nARG DELVE_VERSION=v1.23.0\nRUN git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS delve-supported\nWORKDIR /usr/src/delve\nARG TARGETPLATFORM\nRUN --mount=from=delve-src,src=/usr/src/delve,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod <<EOT\n  set -e\n  GO111MODULE=on xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\nEOT\n\nFROM binary-dummy AS delve-unsupported\nFROM delve-${DELVE_SUPPORTED} AS delve\n\nFROM base AS tomll\n# GOTOML_VERSION specifies the version of the tomll binary to build and install\n# from the https://github.com/pelletier/go-toml repository. This binary is used\n# in CI in the hack/validate/toml script.\n#\n# When updating this version, consider updating the github.com/pelletier/go-toml\n# dependency in vendor.mod accordingly.\nARG GOTOML_VERSION=v1.8.1\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/pelletier/go-toml/cmd/tomll@${GOTOML_VERSION}\" \\\n     && /build/tomll --help\n\nFROM base AS gowinres\n# GOWINRES_VERSION defines go-winres tool version\nARG GOWINRES_VERSION=v0.3.1\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help\n\n# containerd\nFROM base AS containerd-src\nWORKDIR /usr/src/containerd\nRUN git init . && git remote add origin \"https://github.com/containerd/containerd.git\"\n# CONTAINERD_VERSION is used to build containerd binaries, and used for the\n# integration tests. The distributed docker .deb and .rpm packages depend on a\n# separate (containerd.io) package, which may be a different version as is\n# specified here. The containerd golang package is also pinned in vendor.mod.\n# When updating the binary version you may also need to update the vendor\n# version to pick up bug fixes or new APIs, however, usually the Go packages\n# are built from a commit from the master branch.\nARG CONTAINERD_VERSION=v1.7.25\nRUN git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS containerd-build\nWORKDIR /go/src/github.com/containerd/containerd\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config\nARG DOCKER_STATIC\nRUN --mount=from=containerd-src,src=/usr/src/containerd,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM <<EOT\n  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\nEOT\n\nFROM containerd-build AS containerd-linux\nFROM binary-dummy AS containerd-windows\nFROM containerd-${TARGETOS} AS containerd\n\nFROM base AS golangci_lint\nARG GOLANGCI_LINT_VERSION=v1.62.0\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version\n\nFROM base AS gotestsum\nARG GOTESTSUM_VERSION=v1.8.2\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version\n\nFROM base AS shfmt\nARG SHFMT_VERSION=v3.8.0\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version\n\nFROM base AS gopls\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version\n\nFROM base AS dockercli\nWORKDIR /go/src/github.com/docker/cli\nARG DOCKERCLI_REPOSITORY\nARG DOCKERCLI_VERSION\nARG TARGETPLATFORM\nRUN --mount=source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh \\\n    --mount=type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git \\\n    --mount=type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM \\\n        rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version\n\nFROM base AS dockercli-integration\nWORKDIR /go/src/github.com/docker/cli\nARG DOCKERCLI_INTEGRATION_REPOSITORY\nARG DOCKERCLI_INTEGRATION_VERSION\nARG TARGETPLATFORM\nRUN --mount=source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh \\\n    --mount=type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git \\\n    --mount=type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM \\\n        rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version\n\n# runc\nFROM base AS runc-src\nWORKDIR /usr/src/runc\nRUN git init . && git remote add origin \"https://github.com/opencontainers/runc.git\"\n# RUNC_VERSION should match the version that is used by the containerd version\n# that is used. If you need to update runc, open a pull request in the containerd\n# project first, and update both after that is merged. When updating RUNC_VERSION,\n# consider updating runc in vendor.mod accordingly.\nARG RUNC_VERSION=v1.2.4\nRUN git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS runc-build\nWORKDIR /go/src/github.com/opencontainers/runc\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config\nARG DOCKER_STATIC\nRUN --mount=from=runc-src,src=/usr/src/runc,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM <<EOT\n  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\nEOT\n\nFROM runc-build AS runc-linux\nFROM binary-dummy AS runc-windows\nFROM runc-${TARGETOS} AS runc\n\n# tini\nFROM base AS tini-src\nWORKDIR /usr/src/tini\nRUN git init . && git remote add origin \"https://github.com/krallin/tini.git\"\n# TINI_VERSION specifies the version of tini (docker-init) to build. This\n# binary is used when starting containers with the `--init` option.\nARG TINI_VERSION=v0.19.0\nRUN git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS tini-build\nWORKDIR /go/src/github.com/krallin/tini\nRUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends cmake\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \\\n        xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config\nRUN --mount=from=tini-src,src=/usr/src/tini,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM <<EOT\n  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\nEOT\n\nFROM tini-build AS tini-linux\nFROM binary-dummy AS tini-windows\nFROM tini-${TARGETOS} AS tini\n\n# rootlesskit\nFROM base AS rootlesskit-src\nWORKDIR /usr/src/rootlesskit\nRUN git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\"\n# When updating, also update vendor.mod and hack/dockerfile/install/rootlesskit.installer accordingly.\nARG ROOTLESSKIT_VERSION=v2.3.1\nRUN git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS rootlesskit-build\nWORKDIR /go/src/github.com/rootless-containers/rootlesskit\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config\nENV GO111MODULE=on\nARG DOCKER_STATIC\nRUN --mount=from=rootlesskit-src,src=/usr/src/rootlesskit,rw \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM <<EOT\n  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\nEOT\nCOPY --link ./contrib/dockerd-rootless.sh /build/\nCOPY --link ./contrib/dockerd-rootless-setuptool.sh /build/\n\nFROM rootlesskit-build AS rootlesskit-linux\nFROM binary-dummy AS rootlesskit-windows\nFROM rootlesskit-${TARGETOS} AS rootlesskit\n\nFROM base AS crun\nARG CRUN_VERSION=1.12\nRUN --mount=type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;\nRUN --mount=type=tmpfs,target=/tmp/crun-build \\\n    git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install\n\n# vpnkit\n# use dummy scratch stage to avoid build to fail for unsupported platforms\nFROM scratch AS vpnkit-windows\nFROM scratch AS vpnkit-linux-386\nFROM scratch AS vpnkit-linux-arm\nFROM scratch AS vpnkit-linux-ppc64le\nFROM scratch AS vpnkit-linux-riscv64\nFROM scratch AS vpnkit-linux-s390x\nFROM djs55/vpnkit:${VPNKIT_VERSION} AS vpnkit-linux-amd64\nFROM djs55/vpnkit:${VPNKIT_VERSION} AS vpnkit-linux-arm64\nFROM vpnkit-linux-${TARGETARCH} AS vpnkit-linux\nFROM vpnkit-${TARGETOS} AS vpnkit\n\n# containerutility\nFROM base AS containerutil-src\nWORKDIR /usr/src/containerutil\nRUN git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\"\nARG CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9\nRUN git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS containerutil-build\nWORKDIR /usr/src/containerutil\nARG TARGETPLATFORM\nRUN xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config\nRUN --mount=from=containerutil-src,src=/usr/src/containerutil,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM <<EOT\n  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\nEOT\n\nFROM binary-dummy AS containerutil-linux\nFROM containerutil-build AS containerutil-windows-amd64\nFROM containerutil-windows-${TARGETARCH} AS containerutil-windows\nFROM containerutil-${TARGETOS} AS containerutil\nFROM docker/buildx-bin:${BUILDX_VERSION} as buildx\nFROM docker/compose-bin:${COMPOSE_VERSION} as compose\n\nFROM base AS dev-systemd-false\nCOPY --link --from=frozen-images /build/ /docker-frozen-images\nCOPY --link --from=swagger       /build/ /usr/local/bin/\nCOPY --link --from=delve         /build/ /usr/local/bin/\nCOPY --link --from=tomll         /build/ /usr/local/bin/\nCOPY --link --from=gowinres      /build/ /usr/local/bin/\nCOPY --link --from=tini          /build/ /usr/local/bin/\nCOPY --link --from=registry      /build/ /usr/local/bin/\nCOPY --link --from=registry-v2   /build/ /usr/local/bin/\n\n# Skip the CRIU stage for now, as the opensuse package repository is sometimes\n# unstable, and we're currently not using it in CI.\n#\n# FIXME(thaJeztah): re-enable this stage when https://github.com/moby/moby/issues/38963 is resolved (see https://github.com/moby/moby/pull/38984)\n# COPY --link --from=criu          /build/ /usr/local/bin/\nCOPY --link --from=gotestsum     /build/ /usr/local/bin/\nCOPY --link --from=golangci_lint /build/ /usr/local/bin/\nCOPY --link --from=shfmt         /build/ /usr/local/bin/\nCOPY --link --from=runc          /build/ /usr/local/bin/\nCOPY --link --from=containerd    /build/ /usr/local/bin/\nCOPY --link --from=rootlesskit   /build/ /usr/local/bin/\nCOPY --link --from=vpnkit        /       /usr/local/bin/\nCOPY --link --from=containerutil /build/ /usr/local/bin/\nCOPY --link --from=crun          /build/ /usr/local/bin/\nCOPY --link hack/dockerfile/etc/docker/  /etc/docker/\nCOPY --link --from=buildx        /buildx /usr/local/libexec/docker/cli-plugins/docker-buildx\nCOPY --link --from=compose       /docker-compose /usr/libexec/docker/cli-plugins/docker-compose\n\nENV PATH=/usr/local/cli:$PATH\nENV TEST_CLIENT_BINARY=/usr/local/cli-integration/docker\nENV CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock\nENV CONTAINERD_NAMESPACE=moby\nWORKDIR /go/src/github.com/docker/docker\nVOLUME /var/lib/docker\nVOLUME /home/unprivilegeduser/.local/share/docker\n# Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n\nFROM dev-systemd-false AS dev-systemd-true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv\nENTRYPOINT [\"hack/dind-systemd\"]\n\nFROM dev-systemd-${SYSTEMD} AS dev-firewalld-false\n\nFROM dev-systemd-true AS dev-firewalld-true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld\nRUN sed -i 's/FirewallBackend=nftables/FirewallBackend=iptables/' /etc/firewalld/firewalld.conf\n\nFROM dev-firewalld-${FIREWALLD} AS dev-base\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser\n# Let us use a .bashrc file\nRUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc\n# Activate bash completion and include Docker's completion if mounted with DOCKER_BASH_COMPLETION_PATH\nRUN echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc\nRUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker\nRUN ldconfig\n# Set dev environment as safe git directory to prevent \"dubious ownership\" errors\n# when bind-mounting the source into the dev-container. See https://github.com/moby/moby/pull/44930\nRUN git config --global --add safe.directory $GOPATH/src/github.com/docker/docker\n# This should only install packages that are specifically needed for the dev environment and nothing else\n# Do you really need to add another package here? Can it be done in a different build stage?\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            net-tools \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd\n# Switch to use iptables instead of nftables (to match the CI hosts)\n# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)\nRUN update-alternatives --set iptables  /usr/sbin/iptables-legacy  || true \\\n && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true \\\n && update-alternatives --set arptables /usr/sbin/arptables-legacy || true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint\nCOPY --link --from=dockercli             /build/ /usr/local/cli\nCOPY --link --from=dockercli-integration /build/ /usr/local/cli-integration\n\nFROM base AS build\nCOPY --from=gowinres /build/ /usr/local/bin/\nWORKDIR /go/src/github.com/docker/docker\nENV GO111MODULE=off\nENV CGO_ENABLED=1\nRUN --mount=type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt \\\n        xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config\nARG DOCKER_BUILDTAGS\nARG DOCKER_DEBUG\nARG DOCKER_GITCOMMIT=HEAD\nARG DOCKER_LDFLAGS\nARG DOCKER_STATIC\nARG VERSION\nARG PLATFORM\nARG PRODUCT\nARG DEFAULT_PRODUCT_LICENSE\nARG PACKAGER_NAME\n# PREFIX overrides DEST dir in make.sh script otherwise it fails because of\n# read only mount in current work dir\nENV PREFIX=/tmp\nRUN <<EOT\n  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\nEOT\nRUN --mount=type=bind,target=.,rw \\\n    --mount=type=tmpfs,target=cli/winresources/dockerd \\\n    --mount=type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM <<EOT\n  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\nEOT\n\n# usage:\n# > docker buildx bake binary\n# > DOCKER_STATIC=0 docker buildx bake binary\n# or\n# > make binary\n# > make dynbinary\nFROM scratch AS binary\nCOPY --from=build /build/ /\n\n# usage:\n# > docker buildx bake all\nFROM scratch AS all\nCOPY --link --from=tini          /build/ /\nCOPY --link --from=runc          /build/ /\nCOPY --link --from=containerd    /build/ /\nCOPY --link --from=rootlesskit   /build/ /\nCOPY --link --from=containerutil /build/ /\nCOPY --link --from=vpnkit        /       /\nCOPY --link --from=build         /build  /\n\n# smoke tests\n# usage:\n# > docker buildx bake binary-smoketest\nFROM --platform=$TARGETPLATFORM base AS smoketest\nWORKDIR /usr/local/bin\nCOPY --from=build /build .\nRUN <<EOT\n  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\nEOT\n\n# devcontainer is a stage used by .devcontainer/devcontainer.json\nFROM dev-base AS devcontainer\nCOPY --link . .\nCOPY --link --from=gopls         /build/ /usr/local/bin/\n\n# usage:\n# > make shell\n# > SYSTEMD=true make shell\nFROM dev-base AS dev\nCOPY --link . .\n"
        },
        {
          "name": "Dockerfile.simple",
          "type": "blob",
          "size": 1.4,
          "content": "# docker build -t docker:simple -f Dockerfile.simple .\n# docker run --rm docker:simple hack/make.sh dynbinary\n# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit\n# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration\n\n# This represents the bare minimum required to build and test Docker.\n\nARG GO_VERSION=1.23.4\n\nARG BASE_DEBIAN_DISTRO=\"bookworm\"\nARG GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\"\n\nFROM ${GOLANG_IMAGE}\nENV GO111MODULE=off\nENV GOTOOLCHAIN=local\n\n# Compile and runtime deps\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#build-dependencies\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tcurl \\\n\t\tcmake \\\n\t\tgit \\\n\t\tlibseccomp-dev \\\n\t\tca-certificates \\\n\t\te2fsprogs \\\n\t\tiptables \\\n\t\tpkg-config \\\n\t\tpigz \\\n\t\tprocps \\\n\t\txfsprogs \\\n\t\txz-utils \\\n\t\t\\\n\t\tvim-common \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install runc, containerd, tini and docker-proxy\n# Please edit hack/dockerfile/install/<name>.installer to update them.\nCOPY hack/dockerfile/install hack/dockerfile/install\nRUN for i in runc containerd tini proxy dockercli; \\\n\t\tdo hack/dockerfile/install/install.sh $i; \\\n\tdone\nENV PATH=/usr/local/cli:$PATH\n\nENV AUTO_GOPATH 1\nWORKDIR /usr/src/docker\nCOPY . /usr/src/docker\n"
        },
        {
          "name": "Dockerfile.windows",
          "type": "blob",
          "size": 13.35,
          "content": "# escape=`\n\n# -----------------------------------------------------------------------------------------\n# This file describes the standard way to build Docker in a container on Windows\n# Server 2016 or Windows 10.\n#\n# Maintainer: @jhowardmsft\n# -----------------------------------------------------------------------------------------\n\n\n# Prerequisites:\n# --------------\n#\n# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major \n#    build number must be at least 14393. This can be confirmed, for example, by \n#    running the following from an elevated PowerShell prompt - this sample output \n#    is from a fully up to date machine as at mid-November 2016:\n#\n#    >> PS C:\\> $(gin).WindowsBuildLabEx\n#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100\n#\n# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.\n#\n# 3. The machine must be configured to run containers. For example, by following\n#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or\n#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md\n#\n# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server\n#    containers as the default option, it is recommended you have at least 1GB \n#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you\n#    should have at least 4GB of memory assigned. Note also, to run Hyper-V \n#    containers in a VM, it is necessary to configure the VM for nested virtualization.\n\n# -----------------------------------------------------------------------------------------\n\n\n# Usage:\n# -----\n#\n#  The following steps should be run from an (elevated*) Windows PowerShell prompt. \n#\n#  (*In a default installation of containers on Windows following the quick-start guidance at\n#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,\n#    the docker.exe client must run elevated to be able to connect to the daemon).\n#\n# 1. Clone the sources from github.com:\n#\n#    >>   git clone https://github.com/docker/docker.git C:\\gopath\\src\\github.com\\docker\\docker\n#    >>   Cloning into 'C:\\gopath\\src\\github.com\\docker\\docker'...\n#    >>   remote: Counting objects: 186216, done.\n#    >>   remote: Compressing objects: 100% (21/21), done.\n#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195\n#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.\n#    >>   Resolving deltas: 100% (123139/123139), done.\n#    >>   Checking connectivity... done.\n#    >>   Checking out files: 100% (3912/3912), done.\n#    >>   PS C:\\>\n#\n#\n# 2. Change directory to the cloned docker sources:\n#\n#    >>   cd C:\\gopath\\src\\github.com\\docker\\docker \n#\n#\n# 3. Build a docker image with the components required to build the docker binaries from source\n#    by running one of the following:\n#\n#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          \n#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)\n#\n#\n# 4. Build the docker executable binaries by running one of the following:\n#\n#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)\n#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\\make.ps1 -Binary\n#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\\make.ps1 -Binary    (if using Hyper-V containers)\n#\n#\n# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination \n#    folder on the host system where you want the binaries to be located.\n#\n#    >>   docker cp binaries:C:\\gopath\\src\\github.com\\docker\\docker\\bundles\\docker.exe C:\\HostPath\\docker.exe\n#    >>   docker cp binaries:C:\\gopath\\src\\github.com\\docker\\docker\\bundles\\dockerd.exe C:\\HostPath\\dockerd.exe\n#\n#\n# 6. (Optional) Remove the interim container holding the built executable binaries:\n#\n#    >>    docker rm binaries\n#\n#\n# 7. (Optional) Remove the image used for the container in which the executable\n#    binaries are build. Tip - it may be useful to keep this image around if you need to\n#    build multiple times. Then you can take advantage of the builder cache to have an\n#    image which has all the components required to build the binaries already installed.\n#\n#    >>    docker rmi nativebuildimage\n#\n\n# -----------------------------------------------------------------------------------------\n\n\n#  The validation tests can only run directly on the host. This is because they calculate\n#  information from the git repo, but the .git directory is not passed into the image as\n#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt\n#  (elevation is not required): (Note Go must be installed to run these tests)\n#\n#    >>   hack\\make.ps1 -DCO -PkgImports -GoFormat\n\n\n# -----------------------------------------------------------------------------------------\n\n\n#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of\n#  the following from an (elevated) Windows PowerShell prompt:\n#\n#    >>   docker run --rm nativebuildimage hack\\make.ps1 -TestUnit\n#    >>   docker run --rm -m 2GB nativebuildimage hack\\make.ps1 -TestUnit    (if using Hyper-V containers)\n\n\n# -----------------------------------------------------------------------------------------\n\n\n#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then \n#  run one of the following from an (elevated) Windows PowerShell prompt:\n#\n#    >>   docker run nativebuildimage hack\\make.ps1 -All\n#    >>   docker run -m 2GB nativebuildimage hack\\make.ps1 -All    (if using Hyper-V containers)\n\n# -----------------------------------------------------------------------------------------\n\n\n# Important notes:\n# ---------------\n#\n# Don't attempt to use a bind mount to pass a local directory as the bundles target\n# directory. It does not work (golang attempts for follow a mapped folder incorrectly).\n# Instead, use docker cp as per the example.\n#\n# go.zip is not removed from the image as it is used by the Windows CI servers\n# to ensure the host and image are running consistent versions of go.\n#\n# Nanoserver support is a work in progress. Although the image will build if the \n# FROM statement is updated, it will not work when running autogen through hack\\make.ps1. \n# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently\n# quit due to the use of console hooks which are not available.\n#\n# The docker integration tests do not currently run in a container on Windows, predominantly\n# due to Windows not supporting privileged mode, so anything using a volume would fail.\n# They (along with the rest of the docker CI suite) can be run using \n# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.\n#\n# -----------------------------------------------------------------------------------------\n\n\n# The number of build steps below are explicitly minimised to improve performance.\n\nARG WINDOWS_BASE_IMAGE=mcr.microsoft.com/windows/servercore\nARG WINDOWS_BASE_IMAGE_TAG=ltsc2022\nFROM ${WINDOWS_BASE_IMAGE}:${WINDOWS_BASE_IMAGE_TAG}\n\n# Use PowerShell as the default shell\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\nARG GO_VERSION=1.23.4\nARG GOTESTSUM_VERSION=v1.8.2\nARG GOWINRES_VERSION=v0.3.1\nARG CONTAINERD_VERSION=v1.7.25\n\n# Environment variable notes:\n#  - GO_VERSION must be consistent with 'Dockerfile' used by Linux.\n#  - CONTAINERD_VERSION must be consistent with 'hack/dockerfile/install/containerd.installer' used by Linux.\n#  - FROM_DOCKERFILE is used for detection of building within a container.\nENV GO_VERSION=${GO_VERSION} `\n    CONTAINERD_VERSION=${CONTAINERD_VERSION} `\n    GIT_VERSION=2.11.1 `\n    GOPATH=C:\\gopath `\n    GO111MODULE=off `\n    GOTOOLCHAIN=local `\n    FROM_DOCKERFILE=1 `\n    GOTESTSUM_VERSION=${GOTESTSUM_VERSION} `\n    GOWINRES_VERSION=${GOWINRES_VERSION}\n\nRUN `\n  Function Test-Nano() { `\n    $EditionId = (Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion' -Name 'EditionID').EditionId; `\n    return (($EditionId -eq 'ServerStandardNano') -or ($EditionId -eq 'ServerDataCenterNano') -or ($EditionId -eq 'NanoServer')); `\n  }`\n  `\n  Function Download-File([string] $source, [string] $target) { `\n    if (Test-Nano) { `\n      $handler = New-Object System.Net.Http.HttpClientHandler; `\n      $client = New-Object System.Net.Http.HttpClient($handler); `\n      $client.Timeout = New-Object System.TimeSpan(0, 30, 0); `\n      $cancelTokenSource = [System.Threading.CancellationTokenSource]::new(); `\n      $responseMsg = $client.GetAsync([System.Uri]::new($source), $cancelTokenSource.Token); `\n      $responseMsg.Wait(); `\n      if (!$responseMsg.IsCanceled) { `\n        $response = $responseMsg.Result; `\n        if ($response.IsSuccessStatusCode) { `\n          $downloadedFileStream = [System.IO.FileStream]::new($target, [System.IO.FileMode]::Create, [System.IO.FileAccess]::Write); `\n          $copyStreamOp = $response.Content.CopyToAsync($downloadedFileStream); `\n          $copyStreamOp.Wait(); `\n          $downloadedFileStream.Close(); `\n          if ($copyStreamOp.Exception -ne $null) { throw $copyStreamOp.Exception } `\n        } `\n      } else { `\n      Throw (\"Failed to download \" + $source) `\n      }`\n    } else { `\n      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `\n      $webClient = New-Object System.Net.WebClient; `\n      $webClient.DownloadFile($source, $target); `\n    } `\n  } `\n  `\n  setx /M PATH $('C:\\git\\cmd;C:\\git\\usr\\bin;'+$Env:PATH+';C:\\gcc\\bin;C:\\go\\bin;C:\\containerd\\bin'); `\n  `\n  Write-Host INFO: Downloading git...; `\n  $location='https://www.nuget.org/api/v2/package/GitForWindows/'+$Env:GIT_VERSION; `\n  Download-File $location C:\\gitsetup.zip; `\n  `\n  Write-Host INFO: Downloading go...; `\n  $dlGoVersion=$Env:GO_VERSION; `\n  Download-File \"https://go.dev/dl/go${dlGoVersion}.windows-amd64.zip\" C:\\go.zip; `\n  `\n  Write-Host INFO: Downloading compiler 1 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/gcc.zip C:\\gcc.zip; `\n  `\n  Write-Host INFO: Downloading compiler 2 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/runtime.zip C:\\runtime.zip; `\n  `\n  Write-Host INFO: Downloading compiler 3 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/binutils.zip C:\\binutils.zip; `\n  `\n  Write-Host INFO: Extracting git...; `\n  Expand-Archive C:\\gitsetup.zip C:\\git-tmp; `\n  New-Item -Type Directory C:\\git | Out-Null; `\n  Move-Item C:\\git-tmp\\tools\\* C:\\git\\.; `\n  Remove-Item -Recurse -Force C:\\git-tmp; `\n  `\n  Write-Host INFO: Expanding go...; `\n  Expand-Archive C:\\go.zip -DestinationPath C:\\; `\n  `\n  Write-Host INFO: Expanding compiler 1 of 3...; `\n  Expand-Archive C:\\gcc.zip -DestinationPath C:\\gcc -Force; `\n  Write-Host INFO: Expanding compiler 2 of 3...; `\n  Expand-Archive C:\\runtime.zip -DestinationPath C:\\gcc -Force; `\n  Write-Host INFO: Expanding compiler 3 of 3...; `\n  Expand-Archive C:\\binutils.zip -DestinationPath C:\\gcc -Force; `\n  `\n  Write-Host INFO: Removing downloaded files...; `\n  Remove-Item C:\\gcc.zip; `\n  Remove-Item C:\\runtime.zip; `\n  Remove-Item C:\\binutils.zip; `\n  Remove-Item C:\\gitsetup.zip; `\n  `\n  Write-Host INFO: Downloading containerd; `\n  Install-Package -Force 7Zip4PowerShell; `\n  $location='https://github.com/containerd/containerd/releases/download/'+$Env:CONTAINERD_VERSION+'/containerd-'+$Env:CONTAINERD_VERSION.TrimStart('v')+'-windows-amd64.tar.gz'; `\n  Download-File $location C:\\containerd.tar.gz; `\n  New-Item -Path C:\\containerd -ItemType Directory; `\n  Expand-7Zip C:\\containerd.tar.gz C:\\; `\n  Expand-7Zip C:\\containerd.tar C:\\containerd; `\n  Remove-Item C:\\containerd.tar.gz; `\n  Remove-Item C:\\containerd.tar; `\n  `\n  # Ensure all directories exist that we will require below....\n  $srcDir = \"\"\"$Env:GOPATH`\\src\\github.com\\docker\\docker\\bundles\"\"\"; `\n  Write-Host INFO: Ensuring existence of directory $srcDir...; `\n  New-Item -Force -ItemType Directory -Path $srcDir | Out-Null; `\n  `\n  Write-Host INFO: Configuring git core.autocrlf...; `\n  C:\\git\\cmd\\git config --global core.autocrlf true;\n\nRUN `\n  Function Install-GoTestSum() { `\n    $Env:GO111MODULE = 'on'; `\n    $tmpGobin = \"${Env:GOBIN_TMP}\"; `\n    $Env:GOBIN = \"\"\"${Env:GOPATH}`\\bin\"\"\"; `\n    Write-Host \"INFO: Installing gotestsum version $Env:GOTESTSUM_VERSION in $Env:GOBIN\"; `\n    &go install \"gotest.tools/gotestsum@${Env:GOTESTSUM_VERSION}\"; `\n    $Env:GOBIN = \"${tmpGobin}\"; `\n    $Env:GO111MODULE = 'off'; `\n    if ($LASTEXITCODE -ne 0) {  `\n      Throw '\"gotestsum install failed...\"'; `\n    } `\n  } `\n  `\n  Install-GoTestSum\n\nRUN `\n  Function Install-GoWinres() { `\n    $Env:GO111MODULE = 'on'; `\n    $tmpGobin = \"${Env:GOBIN_TMP}\"; `\n    $Env:GOBIN = \"\"\"${Env:GOPATH}`\\bin\"\"\"; `\n    Write-Host \"INFO: Installing go-winres version $Env:GOWINRES_VERSION in $Env:GOBIN\"; `\n    &go install \"github.com/tc-hib/go-winres@${Env:GOWINRES_VERSION}\"; `\n    $Env:GOBIN = \"${tmpGobin}\"; `\n    $Env:GO111MODULE = 'off'; `\n    if ($LASTEXITCODE -ne 0) {  `\n      Throw '\"go-winres install failed...\"'; `\n    } `\n  } `\n  `\n  Install-GoWinres\n\n# Make PowerShell the default entrypoint\nENTRYPOINT [\"powershell.exe\"]\n\n# Set the working directory to the location of the sources\nWORKDIR ${GOPATH}\\src\\github.com\\docker\\docker\n\n# Copy the sources into the container\nCOPY . .\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 7.11,
          "content": "#!groovy\npipeline {\n    agent none\n\n    options {\n        buildDiscarder(logRotator(daysToKeepStr: '30'))\n        timeout(time: 2, unit: 'HOURS')\n        timestamps()\n    }\n    parameters {\n        booleanParam(name: 'arm64', defaultValue: true, description: 'ARM (arm64) Build/Test')\n        booleanParam(name: 'dco', defaultValue: true, description: 'Run the DCO check')\n    }\n    environment {\n        DOCKER_BUILDKIT     = '1'\n        DOCKER_EXPERIMENTAL = '1'\n        DOCKER_GRAPHDRIVER  = 'overlay2'\n        CHECK_CONFIG_COMMIT = '33a3680e08d1007e72c3b3f1454f823d8e9948ee'\n        TESTDEBUG           = '0'\n        TIMEOUT             = '120m'\n    }\n    stages {\n        stage('pr-hack') {\n            when { changeRequest() }\n            steps {\n                script {\n                    echo \"Workaround for PR auto-cancel feature. Borrowed from https://issues.jenkins-ci.org/browse/JENKINS-43353\"\n                    def buildNumber = env.BUILD_NUMBER as int\n                    if (buildNumber > 1) milestone(buildNumber - 1)\n                    milestone(buildNumber)\n                }\n            }\n        }\n        stage('DCO-check') {\n            when {\n                beforeAgent true\n                expression { params.dco }\n            }\n            agent { label 'arm64 && ubuntu-2004' }\n            steps {\n                sh '''\n                docker run --rm \\\n                  -v \"$WORKSPACE:/workspace\" \\\n                  -e VALIDATE_REPO=${GIT_URL} \\\n                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                  alpine sh -c 'apk add --no-cache -q bash git openssh-client && git config --system --add safe.directory /workspace && cd /workspace && hack/validate/dco'\n                '''\n            }\n        }\n        stage('Build') {\n            parallel {\n                stage('arm64') {\n                    when {\n                        beforeAgent true\n                        expression { params.arm64 }\n                    }\n                    agent { label 'arm64 && ubuntu-2004' }\n                    environment {\n                        TEST_SKIP_INTEGRATION_CLI = '1'\n                    }\n\n                    stages {\n                        stage(\"Print info\") {\n                            steps {\n                                sh 'docker version'\n                                sh 'docker info'\n                                sh '''\n                                echo \"check-config.sh version: ${CHECK_CONFIG_COMMIT}\"\n                                curl -fsSL -o ${WORKSPACE}/check-config.sh \"https://raw.githubusercontent.com/moby/moby/${CHECK_CONFIG_COMMIT}/contrib/check-config.sh\" \\\n                                && bash ${WORKSPACE}/check-config.sh || true\n                                '''\n                            }\n                        }\n                        stage(\"Build dev image\") {\n                            steps {\n                                sh 'docker build --force-rm -t docker:${GIT_COMMIT} .'\n                            }\n                        }\n                        stage(\"Unit tests\") {\n                            steps {\n                                sh '''\n                                docker run --rm -t --privileged \\\n                                  -v \"$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles\" \\\n                                  --name docker-pr$BUILD_NUMBER \\\n                                  -e DOCKER_EXPERIMENTAL \\\n                                  -e DOCKER_GITCOMMIT=${GIT_COMMIT} \\\n                                  -e DOCKER_GRAPHDRIVER \\\n                                  -e VALIDATE_REPO=${GIT_URL} \\\n                                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                                  docker:${GIT_COMMIT} \\\n                                  hack/test/unit\n                                '''\n                            }\n                            post {\n                                always {\n                                    junit testResults: 'bundles/junit-report*.xml', allowEmptyResults: true\n                                }\n                            }\n                        }\n                        stage(\"Integration tests\") {\n                            environment { TEST_SKIP_INTEGRATION_CLI = '1' }\n                            steps {\n                                sh '''\n                                docker run --rm -t --privileged \\\n                                  -v \"$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles\" \\\n                                  --name docker-pr$BUILD_NUMBER \\\n                                  -e DOCKER_EXPERIMENTAL \\\n                                  -e DOCKER_GITCOMMIT=${GIT_COMMIT} \\\n                                  -e DOCKER_GRAPHDRIVER \\\n                                  -e TESTDEBUG \\\n                                  -e TEST_INTEGRATION_USE_SNAPSHOTTER \\\n                                  -e TEST_SKIP_INTEGRATION_CLI \\\n                                  -e TIMEOUT \\\n                                  -e VALIDATE_REPO=${GIT_URL} \\\n                                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                                  docker:${GIT_COMMIT} \\\n                                  hack/make.sh \\\n                                    dynbinary \\\n                                    test-integration\n                                '''\n                            }\n                            post {\n                                always {\n                                    junit testResults: 'bundles/**/*-report.xml', allowEmptyResults: true\n                                }\n                            }\n                        }\n                    }\n\n                    post {\n                        always {\n                            sh '''\n                            echo \"Ensuring container killed.\"\n                            docker rm -vf docker-pr$BUILD_NUMBER || true\n                            '''\n\n                            sh '''\n                            echo \"Chowning /workspace to jenkins user\"\n                            docker run --rm -v \"$WORKSPACE:/workspace\" busybox chown -R \"$(id -u):$(id -g)\" /workspace\n                            '''\n\n                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE', message: 'Failed to create bundles.tar.gz') {\n                                sh '''\n                                bundleName=arm64-integration\n                                echo \"Creating ${bundleName}-bundles.tar.gz\"\n                                # exclude overlay2 directories\n                                find bundles -path '*/root/*overlay2' -prune -o -type f \\\\( -name '*-report.json' -o -name '*.log' -o -name '*.prof' -o -name '*-report.xml' \\\\) -print | xargs tar -czf ${bundleName}-bundles.tar.gz\n                                '''\n\n                                archiveArtifacts artifacts: '*-bundles.tar.gz', allowEmptyArchive: true\n                            }\n                        }\n                        cleanup {\n                            sh 'make clean'\n                            deleteDir()\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.51,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2013-2018 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 18.4,
          "content": "# Moby maintainers file\n#\n# This file describes the maintainer groups within the moby/moby project.\n# More detail on Moby project governance is available in the\n# project/GOVERNANCE.md file found in this repository.\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant\n# parser.\n#\n# TODO(estesp): This file should not necessarily depend on docker/opensource\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\n\t[Org.\"Core maintainers\"]\n\n\t# The Core maintainers are the ghostbusters of the project: when there's a problem others\n\t# can't solve, they show up and fix it with bizarre devices and weaponry.\n\t# They have final say on technical implementation and coding style.\n\t# They are ultimately responsible for quality in all its forms: usability polish,\n\t# bugfixes, performance, stability, etc. When ownership  can cleanly be passed to\n\t# a subsystem, they are responsible for doing so and holding the\n\t# subsystem maintainers accountable. If ownership is unclear, they are the de facto owners.\n\n\t\tpeople = [\n\t\t\t\"akerouanton\",\n\t\t\t\"akihirosuda\",\n\t\t\t\"anusha\",\n\t\t\t\"austinvazquez\",\n\t\t\t\"coolljt0725\",\n\t\t\t\"corhere\",\n\t\t\t\"cpuguy83\",\n\t\t\t\"crazy-max\",\n\t\t\t\"estesp\",\n\t\t\t\"johnstep\",\n\t\t\t\"justincormack\",\n\t\t\t\"kolyshkin\",\n\t\t\t\"laurazard\",\n\t\t\t\"mhbauer\",\n\t\t\t\"neersighted\",\n\t\t\t\"robmry\",\n\t\t\t\"rumpl\",\n\t\t\t\"runcom\",\n\t\t\t\"samuelkarp\",\n\t\t\t\"stevvooe\",\n\t\t\t\"thajeztah\",\n\t\t\t\"tianon\",\n\t\t\t\"tibor\",\n\t\t\t\"tonistiigi\",\n\t\t\t\"unclejack\",\n\t\t\t\"vdemeester\",\n\t\t\t\"vieux\",\n\t\t\t\"vvoland\",\n\t\t\t\"yongtang\"\n\t\t]\n\n\t[Org.Curators]\n\n\t# The curators help ensure that incoming issues and pull requests are properly triaged and\n\t# that our various contribution and reviewing processes are respected. With their knowledge of\n\t# the repository activity, they can also guide contributors to relevant material or\n\t# discussions.\n\t#\n\t# They are neither code nor docs reviewers, so they are never expected to merge. They can\n\t# however:\n\t# - close an issue or pull request when it's an exact duplicate\n\t# - close an issue or pull request when it's inappropriate or off-topic\n\n\t\tpeople = [\n\t\t\t\"alexellis\",\n\t\t\t\"andrewhsu\",\n\t\t\t\"bsousaa\",\n\t\t\t\"dmcgowan\",\n\t\t\t\"fntlnz\",\n\t\t\t\"gianarb\",\n\t\t\t\"olljanat\",\n\t\t\t\"programmerq\",\n\t\t\t\"ripcurld\",\n\t\t\t\"sam-thibault\",\n\t\t\t\"samwhited\",\n\t\t\t\"thajeztah\",\n\t\t\t\"thompson-shaun\",\n\t\t]\n\n\t[Org.Alumni]\n\n\t# This list contains maintainers that are no longer active on the project.\n\t# It is thanks to these people that the project has become what it is today.\n\t# Thank you!\n\n\t\tpeople = [\n\t\t\t# Aaron Lehmann was a maintainer for swarmkit, the registry, and the engine,\n\t\t\t# and contributed many improvements, features, and bugfixes in those areas,\n\t\t\t# among which \"automated service rollbacks\", templated secrets and configs,\n\t\t\t# and resumable image layer downloads.\n\t\t\t\"aaronlehmann\",\n\n\t\t\t# Harald Albers is the mastermind behind the bash completion scripts for the\n\t\t\t# Docker CLI. The completion scripts moved to the Docker CLI repository, so\n\t\t\t# you can now find him perform his magic in the https://github.com/docker/cli repository.\n\t\t\t\"albers\",\n\n\t\t\t# Andrea Luzzardi started contributing to the Docker codebase in the \"dotCloud\"\n\t\t\t# era, even before it was called \"Docker\". He is one of the architects of both\n\t\t\t# Swarm and SwarmKit, and its integration into the Docker engine.\n\t\t\t\"aluzzardi\",\n\t\t\t\n\t\t\t# David Calavera contributed many features to Docker, such as an improved\n\t\t\t# event system, dynamic configuration reloading, volume plugins, fancy\n\t\t\t# new templating options, and an external client credential store. As a\n\t\t\t# maintainer, David was release captain for Docker 1.8, and competing\n\t\t\t# with Jess Frazelle to be \"top dream killer\".\n\t\t\t# David is now doing amazing stuff as CTO for https://www.netlify.com,\n\t\t\t# and tweets as @calavera.\n\t\t\t\"calavera\",\n\n\t\t\t# Michael Crosby was \"chief maintainer\" of the Docker project.\n\t\t\t# During his time as a maintainer, Michael contributed to many\n\t\t\t# milestones of the project; he was release captain of Docker v1.0.0,\n\t\t\t# started the development of \"libcontainer\" (what later became runc)\n\t\t\t# and containerd, as well as demoing cool hacks such as live migrating\n\t\t\t# a game server container with checkpoint/restore.\n\t\t\t#\n\t\t\t# Michael is currently a maintainer of containerd, but you may see\n\t\t\t# him around in other projects on GitHub.\n\t\t\t\"crosbymichael\",\n\n\t\t\t# Before becoming a maintainer, Daniel Nephin was a core contributor\n\t\t\t# to \"Fig\" (now known as Docker Compose). As a maintainer for both the\n\t\t\t# Engine and Docker CLI, Daniel contributed many features, among which\n\t\t\t# the `docker stack` commands, allowing users to deploy their Docker\n\t\t\t# Compose projects as a Swarm service.\n\t\t\t\"dnephin\",\n\n\t\t\t# Doug Davis contributed many features and fixes for the classic builder,\n\t\t\t# such as \"wildcard\" copy, the dockerignore file, custom paths/names\n\t\t\t# for the Dockerfile, as well as enhancements to the API and documentation.\n\t\t\t# Follow Doug on Twitter, where he tweets as @duginabox.\n\t\t\t\"duglin\",\n\n\t\t\t# As a maintainer, Erik was responsible for the \"builder\", and\n\t\t\t# started the first designs for the new networking model in\n\t\t\t# Docker. Erik is now working on all kinds of plugins for Docker\n\t\t\t# (https://github.com/contiv) and various open source projects\n\t\t\t# in his own repository https://github.com/erikh. You may\n\t\t\t# still stumble into him in our issue tracker, or on IRC.\n\t\t\t\"erikh\",\n\n\t\t\t# Evan Hazlett is the creator of the Shipyard and Interlock open source projects,\n\t\t\t# and the author of \"Orca\", which became the foundation of Docker Universal Control\n\t\t\t# Plane (UCP). As a maintainer, Evan helped integrating SwarmKit (secrets, tasks)\n\t\t\t# into the Docker engine.\n\t\t\t\"ehazlett\",\n\n\t\t\t# Arnaud Porterie (AKA \"icecrime\") was in charge of maintaining the maintainers.\n\t\t\t# As a maintainer, he made life easier for contributors to the Docker open-source\n\t\t\t# projects, bringing order in the chaos by designing a triage- and review workflow\n\t\t\t# using labels (see https://icecrime.net/technology/a-structured-approach-to-labeling/),\n\t\t\t# and automating the hell out of things with his buddies GordonTheTurtle and Poule\n\t\t\t# (a chicken!).\n\t\t\t# \n\t\t\t# A lesser-known fact is that he created the first commit in the libnetwork repository\n\t\t\t# even though he didn't know anything about it. Some say, he's now selling stuff on\n\t\t\t# the internet ;-)\n\t\t\t\"icecrime\",\n\n\t\t\t# After a false start with his first PR being rejected, James Turnbull became a frequent\n\t\t\t# contributor to the documentation, and became a docs maintainer on December 5, 2013. As\n\t\t\t# a maintainer, James lifted the docs to a higher standard, and introduced the community\n\t\t\t# guidelines (\"three strikes\"). James is currently changing the world as CTO of https://www.empatico.org,\n\t\t\t# meanwhile authoring various books that are worth checking out. You can find him on Twitter,\n\t\t\t# rambling as @kartar, and although no longer active as a maintainer, he's always \"game\" to\n\t\t\t# help out reviewing docs PRs, so you may still see him around in the repository.\n\t\t\t\"jamtur01\",\n\n\t\t\t# Jessica Frazelle, also known as the \"Keyser Söze of containers\",\n\t\t\t# runs *everything* in containers. She started contributing to\n\t\t\t# Docker with a (fun fun) change involving both iptables and regular\n\t\t\t# expressions (coz, YOLO!) on July 10, 2014\n\t\t\t# https://github.com/docker/docker/pull/6950/commits/f3a68ffa390fb851115c77783fa4031f1d3b2995.\n\t\t\t# Jess was Release Captain for Docker 1.4, 1.6 and 1.7, and contributed\n\t\t\t# many features and improvement, among which \"seccomp profiles\" (making\n\t\t\t# containers a lot more secure). Besides being a maintainer, she\n\t\t\t# set up the CI infrastructure for the project, giving everyone\n\t\t\t# something to shout at if a PR failed (\"noooo Janky!\").\n\t\t\t# Be sure you don't miss her talks at a conference near you (a must-see),\n\t\t\t# read her blog at https://blog.jessfraz.com (a must-read), and\n\t\t\t# check out her open source projects on GitHub https://github.com/jessfraz (a must-try).\n\t\t\t\"jessfraz\",\n\n\t\t\t# As a maintainer, John Howard managed to make the impossible possible;\n\t\t\t# to run Docker on Windows. After facing many challenges, teaching\n\t\t\t# fellow-maintainers that 'Windows is not Linux', and many changes in\n\t\t\t# Windows Server to facilitate containers, native Windows containers\n\t\t\t# saw the light of day in 2015.\n\t\t\t#\n\t\t\t# John is now enjoying life without containers: playing piano, painting,\n\t\t\t# and walking his dogs, but you may occasionally see him drop by on GitHub.\n\t\t\t\"lowenna\",\n\n\t\t\t# Alexander Morozov contributed many features to Docker, worked on the premise of \n\t\t\t# what later became containerd (and worked on that too), and made a \"stupid\" Go\n\t\t\t# vendor tool specifically for docker/docker needs: vndr (https://github.com/LK4D4/vndr).\n\t\t\t# Not many know that Alexander is a master negotiator, being able to change course\n\t\t\t# of action with a single \"Nope, we're not gonna do that\".\n\t\t\t\"lk4d4\",\n\n\t\t\t# Madhu Venugopal was part of the SocketPlane team that joined Docker.\n\t\t\t# As a maintainer, he was working with Jana for the Container Network\n\t\t\t# Model (CNM) implemented through libnetwork, and the \"routing mesh\" powering\n\t\t\t# Swarm mode networking.\n\t\t\t\"mavenugo\",\n\n\t\t\t# As a maintainer, Kenfe-Mickaël Laventure worked on the container runtime,\n\t\t\t# integrating containerd 1.0 with the daemon, and adding support for custom\n\t\t\t# OCI runtimes, as well as implementing the `docker prune` subcommands,\n\t\t\t# which was a welcome feature to be added. You can keep up with Mickaél on\n\t\t\t# Twitter (@kmlaventure).\n\t\t\t\"mlaventure\",\n\n\t\t\t# As a docs maintainer, Mary Anthony contributed greatly to the Docker\n\t\t\t# docs. She wrote the Docker Contributor Guide and Getting Started\n\t\t\t# Guides. She helped create a doc build system independent of\n\t\t\t# docker/docker project, and implemented a new docs.docker.com theme and\n\t\t\t# nav for 2015 Dockercon. Fun fact: the most inherited layer in DockerHub\n\t\t\t# public repositories was originally referenced in\n\t\t\t# maryatdocker/docker-whale back in May 2015.\n\t\t\t\"moxiegirl\",\n\n\t\t\t# Jana Radhakrishnan was part of the SocketPlane team that joined Docker.\n\t\t\t# As a maintainer, he was the lead architect for the Container Network\n\t\t\t# Model (CNM) implemented through libnetwork, and the \"routing mesh\" powering\n\t\t\t# Swarm mode networking.\n\t\t\t#\n\t\t\t# Jana started new adventures in networking, but you can find him tweeting as @mrjana,\n\t\t\t# coding on GitHub https://github.com/mrjana, and he may be hiding on the Docker Community\n\t\t\t# slack channel :-)\n\t\t\t\"mrjana\",\n\n\t\t\t# Sven Dowideit became a well known person in the Docker ecosphere, building\n\t\t\t# boot2docker, and became a regular contributor to the project, starting as\n\t\t\t# early as October 2013 (https://github.com/docker/docker/pull/2119), to become\n\t\t\t# a maintainer less than two months later (https://github.com/docker/docker/pull/3061).\n\t\t\t#\n\t\t\t# As a maintainer, Sven took on the task to convert the documentation from\n\t\t\t# ReStructuredText to Markdown, migrate to Hugo for generating the docs, and\n\t\t\t# writing tooling for building, testing, and publishing them.\n\t\t\t#\n\t\t\t# If you're not in the occasion to visit \"the Australian office\", you\n\t\t\t# can keep up with Sven on Twitter (@SvenDowideit), his blog http://fosiki.com,\n\t\t\t# and of course on GitHub.\n\t\t\t\"sven\",\n\n\t\t\t# Vincent \"vbatts!\" Batts made his first contribution to the project\n\t\t\t# in November 2013, to become a maintainer a few months later, on\n\t\t\t# May 10, 2014 (https://github.com/docker/docker/commit/d6e666a87a01a5634c250358a94c814bf26cb778).\n\t\t\t# As a maintainer, Vincent made important contributions to core elements\n\t\t\t# of Docker, such as \"distribution\" (tarsum) and graphdrivers (btrfs, devicemapper).\n\t\t\t# He also contributed the \"tar-split\" library, an important element\n\t\t\t# for the content-addressable store.\n\t\t\t# Vincent is currently a member of the Open Containers Initiative\n\t\t\t# Technical Oversight Board (TOB), besides his work at Red Hat and\n\t\t\t# Project Atomic. You can still find him regularly hanging out in\n\t\t\t# our repository and the #docker-dev and #docker-maintainers IRC channels\n\t\t\t# for a chat, as he's always a lot of fun.\n\t\t\t\"vbatts\",\n\n\t\t\t# Vishnu became a maintainer to help out on the daemon codebase and\n\t\t\t# libcontainer integration. He's currently involved in the\n\t\t\t# Open Containers Initiative, working on the specifications,\n\t\t\t# besides his work on cAdvisor and Kubernetes for Google.\n\t\t\t\"vishh\"\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.aaronlehmann]\n\tName = \"Aaron Lehmann\"\n\tEmail = \"aaron.lehmann@docker.com\"\n\tGitHub = \"aaronlehmann\"\n\n\t[people.akerouanton]\n\tName = \"Albin Kerouanton\"\n\tEmail = \"albinker@gmail.com\"\n\tGitHub = \"akerouanton\"\n\n\t[people.alexellis]\n\tName = \"Alex Ellis\"\n\tEmail = \"alexellis2@gmail.com\"\n\tGitHub = \"alexellis\"\n\n\t[people.akihirosuda]\n\tName = \"Akihiro Suda\"\n\tEmail = \"akihiro.suda.cz@hco.ntt.co.jp\"\n\tGitHub = \"AkihiroSuda\"\n\n\t[people.aluzzardi]\n\tName = \"Andrea Luzzardi\"\n\tEmail = \"al@docker.com\"\n\tGitHub = \"aluzzardi\"\n\n\t[people.albers]\n\tName = \"Harald Albers\"\n\tEmail = \"github@albersweb.de\"\n\tGitHub = \"albers\"\n\n\t[people.andrewhsu]\n\tName = \"Andrew Hsu\"\n\tEmail = \"andrewhsu@docker.com\"\n\tGitHub = \"andrewhsu\"\n\n\t[people.austinvazquez]\n\tName = \"Austin Vazquez\"\n\tEmail = \"macedonv@amazon.com\"\n\tGitHub = \"austinvazquez\"\n\n\t[people.anusha]\n\tName = \"Anusha Ragunathan\"\n\tEmail = \"anusha@docker.com\"\n\tGitHub = \"anusha-ragunathan\"\n\t\n\t[people.bsousaa]\n\tName = \"Bruno de Sousa\"\n\tEmail = \"bruno.sousa@docker.com\"\n\tGitHub = \"bsousaa\"\n\n\t[people.calavera]\n\tName = \"David Calavera\"\n\tEmail = \"david.calavera@gmail.com\"\n\tGitHub = \"calavera\"\n\n\t[people.coolljt0725]\n\tName = \"Lei Jitang\"\n\tEmail = \"leijitang@huawei.com\"\n\tGitHub = \"coolljt0725\"\n\n\t[people.corhere]\n\tName = \"Cory Snider\"\n\tEmail = \"csnider@mirantis.com\"\n\tGitHub = \"corhere\"\n\n\t[people.cpuguy83]\n\tName = \"Brian Goff\"\n\tEmail = \"cpuguy83@gmail.com\"\n\tGitHub = \"cpuguy83\"\n\n\t[people.crazy-max]\n\tName = \"Kevin Alvarez\"\n\tEmail = \"contact@crazymax.dev\"\n\tGitHub = \"crazy-max\"\n\n\t[people.crosbymichael]\n\tName = \"Michael Crosby\"\n\tEmail = \"crosbymichael@gmail.com\"\n\tGitHub = \"crosbymichael\"\n\n\t[people.dnephin]\n\tName = \"Daniel Nephin\"\n\tEmail = \"dnephin@gmail.com\"\n\tGitHub = \"dnephin\"\n\n\t[people.dmcgowan]\n\tName = \"Derek McGowan\"\n\tEmail = \"derek@mcgstyle.net\"\n\tGitHub = \"dmcgowan\"\n\n\t[people.duglin]\n\tName = \"Doug Davis\"\n\tEmail = \"dug@us.ibm.com\"\n\tGitHub = \"duglin\"\n\n\t[people.ehazlett]\n\tName = \"Evan Hazlett\"\n\tEmail = \"ejhazlett@gmail.com\"\n\tGitHub = \"ehazlett\"\n\n\t[people.erikh]\n\tName = \"Erik Hollensbe\"\n\tEmail = \"erik@docker.com\"\n\tGitHub = \"erikh\"\n\n\t[people.estesp]\n\tName = \"Phil Estes\"\n\tEmail = \"estesp@linux.vnet.ibm.com\"\n\tGitHub = \"estesp\"\n\n\t[people.fntlnz]\n\tName = \"Lorenzo Fontana\"\n\tEmail = \"fontanalorenz@gmail.com\"\n\tGitHub = \"fntlnz\"\n\n\t[people.gianarb]\n\tName = \"Gianluca Arbezzano\"\n\tEmail = \"ga@thumpflow.com\"\n\tGitHub = \"gianarb\"\n\n\t[people.icecrime]\n\tName = \"Arnaud Porterie\"\n\tEmail = \"icecrime@gmail.com\"\n\tGitHub = \"icecrime\"\n\n\t[people.jamtur01]\n\tName = \"James Turnbull\"\n\tEmail = \"james@lovedthanlost.net\"\n\tGitHub = \"jamtur01\"\n\n\t[people.jessfraz]\n\tName = \"Jessie Frazelle\"\n\tEmail = \"jess@linux.com\"\n\tGitHub = \"jessfraz\"\n\n\t[people.johnstep]\n\tName = \"John Stephens\"\n\tEmail = \"johnstep@docker.com\"\n\tGitHub = \"johnstep\"\n\n\t[people.justincormack]\n\tName = \"Justin Cormack\"\n\tEmail = \"justin.cormack@docker.com\"\n\tGitHub = \"justincormack\"\n\n\t[people.kolyshkin]\n\tName = \"Kir Kolyshkin\"\n\tEmail = \"kolyshkin@gmail.com\"\n\tGitHub = \"kolyshkin\"\n\n\t[people.laurazard]\n\tName = \"Laura Brehm\"\n\tEmail = \"laura.brehm@docker.com\"\n\tGitHub = \"laurazard\"\n\n\t[people.lk4d4]\n\tName = \"Alexander Morozov\"\n\tEmail = \"lk4d4@docker.com\"\n\tGitHub = \"lk4d4\"\n\n\t[people.lowenna]\n\tName = \"John Howard\"\n\tEmail = \"github@lowenna.com\"\n\tGitHub = \"lowenna\"\n\n\t[people.mavenugo]\n\tName = \"Madhu Venugopal\"\n\tEmail = \"madhu@docker.com\"\n\tGitHub = \"mavenugo\"\n\n\t[people.mhbauer]\n\tName = \"Morgan Bauer\"\n\tEmail = \"mbauer@us.ibm.com\"\n\tGitHub = \"mhbauer\"\n\n\t[people.mlaventure]\n\tName = \"Kenfe-Mickaël Laventure\"\n\tEmail = \"mickael.laventure@gmail.com\"\n\tGitHub = \"mlaventure\"\n\n\t[people.moxiegirl]\n\tName = \"Mary Anthony\"\n\tEmail = \"mary.anthony@docker.com\"\n\tGitHub = \"moxiegirl\"\n\n\t[people.mrjana]\n\tName = \"Jana Radhakrishnan\"\n\tEmail = \"mrjana@docker.com\"\n\tGitHub = \"mrjana\"\n\n\t[people.neersighted]\n\tName = \"Bjorn Neergaard\"\n\tEmail = \"bjorn@neersighted.com\"\n\tGitHub = \"neersighted\"\n\n\t[people.olljanat]\n\tName = \"Olli Janatuinen\"\n\tEmail = \"olli.janatuinen@gmail.com\"\n\tGitHub = \"olljanat\"\n\n\t[people.programmerq]\n\tName = \"Jeff Anderson\"\n\tEmail = \"jeff@docker.com\"\n\tGitHub = \"programmerq\"\n\n\t[people.robmry]\n\tName = \"Rob Murray\"\n\tEmail = \"rob.murray@docker.com\"\n\tGitHub = \"robmry\"\n\n\t[people.ripcurld]\n\tName = \"Boaz Shuster\"\n\tEmail = \"ripcurld.github@gmail.com\"\n\tGitHub = \"ripcurld\"\n\n\t[people.rumpl]\n\tName = \"Djordje Lukic\"\n\tEmail = \"djordje.lukic@docker.com\"\n\tGitHub = \"rumpl\"\n\n\t[people.runcom]\n\tName = \"Antonio Murdaca\"\n\tEmail = \"runcom@redhat.com\"\n\tGitHub = \"runcom\"\n\n\t[people.sam-thibault]\n\tName = \"Sam Thibault\"\n\tEmail = \"sam.thibault@docker.com\"\n\tGitHub = \"sam-thibault\"\n\n\t[people.samuelkarp]\n\tName = \"Samuel Karp\"\n\tEmail = \"me@samuelkarp.com\"\n\tGitHub = \"samuelkarp\"\n\n\t[people.samwhited]\n\tName = \"Sam Whited\"\n\tEmail = \"sam@samwhited.com\"\n\tGitHub = \"samwhited\"\n\n\t[people.shykes]\n\tName = \"Solomon Hykes\"\n\tEmail = \"solomon@docker.com\"\n\tGitHub = \"shykes\"\n\n\t[people.stevvooe]\n\tName = \"Stephen Day\"\n\tEmail = \"stephen.day@docker.com\"\n\tGitHub = \"stevvooe\"\n\n\t[people.sven]\n\tName = \"Sven Dowideit\"\n\tEmail = \"SvenDowideit@home.org.au\"\n\tGitHub = \"SvenDowideit\"\n\n\t[people.thajeztah]\n\tName = \"Sebastiaan van Stijn\"\n\tEmail = \"github@gone.nl\"\n\tGitHub = \"thaJeztah\"\n\n\t[people.thompson-shaun]\n\tName = \"Shaun Thompson\"\n\tEmail = \"shaun.thompson@docker.com\"\n\tGitHub = \"thompson-shaun\"\n\n\t[people.tianon]\n\tName = \"Tianon Gravi\"\n\tEmail = \"admwiggin@gmail.com\"\n\tGitHub = \"tianon\"\n\n\t[people.tibor]\n\tName = \"Tibor Vass\"\n\tEmail = \"tibor@docker.com\"\n\tGitHub = \"tiborvass\"\n\n\t[people.tonistiigi]\n\tName = \"Tõnis Tiigi\"\n\tEmail = \"tonis@docker.com\"\n\tGitHub = \"tonistiigi\"\n\n\t[people.unclejack]\n\tName = \"Cristian Staretu\"\n\tEmail = \"cristian.staretu@gmail.com\"\n\tGitHub = \"unclejack\"\n\n\t[people.vbatts]\n\tName = \"Vincent Batts\"\n\tEmail = \"vbatts@redhat.com\"\n\tGitHub = \"vbatts\"\n\n\t[people.vdemeester]\n\tName = \"Vincent Demeester\"\n\tEmail = \"vincent@sbr.pm\"\n\tGitHub = \"vdemeester\"\n\n\t[people.vieux]\n\tName = \"Victor Vieux\"\n\tEmail = \"vieux@docker.com\"\n\tGitHub = \"vieux\"\n\n\t[people.vishh]\n\tName = \"Vishnu Kannan\"\n\tEmail = \"vishnuk@google.com\"\n\tGitHub = \"vishh\"\n\t\n\t[people.vvoland]\n\tName = \"Paweł Gronowski\"\n\tEmail = \"pawel.gronowski@docker.com\"\n\tGitHub = \"vvoland\"\n\n\t[people.yongtang]\n\tName = \"Yong Tang\"\n\tEmail = \"yong.tang.github@outlook.com\"\n\tGitHub = \"yongtang\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 9.69,
          "content": "DOCKER ?= docker\nBUILDX ?= $(DOCKER) buildx\n\nDOCKER_GITCOMMIT := $(shell git rev-parse HEAD)\nexport DOCKER_GITCOMMIT\n\n# allow overriding the repository and branch that validation scripts are running\n# against these are used in hack/validate/.validate to check what changed in the PR.\nexport VALIDATE_REPO\nexport VALIDATE_BRANCH\nexport VALIDATE_ORIGIN_BRANCH\n\nexport PAGER\nexport GIT_PAGER\n\n# env vars passed through directly to Docker's build scripts\n# to allow things like `make KEEPBUNDLE=1 binary` easily\n# `project/PACKAGERS.md` have some limited documentation of some of these\n#\n# DOCKER_LDFLAGS can be used to pass additional parameters to -ldflags\n# option of \"go build\". For example, a built-in graphdriver priority list\n# can be changed during build time like this:\n#\n# make DOCKER_LDFLAGS=\"-X github.com/docker/docker/daemon/graphdriver.priority=overlay2,zfs\" dynbinary\n#\nDOCKER_ENVS := \\\n\t-e BUILDFLAGS \\\n\t-e KEEPBUNDLE \\\n\t-e DOCKER_BUILD_ARGS \\\n\t-e DOCKER_BUILD_GOGC \\\n\t-e DOCKER_BUILD_OPTS \\\n\t-e DOCKER_BUILD_PKGS \\\n\t-e DOCKER_BUILDKIT \\\n\t-e DOCKER_BASH_COMPLETION_PATH \\\n\t-e DOCKER_CLI_PATH \\\n\t-e DOCKERCLI_VERSION \\\n\t-e DOCKERCLI_REPOSITORY \\\n\t-e DOCKERCLI_INTEGRATION_VERSION \\\n\t-e DOCKERCLI_INTEGRATION_REPOSITORY \\\n\t-e DOCKER_DEBUG \\\n\t-e DOCKER_EXPERIMENTAL \\\n\t-e DOCKER_FIREWALLD \\\n\t-e DOCKER_GITCOMMIT \\\n\t-e DOCKER_GRAPHDRIVER \\\n\t-e DOCKER_LDFLAGS \\\n\t-e DOCKER_PORT \\\n\t-e DOCKER_REMAP_ROOT \\\n\t-e DOCKER_ROOTLESS \\\n\t-e DOCKER_STORAGE_OPTS \\\n\t-e DOCKER_TEST_HOST \\\n\t-e DOCKER_USERLANDPROXY \\\n\t-e DOCKERD_ARGS \\\n\t-e DELVE_PORT \\\n\t-e GITHUB_ACTIONS \\\n\t-e TEST_FORCE_VALIDATE \\\n\t-e TEST_INTEGRATION_DIR \\\n\t-e TEST_INTEGRATION_USE_SNAPSHOTTER \\\n\t-e TEST_INTEGRATION_FAIL_FAST \\\n\t-e TEST_SKIP_INTEGRATION \\\n\t-e TEST_SKIP_INTEGRATION_CLI \\\n\t-e TEST_IGNORE_CGROUP_CHECK \\\n\t-e TESTCOVERAGE \\\n\t-e TESTDEBUG \\\n\t-e TESTDIRS \\\n\t-e TESTFLAGS \\\n\t-e TESTFLAGS_INTEGRATION \\\n\t-e TESTFLAGS_INTEGRATION_CLI \\\n\t-e TEST_FILTER \\\n\t-e TIMEOUT \\\n\t-e VALIDATE_REPO \\\n\t-e VALIDATE_BRANCH \\\n\t-e VALIDATE_ORIGIN_BRANCH \\\n\t-e VERSION \\\n\t-e PLATFORM \\\n\t-e DEFAULT_PRODUCT_LICENSE \\\n\t-e PRODUCT \\\n\t-e PACKAGER_NAME \\\n\t-e PAGER \\\n\t-e GIT_PAGER \\\n\t-e OTEL_EXPORTER_OTLP_ENDPOINT \\\n\t-e OTEL_EXPORTER_OTLP_PROTOCOL \\\n\t-e OTEL_SERVICE_NAME\n# note: we _cannot_ add \"-e DOCKER_BUILDTAGS\" here because even if it's unset in the shell, that would shadow the \"ENV DOCKER_BUILDTAGS\" set in our Dockerfile, which is very important for our official builds\n\n# to allow `make BIND_DIR=. shell` or `make BIND_DIR= test`\n# (default to no bind mount if DOCKER_HOST is set)\n# note: BINDDIR is supported for backwards-compatibility here\nBIND_DIR := $(if $(BINDDIR),$(BINDDIR),$(if $(DOCKER_HOST),,bundles))\n\n# DOCKER_MOUNT can be overridden, but use at your own risk!\nifndef DOCKER_MOUNT\nDOCKER_MOUNT := $(if $(BIND_DIR),-v \"$(CURDIR)/$(BIND_DIR):/go/src/github.com/docker/docker/$(BIND_DIR)\")\nDOCKER_MOUNT := $(if $(DOCKER_BINDDIR_MOUNT_OPTS),$(DOCKER_MOUNT):$(DOCKER_BINDDIR_MOUNT_OPTS),$(DOCKER_MOUNT))\n\n# This allows the test suite to be able to run without worrying about the underlying fs used by the container running the daemon (e.g. aufs-on-aufs), so long as the host running the container is running a supported fs.\n# The volume will be cleaned up when the container is removed due to `--rm`.\n# Note that `BIND_DIR` will already be set to `bundles` if `DOCKER_HOST` is not set (see above BIND_DIR line), in such case this will do nothing since `DOCKER_MOUNT` will already be set.\nDOCKER_MOUNT := $(if $(DOCKER_MOUNT),$(DOCKER_MOUNT),-v /go/src/github.com/docker/docker/bundles) -v \"$(CURDIR)/.git:/go/src/github.com/docker/docker/.git\"\n\nDOCKER_MOUNT_CACHE := -v docker-dev-cache:/root/.cache -v docker-mod-cache:/go/pkg/mod/\nDOCKER_MOUNT_CLI := $(if $(DOCKER_CLI_PATH),-v $(shell dirname $(DOCKER_CLI_PATH)):/usr/local/cli,)\nDOCKER_MOUNT_BASH_COMPLETION := $(if $(DOCKER_BASH_COMPLETION_PATH),-v $(shell dirname $(DOCKER_BASH_COMPLETION_PATH)):/usr/local/completion/bash,)\n\nifdef BIND_GIT\n\t# Gets the common .git directory (even from inside a git worktree)\n\tGITDIR := $(shell realpath $(shell git rev-parse --git-common-dir))\n\tMOUNT_GITDIR := $(if $(GITDIR),-v \"$(GITDIR):$(GITDIR)\")\nendif\n\nDOCKER_MOUNT := $(DOCKER_MOUNT) $(DOCKER_MOUNT_CACHE) $(DOCKER_MOUNT_CLI) $(DOCKER_MOUNT_BASH_COMPLETION) $(MOUNT_GITDIR)\nendif # ifndef DOCKER_MOUNT\n\n# This allows to set the docker-dev container name\nDOCKER_CONTAINER_NAME := $(if $(CONTAINER_NAME),--name $(CONTAINER_NAME),)\n\nDOCKER_IMAGE := docker-dev\nDOCKER_PORT_FORWARD := $(if $(DOCKER_PORT),-p \"$(DOCKER_PORT)\",)\nDELVE_PORT_FORWARD := $(if $(DELVE_PORT),-p \"$(DELVE_PORT)\",)\n\nDOCKER_FLAGS := $(DOCKER) run --rm --privileged $(DOCKER_CONTAINER_NAME) $(DOCKER_ENVS) $(DOCKER_MOUNT) $(DOCKER_PORT_FORWARD) $(DELVE_PORT_FORWARD)\n\nSWAGGER_DOCS_PORT ?= 9000\n\ndefine \\n\n\n\nendef\n\n# if this session isn't interactive, then we don't want to allocate a\n# TTY, which would fail, but if it is interactive, we do want to attach\n# so that the user can send e.g. ^C through.\nINTERACTIVE := $(shell [ -t 0 ] && echo 1 || echo 0)\nifeq ($(INTERACTIVE), 1)\n\tDOCKER_FLAGS += -t\nendif\n\n# on GitHub Runners input device is not a TTY but we allocate a pseudo-one,\n# otherwise keep STDIN open even if not attached if not a GitHub Runner.\nifeq ($(GITHUB_ACTIONS),true)\n\tDOCKER_FLAGS += -t\nelse\n\tDOCKER_FLAGS += -i\nendif\n\nDOCKER_RUN_DOCKER := $(DOCKER_FLAGS) \"$(DOCKER_IMAGE)\"\n\nDOCKER_BUILD_ARGS += --build-arg=GO_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_REPOSITORY\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_INTEGRATION_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_INTEGRATION_REPOSITORY\nifdef DOCKER_SYSTEMD\nDOCKER_BUILD_ARGS += --build-arg=SYSTEMD=true\nendif\nifdef DOCKER_FIREWALLD\nDOCKER_BUILD_ARGS += --build-arg=FIREWALLD=true\nendif\n\nBUILD_OPTS := ${DOCKER_BUILD_ARGS} ${DOCKER_BUILD_OPTS}\nBUILD_CMD := $(BUILDX) build\nBAKE_CMD := $(BUILDX) bake\n\ndefault: binary\n\n.PHONY: all\nall: build ## validate all checks, build linux binaries, run all tests,\\ncross build non-linux binaries, and generate archives\n\t$(DOCKER_RUN_DOCKER) bash -c 'hack/validate/default && hack/make.sh'\n\n.PHONY: binary\nbinary: bundles ## build statically linked linux binaries\n\t$(BAKE_CMD) binary\n\n.PHONY: dynbinary\ndynbinary: bundles ## build dynamically linked linux binaries\n\t$(BAKE_CMD) dynbinary\n\n.PHONY: cross\ncross: bundles ## cross build the binaries\n\t$(BAKE_CMD) binary-cross\n\nbundles:\n\tmkdir bundles\n\n.PHONY: clean\nclean: clean-cache\n\n.PHONY: clean-cache\nclean-cache: ## remove the docker volumes that are used for caching in the dev-container\n\tdocker volume rm -f docker-dev-cache docker-mod-cache\n\n.PHONY: help\nhelp: ## this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z0-9_-]+:.*?## / {gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\"\"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n\n.PHONY: install\ninstall: ## install the linux binaries\n\tKEEPBUNDLE=1 hack/make.sh install-binary\n\n.PHONY: run\nrun: build ## run the docker daemon in a container\n\t$(DOCKER_RUN_DOCKER) sh -c \"KEEPBUNDLE=1 hack/make.sh install-binary run\"\n \n.PHONY: build\nifeq ($(BIND_DIR), .)\nbuild: shell_target := --target=dev-base\nelse\nbuild: shell_target := --target=dev\nendif\nbuild: bundles\n\t$(BUILD_CMD) $(BUILD_OPTS) $(shell_target) --load -t \"$(DOCKER_IMAGE)\" .\n\n.PHONY: shell\nshell: build  ## start a shell inside the build env\n\t$(DOCKER_RUN_DOCKER) bash\n\n.PHONY: test\ntest: build test-unit ## run the unit, integration and docker-py tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration test-docker-py\n\n.PHONY: test-docker-py\ntest-docker-py: build ## run the docker-py tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-docker-py\n\n.PHONY: test-integration-cli\ntest-integration-cli: test-integration ## (DEPRECATED) use test-integration\n\n.PHONY: test-integration\nifneq ($(and $(TEST_SKIP_INTEGRATION),$(TEST_SKIP_INTEGRATION_CLI)),)\ntest-integration:\n\t@echo Both integrations suites skipped per environment variables\nelse\ntest-integration: build ## run the integration tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration\nendif\n\n.PHONY: test-integration-flaky\ntest-integration-flaky: build ## run the stress test for all new integration tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration-flaky\n\n.PHONY: test-unit\ntest-unit: build ## run the unit tests\n\t$(DOCKER_RUN_DOCKER) hack/test/unit\n\n.PHONY: validate\nvalidate: build ## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\n\t$(DOCKER_RUN_DOCKER) hack/validate/all\n\n.PHONY: validate-generate-files\nvalidate-generate-files:\n\t$(BUILD_CMD) --target \"validate\" \\\n\t\t--output \"type=cacheonly\" \\\n\t\t--file \"./hack/dockerfiles/generate-files.Dockerfile\" .\n\n.PHONY: validate-%\nvalidate-%: build ## validate specific check\n\t$(DOCKER_RUN_DOCKER) hack/validate/$*\n\n.PHONY: win\nwin: bundles ## cross build the binary for windows\n\t$(BAKE_CMD) --set *.platform=windows/amd64 binary\n\n.PHONY: swagger-gen\nswagger-gen:\n\tdocker run --rm -v $(PWD):/go/src/github.com/docker/docker \\\n\t\t-w /go/src/github.com/docker/docker \\\n\t\t--entrypoint hack/generate-swagger-api.sh \\\n\t\t-e GOPATH=/go \\\n\t\tquay.io/goswagger/swagger:0.7.4\n\n.PHONY: swagger-docs\nswagger-docs: ## preview the API documentation\n\t@echo \"API docs preview will be running at http://localhost:$(SWAGGER_DOCS_PORT)\"\n\t@docker run --rm -v $(PWD)/api/swagger.yaml:/usr/share/nginx/html/swagger.yaml \\\n\t\t-e 'REDOC_OPTIONS=hide-hostname=\"true\" lazy-rendering' \\\n\t\t-p $(SWAGGER_DOCS_PORT):80 \\\n\t\tbfirsh/redoc:1.14.0\n\n.PHONY: generate-files\ngenerate-files:\n\t$(eval $@_TMP_OUT := $(shell mktemp -d -t moby-output.XXXXXXXXXX))\n\t@if [ -z \"$($@_TMP_OUT)\" ]; then \\\n\t\techo \"Temp dir is not set\"; \\\n\t\texit 1; \\\n\tfi\n\t$(BUILD_CMD) --target \"update\" \\\n\t\t--output \"type=local,dest=$($@_TMP_OUT)\" \\\n\t\t--file \"./hack/dockerfiles/generate-files.Dockerfile\" .\n\tcp -R \"$($@_TMP_OUT)\"/. .\n\trm -rf \"$($@_TMP_OUT)\"/*\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.63,
          "content": "Docker\nCopyright 2012-2017 Docker, Inc.\n\nThis product includes software developed at Docker, Inc. (https://www.docker.com).\n\nThis product contains software (https://github.com/creack/pty) developed\nby Keith Rarick, licensed under the MIT License.\n\nThe following is courtesy of our legal counsel:\n\n\nUse and transfer of Docker may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nSee also https://www.apache.org/dev/crypto.html and/or seek legal counsel.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.83,
          "content": "The Moby Project\n================\n\n[![PkgGoDev](https://pkg.go.dev/badge/github.com/docker/docker)](https://pkg.go.dev/github.com/docker/docker)\n[![Go Report Card](https://goreportcard.com/badge/github.com/docker/docker)](https://goreportcard.com/report/github.com/docker/docker)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/moby/moby/badge)](https://scorecard.dev/viewer/?uri=github.com/moby/moby)\n\n\n![Moby Project logo](docs/static_files/moby-project-logo.png \"The Moby Project\")\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\n\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\n\n## Principles\n\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\n- Modular: the project includes lots of components that have well-defined functions and APIs that work together.\n- Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.\n- Usable security: Moby provides secure defaults without compromising usability.\n- Developer focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\n## Audience\n\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\n\n## Relationship with Docker\n\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\n\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, [Docker Desktop](https://www.docker.com/products/docker-desktop/) and [Mirantis Container Runtime](https://www.mirantis.com/software/mirantis-container-runtime/) are the appropriate products for these use cases.\n\n-----\n\nLegal\n=====\n\n*Brought to you courtesy of our legal counsel. For more context,\nplease see the [NOTICE](https://github.com/moby/moby/blob/master/NOTICE) document in this repo.*\n\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\n\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nLicensing\n=========\nMoby is licensed under the Apache License, Version 2.0. See\n[LICENSE](https://github.com/moby/moby/blob/master/LICENSE) for the full\nlicense text.\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 5.65,
          "content": "Moby Project Roadmap\n====================\n\n### How should I use this document?\n\nThis document provides description of items that the project decided to prioritize. This should\nserve as a reference point for Moby contributors to understand where the project is going, and\nhelp determine if a contribution could be conflicting with some longer term plans.\n\nThe fact that a feature isn't listed here doesn't mean that a patch for it will automatically be\nrefused! We are always happy to receive patches for new cool features we haven't thought about,\nor didn't judge to be a priority. Please however understand that such patches might take longer\nfor us to review.\n\n### How can I help?\n\nShort term objectives are listed in\n[Issues](https://github.com/moby/moby/issues?q=is%3Aopen+is%3Aissue+label%3Aroadmap). Our\ngoal is to split down the workload in such way that anybody can jump in and help. Please comment on\nissues if you want to work on it to avoid duplicating effort! Similarly, if a maintainer is already\nassigned on an issue you'd like to participate in, pinging him on GitHub to offer your help is\nthe best way to go.\n\n### How can I add something to the roadmap?\n\nThe roadmap process is new to the Moby Project: we are only beginning to structure and document the\nproject objectives. Our immediate goal is to be more transparent, and work with our community to\nfocus our efforts on fewer prioritized topics.\n\nWe hope to offer in the near future a process allowing anyone to propose a topic to the roadmap, but\nwe are not quite there yet. For the time being, it is best to discuss with the maintainers on an\nissue, in the Slack channel, or in person at the Moby Summits that happen every few months.\n\n# 1. Features and refactoring\n\n## 1.1 Runtime improvements\n\nOver time we have accumulated a lot of functionality in the container runtime\naspect of Moby while also growing in other areas. Much of the container runtime\npieces are now duplicated work available in other, lower level components such\nas [containerd](https://containerd.io).\n\nMoby currently only utilizes containerd for basic runtime state management, e.g. starting\nand stopping a container, which is what the pre-containerd 1.0 daemon provided.\nNow that containerd is a full-fledged container runtime which supports full\ncontainer life-cycle management, we would like to start relying more on containerd\nand removing the bits in Moby which are now duplicated. This will necessitate\na significant effort to refactor and even remove large parts of Moby's codebase.\n\nTracking issues:\n\n- [#38043](https://github.com/moby/moby/issues/38043) Proposal: containerd image integration\n\n## 1.2 Image Builder\n\nWork is ongoing to integrate [BuildKit](https://github.com/moby/buildkit) into\nMoby and replace the \"v0\" build implementation. Buildkit offers better cache\nmanagement, parallelizable build steps, and better extensibility while also\nkeeping builds portable, a chief tenent of Moby's builder.\n\nUpon completion of this effort, users will have a builder that performs better\nwhile also being more extensible, enabling users to provide their own custom\nsyntax which can be either Dockerfile-like or something completely different.\n\nSee [buildpacks on buildkit](https://github.com/tonistiigi/buildkit-pack) as an\nexample of this extensibility.\n\nNew features for the builder and Dockerfile should be implemented first in the\nBuildKit backend using an external Dockerfile implementation from the container\nimages. This allows everyone to test and evaluate the feature without upgrading\ntheir daemon. New features should go to the experimental channel first, and can be\npart of the `docker/dockerfile:experimental` image. From there they graduate to\n`docker/dockerfile:latest` and binary releases. The Dockerfile frontend source\ncode is temporarily located at\n[https://github.com/moby/buildkit/tree/master/frontend/dockerfile](https://github.com/moby/buildkit/tree/master/frontend/dockerfile)\nwith separate new features defined with go build tags.\n\nTracking issues:\n\n- [#32925](https://github.com/moby/moby/issues/32925) discussion: builder future: buildkit\n\n## 1.3 Rootless Mode\n\nRunning the daemon requires elevated privileges for many tasks. We would like to\nsupport running the daemon as a normal, unprivileged user without requiring `suid`\nbinaries.\n\nTracking issues:\n\n- [#37375](https://github.com/moby/moby/issues/37375) Proposal: allow running `dockerd` as an unprivileged user (aka rootless mode)\n\n## 1.4 Testing\n\nMoby has many tests, both unit and integration. Moby needs more tests which can\ncover the full spectrum functionality and edge cases out there.\n\nTests in the `integration-cli` folder should also be migrated into (both in\nlocation and style) the `integration` folder. These newer tests are simpler to\nrun in isolation, simpler to read, simpler to write, and more fully exercise the\nAPI. Meanwhile tests of the docker CLI should generally live in docker/cli.\n\nTracking issues:\n\n- [#32866](https://github.com/moby/moby/issues/32866) Replace integration-cli suite with API test suite\n\n## 1.5 Internal decoupling\n\nA lot of work has been done in trying to decouple Moby internals. This process of creating\nstandalone projects with a well defined function that attract a dedicated community should continue.\nAs well as integrating `containerd` we would like to integrate [BuildKit](https://github.com/moby/buildkit)\nas the next standalone component.\nWe see gRPC as the natural communication layer between decoupled components.\n\nIn addition to pushing out large components into other projects, much of the\ninternal code structure, and in particular the\n[\"Daemon\"](https://godoc.org/github.com/docker/docker/daemon#Daemon) object,\nshould be split into smaller, more manageable, and more testable components.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.72,
          "content": "# Security Policy\n\nThe maintainers of the Moby project take security seriously. If you discover\na security issue, please bring it to their attention right away!\n\n## Reporting a Vulnerability\n\nPlease **DO NOT** file a public issue, instead send your report privately\nto [security@docker.com](mailto:security@docker.com).\n\nReporter(s) can expect a response within 72 hours, acknowledging the issue was\nreceived.\n\n## Review Process\n\nAfter receiving the report, an initial triage and technical analysis is\nperformed to confirm the report and determine its scope. We may request\nadditional information in this stage of the process.\n\nOnce a reviewer has confirmed the relevance of the report, a draft security\nadvisory will be created on GitHub. The draft advisory will be used to discuss\nthe issue with maintainers, the reporter(s), and where applicable, other\naffected parties under embargo.\n\nIf the vulnerability is accepted, a timeline for developing a patch, public\ndisclosure, and patch release will be determined. If there is an embargo period\non public disclosure before the patch release, the reporter(s) are expected to\nparticipate in the discussion of the timeline and abide by agreed upon dates\nfor public disclosure.\n\n## Accreditation\n\nSecurity reports are greatly appreciated and we will publicly thank you,\nalthough we will keep your name confidential if you request it. We also like to\nsend gifts - if you're into swag, make sure to let us know. We do not currently\noffer a paid security bounty program at this time.\n\n## Supported Versions\n\nThis project uses long-lived branches to maintain releases. Refer to\n[BRANCHES-AND-TAGS.md](project/BRANCHES-AND-TAGS.md) in the default branch to\nlearn about the current maintenance status of each branch.\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 4.47,
          "content": "# Testing\n\nThis document contains the Moby code testing guidelines. It should answer any \nquestions you may have as an aspiring Moby contributor.\n\n## Test suites\n\nMoby has two test suites (and one legacy test suite):\n\n* Unit tests - use standard `go test` and\n  [gotest.tools/assert](https://godoc.org/gotest.tools/assert) assertions. They are located in\n  the package they test. Unit tests should be fast and test only their own \n  package.\n* API integration tests - use standard `go test` and\n  [gotest.tools/assert](https://godoc.org/gotest.tools/assert) assertions. They are located in\n  `./integration/<component>` directories, where `component` is: container,\n  image, volume, etc. These tests perform HTTP requests to an API endpoint and\n  check the HTTP response and daemon state after the call.\n\nThe legacy test suite `integration-cli/` is deprecated. No new tests will be \nadded to this suite. Any tests in this suite which require updates should be \nported to either the unit test suite or the new API integration test suite.\n\n## Writing new tests\n\nMost code changes will fall into one of the following categories.\n\n### Writing tests for new features\n\nNew code should be covered by unit tests. If the code is difficult to test with\nunit tests, then that is a good sign that it should be refactored to make it\neasier to reuse and maintain. Consider accepting unexported interfaces instead\nof structs so that fakes can be provided for dependencies.\n\nIf the new feature includes a completely new API endpoint then a new API \nintegration test should be added to cover the success case of that endpoint.\n\nIf the new feature does not include a completely new API endpoint consider \nadding the new API fields to the existing test for that endpoint. A new \nintegration test should **not** be added for every new API field or API error \ncase. Error cases should be handled by unit tests.\n\n### Writing tests for bug fixes\n\nBugs fixes should include a unit test case which exercises the bug.\n\nA bug fix may also include new assertions in existing integration tests for the\nAPI endpoint.\n\n### Writing new integration tests\n\nNote the `integration-cli` tests are deprecated; new tests will be rejected by\nthe CI.\n\nInstead, implement new tests under `integration/`.\n\n### Integration tests environment considerations\n\nWhen adding new tests or modifying existing tests under `integration/`, testing\nenvironment should be properly considered. `skip.If` from \n[gotest.tools/skip](https://godoc.org/gotest.tools/skip) can be used to make the \ntest run conditionally. Full testing environment conditions can be found at \n[environment.go](https://github.com/moby/moby/blob/6b6eeed03b963a27085ea670f40cd5ff8a61f32e/testutil/environment/environment.go)\n\nHere is a quick example. If the test needs to interact with a docker daemon on \nthe same host, the following condition should be checked within the test code\n\n```go\nskip.If(t, testEnv.IsRemoteDaemon())\n// your integration test code\n```\n\nIf a remote daemon is detected, the test will be skipped.\n\n## Running tests\n\n### Unit Tests\n\nTo run the unit test suite:\n\n```\nmake test-unit\n```\n\nor `hack/test/unit` from inside a `BINDDIR=. make shell` container or properly\nconfigured environment.\n\nThe following environment variables may be used to run a subset of tests:\n\n* `TESTDIRS` - paths to directories to be tested, defaults to `./...`\n* `TESTFLAGS` - flags passed to `go test`, to run tests which match a pattern\n  use `TESTFLAGS=\"-test.run TestNameOrPrefix\"`\n\n### Integration Tests\n\nTo run the integration test suite:\n\n```\nmake test-integration\n```\n\nThis make target runs both the \"integration\" suite and the \"integration-cli\"\nsuite.\n\nYou can specify which integration test dirs to build and run by specifying\nthe list of dirs in the TEST_INTEGRATION_DIR environment variable.\n\nYou can also explicitly skip either suite by setting (any value) in\nTEST_SKIP_INTEGRATION and/or TEST_SKIP_INTEGRATION_CLI environment variables.\n\nFlags specific to each suite can be set in the TESTFLAGS_INTEGRATION and\nTESTFLAGS_INTEGRATION_CLI environment variables.\n\nIf all you want is to specify a test filter to run, you can set the\n`TEST_FILTER` environment variable. This ends up getting passed directly to `go\ntest -run` (or `go test -check-f`, depending on the test suite). It will also\nautomatically set the other above mentioned environment variables accordingly.\n\n### Go Version\n\nYou can change a version of golang used for building stuff that is being tested\nby setting `GO_VERSION` variable, for example:\n\n```\nmake GO_VERSION=1.12.8 test\n```\n"
        },
        {
          "name": "VENDORING.md",
          "type": "blob",
          "size": 1.91,
          "content": "# Vendoring policies\n\nThis document outlines recommended Vendoring policies for Docker repositories.\n(Example, libnetwork is a Docker repo and logrus is not.)\n\n## Vendoring using tags\n\nCommit ID based vendoring provides little/no information about the updates\nvendored. To fix this, vendors will now require that repositories use annotated\ntags along with commit ids to snapshot commits. Annotated tags by themselves\nare not sufficient, since the same tag can be force updated to reference\ndifferent commits.\n\nEach tag should:\n- Follow Semantic Versioning rules (refer to section on \"Semantic Versioning\")\n- Have a corresponding entry in the change tracking document.\n\nEach repo should:\n- Have a change tracking document between tags/releases. Ex: CHANGELOG.md,\ngithub releases file.\n\nThe goal here is for consuming repos to be able to use the tag version and\nchangelog updates to determine whether the vendoring will cause any breaking or\nbackward incompatible changes. This also means that repos can specify having\ndependency on a package of a specific version or greater up to the next major\nrelease, without encountering breaking changes.\n\n## Semantic Versioning\nAnnotated version tags should follow [Semantic Versioning](http://semver.org) policies:\n\n\"Given a version number MAJOR.MINOR.PATCH, increment the:\n\n   1. MAJOR version when you make incompatible API changes,\n   2. MINOR version when you add functionality in a backwards-compatible manner, and\n   3. PATCH version when you make backwards-compatible bug fixes.\n\nAdditional labels for pre-release and build metadata are available as extensions\nto the MAJOR.MINOR.PATCH format.\"\n\n## Vendoring cadence\nIn order to avoid huge vendoring changes, it is recommended to have a regular\ncadence for vendoring updates. e.g. monthly.\n\n## Pre-merge vendoring tests\nAll related repos will be vendored into docker/docker.\nCI on docker/docker should catch any breaking changes involving multiple repos.\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.3,
          "content": "comment: false\n\ngithub_checks:\n  annotations: false\n\ncoverage:\n  status:\n    patch: false\n    # project will give us the diff in the total code coverage between a commit\n    # and its parent\n    project:\n      default:\n        target: auto\n        threshold: \"15%\"\n    changes: false\n\nignore:\n  - \"vendor/**/*\"\n"
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 3.81,
          "content": "variable \"DOCKER_DEBUG\" {\n  default = \"\"\n}\nvariable \"DOCKER_STATIC\" {\n  default = \"1\"\n}\nvariable \"DOCKER_LDFLAGS\" {\n  default = \"\"\n}\nvariable \"DOCKER_BUILDTAGS\" {\n  default = \"\"\n}\nvariable \"DOCKER_GITCOMMIT\" {\n  default = null\n}\n\n# Docker version such as 23.0.0-dev. Automatically generated through Git ref.\nvariable \"VERSION\" {\n  default = \"\"\n}\n\n# The platform name, such as \"Docker Engine - Community\".\nvariable \"PLATFORM\" {\n  default = \"\"\n}\n\n# The product name, used to set version.ProductName, which is used to set\n# BuildKit's ExportedProduct variable in order to show useful error messages\n# to users when a certain version of the product doesn't support a BuildKit feature.\nvariable \"PRODUCT\" {\n  default = \"\"\n}\n\n# Sets the version.DefaultProductLicense string, such as \"Community Engine\".\n# This field can contain a summary of the product license of the daemon if a\n# commercial license has been applied to the daemon.\nvariable \"DEFAULT_PRODUCT_LICENSE\" {\n  default = \"\"\n}\n\n# The name of the packager (e.g. \"Docker, Inc.\"). This used to set CompanyName\n# in the manifest.\nvariable \"PACKAGER_NAME\" {\n  default = \"\"\n}\n\n# Special target: https://github.com/docker/metadata-action#bake-definition\ntarget \"docker-metadata-action\" {\n  tags = [\"moby-bin:local\"]\n}\n\n# Defines the output folder\nvariable \"DESTDIR\" {\n  default = \"\"\n}\nfunction \"bindir\" {\n  params = [defaultdir]\n  result = DESTDIR != \"\" ? DESTDIR : \"./bundles/${defaultdir}\"\n}\n\ntarget \"_common\" {\n  args = {\n    BUILDKIT_CONTEXT_KEEP_GIT_DIR = 1\n    DOCKER_DEBUG = DOCKER_DEBUG\n    DOCKER_STATIC = DOCKER_STATIC\n    DOCKER_LDFLAGS = DOCKER_LDFLAGS\n    DOCKER_BUILDTAGS = DOCKER_BUILDTAGS\n    DOCKER_GITCOMMIT = DOCKER_GITCOMMIT\n    VERSION = VERSION\n    PLATFORM = PLATFORM\n    PRODUCT = PRODUCT\n    DEFAULT_PRODUCT_LICENSE = DEFAULT_PRODUCT_LICENSE\n    PACKAGER_NAME = PACKAGER_NAME\n  }\n}\n\ngroup \"default\" {\n  targets = [\"binary\"]\n}\n\ntarget \"_platforms\" {\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v5\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"windows/amd64\"\n  ]\n}\n\n#\n# build dockerd and docker-proxy\n#\n\ntarget \"binary\" {\n  inherits = [\"_common\"]\n  target = \"binary\"\n  output = [bindir(DOCKER_STATIC == \"1\" ? \"binary\" : \"dynbinary\")]\n}\n\ntarget \"dynbinary\" {\n  inherits = [\"binary\"]\n  output = [bindir(\"dynbinary\")]\n  args = {\n    DOCKER_STATIC = \"0\"\n  }\n}\n\ntarget \"binary-cross\" {\n  inherits = [\"binary\", \"_platforms\"]\n}\n\ntarget \"binary-smoketest\" {\n  inherits = [\"_common\"]\n  target = \"smoketest\"\n  output = [\"type=cacheonly\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\"\n  ]\n}\n\n#\n# same as binary but with extra tools as well (containerd, runc, ...)\n#\n\ntarget \"all\" {\n  inherits = [\"_common\"]\n  target = \"all\"\n  output = [bindir(DOCKER_STATIC == \"1\" ? \"binary\" : \"dynbinary\")]\n}\n\ntarget \"all-cross\" {\n  inherits = [\"all\", \"_platforms\"]\n}\n\n#\n# bin image\n#\n\ntarget \"bin-image\" {\n  inherits = [\"all\", \"docker-metadata-action\"]\n  output = [\"type=docker\"]\n}\n\ntarget \"bin-image-cross\" {\n  inherits = [\"bin-image\"]\n  output = [\"type=image\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"windows/amd64\"\n  ]\n}\n\n#\n# dev\n#\n\nvariable \"SYSTEMD\" {\n  default = \"false\"\n}\n\nvariable \"FIREWALLD\" {\n  default = \"false\"\n}\n\ntarget \"dev\" {\n  inherits = [\"_common\"]\n  target = \"dev\"\n  args = {\n    SYSTEMD = SYSTEMD\n    FIREWALLD = FIREWALLD\n  }\n  tags = [\"docker-dev\"]\n  output = [\"type=docker\"]\n}\n\n#\n# govulncheck\n#\n\nvariable \"GOVULNCHECK_FORMAT\" {\n  default = null\n}\n\ntarget \"govulncheck\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/govulncheck.Dockerfile\"\n  target = \"output\"\n  args = {\n    FORMAT = GOVULNCHECK_FORMAT\n  }\n  no-cache-filter = [\"run\"]\n  output = [\"${DESTDIR}\"]\n}\n"
        },
        {
          "name": "dockerversion",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "errdefs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "layer",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcontainerd",
          "type": "tree",
          "content": null
        },
        {
          "name": "libnetwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "oci",
          "type": "tree",
          "content": null
        },
        {
          "name": "opts",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "quota",
          "type": "tree",
          "content": null
        },
        {
          "name": "reference",
          "type": "tree",
          "content": null
        },
        {
          "name": "registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "reports",
          "type": "tree",
          "content": null
        },
        {
          "name": "restartmanager",
          "type": "tree",
          "content": null
        },
        {
          "name": "runconfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor.mod",
          "type": "blob",
          "size": 11.42,
          "content": "// 'vendor.mod' enables use of 'go mod vendor' to managed 'vendor/' directory.\n// There is no 'go.mod' file, as the project has not yet completed the migration\n// to a Go module. This project should be built in GOPATH mode, and not module mode,\n// until the migration is complete and this file becomes 'go.mod.'\n\nmodule github.com/docker/docker\n\ngo 1.22.0\n\nrequire (\n\tcloud.google.com/go/compute/metadata v0.3.0\n\tcloud.google.com/go/logging v1.9.0\n\tcode.cloudfoundry.org/clock v1.1.0\n\tdario.cat/mergo v1.0.1\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24\n\tgithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c\n\tgithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/Microsoft/hcsshim v0.12.8\n\tgithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91\n\tgithub.com/aws/aws-sdk-go-v2 v1.24.1\n\tgithub.com/aws/aws-sdk-go-v2/config v1.26.6\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.16.16\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11\n\tgithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0\n\tgithub.com/aws/smithy-go v1.19.0\n\tgithub.com/cloudflare/cfssl v1.6.4\n\tgithub.com/containerd/cgroups/v3 v3.0.5\n\tgithub.com/containerd/containerd v1.7.25\n\tgithub.com/containerd/containerd/api v1.8.0\n\tgithub.com/containerd/continuity v0.4.5\n\tgithub.com/containerd/errdefs v0.3.0\n\tgithub.com/containerd/fifo v1.1.0\n\tgithub.com/containerd/log v0.1.0\n\tgithub.com/containerd/platforms v0.2.1\n\tgithub.com/containerd/typeurl/v2 v2.2.3\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/cpuguy83/tar2go v0.3.1\n\tgithub.com/creack/pty v1.1.21\n\tgithub.com/deckarep/golang-set/v2 v2.3.0\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/distribution v2.8.3+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c\n\tgithub.com/docker/go-metrics v0.0.1\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4\n\tgithub.com/fluent/fluent-logger-golang v1.9.0\n\tgithub.com/godbus/dbus/v5 v5.1.0\n\tgithub.com/gogo/protobuf v1.3.2\n\tgithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/hashicorp/go-immutable-radix/v2 v2.1.0\n\tgithub.com/hashicorp/go-memdb v1.3.2\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/memberlist v0.4.0\n\tgithub.com/hashicorp/serf v0.8.5\n\tgithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/miekg/dns v1.1.57\n\tgithub.com/mistifyio/go-zfs/v3 v3.0.1\n\tgithub.com/mitchellh/copystructure v1.2.0\n\tgithub.com/moby/buildkit v0.18.2\n\tgithub.com/moby/docker-image-spec v1.3.1\n\tgithub.com/moby/ipvs v1.1.0\n\tgithub.com/moby/locker v1.0.1\n\tgithub.com/moby/patternmatcher v0.6.0\n\tgithub.com/moby/pubsub v1.0.0\n\tgithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554\n\tgithub.com/moby/sys/mount v0.3.4\n\tgithub.com/moby/sys/mountinfo v0.7.2\n\tgithub.com/moby/sys/reexec v0.1.0\n\tgithub.com/moby/sys/sequential v0.6.0\n\tgithub.com/moby/sys/signal v0.7.1\n\tgithub.com/moby/sys/symlink v0.3.0\n\tgithub.com/moby/sys/user v0.3.0\n\tgithub.com/moby/sys/userns v0.1.0\n\tgithub.com/moby/term v0.5.2\n\tgithub.com/morikuni/aec v1.0.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/opencontainers/runc v1.2.3\n\tgithub.com/opencontainers/runtime-spec v1.2.0\n\tgithub.com/opencontainers/selinux v1.11.1\n\tgithub.com/pelletier/go-toml v1.9.5\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/rootless-containers/rootlesskit/v2 v2.3.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/tonistiigi/go-archvariant v1.0.0\n\tgithub.com/vbatts/tar-split v0.11.5\n\tgithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350\n\tgithub.com/vishvananda/netns v0.0.5\n\tgo.etcd.io/bbolt v1.3.11\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0\n\tgo.opentelemetry.io/otel/metric v1.28.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/trace v1.28.0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/time v0.6.0\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094\n\tgoogle.golang.org/grpc v1.66.3\n\tgoogle.golang.org/protobuf v1.35.2\n\tgotest.tools/v3 v3.5.1\n\tresenje.org/singleflight v0.4.3\n\ttags.cncf.io/container-device-interface v0.8.0\n)\n\nrequire (\n\tcloud.google.com/go v0.112.0 // indirect\n\tcloud.google.com/go/longrunning v0.5.4 // indirect\n\tgithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 // indirect\n\tgithub.com/agext/levenshtein v1.2.3 // indirect\n\tgithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 // indirect\n\tgithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 // indirect\n\tgithub.com/armon/go-metrics v0.4.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bits-and-blooms/bitset v1.13.0 // indirect\n\tgithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cilium/ebpf v0.16.0 // indirect\n\tgithub.com/container-storage-interface/spec v1.5.0 // indirect\n\tgithub.com/containerd/console v1.0.4 // indirect\n\tgithub.com/containerd/go-cni v1.1.10 // indirect\n\tgithub.com/containerd/go-runc v1.1.0 // indirect\n\tgithub.com/containerd/nydus-snapshotter v0.14.0 // indirect\n\tgithub.com/containerd/stargz-snapshotter/estargz v0.15.1 // indirect\n\tgithub.com/containerd/ttrpc v1.2.5 // indirect\n\tgithub.com/containernetworking/cni v1.2.2 // indirect\n\tgithub.com/containernetworking/plugins v1.5.1 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.3.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dimchansky/utfbom v1.1.1 // indirect\n\tgithub.com/dustin/go-humanize v1.0.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gofrs/flock v0.12.1 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/btree v1.1.2 // indirect\n\tgithub.com/google/certificate-transparency-go v1.1.4 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.0 // indirect\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-msgpack v0.5.5 // indirect\n\tgithub.com/hashicorp/go-sockaddr v1.0.2 // indirect\n\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n\tgithub.com/in-toto/in-toto-golang v0.5.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jmoiron/sqlx v1.3.3 // indirect\n\tgithub.com/mitchellh/hashstructure/v2 v2.0.2 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 // indirect\n\tgithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170 // indirect\n\tgithub.com/philhofer/fwd v1.1.2 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 // indirect\n\tgithub.com/secure-systems-lab/go-securesystemslib v0.4.0 // indirect\n\tgithub.com/shibumi/go-pathspec v1.3.0 // indirect\n\tgithub.com/spdx/tools-golang v0.5.3 // indirect\n\tgithub.com/stretchr/testify v1.9.0 // indirect\n\tgithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 // indirect\n\tgithub.com/tinylib/msgp v1.1.8 // indirect\n\tgithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 // indirect\n\tgithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 // indirect\n\tgithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e // indirect\n\tgithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 // indirect\n\tgithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea // indirect\n\tgithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab // indirect\n\tgithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b // indirect\n\tgithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc // indirect\n\tgithub.com/zmap/zlint/v3 v3.1.0 // indirect\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/pkg/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/raft/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/server/v3 v3.5.16 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgo.uber.org/atomic v1.9.0 // indirect\n\tgo.uber.org/multierr v1.8.0 // indirect\n\tgo.uber.org/zap v1.21.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f // indirect\n\tgolang.org/x/oauth2 v0.22.0 // indirect\n\tgolang.org/x/tools v0.27.0 // indirect\n\tgoogle.golang.org/api v0.155.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 // indirect; TODO(thaJeztah): should we keep this one aligned with the other google.golang.org/genproto/xxx modules?\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/klog/v2 v2.90.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n\ttags.cncf.io/container-device-interface/specs-go v0.8.0 // indirect\n)\n"
        },
        {
          "name": "vendor.sum",
          "type": "blob",
          "size": 76.73,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.112.0 h1:tpFCD7hpHFlQ8yPwT3x+QeXqc2T6+n6T+hmABHfDUSM=\ncloud.google.com/go v0.112.0/go.mod h1:3jEEVwZ/MHU4djK5t5RHuKOA/GbLddgTdVubX1qnPD4=\ncloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=\ncloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncloud.google.com/go/iam v1.1.5 h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=\ncloud.google.com/go/iam v1.1.5/go.mod h1:rB6P/Ic3mykPbFio+vo7403drjlgvoWfYpJhMXEbzv8=\ncloud.google.com/go/logging v1.9.0 h1:iEIOXFO9EmSiTjDmfpbRjOxECO7R8C7b8IXUGOj7xZw=\ncloud.google.com/go/logging v1.9.0/go.mod h1:1Io0vnZv4onoUnsVUQY3HZ3Igb1nBchky0A0y7BBBhE=\ncloud.google.com/go/longrunning v0.5.4 h1:w8xEcbZodnA2BbW6sVirkkoC+1gP8wS57EUUgGS0GVg=\ncloud.google.com/go/longrunning v0.5.4/go.mod h1:zqNVncI0BOP8ST6XQD1+VcvuShMmq7+xFSzOL++V0dI=\ncode.cloudfoundry.org/clock v1.1.0 h1:XLzC6W3Ah/Y7ht1rmZ6+QfPdt1iGWEAAtIZXgiaj57c=\ncode.cloudfoundry.org/clock v1.1.0/go.mod h1:yA3fxddT9RINQL2XHS7PS+OXxKCGhfrZmlNUCIM6AKo=\ndario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 h1:59MxjQVfjXsBpLy+dbd2/ELV5ofnUkUZBvWSC85sheA=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0/go.mod h1:OahwfttHWG6eJ0clwcfBAHoDI6X/LV/15hx/wlMZSrU=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c h1:udKWzYgxTojEKWjV8V+WSxDXJ4NFATAsZjh8iIbsQIg=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0 h1:cOjLyhBhe91glgZZNbQUg9BJC57l6BiSKov0Ivv7k0U=\ngithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0/go.mod h1:fBaQWrftOD5CrVCUfoYGHs4X4VViTuGOXA8WloCjTY0=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.12.8 h1:BtDWYlFMcWhorrvSSo2M7z0csPdw6t7no/C3FsSvqiI=\ngithub.com/Microsoft/hcsshim v0.12.8/go.mod h1:cibQ4BqhJ32FXDwPdQhKhwrwophnh3FuT4nwQZF907w=\ngithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91 h1:vX+gnvBc56EbWYrmlhYbFYRaeikAke1GL84N4BEYOFE=\ngithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91/go.mod h1:cDLGBht23g0XQdLjzn6xOGXDkLK182YfINAaZEQLCHQ=\ngithub.com/agext/levenshtein v1.2.3 h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=\ngithub.com/agext/levenshtein v1.2.3/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 h1:7Ip0wMmLHLRJdrloDxZfhMm0xrLXZS8+COSu2bXmEQs=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.4.1 h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\ngithub.com/armon/go-metrics v0.4.1/go.mod h1:E6amYzXo6aW1tqzoZGT755KkbgrJsSdpwZ+3JqfkOG4=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1 h1:xAojnj+ktS95YZlDf0zxWBkbFtymPeDP+rvUQIH3uAU=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1/go.mod h1:LNh45Br1YAkEKaAqvmE1m8FUx6a5b/V0oAKV7of29b4=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 h1:OCs21ST2LrepDfD3lwlQiOqIGp6JiEUqG84GzTDoyJs=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4/go.mod h1:usURWEKSNNAcAZuzRn/9ZYPT8aZQkR7xcCtunK/LkJo=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6 h1:Z/7w9bUqlRI0FFQpetVuFYEsjzE3h7fpU6HuGmfPL/o=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6/go.mod h1:uKU6cnDmYCvJ+pxO9S4cWDb2yWWIH5hra+32hVh1MI4=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16 h1:8q6Rliyv0aUFAVtzaldUEcS+T5gbadPbWdV1WcAddK8=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16/go.mod h1:UHVZrdUsv63hPXFo1H7c5fEneoVo9UXiz36QG1GEPi0=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 h1:c5I5iH+DZcH3xOIMlz3/tCKJDaHFwYEmxvlh2fAcFo8=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11/go.mod h1:cRrYDYAMUohBJUtUnOhydaMHtiK/1NZ0Otc9lIb6O0Y=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 h1:vF+Zgd9s+H4vOXd5BMaPWykta2a6Ih0AKLq/X6NYKn4=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10/go.mod h1:6BkRjejp/GR4411UGqkX8+wFMbFbqsUIimfK4XjOKR4=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 h1:nYPe006ktcqUji8S2mqXf9c/7NdiKriOwMvWQHgYztw=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10/go.mod h1:6UV4SZkVvmODfXKql4LCbaZUpF7HO2BX38FgBf9ZOLw=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 h1:n3GDfwqF2tzEkXlv5cuy4iy7LpKDtqDMcNLfZDu9rls=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3/go.mod h1:6fQQgfuGmw8Al/3M2IgIllycxV7ZW7WCdVSqfBeUiCY=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0 h1:VdKYfVPIDzmfSQk5gOQ5uueKiuKMkJuB/KOXmQ9Ytag=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0/go.mod h1:jZNaJEtn9TLi3pfxycLz79HVkKxP8ZdYm92iaNFgBsA=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 h1:/b31bi3YVNlkzkBrm9LfpaKoaYZUxIAj4sHfOTmLfqw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4/go.mod h1:2aGXHFmbInwgP9ZfpmdIfOELL79zhdNYNmReK8qDfdQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 h1:DBYTXwIGQSGs9w4jKm60F5dmCQ3EEruxdc0MFh+3EY4=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10/go.mod h1:wohMUQiFdzo0NtxbBg0mSRGZ4vL3n0dKjLTINdcIino=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 h1:eajuO3nykDPdYicLlP3AGgOyVN3MOlFmZv7WGTuJPow=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7/go.mod h1:+mJNDdF+qiUlNKNC3fxn74WWNN+sOiGOEImje+3ScPM=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 h1:QPMJf+Jw8E1l7zqhZmMlFw6w1NmfkfiSK8mS4zOx3BA=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7/go.mod h1:ykf3COxYI0UJmxcfcxcVuz7b6uADi1FkiUz6Eb7AgM8=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 h1:NzO4Vrau795RkUdSHKEwiR01FaGzGOH1EETJ+5QHnm0=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7/go.mod h1:6h2YuIoxaMSCFf5fi1EgZAwdfkGMgDY+DVfa61uLe4U=\ngithub.com/aws/smithy-go v1.19.0 h1:KWFKQV80DpP3vJrrA9sVAHQ5gc2z8i4EzrLhLlWXcBM=\ngithub.com/aws/smithy-go v1.19.0/go.mod h1:NukqUGpCZIILqqiV0NIjeFh24kd/FAa4beRb6nbIUPE=\ngithub.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bits-and-blooms/bitset v1.13.0 h1:bAQ9OPNFYbGHV6Nez0tmNI0RiEu7/hxlYJRUA0wFAVE=\ngithub.com/bits-and-blooms/bitset v1.13.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869 h1:DDGfHa7BWjL4YnC6+E63dPcxHo2sUxDIu8g3QgEJdRY=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869/go.mod h1:Ekp36dRnpXw/yCqJaO+ZrUyxD+3VXMFFr56k5XYrpB4=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cilium/ebpf v0.16.0 h1:+BiEnHL6Z7lXnlGUsXQPPAE7+kenAd4ES8MQ5min0Ok=\ngithub.com/cilium/ebpf v0.16.0/go.mod h1:L7u2Blt2jMM/vLAVgjxluxtBKlz3/GWjB0dMOEngfwE=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/cfssl v1.6.4 h1:NMOvfrEjFfC63K3SGXgAnFdsgkmiq4kATme5BfcqrO8=\ngithub.com/cloudflare/cfssl v1.6.4/go.mod h1:8b3CQMxfWPAeom3zBnGJ6sd+G1NkL5TXqmDXacb+1J0=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cockroachdb/datadriven v1.0.2 h1:H9MtNqVoVhvd9nCBwOyDjUEdZCREqbIdCJD93PBm/jA=\ngithub.com/cockroachdb/datadriven v1.0.2/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=\ngithub.com/container-storage-interface/spec v1.5.0 h1:lvKxe3uLgqQeVQcrnL2CPQKISoKjTJxojEs9cBk+HXo=\ngithub.com/container-storage-interface/spec v1.5.0/go.mod h1:8K96oQNkJ7pFcC2R9Z1ynGGBB1I93kcS6PGg3SsOk8s=\ngithub.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=\ngithub.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=\ngithub.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=\ngithub.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/containerd/containerd v1.7.25 h1:khEQOAXOEJalRO228yzVsuASLH42vT7DIo9Ss+9SMFQ=\ngithub.com/containerd/containerd v1.7.25/go.mod h1:tWfHzVI0azhw4CT2vaIjsb2CoV4LJ9PrMPaULAr21Ok=\ngithub.com/containerd/containerd/api v1.8.0 h1:hVTNJKR8fMc/2Tiw60ZRijntNMd1U+JVMyTRdsD2bS0=\ngithub.com/containerd/containerd/api v1.8.0/go.mod h1:dFv4lt6S20wTu/hMcP4350RL87qPWLVa/OHOwmmdnYc=\ngithub.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=\ngithub.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=\ngithub.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=\ngithub.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=\ngithub.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=\ngithub.com/containerd/go-cni v1.1.10 h1:c2U73nld7spSWfiJwSh/8W9DK+/qQwYM2rngIhCyhyg=\ngithub.com/containerd/go-cni v1.1.10/go.mod h1:/Y/sL8yqYQn1ZG1om1OncJB1W4zN3YmjfP/ShCzG/OY=\ngithub.com/containerd/go-runc v1.1.0 h1:OX4f+/i2y5sUT7LhmcJH7GYrjjhHa1QI4e8yO0gGleA=\ngithub.com/containerd/go-runc v1.1.0/go.mod h1:xJv2hFF7GvHtTJd9JqTS2UVxMkULUYw4JN5XAUZqH5U=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/nydus-snapshotter v0.14.0 h1:6/eAi6d7MjaeLLuMO8Udfe5GVsDudmrDNO4SGETMBco=\ngithub.com/containerd/nydus-snapshotter v0.14.0/go.mod h1:TT4jv2SnIDxEBu4H2YOvWQHPOap031ydTaHTuvc5VQk=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1 h1:eXJjw9RbkLFgioVaTG+G/ZW/0kEe2oEKCdS/ZxIyoCU=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1/go.mod h1:gr2RNwukQ/S9Nv33Lt6UC7xEx58C+LHRdoqbEKjz1Kk=\ngithub.com/containerd/ttrpc v1.2.5 h1:IFckT1EFQoFBMG4c3sMdT8EP3/aKfumK1msY+Ze4oLU=\ngithub.com/containerd/ttrpc v1.2.5/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=\ngithub.com/containerd/typeurl/v2 v2.2.3 h1:yNA/94zxWdvYACdYO8zofhrTVuQY73fFU1y++dYSw40=\ngithub.com/containerd/typeurl/v2 v2.2.3/go.mod h1:95ljDnPfD3bAbDJRugOiShd/DlAAsxGtUBhJxIn7SCk=\ngithub.com/containernetworking/cni v1.2.2 h1:9IbP6KJQQxVKo4hhnm8r50YcVKrJbJu3Dqw+Rbt1vYk=\ngithub.com/containernetworking/cni v1.2.2/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/containernetworking/plugins v1.5.1 h1:T5ji+LPYjjgW0QM+KyrigZbLsZ8jaX+E5J/EcKOE4gQ=\ngithub.com/containernetworking/plugins v1.5.1/go.mod h1:MIQfgMayGuHYs0XdNudf31cLLAC+i242hNm6KuDGqCM=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/tar2go v0.3.1 h1:DMWlaIyoh9FBWR4hyfZSOEDA7z8rmCiGF1IJIzlTlR8=\ngithub.com/cpuguy83/tar2go v0.3.1/go.mod h1:2Ys2/Hu+iPHQRa4DjIVJ7UAaKnDhAhNACeK3A0Rr5rM=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/cyphar/filepath-securejoin v0.3.5 h1:L81NHjquoQmcPgXcttUS9qTSR/+bXry6pbSINQGpjj4=\ngithub.com/cyphar/filepath-securejoin v0.3.5/go.mod h1:edhVd3c6OXKjUmSrVa/tGJRS9joFTxlslFCAyaxigkE=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/deckarep/golang-set/v2 v2.3.0 h1:qs18EKUfHm2X9fA50Mr/M5hccg2tNnVqsiBImnyDs0g=\ngithub.com/deckarep/golang-set/v2 v2.3.0/go.mod h1:VAky9rY/yGXJOLEDv3OMci+7wtDpOF4IN+y82NBOac4=\ngithub.com/dimchansky/utfbom v1.1.1 h1:vV6w1AhK4VMnhBno/TPVCoK9U/LP0PkLCS9tbxHdi/U=\ngithub.com/dimchansky/utfbom v1.1.1/go.mod h1:SxdoEBH5qIqFocHMyGOXVAybYJdr71b1Q/j0mACtrfE=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4 h1:k8TfKGeAcDQFFQOGCQMRN04N4a9YrPlRMMKnzAuvM9Q=\ngithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee h1:v6Eju/FhxsACGNipFEPBZZAzGr1F/jlRQr1qiBw2nEE=\ngithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee/go.mod h1:2H9hjfbpSMHwY503FclkV/lZTBh2YlOmLLSda12uL8c=\ngithub.com/fluent/fluent-logger-golang v1.9.0 h1:zUdY44CHX2oIUc7VTNZc+4m+ORuO/mldQDA7czhWXEg=\ngithub.com/fluent/fluent-logger-golang v1.9.0/go.mod h1:2/HCT/jTy78yGyeNGQLGQsjF3zzzAuy6Xlk6FCMV5eU=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.0/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2 h1:xisWqjiKEff2B0KfFYGpCqc3M3zdTz+OHQHRc09FeYk=\ngithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2/go.mod h1:xEhNfoBDX1hzLm2Nf80qUvZ2sVwoMZ8d6IE2SrsQfh4=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.1.2 h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=\ngithub.com/google/btree v1.1.2/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/certificate-transparency-go v1.1.4 h1:hCyXHDbtqlr/lMXU0D4WgbalXL0Zk4dSWWMbPV8VrqY=\ngithub.com/google/certificate-transparency-go v1.1.4/go.mod h1:D6lvbfwckhNrbM9WVl1EVeMOyzC19mpIjMOI4nxBHtQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 h1:k7nVchz72niMH6YLQNvHSdIE7iqsQxK1P41mySCvssg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.2.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.0 h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=\ngithub.com/googleapis/gax-go/v2 v2.12.0/go.mod h1:y+aIqrI5eb1YGMVJfuV3185Ts/D7qKpsEkdD5+I6QGU=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=\ngithub.com/hashicorp/go-memdb v1.3.2 h1:RBKHOsnSszpU6vxq80LzC2BaQjuuvoyaQbkLTf7V7g8=\ngithub.com/hashicorp/go-memdb v1.3.2/go.mod h1:Mluclgwib3R93Hk5fxEfiRhB+6Dar64wWh71LpNSe3g=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-msgpack v0.5.5 h1:i9R9JSrqIz0QVLz3sz+i3YJdT7TTSLcfLLzJi9aZTuI=\ngithub.com/hashicorp/go-msgpack v0.5.5/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.2 h1:ztczhD1jLxIRjVejw8gFomI1BQZOe2WoVOu0SyteCQc=\ngithub.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/memberlist v0.4.0 h1:k3uda5gZcltmafuFF+UFqNEl5PrH+yPZ4zkjp1f/H/8=\ngithub.com/hashicorp/memberlist v0.4.0/go.mod h1:yvyXLpo0QaGE59Y7hDTsTzDD25JYBZ4mHgHUZ8lrOI0=\ngithub.com/hashicorp/serf v0.8.5 h1:ZynDUIQiA8usmRgPdGPHFdPnb1wgGI9tK3mO9hcAJjc=\ngithub.com/hashicorp/serf v0.8.5/go.mod h1:UpNcs7fFbpKIyZaUuSW6EPiH+eZC7OuyFD+wc1oal+k=\ngithub.com/in-toto/in-toto-golang v0.5.0 h1:hb8bgwr0M2hGdDsLjkJ3ZqJ8JFLL/tgYdAxF/XEFBbY=\ngithub.com/in-toto/in-toto-golang v0.5.0/go.mod h1:/Rq0IZHLV7Ku5gielPT4wPHJfH1GdHMCq8+WPxw8/BE=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 h1:i2fYnDurfLlJH8AyyMOnkLHnHeP8Ff/DDpuZA/D3bPo=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2/go.mod h1:co9pwDoBCm1kGxawmb4sPq0cSIOOWNPT4KnHotMP1Zg=\ngithub.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=\ngithub.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1 h1:xda7qaHDSVOsADNouv7ukSuicKZO7GgVUCXxpaIEIlM=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1/go.mod h1:7MoNYNbb3UaDHtF8udiJo/RH6VsTKP1pqKLUTVCvToE=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.57 h1:Jzi7ApEIzwEPLHWRcafCN9LZSBbqQpxjt/wpgvg7wcM=\ngithub.com/miekg/dns v1.1.57/go.mod h1:uqRjCRUuEAA6qsOiJvDd+CFo/vW+y5WR6SNmHE55hZk=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1 h1:YaoXgBePoMA12+S1u/ddkv+QqxcfiZK4prI6HPnkFiU=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1/go.mod h1:CzVgeB0RvF2EGzQnytKVvVSDwmKJXxkOTUGbNrTja/k=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2 h1:vGKWl0YJqUNxE8d+h8f6NJLcCJrgbhC4NcD46KavDd4=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2/go.mod h1:MG3aRVU/N29oo/V/IhBX8GR/zz4kQkprJgF2EVszyDE=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mndrix/tap-go v0.0.0-20171203230836-629fa407e90b/go.mod h1:pzzDgJWZ34fGzaAZGFW22KVZDfyrYW+QABMrWnJBnSs=\ngithub.com/moby/buildkit v0.18.2 h1:l86uBvxh4ntNoUUg3Y0eGTbKg1PbUh6tawJ4Xt75SpQ=\ngithub.com/moby/buildkit v0.18.2/go.mod h1:vCR5CX8NGsPTthTg681+9kdmfvkvqJBXEv71GZe5msU=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/ipvs v1.1.0 h1:ONN4pGaZQgAx+1Scz5RvWV4Q7Gb+mvfRh3NsPS+1XQQ=\ngithub.com/moby/ipvs v1.1.0/go.mod h1:4VJMWuf098bsUMmZEiD4Tjk/O7mOn3l1PTD3s4OoYAs=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/pubsub v1.0.0 h1:jkp/imWsmJz2f6LyFsk7EkVeN2HxR/HTTOY8kHrsxfA=\ngithub.com/moby/pubsub v1.0.0/go.mod h1:bXSO+3h5MNXXCaEG+6/NlAIk7MMZbySZlnB+cUQhKKc=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554 h1:DMHJbgyNZWyrPKYjCYt2IxEO7KA0eSd4fo6KQsv2W84=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554/go.mod h1:mTTGIAz/59OGZR5Qe+QByIe3Nxc+sSuJkrsStFhr6Lg=\ngithub.com/moby/sys/mount v0.3.4 h1:yn5jq4STPztkkzSKpZkLcmjue+bZJ0u2AuQY1iNI1Ww=\ngithub.com/moby/sys/mount v0.3.4/go.mod h1:KcQJMbQdJHPlq5lcYT+/CjatWM4PuxKe+XLSVS4J6Os=\ngithub.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=\ngithub.com/moby/sys/mountinfo v0.7.2/go.mod h1:1YOa8w8Ih7uW0wALDUgT1dTTSBrZ+HiBLGws92L2RU4=\ngithub.com/moby/sys/reexec v0.1.0 h1:RrBi8e0EBTLEgfruBOFcxtElzRGTEUkeIFaVXgU7wok=\ngithub.com/moby/sys/reexec v0.1.0/go.mod h1:EqjBg8F3X7iZe5pU6nRZnYCMUTXoxsjiIfHup5wYIN8=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=\ngithub.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=\ngithub.com/moby/sys/symlink v0.3.0 h1:GZX89mEZ9u53f97npBy4Rc3vJKj7JBDj/PN2I22GrNU=\ngithub.com/moby/sys/symlink v0.3.0/go.mod h1:3eNdhduHmYPcgsJtZXW1W4XUJdZGBIkttZ8xKqPUJq0=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.2 h1:6qk3FJAFDs6i/q3W/pQ97SX192qKfZgGjCQqfCJkgzQ=\ngithub.com/moby/term v0.5.2/go.mod h1:d3djjFCrjnB+fl8NJux+EJzu0msscUP+f8it8hPkFLc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mreiferson/go-httpclient v0.0.0-20160630210159-31f0106b4474/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=\ngithub.com/mrunalp/fileutils v0.5.0/go.mod h1:M1WthSahJixYnrXQl/DFQuteStB1weuxD2QJNHXfbSQ=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.33.1 h1:dsYjIxxSR755MDmKVsaFQTE22ChNBcuuTWgkUDSubOk=\ngithub.com/onsi/gomega v1.33.1/go.mod h1:U4R44UsT+9eLIaYRB2a5qajjtQYn0hauxvRm16AVYg0=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runc v1.2.3 h1:fxE7amCzfZflJO2lHXf4y/y8M1BoAqp+FVmG19oYB80=\ngithub.com/opencontainers/runc v1.2.3/go.mod h1:nSxcWUydXrsBZVYNSkTjoQ/N6rcyTtn+1SD5D4+kRIM=\ngithub.com/opencontainers/runtime-spec v1.0.3-0.20220825212826-86290f6a00fb/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 h1:DmNGcqH3WDbV5k8OJ+esPWbqUOX5rMLR2PMvziDMJi0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626/go.mod h1:BRHJJd0E+cx42OybVYSgUvZmU0B8P9gZuRXlZUP7TKI=\ngithub.com/opencontainers/selinux v1.9.1/go.mod h1:2i0OySw99QjzBBQByd1Gr9gSjvuho1lHsJxIJ3gGbJI=\ngithub.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=\ngithub.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170 h1:DiLBVp4DAcZlBVBEtJpNWZpZVq0AEeCY7Hqk8URVs4o=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170/go.mod h1:uQd4a7Rh3ZsVg5j0lNyAfyxIeGde9yrlhjF78GzeW0c=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee h1:P6U24L02WMfj9ymZTxl7CxS73JC99x3ukk+DBkgQGQs=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee/go.mod h1:3uODdxMgOaPYeWU7RzZLxVtJHZ/x1f/iHkBZuKJDzuY=\ngithub.com/philhofer/fwd v1.1.2 h1:bnDivRJ1EWPjUIRXV5KfORO897HTbpFAQddBdE8t7Gw=\ngithub.com/philhofer/fwd v1.1.2/go.mod h1:qkPdfjR2SIEbspLqpe1tO4n5yICnr2DY7mqEx2tUTP0=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rootless-containers/rootlesskit/v2 v2.3.1 h1:wdYtdKxWFvVLby9ThMP6O6/v2q/GmOXbkRi+4m9nPW0=\ngithub.com/rootless-containers/rootlesskit/v2 v2.3.1/go.mod h1:tdtfS9ak4bGmwJRmcjsAzcHN5rJ3c5dB7yhSV10KTbk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/columnize v2.1.0+incompatible/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 h1:nn5Wsu0esKSJiIVhscUtVbo7ada43DJhG55ua/hjS5I=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0/go.mod h1:FGBZgq2tXWICsxWQW1msNf49F0Pf2Op5Htayx335Qbs=\ngithub.com/shibumi/go-pathspec v1.3.0 h1:QUyMZhFo0Md5B8zV8x2tesohbb5kfbpTi9rBnKh5dkI=\ngithub.com/shibumi/go-pathspec v1.3.0/go.mod h1:Xutfslp817l2I1cZvgcfeMQJG5QnU2lh5tVaaMCl3jE=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.3.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spdx/gordf v0.0.0-20201111095634-7098f93598fb/go.mod h1:uKWaldnbMnjsSAXRurWqqrdyZen1R7kxl8TkmWk2OyM=\ngithub.com/spdx/tools-golang v0.5.3 h1:ialnHeEYUC4+hkm5vJm4qz2x+oEJbS0mAMFrNXdQraY=\ngithub.com/spdx/tools-golang v0.5.3/go.mod h1:/ETOahiAo96Ob0/RAIBmFZw6XN0yTnyr/uFZm2NTMhI=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=\ngithub.com/tedsuo/ifrit v0.0.0-20230330192023-5cba443a66c4 h1:MGZzzxBuPuK4J0XQo+0uy0NnXQGKzHXhYp5oG1Wy860=\ngithub.com/tedsuo/ifrit v0.0.0-20230330192023-5cba443a66c4/go.mod h1:eyZnKCc955uh98WQvzOm0dgAeLnf2O0Rz0LPoC5ze+0=\ngithub.com/tinylib/msgp v1.1.8 h1:FCXC1xanKO4I8plpHGH2P7koL/RzZs12l/+r7vakfm0=\ngithub.com/tinylib/msgp v1.1.8/go.mod h1:qkpG+2ldGg4xRFmx+jfTvZPxfGFhi64BcnL9vkCm/Tw=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 h1:eUk79E1w8yMtXeHSzjKorxuC8qJOnyXQnLaJehxpJaI=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205/go.mod h1:3Iuxbr0P7D3zUzBMAZB+ois3h/et0shEz0qApgHYGpY=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 h1:RgyoSI38Y36zjQaszel/0RAcIehAnjA1B0RiUV9SDO4=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184/go.mod h1:Dl/9oEjK7IqnjAm21Okx/XIxUCFJzvh+XdVHUlBwXTw=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e h1:SdcAL/tmv2mIfNhRygmeRrcci3aJQFqNughD7rcV170=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e/go.mod h1:xsu+XeKT9piH/5f9Y1Zsv5krQqI34CWkIusbs5027IM=\ngithub.com/tonistiigi/go-archvariant v1.0.0 h1:5LC1eDWiBNflnTF1prCiX09yfNHIxDC/aukdhCdTyb0=\ngithub.com/tonistiigi/go-archvariant v1.0.0/go.mod h1:TxFmO5VS6vMq2kvs3ht04iPXtu2rUT/erOnGFYfk5Ho=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 h1:7I5c2Ig/5FgqkYOh/N87NzoyI9U15qUPXhDD8uCupv8=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4/go.mod h1:278M4p8WsNh3n4a1eqiFcV2FGk7wE5fwUpUom9mK9lE=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea h1:SXhTLE6pb6eld/v/cCndK0AMpt1wiVFb/YYmqB3/QG0=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea/go.mod h1:WPnis/6cRcDZSUvVmezrxJPkiO87ThFYsoUiMwWNDJk=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab h1:H6aJ0yKQ0gF49Qb2z5hI1UHxSQt4JMyxebFR15KnApw=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/urfave/cli v1.19.1/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/vbatts/tar-split v0.11.5 h1:3bHCTIheBm1qFTcgh9oPu+nNBtX+XJIupG/vacinCts=\ngithub.com/vbatts/tar-split v0.11.5/go.mod h1:yZbwRsSeGjusneWgA781EKej9HF8vme8okylkAeNKLk=\ngithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350 h1:w5OI+kArIBVksl8UGn6ARQshtPCQvDsbuA9NQie3GIg=\ngithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/vishvananda/netns v0.0.5 h1:DfiHV+j8bA32MFM7bfEunvT8IAqQ/NzSJHtcmW5zdEY=\ngithub.com/vishvananda/netns v0.0.5/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/weppos/publicsuffix-go v0.13.1-0.20210123135404-5fd73613514e/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b h1:FsyNrX12e5BkplJq7wKOLk0+C6LZ+KGXvuEcKUYm5ss=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/zmap/rc2 v0.0.0-20131011165748-24b9757f5521/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=\ngithub.com/zmap/zcertificate v0.0.0-20180516150559-0e3d58b1bac4/go.mod h1:5iU54tB79AMBcySS0R2XIyZBAVmeHranShAFELYx7is=\ngithub.com/zmap/zcrypto v0.0.0-20210123152837-9cf5beac6d91/go.mod h1:R/deQh6+tSWlgI9tb4jNmXxn8nSCabl5ZQsBX9//I/E=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc h1:zkGwegkOW709y0oiAraH/3D8njopUR/pARHv4tZZ6pw=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc/go.mod h1:FM4U1E3NzlNMRnSUTU3P1UdukWhYGifqEsjk9fn7BCk=\ngithub.com/zmap/zlint/v3 v3.1.0 h1:WjVytZo79m/L1+/Mlphl09WBob6YTGljN5IGWZFpAv0=\ngithub.com/zmap/zlint/v3 v3.1.0/go.mod h1:L7t8s3sEKkb0A2BxGy1IWrxt1ZATa1R4QfJZaQOD3zU=\ngo.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\ngo.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.16 h1:ZgY48uH6UvB+/7R9Yf4x574uCO3jIx0TRDyetSfId3Q=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.16/go.mod h1:V8acl8pcEK0Y2g19YlOV9m9ssUe6MgiDSobSoaBAM0E=\ngo.etcd.io/etcd/pkg/v3 v3.5.16 h1:cnavs5WSPWeK4TYwPYfmcr3Joz9BH+TZ6qoUtz6/+mc=\ngo.etcd.io/etcd/pkg/v3 v3.5.16/go.mod h1:+lutCZHG5MBBFI/U4eYT5yL7sJfnexsoM20Y0t2uNuY=\ngo.etcd.io/etcd/raft/v3 v3.5.16 h1:zBXA3ZUpYs1AwiLGPafYAKKl/CORn/uaxYDwlNwndAk=\ngo.etcd.io/etcd/raft/v3 v3.5.16/go.mod h1:P4UP14AxofMJ/54boWilabqqWoW9eLodl6I5GdGzazI=\ngo.etcd.io/etcd/server/v3 v3.5.16 h1:d0/SAdJ3vVsZvF8IFVb1k8zqMZ+heGcNfft71ul9GWE=\ngo.etcd.io/etcd/server/v3 v3.5.16/go.mod h1:ynhyZZpdDp1Gq49jkUg5mfkDWZwXnn3eIqCqtJnrD/s=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 h1:IVtyPth4Rs5P8wIf0mP2KVKFNTJ4paX9qQ4Hkh5gFdc=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0/go.mod h1:ImRBLMJv177/pwiLZ7tU7HDGNdBv7rS0HQ99eN/zBl8=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 h1:U2guen0GhqH8o/G2un8f/aG/y++OuW6MyCo6hT9prXk=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0/go.mod h1:yeGZANgEcpdx/WK0IvvRFC+2oLiMS2u4L/0Rj2M2Qr0=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 h1:aLmmtjRke7LPDQ3lvpFz+kNEH43faFhzW7v8BFIEydg=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0/go.mod h1:TC1pyCt6G9Sjb4bQpShH+P5R53pO6ZuGnHuuln9xMeE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.9.0 h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=\ngo.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.11/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.8.0 h1:dg6GjLku4EH+249NNmoIciG9N/jURbDG+pFlTkhzIC8=\ngo.uber.org/multierr v1.8.0/go.mod h1:7EAYxJLBy9rStEaz58O2t4Uvip6FSURkq8/ppBp95ak=\ngo.uber.org/zap v1.21.0 h1:WefMeulhovoZ2sYXz7st6K0sLj7bBhpiFaud4r4zST8=\ngo.uber.org/zap v1.21.0/go.mod h1:wjWOCqI0f2ZZrJF/UufIOkiC8ii6tm1iqIsLo76RfJw=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201124201722-c8d3bf9c5392/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f h1:XdNn9LlyWAhLVp6P/i8QYBW+hlyhrhei9uErw2B5GJo=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f/go.mod h1:D5SMRVC3C2/4+F/DB1wZsLRnSNimn2Sp/NPsCrsv8ak=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.3.0/go.mod h1:MBQ8lrhLObU/6UmLb4fmbmk5OcyYmqtbGd/9yIeKjEE=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.22.0 h1:BzDx2FehcG7jJwgWLELCdmLuxk2i+x9UDpSiss2u0ZA=\ngolang.org/x/oauth2 v0.22.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191115151921-52ab43148777/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201126233918-771906719818/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.3.0/go.mod h1:q750SLmJuPmVoN1blW3UFBPREJfb1KmY3vwxfr+nFDA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.5.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.4.0/go.mod h1:UE5sM2OK9E/d67R0ANs2xJizIymRP5gJU295PvKXxjQ=\ngolang.org/x/tools v0.27.0 h1:qEKojBykQkQ4EynWy4S8Weg69NumxKdn40Fce3uc/8o=\ngolang.org/x/tools v0.27.0/go.mod h1:sUi0ZgbwW9ZPAq26Ekut+weQPR5eIM6GQLQ1Yjm1H0Q=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.155.0 h1:vBmGhCYs0djJttDNynWo44zosHlPvHmA0XiN2zP2DtA=\ngoogle.golang.org/api v0.155.0/go.mod h1:GI5qK5f40kCpHfPn6+YzGAByIKWv8ujFnmoWm7Igduk=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 h1:KAeGQVN3M9nD0/bQXnr/ClcEMJ968gUXJQ9pwfSynuQ=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80/go.mod h1:cc8bqMqtv9gMOr0zHg2Vzff5ULhhL2IXP4sbcn32Dro=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 h1:0+ozOGcrp+Y8Aq8TLNN2Aliibms5LEzsq99ZZmAGYm0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094/go.mod h1:fJ/e3If/Q67Mj99hin0hMhiNyCRmt6BQ2aWIJshUSJw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 h1:BwIjyKYGsK9dMCBOorzRri8MQwmi7mT9rGHsCEinZkA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.66.3 h1:TWlsh8Mv0QI/1sIbs1W36lqRclxrmF+eFJ4DbI0fuhA=\ngoogle.golang.org/grpc v1.66.3/go.mod h1:s3/l6xSSCURdVfAnL+TqCNMyTDAGN6+lZeVxnZR128Y=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/klog/v2 v2.90.1 h1:m4bYOKall2MmOiRaR1J+We67Do7vm9KiQVlT96lnHUw=\nk8s.io/klog/v2 v2.90.1/go.mod h1:y1WjHnz7Dj687irZUWR/WLkLc5N1YHtjLdmgWjndZn0=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70 h1:QnLPkuDWWbD5C+3DUA2IUXai5TK6w2zff+MAGccqdsw=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70/go.mod h1:/iBwcj9nbLejQitYvUm9caurITQ6WyNHibJk6Q9fiS4=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70 h1:HsB2G/rEQiYyo1bGoQqHZ/Bvd6x1rERQTNdPr1FyWjI=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70/go.mod h1:+l6Ee2F59XiJ2I6WR5ObpC1utCQJZ/VLsEbQCD8RG24=\nresenje.org/singleflight v0.4.3 h1:l7foFYg8X/VEHPxWs1K/Pw77807RMVzvXgWGb0J1sdM=\nresenje.org/singleflight v0.4.3/go.mod h1:lAgQK7VfjG6/pgredbQfmV0RvG/uVhKo6vSuZ0vCWfk=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\ntags.cncf.io/container-device-interface v0.8.0 h1:8bCFo/g9WODjWx3m6EYl3GfUG31eKJbaggyBDxEldRc=\ntags.cncf.io/container-device-interface v0.8.0/go.mod h1:Apb7N4VdILW0EVdEMRYXIDVRZfNJZ+kmEUss2kRRQ6Y=\ntags.cncf.io/container-device-interface/specs-go v0.8.0 h1:QYGFzGxvYK/ZLMrjhvY0RjpUavIn4KcmRmVP/JjdBTA=\ntags.cncf.io/container-device-interface/specs-go v0.8.0/go.mod h1:BhJIkjjPh4qpys+qm4DAYtUyryaTDg9zris+AczXyws=\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "volume",
          "type": "tree",
          "content": null
        }
      ]
    },
    {
      "nameWithOwner": "nestjs/nest",
      "stars": 68820,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".commitlintrc.json",
          "type": "blob",
          "size": 0.71,
          "content": "{\n  \"extends\": [\"@commitlint/config-angular\"],\n  \"rules\": {\n    \"subject-case\": [\n      2,\n      \"always\",\n      [\"sentence-case\", \"start-case\", \"pascal-case\", \"upper-case\", \"lower-case\"]\n    ],\n    \"type-enum\": [\n      2,\n      \"always\",\n      [\n        \"build\",\n        \"chore\",\n        \"ci\",\n        \"docs\",\n        \"feat\",\n        \"fix\",\n        \"perf\",\n        \"refactor\",\n        \"revert\",\n        \"style\",\n        \"test\",\n        \"sample\"\n      ]\n    ],\n    \"scope-enum\": [\n      1,\n      \"always\",\n      [\n        \"common\",\n        \"core\",\n        \"sample\",\n        \"microservices\",\n        \"express\",\n        \"fastify\",\n        \"socket.io\",\n        \"ws\",\n        \"testing\",\n        \"websockets\"\n      ]\n    ]\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.08,
          "content": "package-lock.json   -diff -merge\npackage-lock.json    linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.63,
          "content": "packages/*/package-lock.json\nsample/*/package-lock.json\n\n# dependencies\nnode_modules/\n\n# IDE\n/.idea\n/.awcache\n/.vscode\n/.devcontainer\n/.classpath\n/.project\n/.settings\n*.code-workspace\n\n# Vim\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# bundle\npackages/**/*.d.ts\npackages/**/*.js\n\n# misc\n.DS_Store\nlerna-debug.log\nnpm-debug.log\nyarn-error.log\n/**/npm-debug.log\n/packages/**/.npmignore\n/packages/**/LICENSE\n*.tsbuildinfo\n\n# example\n/quick-start\n/example_dist\n/example\n\n# tests\n/test\n/benchmarks/memory\n/coverage\n/.nyc_output\n/packages/graphql\n/benchmarks/memory\nbuild/config\\.gypi\n\n.npmrc\npnpm-lock.yaml\n/.history\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.14,
          "content": "# source\n**/*.ts\n*.ts\n\n# definitions\n!**/*.d.ts\n!*.d.ts\n\n# configuration\npackage-lock.json\ntslint.json\ntsconfig.json\n.prettierrc\n\n*.tsbuildinfo"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.05,
          "content": "packages/**/*.d.ts\npackages/**/*.js\n.nyc_output\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.08,
          "content": "{\n  \"singleQuote\": true,\n  \"arrowParens\": \"avoid\",\n  \"trailingComma\": \"all\"\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at support@nestjs.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.55,
          "content": "# Contributing to Nest\n\nWe would love for you to contribute to Nest and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\n<!--* [Code of Conduct](#coc)-->\n\n- [Question or Problem?](#question)\n- [Issues and Bugs](#issue)\n- [Feature Requests](#feature)\n- [Submission Guidelines](#submit)\n- [Development Setup](#development)\n- [Coding Rules](#rules)\n- [Commit Message Guidelines](#commit)\n  <!-- - [Signing the CLA](#cla) -->\n\n<!-- ## <a name=\"coc\"></a> Code of Conduct\nHelp us keep Nest open and inclusive. Please read and follow our [Code of Conduct][coc]. -->\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\n**Do not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests.** You've got much better chances of getting your question answered on [Stack Overflow][stackoverflow] where the questions should be tagged with tag `nestjs`.\n\nStack Overflow is a much better place to ask questions since:\n\n<!-- - there are thousands of people willing to help on Stack Overflow [maybe one day] -->\n\n- questions and answers stay available for public viewing so your question / answer might help someone else\n- Stack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\n\nIf you would like to chat about the question in real-time, you can reach out via [our discord channel][discord].\n\n## <a name=\"issue\"></a> Found a Bug?\n\nIf you find a bug in the source code, you can help us by\n[submitting an issue](#submit-issue) to our [GitHub Repository][github]. Even better, you can\n[submit a Pull Request](#submit-pr) with a fix.\n\n## <a name=\"feature\"></a> Missing a Feature?\n\nYou can _request_ a new feature by [submitting an issue](#submit-issue) to our GitHub\nRepository. If you would like to _implement_ a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\n- For a **Major Feature**, first open an issue and outline your proposal so that it can be\n  discussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\n  and help you to craft the change so that it is successfully accepted into the project. For your issue name, please prefix your proposal with `[discussion]`, for example \"[discussion]: your feature idea\".\n- **Small Features** can be crafted and directly [submitted as a Pull Request](#submit-pr).\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### <a name=\"submit-issue\"></a> Submitting an Issue\n\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\n\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using a repository or [Gist](https://gist.github.com/). Having a live, reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:\n\n- version of NestJS used\n- 3rd-party libraries and their versions\n- and most importantly - a use-case that fails\n\n<!--\n// TODO we need to create a playground, similar to plunkr\n\nA minimal reproduce scenario using a repository or Gist allows us to quickly confirm a bug (or point out coding problem) as well as confirm that we are fixing the right problem. If neither of these are not a suitable way to demonstrate the problem (for example for issues related to our npm packaging), please create a standalone git repository demonstrating the problem. -->\n\n<!-- We will be insisting on a minimal reproduce scenario in order to save maintainers time and ultimately be able to fix more bugs. Interestingly, from our experience users often find coding problems themselves while preparing a minimal plunk. We understand that sometimes it might be hard to extract essentials bits of code from a larger code-base but we really need to isolate the problem before we can fix it. -->\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that doesn't have enough info to be reproduced.\n\nYou can file new issues by filling out our [new issue form][new_issue].\n\n### <a name=\"submit-pr\"></a> Submitting a Pull Request (PR)\n\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\n<!--\nTo the first point\n\n1. Please sign our [Contributor License Agreement (CLA)](#cla) before sending PRs.\nWe cannot accept code without this.\n-->\n\n1. Search [GitHub Pull Requests][gh_prs] for an open or closed PR\n   that relates to your submission. You don't want to duplicate effort.\n1. Fork this repository.\n1. Make your changes in a new git branch:\n\n   ```shell\n   git checkout -b my-fix-branch master\n   ```\n\n1. Create your patch, **including appropriate test cases**.\n1. Follow our [Coding Rules](#rules).\n1. Run the full Nest test suite (see [common scripts](#common-scripts)),\n   and ensure that all tests pass.\n1. Commit your changes using a descriptive commit message that follows our\n   [commit message conventions](#commit). Adherence to these conventions\n   is necessary because release notes are automatically generated from these messages.\n\n   ```shell\n   git commit -a\n   ```\n\n   Note: the optional commit `-a` command line option will automatically \"add\" and \"rm\" edited files.\n\n1. Push your branch to GitHub:\n\n   ```shell\n   git push origin my-fix-branch\n   ```\n\n1. In GitHub, send a pull request to `nestjs:master`.\n\n- If we suggest changes then:\n\n  - Make the required updates.\n  - Re-run the Nest test suites to ensure tests are still passing.\n  - Rebase your branch and force push to your GitHub repository (this will update your Pull Request):\n\n    ```shell\n    git rebase master -i\n    git push -f\n    ```\n\nThat's it! Thank you for your contribution!\n\n#### After your pull request is merged\n\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\n- Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n\n  ```shell\n  git push origin --delete my-fix-branch\n  ```\n\n- Check out the master branch:\n\n  ```shell\n  git checkout master -f\n  ```\n\n- Delete the local branch:\n\n  ```shell\n  git branch -D my-fix-branch\n  ```\n\n- Update your master with the latest upstream version:\n\n  ```shell\n  git pull --ff upstream master\n  ```\n\n## <a name=\"development\"></a> Development Setup\n\nYou will need [Node.js](https://nodejs.org) version >= 10.13.0 (except for v13).\n\n1. After cloning the repo, run:\n\n```bash\n$ npm ci --legacy-peer-deps # (or yarn install)\n```\n\n2. In order to prepare your environment run `prepare.sh` shell script:\n\n```bash\n$ sh scripts/prepare.sh\n```\n\nThat will compile fresh packages and afterward, move them all to `sample` directories.\n\n### <a name=\"common-scripts\"></a>Commonly used NPM scripts\n\n```bash\n# build all packages and move to \"sample\" directories\n$ npm run build\n\n# run the full unit tests suite\n$ npm run test\n\n# run integration tests\n# docker is required(!)\n$ sh scripts/run-integration.sh\n\n# run linter\n$ npm run lint\n\n# build all packages and put them near to their source .ts files\n$ npm run build:prod\n```\n\n## <a name=\"rules\"></a> Coding Rules\n\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\n<!--\n// We're working on auto-documentation.\n* All public API methods **must be documented**. (Details TBC). -->\n\n- All features or bug fixes **must be tested** by one or more specs (unit-tests).\n- We follow [Google's JavaScript Style Guide][js-style-guide], but wrap all code at\n  **100 characters**. An automated formatter is available (`npm run format`).\n\n## <a name=\"commit\"></a> Commit Message Guidelines\n\nWe have very precise rules over how our git commit messages can be formatted. This leads to **more\nreadable messages** that are easy to follow when looking through the **project history**. But also,\nwe use the git commit messages to **generate the Nest change log**.\n\n### Commit Message Format\n\nEach commit message consists of a **header**, a **body** and a **footer**. The header has a special\nformat that includes a **type**, a **scope** and a **subject**:\n\n```\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\nThe **header** is mandatory and the **scope** of the header is optional.\n\nAny line of the commit message cannot be longer than 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\n\nFooter should contain a [closing reference to an issue](https://help.github.com/articles/closing-issues-via-commit-messages/) if any.\n\nSamples: (even more [samples][commits_samples])\n\n```\ndocs(changelog): update change log to beta.5\nfix(core): need to depend on latest rxjs and zone.js\n```\n\n### Revert\n\nIf the commit reverts a previous commit, it should begin with `revert:`, followed by the header of the reverted commit. In the body it should say: `This reverts commit <hash>.`, where the hash is the SHA of the commit being reverted.\n\n### Type\n\nMust be one of the following:\n\n- **build**: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\n- **chore**: Updating tasks etc; no production code change\n- **ci**: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\n- **docs**: Documentation only changes\n- **feat**: A new feature\n- **fix**: A bug fix\n- **perf**: A code change that improves performance\n- **refactor**: A code change that neither fixes a bug nor adds a feature\n- **style**: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n- **test**: Adding missing tests or correcting existing tests\n- **sample**: A change to the samples\n\n### Scope\n\nThe scope should have the name of the npm package affected (as perceived by person reading changelog generated from commit messages).\n\nThe following is the list of supported scopes:\n\n- **common**: for changes made on `packages/common` directory\n- **core**: for changes made on `packages/core` directory\n- **sample**: for changes made on `packages/sample` directory\n- **microservices**: for changes made on `packages/microservices` directory\n- **express**: for changes made on `packages/platform-express` directory\n- **fastify**: for changes made on `packages/platform-fastify` directory\n- **socket.io**: for changes made on `packages/platform-socket.io` directory\n- **ws**: for changes made on `packages/platform-ws` directory\n- **testing**: for changes made on `packages/testing` directory\n- **websockets**: for changes made on `packages/websockets` directory\n\nIf your change affect more than one package, separate the scopes with a comma (e.g. `common,core`).\n\nThere are currently a few exceptions to the \"use package name\" rule:\n\n- **packaging**: used for changes that change the npm package layout in all of our packages, e.g. public path changes, package.json changes done to all packages, d.ts file/format changes, changes to bundles, etc.\n- **changelog**: used for updating the release notes in CHANGELOG.md\n- **sample/#**: for the example apps directory, replacing # with the example app number\n- none/empty string: useful for `style`, `test` and `refactor` changes that are done across all packages (e.g. `style: add missing semicolons`)\n\n### Subject\n\nThe subject contains succinct description of the change:\n\n- use the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\n- don't capitalize first letter\n- no dot (.) at the end\n\n### Body\n\nJust as in the **subject**, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\n\n### Footer\n\nThe footer should contain any information about **Breaking Changes** and is also the place to\nreference GitHub issues that this commit **Closes**.\n\n**Breaking Changes** should start with the word `BREAKING CHANGE:` with a space or two newlines. The rest of the commit message is then used for this.\n\nA detailed explanation can be found in this [document][commit-message-format].\n\n<!-- ## <a name=\"cla\"></a> Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla]. -->\n\n<!-- [angular-group]: https://groups.google.com/forum/#!forum/angular -->\n\n<!-- [coc]: https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md -->\n\n[commit-message-format]: https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#\n<!-- [individual-cla]: http://code.google.com/legal/individual-cla-v1.0.html -->\n<!-- [corporate-cla]: http://code.google.com/legal/corporate-cla-v1.0.html -->\n[dev-doc]: https://github.com/nestjs/nest/blob/master/docs/DEVELOPER.md\n[github]: https://github.com/nestjs/nest\n[stackoverflow]: https://stackoverflow.com/questions/tagged/nestjs\n[discord]: https://discordapp.com/invite/G7Qnnhy\n[js-style-guide]: https://google.github.io/styleguide/jsguide.html\n[new_issue]: https://github.com/nestjs/nest/issues/new\n[gh_prs]: https://github.com/nestjs/nest/pulls\n[commits_samples]: https://github.com/nestjs/nest/commits/master\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.09,
          "content": "(The MIT License)\n\nCopyright (c) 2017-2025 Kamil Mysliwiec <https://kamilmysliwiec.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 13.71,
          "content": "<p align=\"center\">\n  <a href=\"https://nestjs.com/\" target=\"blank\"><img src=\"https://nestjs.com/img/logo-small.svg\" width=\"120\" alt=\"Nest Logo\" /></a>\n</p>\n\n[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456\n[circleci-url]: https://circleci.com/gh/nestjs/nest\n\n  <p align=\"center\">A progressive <a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a> framework for building efficient and scalable server-side applications.</p>\n    <p align=\"center\">\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/v/@nestjs/core.svg\" alt=\"NPM Version\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/l/@nestjs/core.svg\" alt=\"Package License\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/@nestjs/common.svg\" alt=\"NPM Downloads\" /></a>\n<a href=\"https://circleci.com/gh/nestjs/nest\" target=\"_blank\"><img src=\"https://img.shields.io/circleci/build/github/nestjs/nest/master\" alt=\"CircleCI\" /></a>\n<a href=\"https://discord.gg/G7Qnnhy\" target=\"_blank\"><img src=\"https://img.shields.io/badge/discord-online-brightgreen.svg\" alt=\"Discord\"/></a>\n<a href=\"https://opencollective.com/nest#backer\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers/badge.svg\" alt=\"Backers on Open Collective\" /></a>\n<a href=\"https://opencollective.com/nest#sponsor\" target=\"_blank\"><img src=\"https://opencollective.com/nest/sponsors/badge.svg\" alt=\"Sponsors on Open Collective\" /></a>\n  <a href=\"https://paypal.me/kamilmysliwiec\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Donate-PayPal-ff3f59.svg\"/></a>\n    <a href=\"https://opencollective.com/nest#sponsor\"  target=\"_blank\"><img src=\"https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg\" alt=\"Support us\"></a>\n  <a href=\"https://twitter.com/nestframework\" target=\"_blank\"><img src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow\"></a>\n</p>\n  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)\n  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->\n\n## Description\n\nNest is a framework for building efficient, scalable <a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a> server-side applications. It uses modern JavaScript, is built with <a href=\"https://www.typescriptlang.org\" target=\"_blank\">TypeScript</a> (preserves compatibility with pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).\n\n<p>Under the hood, Nest makes use of <a href=\"https://expressjs.com/\" target=\"_blank\">Express</a>, but also provides compatibility with a wide range of other libraries, like <a href=\"https://github.com/fastify/fastify\" target=\"_blank\">Fastify</a>, allowing for easy use of the myriad of third-party plugins which are available.</p>\n\n## Philosophy\n\n<p>In recent years, thanks to Node.js, JavaScript has become the “lingua franca” of the web for both front and backend applications, giving rise to awesome projects like <a href=\"https://angular.io/\" target=\"_blank\">Angular</a>, <a href=\"https://github.com/facebook/react\" target=\"_blank\">React</a>, and <a href=\"https://github.com/vuejs/vue\" target=\"_blank\">Vue</a>, which improve developer productivity and enable the construction of fast, testable, and extensible frontend applications. However, on the server-side, while there are a lot of superb libraries, helpers, and tools for Node, none of them effectively solve the main problem - the architecture.</p>\n<p>Nest aims to provide an application architecture out of the box which allows for effortless creation of highly testable, scalable, and loosely coupled and easily maintainable applications. The architecture is heavily inspired by Angular.</p>\n\n## Getting started\n\n- To check out the [guide](https://docs.nestjs.com), visit [docs.nestjs.com](https://docs.nestjs.com). :books:\n- 要查看中文 [指南](readme_zh.md), 请访问 [docs.nestjs.cn](https://docs.nestjs.cn). :books:\n- [가이드](readme_kr.md) 문서는 [docs.nestjs.com](https://docs.nestjs.com)에서 확인하실 수 있습니다. :books:\n- [ガイド](readme_jp.md)は [docs.nestjs.com](https://docs.nestjs.com)でご確認ください。 :books:\n\n## Questions\n\nFor questions and support please use the official [Discord channel](https://discord.gg/G7Qnnhy). The issue list of this repo is **exclusively** for bug reports and feature requests.\n\n## Issues\n\nPlease make sure to read the [Issue Reporting Checklist](https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#-submitting-an-issue) before opening an issue. Issues not conforming to the guidelines may be closed immediately.\n\n## Consulting\n\nWith official support, you can get expert help straight from Nest core team. We provide dedicated technical support, migration strategies, advice on best practices (and design decisions), PR reviews, and team augmentation. Read more about [support here](https://enterprise.nestjs.com).\n\n## Support\n\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support from the amazing backers. If you'd like to join them, please [read more here](https://docs.nestjs.com/support).\n\n#### Principal Sponsors\n\n<table style=\"text-align:center;\">\n<tr>\n<td><a href=\"https://trilon.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/trilon.svg\" width=\"200\" valign=\"middle\" /></a></td>\n<td><a href=\"https://microsoft.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/microsoft-logo.png\" width=\"180\" valign=\"middle\" /></a></td>\n<td><a href=\"https://mojam.co\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/mojam-logo.png\" width=\"80\" valign=\"middle\" /></a></td>\n<td><a href=\"https://marblism.com?utm_source=nest\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/marblism-logo.png\" width=\"180\" valign=\"middle\" /></a></td>\n<td><a href=\"https://valor-software.com/\" target=\"_blank\"><img src=\"https://docs.nestjs.com/assets/sponsors/valor-software.png\" width=\"170\" valign=\"middle\" /></a></td>\n<td><a href=\"https://amplication.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/amplication-logo.svg\" width=\"190\" valign=\"middle\" /></a></td>\n</tr>\n</table>\n\n#### Gold Sponsors\n\n<table style=\"text-align:center;\">\n<tr>\n<td><a href=\"https://www.redhat.com\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/red-hat-logo.svg\" width=\"200\" valign=\"middle\" /></a></td>\n<td><a href=\"https://github.com/Sanofi-IADC\" target=\"_blank\"><img src=\"https://docs.nestjs.com/assets/sponsors/sanofi.png\" width=\"180\" valign=\"middle\" /></a></td>\n<td><a href=\"https://nx.dev\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/nx-logo.png\" height=\"45\" valign=\"middle\" /></a></td>\n<td><a href=\"https://intrinsic.ventures/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/intrinisic-logo.png\" width=\"210\" valign=\"middle\" /></a></td>\n<td><a href=\"https://jetbrains.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/jetbrains-logo.svg\" width=\"90\" valign=\"middle\" /></a></td>\n</tr>\n<tr>\n<td><a href=\"https://snyk.co/nestjs\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/snyk-logo-black.png\" width=\"185\" valign=\"middle\" /></a></td>\n<td><a href=\"https://fuseautotech.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/fuse-logo.svg\" width=\"105\" valign=\"middle\" /></a></td>\n<td><a href=\"https://ridicorp.com/career/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/ridi-logo.svg\" width=\"105\" valign=\"middle\" /></a></td>\n<td><a href=\"https://www.movavi.com/imovie-for-windows.html\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/movavi-logo.svg\" width=\"105\" valign=\"middle\" /></a></td>\n<td><a href=\"https://skunk.team\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/skunk-logo.png\" height=\"60\" valign=\"middle\" /></a></td>\n</tr>\n</table>\n\n#### Silver Sponsors\n\n<table style=\"text-align:center;\">\n<tr>\n<td><a href=\"https://www.mercedes-benz.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/mercedes-logo.png\" width=\"100\" valign=\"middle\" /></a></td>\n<td><a href=\"https://www.dinii.jp/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/dinii-logo.png\" width=\"65\" valign=\"middle\" /></a></td>\n<td><a href=\"https://bloodycase.com/?promocode=NEST\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/bloodycase-logo.png\" width=\"65\" valign=\"middle\" /></a></td>\n<td><a href=\"https://handsontable.com/docs/react-data-grid/?utm_source=NestJS_GH&utm_medium=sponsorship&utm_campaign=library_sponsorship_2024\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/handsontable-dark-logo.svg#2\" width=\"150\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.itflashcards.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/it_flashcards-logo.png\" width=\"170\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://arcjet.com/?ref=nestjs\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/arcjet-logo.svg\" width=\"170\" valign=\"middle\" /></a></td>\n</tr>\n</table>\n\n#### Sponsors\n\n<table>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.swingdev.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/swingdev-logo.svg#1\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.novologic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/novologic.png\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://mantro.net/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/mantro-logo.svg\" width=\"95\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://triplebyte.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/triplebyte.png\" width=\"107\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://nearpod.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/nearpod-logo.svg\" width=\"100\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://genuinebee.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/genuinebee.svg\" width=\"97\" valign=\"middle\" /></a></td>\n</tr>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://vpn-review.com/vpn-for-torrenting\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/vpn-review-logo.png\" width=\"85\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://lambda-it.ch/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/lambda-it-logo.svg\" width=\"115\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://rocketech.it/cases/?utm_source=google&utm_medium=badge&utm_campaign=nestjs\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/rocketech-logo.svg\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.anonymistic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/anonymistic-logo.png\" width=\"125\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.naologic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/naologic-logo.svg\" width=\"125\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://triplecore.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/triplecore-logo.svg\" width=\"50\" valign=\"middle\" /></a></td>\n</tr>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://thecasinowizard.com/bonuses/no-deposit-bonuses/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/casinowizard-logo.png\" width=\"120\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://polygon-software.ch/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/polygon-logo.svg\" width=\"120\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://boringowl.io/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/boringowl-logo.svg\" width=\"120\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://nordbot.app/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/nordbot-logo.png\" width=\"120\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://doppio.sh/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/dopiosh-logo.png\" width=\"50\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.hingehealth.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/hinge-health-logo.svg\" width=\"100\" valign=\"middle\" /></a></td>\n</tr>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://julienferand.dev/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/julienferand-logo.jpeg\" width=\"55\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.tripoffice.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/tripoffice-logo.png\" width=\"140\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://solcellsforetag.se/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/solcellsforetag-logo.svg\" width=\"140\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.route4me.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/route4me-logo.svg\" width=\"100\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.slotsup.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/slotsup-logo.png\" width=\"60\" valign=\"middle\" /></a></td>\n</tr>\n</table>\n\n## Backers\n\n<a href=\"https://opencollective.com/nest\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers.svg?width=1000\"></a>\n\n## Stay in touch\n\n- Author - [Kamil Myśliwiec](https://x.com/kammysliwiec)\n- Website - [https://nestjs.com](https://nestjs.com/)\n- X - [@nestframework](https://x.com/nestframework)\n\n## License\n\nNest is [MIT licensed](LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report security issues to `support@nestjs.com`.\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.mjs",
          "type": "blob",
          "size": 1.73,
          "content": "// @ts-check\nimport eslint from '@eslint/js';\nimport eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';\nimport globals from 'globals';\nimport tseslint from 'typescript-eslint';\n\nexport default tseslint.config(\n  {\n    ignores: ['node_modules', '**/node_modules/**', '**/*.js', '**/*.d.ts'],\n  },\n  eslint.configs.recommended,\n  ...tseslint.configs.recommendedTypeChecked,\n  eslintPluginPrettierRecommended,\n  {\n    languageOptions: {\n      globals: {\n        ...globals.node,\n        ...globals.jest,\n      },\n      ecmaVersion: 5,\n      sourceType: 'module',\n      parserOptions: {\n        project: ['tsconfig.json', 'tsconfig.spec.json'],\n        projectService: true,\n        tsconfigRootDir: import.meta.dirname,\n      },\n    },\n  },\n  {\n    rules: {\n      '@typescript-eslint/no-explicit-any': 'off',\n      '@typescript-eslint/no-unsafe-assignment': 'off',\n      '@typescript-eslint/no-unsafe-call': 'off',\n      '@typescript-eslint/no-unsafe-member-access': 'off',\n      '@typescript-eslint/no-unsafe-function-type': 'off',\n      '@typescript-eslint/no-unsafe-argument': 'off',\n      '@typescript-eslint/no-unsafe-return': 'off',\n      '@typescript-eslint/no-unused-expressions': 'off',\n      '@typescript-eslint/no-require-imports': 'off',\n      '@typescript-eslint/no-unused-vars': 'off',\n      \"@typescript-eslint/no-misused-promises\": [\n        \"error\",\n        {\n          \"checksVoidReturn\": false,\n          \"checksConditionals\": false\n        }\n      ],\n      \"@typescript-eslint/require-await\": \"off\",\n      '@typescript-eslint/prefer-promise-reject-errors': 'off',\n      '@typescript-eslint/no-base-to-string': 'off',\n      '@typescript-eslint/unbound-method': 'off',\n      '@typescript-eslint/only-throw-error': 'off',\n    },\n  },\n);"
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 0.39,
          "content": "'use strict';\n/**\n * Load the TypeScript compiler, then load the TypeScript gulpfile which simply loads all\n * the tasks. The tasks are really inside tools/gulp/tasks.\n */\n\nconst path = require('path');\n\nconst projectDir = __dirname;\nconst tsconfigPath = path.join(projectDir, 'tools/gulp/tsconfig.json');\n\nrequire('ts-node').register({\n  project: tsconfigPath\n});\n\nrequire('./tools/gulp/gulpfile');"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.08,
          "content": "{\n  \"lerna\": \"2.4.0\",\n  \"packages\": [\"packages/*\"],\n  \"version\": \"11.0.0-next.1\"\n}\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 1355.16,
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 8.64,
          "content": "{\n  \"name\": \"@nestjs/core\",\n  \"version\": \"10.4.5\",\n  \"description\": \"Modern, fast, powerful node.js web framework\",\n  \"homepage\": \"https://nestjs.com\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/nestjs/nest.git\"\n  },\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/nest\"\n  },\n  \"license\": \"MIT\",\n  \"author\": \"Kamil Mysliwiec\",\n  \"scripts\": {\n    \"build\": \"tsc -b -v packages\",\n    \"postbuild\": \"npm run move:node_modules\",\n    \"build:dev\": \"tsc -b -v packages --watch\",\n    \"prebuild:prod\": \"npm run clean\",\n    \"build:prod\": \"tsc -b -v packages\",\n    \"changelog\": \"lerna-changelog\",\n    \"clean\": \"tsc -b --clean packages\",\n    \"move:samples\": \"gulp move:samples\",\n    \"move:node_modules\": \"gulp move:node_modules\",\n    \"build:samples\": \"gulp install:samples && npm run build && npm run move:samples && gulp build:samples && gulp test:samples && gulp test:e2e:samples\",\n    \"codechecks:benchmarks\": \"codechecks ./tools/benchmarks/check-benchmarks.ts\",\n    \"coverage\": \"nyc report --reporter=text-lcov | coveralls -v\",\n    \"format\": \"prettier \\\"**/*.ts\\\" \\\"packages/**/*.json\\\" --ignore-path ./.prettierignore --write && git status\",\n    \"postinstall\": \"opencollective\",\n    \"test\": \"mocha packages/**/*.spec.ts\",\n    \"test:dev\": \"mocha -w --watch-files \\\"packages\\\" packages/**/*.spec.ts\",\n    \"pretest:cov\": \"npm run clean\",\n    \"test:cov\": \"nyc mocha packages/**/*.spec.ts --reporter spec\",\n    \"test:integration\": \"mocha --reporter-option maxDiffSize=0 \\\"integration/*/{,!(node_modules)/**/}/*.spec.ts\\\"\",\n    \"test:docker:up\": \"docker-compose -f integration/docker-compose.yml up -d\",\n    \"test:docker:down\": \"docker-compose -f integration/docker-compose.yml down\",\n    \"lint\": \"concurrently 'npm run lint:packages' 'npm run lint:integration' 'npm run lint:spec'\",\n    \"lint:fix\": \"concurrently 'npm run lint:packages -- --fix' 'npm run lint:integration -- --fix' 'npm run lint:spec -- --fix'\",\n    \"lint:integration\": \"node --max-old-space-size=4096 ./node_modules/.bin/eslint 'integration/**/*.ts'\",\n    \"lint:packages\": \"node --max-old-space-size=4096 ./node_modules/.bin/eslint 'packages/**/**.ts' --ignore-pattern 'packages/**/*.spec.ts'\",\n    \"lint:spec\": \"node --max-old-space-size=4096 ./node_modules/.bin/eslint 'packages/**/**.spec.ts'\",\n    \"lint:ci\": \"concurrently 'npm run lint:packages' 'npm run lint:spec'\",\n    \"prerelease\": \"gulp copy-misc\",\n    \"publish\": \"npm run prerelease && npm run build:prod && ./node_modules/.bin/lerna publish --force-publish --access public --exact -m \\\"chore(@nestjs) publish %s release\\\"\",\n    \"prepublishOnly\": \"npm run changelog | pbcopy\",\n    \"publish:beta\": \"npm run prerelease && npm run build:prod && ./node_modules/.bin/lerna publish --npm-tag=beta --access public -m \\\"chore(@nestjs) publish %s release\\\"\",\n    \"publish:next\": \"npm run prerelease && npm run build:prod && ./node_modules/.bin/lerna publish --npm-tag=next --access public --skip-git -m \\\"chore(@nestjs) publish %s release\\\"\",\n    \"publish:rc\": \"npm run prerelease && npm run build:prod && ./node_modules/.bin/lerna publish --npm-tag=rc --access public -m \\\"chore(@nestjs) publish %s release\\\"\",\n    \"publish:test\": \"npm run prerelease && npm run build:prod && ./node_modules/.bin/lerna publish --force-publish --access public --npm-tag=test --skip-git -m \\\"chore(@nestjs) publish %s release\\\"\",\n    \"prepare\": \"husky\"\n  },\n  \"lint-staged\": {\n    \"**/*.ts\": [\n      \"prettier --ignore-path ./.prettierignore --write\"\n    ],\n    \"packages/**/*.json\": [\n      \"prettier --ignore-path ./.prettierignore --write\"\n    ]\n  },\n  \"dependencies\": {\n    \"@nuxt/opencollective\": \"0.4.1\",\n    \"ansis\": \"3.8.0\",\n    \"class-transformer\": \"0.5.1\",\n    \"class-validator\": \"0.14.1\",\n    \"cors\": \"2.8.5\",\n    \"express\": \"5.0.1\",\n    \"fast-json-stringify\": \"6.0.0\",\n    \"fast-safe-stringify\": \"2.1.1\",\n    \"iterare\": \"1.2.1\",\n    \"object-hash\": \"3.0.0\",\n    \"path-to-regexp\": \"8.2.0\",\n    \"reflect-metadata\": \"0.2.2\",\n    \"rxjs\": \"7.8.1\",\n    \"socket.io\": \"4.8.1\",\n    \"tslib\": \"2.8.1\",\n    \"uid\": \"2.0.2\",\n    \"uuid\": \"11.0.5\"\n  },\n  \"devDependencies\": {\n    \"@apollo/server\": \"4.11.3\",\n    \"@codechecks/client\": \"0.1.12\",\n    \"@commitlint/cli\": \"19.6.1\",\n    \"@commitlint/config-angular\": \"19.7.0\",\n    \"@eslint/eslintrc\": \"3.2.0\",\n    \"@eslint/js\": \"9.17.0\",\n    \"@fastify/cors\": \"10.0.2\",\n    \"@fastify/formbody\": \"8.0.1\",\n    \"@fastify/middie\": \"9.0.2\",\n    \"@fastify/multipart\": \"9.0.1\",\n    \"@fastify/static\": \"8.0.3\",\n    \"@fastify/view\": \"10.0.1\",\n    \"@grpc/grpc-js\": \"1.12.5\",\n    \"@grpc/proto-loader\": \"0.7.13\",\n    \"@nestjs/apollo\": \"12.2.2\",\n    \"@nestjs/graphql\": \"12.2.2\",\n    \"@nestjs/mongoose\": \"10.1.0\",\n    \"@nestjs/typeorm\": \"10.0.2\",\n    \"@types/amqplib\": \"0.10.6\",\n    \"@types/bytes\": \"3.1.5\",\n    \"@types/chai\": \"4.3.20\",\n    \"@types/chai-as-promised\": \"7.1.8\",\n    \"@types/cors\": \"2.8.17\",\n    \"@types/eslint__js\": \"8.42.3\",\n    \"@types/express\": \"5.0.0\",\n    \"@types/gulp\": \"4.0.17\",\n    \"@types/http-errors\": \"2.0.4\",\n    \"@types/mocha\": \"10.0.10\",\n    \"@types/node\": \"22.10.5\",\n    \"@types/sinon\": \"17.0.3\",\n    \"@types/supertest\": \"6.0.2\",\n    \"@types/ws\": \"8.5.13\",\n    \"amqp-connection-manager\": \"4.1.14\",\n    \"amqplib\": \"0.10.5\",\n    \"artillery\": \"2.0.21\",\n    \"body-parser\": \"1.20.3\",\n    \"bytes\": \"3.1.2\",\n    \"cache-manager\": \"6.3.2\",\n    \"cache-manager-redis-store\": \"3.0.1\",\n    \"chai\": \"4.5.0\",\n    \"chai-as-promised\": \"7.1.2\",\n    \"clang-format\": \"1.8.0\",\n    \"concurrently\": \"9.1.2\",\n    \"conventional-changelog\": \"6.0.0\",\n    \"core-js\": \"3.40.0\",\n    \"coveralls\": \"3.1.1\",\n    \"delete-empty\": \"3.0.0\",\n    \"engine.io-client\": \"6.6.2\",\n    \"eslint\": \"9.17.0\",\n    \"eslint-config-prettier\": \"9.1.0\",\n    \"eslint-plugin-import\": \"2.31.0\",\n    \"eslint-plugin-prettier\": \"5.2.1\",\n    \"eventsource\": \"3.0.2\",\n    \"fancy-log\": \"2.0.0\",\n    \"fastify\": \"5.2.1\",\n    \"globals\": \"15.14.0\",\n    \"graphql\": \"16.9.0\",\n    \"graphql-subscriptions\": \"2.0.0\",\n    \"graphql-tools\": \"9.0.11\",\n    \"gulp\": \"5.0.0\",\n    \"gulp-clang-format\": \"1.0.27\",\n    \"gulp-clean\": \"0.4.0\",\n    \"gulp-sourcemaps\": \"3.0.0\",\n    \"gulp-typescript\": \"5.0.1\",\n    \"gulp-watch\": \"5.0.1\",\n    \"http-errors\": \"2.0.0\",\n    \"husky\": \"9.1.7\",\n    \"imports-loader\": \"5.0.0\",\n    \"ioredis\": \"5.4.2\",\n    \"json-loader\": \"0.5.7\",\n    \"kafkajs\": \"2.2.4\",\n    \"lerna\": \"2.11.0\",\n    \"lerna-changelog\": \"2.2.0\",\n    \"light-my-request\": \"6.5.1\",\n    \"lint-staged\": \"15.3.0\",\n    \"markdown-table\": \"2.0.0\",\n    \"mocha\": \"11.0.1\",\n    \"mongoose\": \"8.9.4\",\n    \"mqtt\": \"5.10.3\",\n    \"multer\": \"1.4.4\",\n    \"mysql2\": \"3.12.0\",\n    \"nats\": \"2.28.2\",\n    \"nodemon\": \"3.1.9\",\n    \"nyc\": \"14.1.1\",\n    \"prettier\": \"3.4.2\",\n    \"redis\": \"4.7.0\",\n    \"rxjs-compat\": \"6.6.7\",\n    \"sinon\": \"19.0.2\",\n    \"sinon-chai\": \"3.7.0\",\n    \"socket.io-client\": \"4.8.1\",\n    \"subscriptions-transport-ws\": \"0.11.0\",\n    \"supertest\": \"7.0.0\",\n    \"ts-morph\": \"24.0.0\",\n    \"ts-node\": \"10.9.2\",\n    \"typeorm\": \"0.3.20\",\n    \"typescript\": \"5.7.3\",\n    \"typescript-eslint\": \"8.19.1\",\n    \"wrk\": \"1.2.1\",\n    \"ws\": \"8.18.0\"\n  },\n  \"engines\": {\n    \"node\": \">= 20\"\n  },\n  \"collective\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/nest\",\n    \"donation\": {\n      \"text\": \"Become a partner:\"\n    }\n  },\n  \"changelog\": {\n    \"labels\": {\n      \"type: feature :tada:\": \"Features\",\n      \"type: bug :sob:\": \"Bug fixes\",\n      \"type: enhancement :wolf:\": \"Enhancements\",\n      \"type: docs :page_facing_up:\": \"Docs\",\n      \"type: code style\": \"Code style tweaks\",\n      \"dependencies\": \"Dependencies\"\n    }\n  },\n  \"nyc\": {\n    \"include\": [\n      \"packages/**/*.ts\"\n    ],\n    \"exclude\": [\n      \"**/*.js\",\n      \"**/*.d.ts\",\n      \"**/*.spec.ts\",\n      \"packages/**/adapters/*.ts\",\n      \"packages/**/nest-*.ts\",\n      \"packages/**/test/**/*.ts\",\n      \"packages/core/errors/**/*\",\n      \"packages/common/exceptions/*.ts\",\n      \"packages/common/utils/load-package.util.ts\",\n      \"packages/microservices/exceptions/\",\n      \"packages/microservices/microservices-module.ts\",\n      \"packages/core/middleware/middleware-module.ts\",\n      \"packages/core/discovery/discovery-service.ts\",\n      \"packages/core/injector/module-ref.ts\",\n      \"packages/core/injector/instance-links-host.ts\",\n      \"packages/core/helpers/context-id-factory.ts\",\n      \"packages/websockets/socket-module.ts\",\n      \"packages/common/cache/**/*\",\n      \"packages/common/serializer/**/*\",\n      \"packages/common/services/*.ts\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"text-summary\",\n      \"html\"\n    ],\n    \"sourceMap\": true,\n    \"instrument\": true\n  },\n  \"mocha\": {\n    \"require\": [\n      \"ts-node/register\",\n      \"tsconfig-paths/register\",\n      \"node_modules/reflect-metadata/Reflect.js\",\n      \"hooks/mocha-init-hook.ts\"\n    ],\n    \"exit\": true\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme_jp.md",
          "type": "blob",
          "size": 6.48,
          "content": "<p align=\"center\">\n  <a href=\"https://nestjs.com/\" target=\"blank\"><img src=\"https://nestjs.com/img/logo-small.svg\" width=\"120\" alt=\"Nest Logo\" /></a>\n</p>\n\n[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456\n[circleci-url]: https://circleci.com/gh/nestjs/nest\n\n<p align=\"center\">すばやくスケーラブルなサーバーサイドアプリケーションを構築するための革新的な<a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a>フレームワークです。</p>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/v/@nestjs/core.svg\" alt=\"NPM Version\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/l/@nestjs/core.svg\" alt=\"Package License\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/@nestjs/common.svg\" alt=\"NPM Downloads\" /></a>\n<a href=\"https://circleci.com/gh/nestjs/nest\" target=\"_blank\"><img src=\"https://img.shields.io/circleci/build/github/nestjs/nest/master\" alt=\"CircleCI\" /></a>\n<a href=\"https://coveralls.io/github/nestjs/nest?branch=master\" target=\"_blank\"><img src=\"https://coveralls.io/repos/github/nestjs/nest/badge.svg?branch=master#9\" alt=\"Coverage\" /></a>\n<a href=\"https://discord.gg/G7Qnnhy\" target=\"_blank\"><img src=\"https://img.shields.io/badge/discord-online-brightgreen.svg\" alt=\"Discord\"/></a>\n<a href=\"https://opencollective.com/nest#backer\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers/badge.svg\" alt=\"Backers on Open Collective\" /></a>\n<a href=\"https://opencollective.com/nest#sponsor\" target=\"_blank\"><img src=\"https://opencollective.com/nest/sponsors/badge.svg\" alt=\"Sponsors on Open Collective\" /></a>\n  <a href=\"https://paypal.me/kamilmysliwiec\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Donate-PayPal-ff3f59.svg\"/></a>\n    <a href=\"https://opencollective.com/nest#sponsor\"  target=\"_blank\"><img src=\"https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg\" alt=\"Support us\"></a>\n  <a href=\"https://twitter.com/nestframework\" target=\"_blank\"><img src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow\"></a>\n</p>\n  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)\n  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->\n\n## 概要\n\nすばやくスケーラブルなサーバーサイドアプリケーションを構築するための革新的な<a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a>フレームワークです。最新のJavaScriptを使用し、<a href=\"https://www.typescriptlang.org\" target=\"_blank\">TypeScript</a>（JavaScriptを拡張したスーパーセット）で構築され 、OOP（オブジェクト指向プログラミング）、FP（関数型プログラミング）、およびFRP（関数型リアクティブプログラミング）の要素を取り入れています。\n\n<p>Nestは<a href=\"https://expressjs.com/\" target=\"_blank\">Express</a>(デフォルト)や<a href=\"https://github.com/fastify/fastify\" target=\"_blank\">Fastify</a>などのさまざまなライブラリとの互換性を提供することで、たくさんのサードパーティプラグインを簡単に使用することができます。\n</p>\n\n## 哲学\n\n<p>\n近年、Node.jsの発展によって、JavaScriptはフロントエンドとバックエンドの両方でWebの「共通言語」になりました。そしてフロントエンドでは、<a href=\"https://angular.io/\" target=\"_blank\">Angular</a>、<a href=\"https://github.com/facebook/react\" target=\"_blank\">React</a>、<a href=\"https://github.com/vuejs/vue\" target=\"_blank\">Vue</a>などの素晴らしいプロジェクトが生まれ、開発効率が飛躍的に向上しました。一方で、サーバーサイドでは、Node.jsエコシステム上に優れたライブラリ、ヘルパー、ツールがたくさんありますが、それらのどれもが主要な問題であるアーキテクチャを効果的に解決するものではありませんでした。\n</p>\n\n<p>Nestは、実用的なアーキテクチャをすぐに構築できることを目的としています。具体的には、テストフレンドリーで、スケーラブルで、疎結合で、運用にやさしいアプリケーションを構築できるようになっています。また、アーキテクチャはAngularにインスパイアされています。</p>\n\n## はじめに\n\n* To check out the [guide](https://docs.nestjs.com), visit [docs.nestjs.com](https://docs.nestjs.com). :books:\n* 要查看中文 [指南](readme_zh.md), 请访问 [docs.nestjs.cn](https://docs.nestjs.cn). :books:\n* [가이드](readme_kr.md) 문서는 [docs.nestjs.com](https://docs.nestjs.com)에서 확인하실 수 있습니다. :books:\n* [ガイド](readme_jp.md)は [docs.nestjs.com](https://docs.nestjs.com)でご確認ください。 :books:\n\n## 質問\n\n質問やサポートについては、公式の[Discordチャンネル](https://discord.gg/G7Qnnhy)を使用してください。また、このリポジトリのissueリストは、バグレポートと機能リクエスト **専用** です。\n\n## イシュー(Issues)\n\nissueを作成する前に、必ず[Issue Reporting Checklist](https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#-submitting-an-issue)をお読みください。ガイドラインに準拠していないissueは、クローズされる場合があります。\n\n## コンサルティング\n\n公式サポートを利用することで、Nestコアチームからのテクニカルサポート、移行戦略、ベストプラクティスの提供、アーキテクチャの相談、PRレビュー、メンタリングを受けることができます。詳しくは[こちら](https://enterprise.nestjs.com)をご覧ください。\n\n## サポート\n\nNestは、MITライセンスのオープンソースプロジェクトです。スポンサーと支援者による素晴らしいサポートによって、その発展を支えられています。参加したい場合は[こちら](https://docs.nestjs.com/support)をご覧ください。\n\n## 連絡先\n\n* 著者 - [Kamil Myśliwiec](https://twitter.com/kammysliwiec)\n* ウェブサイト - [https://nestjs.com](https://nestjs.com/)\n* X - [@nestframework](https://twitter.com/nestframework)\n\n## ライセンス\n\nNest は [MIT ライセンス](LICENSE) です。\n"
        },
        {
          "name": "readme_kr.md",
          "type": "blob",
          "size": 6.27,
          "content": "<p align=\"center\">\n  <a href=\"https://nestjs.com/\" target=\"blank\"><img src=\"https://nestjs.com/img/logo-small.svg\" width=\"120\" alt=\"Nest Logo\" /></a>\n</p>\n\n[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456\n[circleci-url]: https://circleci.com/gh/nestjs/nest\n\n  <p align=\"center\">효율적이고 확장 가능한 서버 사이드 애플리케이션을 위한 혁신적 <a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a> 프레임워크.</p>\n    <p align=\"center\">\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/v/@nestjs/core.svg\" alt=\"NPM Version\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/l/@nestjs/core.svg\" alt=\"Package License\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/@nestjs/common.svg\" alt=\"NPM Downloads\" /></a>\n<a href=\"https://circleci.com/gh/nestjs/nest\" target=\"_blank\"><img src=\"https://img.shields.io/circleci/build/github/nestjs/nest/master\" alt=\"CircleCI\" /></a>\n<a href=\"https://coveralls.io/github/nestjs/nest?branch=master\" target=\"_blank\"><img src=\"https://coveralls.io/repos/github/nestjs/nest/badge.svg?branch=master#9\" alt=\"Coverage\" /></a>\n<a href=\"https://discord.gg/G7Qnnhy\" target=\"_blank\"><img src=\"https://img.shields.io/badge/discord-online-brightgreen.svg\" alt=\"Discord\"/></a>\n<a href=\"https://opencollective.com/nest#backer\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers/badge.svg\" alt=\"Backers on Open Collective\" /></a>\n<a href=\"https://opencollective.com/nest#sponsor\" target=\"_blank\"><img src=\"https://opencollective.com/nest/sponsors/badge.svg\" alt=\"Sponsors on Open Collective\" /></a>\n  <a href=\"https://paypal.me/kamilmysliwiec\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Donate-PayPal-ff3f59.svg\"/></a>\n    <a href=\"https://opencollective.com/nest#sponsor\"  target=\"_blank\"><img src=\"https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg\" alt=\"Support us\"></a>\n  <a href=\"https://twitter.com/nestframework\" target=\"_blank\"><img src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow\"></a>\n</p>\n  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)\n  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->\n\n## 개요\n\nNest는 효율적이고 확장 가능한 <a href=\"https://nodejs.org\" target=\"_blank\">Node.js</a> 서버 사이드 애플리케이션을 빌드하기 위한 프레임워크입니다. Nest는 모던 Javascript를 사용하고 <a href=\"https://www.typescriptlang.org\" target=\"_blank\">TypeScript</a>로 빌드되었으며(순수 자바스크립트와 호환), OOP(객체 지향 프로그래밍), FP(함수형 프로그래밍), FRP(함수 반응형 프로그래밍)의 요소들이 결합되어 있습니다.\n\n<p>Nest는 내부적으로 <a href=\"https://expressjs.com/\" target=\"_blank\">Express</a>를 사용하지만, <a href=\"https://github.com/fastify/fastify\" target=\"_blank\">Fastify</a>와 같은 타 라이브러리들과의 호환성을 광범위하게 제공하며 많은 서드파티 플러그인들을 손쉽게 사용할 수 있게 해줍니다.</p>\n\n## 철학\n\n<p>최근 몇 년간 Javascript는 Node.js의 발전에 따라 웹의 프론트엔드와 백엔드에 있어서 \"공용어\"가 되었습니다. 그리고 프론트엔드에서는 <a href=\"https://angular.io/\" target=\"_blank\">Angular</a>와 <a href=\"https://github.com/facebook/react\" target=\"_blank\">React</a>, <a href=\"https://github.com/vuejs/vue\" target=\"_blank\">Vue</a>와 같이 멋진 프로젝트들이 등장하여 개발자의 생산성을 향상시켰으며, 빠르고 테스트와 확장이 가능한 프론트엔드 애플리케이션을 만들 수 있게 해주었습니다. 하지만 서버 사이드에서는 Node.js를 위한 우수한 라이브러리와 툴이 많은 가운데, 주요 문제를 효과적으로 해결하는 것은 없었습니다. 그 주요 문제란 바로 아키텍처(architecture)입니다.</p>\n<p>Nest는 테스트 친화적이면서 확장이 가능하고 결합이 느슨하며, 유지 관리가 용이한 애플리케이션을 손쉽게 만들 수 있는 애플리케이션 아키텍처 제공을 목표로 합니다. 이 아키텍처는 Angular에서 많은 영감을 받았습니다.</p>\n\n## 시작하기\n\n* To check out the [guide](https://docs.nestjs.com), visit [docs.nestjs.com](https://docs.nestjs.com). :books:\n* 要查看中文 [指南](readme_zh.md), 请访问 [docs.nestjs.cn](https://docs.nestjs.cn). :books:\n* [가이드](readme_kr.md) 문서는 [docs.nestjs.com](https://docs.nestjs.com)에서 확인하실 수 있습니다. :books:\n* [ガイド](readme_jp.md)は [docs.nestjs.com](https://docs.nestjs.com)でご確認ください。 :books:\n\n## 질문\n\n질문이 있거나 지원을 받고 싶으실 경우 공식 [디스코드 채널](https://discord.gg/G7Qnnhy)을 이용해주세요.\n이 저장소의 이슈 목록은 버그 리포트와 기능 요청 **전용**으로 사용되고 있습니다.\n\n## 이슈\n\n이슈를 올리기 전에 반드시 [이슈 보고 체크리스트](https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#-submitting-an-issue)를 확인해주세요. 가이드라인에 맞지 않는 이슈는 바로 클로즈될 수 있습니다.\n\n## 자문\n\n공식 지원을 통해 Nest core 팀의 전문적인 도움을 받을 수 있습니다. 우리는 전담 기술 지원, 마이그레이션 전략, 모범 사례 및 설계에 대한 조언, PR 리뷰, 팀 보강에 대한 도움을 제공합니다. 더 자세한 내용은 [공식 지원 페이지](https://enterprise.nestjs.com)에서 확인해주세요.\n\n## 서포트\n\nNest는 MIT License 오픈 소스 프로젝트이며, 감사하게도 후원자들과 굉장한 기여자들의 서포트를 통해서 더욱 성장할 수 있습니다. 참여하고 싶으시다면 [서포트 문서](https://docs.nestjs.com/support)를 확인해주세요.\n\n## 연락처\n\n* Author - [Kamil Myśliwiec](https://twitter.com/kammysliwiec)\n* Website - [https://nestjs.com](https://nestjs.com/)\n* Twitter - [@nestframework](https://twitter.com/nestframework)\n\n## 라이센스\n\nNest is [MIT licensed](LICENSE).\n"
        },
        {
          "name": "readme_zh.md",
          "type": "blob",
          "size": 4.87,
          "content": "<p align=\"center\">\n  <a href=\"https://nestjs.com/\" target=\"blank\"><img src=\"https://nestjs.com/img/logo-small.svg\" width=\"120\" alt=\"Nest Logo\" /></a>\n</p>\n\n[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456\n[circleci-url]: https://circleci.com/gh/nestjs/nest\n\n  <p align=\"center\">用于构建高效且可扩展的服务器端应用程序的渐进式 <a href=\"https://nodejs.cn\" target=\"blank\">Node.js</a> 框架，深受 <a href=\"https://angular.cn\" target=\"_blank\">Angular</a> 的启发。</p>\n    <p align=\"center\">\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/v/@nestjs/core.svg\" alt=\"NPM Version\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/l/@nestjs/core.svg\" alt=\"Package License\" /></a>\n<a href=\"https://www.npmjs.com/~nestjscore\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/@nestjs/common.svg\" alt=\"NPM Downloads\" /></a>\n<a href=\"https://circleci.com/gh/nestjs/nest\" target=\"_blank\"><img src=\"https://img.shields.io/circleci/build/github/nestjs/nest/master\" alt=\"CircleCI\" /></a>\n<a href=\"https://discord.gg/G7Qnnhy\" target=\"_blank\"><img src=\"https://img.shields.io/badge/discord-online-brightgreen.svg\" alt=\"Discord\"/></a>\n<a href=\"https://opencollective.com/nest#backer\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers/badge.svg\" alt=\"Backers on Open Collective\" /></a>\n<a href=\"https://opencollective.com/nest#sponsor\" target=\"_blank\"><img src=\"https://opencollective.com/nest/sponsors/badge.svg\" alt=\"Sponsors on Open Collective\" /></a>\n  <a href=\"https://paypal.me/kamilmysliwiec\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Donate-PayPal-ff3f59.svg\"/></a>\n    <a href=\"https://opencollective.com/nest#sponsor\"  target=\"_blank\"><img src=\"https://img.shields.io/badge/Support%20us-Open%20Collective-41B883.svg\" alt=\"Support us\"></a>\n  <a href=\"https://twitter.com/nestframework\" target=\"_blank\"><img src=\"https://img.shields.io/twitter/follow/nestframework.svg?style=social&label=Follow\"></a>\n</p>\n  <!--[![Backers on Open Collective](https://opencollective.com/nest/backers/badge.svg)](https://opencollective.com/nest#backer)\n  [![Sponsors on Open Collective](https://opencollective.com/nest/sponsors/badge.svg)](https://opencollective.com/nest#sponsor)-->\n\n\n### [English](Readme.md)\n\n## 介绍\n\n<p>Nest是构建高效，可扩展的 <a href=\"https://nodejs.cn\" target=\"blank\">Node.js</a> Web 应用程序的框架。 它使用现代的 JavaScript 或 <a href=\"https://www.tslang.cn\" target=\"_blank\">TypeScript</a>（保留与纯 JavaScript 的兼容性），并结合 OOP（面向对象编程），FP（函数式编程）和FRP（函数响应式编程）的元素。</p>\n<p>在底层，Nest 使用了 <a href=\"https://www.expressjs.com.cn\" target=\"_blank\">Express</a>，但也提供了与其他各种库的兼容，例如<a href=\"https://github.com/fastify/fastify\" target=\"blank\">Fastify</a>，可以方便地使用各种可用的第三方插件。</p>\n\n## 设计哲学\n\n<p>近几年，由于 Node.js，JavaScript 已经成为 Web 前端和后端应用程序的「通用语言」，从而产生了像<a href=\"https://angular.cn\" target=\"_blank\">Angular</a>、<a href=\"https://github.com/facebook/react\">React</a>、<a href=\"https://github.com/vuejs/vue\" target=\"_blank\">Vue</a>等令人耳目一新的项目，这些项目提高了开发人员的生产力，使得可以快速构建可测试的且可扩展的前端应用程序。 然而，在服务器端，虽然有很多优秀的库、helper 和 Node 工具，但是它们都没有有效地解决主要问题 - 架构。</p>\n\n<p>Nest 旨在提供一个开箱即用的应用程序体系结构，允许轻松创建高度可测试，可扩展，松散耦合且易于维护的应用程序。</p>\n\n## 开始\n\n* 要查看 [指南](https://docs.nestjs.cn), 请访问 [docs.nestjs.cn](https://docs.nestjs.cn). :books:\n* 要查看 [English指南](https://docs.nestjs.com), 请访问 [docs.nestjs.com](https://docs.nestjs.com). :books:\n\n### 国内开发者交流群\n\nQQ群：277386223\nQQ群：336289049\nQQ群：489719517\n\n> 注意：这个交流群不是 NestJS 官方支持和维护的，只是为了方便国内开发者交流而建立的。\n> （Note: This channel is not officially supported and maintained by the NestJS org members.）\n\n## 赞助商\n\nNest是一个MIT许可的开源项目。它的发展得益于赞助商和支持者的支持。如果你想加入他们，请[查看更多](https://opencollective.com/nest)。谢谢！ :heart_eyes:\n\n## 支持者\n\n<a href=\"https://opencollective.com/nest\"><img src=\"https://opencollective.com/nest/backers.svg?width=890\"></a>\n\n## 相关人员\n\n* 作者 - [Kamil Myśliwiec](https://kamilmysliwiec.com)\n* 网站 - [https://nestjs.com](https://nestjs.com/)\n* Twitter - [@nestframework](https://twitter.com/nestframework)\n\n## License\n\n  Nest is [MIT licensed](LICENSE).\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.19,
          "content": "{\n  \"extends\": [\"config:base\", \":dependencyDashboard\"],\n  \"labels\": [\"dependencies\"],\n  \"packageRules\": [\n    {\n      \"matchDepTypes\": [\"devDependencies\"],\n      \"automerge\": true\n    }\n  ]\n}\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 1.65,
          "content": "{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"noImplicitAny\": false,\n    \"noUnusedLocals\": false,\n    \"removeComments\": true,\n    \"strictNullChecks\": true,\n    \"strictPropertyInitialization\": false,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noLib\": false,\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"useUnknownInCatchVariables\": false,\n    \"target\": \"ES2021\",\n    \"sourceMap\": true,\n    \"allowJs\": false,\n    \"outDir\": \"dist\",\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@nestjs/common\": [\"./packages/common\"],\n      \"@nestjs/common/*\": [\"./packages/common/*\"],\n      \"@nestjs/core\": [\"./packages/core\"],\n      \"@nestjs/core/*\": [\"./packages/core/*\"],\n      \"@nestjs/microservices\": [\"./packages/microservices\"],\n      \"@nestjs/microservices/*\": [\"./packages/microservices/*\"],\n      \"@nestjs/websockets\": [\"./packages/websockets\"],\n      \"@nestjs/websockets/*\": [\"./packages/websockets/*\"],\n      \"@nestjs/testing\": [\"./packages/testing\"],\n      \"@nestjs/testing/*\": [\"./packages/testing/*\"],\n      \"@nestjs/platform-express\": [\"./packages/platform-express\"],\n      \"@nestjs/platform-express/*\": [\"./packages/platform-express/*\"],\n      \"@nestjs/platform-ws\": [\"./packages/platform-ws\"],\n      \"@nestjs/platform-ws/*\": [\"./packages/platform-ws/*\"],\n      \"@nestjs/platform-fastify\": [\"./packages/platform-fastify\"],\n      \"@nestjs/platform-fastify/*\": [\"./packages/platform-fastify/*\"],\n      \"@nestjs/platform-socket.io\": [\"./packages/platform-socket.io\"],\n      \"@nestjs/platform-socket.io/*\": [\"./packages/platform-socket.io/*\"],\n    }\n  },\n  \"include\": [\"packages/**/*\", \"integration/**/*\"],\n  \"exclude\": [\"node_modules\", \"**/*.spec.ts\"]\n}\n"
        },
        {
          "name": "tsconfig.spec.json",
          "type": "blob",
          "size": 0.16,
          "content": "{\n  \"extends\": \"./tsconfig.json\",\n  \"include\": [\"integration/**/*\", \"integration/**/*.spec.ts\", \"packages/**/*.spec.ts\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}"
        }
      ]
    },
    {
      "nameWithOwner": "base-org/node",
      "stars": 68532,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.04,
          "content": "geth-data/\nreth-data/\nnethermind-data/\n"
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.05,
          "content": "CLIENT=${CLIENT:-geth}\nHOST_DATA_DIR=./${CLIENT}-data"
        },
        {
          "name": ".env.mainnet",
          "type": "blob",
          "size": 4.49,
          "content": "RETH_CHAIN=base\nRETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\nOP_GETH_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\nOP_SEQUENCER_HTTP=https://mainnet-sequencer.base.org\n\n# [optional] used to enable geth stats:\n# OP_GETH_ETH_STATS=nodename:secret@host:port\n# OP_NETHERMIND_ETHSTATS_ENABLED=true\n# OP_NETHERMIND_ETHSTATS_NODE_NAME=NethermindNode\n# OP_NETHERMIND_ETHSTATS_ENDPOINT=ethstats_endpoint\n\n# [required] replace with your preferred L1 (Ethereum, not Base) node RPC URL:\nOP_NODE_L1_ETH_RPC=https://1rpc.io/eth\n\n# [required] replace with your preferred L1 CL beacon endpoint:\nOP_NODE_L1_BEACON=https://your.mainnet.beacon.node/endpoint-here\n\n# auth secret used by op-geth engine API:\nOP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a\n\nOP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt\nOP_NODE_L2_ENGINE_RPC=ws://execution:8551\nOP_NODE_LOG_LEVEL=info\nOP_NODE_METRICS_ADDR=0.0.0.0\nOP_NODE_METRICS_ENABLED=true\nOP_NODE_METRICS_PORT=7300\nOP_NODE_NETWORK=base-mainnet\nOP_NODE_P2P_AGENT=base\nOP_NODE_P2P_BOOTNODES=enr:-J24QNz9lbrKbN4iSmmjtnr7SjUMk4zB7f1krHZcTZx-JRKZd0kA2gjufUROD6T3sOWDVDnFJRvqBBo62zuF-hYCohOGAYiOoEyEgmlkgnY0gmlwhAPniryHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQKNVFlCxh_B-716tTs-h1vMzZkSs1FTu_OYTNjgufplG4N0Y3CCJAaDdWRwgiQG,enr:-J24QH-f1wt99sfpHy4c0QJM-NfmsIfmlLAMMcgZCUEgKG_BBYFc6FwYgaMJMQN5dsRBJApIok0jFn-9CS842lGpLmqGAYiOoDRAgmlkgnY0gmlwhLhIgb2Hb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJ9FTIv8B9myn1MWaC_2lJ-sMoeCDkusCsk4BYHjjCq04N0Y3CCJAaDdWRwgiQG,enr:-J24QDXyyxvQYsd0yfsN0cRr1lZ1N11zGTplMNlW4xNEc7LkPXh0NAJ9iSOVdRO95GPYAIc6xmyoCCG6_0JxdL3a0zaGAYiOoAjFgmlkgnY0gmlwhAPckbGHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJwoS7tzwxqXSyFL7g0JM-KWVbgvjfB8JA__T7yY_cYboN0Y3CCJAaDdWRwgiQG,enr:-J24QHmGyBwUZXIcsGYMaUqGGSl4CFdx9Tozu-vQCn5bHIQbR7On7dZbU61vYvfrJr30t0iahSqhc64J46MnUO2JvQaGAYiOoCKKgmlkgnY0gmlwhAPnCzSHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQINc4fSijfbNIiGhcgvwjsjxVFJHUstK9L1T8OTKUjgloN0Y3CCJAaDdWRwgiQG,enr:-J24QG3ypT4xSu0gjb5PABCmVxZqBjVw9ca7pvsI8jl4KATYAnxBmfkaIuEqy9sKvDHKuNCsy57WwK9wTt2aQgcaDDyGAYiOoGAXgmlkgnY0gmlwhDbGmZaHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQIeAK_--tcLEiu7HvoUlbV52MspE0uCocsx1f_rYvRenIN0Y3CCJAaDdWRwgiQG\nOP_NODE_P2P_LISTEN_IP=0.0.0.0\nOP_NODE_P2P_LISTEN_TCP_PORT=9222\nOP_NODE_P2P_LISTEN_UDP_PORT=9222\nOP_NODE_RPC_ADDR=0.0.0.0\nOP_NODE_RPC_PORT=8545\nOP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log\nOP_NODE_VERIFIER_L1_CONFS=4\nOP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true\n\n# OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node\n# is fully trusted. It also allows op-node to work with clients such as Erigon that do not\n# support storage proofs:\n# OP_NODE_L1_TRUST_RPC=true\n\n# SNAP SYNC\n# NOTE: This feature is experimental and may lead to syncing issues, delays or difficulties as a result of inability to find peers. We recommend running a full or archive node for production purposes.\n# To enable snap sync, uncomment and set the env vars below:\n# OP_NODE_SYNCMODE=execution-layer\n# OP_GETH_BOOTNODES=enode://87a32fd13bd596b2ffca97020e31aef4ddcc1bbd4b95bb633d16c1329f654f34049ed240a36b449fda5e5225d70fe40bc667f53c304b71f8e68fc9d448690b51@3.231.138.188:30301,enode://ca21ea8f176adb2e229ce2d700830c844af0ea941a1d8152a9513b966fe525e809c3a6c73a2c18a12b74ed6ec4380edf91662778fe0b79f6a591236e49e176f9@184.72.129.189:30301,enode://acf4507a211ba7c1e52cdf4eef62cdc3c32e7c9c47998954f7ba024026f9a6b2150cd3f0b734d9c78e507ab70d59ba61dfe5c45e1078c7ad0775fb251d7735a2@3.220.145.177:30301,enode://8a5a5006159bf079d06a04e5eceab2a1ce6e0f721875b2a9c96905336219dbe14203d38f70f3754686a6324f786c2f9852d8c0dd3adac2d080f4db35efc678c5@3.231.11.52:30301,enode://cdadbe835308ad3557f9a1de8db411da1a260a98f8421d62da90e71da66e55e98aaa8e90aa7ce01b408a54e4bd2253d701218081ded3dbe5efbbc7b41d7cef79@54.198.153.150:30301\n# OP_NETHERMIND_BOOTNODES=enode://87a32fd13bd596b2ffca97020e31aef4ddcc1bbd4b95bb633d16c1329f654f34049ed240a36b449fda5e5225d70fe40bc667f53c304b71f8e68fc9d448690b51@3.231.138.188:30301,enode://ca21ea8f176adb2e229ce2d700830c844af0ea941a1d8152a9513b966fe525e809c3a6c73a2c18a12b74ed6ec4380edf91662778fe0b79f6a591236e49e176f9@184.72.129.189:30301,enode://acf4507a211ba7c1e52cdf4eef62cdc3c32e7c9c47998954f7ba024026f9a6b2150cd3f0b734d9c78e507ab70d59ba61dfe5c45e1078c7ad0775fb251d7735a2@3.220.145.177:30301,enode://8a5a5006159bf079d06a04e5eceab2a1ce6e0f721875b2a9c96905336219dbe14203d38f70f3754686a6324f786c2f9852d8c0dd3adac2d080f4db35efc678c5@3.231.11.52:30301,enode://cdadbe835308ad3557f9a1de8db411da1a260a98f8421d62da90e71da66e55e98aaa8e90aa7ce01b408a54e4bd2253d701218081ded3dbe5efbbc7b41d7cef79@54.198.153.150:30301\n# OP_GETH_SYNCMODE=snap\n"
        },
        {
          "name": ".env.sepolia",
          "type": "blob",
          "size": 2.94,
          "content": "RETH_CHAIN=base-sepolia\nRETH_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\nOP_GETH_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\nOP_SEQUENCER_HTTP=https://sepolia-sequencer.base.org\n\n# [optional] used to enable geth stats:\n# OP_GETH_ETH_STATS=nodename:secret@host:port\n# OP_NETHERMIND_ETHSTATS_ENABLED=true\n# OP_NETHERMIND_ETHSTATS_NODE_NAME=NethermindNode\n# OP_NETHERMIND_ETHSTATS_ENDPOINT=ethstats_endpoint\n\n# [required] replace with your preferred L1 (Ethereum, not Base) node RPC URL:\nOP_NODE_L1_ETH_RPC=https://rpc.sepolia.org\n\n# [required] replace with your preferred L1 CL beacon endpoint:\nOP_NODE_L1_BEACON=https://your.sepolia.beacon.node/endpoint-here\n\n# auth secret used by op-geth engine API:\nOP_NODE_L2_ENGINE_AUTH_RAW=688f5d737bad920bdfb2fc2f488d6b6209eebda1dae949a8de91398d932c517a\n\nOP_NODE_L2_ENGINE_AUTH=/tmp/engine-auth-jwt\nOP_NODE_L2_ENGINE_RPC=ws://execution:8551\nOP_NODE_LOG_LEVEL=info\nOP_NODE_METRICS_ADDR=0.0.0.0\nOP_NODE_METRICS_ENABLED=true\nOP_NODE_METRICS_PORT=7300\nOP_NODE_NETWORK=base-sepolia\nOP_NODE_P2P_AGENT=base\nOP_NODE_P2P_BOOTNODES=enr:-J64QBwRIWAco7lv6jImSOjPU_W266lHXzpAS5YOh7WmgTyBZkgLgOwo_mxKJq3wz2XRbsoBItbv1dCyjIoNq67mFguGAYrTxM42gmlkgnY0gmlwhBLSsHKHb3BzdGFja4S0lAUAiXNlY3AyNTZrMaEDmoWSi8hcsRpQf2eJsNUx-sqv6fH4btmo2HsAzZFAKnKDdGNwgiQGg3VkcIIkBg,enr:-J64QFa3qMsONLGphfjEkeYyF6Jkil_jCuJmm7_a42ckZeUQGLVzrzstZNb1dgBp1GGx9bzImq5VxJLP-BaptZThGiWGAYrTytOvgmlkgnY0gmlwhGsV-zeHb3BzdGFja4S0lAUAiXNlY3AyNTZrMaEDahfSECTIS_cXyZ8IyNf4leANlZnrsMEWTkEYxf4GMCmDdGNwgiQGg3VkcIIkBg\nOP_NODE_P2P_LISTEN_IP=0.0.0.0\nOP_NODE_P2P_LISTEN_TCP_PORT=9222\nOP_NODE_P2P_LISTEN_UDP_PORT=9222\nOP_NODE_RPC_ADDR=0.0.0.0\nOP_NODE_RPC_PORT=8545\nOP_NODE_SNAPSHOT_LOG=/tmp/op-node-snapshot-log\nOP_NODE_VERIFIER_L1_CONFS=4\nOP_NODE_ROLLUP_LOAD_PROTOCOL_VERSIONS=true\n\n# OP_NODE_L1_TRUST_RPC allows for faster syncing, but should be used *only* if your L1 RPC node\n# is fully trusted. It also allows op-node to work with clients such as Erigon that do not\n# support storage proofs:\n# OP_NODE_L1_TRUST_RPC=true\n\n# SNAP SYNC\n# NOTE: This feature is experimental and may lead to syncing issues, delays or difficulties as a result of inability to find peers. We recommend running a full or archive node for production purposes.\n# To enable snap sync, set env vars below:\n# OP_NODE_SYNCMODE=execution-layer\n# OP_GETH_BOOTNODES=enode://548f715f3fc388a7c917ba644a2f16270f1ede48a5d88a4d14ea287cc916068363f3092e39936f1a3e7885198bef0e5af951f1d7b1041ce8ba4010917777e71f@18.210.176.114:30301,enode://6f10052847a966a725c9f4adf6716f9141155b99a0fb487fea3f51498f4c2a2cb8d534e680ee678f9447db85b93ff7c74562762c3714783a7233ac448603b25f@107.21.251.55:30301\n# OP_NETHERMIND_BOOTNODES=enode://548f715f3fc388a7c917ba644a2f16270f1ede48a5d88a4d14ea287cc916068363f3092e39936f1a3e7885198bef0e5af951f1d7b1041ce8ba4010917777e71f@18.210.176.114:30301,enode://6f10052847a966a725c9f4adf6716f9141155b99a0fb487fea3f51498f4c2a2cb8d534e680ee678f9447db85b93ff7c74562762c3714783a7233ac448603b25f@107.21.251.55:30301\n# OP_GETH_SYNCMODE=snap\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.06,
          "content": "/.idea/\n/geth-data/\n/reth-data/\n/nethermind-data/\n.DS_Store\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2,
          "content": "# Contributing to Base Node\n\n## Code of Conduct\n\nAll interactions with this project follow our [Code of Conduct][code-of-conduct].\nBy participating, you are expected to honor this code. Violators can be banned\nfrom further participation in this project, or potentially all Base and/or\nCoinbase\nprojects.\n\n[code-of-conduct]: https://github.com/coinbase/code-of-conduct\n\n## Bug Reports\n\n* Ensure your issue [has not already been reported][1]. It may already be fixed!\n* Include the steps you carried out to produce the problem.\n* Include the behavior you observed along with the behavior you expected, and\n  why you expected it.\n* Include any relevant stack traces or debugging output.\n\n## Feature Requests\n\nWe welcome feedback with or without pull requests. If you have an idea for how\nto improve the project, great! All we ask is that you take the time to write a\nclear and concise explanation of what need you are trying to solve. If you have\nthoughts on _how_ it can be solved, include those too!\n\nThe best way to see a feature added, however, is to submit a pull request.\n\n## Pull Requests\n\n* Before creating your pull request, it's usually worth asking if the code\n  you're planning on writing will actually be considered for merging. You can\n  do this by [opening an issue][1] and asking. It may also help give the\n  maintainers context for when the time comes to review your code.\n\n* Ensure your [commit messages are well-written][2]. This can double as your\n  pull request message, so it pays to take the time to write a clear message.\n\n* Add tests for your feature. You should be able to look at other tests for\n  examples. If you're unsure, don't hesitate to [open an issue][1] and ask!\n\n* Submit your pull request!\n\n## Support Requests\n\nFor security reasons, any communication referencing support tickets for Coinbase\nproducts will be ignored. The request will have its content redacted and will\nbe locked to prevent further discussion.\n\nAll support requests must be made via [our support team][3].\n\n[1]: https://github.com/base-org/node/issues\n[2]: https://medium.com/brigade-engineering/the-secrets-to-great-commit-messages-106fc0a92a25\n[3]: https://support.coinbase.com/customer/en/portal/articles/2288496-how-can-i-contact-coinbase-support-\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.06,
          "content": "MIT License\n\nCopyright (c) 2023-2024 base.org contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.63,
          "content": "![Base](logo.webp)\n\n# Base node\n\nBase is a secure, low-cost, developer-friendly Ethereum L2 built to bring the next billion users onchain. It's built on Optimism’s open-source [OP Stack](https://stack.optimism.io/).\n\nThis repository contains the relevant Docker builds to run your own node on the Base network.\n\n<!-- Badge row 1 - status -->\n\n[![GitHub contributors](https://img.shields.io/github/contributors/base-org/node)](https://github.com/base-org/node/graphs/contributors)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/w/base-org/node)](https://github.com/base-org/node/graphs/commit-activity)\n[![GitHub Stars](https://img.shields.io/github/stars/base-org/node.svg)](https://github.com/base-org/node/stargazers)\n![GitHub repo size](https://img.shields.io/github/repo-size/base-org/node)\n[![GitHub](https://img.shields.io/github/license/base-org/node?color=blue)](https://github.com/base-org/node/blob/main/LICENSE)\n\n<!-- Badge row 2 - links and profiles -->\n\n[![Website base.org](https://img.shields.io/website-up-down-green-red/https/base.org.svg)](https://base.org)\n[![Blog](https://img.shields.io/badge/blog-up-green)](https://base.mirror.xyz/)\n[![Docs](https://img.shields.io/badge/docs-up-green)](https://docs.base.org/)\n[![Discord](https://img.shields.io/discord/1067165013397213286?label=discord)](https://base.org/discord)\n[![Twitter Base](https://img.shields.io/twitter/follow/Base?style=social)](https://x.com/Base)\n\n<!-- Badge row 3 - detailed status -->\n\n[![GitHub pull requests by-label](https://img.shields.io/github/issues-pr-raw/base-org/node)](https://github.com/base-org/node/pulls)\n[![GitHub Issues](https://img.shields.io/github/issues-raw/base-org/node.svg)](https://github.com/base-org/node/issues)\n\n### Hardware requirements\n\nWe recommend you have this hardware configuration to run a node:\n\n- a modern multi-core CPU with good single-core performance\n- at least 16 GB RAM (32 GB recommended)\n- a locally attached NVMe SSD drive\n- adequate storage capacity to accommodate both the snapshot restoration process (if restoring from snapshot) and chain data, ensuring a minimum of (2 \\* current_chain_size) + snapshot_size + 20%\\_buffer\n\n**Note:** If utilizing Amazon Elastic Block Store (EBS), ensure timing buffered disk reads are fast enough in order to avoid latency issues alongside the rate of new blocks added to Base during the initial synchronization process; `io2 block express` is recommended.\n\n### Troubleshooting\n\nIf you encounter problems with your node, please open a [GitHub issue](https://github.com/base-org/node/issues/new/choose) or reach out on our [Discord](https://discord.gg/buildonbase):\n\n- Once you've joined, in the Discord app go to `server menu` > `Linked Roles` > `connect GitHub` and connect your GitHub account so you can gain access to our developer channels\n- Report your issue in `#🛟|developer-support` or `🛠｜node-operators`\n\n### Supported networks\n\n| Base Network      | Status |\n|-------------------| ------ |\n| Testnet (Sepolia) | ✅     |\n| Mainnet           | ✅     |\n\n### Usage\n\n1. Ensure you have an Ethereum L1 full node RPC available (not Base), and set `OP_NODE_L1_ETH_RPC` (in the `.env.*` file if using docker-compose). If running your own L1 node, it needs to be synced before Base will be able to fully sync.\n2. Uncomment the line relevant to your network (`.env.sepolia`, or `.env.mainnet`) under the 2 `env_file` keys in `docker-compose.yml`.\n3. Run:\n\n```\ndocker compose up --build\n```\n\n> [!NOTE]\n> To run the node using a supported client, you can use the following command:\n> `CLIENT=supported_client docker compose up --build`\n> \n> Supported clients:\n> - geth\n> - reth\n> - nethermind\n\n4. You should now be able to `curl` your Base node:\n\n```\ncurl -d '{\"id\":0,\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"latest\",false]}' \\\n  -H \"Content-Type: application/json\" http://localhost:8545\n```\n\nNote: Some L1 nodes (e.g. Erigon) do not support fetching storage proofs. You can work around this by specifying `--l1.trustrpc` when starting op-node (add it in `op-node-entrypoint` and rebuild the docker image with `docker compose build`.) Do not do this unless you fully trust the L1 node provider.\n\n#### Persisting Data\n\nBy default, the data directory is stored in `${PROJECT_ROOT}/geth-data`. You can override this by modifying the value of\n`GETH_HOST_DATA_DIR` variable in the [`.env`](./.env) file.\n\nTo load a [snapshot](#snapshots) you can extract the snapshot into the `$GETH_HOST_DATA_DIR` folder.\n\n#### Running in single container with `supervisord`\n\nIf you'd like to run the node in a single container instead of `docker-compose`, you can use the `supervisord` entrypoint.\nThis is useful for running the node in a Kubernetes cluster, for example.\n\nNote that you'll need to override some of the default configuration that assumes a multi-container environment (`OP_NODE_L2_ENGINE_RPC`) and any port conflicts (`OP_NODE_RPC_PORT`).\nExample:\n\n```\ndocker run --env-file .env.sepolia -e OP_NODE_L2_ENGINE_RPC=ws://localhost:8551 -e OP_NODE_RPC_PORT=7545 ghcr.io/base-org/node:latest\n```\n\n### Snapshots\n\nYou can fetch the latest snapshots via the URLs provided in the [Base docs](https://docs.base.org/guides/run-a-base-node/#snapshots).\n\n### Syncing\n\nSync speed depends on your L1 node, as the majority of the chain is derived from data submitted to the L1. You can check your syncing status using the `optimism_syncStatus` RPC on the `op-node` container. Example:\n\n```\ncommand -v jq  &> /dev/null || { echo \"jq is not installed\" 1>&2 ; }\necho Latest synced block behind by: \\\n$((($( date +%s )-\\\n$( curl -s -d '{\"id\":0,\"jsonrpc\":\"2.0\",\"method\":\"optimism_syncStatus\"}' -H \"Content-Type: application/json\" http://localhost:7545 |\n   jq -r .result.unsafe_l2.timestamp))/60)) minutes\n```\n\n## Disclaimer\n\nWe’re excited for you to build on Base 🔵 — but we want to make sure that you understand the nature of the node software and smart contracts offered here.\n\nTHE NODE SOFTWARE AND SMART CONTRACTS CONTAINED HEREIN ARE FURNISHED AS IS, WHERE IS, WITH ALL FAULTS AND WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NON- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE. IN PARTICULAR, THERE IS NO REPRESENTATION OR WARRANTY THAT THE NODE SOFTWARE AND SMART CONTRACTS WILL PROTECT YOUR ASSETS — OR THE ASSETS OF THE USERS OF YOUR APPLICATION — FROM THEFT, HACKING, CYBER ATTACK, OR OTHER FORM OF LOSS OR DEVALUATION.\n\nYou also understand that using the node software and smart contracts are subject to applicable law, including without limitation, any applicable anti-money laundering laws, anti-terrorism laws, export control laws, end user restrictions, privacy laws, or economic sanctions laws/regulations.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.5,
          "content": "# Security\n\n## Bug bounty program\n\nIn line with our strategy of being the safest way for users to access crypto:\n\n+ Coinbase will be extending our [best-in-industry][1] million-dollar [HackerOne bug bounty program][2]\nto cover the Base network, the Base bridge contracts, and Base infrastructure.\n\n+ Coinbase will be working in tandem with OP Labs to harden the security\nguarantees of Bedrock and accelerate the timeline for decentralized\nfault-proofs on the [OP Stack][3].\n\n+ Coinbase's bug bounty program will run alongside Optimism's existing [Immunefi Bedrock bounty program][4]\nto support the open source [Bedrock][5] OP Stack framework.\n\n## Reporting vulnerabilities\n\nAll potential vulnerability reports can be submitted via the [HackerOne][6]\nplatform.\n\nThe HackerOne platform allows us to have a centralized and single reporting\nsource for us to deliver optimized SLA's and results. All reports submitted to\nthe platform are triaged around the clock by our team of Coinbase engineers\nwith domain knowledge, assuring the best quality of review.\n\nFor more information on reporting vulnerabilities and our HackerOne bug bounty\nprogram, view our [security program policies][7].\n\n[1]: https://www.coinbase.com/blog/celebrating-10-years-of-our-bug-bounty-program\n[2]: https://hackerone.com/coinbase?type=team \n[3]: https://stack.optimism.io/\n[4]: https://immunefi.com/bounty/optimism/\n[5]: https://stack.optimism.io/docs/releases/bedrock/\n[6]: https://hackerone.com/coinbase\n[7]: https://hackerone.com/coinbase?view_policy=true\n\n\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.87,
          "content": "services:\n  execution:\n    build:\n      context: .\n      dockerfile: ${CLIENT}/Dockerfile\n    ports:\n      - \"8545:8545\"       # RPC\n      - \"8546:8546\"       # websocket\n      - \"7301:6060\"       # metrics\n      - \"30303:30303\"     # P2P TCP\n      - \"30303:30303/udp\" # P2P UDP\n    command: [ \"bash\", \"./execution-entrypoint\" ]\n    volumes:\n        - ${HOST_DATA_DIR}:/data\n    env_file:\n      # select your network here:\n#      - .env.sepolia\n#      - .env.mainnet\n  node:\n    build:\n      context: .\n      dockerfile: ${CLIENT}/Dockerfile\n    depends_on:\n      - execution\n    ports:\n      - \"7545:8545\"     # RPC\n      - \"9222:9222\"     # P2P TCP\n      - \"9222:9222/udp\" # P2P UDP\n      - \"7300:7300\"     # metrics\n      - \"6060:6060\"     # pprof\n    command: [ \"bash\", \"./op-node-entrypoint\" ]\n    env_file:\n      # select your network here:\n#      - .env.sepolia\n#      - .env.mainnet\n"
        },
        {
          "name": "geth",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.webp",
          "type": "blob",
          "size": 37.57,
          "content": null
        },
        {
          "name": "nethermind",
          "type": "tree",
          "content": null
        },
        {
          "name": "op-node-entrypoint",
          "type": "blob",
          "size": 1.24,
          "content": "#!/bin/bash\nset -eu\n\nget_public_ip() {\n  # Define a list of HTTP-based providers\n  local PROVIDERS=(\n    \"http://ifconfig.me\"\n    \"http://api.ipify.org\"\n    \"http://ipecho.net/plain\"\n    \"http://v4.ident.me\"\n  )\n  # Iterate through the providers until an IP is found or the list is exhausted\n  for provider in \"${PROVIDERS[@]}\"; do\n    local IP\n    IP=$(curl -s \"$provider\")\n    # Check if IP contains a valid format (simple regex for an IPv4 address)\n    if [[ $IP =~ ^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n      echo \"$IP\"\n      return 0\n    fi\n  done\n  return 1\n}\n\nif [[ -z \"$OP_NODE_NETWORK\" && -z \"$OP_NODE_ROLLUP_CONFIG\" ]]; then\n  echo \"expected OP_NODE_NETWORK to be set\" 1>&2\n  exit 1\nfi\n\n# wait until local execution client comes up (authed so will return 401 without token)\nuntil [ \"$(curl -s -w '%{http_code}' -o /dev/null \"${OP_NODE_L2_ENGINE_RPC/ws/http}\")\" -eq 401 ]; do\n  echo \"waiting for execution client to be ready\"\n  sleep 5\ndone\n\n# public-facing P2P node, advertise public IP address\nif PUBLIC_IP=$(get_public_ip); then\n  echo \"fetched public IP is: $PUBLIC_IP\"\nelse\n  echo \"Could not retrieve public IP.\"\n  exit 8\nfi\nexport OP_NODE_P2P_ADVERTISE_IP=$PUBLIC_IP\n\necho \"$OP_NODE_L2_ENGINE_AUTH_RAW\" > \"$OP_NODE_L2_ENGINE_AUTH\"\n\nexec ./op-node"
        },
        {
          "name": "reth",
          "type": "tree",
          "content": null
        },
        {
          "name": "supervisord.conf",
          "type": "blob",
          "size": 0.34,
          "content": "[supervisord]\nnodaemon=true\nlogfile=/dev/null\nlogfile_maxbytes=0\n\n[program:op-node]\ncommand=/app/op-node-entrypoint\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nstopwaitsecs=300\n\n[program:op-execution]\ncommand=/app/execution-entrypoint\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nstopwaitsecs=300\n"
        }
      ]
    },
    {
      "nameWithOwner": "pallets/flask",
      "stars": 68529,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.23,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\ncharset = utf-8\nmax_line_length = 88\n\n[*.{css,html,js,json,jsx,scss,ts,tsx,yaml,yml}]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09,
          "content": ".idea/\n.vscode/\n.venv*/\nvenv*/\n__pycache__/\ndist/\n.coverage*\nhtmlcov/\n.tox/\ndocs/_build/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.36,
          "content": "repos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.7.3\n    hooks:\n      - id: ruff\n      - id: ruff-format\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-merge-conflict\n      - id: debug-statements\n      - id: fix-byte-order-marker\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.2,
          "content": "version: 2\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: '3.12'\npython:\n  install:\n    - requirements: requirements/docs.txt\n    - method: pip\n      path: .\nsphinx:\n  builder: dirhtml\n  fail_on_warning: true\n"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 69.26,
          "content": "Version 3.2.0\n-------------\n\nUnreleased\n\n-   Remove previously deprecated code: ``__version__``. :pr:`5648`\n\n\nVersion 3.1.1\n-------------\n\nUnreleased\n\n-   Fix type hint for `cli_runner.invoke`. :issue:`5645`\n\n\nVersion 3.1.0\n-------------\n\nReleased 2024-11-13\n\n-   Drop support for Python 3.8. :pr:`5623`\n-   Update minimum dependency versions to latest feature releases.\n    Werkzeug >= 3.1, ItsDangerous >= 2.2, Blinker >= 1.9. :pr:`5624,5633`\n-   Provide a configuration option to control automatic option\n    responses. :pr:`5496`\n-   ``Flask.open_resource``/``open_instance_resource`` and\n    ``Blueprint.open_resource`` take an ``encoding`` parameter to use when\n    opening in text mode. It defaults to ``utf-8``. :issue:`5504`\n-   ``Request.max_content_length`` can be customized per-request instead of only\n    through the ``MAX_CONTENT_LENGTH`` config. Added\n    ``MAX_FORM_MEMORY_SIZE`` and ``MAX_FORM_PARTS`` config. Added documentation\n    about resource limits to the security page. :issue:`5625`\n-   Add support for the ``Partitioned`` cookie attribute (CHIPS), with the\n    ``SESSION_COOKIE_PARTITIONED`` config. :issue:`5472`\n-   ``-e path`` takes precedence over default ``.env`` and ``.flaskenv`` files.\n    ``load_dotenv`` loads default files in addition to a path unless\n    ``load_defaults=False`` is passed. :issue:`5628`\n-   Support key rotation with the ``SECRET_KEY_FALLBACKS`` config, a list of old\n    secret keys that can still be used for unsigning. Extensions will need to\n    add support. :issue:`5621`\n-   Fix how setting ``host_matching=True`` or ``subdomain_matching=False``\n    interacts with ``SERVER_NAME``. Setting ``SERVER_NAME`` no longer restricts\n    requests to only that domain. :issue:`5553`\n-   ``Request.trusted_hosts`` is checked during routing, and can be set through\n    the ``TRUSTED_HOSTS`` config. :issue:`5636`\n\n\nVersion 3.0.3\n-------------\n\nReleased 2024-04-07\n\n-   The default ``hashlib.sha1`` may not be available in FIPS builds. Don't\n    access it at import time so the developer has time to change the default.\n    :issue:`5448`\n-   Don't initialize the ``cli`` attribute in the sansio scaffold, but rather in\n    the ``Flask`` concrete class. :pr:`5270`\n\n\nVersion 3.0.2\n-------------\n\nReleased 2024-02-03\n\n-   Correct type for ``jinja_loader`` property. :issue:`5388`\n-   Fix error with ``--extra-files`` and ``--exclude-patterns`` CLI options.\n    :issue:`5391`\n\n\nVersion 3.0.1\n-------------\n\nReleased 2024-01-18\n\n-   Correct type for ``path`` argument to ``send_file``. :issue:`5336`\n-   Fix a typo in an error message for the ``flask run --key`` option. :pr:`5344`\n-   Session data is untagged without relying on the built-in ``json.loads``\n    ``object_hook``. This allows other JSON providers that don't implement that.\n    :issue:`5381`\n-   Address more type findings when using mypy strict mode. :pr:`5383`\n\n\nVersion 3.0.0\n-------------\n\nReleased 2023-09-30\n\n-   Remove previously deprecated code. :pr:`5223`\n-   Deprecate the ``__version__`` attribute. Use feature detection, or\n    ``importlib.metadata.version(\"flask\")``, instead. :issue:`5230`\n-   Restructure the code such that the Flask (app) and Blueprint\n    classes have Sans-IO bases. :pr:`5127`\n-   Allow self as an argument to url_for. :pr:`5264`\n-   Require Werkzeug >= 3.0.0.\n\n\nVersion 2.3.3\n-------------\n\nReleased 2023-08-21\n\n-   Python 3.12 compatibility.\n-   Require Werkzeug >= 2.3.7.\n-   Use ``flit_core`` instead of ``setuptools`` as build backend.\n-   Refactor how an app's root and instance paths are determined. :issue:`5160`\n\n\nVersion 2.3.2\n-------------\n\nReleased 2023-05-01\n\n-   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n-   Update Werkzeug requirement to >=2.3.3 to apply recent bug fixes.\n\n\nVersion 2.3.1\n-------------\n\nReleased 2023-04-25\n\n-   Restore deprecated ``from flask import Markup``. :issue:`5084`\n\n\nVersion 2.3.0\n-------------\n\nReleased 2023-04-25\n\n-   Drop support for Python 3.7. :pr:`5072`\n-   Update minimum requirements to the latest versions: Werkzeug>=2.3.0, Jinja2>3.1.2,\n    itsdangerous>=2.1.2, click>=8.1.3.\n-   Remove previously deprecated code. :pr:`4995`\n\n    -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and\n        ``_request_ctx_stack`` objects are removed. ``top`` still exists to give\n        extensions more time to update, but it will be removed.\n    -   The ``FLASK_ENV`` environment variable, ``ENV`` config key, and ``app.env``\n        property are removed.\n    -   The ``session_cookie_name``, ``send_file_max_age_default``, ``use_x_sendfile``,\n        ``propagate_exceptions``, and ``templates_auto_reload`` properties on ``app``\n        are removed.\n    -   The ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``, ``JSONIFY_MIMETYPE``, and\n        ``JSONIFY_PRETTYPRINT_REGULAR`` config keys are removed.\n    -   The ``app.before_first_request`` and ``bp.before_app_first_request`` decorators\n        are removed.\n    -   ``json_encoder`` and ``json_decoder`` attributes on app and blueprint, and the\n        corresponding ``json.JSONEncoder`` and ``JSONDecoder`` classes, are removed.\n    -   The ``json.htmlsafe_dumps`` and ``htmlsafe_dump`` functions are removed.\n    -   Calling setup methods on blueprints after registration is an error instead of a\n        warning. :pr:`4997`\n\n-   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them\n    directly from ``markupsafe`` instead. :pr:`4996`\n-   The ``app.got_first_request`` property is deprecated. :pr:`4997`\n-   The ``locked_cached_property`` decorator is deprecated. Use a lock inside the\n    decorated function if locking is needed. :issue:`4993`\n-   Signals are always available. ``blinker>=1.6.2`` is a required dependency. The\n    ``signals_available`` attribute is deprecated. :issue:`5056`\n-   Signals support ``async`` subscriber functions. :pr:`5049`\n-   Remove uses of locks that could cause requests to block each other very briefly.\n    :issue:`4993`\n-   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.\n    :pr:`4947`\n-   Ensure subdomains are applied with nested blueprints. :issue:`4834`\n-   ``config.from_file`` can use ``text=False`` to indicate that the parser wants a\n    binary file instead. :issue:`4989`\n-   If a blueprint is created with an empty name it raises a ``ValueError``.\n    :issue:`5010`\n-   ``SESSION_COOKIE_DOMAIN`` does not fall back to ``SERVER_NAME``. The default is not\n    to set the domain, which modern browsers interpret as an exact match rather than\n    a subdomain match. Warnings about ``localhost`` and IP addresses are also removed.\n    :issue:`5051`\n-   The ``routes`` command shows each rule's ``subdomain`` or ``host`` when domain\n    matching is in use. :issue:`5004`\n-   Use postponed evaluation of annotations. :pr:`5071`\n\n\nVersion 2.2.5\n-------------\n\nReleased 2023-05-02\n\n-   Update for compatibility with Werkzeug 2.3.3.\n-   Set ``Vary: Cookie`` header when the session is accessed, modified, or refreshed.\n\n\nVersion 2.2.4\n-------------\n\nReleased 2023-04-25\n\n-   Update for compatibility with Werkzeug 2.3.\n\n\nVersion 2.2.3\n-------------\n\nReleased 2023-02-15\n\n-   Autoescape is enabled by default for ``.svg`` template files. :issue:`4831`\n-   Fix the type of ``template_folder`` to accept ``pathlib.Path``. :issue:`4892`\n-   Add ``--debug`` option to the ``flask run`` command. :issue:`4777`\n\n\nVersion 2.2.2\n-------------\n\nReleased 2022-08-08\n\n-   Update Werkzeug dependency to >= 2.2.2. This includes fixes related\n    to the new faster router, header parsing, and the development\n    server. :pr:`4754`\n-   Fix the default value for ``app.env`` to be ``\"production\"``. This\n    attribute remains deprecated. :issue:`4740`\n\n\nVersion 2.2.1\n-------------\n\nReleased 2022-08-03\n\n-   Setting or accessing ``json_encoder`` or ``json_decoder`` raises a\n    deprecation warning. :issue:`4732`\n\n\nVersion 2.2.0\n-------------\n\nReleased 2022-08-01\n\n-   Remove previously deprecated code. :pr:`4667`\n\n    -   Old names for some ``send_file`` parameters have been removed.\n        ``download_name`` replaces ``attachment_filename``, ``max_age``\n        replaces ``cache_timeout``, and ``etag`` replaces ``add_etags``.\n        Additionally, ``path`` replaces ``filename`` in\n        ``send_from_directory``.\n    -   The ``RequestContext.g`` property returning ``AppContext.g`` is\n        removed.\n\n-   Update Werkzeug dependency to >= 2.2.\n-   The app and request contexts are managed using Python context vars\n    directly rather than Werkzeug's ``LocalStack``. This should result\n    in better performance and memory use. :pr:`4682`\n\n    -   Extension maintainers, be aware that ``_app_ctx_stack.top``\n        and ``_request_ctx_stack.top`` are deprecated. Store data on\n        ``g`` instead using a unique prefix, like\n        ``g._extension_name_attr``.\n\n-   The ``FLASK_ENV`` environment variable and ``app.env`` attribute are\n    deprecated, removing the distinction between development and debug\n    mode. Debug mode should be controlled directly using the ``--debug``\n    option or ``app.run(debug=True)``. :issue:`4714`\n-   Some attributes that proxied config keys on ``app`` are deprecated:\n    ``session_cookie_name``, ``send_file_max_age_default``,\n    ``use_x_sendfile``, ``propagate_exceptions``, and\n    ``templates_auto_reload``. Use the relevant config keys instead.\n    :issue:`4716`\n-   Add new customization points to the ``Flask`` app object for many\n    previously global behaviors.\n\n    -   ``flask.url_for`` will call ``app.url_for``. :issue:`4568`\n    -   ``flask.abort`` will call ``app.aborter``.\n        ``Flask.aborter_class`` and ``Flask.make_aborter`` can be used\n        to customize this aborter. :issue:`4567`\n    -   ``flask.redirect`` will call ``app.redirect``. :issue:`4569`\n    -   ``flask.json`` is an instance of ``JSONProvider``. A different\n        provider can be set to use a different JSON library.\n        ``flask.jsonify`` will call ``app.json.response``, other\n        functions in ``flask.json`` will call corresponding functions in\n        ``app.json``. :pr:`4692`\n\n-   JSON configuration is moved to attributes on the default\n    ``app.json`` provider. ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``,\n    ``JSONIFY_MIMETYPE``, and ``JSONIFY_PRETTYPRINT_REGULAR`` are\n    deprecated. :pr:`4692`\n-   Setting custom ``json_encoder`` and ``json_decoder`` classes on the\n    app or a blueprint, and the corresponding ``json.JSONEncoder`` and\n    ``JSONDecoder`` classes, are deprecated. JSON behavior can now be\n    overridden using the ``app.json`` provider interface. :pr:`4692`\n-   ``json.htmlsafe_dumps`` and ``json.htmlsafe_dump`` are deprecated,\n    the function is built-in to Jinja now. :pr:`4692`\n-   Refactor ``register_error_handler`` to consolidate error checking.\n    Rewrite some error messages to be more consistent. :issue:`4559`\n-   Use Blueprint decorators and functions intended for setup after\n    registering the blueprint will show a warning. In the next version,\n    this will become an error just like the application setup methods.\n    :issue:`4571`\n-   ``before_first_request`` is deprecated. Run setup code when creating\n    the application instead. :issue:`4605`\n-   Added the ``View.init_every_request`` class attribute. If a view\n    subclass sets this to ``False``, the view will not create a new\n    instance on every request. :issue:`2520`.\n-   A ``flask.cli.FlaskGroup`` Click group can be nested as a\n    sub-command in a custom CLI. :issue:`3263`\n-   Add ``--app`` and ``--debug`` options to the ``flask`` CLI, instead\n    of requiring that they are set through environment variables.\n    :issue:`2836`\n-   Add ``--env-file`` option to the ``flask`` CLI. This allows\n    specifying a dotenv file to load in addition to ``.env`` and\n    ``.flaskenv``. :issue:`3108`\n-   It is no longer required to decorate custom CLI commands on\n    ``app.cli`` or ``blueprint.cli`` with ``@with_appcontext``, an app\n    context will already be active at that point. :issue:`2410`\n-   ``SessionInterface.get_expiration_time`` uses a timezone-aware\n    value. :pr:`4645`\n-   View functions can return generators directly instead of wrapping\n    them in a ``Response``. :pr:`4629`\n-   Add ``stream_template`` and ``stream_template_string`` functions to\n    render a template as a stream of pieces. :pr:`4629`\n-   A new implementation of context preservation during debugging and\n    testing. :pr:`4666`\n\n    -   ``request``, ``g``, and other context-locals point to the\n        correct data when running code in the interactive debugger\n        console. :issue:`2836`\n    -   Teardown functions are always run at the end of the request,\n        even if the context is preserved. They are also run after the\n        preserved context is popped.\n    -   ``stream_with_context`` preserves context separately from a\n        ``with client`` block. It will be cleaned up when\n        ``response.get_data()`` or ``response.close()`` is called.\n\n-   Allow returning a list from a view function, to convert it to a\n    JSON response like a dict is. :issue:`4672`\n-   When type checking, allow ``TypedDict`` to be returned from view\n    functions. :pr:`4695`\n-   Remove the ``--eager-loading/--lazy-loading`` options from the\n    ``flask run`` command. The app is always eager loaded the first\n    time, then lazily loaded in the reloader. The reloader always prints\n    errors immediately but continues serving. Remove the internal\n    ``DispatchingApp`` middleware used by the previous implementation.\n    :issue:`4715`\n\n\nVersion 2.1.3\n-------------\n\nReleased 2022-07-13\n\n-   Inline some optional imports that are only used for certain CLI\n    commands. :pr:`4606`\n-   Relax type annotation for ``after_request`` functions. :issue:`4600`\n-   ``instance_path`` for namespace packages uses the path closest to\n    the imported submodule. :issue:`4610`\n-   Clearer error message when ``render_template`` and\n    ``render_template_string`` are used outside an application context.\n    :pr:`4693`\n\n\nVersion 2.1.2\n-------------\n\nReleased 2022-04-28\n\n-   Fix type annotation for ``json.loads``, it accepts str or bytes.\n    :issue:`4519`\n-   The ``--cert`` and ``--key`` options on ``flask run`` can be given\n    in either order. :issue:`4459`\n\n\nVersion 2.1.1\n-------------\n\nReleased on 2022-03-30\n\n-   Set the minimum required version of importlib_metadata to 3.6.0,\n    which is required on Python < 3.10. :issue:`4502`\n\n\nVersion 2.1.0\n-------------\n\nReleased 2022-03-28\n\n-   Drop support for Python 3.6. :pr:`4335`\n-   Update Click dependency to >= 8.0. :pr:`4008`\n-   Remove previously deprecated code. :pr:`4337`\n\n    -   The CLI does not pass ``script_info`` to app factory functions.\n    -   ``config.from_json`` is replaced by\n        ``config.from_file(name, load=json.load)``.\n    -   ``json`` functions no longer take an ``encoding`` parameter.\n    -   ``safe_join`` is removed, use ``werkzeug.utils.safe_join``\n        instead.\n    -   ``total_seconds`` is removed, use ``timedelta.total_seconds``\n        instead.\n    -   The same blueprint cannot be registered with the same name. Use\n        ``name=`` when registering to specify a unique name.\n    -   The test client's ``as_tuple`` parameter is removed. Use\n        ``response.request.environ`` instead. :pr:`4417`\n\n-   Some parameters in ``send_file`` and ``send_from_directory`` were\n    renamed in 2.0. The deprecation period for the old names is extended\n    to 2.2. Be sure to test with deprecation warnings visible.\n\n    -   ``attachment_filename`` is renamed to ``download_name``.\n    -   ``cache_timeout`` is renamed to ``max_age``.\n    -   ``add_etags`` is renamed to ``etag``.\n    -   ``filename`` is renamed to ``path``.\n\n-   The ``RequestContext.g`` property is deprecated. Use ``g`` directly\n    or ``AppContext.g`` instead. :issue:`3898`\n-   ``copy_current_request_context`` can decorate async functions.\n    :pr:`4303`\n-   The CLI uses ``importlib.metadata`` instead of ``pkg_resources`` to\n    load command entry points. :issue:`4419`\n-   Overriding ``FlaskClient.open`` will not cause an error on redirect.\n    :issue:`3396`\n-   Add an ``--exclude-patterns`` option to the ``flask run`` CLI\n    command to specify patterns that will be ignored by the reloader.\n    :issue:`4188`\n-   When using lazy loading (the default with the debugger), the Click\n    context from the ``flask run`` command remains available in the\n    loader thread. :issue:`4460`\n-   Deleting the session cookie uses the ``httponly`` flag.\n    :issue:`4485`\n-   Relax typing for ``errorhandler`` to allow the user to use more\n    precise types and decorate the same function multiple times.\n    :issue:`4095, 4295, 4297`\n-   Fix typing for ``__exit__`` methods for better compatibility with\n    ``ExitStack``. :issue:`4474`\n-   From Werkzeug, for redirect responses the ``Location`` header URL\n    will remain relative, and exclude the scheme and domain, by default.\n    :pr:`4496`\n-   Add ``Config.from_prefixed_env()`` to load config values from\n    environment variables that start with ``FLASK_`` or another prefix.\n    This parses values as JSON by default, and allows setting keys in\n    nested dicts. :pr:`4479`\n\n\nVersion 2.0.3\n-------------\n\nReleased 2022-02-14\n\n-   The test client's ``as_tuple`` parameter is deprecated and will be\n    removed in Werkzeug 2.1. It is now also deprecated in Flask, to be\n    removed in Flask 2.1, while remaining compatible with both in\n    2.0.x. Use ``response.request.environ`` instead. :pr:`4341`\n-   Fix type annotation for ``errorhandler`` decorator. :issue:`4295`\n-   Revert a change to the CLI that caused it to hide ``ImportError``\n    tracebacks when importing the application. :issue:`4307`\n-   ``app.json_encoder`` and ``json_decoder`` are only passed to\n    ``dumps`` and ``loads`` if they have custom behavior. This improves\n    performance, mainly on PyPy. :issue:`4349`\n-   Clearer error message when ``after_this_request`` is used outside a\n    request context. :issue:`4333`\n\n\nVersion 2.0.2\n-------------\n\nReleased 2021-10-04\n\n-   Fix type annotation for ``teardown_*`` methods. :issue:`4093`\n-   Fix type annotation for ``before_request`` and ``before_app_request``\n    decorators. :issue:`4104`\n-   Fixed the issue where typing requires template global\n    decorators to accept functions with no arguments. :issue:`4098`\n-   Support View and MethodView instances with async handlers. :issue:`4112`\n-   Enhance typing of ``app.errorhandler`` decorator. :issue:`4095`\n-   Fix registering a blueprint twice with differing names. :issue:`4124`\n-   Fix the type of ``static_folder`` to accept ``pathlib.Path``.\n    :issue:`4150`\n-   ``jsonify`` handles ``decimal.Decimal`` by encoding to ``str``.\n    :issue:`4157`\n-   Correctly handle raising deferred errors in CLI lazy loading.\n    :issue:`4096`\n-   The CLI loader handles ``**kwargs`` in a ``create_app`` function.\n    :issue:`4170`\n-   Fix the order of ``before_request`` and other callbacks that trigger\n    before the view returns. They are called from the app down to the\n    closest nested blueprint. :issue:`4229`\n\n\nVersion 2.0.1\n-------------\n\nReleased 2021-05-21\n\n-   Re-add the ``filename`` parameter in ``send_from_directory``. The\n    ``filename`` parameter has been renamed to ``path``, the old name\n    is deprecated. :pr:`4019`\n-   Mark top-level names as exported so type checking understands\n    imports in user projects. :issue:`4024`\n-   Fix type annotation for ``g`` and inform mypy that it is a namespace\n    object that has arbitrary attributes. :issue:`4020`\n-   Fix some types that weren't available in Python 3.6.0. :issue:`4040`\n-   Improve typing for ``send_file``, ``send_from_directory``, and\n    ``get_send_file_max_age``. :issue:`4044`, :pr:`4026`\n-   Show an error when a blueprint name contains a dot. The ``.`` has\n    special meaning, it is used to separate (nested) blueprint names and\n    the endpoint name. :issue:`4041`\n-   Combine URL prefixes when nesting blueprints that were created with\n    a ``url_prefix`` value. :issue:`4037`\n-   Revert a change to the order that URL matching was done. The\n    URL is again matched after the session is loaded, so the session is\n    available in custom URL converters. :issue:`4053`\n-   Re-add deprecated ``Config.from_json``, which was accidentally\n    removed early. :issue:`4078`\n-   Improve typing for some functions using ``Callable`` in their type\n    signatures, focusing on decorator factories. :issue:`4060`\n-   Nested blueprints are registered with their dotted name. This allows\n    different blueprints with the same name to be nested at different\n    locations. :issue:`4069`\n-   ``register_blueprint`` takes a ``name`` option to change the\n    (pre-dotted) name the blueprint is registered with. This allows the\n    same blueprint to be registered multiple times with unique names for\n    ``url_for``. Registering the same blueprint with the same name\n    multiple times is deprecated. :issue:`1091`\n-   Improve typing for ``stream_with_context``. :issue:`4052`\n\n\nVersion 2.0.0\n-------------\n\nReleased 2021-05-11\n\n-   Drop support for Python 2 and 3.5.\n-   Bump minimum versions of other Pallets projects: Werkzeug >= 2,\n    Jinja2 >= 3, MarkupSafe >= 2, ItsDangerous >= 2, Click >= 8. Be sure\n    to check the change logs for each project. For better compatibility\n    with other applications (e.g. Celery) that still require Click 7,\n    there is no hard dependency on Click 8 yet, but using Click 7 will\n    trigger a DeprecationWarning and Flask 2.1 will depend on Click 8.\n-   JSON support no longer uses simplejson. To use another JSON module,\n    override ``app.json_encoder`` and ``json_decoder``. :issue:`3555`\n-   The ``encoding`` option to JSON functions is deprecated. :pr:`3562`\n-   Passing ``script_info`` to app factory functions is deprecated. This\n    was not portable outside the ``flask`` command. Use\n    ``click.get_current_context().obj`` if it's needed. :issue:`3552`\n-   The CLI shows better error messages when the app failed to load\n    when looking up commands. :issue:`2741`\n-   Add ``SessionInterface.get_cookie_name`` to allow setting the\n    session cookie name dynamically. :pr:`3369`\n-   Add ``Config.from_file`` to load config using arbitrary file\n    loaders, such as ``toml.load`` or ``json.load``.\n    ``Config.from_json`` is deprecated in favor of this. :pr:`3398`\n-   The ``flask run`` command will only defer errors on reload. Errors\n    present during the initial call will cause the server to exit with\n    the traceback immediately. :issue:`3431`\n-   ``send_file`` raises a ``ValueError`` when passed an ``io`` object\n    in text mode. Previously, it would respond with 200 OK and an empty\n    file. :issue:`3358`\n-   When using ad-hoc certificates, check for the cryptography library\n    instead of PyOpenSSL. :pr:`3492`\n-   When specifying a factory function with ``FLASK_APP``, keyword\n    argument can be passed. :issue:`3553`\n-   When loading a ``.env`` or ``.flaskenv`` file, the current working\n    directory is no longer changed to the location of the file.\n    :pr:`3560`\n-   When returning a ``(response, headers)`` tuple from a view, the\n    headers replace rather than extend existing headers on the response.\n    For example, this allows setting the ``Content-Type`` for\n    ``jsonify()``. Use ``response.headers.extend()`` if extending is\n    desired. :issue:`3628`\n-   The ``Scaffold`` class provides a common API for the ``Flask`` and\n    ``Blueprint`` classes. ``Blueprint`` information is stored in\n    attributes just like ``Flask``, rather than opaque lambda functions.\n    This is intended to improve consistency and maintainability.\n    :issue:`3215`\n-   Include ``samesite`` and ``secure`` options when removing the\n    session cookie. :pr:`3726`\n-   Support passing a ``pathlib.Path`` to ``static_folder``. :pr:`3579`\n-   ``send_file`` and ``send_from_directory`` are wrappers around the\n    implementations in ``werkzeug.utils``. :pr:`3828`\n-   Some ``send_file`` parameters have been renamed, the old names are\n    deprecated. ``attachment_filename`` is renamed to ``download_name``.\n    ``cache_timeout`` is renamed to ``max_age``. ``add_etags`` is\n    renamed to ``etag``. :pr:`3828, 3883`\n-   ``send_file`` passes ``download_name`` even if\n    ``as_attachment=False`` by using ``Content-Disposition: inline``.\n    :pr:`3828`\n-   ``send_file`` sets ``conditional=True`` and ``max_age=None`` by\n    default. ``Cache-Control`` is set to ``no-cache`` if ``max_age`` is\n    not set, otherwise ``public``. This tells browsers to validate\n    conditional requests instead of using a timed cache. :pr:`3828`\n-   ``helpers.safe_join`` is deprecated. Use\n    ``werkzeug.utils.safe_join`` instead. :pr:`3828`\n-   The request context does route matching before opening the session.\n    This could allow a session interface to change behavior based on\n    ``request.endpoint``. :issue:`3776`\n-   Use Jinja's implementation of the ``|tojson`` filter. :issue:`3881`\n-   Add route decorators for common HTTP methods. For example,\n    ``@app.post(\"/login\")`` is a shortcut for\n    ``@app.route(\"/login\", methods=[\"POST\"])``. :pr:`3907`\n-   Support async views, error handlers, before and after request, and\n    teardown functions. :pr:`3412`\n-   Support nesting blueprints. :issue:`593, 1548`, :pr:`3923`\n-   Set the default encoding to \"UTF-8\" when loading ``.env`` and\n    ``.flaskenv`` files to allow to use non-ASCII characters. :issue:`3931`\n-   ``flask shell`` sets up tab and history completion like the default\n    ``python`` shell if ``readline`` is installed. :issue:`3941`\n-   ``helpers.total_seconds()`` is deprecated. Use\n    ``timedelta.total_seconds()`` instead. :pr:`3962`\n-   Add type hinting. :pr:`3973`.\n\n\nVersion 1.1.4\n-------------\n\nReleased 2021-05-13\n\n-   Update ``static_folder`` to use ``_compat.fspath`` instead of\n    ``os.fspath`` to continue supporting Python < 3.6 :issue:`4050`\n\n\nVersion 1.1.3\n-------------\n\nReleased 2021-05-13\n\n-   Set maximum versions of Werkzeug, Jinja, Click, and ItsDangerous.\n    :issue:`4043`\n-   Re-add support for passing a ``pathlib.Path`` for ``static_folder``.\n    :pr:`3579`\n\n\nVersion 1.1.2\n-------------\n\nReleased 2020-04-03\n\n-   Work around an issue when running the ``flask`` command with an\n    external debugger on Windows. :issue:`3297`\n-   The static route will not catch all URLs if the ``Flask``\n    ``static_folder`` argument ends with a slash. :issue:`3452`\n\n\nVersion 1.1.1\n-------------\n\nReleased 2019-07-08\n\n-   The ``flask.json_available`` flag was added back for compatibility\n    with some extensions. It will raise a deprecation warning when used,\n    and will be removed in version 2.0.0. :issue:`3288`\n\n\nVersion 1.1.0\n-------------\n\nReleased 2019-07-04\n\n-   Bump minimum Werkzeug version to >= 0.15.\n-   Drop support for Python 3.4.\n-   Error handlers for ``InternalServerError`` or ``500`` will always be\n    passed an instance of ``InternalServerError``. If they are invoked\n    due to an unhandled exception, that original exception is now\n    available as ``e.original_exception`` rather than being passed\n    directly to the handler. The same is true if the handler is for the\n    base ``HTTPException``. This makes error handler behavior more\n    consistent. :pr:`3266`\n\n    -   ``Flask.finalize_request`` is called for all unhandled\n        exceptions even if there is no ``500`` error handler.\n\n-   ``Flask.logger`` takes the same name as ``Flask.name`` (the value\n    passed as ``Flask(import_name)``. This reverts 1.0's behavior of\n    always logging to ``\"flask.app\"``, in order to support multiple apps\n    in the same process. A warning will be shown if old configuration is\n    detected that needs to be moved. :issue:`2866`\n-   ``RequestContext.copy`` includes the current session object in the\n    request context copy. This prevents ``session`` pointing to an\n    out-of-date object. :issue:`2935`\n-   Using built-in RequestContext, unprintable Unicode characters in\n    Host header will result in a HTTP 400 response and not HTTP 500 as\n    previously. :pr:`2994`\n-   ``send_file`` supports ``PathLike`` objects as described in\n    :pep:`519`, to support ``pathlib`` in Python 3. :pr:`3059`\n-   ``send_file`` supports ``BytesIO`` partial content.\n    :issue:`2957`\n-   ``open_resource`` accepts the \"rt\" file mode. This still does the\n    same thing as \"r\". :issue:`3163`\n-   The ``MethodView.methods`` attribute set in a base class is used by\n    subclasses. :issue:`3138`\n-   ``Flask.jinja_options`` is a ``dict`` instead of an\n    ``ImmutableDict`` to allow easier configuration. Changes must still\n    be made before creating the environment. :pr:`3190`\n-   Flask's ``JSONMixin`` for the request and response wrappers was\n    moved into Werkzeug. Use Werkzeug's version with Flask-specific\n    support. This bumps the Werkzeug dependency to >= 0.15.\n    :issue:`3125`\n-   The ``flask`` command entry point is simplified to take advantage\n    of Werkzeug 0.15's better reloader support. This bumps the Werkzeug\n    dependency to >= 0.15. :issue:`3022`\n-   Support ``static_url_path`` that ends with a forward slash.\n    :issue:`3134`\n-   Support empty ``static_folder`` without requiring setting an empty\n    ``static_url_path`` as well. :pr:`3124`\n-   ``jsonify`` supports ``dataclass`` objects. :pr:`3195`\n-   Allow customizing the ``Flask.url_map_class`` used for routing.\n    :pr:`3069`\n-   The development server port can be set to 0, which tells the OS to\n    pick an available port. :issue:`2926`\n-   The return value from ``cli.load_dotenv`` is more consistent with\n    the documentation. It will return ``False`` if python-dotenv is not\n    installed, or if the given path isn't a file. :issue:`2937`\n-   Signaling support has a stub for the ``connect_via`` method when\n    the Blinker library is not installed. :pr:`3208`\n-   Add an ``--extra-files`` option to the ``flask run`` CLI command to\n    specify extra files that will trigger the reloader on change.\n    :issue:`2897`\n-   Allow returning a dictionary from a view function. Similar to how\n    returning a string will produce a ``text/html`` response, returning\n    a dict will call ``jsonify`` to produce a ``application/json``\n    response. :pr:`3111`\n-   Blueprints have a ``cli`` Click group like ``app.cli``. CLI commands\n    registered with a blueprint will be available as a group under the\n    ``flask`` command. :issue:`1357`.\n-   When using the test client as a context manager (``with client:``),\n    all preserved request contexts are popped when the block exits,\n    ensuring nested contexts are cleaned up correctly. :pr:`3157`\n-   Show a better error message when the view return type is not\n    supported. :issue:`3214`\n-   ``flask.testing.make_test_environ_builder()`` has been deprecated in\n    favour of a new class ``flask.testing.EnvironBuilder``. :pr:`3232`\n-   The ``flask run`` command no longer fails if Python is not built\n    with SSL support. Using the ``--cert`` option will show an\n    appropriate error message. :issue:`3211`\n-   URL matching now occurs after the request context is pushed, rather\n    than when it's created. This allows custom URL converters to access\n    the app and request contexts, such as to query a database for an id.\n    :issue:`3088`\n\n\nVersion 1.0.4\n-------------\n\nReleased 2019-07-04\n\n-   The key information for ``BadRequestKeyError`` is no longer cleared\n    outside debug mode, so error handlers can still access it. This\n    requires upgrading to Werkzeug 0.15.5. :issue:`3249`\n-   ``send_file`` url quotes the \":\" and \"/\" characters for more\n    compatible UTF-8 filename support in some browsers. :issue:`3074`\n-   Fixes for :pep:`451` import loaders and pytest 5.x. :issue:`3275`\n-   Show message about dotenv on stderr instead of stdout. :issue:`3285`\n\n\nVersion 1.0.3\n-------------\n\nReleased 2019-05-17\n\n-   ``send_file`` encodes filenames as ASCII instead of Latin-1\n    (ISO-8859-1). This fixes compatibility with Gunicorn, which is\n    stricter about header encodings than :pep:`3333`. :issue:`2766`\n-   Allow custom CLIs using ``FlaskGroup`` to set the debug flag without\n    it always being overwritten based on environment variables.\n    :pr:`2765`\n-   ``flask --version`` outputs Werkzeug's version and simplifies the\n    Python version. :pr:`2825`\n-   ``send_file`` handles an ``attachment_filename`` that is a native\n    Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`\n-   A catch-all error handler registered for ``HTTPException`` will not\n    handle ``RoutingException``, which is used internally during\n    routing. This fixes the unexpected behavior that had been introduced\n    in 1.0. :pr:`2986`\n-   Passing the ``json`` argument to ``app.test_client`` does not\n    push/pop an extra app context. :issue:`2900`\n\n\nVersion 1.0.2\n-------------\n\nReleased 2018-05-02\n\n-   Fix more backwards compatibility issues with merging slashes between\n    a blueprint prefix and route. :pr:`2748`\n-   Fix error with ``flask routes`` command when there are no routes.\n    :issue:`2751`\n\n\nVersion 1.0.1\n-------------\n\nReleased 2018-04-29\n\n-   Fix registering partials (with no ``__name__``) as view functions.\n    :pr:`2730`\n-   Don't treat lists returned from view functions the same as tuples.\n    Only tuples are interpreted as response data. :issue:`2736`\n-   Extra slashes between a blueprint's ``url_prefix`` and a route URL\n    are merged. This fixes some backwards compatibility issues with the\n    change in 1.0. :issue:`2731`, :issue:`2742`\n-   Only trap ``BadRequestKeyError`` errors in debug mode, not all\n    ``BadRequest`` errors. This allows ``abort(400)`` to continue\n    working as expected. :issue:`2735`\n-   The ``FLASK_SKIP_DOTENV`` environment variable can be set to ``1``\n    to skip automatically loading dotenv files. :issue:`2722`\n\n\nVersion 1.0\n-----------\n\nReleased 2018-04-26\n\n-   Python 2.6 and 3.3 are no longer supported.\n-   Bump minimum dependency versions to the latest stable versions:\n    Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.\n    :issue:`2586`\n-   Skip ``app.run`` when a Flask application is run from the command\n    line. This avoids some behavior that was confusing to debug.\n-   Change the default for ``JSONIFY_PRETTYPRINT_REGULAR`` to\n    ``False``. ``~json.jsonify`` returns a compact format by default,\n    and an indented format in debug mode. :pr:`2193`\n-   ``Flask.__init__`` accepts the ``host_matching`` argument and sets\n    it on ``Flask.url_map``. :issue:`1559`\n-   ``Flask.__init__`` accepts the ``static_host`` argument and passes\n    it as the ``host`` argument when defining the static route.\n    :issue:`1559`\n-   ``send_file`` supports Unicode in ``attachment_filename``.\n    :pr:`2223`\n-   Pass ``_scheme`` argument from ``url_for`` to\n    ``Flask.handle_url_build_error``. :pr:`2017`\n-   ``Flask.add_url_rule`` accepts the ``provide_automatic_options``\n    argument to disable adding the ``OPTIONS`` method. :pr:`1489`\n-   ``MethodView`` subclasses inherit method handlers from base classes.\n    :pr:`1936`\n-   Errors caused while opening the session at the beginning of the\n    request are handled by the app's error handlers. :pr:`2254`\n-   Blueprints gained ``Blueprint.json_encoder`` and\n    ``Blueprint.json_decoder`` attributes to override the app's\n    encoder and decoder. :pr:`1898`\n-   ``Flask.make_response`` raises ``TypeError`` instead of\n    ``ValueError`` for bad response types. The error messages have been\n    improved to describe why the type is invalid. :pr:`2256`\n-   Add ``routes`` CLI command to output routes registered on the\n    application. :pr:`2259`\n-   Show warning when session cookie domain is a bare hostname or an IP\n    address, as these may not behave properly in some browsers, such as\n    Chrome. :pr:`2282`\n-   Allow IP address as exact session cookie domain. :pr:`2282`\n-   ``SESSION_COOKIE_DOMAIN`` is set if it is detected through\n    ``SERVER_NAME``. :pr:`2282`\n-   Auto-detect zero-argument app factory called ``create_app`` or\n    ``make_app`` from ``FLASK_APP``. :pr:`2297`\n-   Factory functions are not required to take a ``script_info``\n    parameter to work with the ``flask`` command. If they take a single\n    parameter or a parameter named ``script_info``, the ``ScriptInfo``\n    object will be passed. :pr:`2319`\n-   ``FLASK_APP`` can be set to an app factory, with arguments if\n    needed, for example ``FLASK_APP=myproject.app:create_app('dev')``.\n    :pr:`2326`\n-   ``FLASK_APP`` can point to local packages that are not installed in\n    editable mode, although ``pip install -e`` is still preferred.\n    :pr:`2414`\n-   The ``View`` class attribute\n    ``View.provide_automatic_options`` is set in ``View.as_view``, to be\n    detected by ``Flask.add_url_rule``. :pr:`2316`\n-   Error handling will try handlers registered for ``blueprint, code``,\n    ``app, code``, ``blueprint, exception``, ``app, exception``.\n    :pr:`2314`\n-   ``Cookie`` is added to the response's ``Vary`` header if the session\n    is accessed at all during the request (and not deleted). :pr:`2288`\n-   ``Flask.test_request_context`` accepts ``subdomain`` and\n    ``url_scheme`` arguments for use when building the base URL.\n    :pr:`1621`\n-   Set ``APPLICATION_ROOT`` to ``'/'`` by default. This was already the\n    implicit default when it was set to ``None``.\n-   ``TRAP_BAD_REQUEST_ERRORS`` is enabled by default in debug mode.\n    ``BadRequestKeyError`` has a message with the bad key in debug mode\n    instead of the generic bad request message. :pr:`2348`\n-   Allow registering new tags with ``TaggedJSONSerializer`` to support\n    storing other types in the session cookie. :pr:`2352`\n-   Only open the session if the request has not been pushed onto the\n    context stack yet. This allows ``stream_with_context`` generators to\n    access the same session that the containing view uses. :pr:`2354`\n-   Add ``json`` keyword argument for the test client request methods.\n    This will dump the given object as JSON and set the appropriate\n    content type. :pr:`2358`\n-   Extract JSON handling to a mixin applied to both the ``Request`` and\n    ``Response`` classes. This adds the ``Response.is_json`` and\n    ``Response.get_json`` methods to the response to make testing JSON\n    response much easier. :pr:`2358`\n-   Removed error handler caching because it caused unexpected results\n    for some exception inheritance hierarchies. Register handlers\n    explicitly for each exception if you want to avoid traversing the\n    MRO. :pr:`2362`\n-   Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`\n-   Template auto reloading will honor debug mode even if\n    ``Flask.jinja_env`` was already accessed. :pr:`2373`\n-   The following old deprecated code was removed. :issue:`2385`\n\n    -   ``flask.ext`` - import extensions directly by their name instead\n        of through the ``flask.ext`` namespace. For example,\n        ``import flask.ext.sqlalchemy`` becomes\n        ``import flask_sqlalchemy``.\n    -   ``Flask.init_jinja_globals`` - extend\n        ``Flask.create_jinja_environment`` instead.\n    -   ``Flask.error_handlers`` - tracked by\n        ``Flask.error_handler_spec``, use ``Flask.errorhandler``\n        to register handlers.\n    -   ``Flask.request_globals_class`` - use\n        ``Flask.app_ctx_globals_class`` instead.\n    -   ``Flask.static_path`` - use ``Flask.static_url_path`` instead.\n    -   ``Request.module`` - use ``Request.blueprint`` instead.\n\n-   The ``Request.json`` property is no longer deprecated. :issue:`1421`\n-   Support passing a ``EnvironBuilder`` or ``dict`` to\n    ``test_client.open``. :pr:`2412`\n-   The ``flask`` command and ``Flask.run`` will load environment\n    variables from ``.env`` and ``.flaskenv`` files if python-dotenv is\n    installed. :pr:`2416`\n-   When passing a full URL to the test client, the scheme in the URL is\n    used instead of ``PREFERRED_URL_SCHEME``. :pr:`2430`\n-   ``Flask.logger`` has been simplified. ``LOGGER_NAME`` and\n    ``LOGGER_HANDLER_POLICY`` config was removed. The logger is always\n    named ``flask.app``. The level is only set on first access, it\n    doesn't check ``Flask.debug`` each time. Only one format is used,\n    not different ones depending on ``Flask.debug``. No handlers are\n    removed, and a handler is only added if no handlers are already\n    configured. :pr:`2436`\n-   Blueprint view function names may not contain dots. :pr:`2450`\n-   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n    cases. :issue:`2526`\n-   The development server uses threads by default. :pr:`2529`\n-   Loading config files with ``silent=True`` will ignore ``ENOTDIR``\n    errors. :pr:`2581`\n-   Pass ``--cert`` and ``--key`` options to ``flask run`` to run the\n    development server over HTTPS. :pr:`2606`\n-   Added ``SESSION_COOKIE_SAMESITE`` to control the ``SameSite``\n    attribute on the session cookie. :pr:`2607`\n-   Added ``Flask.test_cli_runner`` to create a Click runner that can\n    invoke Flask CLI commands for testing. :pr:`2636`\n-   Subdomain matching is disabled by default and setting\n    ``SERVER_NAME`` does not implicitly enable it. It can be enabled by\n    passing ``subdomain_matching=True`` to the ``Flask`` constructor.\n    :pr:`2635`\n-   A single trailing slash is stripped from the blueprint\n    ``url_prefix`` when it is registered with the app. :pr:`2629`\n-   ``Request.get_json`` doesn't cache the result if parsing fails when\n    ``silent`` is true. :issue:`2651`\n-   ``Request.get_json`` no longer accepts arbitrary encodings. Incoming\n    JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will\n    autodetect UTF-8, -16, or -32. :pr:`2691`\n-   Added ``MAX_COOKIE_SIZE`` and ``Response.max_cookie_size`` to\n    control when Werkzeug warns about large cookies that browsers may\n    ignore. :pr:`2693`\n-   Updated documentation theme to make docs look better in small\n    windows. :pr:`2709`\n-   Rewrote the tutorial docs and example project to take a more\n    structured approach to help new users avoid common pitfalls.\n    :pr:`2676`\n\n\nVersion 0.12.5\n--------------\n\nReleased 2020-02-10\n\n-   Pin Werkzeug to < 1.0.0. :issue:`3497`\n\n\nVersion 0.12.4\n--------------\n\nReleased 2018-04-29\n\n-   Repackage 0.12.3 to fix package layout issue. :issue:`2728`\n\n\nVersion 0.12.3\n--------------\n\nReleased 2018-04-26\n\n-   ``Request.get_json`` no longer accepts arbitrary encodings.\n    Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but\n    Flask will autodetect UTF-8, -16, or -32. :issue:`2692`\n-   Fix a Python warning about imports when using ``python -m flask``.\n    :issue:`2666`\n-   Fix a ``ValueError`` caused by invalid ``Range`` requests in some\n    cases.\n\n\nVersion 0.12.2\n--------------\n\nReleased 2017-05-16\n\n-   Fix a bug in ``safe_join`` on Windows.\n\n\nVersion 0.12.1\n--------------\n\nReleased 2017-03-31\n\n-   Prevent ``flask run`` from showing a ``NoAppException`` when an\n    ``ImportError`` occurs within the imported application module.\n-   Fix encoding behavior of ``app.config.from_pyfile`` for Python 3.\n    :issue:`2118`\n-   Use the ``SERVER_NAME`` config if it is present as default values\n    for ``app.run``. :issue:`2109`, :pr:`2152`\n-   Call ``ctx.auto_pop`` with the exception object instead of ``None``,\n    in the event that a ``BaseException`` such as ``KeyboardInterrupt``\n    is raised in a request handler.\n\n\nVersion 0.12\n------------\n\nReleased 2016-12-21, codename Punsch\n\n-   The cli command now responds to ``--version``.\n-   Mimetype guessing and ETag generation for file-like objects in\n    ``send_file`` has been removed. :issue:`104`, :pr`1849`\n-   Mimetype guessing in ``send_file`` now fails loudly and doesn't fall\n    back to ``application/octet-stream``. :pr:`1988`\n-   Make ``flask.safe_join`` able to join multiple paths like\n    ``os.path.join`` :pr:`1730`\n-   Revert a behavior change that made the dev server crash instead of\n    returning an Internal Server Error. :pr:`2006`\n-   Correctly invoke response handlers for both regular request\n    dispatching as well as error handlers.\n-   Disable logger propagation by default for the app logger.\n-   Add support for range requests in ``send_file``.\n-   ``app.test_client`` includes preset default environment, which can\n    now be directly set, instead of per ``client.get``.\n-   Fix crash when running under PyPy3. :pr:`1814`\n\n\nVersion 0.11.1\n--------------\n\nReleased 2016-06-07\n\n-   Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from\n    working. :pr:`1872`\n\n\nVersion 0.11\n------------\n\nReleased 2016-05-29, codename Absinthe\n\n-   Added support to serializing top-level arrays to ``jsonify``. This\n    introduces a security risk in ancient browsers.\n-   Added before_render_template signal.\n-   Added ``**kwargs`` to ``Flask.test_client`` to support passing\n    additional keyword arguments to the constructor of\n    ``Flask.test_client_class``.\n-   Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the\n    set-cookie behavior. If set to ``True`` a permanent session will be\n    refreshed each request and get their lifetime extended, if set to\n    ``False`` it will only be modified if the session actually modifies.\n    Non permanent sessions are not affected by this and will always\n    expire if the browser window closes.\n-   Made Flask support custom JSON mimetypes for incoming data.\n-   Added support for returning tuples in the form ``(response,\n    headers)`` from a view function.\n-   Added ``Config.from_json``.\n-   Added ``Flask.config_class``.\n-   Added ``Config.get_namespace``.\n-   Templates are no longer automatically reloaded outside of debug\n    mode. This can be configured with the new ``TEMPLATES_AUTO_RELOAD``\n    config key.\n-   Added a workaround for a limitation in Python 3.3's namespace\n    loader.\n-   Added support for explicit root paths when using Python 3.3's\n    namespace packages.\n-   Added ``flask`` and the ``flask.cli`` module to start the\n    local debug server through the click CLI system. This is recommended\n    over the old ``flask.run()`` method as it works faster and more\n    reliable due to a different design and also replaces\n    ``Flask-Script``.\n-   Error handlers that match specific classes are now checked first,\n    thereby allowing catching exceptions that are subclasses of HTTP\n    exceptions (in ``werkzeug.exceptions``). This makes it possible for\n    an extension author to create exceptions that will by default result\n    in the HTTP error of their choosing, but may be caught with a custom\n    error handler if desired.\n-   Added ``Config.from_mapping``.\n-   Flask will now log by default even if debug is disabled. The log\n    format is now hardcoded but the default log handling can be disabled\n    through the ``LOGGER_HANDLER_POLICY`` configuration key.\n-   Removed deprecated module functionality.\n-   Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when\n    enabled will instruct Flask to explain how it locates templates.\n    This should help users debug when the wrong templates are loaded.\n-   Enforce blueprint handling in the order they were registered for\n    template loading.\n-   Ported test suite to py.test.\n-   Deprecated ``request.json`` in favour of ``request.get_json()``.\n-   Add \"pretty\" and \"compressed\" separators definitions in jsonify()\n    method. Reduces JSON response size when\n    ``JSONIFY_PRETTYPRINT_REGULAR=False`` by removing unnecessary white\n    space included by default after separators.\n-   JSON responses are now terminated with a newline character, because\n    it is a convention that UNIX text files end with a newline and some\n    clients don't deal well when this newline is missing. :pr:`1262`\n-   The automatically provided ``OPTIONS`` method is now correctly\n    disabled if the user registered an overriding rule with the\n    lowercase-version ``options``. :issue:`1288`\n-   ``flask.json.jsonify`` now supports the ``datetime.date`` type.\n    :pr:`1326`\n-   Don't leak exception info of already caught exceptions to context\n    teardown handlers. :pr:`1393`\n-   Allow custom Jinja environment subclasses. :pr:`1422`\n-   Updated extension dev guidelines.\n-   ``flask.g`` now has ``pop()`` and ``setdefault`` methods.\n-   Turn on autoescape for ``flask.templating.render_template_string``\n    by default. :pr:`1515`\n-   ``flask.ext`` is now deprecated. :pr:`1484`\n-   ``send_from_directory`` now raises BadRequest if the filename is\n    invalid on the server OS. :pr:`1763`\n-   Added the ``JSONIFY_MIMETYPE`` configuration variable. :pr:`1728`\n-   Exceptions during teardown handling will no longer leave bad\n    application contexts lingering around.\n-   Fixed broken ``test_appcontext_signals()`` test case.\n-   Raise an ``AttributeError`` in ``helpers.find_package`` with a\n    useful message explaining why it is raised when a :pep:`302` import\n    hook is used without an ``is_package()`` method.\n-   Fixed an issue causing exceptions raised before entering a request\n    or app context to be passed to teardown handlers.\n-   Fixed an issue with query parameters getting removed from requests\n    in the test client when absolute URLs were requested.\n-   Made ``@before_first_request`` into a decorator as intended.\n-   Fixed an etags bug when sending a file streams with a name.\n-   Fixed ``send_from_directory`` not expanding to the application root\n    path correctly.\n-   Changed logic of before first request handlers to flip the flag\n    after invoking. This will allow some uses that are potentially\n    dangerous but should probably be permitted.\n-   Fixed Python 3 bug when a handler from\n    ``app.url_build_error_handlers`` reraises the ``BuildError``.\n\n\nVersion 0.10.1\n--------------\n\nReleased 2013-06-14\n\n-   Fixed an issue where ``|tojson`` was not quoting single quotes which\n    made the filter not work properly in HTML attributes. Now it's\n    possible to use that filter in single quoted attributes. This should\n    make using that filter with angular.js easier.\n-   Added support for byte strings back to the session system. This\n    broke compatibility with the common case of people putting binary\n    data for token verification into the session.\n-   Fixed an issue where registering the same method twice for the same\n    endpoint would trigger an exception incorrectly.\n\n\nVersion 0.10\n------------\n\nReleased 2013-06-13, codename Limoncello\n\n-   Changed default cookie serialization format from pickle to JSON to\n    limit the impact an attacker can do if the secret key leaks.\n-   Added ``template_test`` methods in addition to the already existing\n    ``template_filter`` method family.\n-   Added ``template_global`` methods in addition to the already\n    existing ``template_filter`` method family.\n-   Set the content-length header for x-sendfile.\n-   ``tojson`` filter now does not escape script blocks in HTML5\n    parsers.\n-   ``tojson`` used in templates is now safe by default. This was\n    allowed due to the different escaping behavior.\n-   Flask will now raise an error if you attempt to register a new\n    function on an already used endpoint.\n-   Added wrapper module around simplejson and added default\n    serialization of datetime objects. This allows much easier\n    customization of how JSON is handled by Flask or any Flask\n    extension.\n-   Removed deprecated internal ``flask.session`` module alias. Use\n    ``flask.sessions`` instead to get the session module. This is not to\n    be confused with ``flask.session`` the session proxy.\n-   Templates can now be rendered without request context. The behavior\n    is slightly different as the ``request``, ``session`` and ``g``\n    objects will not be available and blueprint's context processors are\n    not called.\n-   The config object is now available to the template as a real global\n    and not through a context processor which makes it available even in\n    imported templates by default.\n-   Added an option to generate non-ascii encoded JSON which should\n    result in less bytes being transmitted over the network. It's\n    disabled by default to not cause confusion with existing libraries\n    that might expect ``flask.json.dumps`` to return bytes by default.\n-   ``flask.g`` is now stored on the app context instead of the request\n    context.\n-   ``flask.g`` now gained a ``get()`` method for not erroring out on\n    non existing items.\n-   ``flask.g`` now can be used with the ``in`` operator to see what's\n    defined and it now is iterable and will yield all attributes stored.\n-   ``flask.Flask.request_globals_class`` got renamed to\n    ``flask.Flask.app_ctx_globals_class`` which is a better name to what\n    it does since 0.10.\n-   ``request``, ``session`` and ``g`` are now also added as proxies to\n    the template context which makes them available in imported\n    templates. One has to be very careful with those though because\n    usage outside of macros might cause caching.\n-   Flask will no longer invoke the wrong error handlers if a proxy\n    exception is passed through.\n-   Added a workaround for chrome's cookies in localhost not working as\n    intended with domain names.\n-   Changed logic for picking defaults for cookie values from sessions\n    to work better with Google Chrome.\n-   Added ``message_flashed`` signal that simplifies flashing testing.\n-   Added support for copying of request contexts for better working\n    with greenlets.\n-   Removed custom JSON HTTP exception subclasses. If you were relying\n    on them you can reintroduce them again yourself trivially. Using\n    them however is strongly discouraged as the interface was flawed.\n-   Python requirements changed: requiring Python 2.6 or 2.7 now to\n    prepare for Python 3.3 port.\n-   Changed how the teardown system is informed about exceptions. This\n    is now more reliable in case something handles an exception halfway\n    through the error handling process.\n-   Request context preservation in debug mode now keeps the exception\n    information around which means that teardown handlers are able to\n    distinguish error from success cases.\n-   Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable.\n-   Flask now orders JSON keys by default to not trash HTTP caches due\n    to different hash seeds between different workers.\n-   Added ``appcontext_pushed`` and ``appcontext_popped`` signals.\n-   The builtin run method now takes the ``SERVER_NAME`` into account\n    when picking the default port to run on.\n-   Added ``flask.request.get_json()`` as a replacement for the old\n    ``flask.request.json`` property.\n\n\nVersion 0.9\n-----------\n\nReleased 2012-07-01, codename Campari\n\n-   The ``Request.on_json_loading_failed`` now returns a JSON formatted\n    response by default.\n-   The ``url_for`` function now can generate anchors to the generated\n    links.\n-   The ``url_for`` function now can also explicitly generate URL rules\n    specific to a given HTTP method.\n-   Logger now only returns the debug log setting if it was not set\n    explicitly.\n-   Unregister a circular dependency between the WSGI environment and\n    the request object when shutting down the request. This means that\n    environ ``werkzeug.request`` will be ``None`` after the response was\n    returned to the WSGI server but has the advantage that the garbage\n    collector is not needed on CPython to tear down the request unless\n    the user created circular dependencies themselves.\n-   Session is now stored after callbacks so that if the session payload\n    is stored in the session you can still modify it in an after request\n    callback.\n-   The ``Flask`` class will avoid importing the provided import name if\n    it can (the required first parameter), to benefit tools which build\n    Flask instances programmatically. The Flask class will fall back to\n    using import on systems with custom module hooks, e.g. Google App\n    Engine, or when the import name is inside a zip archive (usually an\n    egg) prior to Python 2.7.\n-   Blueprints now have a decorator to add custom template filters\n    application wide, ``Blueprint.app_template_filter``.\n-   The Flask and Blueprint classes now have a non-decorator method for\n    adding custom template filters application wide,\n    ``Flask.add_template_filter`` and\n    ``Blueprint.add_app_template_filter``.\n-   The ``get_flashed_messages`` function now allows rendering flashed\n    message categories in separate blocks, through a ``category_filter``\n    argument.\n-   The ``Flask.run`` method now accepts ``None`` for ``host`` and\n    ``port`` arguments, using default values when ``None``. This allows\n    for calling run using configuration values, e.g.\n    ``app.run(app.config.get('MYHOST'), app.config.get('MYPORT'))``,\n    with proper behavior whether or not a config file is provided.\n-   The ``render_template`` method now accepts a either an iterable of\n    template names or a single template name. Previously, it only\n    accepted a single template name. On an iterable, the first template\n    found is rendered.\n-   Added ``Flask.app_context`` which works very similar to the request\n    context but only provides access to the current application. This\n    also adds support for URL generation without an active request\n    context.\n-   View functions can now return a tuple with the first instance being\n    an instance of ``Response``. This allows for returning\n    ``jsonify(error=\"error msg\"), 400`` from a view function.\n-   ``Flask`` and ``Blueprint`` now provide a ``get_send_file_max_age``\n    hook for subclasses to override behavior of serving static files\n    from Flask when using ``Flask.send_static_file`` (used for the\n    default static file handler) and ``helpers.send_file``. This hook is\n    provided a filename, which for example allows changing cache\n    controls by file extension. The default max-age for ``send_file``\n    and static files can be configured through a new\n    ``SEND_FILE_MAX_AGE_DEFAULT`` configuration variable, which is used\n    in the default ``get_send_file_max_age`` implementation.\n-   Fixed an assumption in sessions implementation which could break\n    message flashing on sessions implementations which use external\n    storage.\n-   Changed the behavior of tuple return values from functions. They are\n    no longer arguments to the response object, they now have a defined\n    meaning.\n-   Added ``Flask.request_globals_class`` to allow a specific class to\n    be used on creation of the ``g`` instance of each request.\n-   Added ``required_methods`` attribute to view functions to force-add\n    methods on registration.\n-   Added ``flask.after_this_request``.\n-   Added ``flask.stream_with_context`` and the ability to push contexts\n    multiple times without producing unexpected behavior.\n\n\nVersion 0.8.1\n-------------\n\nReleased 2012-07-01\n\n-   Fixed an issue with the undocumented ``flask.session`` module to not\n    work properly on Python 2.5. It should not be used but did cause\n    some problems for package managers.\n\n\nVersion 0.8\n-----------\n\nReleased 2011-09-29, codename Rakija\n\n-   Refactored session support into a session interface so that the\n    implementation of the sessions can be changed without having to\n    override the Flask class.\n-   Empty session cookies are now deleted properly automatically.\n-   View functions can now opt out of getting the automatic OPTIONS\n    implementation.\n-   HTTP exceptions and Bad Request errors can now be trapped so that\n    they show up normally in the traceback.\n-   Flask in debug mode is now detecting some common problems and tries\n    to warn you about them.\n-   Flask in debug mode will now complain with an assertion error if a\n    view was attached after the first request was handled. This gives\n    earlier feedback when users forget to import view code ahead of\n    time.\n-   Added the ability to register callbacks that are only triggered once\n    at the beginning of the first request with\n    ``Flask.before_first_request``.\n-   Malformed JSON data will now trigger a bad request HTTP exception\n    instead of a value error which usually would result in a 500\n    internal server error if not handled. This is a backwards\n    incompatible change.\n-   Applications now not only have a root path where the resources and\n    modules are located but also an instance path which is the\n    designated place to drop files that are modified at runtime (uploads\n    etc.). Also this is conceptually only instance depending and outside\n    version control so it's the perfect place to put configuration files\n    etc.\n-   Added the ``APPLICATION_ROOT`` configuration variable.\n-   Implemented ``TestClient.session_transaction`` to easily modify\n    sessions from the test environment.\n-   Refactored test client internally. The ``APPLICATION_ROOT``\n    configuration variable as well as ``SERVER_NAME`` are now properly\n    used by the test client as defaults.\n-   Added ``View.decorators`` to support simpler decorating of pluggable\n    (class-based) views.\n-   Fixed an issue where the test client if used with the \"with\"\n    statement did not trigger the execution of the teardown handlers.\n-   Added finer control over the session cookie parameters.\n-   HEAD requests to a method view now automatically dispatch to the\n    ``get`` method if no handler was implemented.\n-   Implemented the virtual ``flask.ext`` package to import extensions\n    from.\n-   The context preservation on exceptions is now an integral component\n    of Flask itself and no longer of the test client. This cleaned up\n    some internal logic and lowers the odds of runaway request contexts\n    in unittests.\n-   Fixed the Jinja2 environment's ``list_templates`` method not\n    returning the correct names when blueprints or modules were\n    involved.\n\n\nVersion 0.7.2\n-------------\n\nReleased 2011-07-06\n\n-   Fixed an issue with URL processors not properly working on\n    blueprints.\n\n\nVersion 0.7.1\n-------------\n\nReleased 2011-06-29\n\n-   Added missing future import that broke 2.5 compatibility.\n-   Fixed an infinite redirect issue with blueprints.\n\n\nVersion 0.7\n-----------\n\nReleased 2011-06-28, codename Grappa\n\n-   Added ``Flask.make_default_options_response`` which can be used by\n    subclasses to alter the default behavior for ``OPTIONS`` responses.\n-   Unbound locals now raise a proper ``RuntimeError`` instead of an\n    ``AttributeError``.\n-   Mimetype guessing and etag support based on file objects is now\n    deprecated for ``send_file`` because it was unreliable. Pass\n    filenames instead or attach your own etags and provide a proper\n    mimetype by hand.\n-   Static file handling for modules now requires the name of the static\n    folder to be supplied explicitly. The previous autodetection was not\n    reliable and caused issues on Google's App Engine. Until 1.0 the old\n    behavior will continue to work but issue dependency warnings.\n-   Fixed a problem for Flask to run on jython.\n-   Added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be\n    used to flip the setting of exception propagation which previously\n    was linked to ``DEBUG`` alone and is now linked to either ``DEBUG``\n    or ``TESTING``.\n-   Flask no longer internally depends on rules being added through the\n    ``add_url_rule`` function and can now also accept regular werkzeug\n    rules added to the url map.\n-   Added an ``endpoint`` method to the flask application object which\n    allows one to register a callback to an arbitrary endpoint with a\n    decorator.\n-   Use Last-Modified for static file sending instead of Date which was\n    incorrectly introduced in 0.6.\n-   Added ``create_jinja_loader`` to override the loader creation\n    process.\n-   Implemented a silent flag for ``config.from_pyfile``.\n-   Added ``teardown_request`` decorator, for functions that should run\n    at the end of a request regardless of whether an exception occurred.\n    Also the behavior for ``after_request`` was changed. It's now no\n    longer executed when an exception is raised.\n-   Implemented ``has_request_context``.\n-   Deprecated ``init_jinja_globals``. Override the\n    ``Flask.create_jinja_environment`` method instead to achieve the\n    same functionality.\n-   Added ``safe_join``.\n-   The automatic JSON request data unpacking now looks at the charset\n    mimetype parameter.\n-   Don't modify the session on ``get_flashed_messages`` if there are no\n    messages in the session.\n-   ``before_request`` handlers are now able to abort requests with\n    errors.\n-   It is not possible to define user exception handlers. That way you\n    can provide custom error messages from a central hub for certain\n    errors that might occur during request processing (for instance\n    database connection errors, timeouts from remote resources etc.).\n-   Blueprints can provide blueprint specific error handlers.\n-   Implemented generic class-based views.\n\n\nVersion 0.6.1\n-------------\n\nReleased 2010-12-31\n\n-   Fixed an issue where the default ``OPTIONS`` response was not\n    exposing all valid methods in the ``Allow`` header.\n-   Jinja2 template loading syntax now allows \"./\" in front of a\n    template load path. Previously this caused issues with module\n    setups.\n-   Fixed an issue where the subdomain setting for modules was ignored\n    for the static folder.\n-   Fixed a security problem that allowed clients to download arbitrary\n    files if the host server was a windows based operating system and\n    the client uses backslashes to escape the directory the files where\n    exposed from.\n\n\nVersion 0.6\n-----------\n\nReleased 2010-07-27, codename Whisky\n\n-   After request functions are now called in reverse order of\n    registration.\n-   OPTIONS is now automatically implemented by Flask unless the\n    application explicitly adds 'OPTIONS' as method to the URL rule. In\n    this case no automatic OPTIONS handling kicks in.\n-   Static rules are now even in place if there is no static folder for\n    the module. This was implemented to aid GAE which will remove the\n    static folder if it's part of a mapping in the .yml file.\n-   ``Flask.config`` is now available in the templates as ``config``.\n-   Context processors will no longer override values passed directly to\n    the render function.\n-   Added the ability to limit the incoming request data with the new\n    ``MAX_CONTENT_LENGTH`` configuration value.\n-   The endpoint for the ``Module.add_url_rule`` method is now optional\n    to be consistent with the function of the same name on the\n    application object.\n-   Added a ``make_response`` function that simplifies creating response\n    object instances in views.\n-   Added signalling support based on blinker. This feature is currently\n    optional and supposed to be used by extensions and applications. If\n    you want to use it, make sure to have ``blinker`` installed.\n-   Refactored the way URL adapters are created. This process is now\n    fully customizable with the ``Flask.create_url_adapter`` method.\n-   Modules can now register for a subdomain instead of just an URL\n    prefix. This makes it possible to bind a whole module to a\n    configurable subdomain.\n\n\nVersion 0.5.2\n-------------\n\nReleased 2010-07-15\n\n-   Fixed another issue with loading templates from directories when\n    modules were used.\n\n\nVersion 0.5.1\n-------------\n\nReleased 2010-07-06\n\n-   Fixes an issue with template loading from directories when modules\n    where used.\n\n\nVersion 0.5\n-----------\n\nReleased 2010-07-06, codename Calvados\n\n-   Fixed a bug with subdomains that was caused by the inability to\n    specify the server name. The server name can now be set with the\n    ``SERVER_NAME`` config key. This key is now also used to set the\n    session cookie cross-subdomain wide.\n-   Autoescaping is no longer active for all templates. Instead it is\n    only active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``. Inside\n    templates this behavior can be changed with the ``autoescape`` tag.\n-   Refactored Flask internally. It now consists of more than a single\n    file.\n-   ``send_file`` now emits etags and has the ability to do conditional\n    responses builtin.\n-   (temporarily) dropped support for zipped applications. This was a\n    rarely used feature and led to some confusing behavior.\n-   Added support for per-package template and static-file directories.\n-   Removed support for ``create_jinja_loader`` which is no longer used\n    in 0.5 due to the improved module support.\n-   Added a helper function to expose files from any directory.\n\n\nVersion 0.4\n-----------\n\nReleased 2010-06-18, codename Rakia\n\n-   Added the ability to register application wide error handlers from\n    modules.\n-   ``Flask.after_request`` handlers are now also invoked if the request\n    dies with an exception and an error handling page kicks in.\n-   Test client has not the ability to preserve the request context for\n    a little longer. This can also be used to trigger custom requests\n    that do not pop the request stack for testing.\n-   Because the Python standard library caches loggers, the name of the\n    logger is configurable now to better support unittests.\n-   Added ``TESTING`` switch that can activate unittesting helpers.\n-   The logger switches to ``DEBUG`` mode now if debug is enabled.\n\n\nVersion 0.3.1\n-------------\n\nReleased 2010-05-28\n\n-   Fixed a error reporting bug with ``Config.from_envvar``.\n-   Removed some unused code.\n-   Release does no longer include development leftover files (.git\n    folder for themes, built documentation in zip and pdf file and some\n    .pyc files)\n\n\nVersion 0.3\n-----------\n\nReleased 2010-05-28, codename Schnaps\n\n-   Added support for categories for flashed messages.\n-   The application now configures a ``logging.Handler`` and will log\n    request handling exceptions to that logger when not in debug mode.\n    This makes it possible to receive mails on server errors for\n    example.\n-   Added support for context binding that does not require the use of\n    the with statement for playing in the console.\n-   The request context is now available within the with statement\n    making it possible to further push the request context or pop it.\n-   Added support for configurations.\n\n\nVersion 0.2\n-----------\n\nReleased 2010-05-12, codename J?germeister\n\n-   Various bugfixes\n-   Integrated JSON support\n-   Added ``get_template_attribute`` helper function.\n-   ``Flask.add_url_rule`` can now also register a view function.\n-   Refactored internal request dispatching.\n-   Server listens on 127.0.0.1 by default now to fix issues with\n    chrome.\n-   Added external URL support.\n-   Added support for ``send_file``.\n-   Module support and internal request handling refactoring to better\n    support pluggable applications.\n-   Sessions can be set to be permanent now on a per-session basis.\n-   Better error reporting on missing secret keys.\n-   Added support for Google Appengine.\n\n\nVersion 0.1\n-----------\n\nReleased 2010-04-16\n\n-   First public preview release.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.44,
          "content": "Copyright 2010 Pallets\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n1.  Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n2.  Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n3.  Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.45,
          "content": "# Flask\n\nFlask is a lightweight [WSGI] web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around [Werkzeug]\nand [Jinja], and has become one of the most popular Python web\napplication frameworks.\n\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\n[WSGI]: https://wsgi.readthedocs.io/\n[Werkzeug]: https://werkzeug.palletsprojects.com/\n[Jinja]: https://jinja.palletsprojects.com/\n\n## A Simple Example\n\n```python\n# save this as app.py\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello, World!\"\n```\n\n```\n$ flask run\n  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\n## Donate\n\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, [please\ndonate today].\n\n[please donate today]: https://palletsprojects.com/donate\n\n## Contributing\n\nSee our [detailed contributing documentation][contrib] for many ways to\ncontribute, including reporting issues, requesting features, asking or answering\nquestions, and making PRs.\n\n[contrib]: https://palletsprojects.com/contributing/\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.64,
          "content": "[project]\nname = \"Flask\"\nversion = \"3.2.0.dev\"\ndescription = \"A simple framework for building complex web applications.\"\nreadme = \"README.md\"\nlicense = {file = \"LICENSE.txt\"}\nmaintainers = [{name = \"Pallets\", email = \"contact@palletsprojects.com\"}]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Framework :: Flask\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n    \"Topic :: Internet :: WWW/HTTP :: WSGI\",\n    \"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n    \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n    \"Typing :: Typed\",\n]\nrequires-python = \">=3.9\"\ndependencies = [\n    \"Werkzeug>=3.1\",\n    \"Jinja2>=3.1.2\",\n    \"itsdangerous>=2.2\",\n    \"click>=8.1.3\",\n    \"blinker>=1.9\",\n    \"importlib-metadata>=3.6; python_version < '3.10'\",\n]\n\n[project.urls]\nDonate = \"https://palletsprojects.com/donate\"\nDocumentation = \"https://flask.palletsprojects.com/\"\nChanges = \"https://flask.palletsprojects.com/changes/\"\nSource = \"https://github.com/pallets/flask/\"\nChat = \"https://discord.gg/pallets\"\n\n[project.optional-dependencies]\nasync = [\"asgiref>=3.2\"]\ndotenv = [\"python-dotenv\"]\n\n[project.scripts]\nflask = \"flask.cli:main\"\n\n[build-system]\nrequires = [\"flit_core<4\"]\nbuild-backend = \"flit_core.buildapi\"\n\n[tool.flit.module]\nname = \"flask\"\n\n[tool.flit.sdist]\ninclude = [\n    \"docs/\",\n    \"examples/\",\n    \"requirements/\",\n    \"tests/\",\n    \"CHANGES.rst\",\n    \"CONTRIBUTING.rst\",\n    \"tox.ini\",\n]\nexclude = [\n    \"docs/_build/\",\n]\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\nfilterwarnings = [\n    \"error\",\n]\n\n[tool.coverage.run]\nbranch = true\nsource = [\"flask\", \"tests\"]\n\n[tool.coverage.paths]\nsource = [\"src\", \"*/site-packages\"]\n\n[tool.mypy]\npython_version = \"3.9\"\nfiles = [\"src/flask\", \"tests/type_check\"]\nshow_error_codes = true\npretty = true\nstrict = true\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"asgiref.*\",\n    \"dotenv.*\",\n    \"cryptography.*\",\n    \"importlib_metadata\",\n]\nignore_missing_imports = true\n\n[tool.pyright]\npythonVersion = \"3.9\"\ninclude = [\"src/flask\", \"tests/type_check\"]\ntypeCheckingMode = \"basic\"\n\n[tool.ruff]\nsrc = [\"src\"]\nfix = true\nshow-fixes = true\noutput-format = \"full\"\n\n[tool.ruff.lint]\nselect = [\n    \"B\",  # flake8-bugbear\n    \"E\",  # pycodestyle error\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"UP\",  # pyupgrade\n    \"W\",  # pycodestyle warning\n]\n\n[tool.ruff.lint.isort]\nforce-single-line = true\norder-by-type = false\n\n[tool.gha-update]\ntag-only = [\n    \"slsa-framework/slsa-github-generator\",\n]\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.31,
          "content": "[tox]\nenvlist =\n    py3{13,12,11,10,9}\n    pypy310\n    py313-min\n    py39-dev\n    style\n    typing\n    docs\nskip_missing_interpreters = true\n\n[testenv]\npackage = wheel\nwheel_build_env = .pkg\nenvtmpdir = {toxworkdir}/tmp/{envname}\nconstrain_package_deps = true\nuse_frozen_constraints = true\ndeps =\n    -r requirements/tests.txt\n    min: -r requirements/tests-min.txt\n    dev: -r requirements/tests-dev.txt\ncommands = pytest -v --tb=short --basetemp={envtmpdir} {posargs}\n\n[testenv:style]\ndeps = pre-commit\nskip_install = true\ncommands = pre-commit run --all-files\n\n[testenv:typing]\ndeps = -r requirements/typing.txt\ncommands =\n    mypy\n    pyright\n\n[testenv:docs]\ndeps = -r requirements/docs.txt\ncommands = sphinx-build -E -W -b dirhtml docs docs/_build/dirhtml\n\n[testenv:update-actions]\nlabels = update\ndeps = gha-update\nskip_install = true\ncommands = gha-update\n\n[testenv:update-pre_commit]\nlabels = update\ndeps = pre-commit\nskip_install = true\ncommands = pre-commit autoupdate -j4\n\n[testenv:update-requirements]\nlabels = update\ndeps = pip-tools\nskip_install = true\nchange_dir = requirements\ncommands =\n    pip-compile build.in -q {posargs:-U}\n    pip-compile docs.in -q {posargs:-U}\n    pip-compile tests.in -q {posargs:-U}\n    pip-compile tests-min.in -q\n    pip-compile typing.in -q {posargs:-U}\n    pip-compile dev.in -q {posargs:-U}\n"
        }
      ]
    },
    {
      "nameWithOwner": "Anduin2017/HowToCook",
      "stars": 68515,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08,
          "content": "# Dependency directories\nnode_modules/\n.history\n.DS_Store\nsite/\n\n.idea\n*.iml\nmkdocs.yml"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.12,
          "content": "{\n    \"MD036\": false,\n    \"MD024\": false,\n    \"MD004\": false,\n    \"MD029\": false,\n    \"MD013\": false,\n    \"MD007\": false\n}"
        },
        {
          "name": ".textlintrc",
          "type": "blob",
          "size": 0.15,
          "content": "{\n  \"filters\": {},\n  \"rules\": {\n    \"ja-space-between-half-and-full-width\": {\n      \"space\": \"always\"\n    },\n    \"zh-half-and-full-width-bracket\": true\n  }\n}"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.93,
          "content": "# 行为准则\n\n## 我们为什么坚持维护这个仓库\n\n有很多朋友问我，为什么要维护这个仓库？为什么坚持精准的菜谱？未来这个仓库打算怎么发展？有没有想流量变现？我想在这里给出我(@Anduin2017)自己的答案，并明确贡献的价值观。\n\n我们有很强的基础设施建设能力。例如：我们有健身 App，有手环，有医疗平台，有买菜平台，有外卖平台，有智能冰箱，有智能体重秤、智能跑步机等等……但是我却总需要花费特别多的精力周旋和计算于它们之间。这些基础设施彼此之间沟通能力特别差。\n\n曾经幻想在未来的世界，人类不再需要关心柴米油盐，吃什么的问题将彻底得到解决。我们每天的行为可以完全由计算机给出最佳方案。\n\n例如：医生建议我在 50 天内减肥 15 斤。那么这些应用收到了医疗平台的结论，会联动起来。为我设计健身计划，自动计算我应该吃的饭菜，自动把冰箱里缺的东西点过来，自动避免过期，自动计算推荐建议的饭菜，自动帮我计算热量的摄入和消耗，自动确保我吃的足够多样好吃而且能够满足我的健康要求，并且自动根据我的体重秤测量的结果矫正等。\n\n这是一个理想的生命管理体系。需要非常多的基础设施联合，来让人真正实现不需要操心这些柴米油盐，只专注于自己的喜爱的事情就行了。至于每天吃什么、几点吃、吃多少、怎么好吃、怎么健康、怎么完成我的健身要求，怎么符合医生的建议等等……完全由计算机帮人全部搞好就行了。\n\n或许，建设这种生命健康的系统，成本极高，而且很难盈利。我们现在还是在专注于解决问题:遇到疾病之后再去医院，而没有一个程序真正帮我管理了健康。\n\n当然理想还是要有的，希望有一天计算机能够帮助人类消灭疾病。而那时，我希望我的仓库，能够是这一整套复杂的生命系统中的一块可靠又强大的螺丝钉，忠实的承担它那最初的使命：\n\n> 提供一份足够精准的菜谱。\n\n对于额外的附加功能开发、可视化、智能化、平台对接、饮食产业等，均可以引用这个仓库中的菜谱，二次开发。\n\n## 仓库原则\n\n仓库的发展原则：维持其精准的特点，尽可能在保证阅读的同时，统一格式，方便二次开发。\n\n### 弱协议\n\n我希望能够有商业公司、饭店、企业或科研机构能够引用这个仓库。因此它将始终坚持一个较弱的许可协议。它会作为一个基础设施，未来应用在更多更复杂的产品和场景中。\n\n任何人都可以自由复制，修改，发布，使用，编译，出售或以菜谱的形式或菜的形式分发，无论是出于商业目的还是非商目的，以及任何手段。\n\n### 尽可能形式化\n\n尽可能形式化，包括统一菜谱的文件格式，避免不精准（尤其是计算机无法理解）的单位和操作，保持清晰的目录结构等。\n\n很多贡献者抱怨：想签入菜谱太难，要求太繁琐。但实际上这份菜谱更多的不是给人类阅读的，而是更多的可能会被机器处理。\n\n我们一定要保证，按照同一份菜谱做菜，不同的人也能得到几乎相同的结果。\n\n### 非商业\n\nHowToCook 将永远不插入广告，尽可能避免菜谱中的材料耦合特定品牌，尽可能使用容易取得的原材料。\n\nHowToCook 将永远不讨论变现问题。并且永远由社区驱动的维护下去。\n\n### AI 友好\n\n社区可以使用这个仓库训练任何类型的 AI ，并且允许商业使用。\n\n## 衍生产物\n\n目前社区中有许多基于 HowToCook 二次开发的小程序、App、网站等。\n\nHowToCook 仓库与任何衍生产物没有任何合作关系和知情义务。所有衍生产物的行为准则并不受 HowToCook 的行为准则约束，也不代表 HowToCook 仓库的价值观。\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.28,
          "content": "# 如何贡献\n\n## 简介\n\n直接修改/添加做菜指南并提交 Pull request 即可。\n\n在写新菜谱时，请复制并修改已有的模板: [示例菜](./dishes/template/示例菜/示例菜.md)。\n\n我们建议在贡献之前，阅读仓库的[行为守则](./CODE_OF_CONDUCT.md)。\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7,
          "content": "# ============================\n# Prepare lint Environment\nFROM hub.aiursoft.cn/node:21-alpine as lint-env\nWORKDIR /app\nCOPY . .\nRUN npm install --loglevel verbose\nRUN npm run build\nRUN npm run lint\n\n# ============================\n# Prepare Build Environment\nFROM hub.aiursoft.cn/python:3.11 as python-env\nWORKDIR /app\nCOPY --from=lint-env /app .\nRUN apt-get update && apt-get install -y weasyprint fonts-noto-cjk wget unzip\nRUN rm node_modules -rf && pip install -r requirements.txt\nRUN mkdocs build\n\n# ============================\n# Prepare Runtime Environment\nFROM hub.aiursoft.cn/aiursoft/static\nCOPY --from=python-env /app/site /data\n\nLABEL org.opencontainers.image.source=\"https://github.com/Anduin2017/HowToCook\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.18,
          "content": "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <https://unlicense.org>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.21,
          "content": "# 程序员做饭指南\n\n[![build](https://github.com/Anduin2017/HowToCook/actions/workflows/build.yml/badge.svg)](https://github.com/Anduin2017/HowToCook/actions/workflows/build.yml)\n[![License](https://img.shields.io/github/license/Anduin2017/HowToCook)](./LICENSE)\n[![GitHub contributors](https://img.shields.io/github/contributors/Anduin2017/HowToCook)](https://github.com/Anduin2017/HowToCook/graphs/contributors)\n[![npm](https://img.shields.io/npm/v/how-to-cook)](https://www.npmjs.com/package/how-to-cook)\n![Man hours](https://manhours.aiursoft.cn/r/github.com/anduin2017/howtocook.svg)\n[![Docker](https://img.shields.io/badge/docker-latest-blue?logo=docker)](https://github.com/Anduin2017/HowToCook/pkgs/container/how-to-cook)\n\n最近在家隔离，出不了门。只能宅在家做饭了。作为程序员，我偶尔在网上找找菜谱和做法。但是这些菜谱往往写法千奇百怪，经常中间莫名出来一些材料。对于习惯了形式语言的程序员来说极其不友好。\n\n所以，我计划自己搜寻菜谱并结合实际做菜的经验，准备用更清晰精准的描述来整理常见菜的做法，以方便程序员在家做饭。\n\n同样，我希望它是一个由社区驱动和维护的开源项目，使更多人能够一起做一个有趣的仓库。所以非常欢迎大家贡献它~\n\n## 本地部署\n\n如果需要在本地部署菜谱 Web 服务，可以在安装 Docker 后运行下面命令：\n\n```bash\ndocker pull ghcr.io/anduin2017/how-to-cook:latest\ndocker run -d -p 5000:5000 ghcr.io/anduin2017/how-to-cook:latest\n```\n\n如需下载 PDF 版本，可以在浏览器中访问 [/document.pdf](https://cook.aiursoft.cn/document.pdf)\n\n## 如何贡献\n\n针对发现的问题，直接修改并提交 Pull request 即可。\n\n在写新菜谱时，请复制并修改已有的菜谱模板: [示例菜](https://github.com/Anduin2017/HowToCook/blob/master/dishes/template/%E7%A4%BA%E4%BE%8B%E8%8F%9C/%E7%A4%BA%E4%BE%8B%E8%8F%9C.md?plain=1)。\n\n## 做菜之前\n\n- [厨房准备](tips/厨房准备.md)\n- [如何选择现在吃什么](tips/如何选择现在吃什么.md)\n- [高压力锅](tips/learn/高压力锅.md)\n- [空气炸锅](tips/learn/空气炸锅.md)\n- [去腥](tips/learn/去腥.md)\n- [食品安全](tips/learn/食品安全.md)\n- [微波炉](tips/learn/微波炉.md)\n- [学习焯水](tips/learn/学习焯水.md)\n- [学习炒与煎](tips/learn/学习炒与煎.md)\n- [学习凉拌](tips/learn/学习凉拌.md)\n- [学习腌](tips/learn/学习腌.md)\n- [学习蒸](tips/learn/学习蒸.md)\n- [学习煮](tips/learn/学习煮.md)\n\n## 菜谱\n\n### 按难度索引\n\n- [0 星难度](starsystem/0Star.md)\n- [1 星难度](starsystem/1Star.md)\n- [2 星难度](starsystem/2Star.md)\n- [3 星难度](starsystem/3Star.md)\n- [4 星难度](starsystem/4Star.md)\n- [5 星难度](starsystem/5Star.md)\n\n### 素菜\n\n- [拔丝土豆](dishes/vegetable_dish/拔丝土豆/拔丝土豆.md)\n- [白灼菜心](dishes/vegetable_dish/白灼菜心/白灼菜心.md)\n- [包菜炒鸡蛋粉丝](dishes/vegetable_dish/包菜炒鸡蛋粉丝/包菜炒鸡蛋粉丝.md)\n- [菠菜炒鸡蛋](dishes/vegetable_dish/菠菜炒鸡蛋/菠菜炒鸡蛋.md)\n- [炒滑蛋](dishes/vegetable_dish/炒滑蛋/炒滑蛋.md)\n- [炒茄子](dishes/vegetable_dish/炒茄子.md)\n- [炒青菜](dishes/vegetable_dish/炒青菜.md)\n- [葱煎豆腐](dishes/vegetable_dish/葱煎豆腐.md)\n- [脆皮豆腐](dishes/vegetable_dish/脆皮豆腐.md)\n- [地三鲜](dishes/vegetable_dish/地三鲜.md)\n- [干锅花菜](dishes/vegetable_dish/干锅花菜/干锅花菜.md)\n- [蚝油三鲜菇](dishes/vegetable_dish/蚝油三鲜菇/蚝油三鲜菇.md)\n- [蚝油生菜](dishes/vegetable_dish/蚝油生菜.md)\n- [红烧冬瓜](dishes/vegetable_dish/红烧冬瓜/红烧冬瓜.md)\n- [红烧茄子](dishes/vegetable_dish/红烧茄子.md)\n- [虎皮青椒](dishes/vegetable_dish/虎皮青椒/虎皮青椒.md)\n- [话梅煮毛豆](dishes/vegetable_dish/话梅煮毛豆/话梅煮毛豆.md)\n- [鸡蛋羹](dishes/vegetable_dish/鸡蛋羹/鸡蛋羹.md)\n- [微波炉鸡蛋羹](dishes/vegetable_dish/鸡蛋羹/微波炉鸡蛋羹.md)\n- [蒸箱鸡蛋羹](dishes/vegetable_dish/鸡蛋羹/蒸箱鸡蛋羹.md)\n- [鸡蛋火腿炒黄瓜](dishes/vegetable_dish/鸡蛋火腿炒黄瓜.md)\n- [茄子炖土豆](dishes/vegetable_dish/茄子炖土豆.md)\n- [茭白炒肉](dishes/vegetable_dish/茭白炒肉/茭白炒肉.md)\n- [椒盐玉米](dishes/vegetable_dish/椒盐玉米/椒盐玉米.md)\n- [金针菇日本豆腐煲](dishes/vegetable_dish/金针菇日本豆腐煲.md)\n- [烤茄子](dishes/vegetable_dish/烤茄子/烤茄子.md)\n- [榄菜肉末四季豆](dishes/vegetable_dish/榄菜肉末四季豆/榄菜肉末四季豆.md)\n- [雷椒皮蛋](dishes/vegetable_dish/雷椒皮蛋.md)\n- [凉拌黄瓜](dishes/vegetable_dish/凉拌黄瓜.md)\n- [凉拌木耳](dishes/vegetable_dish/凉拌木耳/凉拌木耳.md)\n- [凉拌莴笋](dishes/vegetable_dish/凉拌莴笋/凉拌莴笋.md)\n- [凉拌油麦菜](dishes/vegetable_dish/凉拌油麦菜.md)\n- [蒲烧茄子](dishes/vegetable_dish/蒲烧茄子.md)\n- [芹菜拌茶树菇](dishes/vegetable_dish/芹菜拌茶树菇/芹菜拌茶树菇.md)\n- [陕北熬豆角](dishes/vegetable_dish/陕北熬豆角.md)\n- [上汤娃娃菜](dishes/vegetable_dish/上汤娃娃菜/上汤娃娃菜.md)\n- [手撕包菜](dishes/vegetable_dish/手撕包菜/手撕包菜.md)\n- [水油焖蔬菜](dishes/vegetable_dish/水油焖蔬菜.md)\n- [素炒豆角](dishes/vegetable_dish/素炒豆角.md)\n- [酸辣土豆丝](dishes/vegetable_dish/酸辣土豆丝.md)\n- [糖拌西红柿](dishes/vegetable_dish/糖拌西红柿/糖拌西红柿.md)\n- [莴笋叶煎饼](dishes/vegetable_dish/莴笋叶煎饼/莴笋叶煎饼.md)\n- [西红柿炒鸡蛋](dishes/vegetable_dish/西红柿炒鸡蛋.md)\n- [西红柿豆腐汤羹](dishes/vegetable_dish/西红柿豆腐汤羹/西红柿豆腐汤羹.md)\n- [西葫芦炒鸡蛋](dishes/vegetable_dish/西葫芦炒鸡蛋/西葫芦炒鸡蛋.md)\n- [小炒藕丁](dishes/vegetable_dish/小炒藕丁/小炒藕丁.md)\n- [洋葱炒鸡蛋](dishes/vegetable_dish/洋葱炒鸡蛋/洋葱炒鸡蛋.md)\n\n### 荤菜\n\n- [白菜猪肉炖粉条](dishes/meat_dish/白菜猪肉炖粉条.md)\n- [带把肘子](dishes/meat_dish/带把肘子.md)\n- [冬瓜酿肉](dishes/meat_dish/冬瓜酿肉/冬瓜酿肉.md)\n- [番茄红酱](dishes/meat_dish/番茄红酱.md)\n- [干煸仔鸡](dishes/meat_dish/干煸仔鸡/干煸仔鸡.md)\n- [宫保鸡丁](dishes/meat_dish/宫保鸡丁/宫保鸡丁.md)\n- [咕噜肉](dishes/meat_dish/咕噜肉.md)\n- [广式萝卜牛腩](dishes/meat_dish/广式萝卜牛腩/广式萝卜牛腩.md)\n- [荷兰豆炒腊肠](dishes/meat_dish/荷兰豆炒腊肠/荷兰豆炒腊肠.md)\n- [黑椒牛柳](dishes/meat_dish/黑椒牛柳/黑椒牛柳.md)\n- [简易红烧肉](dishes/meat_dish/红烧肉/简易红烧肉.md)\n- [南派红烧肉](dishes/meat_dish/红烧肉/南派红烧肉.md)\n- [红烧猪蹄](dishes/meat_dish/红烧猪蹄/红烧猪蹄.md)\n- [湖南家常红烧肉](dishes/meat_dish/湖南家常红烧肉/湖南家常红烧肉.md)\n- [黄瓜炒肉](dishes/meat_dish/黄瓜炒肉.md)\n- [黄焖鸡](dishes/meat_dish/黄焖鸡.md)\n- [徽派红烧肉](dishes/meat_dish/徽派红烧肉/徽派红烧肉.md)\n- [回锅肉](dishes/meat_dish/回锅肉/回锅肉.md)\n- [尖椒炒牛肉](dishes/meat_dish/尖椒炒牛肉.md)\n- [尖叫牛蛙](dishes/meat_dish/尖叫牛蛙/尖叫牛蛙.md)\n- [姜炒鸡](dishes/meat_dish/姜炒鸡/姜炒鸡.md)\n- [姜葱捞鸡](dishes/meat_dish/姜葱捞鸡/姜葱捞鸡.md)\n- [酱牛肉](dishes/meat_dish/酱牛肉/酱牛肉.md)\n- [酱排骨](dishes/meat_dish/酱排骨/酱排骨.md)\n- [椒盐排条](dishes/meat_dish/椒盐排条.md)\n- [咖喱肥牛](dishes/meat_dish/咖喱肥牛/咖喱肥牛.md)\n- [烤鸡翅](dishes/meat_dish/烤鸡翅.md)\n- [可乐鸡翅](dishes/meat_dish/可乐鸡翅.md)\n- [口水鸡](dishes/meat_dish/口水鸡/口水鸡.md)\n- [辣椒炒肉](dishes/meat_dish/辣椒炒肉.md)\n- [老妈蹄花](dishes/meat_dish/老妈蹄花/老妈蹄花.md)\n- [老式锅包肉](dishes/meat_dish/老式锅包肉/老式锅包肉.md)\n- [冷吃兔](dishes/meat_dish/冷吃兔.md)\n- [荔枝肉](dishes/meat_dish/荔枝肉/荔枝肉.md)\n- [凉拌鸡丝](dishes/meat_dish/凉拌鸡丝/凉拌鸡丝.md)\n- [萝卜炖羊排](dishes/meat_dish/萝卜炖羊排.md)\n- [麻辣香锅](dishes/meat_dish/麻辣香锅.md)\n- [麻婆豆腐](dishes/meat_dish/麻婆豆腐/麻婆豆腐.md)\n- [梅菜扣肉](dishes/meat_dish/梅菜扣肉/梅菜扣肉.md)\n- [奶酪培根通心粉](dishes/meat_dish/奶酪培根通心粉/奶酪培根通心粉.md)\n- [啤酒鸭](dishes/meat_dish/啤酒鸭/啤酒鸭.md)\n- [黔式腊肠娃娃菜](dishes/meat_dish/黔式腊肠娃娃菜/黔式腊肠娃娃菜.md)\n- [青椒土豆炒肉](dishes/meat_dish/青椒土豆炒肉/青椒土豆炒肉.md)\n- [肉饼炖蛋](dishes/meat_dish/肉饼炖蛋.md)\n- [杀猪菜](dishes/meat_dish/杀猪菜.md)\n- [山西过油肉](dishes/meat_dish/山西过油肉.md)\n- [商芝肉](dishes/meat_dish/商芝肉.md)\n- [瘦肉土豆片](dishes/meat_dish/瘦肉土豆片/瘦肉土豆片.md)\n- [水煮牛肉](dishes/meat_dish/水煮牛肉/水煮牛肉.md)\n- [水煮肉片](dishes/meat_dish/水煮肉片.md)\n- [蒜苔炒肉末](dishes/meat_dish/蒜苔炒肉末.md)\n- [台式卤肉饭](dishes/meat_dish/台式卤肉饭/台式卤肉饭.md)\n- [糖醋里脊](dishes/meat_dish/糖醋里脊.md)\n- [糖醋排骨](dishes/meat_dish/糖醋排骨/糖醋排骨.md)\n- [土豆炖排骨](dishes/meat_dish/土豆炖排骨/土豆炖排骨.md)\n- [无骨鸡爪](dishes/meat_dish/无骨鸡爪/无骨鸡爪.md)\n- [西红柿牛腩](dishes/meat_dish/西红柿牛腩/西红柿牛腩.md)\n- [西红柿土豆炖牛肉](dishes/meat_dish/西红柿土豆炖牛肉/西红柿土豆炖牛肉.md)\n- [乡村啤酒鸭](dishes/meat_dish/乡村啤酒鸭.md)\n- [香干芹菜炒肉](dishes/meat_dish/香干芹菜炒肉/香干芹菜炒肉.md)\n- [香干肉丝](dishes/meat_dish/香干肉丝.md)\n- [香菇滑鸡](dishes/meat_dish/香菇滑鸡/香菇滑鸡.md)\n- [香煎五花肉](dishes/meat_dish/香煎五花肉/香煎五花肉.md)\n- [香辣鸡爪煲](dishes/meat_dish/香辣鸡爪煲/香辣鸡爪煲.md)\n- [湘祁米夫鸭](dishes/meat_dish/湘祁米夫鸭/湘祁米夫鸭.md)\n- [小炒黄牛肉](dishes/meat_dish/小炒黄牛肉/小炒黄牛肉.md)\n- [小炒鸡肝](dishes/meat_dish/小炒鸡肝/小炒鸡肝.md)\n- [小炒肉](dishes/meat_dish/小炒肉.md)\n- [小米辣炒肉](dishes/meat_dish/小米辣炒肉.md)\n- [小酥肉](dishes/meat_dish/小酥肉.md)\n- [新疆大盘鸡](dishes/meat_dish/新疆大盘鸡/新疆大盘鸡.md)\n- [血浆鸭](dishes/meat_dish/血浆鸭/血浆鸭.md)\n- [羊排焖面](dishes/meat_dish/羊排焖面/羊排焖面.md)\n- [洋葱炒猪肉](dishes/meat_dish/洋葱炒猪肉.md)\n- [意式烤鸡](dishes/meat_dish/意式烤鸡.md)\n- [鱼香茄子](dishes/meat_dish/鱼香茄子/鱼香茄子.md)\n- [鱼香肉丝](dishes/meat_dish/鱼香肉丝.md)\n- [枝竹羊腩煲](dishes/meat_dish/枝竹羊腩煲/枝竹羊腩煲.md)\n- [猪皮冻](dishes/meat_dish/猪皮冻/猪皮冻.md)\n- [猪肉烩酸菜](dishes/meat_dish/猪肉烩酸菜.md)\n- [柱候牛腩](dishes/meat_dish/柱候牛腩/柱候牛腩.md)\n- [孜然牛肉](dishes/meat_dish/孜然牛肉.md)\n- [醉排骨](dishes/meat_dish/醉排骨/醉排骨.md)\n\n### 水产\n\n- [白灼虾](dishes/aquatic/白灼虾/白灼虾.md)\n- [鳊鱼炖豆腐](dishes/aquatic/鳊鱼炖豆腐/鳊鱼炖豆腐.md)\n- [蛏抱蛋](dishes/aquatic/蛏抱蛋/蛏抱蛋.md)\n- [葱烧海参](dishes/aquatic/葱烧海参/葱烧海参.md)\n- [葱油桂鱼](dishes/aquatic/葱油桂鱼/葱油桂鱼.md)\n- [干煎阿根廷红虾](dishes/aquatic/干煎阿根廷红虾/干煎阿根廷红虾.md)\n- [红烧鲤鱼](dishes/aquatic/红烧鲤鱼.md)\n- [红烧鱼](dishes/aquatic/红烧鱼.md)\n- [红烧鱼头](dishes/aquatic/红烧鱼头.md)\n- [黄油煎虾](dishes/aquatic/黄油煎虾/黄油煎虾.md)\n- [烤鱼](dishes/aquatic/混合烤鱼/烤鱼.md)\n- [芥末黄油罗氏虾](dishes/aquatic/芥末黄油罗氏虾/芥末黄油罗氏虾.md)\n- [芥末黄油罗氏虾](dishes/aquatic/芥末黄油罗氏虾.md)\n- [咖喱炒蟹](dishes/aquatic/咖喱炒蟹.md)\n- [鲤鱼炖白菜](dishes/aquatic/鲤鱼炖白菜/鲤鱼炖白菜.md)\n- [清蒸鲈鱼](dishes/aquatic/清蒸鲈鱼/清蒸鲈鱼.md)\n- [清蒸生蚝](dishes/aquatic/清蒸生蚝.md)\n- [水煮鱼](dishes/aquatic/水煮鱼.md)\n- [蒜蓉虾](dishes/aquatic/蒜蓉虾/蒜蓉虾.md)\n- [糖醋鲤鱼](dishes/aquatic/糖醋鲤鱼/糖醋鲤鱼.md)\n- [微波葱姜黑鳕鱼](dishes/aquatic/微波葱姜黑鳕鱼.md)\n- [香煎翘嘴鱼](dishes/aquatic/香煎翘嘴鱼/香煎翘嘴鱼.md)\n- [小龙虾](dishes/aquatic/小龙虾/小龙虾.md)\n- [油焖大虾](dishes/aquatic/油焖大虾/油焖大虾.md)\n\n### 早餐\n\n- [茶叶蛋](dishes/breakfast/茶叶蛋.md)\n- [蛋煎糍粑](dishes/breakfast/蛋煎糍粑.md)\n- [桂圆红枣粥](dishes/breakfast/桂圆红枣粥.md)\n- [鸡蛋三明治](dishes/breakfast/鸡蛋三明治.md)\n- [煎饺](dishes/breakfast/煎饺.md)\n- [金枪鱼酱三明治](dishes/breakfast/金枪鱼酱三明治.md)\n- [空气炸锅面包片](dishes/breakfast/空气炸锅面包片.md)\n- [美式炒蛋](dishes/breakfast/美式炒蛋.md)\n- [牛奶燕麦](dishes/breakfast/牛奶燕麦.md)\n- [水煮玉米](dishes/breakfast/水煮玉米.md)\n- [苏格兰蛋](dishes/breakfast/苏格兰蛋/苏格兰蛋.md)\n- [太阳蛋](dishes/breakfast/太阳蛋.md)\n- [溏心蛋](dishes/breakfast/溏心蛋.md)\n- [吐司果酱](dishes/breakfast/吐司果酱.md)\n- [微波炉蛋糕](dishes/breakfast/微波炉蛋糕.md)\n- [微波炉荷包蛋](dishes/breakfast/微波炉荷包蛋.md)\n- [温泉蛋](dishes/breakfast/温泉蛋/温泉蛋.md)\n- [燕麦鸡蛋饼](dishes/breakfast/燕麦鸡蛋饼.md)\n- [蒸花卷](dishes/breakfast/蒸花卷.md)\n- [蒸水蛋](dishes/breakfast/蒸水蛋.md)\n\n### 主食\n\n- [炒方便面](dishes/staple/炒方便面.md)\n- [炒河粉](dishes/staple/炒河粉.md)\n- [炒凉粉](dishes/staple/炒凉粉/炒凉粉.md)\n- [炒馍](dishes/staple/炒馍.md)\n- [炒年糕](dishes/staple/炒年糕.md)\n- [炒意大利面](dishes/staple/炒意大利面/炒意大利面.md)\n- [蛋炒饭](dishes/staple/蛋炒饭.md)\n- [豆角焖面](dishes/staple/豆角焖面/豆角焖面.md)\n- [韩式拌饭](dishes/staple/韩式拌饭/韩式拌饭.md)\n- [河南蒸面条](dishes/staple/河南蒸面条/河南蒸面条.md)\n- [火腿饭团](dishes/staple/火腿饭团/火腿饭团.md)\n- [基础牛奶面包](dishes/staple/基础牛奶面包/基础牛奶面包.md)\n- [茄子肉煎饼](dishes/staple/茄子肉煎饼/茄子肉煎饼.md)\n- [鲣鱼海苔玉米饭](dishes/staple/鲣鱼海苔玉米饭/鲣鱼海苔玉米饭.md)\n- [酱拌荞麦面](dishes/staple/酱拌荞麦面/酱拌荞麦面.md)\n- [韭菜盒子](dishes/staple/韭菜盒子.md)\n- [空气炸锅照烧鸡饭](dishes/staple/空气炸锅照烧鸡饭/空气炸锅照烧鸡饭.md)\n- [醪糟小汤圆](dishes/staple/醪糟小汤圆.md)\n- [老干妈拌面](dishes/staple/老干妈拌面.md)\n- [老友猪肉粉](dishes/staple/老友猪肉粉/老友猪肉粉.md)\n- [烙饼](dishes/staple/烙饼/烙饼.md)\n- [凉粉](dishes/staple/凉粉/凉粉.md)\n- [麻辣减脂荞麦面](dishes/staple/麻辣减脂荞麦面.md)\n- [麻油拌面](dishes/staple/麻油拌面.md)\n- [电饭煲蒸米饭](dishes/staple/米饭/电饭煲蒸米饭.md)\n- [煮锅蒸米饭](dishes/staple/米饭/煮锅蒸米饭.md)\n- [披萨饼皮](dishes/staple/披萨饼皮/披萨饼皮.md)\n- [热干面](dishes/staple/热干面.md)\n- [日式肥牛丼饭](dishes/staple/日式肥牛丼饭/日式肥牛丼饭.md)\n- [日式咖喱饭](dishes/staple/日式咖喱饭/日式咖喱饭.md)\n- [芝麻烧饼](dishes/staple/烧饼/芝麻烧饼.md)\n- [手工水饺](dishes/staple/手工水饺.md)\n- [酸辣蕨根粉](dishes/staple/酸辣蕨根粉.md)\n- [汤面](dishes/staple/汤面.md)\n- [微波炉腊肠煲仔饭](dishes/staple/微波炉腊肠煲仔饭/微波炉腊肠煲仔饭.md)\n- [西红柿鸡蛋挂面](dishes/staple/西红柿鸡蛋挂面/西红柿鸡蛋挂面.md)\n- [扬州炒饭](dishes/staple/扬州炒饭/扬州炒饭.md)\n- [炸酱面](dishes/staple/炸酱面.md)\n- [蒸卤面](dishes/staple/蒸卤面.md)\n- [中式馅饼](dishes/staple/中式馅饼/中式馅饼.md)\n- [煮泡面加蛋](dishes/staple/煮泡面加蛋.md)\n\n### 半成品加工\n\n- [半成品意面](dishes/semi-finished/半成品意面.md)\n- [空气炸锅鸡翅中](dishes/semi-finished/空气炸锅鸡翅中/空气炸锅鸡翅中.md)\n- [空气炸锅羊排](dishes/semi-finished/空气炸锅羊排/空气炸锅羊排.md)\n- [懒人蛋挞](dishes/semi-finished/懒人蛋挞/懒人蛋挞.md)\n- [凉皮](dishes/semi-finished/凉皮.md)\n- [牛油火锅底料](dishes/semi-finished/牛油火锅底料.md)\n- [速冻馄饨](dishes/semi-finished/速冻馄饨.md)\n- [速冻水饺](dishes/semi-finished/速冻水饺.md)\n- [速冻汤圆](dishes/semi-finished/速冻汤圆/速冻汤圆.md)\n- [炸薯条](dishes/semi-finished/炸薯条/炸薯条.md)\n\n### 汤与粥\n\n- [昂刺鱼豆腐汤](dishes/soup/昂刺鱼豆腐汤/昂刺鱼豆腐汤.md)\n- [陈皮排骨汤](dishes/soup/陈皮排骨汤/陈皮排骨汤.md)\n- [陈皮排骨汤](dishes/soup/陈皮排骨汤.md)\n- [番茄牛肉蛋花汤](dishes/soup/番茄牛肉蛋花汤.md)\n- [勾芡香菇汤](dishes/soup/勾芡香菇汤/勾芡香菇汤.md)\n- [金针菇汤](dishes/soup/金针菇汤.md)\n- [菌菇炖乳鸽](dishes/soup/菌菇炖乳鸽/菌菇炖乳鸽.md)\n- [罗宋汤](dishes/soup/罗宋汤.md)\n- [米粥](dishes/soup/米粥.md)\n- [排骨苦瓜汤](dishes/soup/排骨苦瓜汤/排骨苦瓜汤.md)\n- [皮蛋瘦肉粥](dishes/soup/皮蛋瘦肉粥.md)\n- [生汆丸子汤](dishes/soup/生汆丸子汤.md)\n- [西红柿鸡蛋汤](dishes/soup/西红柿鸡蛋汤.md)\n- [小米粥](dishes/soup/小米粥.md)\n- [银耳莲子粥](dishes/soup/银耳莲子粥/银耳莲子粥.md)\n- [玉米排骨汤](dishes/soup/玉米排骨汤/玉米排骨汤.md)\n- [紫菜蛋花汤](dishes/soup/紫菜蛋花汤.md)\n\n### 饮料\n\n- [耙耙柑茶](dishes/drink/耙耙柑茶/耙耙柑茶.md)\n- [百香果橙子特调](dishes/drink/百香果橙子特调/百香果橙子特调.md)\n- [冰粉](dishes/drink/冰粉/冰粉.md)\n- [菠萝咖啡特调](dishes/drink/菠萝咖啡特调/菠萝咖啡特调.md)\n- [冬瓜茶](dishes/drink/冬瓜茶.md)\n- [金菲士](dishes/drink/金菲士/金菲士.md)\n- [金汤力](dishes/drink/金汤力/金汤力.md)\n- [可乐桶](dishes/drink/可乐桶.md)\n- [奶茶](dishes/drink/奶茶.md)\n- [奇异果菠菜特调](dishes/drink/奇异果菠菜特调/奇异果菠菜特调.md)\n- [砂糖椰子冰沙](dishes/drink/砂糖椰子冰沙/砂糖椰子冰沙.md)\n- [酸梅汤](dishes/drink/酸梅汤/酸梅汤.md)\n- [酸梅汤（半成品加工）](dishes/drink/酸梅汤（半成品加工）.md)\n- [泰国手标红茶](dishes/drink/泰国手标红茶/泰国手标红茶.md)\n- [杨枝甘露](dishes/drink/杨枝甘露.md)\n- [长岛冰茶](dishes/drink/长岛冰茶.md)\n- [B52轰炸机](dishes/drink/B52轰炸机.md)\n- [Mojito莫吉托](dishes/drink/Mojito莫吉托.md)\n\n### 酱料和其它材料\n\n- [草莓酱](dishes/condiment/草莓酱/草莓酱.md)\n- [葱油](dishes/condiment/葱油.md)\n- [蒜香酱油](dishes/condiment/蒜香酱油.md)\n- [糖醋汁](dishes/condiment/糖醋汁.md)\n- [糖色](dishes/condiment/糖色.md)\n- [油泼辣子](dishes/condiment/油泼辣子/油泼辣子.md)\n- [油酥](dishes/condiment/油酥.md)\n- [炸串酱料](dishes/condiment/炸串酱料.md)\n- [蔗糖糖浆](dishes/condiment/蔗糖糖浆/蔗糖糖浆.md)\n\n### 甜品\n\n- [奥利奥冰淇淋](dishes/dessert/奥利奥冰淇淋/奥利奥冰淇淋.md)\n- [草莓冰淇淋](dishes/dessert/草莓冰淇淋/草莓冰淇淋.md)\n- [反沙芋头](dishes/dessert/反沙芋头/反沙芋头.md)\n- [咖啡椰奶冻](dishes/dessert/咖啡椰奶冻/咖啡椰奶冻.md)\n- [烤蛋挞](dishes/dessert/烤蛋挞/烤蛋挞.md)\n- [玛格丽特饼干](dishes/dessert/玛格丽特饼干/玛格丽特饼干.md)\n- [魔芋蛋糕](dishes/dessert/魔芋蛋糕/魔芋蛋糕.md)\n- [戚风蛋糕](dishes/dessert/戚风蛋糕/戚风蛋糕.md)\n- [酸奶意式奶冻](dishes/dessert/酸奶意式奶冻/酸奶意式奶冻.md)\n- [提拉米苏](dishes/dessert/提拉米苏/提拉米苏.md)\n- [雪花酥](dishes/dessert/雪花酥/雪花酥.md)\n- [英式司康](dishes/dessert/英式司康/英式司康.md)\n- [芋泥雪媚娘](dishes/dessert/芋泥雪媚娘/芋泥雪媚娘.md)\n- [炸鲜奶](dishes/dessert/炸鲜奶/炸鲜奶.md)\n\n## 进阶知识学习\n\n如果你已经做了许多上面的菜，对于厨艺已经入门，并且想学习更加高深的烹饪技巧，请继续阅读下面的内容：\n\n- [辅料技巧](tips/advanced/辅料技巧.md)\n- [高级专业术语](tips/advanced/高级专业术语.md)\n- [油温判断技巧](tips/advanced/油温判断技巧.md)\n"
        },
        {
          "name": "dishes",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 143.54,
          "content": "{\n  \"name\": \"how-to-cook\",\n  \"version\": \"1.4.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"how-to-cook\",\n      \"version\": \"1.4.0\",\n      \"license\": \"Unlicense\",\n      \"dependencies\": {\n        \"markdownlint-cli\": \"0.41.0\",\n        \"textlint\": \"^12.1.0\",\n        \"textlint-rule-ja-space-between-half-and-full-width\": \"^2.2.0\",\n        \"textlint-rule-zh-half-and-full-width-bracket\": \"^1.1.0\"\n      },\n      \"devDependencies\": {\n        \"glob\": \"^7.2.0\"\n      }\n    },\n    \"node_modules/@azu/format-text\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@azu/format-text/-/format-text-1.0.2.tgz\",\n      \"integrity\": \"sha512-Swi4N7Edy1Eqq82GxgEECXSSLyn6GOb5htRFPzBDdUkECGXtlf12ynO5oJSpWKPwCaUssOu7NfhDcCWpIC6Ywg==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/@azu/style-format\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@azu/style-format/-/style-format-1.0.1.tgz\",\n      \"integrity\": \"sha512-AHcTojlNBdD/3/KxIKlg8sxIWHfOtQszLvOpagLTO+bjC3u7SAszu1lf//u7JJC50aUSH+BVWDD/KvaA6Gfn5g==\",\n      \"license\": \"WTFPL\",\n      \"dependencies\": {\n        \"@azu/format-text\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/@babel/runtime-corejs3\": {\n      \"version\": \"7.24.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime-corejs3/-/runtime-corejs3-7.24.7.tgz\",\n      \"integrity\": \"sha512-eytSX6JLBY6PVAeQa2bFlDx/7Mmln/gaEpsit5a3WEvjGfiIytEsgAwuIXCPM0xvw0v0cJn3ilq0/TvXrW0kgA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"core-js-pure\": \"^3.30.2\",\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@isaacs/cliui/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@textlint/ast-node-types\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/ast-node-types/-/ast-node-types-12.6.1.tgz\",\n      \"integrity\": \"sha512-uzlJ+ZsCAyJm+lBi7j0UeBbj+Oy6w/VWoGJ3iHRHE5eZ8Z4iK66mq+PG/spupmbllLtz77OJbY89BYqgFyjXmA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@textlint/ast-tester\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/ast-tester/-/ast-tester-12.6.1.tgz\",\n      \"integrity\": \"sha512-Gxiq6xmDR3PnX0RqRGth/Lu5fyFWoXNPfGxXTLORPFpfs8JKPh/eXGhlwc1f0v4VQzPay2KwVl6SGXvJD5qLXw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\"\n      }\n    },\n    \"node_modules/@textlint/ast-traverse\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/ast-traverse/-/ast-traverse-12.6.1.tgz\",\n      \"integrity\": \"sha512-Y/j7ip7yDuTjuIV4kTRPVnkJKfpI71U+eqXFnrM9sE2xBA9IsqzqiLQeDY+S5hhfQzmcEnZFtAP0hqrYaT6gNA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\"\n      }\n    },\n    \"node_modules/@textlint/config-loader\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/config-loader/-/config-loader-12.6.1.tgz\",\n      \"integrity\": \"sha512-mvChF2pFusxyQC4gFzIgNcZ4izUt7ci+JdXZtGV+DOzykVUuGhgGo3TFTi/ccgYyqZdq9MxJG6I+dvYB1A2Fog==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/kernel\": \"^12.6.1\",\n        \"@textlint/module-interop\": \"^12.6.1\",\n        \"@textlint/types\": \"^12.6.1\",\n        \"@textlint/utils\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\",\n        \"rc-config-loader\": \"^4.1.2\",\n        \"try-resolve\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/@textlint/config-loader/node_modules/rc-config-loader\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/rc-config-loader/-/rc-config-loader-4.1.3.tgz\",\n      \"integrity\": \"sha512-kD7FqML7l800i6pS6pvLyIE2ncbk9Du8Q0gp/4hMPhJU6ZxApkoLcGD8ZeqgiAlfwZ6BlETq6qqe+12DUL207w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json5\": \"^2.2.2\",\n        \"require-from-string\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/@textlint/feature-flag\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/feature-flag/-/feature-flag-12.6.1.tgz\",\n      \"integrity\": \"sha512-cY/AraTLdzbwDyAhdpaXB7n1Lw6zA+k+7UaT8mmxMmjs0uYGzdMQa499I0rQatctJ6izrdZXYW0NdUQfG2ugiA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@textlint/fixer-formatter\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/fixer-formatter/-/fixer-formatter-12.6.1.tgz\",\n      \"integrity\": \"sha512-BMhvoKQbME9LXvl6CfIM/hZckb+IMiAA6ioDvdM3o63N+xDypS42uzJNpRgzXKGYL1Dv/7R1hsmDzz3fgvGhBw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/module-interop\": \"^12.6.1\",\n        \"@textlint/types\": \"^12.6.1\",\n        \"chalk\": \"^4.1.2\",\n        \"debug\": \"^4.3.4\",\n        \"diff\": \"^4.0.2\",\n        \"is-file\": \"^1.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\",\n        \"try-resolve\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/@textlint/kernel\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/kernel/-/kernel-12.6.1.tgz\",\n      \"integrity\": \"sha512-GjNaI36pYx/boy1Xf7NPJFbS0uWHhY9y9DMMl/8ZJZoldN7XrCvJFivNdeYQxu+LTmfGGaUJoTjDpnllOs6XSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\",\n        \"@textlint/ast-tester\": \"^12.6.1\",\n        \"@textlint/ast-traverse\": \"^12.6.1\",\n        \"@textlint/feature-flag\": \"^12.6.1\",\n        \"@textlint/source-code-fixer\": \"^12.6.1\",\n        \"@textlint/types\": \"^12.6.1\",\n        \"@textlint/utils\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\",\n        \"deep-equal\": \"^1.1.1\",\n        \"structured-source\": \"^4.0.0\"\n      }\n    },\n    \"node_modules/@textlint/linter-formatter\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/linter-formatter/-/linter-formatter-12.6.1.tgz\",\n      \"integrity\": \"sha512-1fQy17vNZy5qem8I71MGEir7gVLSUWcIE4ruQbONiIko9as+AYibt6xX6GtTX+aJejuJJcb+KTeAxKJ+6FA8vg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@azu/format-text\": \"^1.0.1\",\n        \"@azu/style-format\": \"^1.0.0\",\n        \"@textlint/module-interop\": \"^12.6.1\",\n        \"@textlint/types\": \"^12.6.1\",\n        \"chalk\": \"^4.1.2\",\n        \"debug\": \"^4.3.4\",\n        \"is-file\": \"^1.0.0\",\n        \"js-yaml\": \"^3.14.1\",\n        \"lodash\": \"^4.17.21\",\n        \"optionator\": \"^0.9.1\",\n        \"pluralize\": \"^2.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"table\": \"^6.8.1\",\n        \"text-table\": \"^0.2.0\",\n        \"try-resolve\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/@textlint/linter-formatter/node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/@textlint/linter-formatter/node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/@textlint/markdown-to-ast\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/markdown-to-ast/-/markdown-to-ast-12.6.1.tgz\",\n      \"integrity\": \"sha512-T0HO+VrU9VbLRiEx/kH4+gwGMHNMIGkp0Pok+p0I33saOOLyhfGvwOKQgvt2qkxzQEV2L5MtGB8EnW4r5d3CqQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\",\n        \"mdast-util-gfm-autolink-literal\": \"^0.1.3\",\n        \"remark-footnotes\": \"^3.0.0\",\n        \"remark-frontmatter\": \"^3.0.0\",\n        \"remark-gfm\": \"^1.0.0\",\n        \"remark-parse\": \"^9.0.0\",\n        \"traverse\": \"^0.6.7\",\n        \"unified\": \"^9.2.2\"\n      }\n    },\n    \"node_modules/@textlint/module-interop\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/module-interop/-/module-interop-12.6.1.tgz\",\n      \"integrity\": \"sha512-COyRctLVh2ktAObmht3aNtqUvP0quoellKu1c2RrXny1po+Mf7PkvEKIxphtArE4JXMAmu01cDxfH6X88+eYIg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@textlint/regexp-string-matcher\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/regexp-string-matcher/-/regexp-string-matcher-2.0.2.tgz\",\n      \"integrity\": \"sha512-OXLD9XRxMhd3S0LWuPHpiARQOI7z9tCOs0FsynccW2lmyZzHHFJ9/eR6kuK9xF459Qf+740qI5h+/0cx+NljzA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"lodash.sortby\": \"^4.7.0\",\n        \"lodash.uniq\": \"^4.5.0\",\n        \"lodash.uniqwith\": \"^4.5.0\"\n      }\n    },\n    \"node_modules/@textlint/source-code-fixer\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/source-code-fixer/-/source-code-fixer-12.6.1.tgz\",\n      \"integrity\": \"sha512-J9UZ3uitT+T50ug5X6AoIOwn6kTl54ZmPYBPB9bmH4lwBamN7e4gT65lSweHY1D21elOkq+3bO/OAJMfQfAVHg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/types\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\"\n      }\n    },\n    \"node_modules/@textlint/text-to-ast\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/text-to-ast/-/text-to-ast-12.6.1.tgz\",\n      \"integrity\": \"sha512-22tgSBaNerpwb66eCivjXmdZ3CDX2Il38vpuAGchiI+cl+sENU9dpuntxwEJdZQePX5qrkmw8XGj5kgyMF015A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\"\n      }\n    },\n    \"node_modules/@textlint/textlint-plugin-markdown\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/textlint-plugin-markdown/-/textlint-plugin-markdown-12.6.1.tgz\",\n      \"integrity\": \"sha512-fRKsFCL2fGeu0Bt+08FuEc2WHiI8IMDRvy6KT1pmNWO5irS4yL2/OXNknLH3erXvwcJw/hQnd5WEl4hQzS0Erw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/markdown-to-ast\": \"^12.6.1\"\n      }\n    },\n    \"node_modules/@textlint/textlint-plugin-text\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/textlint-plugin-text/-/textlint-plugin-text-12.6.1.tgz\",\n      \"integrity\": \"sha512-ZUfG0Xb8qGymIPNp2eFTq9bHvkJo3N3Ia1Aff5W9fsgZib1/Eb55U16Sp60TjhBFns0/p7L7usBC3nd3+tB5mQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/text-to-ast\": \"^12.6.1\"\n      }\n    },\n    \"node_modules/@textlint/types\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/types/-/types-12.6.1.tgz\",\n      \"integrity\": \"sha512-t1SZYahu2olnF8MUhlP6qDIEDyl7WmyIaBYxQdE2qU6xUkZWXS2zIxoAT/pVgvFCzDw3KO5HhIYGVeWRp90dTg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\"\n      }\n    },\n    \"node_modules/@textlint/utils\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/utils/-/utils-12.6.1.tgz\",\n      \"integrity\": \"sha512-HJkqYXT2FAAHDM5XLFpQLF/CEdm8c2ltMeKmPBSSty1VfPXQMi8tGPT1b58b8KWh6dVmi7w0YYB7NrquuzXOKA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/mdast\": {\n      \"version\": \"3.0.15\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mdast/-/mdast-3.0.15.tgz\",\n      \"integrity\": \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2\"\n      }\n    },\n    \"node_modules/@types/unist\": {\n      \"version\": \"2.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/unist/-/unist-2.0.10.tgz\",\n      \"integrity\": \"sha512-IfYcSBWE3hLpBg8+X2SEa8LVkJdJEkT2Ese2aaLs3ptGdVtABxndrMaxuFlQ1qdFf9Q5rDvDpxI3WwgvKFAsQA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"8.16.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.16.0.tgz\",\n      \"integrity\": \"sha512-F0twR8U1ZU67JIEtekUcLkXkoO5mMMmgGD8sK/xUFzJ805jxHQl92hImFAqqXMyMYjSPOyUPAwHYhB72g5sTXw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.4.1\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"license\": \"Python-2.0\"\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz\",\n      \"integrity\": \"sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.22.3\",\n        \"es-errors\": \"^1.2.1\",\n        \"get-intrinsic\": \"^1.2.3\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/astral-regex\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz\",\n      \"integrity\": \"sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n      \"integrity\": \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/bail\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/bail/-/bail-1.0.5.tgz\",\n      \"integrity\": \"sha512-xFbRxM1tahm08yHBP16MMjVUAvDaBMD38zsM9EMAUN61omwLmKlOpB/Zku5QkjZ8TZ4vn53pj+t518cH0S03RQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/boundary\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/boundary/-/boundary-2.0.0.tgz\",\n      \"integrity\": \"sha512-rJKn5ooC9u8q13IMCrW0RSp31pxBCHE3y9V/tp3TdWSLf8Em3p6Di4NBpfzbJge9YjjFEsD0RtFEjtvHL5VyEA==\",\n      \"license\": \"BSD-2-Clause\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/ccount\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ccount/-/ccount-1.1.0.tgz\",\n      \"integrity\": \"sha512-vlNK021QdI7PNeiUh/lKkC/mNHHfV0m/Ad5JoI0TYtlBnJAslM/JIkm/tGC88bkLIwO6OQ5uV6ztS6kVAtCDlg==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/character-entities\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities/-/character-entities-1.2.4.tgz\",\n      \"integrity\": \"sha512-iBMyeEHxfVnIakwOuDXpVkc54HijNgCyQB2w0VfGQThle6NXn50zU6V/u+LDhxHcDUPojn6Kpga3PTAD8W1bQw==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/character-entities-legacy\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-entities-legacy/-/character-entities-legacy-1.1.4.tgz\",\n      \"integrity\": \"sha512-3Xnr+7ZFS1uxeiUDvV02wQ+QDbc55o97tIV5zHScSPJpcLm/r0DFPcoY3tYRp+VZukxuMeKgXYmsXQHO05zQeA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/character-reference-invalid\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/character-reference-invalid/-/character-reference-invalid-1.1.4.tgz\",\n      \"integrity\": \"sha512-mKKUkUbhPpQlCOfIuZkvSEgktjPFIsZKRRbC6KWVEMvlzblj3i3asQv5ODsrwt0N3pHAEvjP8KTQPHkp0+6jOg==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/charenc\": {\n      \"version\": \"0.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz\",\n      \"integrity\": \"sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/commander\": {\n      \"version\": \"12.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-12.1.0.tgz\",\n      \"integrity\": \"sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/core-js-pure\": {\n      \"version\": \"3.37.1\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.37.1.tgz\",\n      \"integrity\": \"sha512-J/r5JTHSmzTxbiYYrzXg9w1VpqrYt+gexenBE9pugeyhwPZTAEJddyiReJWsLO6uNQ8xJZFbod6XC7KKwatCiA==\",\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/crypt\": {\n      \"version\": \"0.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz\",\n      \"integrity\": \"sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/data-view-buffer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz\",\n      \"integrity\": \"sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-offset\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz\",\n      \"integrity\": \"sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.5.tgz\",\n      \"integrity\": \"sha512-pt0bNEmneDIvdL1Xsd9oDQ/wrQRkXDT4AUWlNZNPKvW5x/jyO9VFXkJUP07vQ2upmw5PlaITaPKc31jK13V+jg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/deep-equal\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.2.tgz\",\n      \"integrity\": \"sha512-5tdhKF6DbU7iIzrIOa1AOUt39ZRm13cmL1cGEh//aqR8x9+tNfbywRf0n5FD/18OKMdo7DNEtrX2t22ZAkI+eg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-arguments\": \"^1.1.1\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"regexp.prototype.flags\": \"^1.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/deep-extend\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz\",\n      \"integrity\": \"sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/diff\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-4.0.2.tgz\",\n      \"integrity\": \"sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/entities\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-4.5.0.tgz\",\n      \"integrity\": \"sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==\",\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">=0.12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/entities?sponsor=1\"\n      }\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz\",\n      \"integrity\": \"sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"arraybuffer.prototype.slice\": \"^1.0.3\",\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"data-view-buffer\": \"^1.0.1\",\n        \"data-view-byte-length\": \"^1.0.1\",\n        \"data-view-byte-offset\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"get-symbol-description\": \"^1.0.2\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.2\",\n        \"internal-slot\": \"^1.0.7\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-data-view\": \"^1.0.1\",\n        \"is-negative-zero\": \"^2.0.3\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.3\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.13.1\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.5\",\n        \"regexp.prototype.flags\": \"^1.5.2\",\n        \"safe-array-concat\": \"^1.1.2\",\n        \"safe-regex-test\": \"^1.0.3\",\n        \"string.prototype.trim\": \"^1.2.9\",\n        \"string.prototype.trimend\": \"^1.0.8\",\n        \"string.prototype.trimstart\": \"^1.0.8\",\n        \"typed-array-buffer\": \"^1.0.2\",\n        \"typed-array-byte-length\": \"^1.0.1\",\n        \"typed-array-byte-offset\": \"^1.0.2\",\n        \"typed-array-length\": \"^1.0.6\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.15\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz\",\n      \"integrity\": \"sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz\",\n      \"integrity\": \"sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"license\": \"BSD-2-Clause\",\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fault\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/fault/-/fault-1.0.4.tgz\",\n      \"integrity\": \"sha512-CJ0HCB5tL5fYTEA7ToAq5+kTwd++Borf1/bifxd9iT70QcXr4MRrO3Llf8Ifs70q+SJcGHFtnIE/Nw6giCtECA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"format\": \"^0.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz\",\n      \"integrity\": \"sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flat-cache\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz\",\n      \"integrity\": \"sha512-NWzkk0jSJtTt08+FBFMvXoeZnOJD+jTtsRmBYbAIzJdX6l7dLgR7CTubCM5/eDdPUBvLCeVasP1brfVR/9/EZQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"locate-path\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz\",\n      \"integrity\": \"sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"flatted\": \"^2.0.0\",\n        \"rimraf\": \"2.6.3\",\n        \"write\": \"1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-2.0.2.tgz\",\n      \"integrity\": \"sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i+75zmd8jcKdMR4O6jA==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.2.1.tgz\",\n      \"integrity\": \"sha512-PXUUyLqrR2XCWICfv6ukppP96sdFwWbNEnfEMt7jNsISjMsvaLNinAHNDYyvkyU+SZG2BTSbT5NjG+vZslfGTA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/format\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/format/-/format-0.2.2.tgz\",\n      \"integrity\": \"sha512-wzsgA6WOq+09wrU1tsJ09udeR/YZRaeArL9e1wPbFg3GG2yDnC2ldKpxs4xunpFF9DgqCqOIra3bc1HWrJ37Ww==\",\n      \"engines\": {\n        \"node\": \">=0.4.x\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz\",\n      \"integrity\": \"sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"functions-have-names\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-stdin\": {\n      \"version\": \"9.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stdin/-/get-stdin-9.0.0.tgz\",\n      \"integrity\": \"sha512-dVKBjfWisLAicarI2Sf+JuBE/DghV4UzNAVe9yhEJuzeREd3JhOTE9cUaJTeSa77fsbQUK3pcOpJfM59+VKZaA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz\",\n      \"integrity\": \"sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz\",\n      \"integrity\": \"sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-properties\": \"^1.2.1\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/hosted-git-info\": {\n      \"version\": \"2.8.9\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n      \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.1.tgz\",\n      \"integrity\": \"sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/ini\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-4.1.3.tgz\",\n      \"integrity\": \"sha512-X7rqawQBvfdjS10YU1y1YVreA3SsLrW9dX2CewP2EbBJM4ypVNLDkO5y04gejPwKIY9lR+7r9gn3rFPt/kmWFg==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz\",\n      \"integrity\": \"sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"hasown\": \"^2.0.0\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/is-alphabetical\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphabetical/-/is-alphabetical-1.0.4.tgz\",\n      \"integrity\": \"sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-alphanumerical\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-alphanumerical/-/is-alphanumerical-1.0.4.tgz\",\n      \"integrity\": \"sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-alphabetical\": \"^1.0.0\",\n        \"is-decimal\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz\",\n      \"integrity\": \"sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz\",\n      \"integrity\": \"sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-buffer\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",\n      \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-data-view\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz\",\n      \"integrity\": \"sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-decimal\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-decimal/-/is-decimal-1.0.4.tgz\",\n      \"integrity\": \"sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-file\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-file/-/is-file-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZGMuc+xA8mRnrXtmtf2l/EkIW2zaD2LSBWlaOVEF6yH4RTndHob65V4SwWWdtGKVthQfXPVKsXqw4TDUjbVxVQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-hexadecimal\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-hexadecimal/-/is-hexadecimal-1.0.4.tgz\",\n      \"integrity\": \"sha512-gyPJuv83bHMpocVYoqof5VDiZveEoGoFL8m3BXNb2VW8Xs+rz9kqO8LOQ5DH6EsuvilT1ApazU0pyl+ytbPtlw==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz\",\n      \"integrity\": \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz\",\n      \"integrity\": \"sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz\",\n      \"integrity\": \"sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.14\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-utf8\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz\",\n      \"integrity\": \"sha512-rMYPYvCzsXywIsldgLaSoPlw5PfoB/ssr7hY4pLfcodrA5M/eArza1a9VmTiNIBNMjOGr1Ow9mTyU2o69U6U9Q==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"3.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.0.tgz\",\n      \"integrity\": \"sha512-JVYhQnN59LVPFCEcVa2C3CrEKYacvjRfqIQl+h8oi91aLYQVWRYbxjPcv1bUiUy/kLmQaANrYfNMCO3kuEDHfw==\",\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/json-parse-better-errors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz\",\n      \"integrity\": \"sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jsonc-parser\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsonc-parser/-/jsonc-parser-3.2.1.tgz\",\n      \"integrity\": \"sha512-AilxAyFOAcK5wA1+LeaySVBrHsGQvUFCDWXKpZjzaL0PqW+xfBOttn8GNtWKFWqneyMZj41MWF9Kl6iPWLwgOA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonpointer\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsonpointer/-/jsonpointer-5.0.1.tgz\",\n      \"integrity\": \"sha512-p/nXbhSEcu3pZRdkW1OfJhpsVtW1gd4Wa1fnQc9YLiTfAjn0312eMKimbdIQzuZl9aa9xUGaRlP9T/CJE/ditQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/linkify-it\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/linkify-it/-/linkify-it-5.0.0.tgz\",\n      \"integrity\": \"sha512-5aHCbzQRADcdP+ATqnDuhhJ/MRIqDkZX5pyjFHRRysS8vZ5AbqGEoFIb6pYHPZ+L/OC2Lc+xT8uHVVR5CAK/wQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"uc.micro\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/load-json-file\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz\",\n      \"integrity\": \"sha512-cy7ZdNRXdablkXYNI049pthVeXFurRyb9+hA/dZzerZ0pGTx42z+y+ssxBaVV2l70t1muq5IdKhn4UtcoGUY9A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"parse-json\": \"^2.2.0\",\n        \"pify\": \"^2.0.0\",\n        \"pinkie-promise\": \"^2.0.0\",\n        \"strip-bom\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz\",\n      \"integrity\": \"sha512-NCI2kiDkyR7VeEKm27Kda/iQHyKJe1Bu0FlTbYp3CqJu+9IFe9bLyAjMxf5ZDDbEg+iMPzB5zYyUTSm8wVTKmA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-locate\": \"^2.0.0\",\n        \"path-exists\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.sortby\": {\n      \"version\": \"4.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz\",\n      \"integrity\": \"sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.truncate\": {\n      \"version\": \"4.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.truncate/-/lodash.truncate-4.4.2.tgz\",\n      \"integrity\": \"sha512-jttmRe7bRse52OsWIMDLaXxWqRAmtIUccAQ3garviCqJjafXOfNMO0yMfNpdD6zbGaTU0P5Nz7e7gAT6cKmJRw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.uniq\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz\",\n      \"integrity\": \"sha512-xfBaXQd9ryd9dlSDvnvI0lvxfLJlYAZzXomUYzLKtUeOQvOP5piqAWuGtrhWeqaXK9hhoM/iyJc5AV+XfsX3HQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.uniqwith\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.uniqwith/-/lodash.uniqwith-4.5.0.tgz\",\n      \"integrity\": \"sha512-7lYL8bLopMoy4CTICbxygAUq6CdRJ36vFc80DucPueUee+d5NBRxz3FdT9Pes/HEx5mPoT9jwnsEJWz1N7uq7Q==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/longest-streak\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/longest-streak/-/longest-streak-2.0.4.tgz\",\n      \"integrity\": \"sha512-vM6rUVCVUJJt33bnmHiZEvr7wPT78ztX7rojL+LW51bHtLh6HTjx84LA5W4+oa6aKEJA7jJu5LR6vQRBpA5DVg==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"10.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.2.2.tgz\",\n      \"integrity\": \"sha512-9hp3Vp2/hFQUiIwKo8XCeFVnrg8Pk3TYNPIR7tJADKi5YfcF7vEaK7avFHTlSy3kOKYaJQaalfEo6YuXdceBOQ==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/markdown-it\": {\n      \"version\": \"14.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-it/-/markdown-it-14.1.0.tgz\",\n      \"integrity\": \"sha512-a54IwgWPaeBCAAsv13YgmALOF1elABB08FxO9i+r4VFk5Vl4pKokRPeX8u5TCgSsPi6ec1otfLjdOpVcgbpshg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\",\n        \"entities\": \"^4.4.0\",\n        \"linkify-it\": \"^5.0.0\",\n        \"mdurl\": \"^2.0.0\",\n        \"punycode.js\": \"^2.3.1\",\n        \"uc.micro\": \"^2.1.0\"\n      },\n      \"bin\": {\n        \"markdown-it\": \"bin/markdown-it.mjs\"\n      }\n    },\n    \"node_modules/markdown-table\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-table/-/markdown-table-2.0.0.tgz\",\n      \"integrity\": \"sha512-Ezda85ToJUBhM6WGaG6veasyym+Tbs3cMAw/ZhOPqXiYsr0jgocBV3j3nx+4lk47plLlIqjwuTm/ywVI+zjJ/A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"repeat-string\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/markdownlint\": {\n      \"version\": \"0.34.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint/-/markdownlint-0.34.0.tgz\",\n      \"integrity\": \"sha512-qwGyuyKwjkEMOJ10XN6OTKNOVYvOIi35RNvDLNxTof5s8UmyGHlCdpngRHoRGNvQVGuxO3BJ7uNSgdeX166WXw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"markdown-it\": \"14.1.0\",\n        \"markdownlint-micromark\": \"0.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/DavidAnson\"\n      }\n    },\n    \"node_modules/markdownlint-cli\": {\n      \"version\": \"0.41.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint-cli/-/markdownlint-cli-0.41.0.tgz\",\n      \"integrity\": \"sha512-kp29tKrMKdn+xonfefjp3a/MsNzAd9c5ke0ydMEI9PR98bOjzglYN4nfMSaIs69msUf1DNkgevAIAPtK2SeX0Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"commander\": \"~12.1.0\",\n        \"get-stdin\": \"~9.0.0\",\n        \"glob\": \"~10.4.1\",\n        \"ignore\": \"~5.3.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"jsonc-parser\": \"~3.2.1\",\n        \"jsonpointer\": \"5.0.1\",\n        \"markdownlint\": \"~0.34.0\",\n        \"minimatch\": \"~9.0.4\",\n        \"run-con\": \"~1.3.2\",\n        \"smol-toml\": \"~1.2.0\"\n      },\n      \"bin\": {\n        \"markdownlint\": \"markdownlint.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/markdownlint-cli/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/markdownlint-cli/node_modules/glob\": {\n      \"version\": \"10.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.1.tgz\",\n      \"integrity\": \"sha512-2jelhlq3E4ho74ZyVLN03oKdAZVUa6UDZzFLVH1H7dnoax+y9qyaq8zBkfDIggjniU19z0wU18y16jMB2eyVIw==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/markdownlint-cli/node_modules/minimatch\": {\n      \"version\": \"9.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.4.tgz\",\n      \"integrity\": \"sha512-KqWh+VchfxcMNRAJjj2tnsSJdNbHsVgnkBhTNrW7AjVo6OvLtxw8zfT9oLw1JSohlFzJ8jCoTgaoXvJ+kHt6fw==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/markdownlint-micromark\": {\n      \"version\": \"0.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint-micromark/-/markdownlint-micromark-0.1.9.tgz\",\n      \"integrity\": \"sha512-5hVs/DzAFa8XqYosbEAEg6ok6MF2smDj89ztn9pKkCtdKHVdPQuGMH7frFfYL9mLkvfFe4pTyAMffLbjf3/EyA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/DavidAnson\"\n      }\n    },\n    \"node_modules/match-index\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/match-index/-/match-index-1.0.3.tgz\",\n      \"integrity\": \"sha512-1XjyBWqCvEFFUDW/MPv0RwbITRD4xQXOvKoPYtLDq8IdZTfdF/cQSo5Yn4qvhfSSZgjgkTFsqJD2wOUG4ovV8Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"regexp.prototype.flags\": \"^1.1.1\"\n      }\n    },\n    \"node_modules/md5\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/md5/-/md5-2.3.0.tgz\",\n      \"integrity\": \"sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"charenc\": \"0.0.2\",\n        \"crypt\": \"0.0.2\",\n        \"is-buffer\": \"~1.1.6\"\n      }\n    },\n    \"node_modules/mdast-util-find-and-replace\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-find-and-replace/-/mdast-util-find-and-replace-1.1.1.tgz\",\n      \"integrity\": \"sha512-9cKl33Y21lyckGzpSmEQnIDjEfeeWelN5s1kUW1LwdB0Fkuq2u+4GdqcGEygYxJE8GVqCl0741bYXHgamfWAZA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"unist-util-is\": \"^4.0.0\",\n        \"unist-util-visit-parents\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-footnote\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-footnote/-/mdast-util-footnote-0.1.7.tgz\",\n      \"integrity\": \"sha512-QxNdO8qSxqbO2e3m09KwDKfWiLgqyCurdWTQ198NpbZ2hxntdc+VKS4fDJCmNWbAroUdYnSthu+XbZ8ovh8C3w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-to-markdown\": \"^0.6.0\",\n        \"micromark\": \"~2.11.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-from-markdown\": {\n      \"version\": \"0.8.5\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-0.8.5.tgz\",\n      \"integrity\": \"sha512-2hkTXtYYnr+NubD/g6KGBS/0mFmBcifAsI0yIWRiRo0PjVs6SSOSOdtzbp6kSGnShDN6G5aWZpKQ2lWRy27mWQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/mdast\": \"^3.0.0\",\n        \"mdast-util-to-string\": \"^2.0.0\",\n        \"micromark\": \"~2.11.0\",\n        \"parse-entities\": \"^2.0.0\",\n        \"unist-util-stringify-position\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-frontmatter\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-frontmatter/-/mdast-util-frontmatter-0.2.0.tgz\",\n      \"integrity\": \"sha512-FHKL4w4S5fdt1KjJCwB0178WJ0evnyyQr5kXTM3wrOVpytD0hrkvd+AOOjU9Td8onOejCkmZ+HQRT3CZ3coHHQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark-extension-frontmatter\": \"^0.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-gfm\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-gfm/-/mdast-util-gfm-0.1.2.tgz\",\n      \"integrity\": \"sha512-NNkhDx/qYcuOWB7xHUGWZYVXvjPFFd6afg6/e2g+SV4r9q5XUcCbV4Wfa3DLYIiD+xAEZc6K4MGaE/m0KDcPwQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-gfm-autolink-literal\": \"^0.1.0\",\n        \"mdast-util-gfm-strikethrough\": \"^0.2.0\",\n        \"mdast-util-gfm-table\": \"^0.1.0\",\n        \"mdast-util-gfm-task-list-item\": \"^0.1.0\",\n        \"mdast-util-to-markdown\": \"^0.6.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-gfm-autolink-literal\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-gfm-autolink-literal/-/mdast-util-gfm-autolink-literal-0.1.3.tgz\",\n      \"integrity\": \"sha512-GjmLjWrXg1wqMIO9+ZsRik/s7PLwTaeCHVB7vRxUwLntZc8mzmTsLVr6HW1yLokcnhfURsn5zmSVdi3/xWWu1A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ccount\": \"^1.0.0\",\n        \"mdast-util-find-and-replace\": \"^1.1.0\",\n        \"micromark\": \"^2.11.3\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-gfm-strikethrough\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-gfm-strikethrough/-/mdast-util-gfm-strikethrough-0.2.3.tgz\",\n      \"integrity\": \"sha512-5OQLXpt6qdbttcDG/UxYY7Yjj3e8P7X16LzvpX8pIQPYJ/C2Z1qFGMmcw+1PZMUM3Z8wt8NRfYTvCni93mgsgA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-to-markdown\": \"^0.6.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-gfm-table\": {\n      \"version\": \"0.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-gfm-table/-/mdast-util-gfm-table-0.1.6.tgz\",\n      \"integrity\": \"sha512-j4yDxQ66AJSBwGkbpFEp9uG/LS1tZV3P33fN1gkyRB2LoRL+RR3f76m0HPHaby6F4Z5xr9Fv1URmATlRRUIpRQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"markdown-table\": \"^2.0.0\",\n        \"mdast-util-to-markdown\": \"~0.6.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-gfm-task-list-item\": {\n      \"version\": \"0.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-gfm-task-list-item/-/mdast-util-gfm-task-list-item-0.1.6.tgz\",\n      \"integrity\": \"sha512-/d51FFIfPsSmCIRNp7E6pozM9z1GYPIkSy1urQ8s/o4TC22BZ7DqfHFWiqBD23bc7J3vV1Fc9O4QIHBlfuit8A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-to-markdown\": \"~0.6.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-to-markdown\": {\n      \"version\": \"0.6.5\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-0.6.5.tgz\",\n      \"integrity\": \"sha512-XeV9sDE7ZlOQvs45C9UKMtfTcctcaj/pGwH8YLbMHoMOXNNCn2LsqVQOqrF1+/NU8lKDAqozme9SCXWyo9oAcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"longest-streak\": \"^2.0.0\",\n        \"mdast-util-to-string\": \"^2.0.0\",\n        \"parse-entities\": \"^2.0.0\",\n        \"repeat-string\": \"^1.0.0\",\n        \"zwitch\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdast-util-to-string\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-2.0.0.tgz\",\n      \"integrity\": \"sha512-AW4DRS3QbBayY/jJmD8437V1Gombjf8RSOUCMFBuo5iHi58AGEgVCKQ+ezHkZZDpAQS75hcBMpLqjpJTjtUL7w==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/mdurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdurl/-/mdurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Lf+9+2r+Tdp5wXDXC4PcIBjTDtq4UKjCPMQhKIuzpJNW0b96kVqSwW0bT7FhRSfmAiFYgP+SCRvdrDozfh0U5w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/micromark\": {\n      \"version\": \"2.11.4\",\n      \"resolved\": \"https://registry.npmjs.org/micromark/-/micromark-2.11.4.tgz\",\n      \"integrity\": \"sha512-+WoovN/ppKolQOFIAajxi7Lu9kInbPxFuTBVEavFcL8eAfVstoc5MocPmqBeAdBOJV00uaVjegzH4+MA0DN/uA==\",\n      \"funding\": [\n        {\n          \"type\": \"GitHub Sponsors\",\n          \"url\": \"https://github.com/sponsors/unifiedjs\"\n        },\n        {\n          \"type\": \"OpenCollective\",\n          \"url\": \"https://opencollective.com/unified\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^4.0.0\",\n        \"parse-entities\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/micromark-extension-footnote\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-footnote/-/micromark-extension-footnote-0.3.2.tgz\",\n      \"integrity\": \"sha512-gr/BeIxbIWQoUm02cIfK7mdMZ/fbroRpLsck4kvFtjbzP4yi+OPVbnukTc/zy0i7spC2xYE/dbX1Sur8BEDJsQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-frontmatter\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-frontmatter/-/micromark-extension-frontmatter-0.2.2.tgz\",\n      \"integrity\": \"sha512-q6nPLFCMTLtfsctAuS0Xh4vaolxSFUWUWR6PZSrXXiRy+SANGllpcqdXFv2z07l0Xz/6Hl40hK0ffNCJPH2n1A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fault\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm/-/micromark-extension-gfm-0.3.3.tgz\",\n      \"integrity\": \"sha512-oVN4zv5/tAIA+l3GbMi7lWeYpJ14oQyJ3uEim20ktYFAcfX1x3LNlFGGlmrZHt7u9YlKExmyJdDGaTt6cMSR/A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.0\",\n        \"micromark-extension-gfm-autolink-literal\": \"~0.5.0\",\n        \"micromark-extension-gfm-strikethrough\": \"~0.6.5\",\n        \"micromark-extension-gfm-table\": \"~0.4.0\",\n        \"micromark-extension-gfm-tagfilter\": \"~0.3.0\",\n        \"micromark-extension-gfm-task-list-item\": \"~0.3.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm-autolink-literal\": {\n      \"version\": \"0.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm-autolink-literal/-/micromark-extension-gfm-autolink-literal-0.5.7.tgz\",\n      \"integrity\": \"sha512-ePiDGH0/lhcngCe8FtH4ARFoxKTUelMp4L7Gg2pujYD5CSMb9PbblnyL+AAMud/SNMyusbS2XDSiPIRcQoNFAw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.3\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm-strikethrough\": {\n      \"version\": \"0.6.5\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm-strikethrough/-/micromark-extension-gfm-strikethrough-0.6.5.tgz\",\n      \"integrity\": \"sha512-PpOKlgokpQRwUesRwWEp+fHjGGkZEejj83k9gU5iXCbDG+XBA92BqnRKYJdfqfkrRcZRgGuPuXb7DaK/DmxOhw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm-table\": {\n      \"version\": \"0.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm-table/-/micromark-extension-gfm-table-0.4.3.tgz\",\n      \"integrity\": \"sha512-hVGvESPq0fk6ALWtomcwmgLvH8ZSVpcPjzi0AjPclB9FsVRgMtGZkUcpE0zgjOCFAznKepF4z3hX8z6e3HODdA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm-tagfilter\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm-tagfilter/-/micromark-extension-gfm-tagfilter-0.3.0.tgz\",\n      \"integrity\": \"sha512-9GU0xBatryXifL//FJH+tAZ6i240xQuFrSL7mYi8f4oZSbc+NvXjkrHemeYP0+L4ZUT+Ptz3b95zhUZnMtoi/Q==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/micromark-extension-gfm-task-list-item\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/micromark-extension-gfm-task-list-item/-/micromark-extension-gfm-task-list-item-0.3.3.tgz\",\n      \"integrity\": \"sha512-0zvM5iSLKrc/NQl84pZSjGo66aTGd57C1idmlWmE87lkMcXrTxg1uXa/nXomxJytoje9trP0NDLvw4bZ/Z/XCQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"micromark\": \"~2.11.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n      \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-is\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.6.tgz\",\n      \"integrity\": \"sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz\",\n      \"integrity\": \"sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.4\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n      \"integrity\": \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\",\n        \"word-wrap\": \"^1.2.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz\",\n      \"integrity\": \"sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-try\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz\",\n      \"integrity\": \"sha512-nQja7m7gSKuewoVRen45CtVfODR3crN3goVQ0DDZ9N3yHxgpkuBhZqsaiotSQRrADUrne346peY7kT3TSACykg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"p-limit\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz\",\n      \"integrity\": \"sha512-U1etNYuMJoIz3ZXSrrySFjsXQTWOx2/jdi86L+2pRvph/qMKL6sbcCYdH23fqsbm8TH2Gn0OybpT4eSFlCVHww==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/parse-entities\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-entities/-/parse-entities-2.0.0.tgz\",\n      \"integrity\": \"sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"character-entities\": \"^1.0.0\",\n        \"character-entities-legacy\": \"^1.0.0\",\n        \"character-reference-invalid\": \"^1.0.0\",\n        \"is-alphanumerical\": \"^1.0.0\",\n        \"is-decimal\": \"^1.0.0\",\n        \"is-hexadecimal\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz\",\n      \"integrity\": \"sha512-QR/GGaKCkhwk1ePQNYDRKYZ3mwU9ypsKhB0XyFnLQdomyEqk3e8wpW3V5Jp88zbxK4n5ST1nqo+g9juTpownhQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"error-ex\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz\",\n      \"integrity\": \"sha512-bpC7GYwiDYQ4wYLe+FA8lhRjhQCMcQGuSgGGqDkg/QerRWw9CmGRT0iSOVRSZJ29NMLZgIzqaljJ63oaL4NIJQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.11.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"lru-cache\": \"^10.2.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-to-glob-pattern\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-glob-pattern/-/path-to-glob-pattern-1.0.2.tgz\",\n      \"integrity\": \"sha512-ryF65N5MBB9XOjE5mMOi+0bMrh1F0ORQmqDSSERvv5zD62Cfc5QC6rK1AR1xuDIG1I091CkNENblbteWy1bXgw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz\",\n      \"integrity\": \"sha512-S4eENJz1pkiQn9Znv33Q+deTOKmbl+jj1Fl+qiP/vYezj+S8x+J3Uo0ISrx/QoEvIlOaDWJhPaRd1flJ9HXZqg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"pify\": \"^2.0.0\",\n        \"pinkie-promise\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pinkie\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",\n      \"integrity\": \"sha512-MnUuEycAemtSaeFSjXKW/aroV7akBbY+Sv+RkyqFjgAe73F+MR0TBWKBRDkmfWq/HiFmdavfZ1G7h4SPZXaCSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pinkie-promise\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",\n      \"integrity\": \"sha512-0Gni6D4UcLTbv9c57DfxDGdr41XfgUjqWZu492f0cIGr16zDU06BWP/RAEvOuo7CQ0CNjHaLlM59YJJFm3NWlw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pinkie\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pluralize\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pluralize/-/pluralize-2.0.0.tgz\",\n      \"integrity\": \"sha512-TqNZzQCD4S42De9IfnnBvILN7HAW7riLqsCyp8lgjXeysyPlX5HhqKAcJHHHb9XskE4/a+7VGC9zzx8Ls0jOAw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/possible-typed-array-names\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz\",\n      \"integrity\": \"sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/punycode.js\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode.js/-/punycode.js-2.3.1.tgz\",\n      \"integrity\": \"sha512-uxFIHU0YlHYhDQtV4R9J6a52SLx28BCjT+4ieh7IGbgwVJWO+km431c4yRlREUAsAmt/uMjQUyQHNEPf0M39CA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/rc-config-loader\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/rc-config-loader/-/rc-config-loader-3.0.0.tgz\",\n      \"integrity\": \"sha512-bwfUSB37TWkHfP+PPjb/x8BUjChFmmBK44JMfVnU7paisWqZl/o5k7ttCH+EQLnrbn2Aq8Fo1LAsyUiz+WF4CQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"js-yaml\": \"^3.12.0\",\n        \"json5\": \"^2.1.1\",\n        \"require-from-string\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/rc-config-loader/node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/rc-config-loader/node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/read-pkg\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz\",\n      \"integrity\": \"sha512-7BGwRHqt4s/uVbuyoeejRn4YmFnYZiFl4AuaeXHlgZf3sONF0SOGlxs2Pw8g6hCKupo08RafIO5YXFNOKTfwsQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"load-json-file\": \"^1.0.0\",\n        \"normalize-package-data\": \"^2.3.2\",\n        \"path-type\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/read-pkg-up\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-3.0.0.tgz\",\n      \"integrity\": \"sha512-YFzFrVvpC6frF1sz8psoHDBGF7fLPc+llq/8NB43oagqWkx8ar5zYtsTORtOjw9W2RHLpWP+zTWwBvf1bCmcSw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"find-up\": \"^2.0.0\",\n        \"read-pkg\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/load-json-file\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz\",\n      \"integrity\": \"sha512-Kx8hMakjX03tiGTLAIdJ+lL0htKnXjEZN6hk/tozf/WOuYGdZBJrZ+rCJRbVCugsjB3jMLn9746NsQIf5VjBMw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"parse-json\": \"^4.0.0\",\n        \"pify\": \"^3.0.0\",\n        \"strip-bom\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/parse-json\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz\",\n      \"integrity\": \"sha512-aOIos8bujGN93/8Ox/jPLh7RwVnPEysynVFE+fQZyg6jKELEHwzgKdLRFHUgXJL6kylijVSBC4BvN9OmsB48Rw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-better-errors\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/path-type\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz\",\n      \"integrity\": \"sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pify\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/pify\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz\",\n      \"integrity\": \"sha512-C3FsVNH1udSEX48gGX1xfvwTWfsYWj5U+8/uK15BGzIGrKoUpghX8hWZwa/OFnakBiiVNmBvemTJR5mcy7iPcg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/read-pkg\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz\",\n      \"integrity\": \"sha512-BLq/cCO9two+lBgiTYNqD6GdtK8s4NpaWrl6/rCO9w0TUS8oJl7cmToOZfRYllKTISY6nt1U7jQ53brmKqY6BA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"load-json-file\": \"^4.0.0\",\n        \"normalize-package-data\": \"^2.3.2\",\n        \"path-type\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\n      \"integrity\": \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n      \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz\",\n      \"integrity\": \"sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"set-function-name\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/remark-footnotes\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-footnotes/-/remark-footnotes-3.0.0.tgz\",\n      \"integrity\": \"sha512-ZssAvH9FjGYlJ/PBVKdSmfyPc3Cz4rTWgZLI4iE/SX8Nt5l3o3oEjv3wwG5VD7xOjktzdwp5coac+kJV9l4jgg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-footnote\": \"^0.1.0\",\n        \"micromark-extension-footnote\": \"^0.3.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/remark-frontmatter\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-frontmatter/-/remark-frontmatter-3.0.0.tgz\",\n      \"integrity\": \"sha512-mSuDd3svCHs+2PyO29h7iijIZx4plX0fheacJcAoYAASfgzgVIcXGYSq9GFyYocFLftQs8IOmmkgtOovs6d4oA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-frontmatter\": \"^0.2.0\",\n        \"micromark-extension-frontmatter\": \"^0.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/remark-gfm\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-gfm/-/remark-gfm-1.0.0.tgz\",\n      \"integrity\": \"sha512-KfexHJCiqvrdBZVbQ6RopMZGwaXz6wFJEfByIuEwGf0arvITHjiKKZ1dpXujjH9KZdm1//XJQwgfnJ3lmXaDPA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-gfm\": \"^0.1.0\",\n        \"micromark-extension-gfm\": \"^0.3.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/remark-parse\": {\n      \"version\": \"9.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/remark-parse/-/remark-parse-9.0.0.tgz\",\n      \"integrity\": \"sha512-geKatMwSzEXKHuzBNU1z676sGcDcFoChMK38TgdHJNAYfFtsfHDQG7MoJAjs6sgYMqyLduCYWDIWZIxiPeafEw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mdast-util-from-markdown\": \"^0.8.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/repeat-string\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz\",\n      \"integrity\": \"sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.8\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"2.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz\",\n      \"integrity\": \"sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==\",\n      \"deprecated\": \"Rimraf versions prior to v4 are no longer supported\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      }\n    },\n    \"node_modules/run-con\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/run-con/-/run-con-1.3.2.tgz\",\n      \"integrity\": \"sha512-CcfE+mYiTcKEzg0IqS08+efdnH0oJ3zV0wSUFBNrMHMuxCtXvBCLzCJHatwuXDcu/RlhjTziTo/a1ruQik6/Yg==\",\n      \"license\": \"(BSD-2-Clause OR MIT OR Apache-2.0)\",\n      \"dependencies\": {\n        \"deep-extend\": \"^0.6.0\",\n        \"ini\": \"~4.1.0\",\n        \"minimist\": \"^1.2.8\",\n        \"strip-json-comments\": \"~3.1.1\"\n      },\n      \"bin\": {\n        \"run-con\": \"cli.js\"\n      }\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz\",\n      \"integrity\": \"sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-symbols\": \"^1.0.3\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz\",\n      \"integrity\": \"sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/slice-ansi\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz\",\n      \"integrity\": \"sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"astral-regex\": \"^2.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/slice-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/smol-toml\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/smol-toml/-/smol-toml-1.2.1.tgz\",\n      \"integrity\": \"sha512-OtZKrVrGIT+m++lxyF0z5n68nkwdgZotPhy89bfA4T7nSWe0xeQtfbjM1z5VLTilJdWXH46g8i0oAcpQNkzZTg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">= 18\",\n        \"pnpm\": \">= 9\"\n      }\n    },\n    \"node_modules/spdx-correct\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.2.0.tgz\",\n      \"integrity\": \"sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-exceptions\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.5.0.tgz\",\n      \"integrity\": \"sha512-PiU42r+xO4UbUS1buo3LPJkjlO7430Xn5SVAhdpzzsPHsjbYVflnnFdATgabnLude+Cqu25p6N+g2lw/PFsa4w==\",\n      \"license\": \"CC-BY-3.0\"\n    },\n    \"node_modules/spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz\",\n      \"integrity\": \"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-license-ids\": {\n      \"version\": \"3.0.18\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.18.tgz\",\n      \"integrity\": \"sha512-xxRs31BqRYHwiMzudOrpSiHtZ8i/GeionCBDSilhYRj+9gIcI8wCZTlXZKu9vZIVqViP3dcp9qE5G6AlIaD+TQ==\",\n      \"license\": \"CC0-1.0\"\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\",\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz\",\n      \"integrity\": \"sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.0\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz\",\n      \"integrity\": \"sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz\",\n      \"integrity\": \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz\",\n      \"integrity\": \"sha512-kwrX1y7czp1E69n2ajbG65mIo9dqvJ+8aBQXOGVxqwvNbsXdFM6Lq37dLAY3mknUwru8CfcCbfOLL/gMo+fi3g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-utf8\": \"^0.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/structured-source\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/structured-source/-/structured-source-4.0.0.tgz\",\n      \"integrity\": \"sha512-qGzRFNJDjFieQkl/sVOI2dUjHKRyL9dAJi2gCPGJLbJHBIkyOHxjuocpIEfbLioX+qSJpvbYdT49/YCdMznKxA==\",\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"boundary\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/table\": {\n      \"version\": \"6.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/table/-/table-6.8.2.tgz\",\n      \"integrity\": \"sha512-w2sfv80nrAh2VCbqR5AK27wswXhqcck2AhfnNW76beQXskGZ1V12GwS//yYVa3d3fcvAip2OUnbDAjW2k3v9fA==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"ajv\": \"^8.0.1\",\n        \"lodash.truncate\": \"^4.4.2\",\n        \"slice-ansi\": \"^4.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/textlint\": {\n      \"version\": \"12.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/textlint/-/textlint-12.6.1.tgz\",\n      \"integrity\": \"sha512-ro33XJnA9UpQVeheGbPalYa5qpyA2R2yZdIgfC8xEvlOTF5SWJkdeNMm24Ml6d36bgwbqIO2yISKu7vlzBxHRA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^12.6.1\",\n        \"@textlint/ast-traverse\": \"^12.6.1\",\n        \"@textlint/config-loader\": \"^12.6.1\",\n        \"@textlint/feature-flag\": \"^12.6.1\",\n        \"@textlint/fixer-formatter\": \"^12.6.1\",\n        \"@textlint/kernel\": \"^12.6.1\",\n        \"@textlint/linter-formatter\": \"^12.6.1\",\n        \"@textlint/module-interop\": \"^12.6.1\",\n        \"@textlint/textlint-plugin-markdown\": \"^12.6.1\",\n        \"@textlint/textlint-plugin-text\": \"^12.6.1\",\n        \"@textlint/types\": \"^12.6.1\",\n        \"@textlint/utils\": \"^12.6.1\",\n        \"debug\": \"^4.3.4\",\n        \"deep-equal\": \"^1.1.1\",\n        \"file-entry-cache\": \"^5.0.1\",\n        \"get-stdin\": \"^5.0.1\",\n        \"glob\": \"^7.2.3\",\n        \"is-file\": \"^1.0.0\",\n        \"md5\": \"^2.3.0\",\n        \"mkdirp\": \"^0.5.6\",\n        \"optionator\": \"^0.9.1\",\n        \"path-to-glob-pattern\": \"^1.0.2\",\n        \"rc-config-loader\": \"^3.0.0\",\n        \"read-pkg\": \"^1.1.0\",\n        \"read-pkg-up\": \"^3.0.0\",\n        \"structured-source\": \"^4.0.0\",\n        \"try-resolve\": \"^1.0.1\",\n        \"unique-concat\": \"^0.2.2\"\n      },\n      \"bin\": {\n        \"textlint\": \"bin/textlint.js\",\n        \"textlint-esm\": \"bin/textlint-esm.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      }\n    },\n    \"node_modules/textlint-rule-helper\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/textlint-rule-helper/-/textlint-rule-helper-2.3.1.tgz\",\n      \"integrity\": \"sha512-b1bijvyiUmKinfFE5hkQMSXs3Ky8jyZ3Y6SOoTRJKV9HLL2LWUVFAUezO7z4FpAkVvYruDYWCwA5qWV8GmvyUw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/ast-node-types\": \"^13.4.1\",\n        \"structured-source\": \"^4.0.0\",\n        \"unist-util-visit\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/textlint-rule-helper/node_modules/@textlint/ast-node-types\": {\n      \"version\": \"13.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@textlint/ast-node-types/-/ast-node-types-13.4.1.tgz\",\n      \"integrity\": \"sha512-qrZyhCh8Ekk6nwArx3BROybm9BnX6vF7VcZbijetV/OM3yfS4rTYhoMWISmhVEP2H2re0CtWEyMl/XF+WdvVLQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/textlint-rule-ja-space-between-half-and-full-width\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/textlint-rule-ja-space-between-half-and-full-width/-/textlint-rule-ja-space-between-half-and-full-width-2.4.2.tgz\",\n      \"integrity\": \"sha512-GqwSy0ivm4Q5Bok9LaOwfg+H1auLRMoMi2aY/7aSIrgvX/RD5aZ2Rk2lm3TTX42mR1UrQu8GDqktUEZfvQ913w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@textlint/regexp-string-matcher\": \"^2.0.2\",\n        \"match-index\": \"^1.0.1\",\n        \"textlint-rule-helper\": \"^2.2.4\"\n      }\n    },\n    \"node_modules/textlint-rule-zh-half-and-full-width-bracket\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/textlint-rule-zh-half-and-full-width-bracket/-/textlint-rule-zh-half-and-full-width-bracket-1.1.0.tgz\",\n      \"integrity\": \"sha512-P204kbCFkzu84hYp1TF7sR/DUp+HeGbJ3wL2PMjeHEDgEIgFfbHOOWIPqsyHdNCwwfx+N+IrPtXSRCwpCUcpww==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/runtime-corejs3\": \"^7.9.6\",\n        \"textlint-rule-helper\": \"^2.1.1\"\n      },\n      \"peerDependencies\": {\n        \"textlint\": \">= 5.5.0\"\n      }\n    },\n    \"node_modules/textlint/node_modules/get-stdin\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stdin/-/get-stdin-5.0.1.tgz\",\n      \"integrity\": \"sha512-jZV7n6jGE3Gt7fgSTJoz91Ak5MuTLwMwkoYdjxuJ/AmjIsE1UC03y/IWkZCQGEvVNS9qoRNwy5BCqxImv0FVeA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/traverse\": {\n      \"version\": \"0.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/traverse/-/traverse-0.6.9.tgz\",\n      \"integrity\": \"sha512-7bBrcF+/LQzSgFmT0X5YclVqQxtv7TDJ1f8Wj7ibBu/U6BMLeOpUxuZjV7rMc44UtKxlnMFigdhFAIszSX1DMg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"gopd\": \"^1.0.1\",\n        \"typedarray.prototype.slice\": \"^1.0.3\",\n        \"which-typed-array\": \"^1.1.15\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/trough\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/trough/-/trough-1.0.5.tgz\",\n      \"integrity\": \"sha512-rvuRbTarPXmMb79SmzEp8aqXNKcK+y0XaB298IXueQ8I2PsrATcPBCSPyK/dDNa2iWOhKlfNnOjdAOTBU/nkFA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/try-resolve\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/try-resolve/-/try-resolve-1.0.1.tgz\",\n      \"integrity\": \"sha512-yHeaPjCBzVaXwWl5IMUapTaTC2rn/eBYg2fsG2L+CvJd+ttFbk0ylDnpTO3wVhosmE1tQEvcebbBeKLCwScQSQ==\",\n      \"deprecated\": \"Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz\",\n      \"integrity\": \"sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz\",\n      \"integrity\": \"sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typedarray.prototype.slice\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/typedarray.prototype.slice/-/typedarray.prototype.slice-1.0.3.tgz\",\n      \"integrity\": \"sha512-8WbVAQAUlENo1q3c3zZYuy5k9VzBQvp8AX9WOtbvyWlLM1v5JaSRmjubLjzHF4JFtptjH/5c/i95yaElvcjC0A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"typed-array-buffer\": \"^1.0.2\",\n        \"typed-array-byte-offset\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/uc.micro\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/uc.micro/-/uc.micro-2.1.0.tgz\",\n      \"integrity\": \"sha512-ARDJmphmdvUk6Glw7y9DQ2bFkKBHwQHLi2lsaH6PPmz/Ka9sFOBsBluozhDltWmnv9u/cF6Rt87znRTPV+yp/A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/unified\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/unified/-/unified-9.2.2.tgz\",\n      \"integrity\": \"sha512-Sg7j110mtefBD+qunSLO1lqOEKdrwBFBrR6Qd8f4uwkhWNlbkaqwHse6e7QvD3AP/MNoJdEDLaf8OxYyoWgorQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bail\": \"^1.0.0\",\n        \"extend\": \"^3.0.0\",\n        \"is-buffer\": \"^2.0.0\",\n        \"is-plain-obj\": \"^2.0.0\",\n        \"trough\": \"^1.0.0\",\n        \"vfile\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unified/node_modules/is-buffer\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz\",\n      \"integrity\": \"sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unique-concat\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/unique-concat/-/unique-concat-0.2.2.tgz\",\n      \"integrity\": \"sha512-nFT3frbsvTa9rrc71FJApPqXF8oIhVHbX3IWgObQi1mF7WrW48Ys70daL7o4evZUtmUf6Qn6WK0LbHhyO0hpXw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unist-util-is\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-is/-/unist-util-is-4.1.0.tgz\",\n      \"integrity\": \"sha512-ZOQSsnce92GrxSqlnEEseX0gi7GH9zTJZ0p9dtu87WRb/37mMPO2Ilx1s/t9vBHrFhbgweUwb+t7cIn5dxPhZg==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-stringify-position\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-2.0.3.tgz\",\n      \"integrity\": \"sha512-3faScn5I+hy9VleOq/qNbAd6pAx7iH5jYBMS9I1HgQVijz/4mv5Bvw5iw1sC/90CODiKo81G/ps8AJrISn687g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.2\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-visit\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-visit/-/unist-util-visit-2.0.3.tgz\",\n      \"integrity\": \"sha512-iJ4/RczbJMkD0712mGktuGpm/U4By4FfDonL7N/9tATGIF4imikjOuagyMY53tnZq3NP6BcmlrHhEKAfGWjh7Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-is\": \"^4.0.0\",\n        \"unist-util-visit-parents\": \"^3.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/unist-util-visit-parents\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-3.1.1.tgz\",\n      \"integrity\": \"sha512-1KROIZWo6bcMrZEwiH2UrXDyalAa0uqzWCxCJj6lPOvTve2WkfgCytoDTPaMnodXh1WrXOq0haVYHj99ynJlsg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-is\": \"^4.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/vfile\": {\n      \"version\": \"4.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/vfile/-/vfile-4.2.1.tgz\",\n      \"integrity\": \"sha512-O6AE4OskCG5S1emQ/4gl8zK586RqA3srz3nfK/Viy0UPToBc5Trp9BVFb1u0CjsKrAWwnpr4ifM/KBXPWwJbCA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"is-buffer\": \"^2.0.0\",\n        \"unist-util-stringify-position\": \"^2.0.0\",\n        \"vfile-message\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/vfile-message\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/vfile-message/-/vfile-message-2.0.4.tgz\",\n      \"integrity\": \"sha512-DjssxRGkMvifUOJre00juHoP9DPWuzjxKuMDrhNbk2TdaYYBNMStsNhEOt3idrtI12VQYM/1+iM0KOzXi4pxwQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/unist\": \"^2.0.0\",\n        \"unist-util-stringify-position\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/unified\"\n      }\n    },\n    \"node_modules/vfile/node_modules/is-buffer\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.5.tgz\",\n      \"integrity\": \"sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz\",\n      \"integrity\": \"sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/word-wrap\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/wrap-ansi/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/write\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/write/-/write-1.0.3.tgz\",\n      \"integrity\": \"sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mkdirp\": \"^0.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/zwitch\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/zwitch/-/zwitch-1.0.5.tgz\",\n      \"integrity\": \"sha512-V50KMwwzqJV0NpZIZFwfOD5/lyny3WlSzRiXgA0G7VUnRlqttta1L6UQIHzd6EuBY/cHGfwTIck7w1yH6Q5zUw==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.09,
          "content": "{\n  \"name\": \"how-to-cook\",\n  \"description\": \"程序员在家做饭方法指南。Programmer's guide about how to cook at home (Chinese).\",\n  \"version\": \"1.4.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Anduin2017/HowToCook.git\"\n  },\n  \"keywords\": [\n    \"recipes\",\n    \"cooking\",\n    \"cookbook\",\n    \"chinese\",\n    \"dishes\"\n  ],\n  \"scripts\": {\n    \"build\": \"node ./.github/readme-generate.js\",\n    \"manuallint\": \"node .github/manual_lint.js\",\n    \"textlint\": \"textlint . --fix\",\n    \"markdownlint\": \"markdownlint ./dishes ./tips\",\n    \"lint\": \"npm run textlint && npm run markdownlint && npm run manuallint && echo 'Lint finished. All passed.'\"\n  },\n  \"author\": \"Anduin2017\",\n  \"license\": \"Unlicense\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Anduin2017/HowToCook/issues\"\n  },\n  \"homepage\": \"https://cook.aiursoft.cn\",\n  \"dependencies\": {\n    \"textlint\": \"^12.1.0\",\n    \"textlint-rule-ja-space-between-half-and-full-width\": \"^2.2.0\",\n    \"textlint-rule-zh-half-and-full-width-bracket\": \"^1.1.0\",\n    \"markdownlint-cli\":\"0.41.0\"\n  },\n  \"devDependencies\": {\n    \"glob\": \"^7.2.0\"\n  }\n}\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.08,
          "content": "mkdocs-material\nmkdocs-same-dir\nmkdocs-minify-plugin\nmkdocs-with-pdf\nweasyprint\n"
        },
        {
          "name": "starsystem",
          "type": "tree",
          "content": null
        },
        {
          "name": "tips",
          "type": "tree",
          "content": null
        }
      ]
    },
    {
      "nameWithOwner": "microsoft/playwright",
      "stars": 68405,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.14,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.36,
          "content": "test/assets/modernizr.js\n/tests/third_party/\n/packages/*/lib/\n*.js\n/packages/playwright-core/src/generated/*\n/packages/playwright-core/src/third_party/\n/packages/playwright-core/types/*\n/packages/playwright-ct-core/src/generated/*\n/index.d.ts\nnode_modules/\n**/*.d.ts\noutput/\ntest-results/\n/tests/components/\n/tests/installation/fixture-scripts/\nDEPS\n.cache/\n/utils/\n"
        },
        {
          "name": ".eslintrc-with-ts-config.js",
          "type": "blob",
          "size": 0.34,
          "content": "module.exports = {\n  extends: \"./.eslintrc.js\",\n  parserOptions: {\n    ecmaVersion: 9,\n    sourceType: \"module\",\n    project: \"./tsconfig.json\",\n  },\n  rules: {\n    \"@typescript-eslint/no-base-to-string\": \"error\",\n    \"@typescript-eslint/no-unnecessary-boolean-literal-compare\": 2,\n  },\n  parserOptions: {\n    project: \"./tsconfig.json\"\n  },\n};\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 4.2,
          "content": "module.exports = {\n    parser: \"@typescript-eslint/parser\",\n    plugins: [\"@typescript-eslint\", \"notice\"],\n    parserOptions: {\n      ecmaVersion: 9,\n      sourceType: \"module\",\n    },\n    extends: [\n      \"plugin:react/recommended\",\n      \"plugin:react-hooks/recommended\"\n    ],\n\n    settings: {\n        react: { version: \"18\" }\n    },\n\n    /**\n     * ESLint rules\n     *\n     * All available rules: http://eslint.org/docs/rules/\n     *\n     * Rules take the following form:\n     *   \"rule-name\", [severity, { opts }]\n     * Severity: 2 == error, 1 == warning, 0 == off.\n     */\n    rules: {\n        \"@typescript-eslint/no-unused-vars\": [2, {args: \"none\"}],\n        \"@typescript-eslint/consistent-type-imports\": [2, {disallowTypeAnnotations: false}],\n        /**\n         * Enforced rules\n         */\n        // syntax preferences\n        \"object-curly-spacing\": [\"error\", \"always\"],\n        \"quotes\": [2, \"single\", {\n            \"avoidEscape\": true,\n            \"allowTemplateLiterals\": true\n        }],\n        \"jsx-quotes\": [2, \"prefer-single\"],\n        \"no-extra-semi\": 2,\n        \"@typescript-eslint/semi\": [2],\n        \"comma-style\": [2, \"last\"],\n        \"wrap-iife\": [2, \"inside\"],\n        \"spaced-comment\": [2, \"always\", {\n            \"markers\": [\"*\"]\n        }],\n        \"eqeqeq\": [2],\n        \"accessor-pairs\": [2, {\n            \"getWithoutSet\": false,\n            \"setWithoutGet\": false\n        }],\n        \"brace-style\": [2, \"1tbs\", {\"allowSingleLine\": true}],\n        \"curly\": [2, \"multi-or-nest\", \"consistent\"],\n        \"new-parens\": 2,\n        \"arrow-parens\": [2, \"as-needed\"],\n        \"prefer-const\": 2,\n        \"quote-props\": [2, \"consistent\"],\n        \"nonblock-statement-body-position\": [2, \"below\"],\n\n        // anti-patterns\n        \"no-var\": 2,\n        \"no-with\": 2,\n        \"no-multi-str\": 2,\n        \"no-caller\": 2,\n        \"no-implied-eval\": 2,\n        \"no-labels\": 2,\n        \"no-new-object\": 2,\n        \"no-octal-escape\": 2,\n        \"no-self-compare\": 2,\n        \"no-shadow-restricted-names\": 2,\n        \"no-cond-assign\": 2,\n        \"no-debugger\": 2,\n        \"no-dupe-keys\": 2,\n        \"no-duplicate-case\": 2,\n        \"no-empty-character-class\": 2,\n        \"no-unreachable\": 2,\n        \"no-unsafe-negation\": 2,\n        \"radix\": 2,\n        \"valid-typeof\": 2,\n        \"no-implicit-globals\": [2],\n        \"no-unused-expressions\": [2, { \"allowShortCircuit\": true, \"allowTernary\": true, \"allowTaggedTemplates\": true}],\n        \"no-proto\": 2,\n\n        // es2015 features\n        \"require-yield\": 2,\n        \"template-curly-spacing\": [2, \"never\"],\n\n        // spacing details\n        \"space-infix-ops\": 2,\n        \"space-in-parens\": [2, \"never\"],\n        \"array-bracket-spacing\": [2, \"never\"],\n        \"comma-spacing\": [2, { \"before\": false, \"after\": true }],\n        \"keyword-spacing\": [2, \"always\"],\n        \"space-before-function-paren\": [2, {\n            \"anonymous\": \"never\",\n            \"named\": \"never\",\n            \"asyncArrow\": \"always\"\n        }],\n        \"no-whitespace-before-property\": 2,\n        \"keyword-spacing\": [2, {\n            \"overrides\": {\n                \"if\": {\"after\": true},\n                \"else\": {\"after\": true},\n                \"for\": {\"after\": true},\n                \"while\": {\"after\": true},\n                \"do\": {\"after\": true},\n                \"switch\": {\"after\": true},\n                \"return\": {\"after\": true}\n            }\n        }],\n        \"arrow-spacing\": [2, {\n            \"after\": true,\n            \"before\": true\n        }],\n        \"@typescript-eslint/func-call-spacing\": 2,\n        \"@typescript-eslint/type-annotation-spacing\": 2,\n\n        // file whitespace\n        \"no-multiple-empty-lines\": [2, {\"max\": 2, \"maxEOF\": 0}],\n        \"no-mixed-spaces-and-tabs\": 2,\n        \"no-trailing-spaces\": 2,\n        \"linebreak-style\": [ process.platform === \"win32\" ? 0 : 2, \"unix\" ],\n        \"indent\": [2, 2, { \"SwitchCase\": 1, \"CallExpression\": {\"arguments\": 2}, \"MemberExpression\": 2 }],\n        \"key-spacing\": [2, {\n            \"beforeColon\": false\n        }],\n        \"eol-last\": 2,\n\n        // copyright\n        \"notice/notice\": [2, {\n            \"mustMatch\": \"Copyright\",\n            \"templateFile\": require(\"path\").join(__dirname, \"utils\", \"copyright.js\"),\n        }],\n\n        // react\n        \"react/react-in-jsx-scope\": 0\n    }\n};\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.14,
          "content": "# text files must be lf for golden file tests to work\n* text=auto eol=lf\n# make project show as TS on GitHub\n*.js linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.59,
          "content": "node_modules/\n/test-results/\n/tests/coverage-report\n.local-browsers/\n/.dev_profile*\n.DS_Store\n*.swp\n*.pyc\n.vscode\n.mono\n.idea\nyarn.lock\n/packages/playwright-core/src/generated\n/packages/playwright-ct-core/src/generated\npackages/*/lib/\ndrivers/\n.android-sdk/\n.gradle/\nnohup.out\n.trace\n.tmp\nallure*\nblob-report\nplaywright-report\ntest-results\n/demo/\n/packages/*/LICENSE\n/packages/*/NOTICE\n/packages/playwright/README.md\n/packages/playwright-test/README.md\n/packages/playwright-core/api.json\n.env\n/tests/installation/output/\n/tests/installation/.registry.json\n.cache/\n.eslintcache\nplaywright.env\nfirefox\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.44,
          "content": "# Microsoft Open Source Code of Conduct\r\n\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\r\n\r\nResources:\r\n\r\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\r\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\r\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\r\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.47,
          "content": "# Contributing\n\n## Choose an issue\n\nPlaywright **requires an issue** for every contribution, except for minor documentation updates. We strongly recommend to pick an issue labeled `open-to-a-pull-request` for your first contribution to the project.\n\nIf you are passioned about a bug/feature, but cannot find an issue describing it, **file an issue first**. This will facilitate the discussion and you might get some early feedback from project maintainers before spending your time on creating a pull request.\n\n## Make a change\n\nMake sure you're running Node.js 20 or later.\n```bash\nnode --version\n```\n\nClone the repository. If you plan to send a pull request, it might be better to [fork the repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) first.\n```bash\ngit clone https://github.com/microsoft/playwright\ncd playwright\n```\n\nInstall dependencies and run the build in watch mode.\n```bash\nnpm ci\nnpm run watch\nnpx playwright install\n```\n\n**Experimental dev mode with Hot Module Replacement for recorder/trace-viewer/UI Mode**\n\n```\nPW_HMR=1 npm run watch\nPW_HMR=1 npx playwright show-trace\nPW_HMR=1 npm run ctest -- --ui\nPW_HMR=1 npx playwright codegen\nPW_HMR=1 npx playwright show-report\n```\n\nPlaywright is a multi-package repository that uses npm workspaces. For browser APIs, look at [`packages/playwright-core`](https://github.com/microsoft/playwright/blob/main/packages/playwright-core). For test runner, see [`packages/playwright`](https://github.com/microsoft/playwright/blob/main/packages/playwright).\n\nNote that some files are generated by the build, so the watch process might override your changes if done in the wrong file. For example, TypeScript types for the API are generated from the [`docs/src`](https://github.com/microsoft/playwright/blob/main/docs/src).\n\nCoding style is fully defined in [.eslintrc](https://github.com/microsoft/playwright/blob/main/.eslintrc.js). Before creating a pull request, or at any moment during development, run linter to check all kinds of things:\n  ```bash\n  npm run lint\n  ```\n\nComments should have an explicit purpose and should improve readability rather than hinder it. If the code would not be understood without comments, consider re-writing the code to make it self-explanatory.\n\n### Write documentation\n\nEvery part of the public API should be documented in [`docs/src`](https://github.com/microsoft/playwright/blob/main/docs/src), in the same change that adds/changes the API. We use markdown files with custom structure to specify the API. Take a look around for an example.\n\nVarious other files are generated from the API specification. If you are running `npm run watch`, these will be re-generated automatically.\n\nLarger changes will require updates to the documentation guides as well. This will be made clear during the code review.\n\n## Add a test\n\nPlaywright requires a test for almost any new or modified functionality. An exception would be a pure refactoring, but chances are you are doing more than that.\n\nThere are multiple [test suites](https://github.com/microsoft/playwright/blob/main/tests) in Playwright that will be executed on the CI. The two most important that you need to run locally are:\n\n- Library tests cover APIs not related to the test runner.\n  ```bash\n  # fast path runs all tests in Chromium\n  npm run ctest\n\n  # slow path runs all tests in three browsers\n  npm run test\n  ```\n\n- Test runner tests.\n  ```bash\n  npm run ttest\n  ```\n\nSince Playwright tests are using Playwright under the hood, everything from our documentation applies, for example [this guide on running and debugging tests](https://playwright.dev/docs/running-tests#running-tests).\n\nNote that tests should be *hermetic*, and not depend on external services. Tests should work on all three platforms: macOS, Linux and Windows.\n\n## Write a commit message\n\nCommit messages should follow the [Semantic Commit Messages](https://www.conventionalcommits.org/en/v1.0.0/) format:\n\n```\nlabel(namespace): title\n\ndescription\n\nfooter\n```\n\n1. *label* is one of the following:\n    - `fix` - bug fixes\n    - `feat` - new features\n    - `docs` - documentation-only changes\n    - `test` - test-only changes\n    - `devops` - changes to the CI or build\n    - `chore` - everything that doesn't fall under previous categories\n1. *namespace* is put in parenthesis after label and is optional. Must be lowercase.\n1. *title* is a brief summary of changes.\n1. *description* is **optional**, new-line separated from title and is in present tense.\n1. *footer* is **optional**, new-line separated from *description* and contains \"fixes\" / \"references\" attribution to github issues.\n\nExample:\n\n```\nfeat(trace viewer): network panel filtering\n\nThis patch adds a filtering toolbar to the network panel.\n<link to a screenshot>\n\nFixes #123, references #234.\n```\n\n## Send a pull request\n\nAll submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult [GitHub Help](https://help.github.com/articles/about-pull-requests/) for more information on using pull requests.\n\nAfter a successful code review, one of the maintainers will merge your pull request. Congratulations!\n\n## More details\n\n**No new dependencies**\n\nThere is a very high bar for new dependencies, including updating to a new version of an existing dependency. We recommend to explicitly discuss this in an issue and get a green light from a maintainer, before creating a pull request that updates dependencies.\n\n**Custom browser build**\n\nTo run tests with custom browser executable, specify `CRPATH`, `WKPATH` or `FFPATH` env variable that points to browser executable:\n```bash\nCRPATH=<path-to-executable> npm run ctest\n```\n\nYou will also find `DEBUG=pw:browser` useful for debugging custom builds.\n\n**Building documentation site**\n\nThe [playwright.dev](https://playwright.dev/) documentation site lives in a separate repository, and documentation from [`docs/src`](https://github.com/microsoft/playwright/blob/main/docs/src) is frequently rolled there.\n\nMost of the time this should not concern you. However, if you are doing something unusual in the docs, you can build locally and test how your changes will look in practice:\n1. Clone the [microsoft/playwright.dev](https://github.com/microsoft/playwright.dev) repo.\n1. Follow [the playwright.dev README instructions to \"roll docs\"](https://github.com/microsoft/playwright.dev/#roll-docs) against your local `playwright` repo with your changes in progress.\n1. Follow [the playwright.dev README instructions to \"run dev server\"](https://github.com/microsoft/playwright.dev/#run-dev-server) to view your changes.\n\n## Contributor License Agreement\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\n### Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.33,
          "content": "                                 Apache License\r\n                           Version 2.0, January 2004\r\n                        http://www.apache.org/licenses/\r\n\r\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n   1. Definitions.\r\n\r\n      \"License\" shall mean the terms and conditions for use, reproduction,\r\n      and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n      \"Licensor\" shall mean the copyright owner or entity authorized by\r\n      the copyright owner that is granting the License.\r\n\r\n      \"Legal Entity\" shall mean the union of the acting entity and all\r\n      other entities that control, are controlled by, or are under common\r\n      control with that entity. For the purposes of this definition,\r\n      \"control\" means (i) the power, direct or indirect, to cause the\r\n      direction or management of such entity, whether by contract or\r\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n      outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n      exercising permissions granted by this License.\r\n\r\n      \"Source\" form shall mean the preferred form for making modifications,\r\n      including but not limited to software source code, documentation\r\n      source, and configuration files.\r\n\r\n      \"Object\" form shall mean any form resulting from mechanical\r\n      transformation or translation of a Source form, including but\r\n      not limited to compiled object code, generated documentation,\r\n      and conversions to other media types.\r\n\r\n      \"Work\" shall mean the work of authorship, whether in Source or\r\n      Object form, made available under the License, as indicated by a\r\n      copyright notice that is included in or attached to the work\r\n      (an example is provided in the Appendix below).\r\n\r\n      \"Derivative Works\" shall mean any work, whether in Source or Object\r\n      form, that is based on (or derived from) the Work and for which the\r\n      editorial revisions, annotations, elaborations, or other modifications\r\n      represent, as a whole, an original work of authorship. For the purposes\r\n      of this License, Derivative Works shall not include works that remain\r\n      separable from, or merely link (or bind by name) to the interfaces of,\r\n      the Work and Derivative Works thereof.\r\n\r\n      \"Contribution\" shall mean any work of authorship, including\r\n      the original version of the Work and any modifications or additions\r\n      to that Work or Derivative Works thereof, that is intentionally\r\n      submitted to Licensor for inclusion in the Work by the copyright owner\r\n      or by an individual or Legal Entity authorized to submit on behalf of\r\n      the copyright owner. For the purposes of this definition, \"submitted\"\r\n      means any form of electronic, verbal, or written communication sent\r\n      to the Licensor or its representatives, including but not limited to\r\n      communication on electronic mailing lists, source code control systems,\r\n      and issue tracking systems that are managed by, or on behalf of, the\r\n      Licensor for the purpose of discussing and improving the Work, but\r\n      excluding communication that is conspicuously marked or otherwise\r\n      designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n      on behalf of whom a Contribution has been received by Licensor and\r\n      subsequently incorporated within the Work.\r\n\r\n   2. Grant of Copyright License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      copyright license to reproduce, prepare Derivative Works of,\r\n      publicly display, publicly perform, sublicense, and distribute the\r\n      Work and such Derivative Works in Source or Object form.\r\n\r\n   3. Grant of Patent License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      (except as stated in this section) patent license to make, have made,\r\n      use, offer to sell, sell, import, and otherwise transfer the Work,\r\n      where such license applies only to those patent claims licensable\r\n      by such Contributor that are necessarily infringed by their\r\n      Contribution(s) alone or by combination of their Contribution(s)\r\n      with the Work to which such Contribution(s) was submitted. If You\r\n      institute patent litigation against any entity (including a\r\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n      or a Contribution incorporated within the Work constitutes direct\r\n      or contributory patent infringement, then any patent licenses\r\n      granted to You under this License for that Work shall terminate\r\n      as of the date such litigation is filed.\r\n\r\n   4. Redistribution. You may reproduce and distribute copies of the\r\n      Work or Derivative Works thereof in any medium, with or without\r\n      modifications, and in Source or Object form, provided that You\r\n      meet the following conditions:\r\n\r\n      (a) You must give any other recipients of the Work or\r\n          Derivative Works a copy of this License; and\r\n\r\n      (b) You must cause any modified files to carry prominent notices\r\n          stating that You changed the files; and\r\n\r\n      (c) You must retain, in the Source form of any Derivative Works\r\n          that You distribute, all copyright, patent, trademark, and\r\n          attribution notices from the Source form of the Work,\r\n          excluding those notices that do not pertain to any part of\r\n          the Derivative Works; and\r\n\r\n      (d) If the Work includes a \"NOTICE\" text file as part of its\r\n          distribution, then any Derivative Works that You distribute must\r\n          include a readable copy of the attribution notices contained\r\n          within such NOTICE file, excluding those notices that do not\r\n          pertain to any part of the Derivative Works, in at least one\r\n          of the following places: within a NOTICE text file distributed\r\n          as part of the Derivative Works; within the Source form or\r\n          documentation, if provided along with the Derivative Works; or,\r\n          within a display generated by the Derivative Works, if and\r\n          wherever such third-party notices normally appear. The contents\r\n          of the NOTICE file are for informational purposes only and\r\n          do not modify the License. You may add Your own attribution\r\n          notices within Derivative Works that You distribute, alongside\r\n          or as an addendum to the NOTICE text from the Work, provided\r\n          that such additional attribution notices cannot be construed\r\n          as modifying the License.\r\n\r\n      You may add Your own copyright statement to Your modifications and\r\n      may provide additional or different license terms and conditions\r\n      for use, reproduction, or distribution of Your modifications, or\r\n      for any such Derivative Works as a whole, provided Your use,\r\n      reproduction, and distribution of the Work otherwise complies with\r\n      the conditions stated in this License.\r\n\r\n   5. Submission of Contributions. Unless You explicitly state otherwise,\r\n      any Contribution intentionally submitted for inclusion in the Work\r\n      by You to the Licensor shall be under the terms and conditions of\r\n      this License, without any additional terms or conditions.\r\n      Notwithstanding the above, nothing herein shall supersede or modify\r\n      the terms of any separate license agreement you may have executed\r\n      with Licensor regarding such Contributions.\r\n\r\n   6. Trademarks. This License does not grant permission to use the trade\r\n      names, trademarks, service marks, or product names of the Licensor,\r\n      except as required for reasonable and customary use in describing the\r\n      origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n   7. Disclaimer of Warranty. Unless required by applicable law or\r\n      agreed to in writing, Licensor provides the Work (and each\r\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n      implied, including, without limitation, any warranties or conditions\r\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n      PARTICULAR PURPOSE. You are solely responsible for determining the\r\n      appropriateness of using or redistributing the Work and assume any\r\n      risks associated with Your exercise of permissions under this License.\r\n\r\n   8. Limitation of Liability. In no event and under no legal theory,\r\n      whether in tort (including negligence), contract, or otherwise,\r\n      unless required by applicable law (such as deliberate and grossly\r\n      negligent acts) or agreed to in writing, shall any Contributor be\r\n      liable to You for damages, including any direct, indirect, special,\r\n      incidental, or consequential damages of any character arising as a\r\n      result of this License or out of the use or inability to use the\r\n      Work (including but not limited to damages for loss of goodwill,\r\n      work stoppage, computer failure or malfunction, or any and all\r\n      other commercial damages or losses), even if such Contributor\r\n      has been advised of the possibility of such damages.\r\n\r\n   9. Accepting Warranty or Additional Liability. While redistributing\r\n      the Work or Derivative Works thereof, You may choose to offer,\r\n      and charge a fee for, acceptance of support, warranty, indemnity,\r\n      or other liability obligations and/or rights consistent with this\r\n      License. However, in accepting such obligations, You may act only\r\n      on Your own behalf and on Your sole responsibility, not on behalf\r\n      of any other Contributor, and only if You agree to indemnify,\r\n      defend, and hold each Contributor harmless for any liability\r\n      incurred by, or claims asserted against, such Contributor by reason\r\n      of your accepting any such warranty or additional liability.\r\n\r\n   END OF TERMS AND CONDITIONS\r\n\r\n   APPENDIX: How to apply the Apache License to your work.\r\n\r\n      To apply the Apache License to your work, attach the following\r\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\r\n      replaced with your own identifying information. (Don't include\r\n      the brackets!)  The text should be enclosed in the appropriate\r\n      comment syntax for the file format. We also recommend that a\r\n      file or class name and description of purpose be included on the\r\n      same \"printed page\" as the copyright notice for easier\r\n      identification within third-party archives.\r\n\r\n   Portions Copyright (c) Microsoft Corporation.\r\n   Portions Copyright 2017 Google Inc.\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.25,
          "content": "Playwright\nCopyright (c) Microsoft Corporation\n\nThis software contains code derived from the Puppeteer project (https://github.com/puppeteer/puppeteer),\navailable under the Apache 2.0 license (https://github.com/puppeteer/puppeteer/blob/master/LICENSE).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.93,
          "content": "# 🎭 Playwright\n\n[![npm version](https://img.shields.io/npm/v/playwright.svg)](https://www.npmjs.com/package/playwright) <!-- GEN:chromium-version-badge -->[![Chromium version](https://img.shields.io/badge/chromium-132.0.6834.57-blue.svg?logo=google-chrome)](https://www.chromium.org/Home)<!-- GEN:stop --> <!-- GEN:firefox-version-badge -->[![Firefox version](https://img.shields.io/badge/firefox-132.0-blue.svg?logo=firefoxbrowser)](https://www.mozilla.org/en-US/firefox/new/)<!-- GEN:stop --> <!-- GEN:webkit-version-badge -->[![WebKit version](https://img.shields.io/badge/webkit-18.2-blue.svg?logo=safari)](https://webkit.org/)<!-- GEN:stop --> [![Join Discord](https://img.shields.io/badge/join-discord-infomational)](https://aka.ms/playwright/discord)\n\n## [Documentation](https://playwright.dev) | [API reference](https://playwright.dev/docs/api/class-playwright)\n\nPlaywright is a framework for Web Testing and Automation. It allows testing [Chromium](https://www.chromium.org/Home), [Firefox](https://www.mozilla.org/en-US/firefox/new/) and [WebKit](https://webkit.org/) with a single API. Playwright is built to enable cross-browser web automation that is **ever-green**, **capable**, **reliable** and **fast**.\n\n|          | Linux | macOS | Windows |\n|   :---   | :---: | :---: | :---:   |\n| Chromium <!-- GEN:chromium-version -->132.0.6834.57<!-- GEN:stop --> | :white_check_mark: | :white_check_mark: | :white_check_mark: |\n| WebKit <!-- GEN:webkit-version -->18.2<!-- GEN:stop --> | :white_check_mark: | :white_check_mark: | :white_check_mark: |\n| Firefox <!-- GEN:firefox-version -->132.0<!-- GEN:stop --> | :white_check_mark: | :white_check_mark: | :white_check_mark: |\n\nHeadless execution is supported for all browsers on all platforms. Check out [system requirements](https://playwright.dev/docs/intro#system-requirements) for details.\n\nLooking for Playwright for [Python](https://playwright.dev/python/docs/intro), [.NET](https://playwright.dev/dotnet/docs/intro), or [Java](https://playwright.dev/java/docs/intro)?\n\n## Installation\n\nPlaywright has its own test runner for end-to-end tests, we call it Playwright Test.\n\n### Using init command\n\nThe easiest way to get started with Playwright Test is to run the init command.\n\n```Shell\n# Run from your project's root directory\nnpm init playwright@latest\n# Or create a new project\nnpm init playwright@latest new-project\n```\n\nThis will create a configuration file, optionally add examples, a GitHub Action workflow and a first test example.spec.ts. You can now jump directly to writing assertions section.\n\n### Manually\n\nAdd dependency and install browsers.\n\n```Shell\nnpm i -D @playwright/test\n# install supported browsers\nnpx playwright install\n```\n\nYou can optionally install only selected browsers, see [install browsers](https://playwright.dev/docs/cli#install-browsers) for more details. Or you can install no browsers at all and use existing [browser channels](https://playwright.dev/docs/browsers).\n\n* [Getting started](https://playwright.dev/docs/intro)\n* [API reference](https://playwright.dev/docs/api/class-playwright)\n\n## Capabilities\n\n### Resilient • No flaky tests\n\n**Auto-wait**. Playwright waits for elements to be actionable prior to performing actions. It also has a rich set of introspection events. The combination of the two eliminates the need for artificial timeouts - a primary cause of flaky tests.\n\n**Web-first assertions**. Playwright assertions are created specifically for the dynamic web. Checks are automatically retried until the necessary conditions are met.\n\n**Tracing**. Configure test retry strategy, capture execution trace, videos and screenshots to eliminate flakes.\n\n### No trade-offs • No limits\n\nBrowsers run web content belonging to different origins in different processes. Playwright is aligned with the architecture of the modern browsers and runs tests out-of-process. This makes Playwright free of the typical in-process test runner limitations.\n\n**Multiple everything**. Test scenarios that span multiple tabs, multiple origins and multiple users. Create scenarios with different contexts for different users and run them against your server, all in one test.\n\n**Trusted events**. Hover elements, interact with dynamic controls and produce trusted events. Playwright uses real browser input pipeline indistinguishable from the real user.\n\nTest frames, pierce Shadow DOM. Playwright selectors pierce shadow DOM and allow entering frames seamlessly.\n\n### Full isolation • Fast execution\n\n**Browser contexts**. Playwright creates a browser context for each test. Browser context is equivalent to a brand new browser profile. This delivers full test isolation with zero overhead. Creating a new browser context only takes a handful of milliseconds.\n\n**Log in once**. Save the authentication state of the context and reuse it in all the tests. This bypasses repetitive log-in operations in each test, yet delivers full isolation of independent tests.\n\n### Powerful Tooling\n\n**[Codegen](https://playwright.dev/docs/codegen)**. Generate tests by recording your actions. Save them into any language.\n\n**[Playwright inspector](https://playwright.dev/docs/inspector)**. Inspect page, generate selectors, step through the test execution, see click points and explore execution logs.\n\n**[Trace Viewer](https://playwright.dev/docs/trace-viewer)**. Capture all the information to investigate the test failure. Playwright trace contains test execution screencast, live DOM snapshots, action explorer, test source and many more.\n\nLooking for Playwright for [TypeScript](https://playwright.dev/docs/intro), [JavaScript](https://playwright.dev/docs/intro), [Python](https://playwright.dev/python/docs/intro), [.NET](https://playwright.dev/dotnet/docs/intro), or [Java](https://playwright.dev/java/docs/intro)?\n\n## Examples\n\nTo learn how to run these Playwright Test examples, check out our [getting started docs](https://playwright.dev/docs/intro).\n\n#### Page screenshot\n\nThis code snippet navigates to Playwright homepage and saves a screenshot.\n\n```TypeScript\nimport { test } from '@playwright/test';\n\ntest('Page Screenshot', async ({ page }) => {\n  await page.goto('https://playwright.dev/');\n  await page.screenshot({ path: `example.png` });\n});\n```\n\n#### Mobile and geolocation\n\nThis snippet emulates Mobile Safari on a device at given geolocation, navigates to maps.google.com, performs the action and takes a screenshot.\n\n```TypeScript\nimport { test, devices } from '@playwright/test';\n\ntest.use({\n  ...devices['iPhone 13 Pro'],\n  locale: 'en-US',\n  geolocation: { longitude: 12.492507, latitude: 41.889938 },\n  permissions: ['geolocation'],\n})\n\ntest('Mobile and geolocation', async ({ page }) => {\n  await page.goto('https://maps.google.com');\n  await page.getByText('Your location').click();\n  await page.waitForRequest(/.*preview\\/pwa/);\n  await page.screenshot({ path: 'colosseum-iphone.png' });\n});\n```\n\n#### Evaluate in browser context\n\nThis code snippet navigates to example.com, and executes a script in the page context.\n\n```TypeScript\nimport { test } from '@playwright/test';\n\ntest('Evaluate in browser context', async ({ page }) => {\n  await page.goto('https://www.example.com/');\n  const dimensions = await page.evaluate(() => {\n    return {\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight,\n      deviceScaleFactor: window.devicePixelRatio\n    }\n  });\n  console.log(dimensions);\n});\n```\n\n#### Intercept network requests\n\nThis code snippet sets up request routing for a page to log all network requests.\n\n```TypeScript\nimport { test } from '@playwright/test';\n\ntest('Intercept network requests', async ({ page }) => {\n  // Log and continue all network requests\n  await page.route('**', route => {\n    console.log(route.request().url());\n    route.continue();\n  });\n  await page.goto('http://todomvc.com');\n});\n```\n\n## Resources\n\n* [Documentation](https://playwright.dev)\n* [API reference](https://playwright.dev/docs/api/class-playwright/)\n* [Contribution guide](CONTRIBUTING.md)\n* [Changelog](https://github.com/microsoft/playwright/releases)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.63,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.9 BLOCK -->\r\n\r\n## Security\r\n\r\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet) and [Xamarin](https://github.com/xamarin).\r\n\r\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/security.md/definition), please report it to us as described below.\r\n\r\n## Reporting Security Issues\r\n\r\n**Please do not report security vulnerabilities through public GitHub issues.**\r\n\r\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\r\n\r\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\r\n\r\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \r\n\r\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\r\n\r\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\r\n  * Full paths of source file(s) related to the manifestation of the issue\r\n  * The location of the affected source code (tag/branch/commit or direct URL)\r\n  * Any special configuration required to reproduce the issue\r\n  * Step-by-step instructions to reproduce the issue\r\n  * Proof-of-concept or exploit code (if possible)\r\n  * Impact of the issue, including how an attacker might exploit the issue\r\n\r\nThis information will help us triage your report more quickly.\r\n\r\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/security.md/msrc/bounty) page for more details about our active programs.\r\n\r\n## Preferred Languages\r\n\r\nWe prefer all communications to be in English.\r\n\r\n## Policy\r\n\r\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/security.md/cvd).\r\n\r\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\r\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 0.78,
          "content": "# Support\n\n## How to file issues and get help  \n\nThis project uses GitHub issues to track bugs and feature requests. Please search the [existing issues][gh-issues] before filing new ones to avoid duplicates. For new issues, file your bug or feature request as a new issue using corresponding template.\n\nFor help and questions about using this project, please see the [docs site for Playwright][docs].\n\nJoin our community [Discord Server][discord-server] to connect with other developers using Playwright and ask questions in our 'help-playwright' forum.\n\n## Microsoft Support Policy  \n\nSupport for Playwright is limited to the resources listed above.\n\n[gh-issues]: https://github.com/microsoft/playwright/issues/\n[docs]: https://playwright.dev/\n[discord-server]: https://aka.ms/playwright/discord\n"
        },
        {
          "name": "babel.config.json",
          "type": "blob",
          "size": 0.5,
          "content": "{\n  \"assumptions\": {\n    \"setPublicClassFields\": true\n  },\n  \"plugins\": [\n    [\"@babel/plugin-transform-typescript\", { \"allowDeclareFields\": true } ],\n    \"@babel/plugin-transform-export-namespace-from\",\n    \"@babel/plugin-transform-class-properties\",\n    \"@babel/plugin-transform-logical-assignment-operators\",\n    \"@babel/plugin-transform-nullish-coalescing-operator\",\n    \"@babel/plugin-transform-optional-chaining\",\n    \"@babel/plugin-transform-modules-commonjs\"\n  ],\n  \"ignore\": [\n    \"**/*.d.ts\"\n  ]\n}\n"
        },
        {
          "name": "browser_patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 279.53,
          "content": "{\n  \"name\": \"playwright-internal\",\n  \"version\": \"1.50.0-next\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"playwright-internal\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"workspaces\": [\n        \"packages/*\"\n      ],\n      \"devDependencies\": {\n        \"@actions/core\": \"^1.10.0\",\n        \"@babel/cli\": \"^7.23.4\",\n        \"@babel/code-frame\": \"^7.23.5\",\n        \"@babel/plugin-transform-class-properties\": \"^7.23.3\",\n        \"@babel/plugin-transform-export-namespace-from\": \"^7.23.4\",\n        \"@babel/plugin-transform-logical-assignment-operators\": \"^7.23.4\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.23.3\",\n        \"@babel/plugin-transform-nullish-coalescing-operator\": \"^7.23.4\",\n        \"@babel/plugin-transform-optional-chaining\": \"^7.23.4\",\n        \"@babel/plugin-transform-typescript\": \"^7.23.6\",\n        \"@babel/preset-react\": \"^7.23.3\",\n        \"@types/babel__core\": \"^7.20.2\",\n        \"@types/codemirror\": \"^5.60.7\",\n        \"@types/formidable\": \"^2.0.4\",\n        \"@types/immutable\": \"^3.8.7\",\n        \"@types/node\": \"^18.19.68\",\n        \"@types/react\": \"^18.0.12\",\n        \"@types/react-dom\": \"^18.0.5\",\n        \"@types/ws\": \"^8.5.3\",\n        \"@types/xml2js\": \"^0.4.9\",\n        \"@typescript-eslint/eslint-plugin\": \"^7.15.0\",\n        \"@typescript-eslint/parser\": \"^7.15.0\",\n        \"@typescript-eslint/utils\": \"^7.15.0\",\n        \"@vitejs/plugin-basic-ssl\": \"^1.1.0\",\n        \"@vitejs/plugin-react\": \"^4.2.1\",\n        \"@zip.js/zip.js\": \"^2.7.29\",\n        \"ansi-styles\": \"^4.3.0\",\n        \"chokidar\": \"^3.5.3\",\n        \"chromium-bidi\": \"^0.7.1\",\n        \"colors\": \"^1.4.0\",\n        \"concurrently\": \"^6.2.1\",\n        \"cross-env\": \"^7.0.3\",\n        \"dotenv\": \"^16.4.5\",\n        \"electron\": \"^30.1.2\",\n        \"esbuild\": \"^0.18.11\",\n        \"eslint\": \"^8.55.0\",\n        \"eslint-plugin-internal-playwright\": \"file:utils/eslint-plugin-internal-playwright\",\n        \"eslint-plugin-notice\": \"^0.9.10\",\n        \"eslint-plugin-react\": \"^7.35.0\",\n        \"eslint-plugin-react-hooks\": \"^4.6.2\",\n        \"formidable\": \"^2.1.1\",\n        \"immutable\": \"^4.3.7\",\n        \"license-checker\": \"^25.0.1\",\n        \"mime\": \"^3.0.0\",\n        \"node-stream-zip\": \"^1.15.0\",\n        \"react\": \"^18.1.0\",\n        \"react-dom\": \"^18.1.0\",\n        \"ssim.js\": \"^3.5.0\",\n        \"typescript\": \"^5.7.2\",\n        \"vite\": \"^5.4.6\",\n        \"ws\": \"^8.17.1\",\n        \"xml2js\": \"^0.5.0\",\n        \"yaml\": \"^2.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@aashutoshrathi/word-wrap\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz\",\n      \"integrity\": \"sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@actions/core\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/@actions/core/-/core-1.10.1.tgz\",\n      \"integrity\": \"sha512-3lBR9EDAY+iYIpTnTIXmWcNbX3T2kCkAEQGIQx4NVQ0575nk2k3GRZDTPQG+vVtS2izSLmINlxXf0uLtnrTP+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@actions/http-client\": \"^2.0.1\",\n        \"uuid\": \"^8.3.2\"\n      }\n    },\n    \"node_modules/@actions/http-client\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@actions/http-client/-/http-client-2.2.0.tgz\",\n      \"integrity\": \"sha512-q+epW0trjVUUHboliPb4UF9g2msf+w61b32tAkFEwL/IwP0DQWgbCMM0Hbe3e3WXSKz5VcUXbzJQgy8Hkra/Lg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tunnel\": \"^0.0.6\",\n        \"undici\": \"^5.25.4\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz\",\n      \"integrity\": \"sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==\",\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/cli\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/cli/-/cli-7.23.4.tgz\",\n      \"integrity\": \"sha512-j3luA9xGKCXVyCa5R7lJvOMM+Kc2JEnAEIgz2ggtjQ/j5YUVgfsg/WsG95bbsgq7YLHuiCOzMnoSasuY16qiCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"commander\": \"^4.0.1\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"fs-readdir-recursive\": \"^1.1.0\",\n        \"glob\": \"^7.2.0\",\n        \"make-dir\": \"^2.1.0\",\n        \"slash\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"babel\": \"bin/babel.js\",\n        \"babel-external-helpers\": \"bin/babel-external-helpers.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"optionalDependencies\": {\n        \"@nicolo-ribaudo/chokidar-2\": \"2.1.8-no-fsevents.3\",\n        \"chokidar\": \"^3.4.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.23.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz\",\n      \"integrity\": \"sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA==\",\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.23.4\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.23.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.23.5.tgz\",\n      \"integrity\": \"sha512-uU27kfDRlhfKl+w1U6vp16IuvSLtjAxdArVXPa9BvLkrr7CYIsxH5adpHObeAGY/41+syctUWOZ140a2Rvkgjw==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.23.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.23.7.tgz\",\n      \"integrity\": \"sha512-+UpDgowcmqe36d4NwqvKsyPMlOLNGMsfMmQ5WGCu+siCe3t3dfe9njrzGfdN4qq+bcNUt0+Vw6haRxBOycs4dw==\",\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.23.5\",\n        \"@babel/generator\": \"^7.23.6\",\n        \"@babel/helper-compilation-targets\": \"^7.23.6\",\n        \"@babel/helper-module-transforms\": \"^7.23.3\",\n        \"@babel/helpers\": \"^7.23.7\",\n        \"@babel/parser\": \"^7.23.6\",\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.23.7\",\n        \"@babel/types\": \"^7.23.6\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.23.6.tgz\",\n      \"integrity\": \"sha512-qrSfCYxYQB5owCmGLbl8XRpX1ytXlpueOb0N0UmQwA073KZxejgQTzAmJezxvpwQD9uGtK2shHdi55QT+MbjIw==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.23.6\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.22.5.tgz\",\n      \"integrity\": \"sha512-LvBTxu8bQSQkcyKOU+a1btnNFQ1dMAd0R6PyW3arXes06F6QLWLIrd681bxRPIXlrMGR3XYnW9JyML7dP3qgxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.23.6.tgz\",\n      \"integrity\": \"sha512-9JB548GZoQVmzrFgp8o7KxdgkTGm6xs9DW0o/Pim72UDjzr5ObUQ6ZzYPqA+g9OTS2bBQoctLJrky0RDCAWRgQ==\",\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.23.5\",\n        \"@babel/helper-validator-option\": \"^7.23.5\",\n        \"browserslist\": \"^4.22.2\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.23.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.23.7.tgz\",\n      \"integrity\": \"sha512-xCoqR/8+BoNnXOY7RVSgv6X+o7pmT5q1d+gGcRlXYkI+9B31glE4jeejhKVpA04O1AtzOt7OSQ6VYKP5FcRl9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.23.0\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.23.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.22.5\",\n        \"@babel/helper-replace-supers\": \"^7.22.20\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-environment-visitor\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz\",\n      \"integrity\": \"sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-function-name\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz\",\n      \"integrity\": \"sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-hoist-variables\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz\",\n      \"integrity\": \"sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.23.0.tgz\",\n      \"integrity\": \"sha512-6gfrPwh7OuT6gZyJZvd6WbTfrqAo7vm4xCzAXOusKqq/vWdKXphTpj5klHKNmRUU6/QRGlBsyU9mAIPaWHlqJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.22.15.tgz\",\n      \"integrity\": \"sha512-0pYVBnDKZO2fnSPCrgM/6WMc7eS20Fbok+0r88fp+YtWVLZrp4CkafFGIp+W0VKw4a22sgebPT99y+FDNMdP4w==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.23.3.tgz\",\n      \"integrity\": \"sha512-7bBs4ED9OmswdfDzpz4MpWgSrV7FXlc3zIagvLFjS5H+Mk7Snr21vQ6QwrsoCGMfNC4e4LQPdoULEt4ykz0SRQ==\",\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-module-imports\": \"^7.22.15\",\n        \"@babel/helper-simple-access\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.22.5.tgz\",\n      \"integrity\": \"sha512-HBwaojN0xFRx4yIvpwGqxiV2tUfl7401jlok564NgB9EHS1y6QT17FmKWm4ztqjeVdXLuC4fSvHc5ePpQjoTbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.22.5.tgz\",\n      \"integrity\": \"sha512-uLls06UVKgFG9QD4OeFYLEGteMIAa5kpTPcFL28yuCIIzsf6ZyKZMllKVOCZFhiZ5ptnwX4mtKdWCBE/uT4amg==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-replace-supers\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.22.20.tgz\",\n      \"integrity\": \"sha512-qsW0In3dbwQUbK8kejJ4R7IHVGwHJlV6lpG6UA7a9hSa2YEiAib+N1T2kr6PEeUT+Fl7najmSOS6SmAwCHK6Tw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.22.15\",\n        \"@babel/helper-optimise-call-expression\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-simple-access\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.22.5.tgz\",\n      \"integrity\": \"sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.22.5.tgz\",\n      \"integrity\": \"sha512-tK14r66JZKiC43p8Ki33yLBVJKlQDFoA8GYN67lWCDCqoL6EMMSuM9b+Iff2jHaM/RRFYl7K+iiru7hbRqNx8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-split-export-declaration\": {\n      \"version\": \"7.22.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz\",\n      \"integrity\": \"sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.25.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz\",\n      \"integrity\": \"sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.25.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz\",\n      \"integrity\": \"sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.23.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.23.5.tgz\",\n      \"integrity\": \"sha512-85ttAOMLsr53VgXkTbkx8oA6YTfT4q7/HzXSLEYmjcSTJPMPQtvq1BD79Byep5xMUYbGRzEpDsjUf3dyp54IKw==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.23.8\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.23.8.tgz\",\n      \"integrity\": \"sha512-KDqYz4PiOWvDFrdHLPhKtCThtIcKVy6avWD2oG4GEvyQ+XDZwHD4YQd+H2vNMnq2rkdxsDkU82T+Vk8U/WXHRQ==\",\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.23.7\",\n        \"@babel/types\": \"^7.23.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz\",\n      \"integrity\": \"sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A==\",\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.26.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.3.tgz\",\n      \"integrity\": \"sha512-WJ/CvmY8Mea8iDXo6a7RK2wbmJITT5fN3BEkRuFlxVyNx8jOKIIhmC4fSkTcPcf8JyavbBwIe6OpiCOBXt/IcA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.26.3\"\n      },\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-jsx\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.23.3.tgz\",\n      \"integrity\": \"sha512-EB2MELswq55OHUoRZLGg/zC7QWUKfNLpE57m/S2yr1uEneIgsTgrSzXP3NXEsMkVn76OlaVVnzN+ugObuYGwhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-typescript\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.23.3.tgz\",\n      \"integrity\": \"sha512-9EiNjVJOMwCO+43TqoTrgQ8jMwcAd0sWyXi9RPfIsLTj4R2MADDDQXELhffaUx/uJv2AYcxBgPwH6j4TIA4ytQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-class-properties\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.23.3.tgz\",\n      \"integrity\": \"sha512-uM+AN8yCIjDPccsKGlw271xjJtGii+xQIF/uMPS8H15L12jZTsLfF4o5vNO7d/oUguOyfdikHGc/yi9ge4SGIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.22.15\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-export-namespace-from\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.23.4.tgz\",\n      \"integrity\": \"sha512-GzuSBcKkx62dGzZI1WVgTWvkkz84FZO5TC5T8dl/Tht/rAla6Dg/Mz9Yhypg+ezVACf/rgDuQt3kbWEv7LdUDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-logical-assignment-operators\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.23.4.tgz\",\n      \"integrity\": \"sha512-Mc/ALf1rmZTP4JKKEhUwiORU+vcfarFVLfcFiolKUo6sewoxSEgl36ak5t+4WamRsNr6nzjZXQjM35WsU+9vbg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.23.3.tgz\",\n      \"integrity\": \"sha512-aVS0F65LKsdNOtcz6FRCpE4OgsP2OFnW46qNxNIX9h3wuzaNcSQsJysuMwqSibC98HPrf2vCgtxKNwS0DAlgcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.23.3\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-simple-access\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-nullish-coalescing-operator\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.23.4.tgz\",\n      \"integrity\": \"sha512-jHE9EVVqHKAQx+VePv5LLGHjmHSJR76vawFPTdlxR/LVJPfOEGxREQwQfjuZEOPTwG92X3LINSh3M40Rv4zpVA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-optional-chaining\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.23.4.tgz\",\n      \"integrity\": \"sha512-ZU8y5zWOfjM5vZ+asjgAPwDaBjJzgufjES89Rs4Lpq63O300R/kOz30WCLo6BxxX6QVEilwSlpClnG5cZaikTA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-display-name\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.23.3.tgz\",\n      \"integrity\": \"sha512-GnvhtVfA2OAtzdX58FJxU19rhoGeQzyVndw3GgtdECQvQFXPEZIOVULHVZGAYmOgmqjXpVpfocAbSjh99V/Fqw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.23.4.tgz\",\n      \"integrity\": \"sha512-5xOpoPguCZCRbo/JeHlloSkTA8Bld1J/E1/kLfD1nsuiW1m8tduTA1ERCgIZokDflX/IBzKcqR3l7VlRgiIfHA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-module-imports\": \"^7.22.15\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-jsx\": \"^7.23.3\",\n        \"@babel/types\": \"^7.23.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx-development\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.22.5.tgz\",\n      \"integrity\": \"sha512-bDhuzwWMuInwCYeDeMzyi7TaBgRQei6DqxhbyniL7/VG4RSS7HtSL2QbY4eESy1KJqlWt8g3xeEBGPuo+XqC8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/plugin-transform-react-jsx\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx-self\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.23.3.tgz\",\n      \"integrity\": \"sha512-qXRvbeKDSfwnlJnanVRp0SfuWE5DQhwQr5xtLBzp56Wabyo+4CMosF6Kfp+eOD/4FYpql64XVJ2W0pVLlJZxOQ==\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-jsx-source\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.23.3.tgz\",\n      \"integrity\": \"sha512-91RS0MDnAWDNvGC6Wio5XYkyWI39FMFO+JK9+4AlgaTH+yWwVTsw7/sn6LK0lH7c5F+TFkpv/3LfCJ1Ydwof/g==\",\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-react-pure-annotations\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.23.3.tgz\",\n      \"integrity\": \"sha512-qMFdSS+TUhB7Q/3HVPnEdYJDQIk57jkntAwSuz9xfSE4n+3I+vHYCli3HoHawN1Z3RfCz/y1zXA/JXjG6cVImQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-typescript\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.23.6.tgz\",\n      \"integrity\": \"sha512-6cBG5mBvUu4VUD04OHKnYzbuHNP8huDsD3EDqqpIpsswTDoqHCjLoHb6+QgsV1WsT2nipRqCPgxD3LXnEO7XfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.23.6\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-typescript\": \"^7.23.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-react\": {\n      \"version\": \"7.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.23.3.tgz\",\n      \"integrity\": \"sha512-tbkHOS9axH6Ysf2OUEqoSZ6T3Fa2SrNH6WTWSPBboxKzdxNc9qOICeLXkNG0ZEwbQ1HY8liwOce4aN/Ceyuq6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-validator-option\": \"^7.22.15\",\n        \"@babel/plugin-transform-react-display-name\": \"^7.23.3\",\n        \"@babel/plugin-transform-react-jsx\": \"^7.22.15\",\n        \"@babel/plugin-transform-react-jsx-development\": \"^7.22.5\",\n        \"@babel/plugin-transform-react-pure-annotations\": \"^7.23.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.23.8\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.8.tgz\",\n      \"integrity\": \"sha512-Y7KbAP984rn1VGMbGqKmBLio9V7y5Je9GvU4rQPCPinCyNfUcToxIXl06d59URp/F3LwinvODxab5N/G6qggkw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.22.15.tgz\",\n      \"integrity\": \"sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/parser\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.23.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.7.tgz\",\n      \"integrity\": \"sha512-tY3mM8rH9jM0YHFGyfC0/xf+SB5eKUu7HPj7/k3fpi9dAlsMc5YbQvDi0Sh2QTPXqMhyaAtzAr807TIyfQrmyg==\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.23.5\",\n        \"@babel/generator\": \"^7.23.6\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.23.0\",\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/parser\": \"^7.23.6\",\n        \"@babel/types\": \"^7.23.6\",\n        \"debug\": \"^4.3.1\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.26.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.3.tgz\",\n      \"integrity\": \"sha512-vN5p+1kl59GVKMvTHt55NzzmYVxprfJD+ql7U9NFIfKCBkYE55LYtS+WtPlaYOyzydrKI8Nezd+aZextrd+FMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.25.9\",\n        \"@babel/helper-validator-identifier\": \"^7.25.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@electron/get\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@electron/get/-/get-2.0.3.tgz\",\n      \"integrity\": \"sha512-Qkzpg2s9GnVV2I2BjRksUi43U5e6+zaQMcjoJy0C+C5oxaKl+fmckGDQFtRpZpZV0NQekuZZ+tGz7EA9TVnQtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"env-paths\": \"^2.2.0\",\n        \"fs-extra\": \"^8.1.0\",\n        \"got\": \"^11.8.5\",\n        \"progress\": \"^2.0.3\",\n        \"semver\": \"^6.2.0\",\n        \"sumchecker\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"optionalDependencies\": {\n        \"global-agent\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/@esbuild/aix-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"aix\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.18.20.tgz\",\n      \"integrity\": \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz\",\n      \"integrity\": \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/android-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-arm64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz\",\n      \"integrity\": \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-arm64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz\",\n      \"integrity\": \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz\",\n      \"integrity\": \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz\",\n      \"integrity\": \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ia32\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz\",\n      \"integrity\": \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz\",\n      \"integrity\": \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-mips64el\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz\",\n      \"integrity\": \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ppc64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz\",\n      \"integrity\": \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-riscv64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz\",\n      \"integrity\": \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-s390x\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz\",\n      \"integrity\": \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/linux-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/netbsd-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/openbsd-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/sunos-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-arm64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz\",\n      \"integrity\": \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-ia32\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz\",\n      \"integrity\": \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@esbuild/win32-x64\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz\",\n      \"integrity\": \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.10.0.tgz\",\n      \"integrity\": \"sha512-Cu96Sd2By9mCNTx2iyKOmq10v22jUVQv0lQnlGNy16oE9589yE+QADPbrMGCkA51cKZSg3Pu/aTJVTGfL/qjUA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/globals\": {\n      \"version\": \"13.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.56.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.56.0.tgz\",\n      \"integrity\": \"sha512-gMsVel9D7f2HLkBma9VbtzZRehRogVRfbr++f06nL2vnCGCNlzOD+/MUov/F4p8myyAHspEhVobgjpX64q5m6A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@fastify/busboy\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@fastify/busboy/-/busboy-2.1.0.tgz\",\n      \"integrity\": \"sha512-+KpH+QxZU7O4675t3mnkQKcZZg56u+K/Ct2K+N2AZYNVK8kyeo/bI18tI8aPm3tvNNRyTWfj6s5tnGNlcbQRsA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.14\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz\",\n      \"integrity\": \"sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^2.0.2\",\n        \"debug\": \"^4.3.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array/node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.2.tgz\",\n      \"integrity\": \"sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.1.tgz\",\n      \"integrity\": \"sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz\",\n      \"integrity\": \"sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.21\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.21.tgz\",\n      \"integrity\": \"sha512-SRfKmRe1KvYnxjEMtxEr+J4HIeMX5YBg/qhRHpxEIGjhX1rshcHlnFUE9K0GazhVKWM7B+nARSkV8LuvJdJ5/g==\",\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@nicolo-ribaudo/chokidar-2\": {\n      \"version\": \"2.1.8-no-fsevents.3\",\n      \"resolved\": \"https://registry.npmjs.org/@nicolo-ribaudo/chokidar-2/-/chokidar-2-2.1.8-no-fsevents.3.tgz\",\n      \"integrity\": \"sha512-s88O1aVtXftvp5bCPB7WnmXc5IwOZZ7YPuwNPt+GtOOXpPvad1LfbmjYv+qII7zP6RU2QGnqve27dnLycEnyEQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@playwright/browser-chromium\": {\n      \"resolved\": \"packages/playwright-browser-chromium\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/browser-firefox\": {\n      \"resolved\": \"packages/playwright-browser-firefox\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/browser-webkit\": {\n      \"resolved\": \"packages/playwright-browser-webkit\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/experimental-ct-core\": {\n      \"resolved\": \"packages/playwright-ct-core\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/experimental-ct-react\": {\n      \"resolved\": \"packages/playwright-ct-react\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/experimental-ct-react17\": {\n      \"resolved\": \"packages/playwright-ct-react17\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/experimental-ct-svelte\": {\n      \"resolved\": \"packages/playwright-ct-svelte\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/experimental-ct-vue\": {\n      \"resolved\": \"packages/playwright-ct-vue\",\n      \"link\": true\n    },\n    \"node_modules/@playwright/test\": {\n      \"resolved\": \"packages/playwright-test\",\n      \"link\": true\n    },\n    \"node_modules/@rollup/rollup-android-arm-eabi\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.22.4.tgz\",\n      \"integrity\": \"sha512-Fxamp4aEZnfPOcGA8KSNEohV8hX7zVHOemC8jVBoBUHu5zpJK/Eu3uJwt6BMgy9fkvzxDaurgj96F/NiLukF2w==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-android-arm64\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.22.4.tgz\",\n      \"integrity\": \"sha512-VXoK5UMrgECLYaMuGuVTOx5kcuap1Jm8g/M83RnCHBKOqvPPmROFJGQaZhGccnsFtfXQ3XYa4/jMCJvZnbJBdA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-arm64\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.22.4.tgz\",\n      \"integrity\": \"sha512-xMM9ORBqu81jyMKCDP+SZDhnX2QEVQzTcC6G18KlTQEzWK8r/oNZtKuZaCcHhnsa6fEeOBionoyl5JsAbE/36Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-x64\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.22.4.tgz\",\n      \"integrity\": \"sha512-aJJyYKQwbHuhTUrjWjxEvGnNNBCnmpHDvrb8JFDbeSH3m2XdHcxDd3jthAzvmoI8w/kSjd2y0udT+4okADsZIw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.22.4.tgz\",\n      \"integrity\": \"sha512-j63YtCIRAzbO+gC2L9dWXRh5BFetsv0j0va0Wi9epXDgU/XUi5dJKo4USTttVyK7fGw2nPWK0PbAvyliz50SCQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.22.4.tgz\",\n      \"integrity\": \"sha512-dJnWUgwWBX1YBRsuKKMOlXCzh2Wu1mlHzv20TpqEsfdZLb3WoJW2kIEsGwLkroYf24IrPAvOT/ZQ2OYMV6vlrg==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.22.4.tgz\",\n      \"integrity\": \"sha512-AdPRoNi3NKVLolCN/Sp4F4N1d98c4SBnHMKoLuiG6RXgoZ4sllseuGioszumnPGmPM2O7qaAX/IJdeDU8f26Aw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.22.4.tgz\",\n      \"integrity\": \"sha512-Gl0AxBtDg8uoAn5CCqQDMqAx22Wx22pjDOjBdmG0VIWX3qUBHzYmOKh8KXHL4UpogfJ14G4wk16EQogF+v8hmA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-powerpc64le-gnu\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.22.4.tgz\",\n      \"integrity\": \"sha512-3aVCK9xfWW1oGQpTsYJJPF6bfpWfhbRnhdlyhak2ZiyFLDaayz0EP5j9V1RVLAAxlmWKTDfS9wyRyY3hvhPoOg==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.22.4.tgz\",\n      \"integrity\": \"sha512-ePYIir6VYnhgv2C5Xe9u+ico4t8sZWXschR6fMgoPUK31yQu7hTEJb7bCqivHECwIClJfKgE7zYsh1qTP3WHUA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.22.4.tgz\",\n      \"integrity\": \"sha512-GqFJ9wLlbB9daxhVlrTe61vJtEY99/xB3C8e4ULVsVfflcpmR6c8UZXjtkMA6FhNONhj2eA5Tk9uAVw5orEs4Q==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.22.4.tgz\",\n      \"integrity\": \"sha512-87v0ol2sH9GE3cLQLNEy0K/R0pz1nvg76o8M5nhMR0+Q+BBGLnb35P0fVz4CQxHYXaAOhE8HhlkaZfsdUOlHwg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-musl\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.22.4.tgz\",\n      \"integrity\": \"sha512-UV6FZMUgePDZrFjrNGIWzDo/vABebuXBhJEqrHxrGiU6HikPy0Z3LfdtciIttEUQfuDdCn8fqh7wiFJjCNwO+g==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.22.4.tgz\",\n      \"integrity\": \"sha512-BjI+NVVEGAXjGWYHz/vv0pBqfGoUH0IGZ0cICTn7kB9PyjrATSkX+8WkguNjWoj2qSr1im/+tTGRaY+4/PdcQw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.22.4.tgz\",\n      \"integrity\": \"sha512-SiWG/1TuUdPvYmzmYnmd3IEifzR61Tragkbx9D3+R8mzQqDBz8v+BvZNDlkiTtI9T15KYZhP0ehn3Dld4n9J5g==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.22.4.tgz\",\n      \"integrity\": \"sha512-j8pPKp53/lq9lMXN57S8cFz0MynJk8OWNuUnXct/9KCpKU7DgU3bYMJhwWmcqC0UU29p8Lr0/7KEVcaM6bf47Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@sindresorhus/is\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz\",\n      \"integrity\": \"sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/is?sponsor=1\"\n      }\n    },\n    \"node_modules/@sveltejs/vite-plugin-svelte\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@sveltejs/vite-plugin-svelte/-/vite-plugin-svelte-3.0.1.tgz\",\n      \"integrity\": \"sha512-CGURX6Ps+TkOovK6xV+Y2rn8JKa8ZPUHPZ/NKgCxAmgBrXReavzFl8aOSCj3kQ1xqT7yGJj53hjcV/gqwDAaWA==\",\n      \"dependencies\": {\n        \"@sveltejs/vite-plugin-svelte-inspector\": \"^2.0.0-next.0 || ^2.0.0\",\n        \"debug\": \"^4.3.4\",\n        \"deepmerge\": \"^4.3.1\",\n        \"kleur\": \"^4.1.5\",\n        \"magic-string\": \"^0.30.5\",\n        \"svelte-hmr\": \"^0.15.3\",\n        \"vitefu\": \"^0.2.5\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || >=20\"\n      },\n      \"peerDependencies\": {\n        \"svelte\": \"^4.0.0 || ^5.0.0-next.0\",\n        \"vite\": \"^5.0.0\"\n      }\n    },\n    \"node_modules/@sveltejs/vite-plugin-svelte-inspector\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sveltejs/vite-plugin-svelte-inspector/-/vite-plugin-svelte-inspector-2.0.0.tgz\",\n      \"integrity\": \"sha512-gjr9ZFg1BSlIpfZ4PRewigrvYmHWbDrq2uvvPB1AmTWKuM+dI1JXQSUu2pIrYLb/QncyiIGkFDFKTwJ0XqQZZg==\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || >=20\"\n      },\n      \"peerDependencies\": {\n        \"@sveltejs/vite-plugin-svelte\": \"^3.0.0\",\n        \"svelte\": \"^4.0.0 || ^5.0.0-next.0\",\n        \"vite\": \"^5.0.0\"\n      }\n    },\n    \"node_modules/@szmarczak/http-timer\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz\",\n      \"integrity\": \"sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"defer-to-connect\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@types/babel__core\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz\",\n      \"integrity\": \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\",\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"node_modules/@types/babel__generator\": {\n      \"version\": \"7.6.8\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz\",\n      \"integrity\": \"sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__template\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz\",\n      \"integrity\": \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\",\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__traverse\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.5.tgz\",\n      \"integrity\": \"sha512-WXCyOcRtH37HAUkpXhUduaxdm82b4GSlyTqajXviN4EfiuPgNYR109xMCKvpl6zPIpua0DGlMEDCq+g8EdoheQ==\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"node_modules/@types/cacheable-request\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz\",\n      \"integrity\": \"sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/http-cache-semantics\": \"*\",\n        \"@types/keyv\": \"^3.1.4\",\n        \"@types/node\": \"*\",\n        \"@types/responselike\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@types/codemirror\": {\n      \"version\": \"5.60.15\",\n      \"resolved\": \"https://registry.npmjs.org/@types/codemirror/-/codemirror-5.60.15.tgz\",\n      \"integrity\": \"sha512-dTOvwEQ+ouKJ/rE9LT1Ue2hmP6H1mZv5+CCnNWu2qtiOe2LQa9lCprEY20HxiDmV/Bxh+dXjywmy5aKvoGjULA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/tern\": \"*\"\n      }\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n      \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\"\n    },\n    \"node_modules/@types/formidable\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/formidable/-/formidable-2.0.6.tgz\",\n      \"integrity\": \"sha512-L4HcrA05IgQyNYJj6kItuIkXrInJvsXTPC5B1i64FggWKKqSL+4hgt7asiSNva75AoLQjq29oPxFfU4GAQ6Z2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/http-cache-semantics\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.4.tgz\",\n      \"integrity\": \"sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/immutable\": {\n      \"version\": \"3.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/immutable/-/immutable-3.8.7.tgz\",\n      \"integrity\": \"sha512-nsHFDX48Tl3RaP4BF47HHe5njx40Pcp+0a8CIqzJata80Fp7JzkcuGB7UhZBGjH9aA1fMEahIqvPQQNmro5YLg==\",\n      \"deprecated\": \"This is a stub types definition for Facebook's Immutable (https://github.com/facebook/immutable-js). Facebook's Immutable provides its own type definitions, so you don't need @types/immutable installed!\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"immutable\": \"*\"\n      }\n    },\n    \"node_modules/@types/keyv\": {\n      \"version\": \"3.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz\",\n      \"integrity\": \"sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"18.19.68\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-18.19.68.tgz\",\n      \"integrity\": \"sha512-QGtpFH1vB99ZmTa63K4/FU8twThj4fuVSBkGddTp7uIL/cuoLWIUSL2RcOaigBhfR+hg5pgGkBnkoOxrTVBMKw==\",\n      \"devOptional\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"node_modules/@types/prop-types\": {\n      \"version\": \"15.7.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.11.tgz\",\n      \"integrity\": \"sha512-ga8y9v9uyeiLdpKddhxYQkxNDrfvuPrlFb0N1qnZZByvcElJaXthF1UhvCh9TLWJBEHeNtdnbysW7Y6Uq8CVng==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/react\": {\n      \"version\": \"18.2.48\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.2.48.tgz\",\n      \"integrity\": \"sha512-qboRCl6Ie70DQQG9hhNREz81jqC1cs9EVNcjQ1AU+jH6NFfSAhVVbrrY/+nSF+Bsk4AOwm9Qa61InvMCyV+H3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/prop-types\": \"*\",\n        \"@types/scheduler\": \"*\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/@types/react-dom\": {\n      \"version\": \"18.2.18\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.2.18.tgz\",\n      \"integrity\": \"sha512-TJxDm6OfAX2KJWJdMEVTwWke5Sc/E/RlnPGvGfS0W7+6ocy2xhDVQVh/KvC2Uf7kACs+gDytdusDSdWfWkaNzw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/react\": \"*\"\n      }\n    },\n    \"node_modules/@types/responselike\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/responselike/-/responselike-1.0.3.tgz\",\n      \"integrity\": \"sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/scheduler\": {\n      \"version\": \"0.16.8\",\n      \"resolved\": \"https://registry.npmjs.org/@types/scheduler/-/scheduler-0.16.8.tgz\",\n      \"integrity\": \"sha512-WZLiwShhwLRmeV6zH+GkbOFT6Z6VklCItrDioxUnv+u4Ll+8vKeFySoFyK/0ctcRpOmwAicELfmys1sDc/Rw+A==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/tern\": {\n      \"version\": \"0.23.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/tern/-/tern-0.23.9.tgz\",\n      \"integrity\": \"sha512-ypzHFE/wBzh+BlH6rrBgS5I/Z7RD21pGhZ2rltb/+ZrVM1awdZwjx7hE5XfuYgHWk9uvV5HLZN3SloevCAp3Bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/@types/ws\": {\n      \"version\": \"8.5.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ws/-/ws-8.5.10.tgz\",\n      \"integrity\": \"sha512-vmQSUcfalpIq0R9q7uTo2lXs6eGIpt9wtnLdMv9LVpIjCA/+ufZRozlVoVelIYixx1ugCBKDhn89vnsEGOCx9A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/xml2js\": {\n      \"version\": \"0.4.14\",\n      \"resolved\": \"https://registry.npmjs.org/@types/xml2js/-/xml2js-0.4.14.tgz\",\n      \"integrity\": \"sha512-4YnrRemBShWRO2QjvUin8ESA41rH+9nQGLUGZV/1IDhi3SL9OhdpNC/MrulTWuptXKwhx/aDxE7toV0f/ypIXQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/yauzl\": {\n      \"version\": \"2.10.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz\",\n      \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@typescript-eslint/eslint-plugin\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.15.0.tgz\",\n      \"integrity\": \"sha512-uiNHpyjZtFrLwLDpHnzaDlP3Tt6sGMqTCiqmxaN4n4RP0EfYZDODJyddiFDF44Hjwxr5xAcaYxVKm9QKQFJFLA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/regexpp\": \"^4.10.0\",\n        \"@typescript-eslint/scope-manager\": \"7.15.0\",\n        \"@typescript-eslint/type-utils\": \"7.15.0\",\n        \"@typescript-eslint/utils\": \"7.15.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.15.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.3.1\",\n        \"natural-compare\": \"^1.4.0\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"@typescript-eslint/parser\": \"^7.0.0\",\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/parser\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.15.0.tgz\",\n      \"integrity\": \"sha512-k9fYuQNnypLFcqORNClRykkGOMOj+pV6V91R4GO/l1FDGwpqmSwoOQrOHo3cGaH63e+D3ZiCAOsuS/D2c99j/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/scope-manager\": \"7.15.0\",\n        \"@typescript-eslint/types\": \"7.15.0\",\n        \"@typescript-eslint/typescript-estree\": \"7.15.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.15.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/scope-manager\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.15.0.tgz\",\n      \"integrity\": \"sha512-Q/1yrF/XbxOTvttNVPihxh1b9fxamjEoz2Os/Pe38OHwxC24CyCqXxGTOdpb4lt6HYtqw9HetA/Rf6gDGaMPlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.15.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.15.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/type-utils\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.15.0.tgz\",\n      \"integrity\": \"sha512-SkgriaeV6PDvpA6253PDVep0qCqgbO1IOBiycjnXsszNTVQe5flN5wR5jiczoEoDEnAqYFSFFc9al9BSGVltkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/typescript-estree\": \"7.15.0\",\n        \"@typescript-eslint/utils\": \"7.15.0\",\n        \"debug\": \"^4.3.4\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/types\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-7.15.0.tgz\",\n      \"integrity\": \"sha512-aV1+B1+ySXbQH0pLK0rx66I3IkiZNidYobyfn0WFsdGhSXw+P3YOqeTq5GED458SfB24tg+ux3S+9g118hjlTw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.15.0.tgz\",\n      \"integrity\": \"sha512-gjyB/rHAopL/XxfmYThQbXbzRMGhZzGw6KpcMbfe8Q3nNQKStpxnUKeXb0KiN/fFDR42Z43szs6rY7eHk0zdGQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.15.0\",\n        \"@typescript-eslint/visitor-keys\": \"7.15.0\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^9.0.4\",\n        \"semver\": \"^7.6.0\",\n        \"ts-api-utils\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/semver\": {\n      \"version\": \"7.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.2.tgz\",\n      \"integrity\": \"sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.15.0.tgz\",\n      \"integrity\": \"sha512-hfDMDqaqOqsUVGiEPSMLR/AjTSCsmJwjpKkYQRo1FNbmW4tBwBspYDwO9eh7sKSTwMQgBw9/T4DHudPaqshRWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.4.0\",\n        \"@typescript-eslint/scope-manager\": \"7.15.0\",\n        \"@typescript-eslint/types\": \"7.15.0\",\n        \"@typescript-eslint/typescript-estree\": \"7.15.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^8.56.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/visitor-keys\": {\n      \"version\": \"7.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.15.0.tgz\",\n      \"integrity\": \"sha512-Hqgy/ETgpt2L5xueA/zHHIl4fJI2O4XUE9l4+OIfbJIRSnTJb/QscncdqqZzofQegIJugRIF57OJea1khw2SDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"7.15.0\",\n        \"eslint-visitor-keys\": \"^3.4.3\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@ungap/structured-clone\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz\",\n      \"integrity\": \"sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@vitejs/plugin-basic-ssl\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@vitejs/plugin-basic-ssl/-/plugin-basic-ssl-1.1.0.tgz\",\n      \"integrity\": \"sha512-wO4Dk/rm8u7RNhOf95ZzcEmC9rYOncYgvq4z3duaJrCgjN8BxAnDVyndanfcJZ0O6XZzHz6Q0hTimxTg8Y9g/A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.6.0\"\n      },\n      \"peerDependencies\": {\n        \"vite\": \"^3.0.0 || ^4.0.0 || ^5.0.0\"\n      }\n    },\n    \"node_modules/@vitejs/plugin-react\": {\n      \"version\": \"4.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.2.1.tgz\",\n      \"integrity\": \"sha512-oojO9IDc4nCUUi8qIR11KoQm0XFFLIwsRBwHRR4d/88IWghn1y6ckz/bJ8GHDCsYEJee8mDzqtJxh15/cisJNQ==\",\n      \"dependencies\": {\n        \"@babel/core\": \"^7.23.5\",\n        \"@babel/plugin-transform-react-jsx-self\": \"^7.23.3\",\n        \"@babel/plugin-transform-react-jsx-source\": \"^7.23.3\",\n        \"@types/babel__core\": \"^7.20.5\",\n        \"react-refresh\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.18.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"vite\": \"^4.2.0 || ^5.0.0\"\n      }\n    },\n    \"node_modules/@vitejs/plugin-vue\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-5.2.0.tgz\",\n      \"integrity\": \"sha512-7n7KdUEtx/7Yl7I/WVAMZ1bEb0eVvXF3ummWTeLcs/9gvo9pJhuLdouSXGjdZ/MKD1acf1I272+X0RMua4/R3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^18.0.0 || >=20.0.0\"\n      },\n      \"peerDependencies\": {\n        \"vite\": \"^5.0.0\",\n        \"vue\": \"^3.2.25\"\n      }\n    },\n    \"node_modules/@vue/compiler-core\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.5.13.tgz\",\n      \"integrity\": \"sha512-oOdAkwqUfW1WqpwSYJce06wvt6HljgY3fGeM9NcVA1HaYOij3mZG9Rkysn0OHuyUAGMbEbARIpsG+LPVlBJ5/Q==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.25.3\",\n        \"@vue/shared\": \"3.5.13\",\n        \"entities\": \"^4.5.0\",\n        \"estree-walker\": \"^2.0.2\",\n        \"source-map-js\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/@vue/compiler-core/node_modules/estree-walker\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n      \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/@vue/compiler-dom\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.5.13.tgz\",\n      \"integrity\": \"sha512-ZOJ46sMOKUjO3e94wPdCzQ6P1Lx/vhp2RSvfaab88Ajexs0AHeV0uasYhi99WPaogmBlRHNRuly8xV75cNTMDA==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/compiler-core\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\"\n      }\n    },\n    \"node_modules/@vue/compiler-sfc\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.5.13.tgz\",\n      \"integrity\": \"sha512-6VdaljMpD82w6c2749Zhf5T9u5uLBWKnVue6XWxprDobftnletJ8+oel7sexFfM3qIxNmVE7LSFGTpv6obNyaQ==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.25.3\",\n        \"@vue/compiler-core\": \"3.5.13\",\n        \"@vue/compiler-dom\": \"3.5.13\",\n        \"@vue/compiler-ssr\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\",\n        \"estree-walker\": \"^2.0.2\",\n        \"magic-string\": \"^0.30.11\",\n        \"postcss\": \"^8.4.48\",\n        \"source-map-js\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/@vue/compiler-sfc/node_modules/estree-walker\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n      \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/@vue/compiler-ssr\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.5.13.tgz\",\n      \"integrity\": \"sha512-wMH6vrYHxQl/IybKJagqbquvxpWCuVYpoUJfCqFZwa/JY1GdATAQ+TgVtgrwwMZ0D07QhA99rs/EAAWfvG6KpA==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/compiler-dom\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\"\n      }\n    },\n    \"node_modules/@vue/reactivity\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.5.13.tgz\",\n      \"integrity\": \"sha512-NaCwtw8o48B9I6L1zl2p41OHo/2Z4wqYGGIK1Khu5T7yxrn+ATOixn/Udn2m+6kZKB/J7cuT9DbWWhRxqixACg==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/shared\": \"3.5.13\"\n      }\n    },\n    \"node_modules/@vue/runtime-core\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.5.13.tgz\",\n      \"integrity\": \"sha512-Fj4YRQ3Az0WTZw1sFe+QDb0aXCerigEpw418pw1HBUKFtnQHWzwojaukAs2X/c9DQz4MQ4bsXTGlcpGxU/RCIw==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/reactivity\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\"\n      }\n    },\n    \"node_modules/@vue/runtime-dom\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.5.13.tgz\",\n      \"integrity\": \"sha512-dLaj94s93NYLqjLiyFzVs9X6dWhTdAlEAciC3Moq7gzAc13VJUdCnjjRurNM6uTLFATRHexHCTu/Xp3eW6yoog==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/reactivity\": \"3.5.13\",\n        \"@vue/runtime-core\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\",\n        \"csstype\": \"^3.1.3\"\n      }\n    },\n    \"node_modules/@vue/server-renderer\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.5.13.tgz\",\n      \"integrity\": \"sha512-wAi4IRJV/2SAW3htkTlB+dHeRmpTiVIK1OGLWV1yeStVSebSQQOwGwIq0D3ZIoBj2C2qpgz5+vX9iEBkTdk5YA==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/compiler-ssr\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\"\n      },\n      \"peerDependencies\": {\n        \"vue\": \"3.5.13\"\n      }\n    },\n    \"node_modules/@vue/shared\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@vue/shared/-/shared-3.5.13.tgz\",\n      \"integrity\": \"sha512-/hnE/qP5ZoGpol0a5mDi45bOd7t3tjYJBjsgCsivow7D48cJeV5l05RD82lPqi7gRiphZM37rnhW1l6ZoCNNnQ==\",\n      \"license\": \"MIT\",\n      \"peer\": true\n    },\n    \"node_modules/@zip.js/zip.js\": {\n      \"version\": \"2.7.32\",\n      \"resolved\": \"https://registry.npmjs.org/@zip.js/zip.js/-/zip.js-2.7.32.tgz\",\n      \"integrity\": \"sha512-9Ox1meDIvIKE23LLA7Fxd/ewJpKjj2KryH92doHRqx2406LmIzorsiMawL0qIK7dvwN9K+mfk47lauoIE0o1zQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"bun\": \">=0.7.0\",\n        \"deno\": \">=1.0.0\",\n        \"node\": \">=16.5.0\"\n      }\n    },\n    \"node_modules/abbrev\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\",\n      \"dev\": true\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.11.3\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.11.3.tgz\",\n      \"integrity\": \"sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==\",\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/ansi-styles/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/ansi-styles/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz\",\n      \"integrity\": \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\",\n      \"dependencies\": {\n        \"dequal\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-find-index\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz\",\n      \"integrity\": \"sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz\",\n      \"integrity\": \"sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"is-string\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/array.prototype.findlast\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz\",\n      \"integrity\": \"sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz\",\n      \"integrity\": \"sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz\",\n      \"integrity\": \"sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.tosorted\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz\",\n      \"integrity\": \"sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-shim-unscopables\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz\",\n      \"integrity\": \"sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.22.3\",\n        \"es-errors\": \"^1.2.1\",\n        \"get-intrinsic\": \"^1.2.3\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/asap\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/asap/-/asap-2.0.6.tgz\",\n      \"integrity\": \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\",\n      \"dev\": true\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n      \"integrity\": \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/axobject-query\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-4.0.0.tgz\",\n      \"integrity\": \"sha512-+60uv1hiVFhHZeO+Lz0RYzsVHy5Wr1ayX0mwda9KPDVLNJgZ1T9Ny7VmFbLDzxsH0D87I86vgj3gFrjTJUYznw==\",\n      \"dependencies\": {\n        \"dequal\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/boolean\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/boolean/-/boolean-3.2.0.tgz\",\n      \"integrity\": \"sha512-d0II/GO9uf9lfUHH2BQsjxzRJZBdsjgsBiW4BvhWk/3qoKwQFjIDVN19PfX8F2D/r9PCMTtLWjYVCFrpeYUzsw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.22.2\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.22.2.tgz\",\n      \"integrity\": \"sha512-0UgcrvQmBDvZHFGdYUehrCNIazki7/lUP3kkoi/r3YB2amZbFM9J43ZRkJTXBUZK4gmx56+Sqk9+Vs9mwZx9+A==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001565\",\n        \"electron-to-chromium\": \"^1.4.601\",\n        \"node-releases\": \"^2.0.14\",\n        \"update-browserslist-db\": \"^1.0.13\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/cacheable-lookup\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz\",\n      \"integrity\": \"sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.6.0\"\n      }\n    },\n    \"node_modules/cacheable-request\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.4.tgz\",\n      \"integrity\": \"sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clone-response\": \"^1.0.2\",\n        \"get-stream\": \"^5.1.0\",\n        \"http-cache-semantics\": \"^4.0.0\",\n        \"keyv\": \"^4.0.0\",\n        \"lowercase-keys\": \"^2.0.0\",\n        \"normalize-url\": \"^6.0.1\",\n        \"responselike\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001579\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001579.tgz\",\n      \"integrity\": \"sha512-u5AUVkixruKHJjw/pj9wISlcMpgFWzSrczLZbrqBSxukQixmg0SJ5sZTpvaFvxU0HoQKd4yoyAogyrAz9pzJnA==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chalk/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chromium-bidi\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.7.1.tgz\",\n      \"integrity\": \"sha512-am9lR+HidiBtPtEYV7aFBpFJaQZhwJbYKr37cOHw0GGR+uiG0O79f20JNLjR0qEwPMuxOHvdBu4HHfimClBOCg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mitt\": \"3.0.1\",\n        \"urlpattern-polyfill\": \"10.0.0\",\n        \"zod\": \"3.23.8\"\n      },\n      \"peerDependencies\": {\n        \"devtools-protocol\": \"*\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/clone-response\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz\",\n      \"integrity\": \"sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-response\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/code-red\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/code-red/-/code-red-1.0.4.tgz\",\n      \"integrity\": \"sha512-7qJWqItLA8/VPVlKJlFXU+NBlo/qyfs39aJcuMT/2ere32ZqvF5OSxgdM5xOfJJ7O429gg2HM47y8v9P+9wrNw==\",\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.4.15\",\n        \"@types/estree\": \"^1.0.1\",\n        \"acorn\": \"^8.10.0\",\n        \"estree-walker\": \"^3.0.3\",\n        \"periscopic\": \"^3.1.0\"\n      }\n    },\n    \"node_modules/codemirror\": {\n      \"version\": \"5.65.18\",\n      \"resolved\": \"https://registry.npmjs.org/codemirror/-/codemirror-5.65.18.tgz\",\n      \"integrity\": \"sha512-Gaz4gHnkbHMGgahNt3CA5HBk5lLQBqmD/pBgeB4kQU6OedZmqMBjlRF0LSrp2tJ4wlLNPm2FfaUd1pDy0mdlpA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\"\n    },\n    \"node_modules/colors\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/colors/-/colors-1.4.0.tgz\",\n      \"integrity\": \"sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/concurrently\": {\n      \"version\": \"6.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/concurrently/-/concurrently-6.5.1.tgz\",\n      \"integrity\": \"sha512-FlSwNpGjWQfRwPLXvJ/OgysbBxPkWpiVjy1042b0U7on7S7qwwMIILRj7WTN1mTgqa582bG6NFuScOoh6Zgdag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.1.0\",\n        \"date-fns\": \"^2.16.1\",\n        \"lodash\": \"^4.17.21\",\n        \"rxjs\": \"^6.6.3\",\n        \"spawn-command\": \"^0.0.2-1\",\n        \"supports-color\": \"^8.1.0\",\n        \"tree-kill\": \"^1.2.2\",\n        \"yargs\": \"^16.2.0\"\n      },\n      \"bin\": {\n        \"concurrently\": \"bin/concurrently.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/concurrently/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/concurrently/node_modules/chalk/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/concurrently/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/concurrently/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\"\n    },\n    \"node_modules/cross-env\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz\",\n      \"integrity\": \"sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.1\"\n      },\n      \"bin\": {\n        \"cross-env\": \"src/bin/cross-env.js\",\n        \"cross-env-shell\": \"src/bin/cross-env-shell.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.14\",\n        \"npm\": \">=6\",\n        \"yarn\": \">=1\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css-tree\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/css-tree/-/css-tree-2.3.1.tgz\",\n      \"integrity\": \"sha512-6Fv1DV/TYw//QF5IzQdqsNDjx/wc8TrMBZsqjL9eW01tWb7R7k/mq+/VXfJCl7SoD5emsJop9cOByJZfs8hYIw==\",\n      \"dependencies\": {\n        \"mdn-data\": \"2.0.30\",\n        \"source-map-js\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12.20.0 || ^14.13.0 || >=15.0.0\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\"\n    },\n    \"node_modules/data-view-buffer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz\",\n      \"integrity\": \"sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/data-view-byte-offset\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz\",\n      \"integrity\": \"sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-data-view\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/date-fns\": {\n      \"version\": \"2.30.0\",\n      \"resolved\": \"https://registry.npmjs.org/date-fns/-/date-fns-2.30.0.tgz\",\n      \"integrity\": \"sha512-fnULvOpxnC5/Vg3NCiWelDsLiUc9bRwAPs/+LfTLNvetFCtCTN+yQz15C/fs4AwX1R9K5GLtLfn8QW+dWisaAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.11\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/date-fns\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/debuglog\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz\",\n      \"integrity\": \"sha512-syBZ+rnAK3EgMsH2aYEOLUW7mZSY9Gb+0wUMCFsZvcmiz+HigA0LOcq/HoQqVuGG+EKykunc7QG2bzrponfaSw==\",\n      \"deprecated\": \"Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/decompress-response\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz\",\n      \"integrity\": \"sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-response\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/decompress-response/node_modules/mimic-response\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz\",\n      \"integrity\": \"sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/defer-to-connect\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz\",\n      \"integrity\": \"sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/dequal\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz\",\n      \"integrity\": \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/detect-node\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/detect-node/-/detect-node-2.1.0.tgz\",\n      \"integrity\": \"sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/devtools-protocol\": {\n      \"version\": \"0.0.1349977\",\n      \"resolved\": \"https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1349977.tgz\",\n      \"integrity\": \"sha512-5JcwlDKinshGSm+4AVLFCkokJUAKTgjmiorNmrGgYYKix1h8Ts9/fplQeK1xg/rACYw1JlEM2PwIEvny5QswKQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/dezalgo\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.4.tgz\",\n      \"integrity\": \"sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"asap\": \"^2.0.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.4.5.tgz\",\n      \"integrity\": \"sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://dotenvx.com\"\n      }\n    },\n    \"node_modules/electron\": {\n      \"version\": \"30.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/electron/-/electron-30.1.2.tgz\",\n      \"integrity\": \"sha512-A5CFGwbA+HSXnzwjc8fP2GIezBcAb0uN/VbNGLOW8DHOYn07rvJ/1bAJECHUUzt5zbfohveG3hpMQiYpbktuDw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"dependencies\": {\n        \"@electron/get\": \"^2.0.0\",\n        \"@types/node\": \"^20.9.0\",\n        \"extract-zip\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"electron\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 12.20.55\"\n      }\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.4.639\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.639.tgz\",\n      \"integrity\": \"sha512-CkKf3ZUVZchr+zDpAlNLEEy2NJJ9T64ULWaDgy3THXXlPVPkLu3VOs9Bac44nebVtdwl2geSj6AxTtGDOxoXhg==\"\n    },\n    \"node_modules/electron/node_modules/@types/node\": {\n      \"version\": \"20.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.12.13.tgz\",\n      \"integrity\": \"sha512-gBGeanV41c1L171rR7wjbMiEpEI/l5XFQdLLfhr/REwpgDy/4U8y89+i8kRiLzDyZdOkXh+cRaTetUnCYutoXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/entities\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-4.5.0.tgz\",\n      \"integrity\": \"sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==\",\n      \"license\": \"BSD-2-Clause\",\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/entities?sponsor=1\"\n      }\n    },\n    \"node_modules/env-paths\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz\",\n      \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.23.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz\",\n      \"integrity\": \"sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.1\",\n        \"arraybuffer.prototype.slice\": \"^1.0.3\",\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"data-view-buffer\": \"^1.0.1\",\n        \"data-view-byte-length\": \"^1.0.1\",\n        \"data-view-byte-offset\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"get-symbol-description\": \"^1.0.2\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.2\",\n        \"internal-slot\": \"^1.0.7\",\n        \"is-array-buffer\": \"^3.0.4\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-data-view\": \"^1.0.1\",\n        \"is-negative-zero\": \"^2.0.3\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.3\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.13.1\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.5\",\n        \"regexp.prototype.flags\": \"^1.5.2\",\n        \"safe-array-concat\": \"^1.1.2\",\n        \"safe-regex-test\": \"^1.0.3\",\n        \"string.prototype.trim\": \"^1.2.9\",\n        \"string.prototype.trimend\": \"^1.0.8\",\n        \"string.prototype.trimstart\": \"^1.0.8\",\n        \"typed-array-buffer\": \"^1.0.2\",\n        \"typed-array-byte-length\": \"^1.0.1\",\n        \"typed-array-byte-offset\": \"^1.0.2\",\n        \"typed-array-length\": \"^1.0.6\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.15\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-iterator-helpers\": {\n      \"version\": \"1.0.19\",\n      \"resolved\": \"https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.0.19.tgz\",\n      \"integrity\": \"sha512-zoMwbCcH5hwUkKJkT8kDIBZSz9I6mVG//+lDCinLCGov4+r7NIy0ld8o03M0cJxl2spVf6ESYVS6/gpIfq1FFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.3\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-set-tostringtag\": \"^2.0.3\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"globalthis\": \"^1.0.3\",\n        \"has-property-descriptors\": \"^1.0.2\",\n        \"has-proto\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.7\",\n        \"iterator.prototype\": \"^1.1.2\",\n        \"safe-array-concat\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz\",\n      \"integrity\": \"sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz\",\n      \"integrity\": \"sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz\",\n      \"integrity\": \"sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es6-error\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz\",\n      \"integrity\": \"sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.18.20\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.18.20.tgz\",\n      \"integrity\": \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/android-arm\": \"0.18.20\",\n        \"@esbuild/android-arm64\": \"0.18.20\",\n        \"@esbuild/android-x64\": \"0.18.20\",\n        \"@esbuild/darwin-arm64\": \"0.18.20\",\n        \"@esbuild/darwin-x64\": \"0.18.20\",\n        \"@esbuild/freebsd-arm64\": \"0.18.20\",\n        \"@esbuild/freebsd-x64\": \"0.18.20\",\n        \"@esbuild/linux-arm\": \"0.18.20\",\n        \"@esbuild/linux-arm64\": \"0.18.20\",\n        \"@esbuild/linux-ia32\": \"0.18.20\",\n        \"@esbuild/linux-loong64\": \"0.18.20\",\n        \"@esbuild/linux-mips64el\": \"0.18.20\",\n        \"@esbuild/linux-ppc64\": \"0.18.20\",\n        \"@esbuild/linux-riscv64\": \"0.18.20\",\n        \"@esbuild/linux-s390x\": \"0.18.20\",\n        \"@esbuild/linux-x64\": \"0.18.20\",\n        \"@esbuild/netbsd-x64\": \"0.18.20\",\n        \"@esbuild/openbsd-x64\": \"0.18.20\",\n        \"@esbuild/sunos-x64\": \"0.18.20\",\n        \"@esbuild/win32-arm64\": \"0.18.20\",\n        \"@esbuild/win32-ia32\": \"0.18.20\",\n        \"@esbuild/win32-x64\": \"0.18.20\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.56.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.56.0.tgz\",\n      \"integrity\": \"sha512-Go19xM6T9puCOWntie1/P997aXxFsOi37JIHRWI514Hc6ZnaHGKY9xFhrU65RT6CcBEzZoGG1e6Nq+DT04ZtZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.4\",\n        \"@eslint/js\": \"8.56.0\",\n        \"@humanwhocodes/config-array\": \"^0.11.13\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"@ungap/structured-clone\": \"^1.2.0\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-plugin-internal-playwright\": {\n      \"resolved\": \"utils/eslint-plugin-internal-playwright\",\n      \"link\": true\n    },\n    \"node_modules/eslint-plugin-notice\": {\n      \"version\": \"0.9.10\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-notice/-/eslint-plugin-notice-0.9.10.tgz\",\n      \"integrity\": \"sha512-rF79EuqdJKu9hhTmwUkNeSvLmmq03m/NXq/NHwUENHbdJ0wtoyOjxZBhW4QCug8v5xYE6cGe3AWkGqSIe9KUbQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"find-root\": \"^1.1.0\",\n        \"lodash\": \"^4.17.15\",\n        \"metric-lcs\": \"^0.1.2\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \">=3.0.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react\": {\n      \"version\": \"7.35.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.35.0.tgz\",\n      \"integrity\": \"sha512-v501SSMOWv8gerHkk+IIQBkcGRGrO2nfybfj5pLxuJNFTPxxA3PSryhXTK+9pNbtkggheDdsC0E9Q8CuPk6JKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.8\",\n        \"array.prototype.findlast\": \"^1.2.5\",\n        \"array.prototype.flatmap\": \"^1.3.2\",\n        \"array.prototype.tosorted\": \"^1.1.4\",\n        \"doctrine\": \"^2.1.0\",\n        \"es-iterator-helpers\": \"^1.0.19\",\n        \"estraverse\": \"^5.3.0\",\n        \"hasown\": \"^2.0.2\",\n        \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.8\",\n        \"object.fromentries\": \"^2.0.8\",\n        \"object.values\": \"^1.2.0\",\n        \"prop-types\": \"^15.8.1\",\n        \"resolve\": \"^2.0.0-next.5\",\n        \"semver\": \"^6.3.1\",\n        \"string.prototype.matchall\": \"^4.0.11\",\n        \"string.prototype.repeat\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\"\n      }\n    },\n    \"node_modules/eslint-plugin-react-hooks\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.2.tgz\",\n      \"integrity\": \"sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint/node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/globals\": {\n      \"version\": \"13.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/eslint/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/eslint/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/eslint/node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\",\n      \"integrity\": \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"extract-zip\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.17.0\"\n      },\n      \"optionalDependencies\": {\n        \"@types/yauzl\": \"^2.9.1\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz\",\n      \"integrity\": \"sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.16.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.16.0.tgz\",\n      \"integrity\": \"sha512-ifCoaXsDrsdkWTtiNJX5uzHDsrck5TzfKKDcuFFTIrrc/BS076qgEIfoIy1VeZqViznfKiysPYTh/QeHtnIsYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-root\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz\",\n      \"integrity\": \"sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng==\",\n      \"dev\": true\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz\",\n      \"integrity\": \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flatted\": \"^3.2.9\",\n        \"keyv\": \"^4.5.3\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.2.9.tgz\",\n      \"integrity\": \"sha512-36yxDn5H7OFZQla0/jFJmbIKTdZAQHngCedGxiMmpNfEZM0sdEeT+WczLQrjK6D7o2aiyLYDnkw0R3JK0Qv1RQ==\",\n      \"dev\": true\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/formidable\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/formidable/-/formidable-2.1.2.tgz\",\n      \"integrity\": \"sha512-CM3GuJ57US06mlpQ47YcunuUZ9jpm8Vx+P2CGt2j7HpgkKZO/DJYQ0Bobim8G6PFQmK5lOqOOdUXboU+h73A4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dezalgo\": \"^1.0.4\",\n        \"hexoid\": \"^1.0.0\",\n        \"once\": \"^1.4.0\",\n        \"qs\": \"^6.11.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://ko-fi.com/tunnckoCore/commissions\"\n      }\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz\",\n      \"integrity\": \"sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^4.0.0\",\n        \"universalify\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6 <7 || >=8\"\n      }\n    },\n    \"node_modules/fs-readdir-recursive\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-readdir-recursive/-/fs-readdir-recursive-1.1.0.tgz\",\n      \"integrity\": \"sha512-GNanXlVr2pf02+sPN40XN8HG+ePaNcvM0q5mZBd668Obwb0yD5GiUbZOFgwn8kGMY6I3mdyDJzieUy3PTYyTRA==\",\n      \"dev\": true\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz\",\n      \"integrity\": \"sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"functions-have-names\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz\",\n      \"integrity\": \"sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/glob/node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/global-agent\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/global-agent/-/global-agent-3.0.0.tgz\",\n      \"integrity\": \"sha512-PT6XReJ+D07JvGoxQMkT6qji/jVNfX/h364XHZOWeRzy64sSFr+xJ5OX7LI3b4MPQzdL4H8Y8M0xzPpsVMwA8Q==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"boolean\": \"^3.0.1\",\n        \"es6-error\": \"^4.1.1\",\n        \"matcher\": \"^3.0.0\",\n        \"roarr\": \"^2.15.3\",\n        \"semver\": \"^7.3.2\",\n        \"serialize-error\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0\"\n      }\n    },\n    \"node_modules/global-agent/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/global-agent/node_modules/semver\": {\n      \"version\": \"7.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.0.tgz\",\n      \"integrity\": \"sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/global-agent/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz\",\n      \"integrity\": \"sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globby/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/got\": {\n      \"version\": \"11.8.6\",\n      \"resolved\": \"https://registry.npmjs.org/got/-/got-11.8.6.tgz\",\n      \"integrity\": \"sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sindresorhus/is\": \"^4.0.0\",\n        \"@szmarczak/http-timer\": \"^4.0.5\",\n        \"@types/cacheable-request\": \"^6.0.1\",\n        \"@types/responselike\": \"^1.0.0\",\n        \"cacheable-lookup\": \"^5.0.3\",\n        \"cacheable-request\": \"^7.0.2\",\n        \"decompress-response\": \"^6.0.0\",\n        \"http2-wrapper\": \"^1.0.0-beta.5.2\",\n        \"lowercase-keys\": \"^2.0.0\",\n        \"p-cancelable\": \"^2.0.0\",\n        \"responselike\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.19.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/got?sponsor=1\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n      \"dev\": true\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/hexoid\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/hexoid/-/hexoid-1.0.0.tgz\",\n      \"integrity\": \"sha512-QFLV0taWQOZtvIRIAdBChesmogZrtuXvVWsFHZTk2SU+anspqZ2vMnoLg7IE1+Uk16N19APic1BuF8bC8c2m5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/hosted-git-info\": {\n      \"version\": \"2.8.9\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n      \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n      \"dev\": true\n    },\n    \"node_modules/html-reporter\": {\n      \"resolved\": \"packages/html-reporter\",\n      \"link\": true\n    },\n    \"node_modules/http-cache-semantics\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.1.tgz\",\n      \"integrity\": \"sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ==\",\n      \"dev\": true\n    },\n    \"node_modules/http2-wrapper\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz\",\n      \"integrity\": \"sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"quick-lru\": \"^5.1.1\",\n        \"resolve-alpn\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.19.0\"\n      }\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.1.tgz\",\n      \"integrity\": \"sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/immutable\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/immutable/-/immutable-4.3.7.tgz\",\n      \"integrity\": \"sha512-1hqclzwYwjRDFLjcFxOM5AYkkG0rpFPpr1RLPMEuGczoS7YA8gLhy8SWXYRAA/XwfEHpfo3cw5JGioS32fnMRw==\",\n      \"dev\": true\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz\",\n      \"integrity\": \"sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"hasown\": \"^2.0.0\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz\",\n      \"integrity\": \"sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-async-function\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-async-function/-/is-async-function-2.0.0.tgz\",\n      \"integrity\": \"sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-data-view\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz\",\n      \"integrity\": \"sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-finalizationregistry\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.0.2.tgz\",\n      \"integrity\": \"sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-function\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz\",\n      \"integrity\": \"sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz\",\n      \"integrity\": \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz\",\n      \"integrity\": \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-reference\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-3.0.2.tgz\",\n      \"integrity\": \"sha512-v3rht/LgVcsdZa3O2Nqs+NMowLOxeOm7Ay9+/ARQ2F+qEoANRcqrjAZKGN0v8ymUetZGgkp26LTnGT7H0Qo9Pg==\",\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz\",\n      \"integrity\": \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz\",\n      \"integrity\": \"sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz\",\n      \"integrity\": \"sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.14\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz\",\n      \"integrity\": \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.3.tgz\",\n      \"integrity\": \"sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"dev\": true\n    },\n    \"node_modules/iterator.prototype\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.2.tgz\",\n      \"integrity\": \"sha512-DR33HMMr8EzwuRL8Y9D3u2BMj8+RqSE850jfGu59kS7tbmPLzGkZmVSfyCFSDxuZiEY6Rzt3T2NA/qU+NwVj1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.2.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"reflect.getprototypeof\": \"^1.0.4\",\n        \"set-function-name\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz\",\n      \"integrity\": \"sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\",\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n      \"dev\": true\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stringify-safe\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",\n      \"integrity\": \"sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz\",\n      \"integrity\": \"sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==\",\n      \"dev\": true,\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/jsx-ast-utils\": {\n      \"version\": \"3.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz\",\n      \"integrity\": \"sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"object.values\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/kleur\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-4.1.5.tgz\",\n      \"integrity\": \"sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/license-checker\": {\n      \"version\": \"25.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/license-checker/-/license-checker-25.0.1.tgz\",\n      \"integrity\": \"sha512-mET5AIwl7MR2IAKYYoVBBpV0OnkKQ1xGj2IMMeEFIs42QAkEVjRtFZGWmQ28WeU7MP779iAgOaOy93Mn44mn6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^2.4.1\",\n        \"debug\": \"^3.1.0\",\n        \"mkdirp\": \"^0.5.1\",\n        \"nopt\": \"^4.0.1\",\n        \"read-installed\": \"~4.0.3\",\n        \"semver\": \"^5.5.0\",\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-satisfies\": \"^4.0.0\",\n        \"treeify\": \"^1.1.0\"\n      },\n      \"bin\": {\n        \"license-checker\": \"bin/license-checker\"\n      }\n    },\n    \"node_modules/license-checker/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/license-checker/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/locate-character\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-character/-/locate-character-3.0.0.tgz\",\n      \"integrity\": \"sha512-SW13ws7BjaeJ6p7Q6CO2nchbYEc3X3J6WrmTTDto7yMPqVSZTUyY5Tjbid+Ab8gLnATtygYtiDIJGQRRn2ZOiA==\"\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n      \"dev\": true\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/lowercase-keys\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz\",\n      \"integrity\": \"sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/magic-string\": {\n      \"version\": \"0.30.15\",\n      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.15.tgz\",\n      \"integrity\": \"sha512-zXeaYRgZ6ldS1RJJUrMrYgNJ4fdwnyI6tVqoiIhyCyv5IVTK9BU8Ic2l253GGETQHxI4HNUwhJ3fjDhKqEoaAw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz\",\n      \"integrity\": \"sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pify\": \"^4.0.1\",\n        \"semver\": \"^5.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/matcher\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/matcher/-/matcher-3.0.0.tgz\",\n      \"integrity\": \"sha512-OkeDaAZ/bQCxeFAozM55PKcKU0yJMPGifLwV4Qgjitu+5MoAfSQN4lsLJeXZ1b8w0x+/Emda6MZgXS1jvsapng==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/matcher/node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/mdn-data\": {\n      \"version\": \"2.0.30\",\n      \"resolved\": \"https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.30.tgz\",\n      \"integrity\": \"sha512-GaqWWShW4kv/G9IEucWScBx9G1/vsFZZJUO+tD26M8J8z3Kw5RDQjaoZe03YAClgeS/SWPOcb4nkFBTEi5DUEA==\"\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/metric-lcs\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/metric-lcs/-/metric-lcs-0.1.2.tgz\",\n      \"integrity\": \"sha512-+TZ5dUDPKPJaU/rscTzxyN8ZkX7eAVLAiQU/e+YINleXPv03SCmJShaMT1If1liTH8OcmWXZs0CmzCBRBLcMpA==\",\n      \"dev\": true\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-3.0.0.tgz\",\n      \"integrity\": \"sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/mimic-response\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz\",\n      \"integrity\": \"sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/mitt\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz\",\n      \"integrity\": \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\",\n      \"dev\": true\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz\",\n      \"integrity\": \"sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.14\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.14.tgz\",\n      \"integrity\": \"sha512-y10wOWt8yZpqXmOgRo77WaHEmhYQYGNA6y421PKsKYWEK8aW+cqAphborZDhqfyKrbZEN92CN1X2KbafY2s7Yw==\"\n    },\n    \"node_modules/node-stream-zip\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-stream-zip/-/node-stream-zip-1.15.0.tgz\",\n      \"integrity\": \"sha512-LN4fydt9TqhZhThkZIVQnF9cwjU3qmUH9h78Mx/K7d3VvfRqqwthLwJEUOEL0QPZ0XQmNN7be5Ggit5+4dq3Bw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/antelle\"\n      }\n    },\n    \"node_modules/nopt\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz\",\n      \"integrity\": \"sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"abbrev\": \"1\",\n        \"osenv\": \"^0.1.4\"\n      },\n      \"bin\": {\n        \"nopt\": \"bin/nopt.js\"\n      }\n    },\n    \"node_modules/normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n      \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/resolve\": {\n      \"version\": \"1.22.8\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-url\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz\",\n      \"integrity\": \"sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/npm-normalize-package-bin\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz\",\n      \"integrity\": \"sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==\",\n      \"dev\": true\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz\",\n      \"integrity\": \"sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.entries\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz\",\n      \"integrity\": \"sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz\",\n      \"integrity\": \"sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/object.values/-/object.values-1.2.0.tgz\",\n      \"integrity\": \"sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz\",\n      \"integrity\": \"sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@aashutoshrathi/word-wrap\": \"^1.2.3\",\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/os-homedir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n      \"integrity\": \"sha512-B5JU3cabzk8c67mRRd3ECmROafjYMXbuzlwtqdM8IbS8ktlTix8aFGb2bAGKrSRIlnfKwovGUUr72JUPyOb6kQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/osenv\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz\",\n      \"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"os-homedir\": \"^1.0.0\",\n        \"os-tmpdir\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/p-cancelable\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz\",\n      \"integrity\": \"sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\",\n      \"dev\": true\n    },\n    \"node_modules/periscopic\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/periscopic/-/periscopic-3.1.0.tgz\",\n      \"integrity\": \"sha512-vKiQ8RRtkl9P+r/+oefh25C3fhybptkHKCZSPlcXiJux2tJF55GnEj3BVn4A5gKfq9NWWXXrxkHBwVPUfH0opw==\",\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-walker\": \"^3.0.0\",\n        \"is-reference\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\",\n      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-4.0.1.tgz\",\n      \"integrity\": \"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/playwright\": {\n      \"resolved\": \"packages/playwright\",\n      \"link\": true\n    },\n    \"node_modules/playwright-chromium\": {\n      \"resolved\": \"packages/playwright-chromium\",\n      \"link\": true\n    },\n    \"node_modules/playwright-core\": {\n      \"resolved\": \"packages/playwright-core\",\n      \"link\": true\n    },\n    \"node_modules/playwright-firefox\": {\n      \"resolved\": \"packages/playwright-firefox\",\n      \"link\": true\n    },\n    \"node_modules/playwright-webkit\": {\n      \"resolved\": \"packages/playwright-webkit\",\n      \"link\": true\n    },\n    \"node_modules/possible-typed-array-names\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz\",\n      \"integrity\": \"sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.4.49\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.49.tgz\",\n      \"integrity\": \"sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.7\",\n        \"picocolors\": \"^1.1.1\",\n        \"source-map-js\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/progress\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz\",\n      \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.11.2\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.2.tgz\",\n      \"integrity\": \"sha512-tDNIz22aBzCDxLtVH++VnTfzxlfeK5CbqohpSqpJgj1Wg/cQbStNAz3NuqCs5vV+pjBsK4x4pN9HlVh7rcYRiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/quick-lru\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz\",\n      \"integrity\": \"sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/react\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-18.2.0.tgz\",\n      \"integrity\": \"sha512-/3IjMdb2L9QbBdWiW5e3P2/npwMBaU9mHCSCUzNln0ZCYbcfTsGbTJrU/kGemdH2IWmB2ioZ+zkxtmq6g09fGQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-18.2.0.tgz\",\n      \"integrity\": \"sha512-6IMTriUmvsjHUjNtEDudZfuDQUoWXVxKHhlEGSk81n4YFS+r/Kl99wXiwlVXtPBtJenozv2P+hxDsw9eA7Xo6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\",\n        \"scheduler\": \"^0.23.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.2.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/react-refresh\": {\n      \"version\": \"0.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.0.tgz\",\n      \"integrity\": \"sha512-wViHqhAd8OHeLS/IRMJjTSDHF3U9eWi62F/MledQGPdJGDhodXJ9PBLNGr6WWL7qlH12Mt3TyTpbS+hGXMjCzQ==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/read-installed\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/read-installed/-/read-installed-4.0.3.tgz\",\n      \"integrity\": \"sha512-O03wg/IYuV/VtnK2h/KXEt9VIbMUFbk3ERG0Iu4FhLZw0EP0T9znqrYDGn6ncbEsXUFaUjiVAWXHzxwt3lhRPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debuglog\": \"^1.0.1\",\n        \"read-package-json\": \"^2.0.0\",\n        \"readdir-scoped-modules\": \"^1.0.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"slide\": \"~1.1.3\",\n        \"util-extend\": \"^1.0.1\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.2\"\n      }\n    },\n    \"node_modules/read-installed/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/read-package-json\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.2.tgz\",\n      \"integrity\": \"sha512-D1KmuLQr6ZSJS0tW8hf3WGpRlwszJOXZ3E8Yd/DNRaM5d+1wVRZdHlpGBLAuovjr28LbWvjpWkBHMxpRGGjzNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"normalize-package-data\": \"^2.0.0\",\n        \"npm-normalize-package-bin\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/readdir-scoped-modules\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdir-scoped-modules/-/readdir-scoped-modules-1.1.0.tgz\",\n      \"integrity\": \"sha512-asaikDeqAQg7JifRsZn1NJZXo9E+VwlyCfbkZhwyISinqk5zNS6266HS5kah6P0SaQKGF6SkNnZVHUzHFYxYDw==\",\n      \"deprecated\": \"This functionality has been moved to @npmcli/fs\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debuglog\": \"^1.0.1\",\n        \"dezalgo\": \"^1.0.0\",\n        \"graceful-fs\": \"^4.1.2\",\n        \"once\": \"^1.3.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/recorder\": {\n      \"resolved\": \"packages/recorder\",\n      \"link\": true\n    },\n    \"node_modules/reflect.getprototypeof\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz\",\n      \"integrity\": \"sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"globalthis\": \"^1.0.3\",\n        \"which-builtin-type\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n      \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\",\n      \"dev\": true\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz\",\n      \"integrity\": \"sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"set-function-name\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"2.0.0-next.5\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz\",\n      \"integrity\": \"sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-alpn\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz\",\n      \"integrity\": \"sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==\",\n      \"dev\": true\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/responselike\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz\",\n      \"integrity\": \"sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lowercase-keys\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/roarr\": {\n      \"version\": \"2.15.4\",\n      \"resolved\": \"https://registry.npmjs.org/roarr/-/roarr-2.15.4.tgz\",\n      \"integrity\": \"sha512-CHhPh+UNHD2GTXNYhPWLnU8ONHdI+5DI+4EYIAOaiD63rHeYlZvyh8P+in5999TTSFgUYuKUAjzRI4mdh/p+2A==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"boolean\": \"^3.0.1\",\n        \"detect-node\": \"^2.0.4\",\n        \"globalthis\": \"^1.0.1\",\n        \"json-stringify-safe\": \"^5.0.1\",\n        \"semver-compare\": \"^1.0.0\",\n        \"sprintf-js\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/rollup\": {\n      \"version\": \"4.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.22.4.tgz\",\n      \"integrity\": \"sha512-vD8HJ5raRcWOyymsR6Z3o6+RzfEPCnVLMFJ6vRslO1jt4LO6dUo5Qnpg7y4RkZFM2DMe3WUirkI5c16onjrc6A==\",\n      \"dependencies\": {\n        \"@types/estree\": \"1.0.5\"\n      },\n      \"bin\": {\n        \"rollup\": \"dist/bin/rollup\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\",\n        \"npm\": \">=8.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@rollup/rollup-android-arm-eabi\": \"4.22.4\",\n        \"@rollup/rollup-android-arm64\": \"4.22.4\",\n        \"@rollup/rollup-darwin-arm64\": \"4.22.4\",\n        \"@rollup/rollup-darwin-x64\": \"4.22.4\",\n        \"@rollup/rollup-linux-arm-gnueabihf\": \"4.22.4\",\n        \"@rollup/rollup-linux-arm-musleabihf\": \"4.22.4\",\n        \"@rollup/rollup-linux-arm64-gnu\": \"4.22.4\",\n        \"@rollup/rollup-linux-arm64-musl\": \"4.22.4\",\n        \"@rollup/rollup-linux-powerpc64le-gnu\": \"4.22.4\",\n        \"@rollup/rollup-linux-riscv64-gnu\": \"4.22.4\",\n        \"@rollup/rollup-linux-s390x-gnu\": \"4.22.4\",\n        \"@rollup/rollup-linux-x64-gnu\": \"4.22.4\",\n        \"@rollup/rollup-linux-x64-musl\": \"4.22.4\",\n        \"@rollup/rollup-win32-arm64-msvc\": \"4.22.4\",\n        \"@rollup/rollup-win32-ia32-msvc\": \"4.22.4\",\n        \"@rollup/rollup-win32-x64-msvc\": \"4.22.4\",\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"6.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz\",\n      \"integrity\": \"sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"npm\": \">=2.0.0\"\n      }\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz\",\n      \"integrity\": \"sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"has-symbols\": \"^1.0.3\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz\",\n      \"integrity\": \"sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.6\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sax\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/sax/-/sax-1.3.0.tgz\",\n      \"integrity\": \"sha512-0s+oAmw9zLl1V1cS9BtZN7JAd0cW5e0QH4W3LWEK6a4LaLEA2OTpGYWDY+6XasBLtz6wkm3u1xRw95mRuJ59WA==\",\n      \"dev\": true\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.23.0.tgz\",\n      \"integrity\": \"sha512-CtuThmgHNg7zIZWAXi3AsyIzA3n4xx7aNyjwC2VJldO2LMVDhFK+63xGqq6CsJH4rTAt6/M+N4GhZiDYPx9eUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/semver-compare\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver-compare/-/semver-compare-1.0.0.tgz\",\n      \"integrity\": \"sha512-YM3/ITh2MJ5MtzaM429anh+x2jiLVjqILF4m4oyQB18W7Ggea7BfqdH/wGMK7dDiMghv/6WG7znWMwUDzJiXow==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/serialize-error\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz\",\n      \"integrity\": \"sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/slash\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-2.0.0.tgz\",\n      \"integrity\": \"sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/slide\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/slide/-/slide-1.1.6.tgz\",\n      \"integrity\": \"sha512-NwrtjCg+lZoqhFU8fOwl4ay2ei8PaqCBOUV3/ektPY9trO1yQ1oXEfmHAhKArUVUr/hOHvy5f6AdP17dCM0zMw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz\",\n      \"integrity\": \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/spawn-command\": {\n      \"version\": \"0.0.2-1\",\n      \"resolved\": \"https://registry.npmjs.org/spawn-command/-/spawn-command-0.0.2-1.tgz\",\n      \"integrity\": \"sha512-n98l9E2RMSJ9ON1AKisHzz7V42VDiBQGY6PB1BwRglz99wpVsSuGzQ+jOi6lFXBGVTCrRpltvjm+/XA+tpeJrg==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-compare\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-compare/-/spdx-compare-1.0.0.tgz\",\n      \"integrity\": \"sha512-C1mDZOX0hnu0ep9dfmuoi03+eOdDoz2yvK79RxbcrVEG1NO1Ph35yW102DHWKN4pk80nwCgeMmSY5L25VE4D9A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-find-index\": \"^1.0.2\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/spdx-correct\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.2.0.tgz\",\n      \"integrity\": \"sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-exceptions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz\",\n      \"integrity\": \"sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz\",\n      \"integrity\": \"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-license-ids\": {\n      \"version\": \"3.0.16\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.16.tgz\",\n      \"integrity\": \"sha512-eWN+LnM3GR6gPu35WxNgbGl8rmY1AEmoMDvL/QD6zYmPWgywxWqJWNdLGT+ke8dKNWrcYgYjPpG5gbTfghP8rw==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-ranges\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-ranges/-/spdx-ranges-2.1.1.tgz\",\n      \"integrity\": \"sha512-mcdpQFV7UDAgLpXEE/jOMqvK4LBoO0uTQg0uvXUewmEFhpiZx5yJSZITHB8w1ZahKdhfZqP5GPEOKLyEq5p8XA==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-satisfies\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-satisfies/-/spdx-satisfies-4.0.1.tgz\",\n      \"integrity\": \"sha512-WVzZ/cXAzoNmjCWiEluEA3BjHp5tiUmmhn9MK+X0tBbR9sOqtC6UQwmgCNrAIZvNlMuBUYAaHYfb2oqlF9SwKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-compare\": \"^1.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/ssim.js\": {\n      \"version\": \"3.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/ssim.js/-/ssim.js-3.5.0.tgz\",\n      \"integrity\": \"sha512-Aj6Jl2z6oDmgYFFbQqK7fght19bXdOxY7Tj03nF+03M9gCBAjeIiO8/PlEGMfKDwYpw4q6iBqVq2YuREorGg/g==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string.prototype.matchall\": {\n      \"version\": \"4.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.11.tgz\",\n      \"integrity\": \"sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.7\",\n        \"regexp.prototype.flags\": \"^1.5.2\",\n        \"set-function-name\": \"^2.0.2\",\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.repeat\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz\",\n      \"integrity\": \"sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\",\n        \"es-abstract\": \"^1.17.5\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz\",\n      \"integrity\": \"sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-abstract\": \"^1.23.0\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz\",\n      \"integrity\": \"sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz\",\n      \"integrity\": \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/sumchecker\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/sumchecker/-/sumchecker-3.0.1.tgz\",\n      \"integrity\": \"sha512-MvjXzkz/BOfyVDkG0oFOtBxHX2u3gKbMHIF/dXblZsgD3BWOFLmHovIpZY7BykJdAjcqRCBi1WYBNdEC9yI7vg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.0\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/svelte\": {\n      \"version\": \"4.2.19\",\n      \"resolved\": \"https://registry.npmjs.org/svelte/-/svelte-4.2.19.tgz\",\n      \"integrity\": \"sha512-IY1rnGr6izd10B0A8LqsBfmlT5OILVuZ7XsI0vdGPEvuonFV7NYEUK4dAkm9Zg2q0Um92kYjTpS1CAP3Nh/KWw==\",\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.15\",\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"@types/estree\": \"^1.0.1\",\n        \"acorn\": \"^8.9.0\",\n        \"aria-query\": \"^5.3.0\",\n        \"axobject-query\": \"^4.0.0\",\n        \"code-red\": \"^1.0.3\",\n        \"css-tree\": \"^2.3.1\",\n        \"estree-walker\": \"^3.0.3\",\n        \"is-reference\": \"^3.0.1\",\n        \"locate-character\": \"^3.0.0\",\n        \"magic-string\": \"^0.30.4\",\n        \"periscopic\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/svelte-hmr\": {\n      \"version\": \"0.15.3\",\n      \"resolved\": \"https://registry.npmjs.org/svelte-hmr/-/svelte-hmr-0.15.3.tgz\",\n      \"integrity\": \"sha512-41snaPswvSf8TJUhlkoJBekRrABDXDMdpNpT2tfHIv4JuhgvHqLMhEPGtaQn0BmbNSTkuz2Ed20DF2eHw0SmBQ==\",\n      \"engines\": {\n        \"node\": \"^12.20 || ^14.13.1 || >= 16\"\n      },\n      \"peerDependencies\": {\n        \"svelte\": \"^3.19.0 || ^4.0.0\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"dev\": true\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/trace-viewer\": {\n      \"resolved\": \"packages/trace-viewer\",\n      \"link\": true\n    },\n    \"node_modules/tree-kill\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz\",\n      \"integrity\": \"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tree-kill\": \"cli.js\"\n      }\n    },\n    \"node_modules/treeify\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz\",\n      \"integrity\": \"sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/ts-api-utils\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.3.0.tgz\",\n      \"integrity\": \"sha512-UQMIo7pb8WRomKR1/+MFVLTroIvDVtMX3K6OUir8ynLyzB8Jeriont2bTAtmNPa1ekAgN7YPDyf6V+ygrdU+eQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=4.2.0\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz\",\n      \"integrity\": \"sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/tunnel\": {\n      \"version\": \"0.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz\",\n      \"integrity\": \"sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6.11 <=0.7.0 || >=0.7.3\"\n      }\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz\",\n      \"integrity\": \"sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz\",\n      \"integrity\": \"sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz\",\n      \"integrity\": \"sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz\",\n      \"integrity\": \"sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-proto\": \"^1.0.3\",\n        \"is-typed-array\": \"^1.1.13\",\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n      \"devOptional\": true,\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/undici\": {\n      \"version\": \"5.28.4\",\n      \"resolved\": \"https://registry.npmjs.org/undici/-/undici-5.28.4.tgz\",\n      \"integrity\": \"sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@fastify/busboy\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"5.26.5\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n      \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\",\n      \"devOptional\": true\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz\",\n      \"integrity\": \"sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4.0.0\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.13.tgz\",\n      \"integrity\": \"sha512-xebP81SNcPuNpPP3uzeW1NYXxI3rxyJzF3pD6sH4jE7o/IX+WtSpwnVU+qIsDPyk0d3hmFQ7mjqc6AtV604hbg==\",\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.1.1\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/urlpattern-polyfill\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz\",\n      \"integrity\": \"sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==\",\n      \"dev\": true\n    },\n    \"node_modules/util-extend\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/util-extend/-/util-extend-1.0.3.tgz\",\n      \"integrity\": \"sha512-mLs5zAK+ctllYBj+iAQvlDCwoxU/WDOUaJkcFudeiAX6OajC6BKXJUa9a+tbtkC11dz2Ufb7h0lyvIOVn4LADA==\",\n      \"dev\": true\n    },\n    \"node_modules/uuid\": {\n      \"version\": \"8.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"uuid\": \"dist/bin/uuid\"\n      }\n    },\n    \"node_modules/validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/vite\": {\n      \"version\": \"5.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/vite/-/vite-5.4.6.tgz\",\n      \"integrity\": \"sha512-IeL5f8OO5nylsgzd9tq4qD2QqI0k2CQLGrWD0rCN0EQJZpBK5vJAx0I+GDkMOXxQX/OfFHMuLIx6ddAxGX/k+Q==\",\n      \"dependencies\": {\n        \"esbuild\": \"^0.21.3\",\n        \"postcss\": \"^8.4.43\",\n        \"rollup\": \"^4.20.0\"\n      },\n      \"bin\": {\n        \"vite\": \"bin/vite.js\"\n      },\n      \"engines\": {\n        \"node\": \"^18.0.0 || >=20.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/vitejs/vite?sponsor=1\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.3\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"^18.0.0 || >=20.0.0\",\n        \"less\": \"*\",\n        \"lightningcss\": \"^1.21.0\",\n        \"sass\": \"*\",\n        \"sass-embedded\": \"*\",\n        \"stylus\": \"*\",\n        \"sugarss\": \"*\",\n        \"terser\": \"^5.4.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"less\": {\n          \"optional\": true\n        },\n        \"lightningcss\": {\n          \"optional\": true\n        },\n        \"sass\": {\n          \"optional\": true\n        },\n        \"sass-embedded\": {\n          \"optional\": true\n        },\n        \"stylus\": {\n          \"optional\": true\n        },\n        \"sugarss\": {\n          \"optional\": true\n        },\n        \"terser\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/android-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/android-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/android-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/darwin-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/darwin-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/freebsd-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/freebsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-arm\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\",\n      \"integrity\": \"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\",\n      \"integrity\": \"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-mips64el\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\",\n      \"integrity\": \"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-ppc64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-riscv64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\",\n      \"integrity\": \"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-s390x\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\",\n      \"integrity\": \"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/linux-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/netbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/openbsd-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/sunos-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/win32-arm64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\",\n      \"integrity\": \"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/win32-ia32\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\",\n      \"integrity\": \"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/@esbuild/win32-x64\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\",\n      \"integrity\": \"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/vite/node_modules/esbuild\": {\n      \"version\": \"0.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\",\n      \"integrity\": \"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\",\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/aix-ppc64\": \"0.21.5\",\n        \"@esbuild/android-arm\": \"0.21.5\",\n        \"@esbuild/android-arm64\": \"0.21.5\",\n        \"@esbuild/android-x64\": \"0.21.5\",\n        \"@esbuild/darwin-arm64\": \"0.21.5\",\n        \"@esbuild/darwin-x64\": \"0.21.5\",\n        \"@esbuild/freebsd-arm64\": \"0.21.5\",\n        \"@esbuild/freebsd-x64\": \"0.21.5\",\n        \"@esbuild/linux-arm\": \"0.21.5\",\n        \"@esbuild/linux-arm64\": \"0.21.5\",\n        \"@esbuild/linux-ia32\": \"0.21.5\",\n        \"@esbuild/linux-loong64\": \"0.21.5\",\n        \"@esbuild/linux-mips64el\": \"0.21.5\",\n        \"@esbuild/linux-ppc64\": \"0.21.5\",\n        \"@esbuild/linux-riscv64\": \"0.21.5\",\n        \"@esbuild/linux-s390x\": \"0.21.5\",\n        \"@esbuild/linux-x64\": \"0.21.5\",\n        \"@esbuild/netbsd-x64\": \"0.21.5\",\n        \"@esbuild/openbsd-x64\": \"0.21.5\",\n        \"@esbuild/sunos-x64\": \"0.21.5\",\n        \"@esbuild/win32-arm64\": \"0.21.5\",\n        \"@esbuild/win32-ia32\": \"0.21.5\",\n        \"@esbuild/win32-x64\": \"0.21.5\"\n      }\n    },\n    \"node_modules/vitefu\": {\n      \"version\": \"0.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/vitefu/-/vitefu-0.2.5.tgz\",\n      \"integrity\": \"sha512-SgHtMLoqaeeGnd2evZ849ZbACbnwQCIwRH57t18FxcXoZop0uQu0uzlIhJBlF/eWVzuce0sHeqPcDo+evVcg8Q==\",\n      \"peerDependencies\": {\n        \"vite\": \"^3.0.0 || ^4.0.0 || ^5.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"vite\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/vue\": {\n      \"version\": \"3.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/vue/-/vue-3.5.13.tgz\",\n      \"integrity\": \"sha512-wmeiSMxkZCSc+PM2w2VRsOYAZC8GdipNFRTsLSfodVqI9mbejKeXEGr8SckuLnrQPGe3oJN5c3K0vpoU9q/wCQ==\",\n      \"license\": \"MIT\",\n      \"peer\": true,\n      \"dependencies\": {\n        \"@vue/compiler-dom\": \"3.5.13\",\n        \"@vue/compiler-sfc\": \"3.5.13\",\n        \"@vue/runtime-dom\": \"3.5.13\",\n        \"@vue/server-renderer\": \"3.5.13\",\n        \"@vue/shared\": \"3.5.13\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/web\": {\n      \"resolved\": \"packages/web\",\n      \"link\": true\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-builtin-type\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.1.4.tgz\",\n      \"integrity\": \"sha512-bppkmBSsHFmIMSl8BO9TbsyzsvGjVoppt8xUiGzwiu/bhDCGxnpOKCxgqj6GuyHE0mINMDecBFPlOm2hzY084w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function.prototype.name\": \"^1.1.6\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"is-async-function\": \"^2.0.0\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-finalizationregistry\": \"^1.0.2\",\n        \"is-generator-function\": \"^1.0.10\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-weakref\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.15\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz\",\n      \"integrity\": \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-map\": \"^2.0.3\",\n        \"is-set\": \"^2.0.3\",\n        \"is-weakmap\": \"^2.0.2\",\n        \"is-weakset\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz\",\n      \"integrity\": \"sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.7\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.17.1\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.17.1.tgz\",\n      \"integrity\": \"sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \">=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/xml2js\": {\n      \"version\": \"0.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/xml2js/-/xml2js-0.5.0.tgz\",\n      \"integrity\": \"sha512-drPFnkQJik/O+uPKpqSgr22mpuFHqKdbS835iAQrUC73L2F5WkboIRd63ai/2Yg6I1jzifPFKH2NTK+cfglkIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sax\": \">=0.6.0\",\n        \"xmlbuilder\": \"~11.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/xmlbuilder\": {\n      \"version\": \"11.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz\",\n      \"integrity\": \"sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/xterm\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/xterm/-/xterm-5.3.0.tgz\",\n      \"integrity\": \"sha512-8QqjlekLUFTrU6x7xck1MsPzPA571K5zNqWm0M0oroYEWVOptZ0+ubQSkQ3uxIEhcIHRujJy6emDWX4A7qyFzg==\"\n    },\n    \"node_modules/xterm-addon-fit\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/xterm-addon-fit/-/xterm-addon-fit-0.7.0.tgz\",\n      \"integrity\": \"sha512-tQgHGoHqRTgeROPnvmtEJywLKoC/V9eNs4bLLz7iyJr1aW/QFzRwfd3MGiJ6odJd9xEfxcW36/xRU47JkD5NKQ==\",\n      \"peerDependencies\": {\n        \"xterm\": \"^5.0.0\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\"\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"2.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.6.0.tgz\",\n      \"integrity\": \"sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"yaml\": \"bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz\",\n      \"integrity\": \"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/zod\": {\n      \"version\": \"3.23.8\",\n      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.23.8.tgz\",\n      \"integrity\": \"sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/colinhacks\"\n      }\n    },\n    \"packages/html-reporter\": {\n      \"version\": \"0.0.0\"\n    },\n    \"packages/playwright\": {\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"2.3.2\"\n      }\n    },\n    \"packages/playwright-browser-chromium\": {\n      \"name\": \"@playwright/browser-chromium\",\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-browser-firefox\": {\n      \"name\": \"@playwright/browser-firefox\",\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-browser-webkit\": {\n      \"name\": \"@playwright/browser-webkit\",\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-chromium\": {\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-core\": {\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"playwright-core\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-ct-core\": {\n      \"name\": \"@playwright/experimental-ct-core\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright\": \"1.50.0-next\",\n        \"playwright-core\": \"1.50.0-next\",\n        \"vite\": \"^5.2.8\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-ct-react\": {\n      \"name\": \"@playwright/experimental-ct-react\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@playwright/experimental-ct-core\": \"1.50.0-next\",\n        \"@vitejs/plugin-react\": \"^4.2.1\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-ct-react17\": {\n      \"name\": \"@playwright/experimental-ct-react17\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@playwright/experimental-ct-core\": \"1.50.0-next\",\n        \"@vitejs/plugin-react\": \"^4.2.1\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-ct-svelte\": {\n      \"name\": \"@playwright/experimental-ct-svelte\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@playwright/experimental-ct-core\": \"1.50.0-next\",\n        \"@sveltejs/vite-plugin-svelte\": \"^3.0.1\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"devDependencies\": {\n        \"svelte\": \"^4.2.19\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-ct-vue\": {\n      \"name\": \"@playwright/experimental-ct-vue\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@playwright/experimental-ct-core\": \"1.50.0-next\",\n        \"@vitejs/plugin-vue\": \"^5.2.0\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-firefox\": {\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-test\": {\n      \"name\": \"@playwright/test\",\n      \"version\": \"1.50.0-next\",\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright\": \"1.50.0-next\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright-webkit\": {\n      \"version\": \"1.50.0-next\",\n      \"hasInstallScript\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"playwright-core\": \"1.50.0-next\"\n      },\n      \"bin\": {\n        \"playwright\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"packages/playwright/node_modules/fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"packages/recorder\": {\n      \"version\": \"0.0.0\",\n      \"dependencies\": {\n        \"yaml\": \"^2.6.0\"\n      }\n    },\n    \"packages/trace-viewer\": {\n      \"version\": \"0.0.0\"\n    },\n    \"packages/web\": {\n      \"version\": \"0.0.0\",\n      \"dependencies\": {\n        \"codemirror\": \"5.65.18\",\n        \"xterm\": \"^5.1.0\",\n        \"xterm-addon-fit\": \"^0.7.0\"\n      }\n    },\n    \"utils/eslint-plugin-internal-playwright\": {\n      \"version\": \"0.0.1\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.88,
          "content": "{\n  \"name\": \"playwright-internal\",\n  \"private\": true,\n  \"version\": \"1.50.0-next\",\n  \"description\": \"A high-level API to automate web browsers\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/microsoft/playwright.git\"\n  },\n  \"homepage\": \"https://playwright.dev\",\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"author\": {\n    \"name\": \"Microsoft Corporation\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"ctest\": \"playwright test --config=tests/library/playwright.config.ts --project=chromium-*\",\n    \"ftest\": \"playwright test --config=tests/library/playwright.config.ts --project=firefox-*\",\n    \"wtest\": \"playwright test --config=tests/library/playwright.config.ts --project=webkit-*\",\n    \"atest\": \"playwright test --config=tests/android/playwright.config.ts\",\n    \"etest\": \"playwright test --config=tests/electron/playwright.config.ts\",\n    \"webview2test\": \"playwright test --config=tests/webview2/playwright.config.ts\",\n    \"itest\": \"playwright test --config=tests/installation/playwright.config.ts\",\n    \"stest\": \"playwright test --config=tests/stress/playwright.config.ts\",\n    \"biditest\": \"playwright test --config=tests/bidi/playwright.config.ts\",\n    \"test-html-reporter\": \"playwright test --config=packages/html-reporter\",\n    \"test-web\": \"playwright test --config=packages/web\",\n    \"ttest\": \"node ./tests/playwright-test/stable-test-runner/node_modules/@playwright/test/cli test --config=tests/playwright-test/playwright.config.ts\",\n    \"ct\": \"playwright test tests/components/test-all.spec.js --reporter=list\",\n    \"test\": \"playwright test --config=tests/library/playwright.config.ts\",\n    \"eslint\": \"eslint --cache --report-unused-disable-directives --ext ts,tsx,js,jsx,mjs .\",\n    \"tsc\": \"tsc -p . && tsc -p packages/html-reporter/\",\n    \"build-installer\": \"babel -s --extensions \\\".ts\\\" --out-dir packages/playwright-core/lib/utils/ packages/playwright-core/src/utils\",\n    \"doc\": \"node utils/doclint/cli.js\",\n    \"lint\": \"npm run eslint && npm run tsc && npm run doc && npm run check-deps && node utils/generate_channels.js && node utils/generate_types/ && npm run lint-tests && npm run test-types && npm run lint-packages\",\n    \"lint-packages\": \"node utils/workspace.js --ensure-consistent\",\n    \"lint-tests\": \"node utils/lint_tests.js\",\n    \"flint\": \"concurrently \\\"npm run eslint\\\" \\\"npm run tsc\\\" \\\"npm run doc\\\" \\\"npm run check-deps\\\" \\\"node utils/generate_channels.js\\\" \\\"node utils/generate_types/\\\" \\\"npm run lint-tests\\\" \\\"npm run test-types\\\" \\\"npm run lint-packages\\\"\",\n    \"clean\": \"node utils/build/clean.js\",\n    \"build\": \"node utils/build/build.js\",\n    \"watch\": \"node utils/build/build.js --watch --lint\",\n    \"test-types\": \"node utils/generate_types/ && tsc -p utils/generate_types/test/tsconfig.json && tsc -p ./tests/\",\n    \"roll\": \"node utils/roll_browser.js\",\n    \"check-deps\": \"node utils/check_deps.js\",\n    \"build-android-driver\": \"./utils/build_android_driver.sh\",\n    \"innerloop\": \"playwright run-server --reuse-browser\"\n  },\n  \"workspaces\": [\n    \"packages/*\"\n  ],\n  \"devDependencies\": {\n    \"@actions/core\": \"^1.10.0\",\n    \"@babel/cli\": \"^7.23.4\",\n    \"@babel/code-frame\": \"^7.23.5\",\n    \"@babel/plugin-transform-class-properties\": \"^7.23.3\",\n    \"@babel/plugin-transform-export-namespace-from\": \"^7.23.4\",\n    \"@babel/plugin-transform-logical-assignment-operators\": \"^7.23.4\",\n    \"@babel/plugin-transform-modules-commonjs\": \"^7.23.3\",\n    \"@babel/plugin-transform-nullish-coalescing-operator\": \"^7.23.4\",\n    \"@babel/plugin-transform-optional-chaining\": \"^7.23.4\",\n    \"@babel/plugin-transform-typescript\": \"^7.23.6\",\n    \"@babel/preset-react\": \"^7.23.3\",\n    \"@types/babel__core\": \"^7.20.2\",\n    \"@types/codemirror\": \"^5.60.7\",\n    \"@types/formidable\": \"^2.0.4\",\n    \"@types/immutable\": \"^3.8.7\",\n    \"@types/node\": \"^18.19.68\",\n    \"@types/react\": \"^18.0.12\",\n    \"@types/react-dom\": \"^18.0.5\",\n    \"@types/ws\": \"^8.5.3\",\n    \"@types/xml2js\": \"^0.4.9\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.15.0\",\n    \"@typescript-eslint/parser\": \"^7.15.0\",\n    \"@typescript-eslint/utils\": \"^7.15.0\",\n    \"@vitejs/plugin-basic-ssl\": \"^1.1.0\",\n    \"@vitejs/plugin-react\": \"^4.2.1\",\n    \"@zip.js/zip.js\": \"^2.7.29\",\n    \"ansi-styles\": \"^4.3.0\",\n    \"chokidar\": \"^3.5.3\",\n    \"chromium-bidi\": \"^0.7.1\",\n    \"colors\": \"^1.4.0\",\n    \"concurrently\": \"^6.2.1\",\n    \"cross-env\": \"^7.0.3\",\n    \"dotenv\": \"^16.4.5\",\n    \"electron\": \"^30.1.2\",\n    \"esbuild\": \"^0.18.11\",\n    \"eslint\": \"^8.55.0\",\n    \"eslint-plugin-internal-playwright\": \"file:utils/eslint-plugin-internal-playwright\",\n    \"eslint-plugin-notice\": \"^0.9.10\",\n    \"eslint-plugin-react\": \"^7.35.0\",\n    \"eslint-plugin-react-hooks\": \"^4.6.2\",\n    \"formidable\": \"^2.1.1\",\n    \"immutable\": \"^4.3.7\",\n    \"license-checker\": \"^25.0.1\",\n    \"mime\": \"^3.0.0\",\n    \"node-stream-zip\": \"^1.15.0\",\n    \"react\": \"^18.1.0\",\n    \"react-dom\": \"^18.1.0\",\n    \"ssim.js\": \"^3.5.0\",\n    \"typescript\": \"^5.7.2\",\n    \"vite\": \"^5.4.6\",\n    \"ws\": \"^8.17.1\",\n    \"xml2js\": \"^0.5.0\",\n    \"yaml\": \"^2.6.0\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 1.28,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2019\",\n    \"module\": \"commonjs\",\n    \"lib\": [\"esnext\", \"dom\", \"DOM.Iterable\"],\n    \"baseUrl\": \".\",\n    \"paths\": {\n      /*\n        The following two serve different purposes:\n         - @foo/* is for importing types only,\n         - .../lib/* means require dependency\n      */\n      \"@html-reporter/*\": [\"./packages/html-reporter/src/*\"],\n      \"@injected/*\": [\"./packages/playwright-core/src/server/injected/*\"],\n      \"@isomorphic/*\": [\"./packages/playwright-core/src/utils/isomorphic/*\"],\n      \"@protocol/*\": [\"./packages/protocol/src/*\"],\n      \"@recorder/*\": [\"./packages/recorder/src/*\"],\n      \"@testIsomorphic/*\": [\"./packages/playwright/src/isomorphic/*\"],\n      \"@trace/*\": [\"./packages/trace/src/*\"],\n      \"@web/*\": [\"./packages/web/src/*\"],\n      \"playwright-core/lib/*\": [\"./packages/playwright-core/src/*\"],\n      \"playwright/lib/*\": [\"./packages/playwright/src/*\"],\n    },\n    \"esModuleInterop\": true,\n    \"strict\": true,\n    \"allowJs\": false,\n    \"jsx\": \"react-jsx\",\n    \"resolveJsonModule\": true,\n    \"noEmit\": true,\n    \"noImplicitOverride\": true,\n    \"useUnknownInCatchVariables\": false,\n    \"skipLibCheck\": true,\n  },\n  \"compileOnSave\": true,\n  \"include\": [\"packages\"],\n  \"exclude\": [\n    \"packages/*/lib\",\n    \"packages/html-reporter/\",\n  ]\n}\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    },
    {
      "nameWithOwner": "hakimel/reveal.js",
      "stars": 68201,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08,
          "content": ".idea/\n*.iml\n*.iws\n*.eml\nout/\n.DS_Store\n.svn\nlog/*.log\ntmp/**\nnode_modules/\n.sass-cache"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.05,
          "content": "/test\n/examples\n.github\n.sass-cache\ngulpfile.js\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.08,
          "content": "Copyright (C) 2011-2024 Hakim El Hattab, http://hakim.se, and reveal.js contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5,
          "content": "<p align=\"center\">\n  <a href=\"https://revealjs.com\">\n  <img src=\"https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png\" alt=\"reveal.js\" width=\"500\">\n  </a>\n  <br><br>\n  <a href=\"https://github.com/hakimel/reveal.js/actions\"><img src=\"https://github.com/hakimel/reveal.js/workflows/tests/badge.svg\"></a>\n  <a href=\"https://slides.com/\"><img src=\"https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1\" alt=\"Slides\" width=\"160\" height=\"20\"></a>\n</p>\n\nreveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at [revealjs.com](https://revealjs.com/).\n\nThe framework comes with a powerful feature set including [nested slides](https://revealjs.com/vertical-slides/), [Markdown support](https://revealjs.com/markdown/), [Auto-Animate](https://revealjs.com/auto-animate/), [PDF export](https://revealjs.com/pdf-export/), [speaker notes](https://revealjs.com/speaker-view/), [LaTeX typesetting](https://revealjs.com/math/), [syntax highlighted code](https://revealjs.com/code/) and an [extensive API](https://revealjs.com/api/).\n\n---\n\nWant to create reveal.js presentation in a graphical editor? Try <https://slides.com>. It's made by the same people behind reveal.js.\n\n---\n\n### Sponsors\nHakim's open source work is supported by <a href=\"https://github.com/sponsors/hakimel\">GitHub sponsors</a>. Special thanks to:\n<div align=\"center\">\n  <table>\n    <td align=\"center\">\n      <a href=\"https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=revealjs&utm_source=github\">\n        <div>\n          <img src=\"https://user-images.githubusercontent.com/629429/151508669-efb4c3b3-8fe3-45eb-8e47-e9510b5f0af1.svg\" width=\"290\" alt=\"WorkOS\">\n        </div>\n        <b>Your app, enterprise-ready.</b>\n        <div>\n          <sub>Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months.</sup>\n        </div>\n      </a>\n    </td>\n  </table>\n</div>\n\n---\n\n### Getting started\n- 🚀 [Install reveal.js](https://revealjs.com/installation)\n- 👀 [View the demo presentation](https://revealjs.com/demo)\n- 📖 [Read the documentation](https://revealjs.com/markup/)\n- 🖌 [Try the visual editor for reveal.js at Slides.com](https://slides.com/)\n- 🎬 [Watch the reveal.js video course (paid)](https://revealjs.com/course)\n\n--- \n<div align=\"center\">\n  MIT licensed | Copyright © 2011-2024 Hakim El Hattab, https://hakim.se\n</div>\n"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo.html",
          "type": "blob",
          "size": 19.08,
          "content": "<!doctype html>\n<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\n\t\t<title>reveal.js – The HTML Presentation Framework</title>\n\n\t\t<meta name=\"description\" content=\"A framework for easily creating beautiful presentations using HTML\">\n\t\t<meta name=\"author\" content=\"Hakim El Hattab\">\n\n\t\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n\t\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n\t\t<link rel=\"stylesheet\" href=\"dist/reset.css\">\n\t\t<link rel=\"stylesheet\" href=\"dist/reveal.css\">\n\t\t<link rel=\"stylesheet\" href=\"dist/theme/black.css\" id=\"theme\">\n\n\t\t<!-- Theme used for syntax highlighting of code -->\n\t\t<link rel=\"stylesheet\" href=\"plugin/highlight/monokai.css\">\n\t</head>\n\n\t<body>\n\n\t\t<div class=\"reveal\">\n\n\t\t\t<!-- Any section element inside of this container is displayed as a slide -->\n\t\t\t<div class=\"slides\">\n\t\t\t\t<section>\n\t\t\t\t\t<a href=\"https://revealjs.com\">\n\t\t\t\t\t\t<img src=\"https://static.slid.es/reveal/logo-v1/reveal-white-text.svg\" alt=\"reveal.js logo\" style=\"height: 180px; margin: 0 auto 4rem auto; background: transparent;\" class=\"demo-logo\">\n\t\t\t\t\t</a>\n\t\t\t\t\t<h3>The HTML Presentation Framework</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<small>Created by <a href=\"http://hakim.se\">Hakim El Hattab</a> and <a href=\"https://github.com/hakimel/reveal.js/graphs/contributors\">contributors</a></small>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Hello There</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\treveal.js enables you to create beautiful interactive slide decks using HTML. This presentation will show you examples of what it can do.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<!-- Example of nested vertical slides -->\n\t\t\t\t<section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Vertical Slides</h2>\n\t\t\t\t\t\t<p>Slides can be nested inside of each other.</p>\n\t\t\t\t\t\t<p>Use the <em>Space</em> key to navigate through all slides.</p>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<a href=\"#/2/1\" class=\"navigate-down\">\n\t\t\t\t\t\t\t<img class=\"r-frame\" style=\"background: rgba(255,255,255,0.1);\" width=\"178\" height=\"238\" data-src=\"https://static.slid.es/reveal/arrow.png\" alt=\"Down arrow\">\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Basement Level 1</h2>\n\t\t\t\t\t\t<p>Nested slides are useful for adding additional detail underneath a high level horizontal slide.</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Basement Level 2</h2>\n\t\t\t\t\t\t<p>That's it, time to go back up.</p>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<a href=\"#/2\">\n\t\t\t\t\t\t\t<img class=\"r-frame\" style=\"background: rgba(255,255,255,0.1); transform: rotate(180deg);\" width=\"178\" height=\"238\" data-src=\"https://static.slid.es/reveal/arrow.png\" alt=\"Up arrow\">\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Slides</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tNot a coder? Not a problem. There's a fully-featured visual editor for authoring these, try it out at <a href=\"https://slides.com\" target=\"_blank\">https://slides.com</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-visibility=\"hidden\">\n\t\t\t\t\t<h2>Hidden Slides</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis slide is visible in the source, but hidden when the presentation is viewed. You can show all hidden slides by setting the `showHiddenSlides` config option to `true`.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-auto-animate>\n\t\t\t\t\t<h2 data-id=\"code-title\">Pretty Code</h2>\n\t\t\t\t\t<pre data-id=\"code-animation\"><code class=\"hljs javascript\" data-trim data-line-numbers>\n\t\t\t\t\t\timport React, { useState } from 'react';\n\n\t\t\t\t\t\tfunction Example() {\n\t\t\t\t\t\t  const [count, setCount] = useState(0);\n\n\t\t\t\t\t\t  return (\n\t\t\t\t\t\t    ...\n\t\t\t\t\t\t  );\n\t\t\t\t\t\t}\n\t\t\t\t\t</code></pre>\n\t\t\t\t\t<p>Code syntax highlighting courtesy of <a href=\"https://highlightjs.org/usage/\">highlight.js</a>.</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-auto-animate>\n\t\t\t\t\t<h2 data-id=\"code-title\">With Animations</h2>\n\t\t\t\t\t<pre data-id=\"code-animation\"><code class=\"hljs javascript\" data-trim data-line-numbers=\"|4,8-11|17|22-24\"><script type=\"text/template\">\n\t\t\t\t\t\timport React, { useState } from 'react';\n\n\t\t\t\t\t\tfunction Example() {\n\t\t\t\t\t\t  const [count, setCount] = useState(0);\n\n\t\t\t\t\t\t  return (\n\t\t\t\t\t\t    <div>\n\t\t\t\t\t\t      <p>You clicked {count} times</p>\n\t\t\t\t\t\t      <button onClick={() => setCount(count + 1)}>\n\t\t\t\t\t\t        Click me\n\t\t\t\t\t\t      </button>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t  );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction SecondExample() {\n\t\t\t\t\t\t  const [count, setCount] = useState(0);\n\n\t\t\t\t\t\t  return (\n\t\t\t\t\t\t    <div>\n\t\t\t\t\t\t      <p>You clicked {count} times</p>\n\t\t\t\t\t\t      <button onClick={() => setCount(count + 1)}>\n\t\t\t\t\t\t        Click me\n\t\t\t\t\t\t      </button>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t  );\n\t\t\t\t\t\t}\n\t\t\t\t\t</script></code></pre>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Point of View</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPress <strong>ESC</strong> to enter the slide overview.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHold down the <strong>alt</strong> key (<strong>ctrl</strong> in Linux) and click on any element to zoom towards it using <a href=\"http://lab.hakim.se/zoom-js\">zoom.js</a>. Click again to zoom back out.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t(NOTE: Use ctrl + click in Linux.)\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-auto-animate data-auto-animate-easing=\"cubic-bezier(0.770, 0.000, 0.175, 1.000)\">\n\t\t\t\t\t<h2>Auto-Animate</h2>\n\t\t\t\t\t<p>Automatically animate matching elements across slides with <a href=\"https://revealjs.com/auto-animate/\">Auto-Animate</a>.</p>\n\t\t\t\t\t<div class=\"r-hstack justify-center\">\n\t\t\t\t\t\t<div data-id=\"box1\" style=\"background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box2\" style=\"background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box3\" style=\"background: #999; width: 50px; height: 50px; margin: 10px; border-radius: 5px;\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section data-auto-animate data-auto-animate-easing=\"cubic-bezier(0.770, 0.000, 0.175, 1.000)\">\n\t\t\t\t\t<div class=\"r-hstack justify-center\">\n\t\t\t\t\t\t<div data-id=\"box1\" data-auto-animate-delay=\"0\" style=\"background: cyan; width: 150px; height: 100px; margin: 10px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box2\" data-auto-animate-delay=\"0.1\" style=\"background: magenta; width: 150px; height: 100px; margin: 10px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box3\" data-auto-animate-delay=\"0.2\" style=\"background: yellow; width: 150px; height: 100px; margin: 10px;\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 style=\"margin-top: 20px;\">Auto-Animate</h2>\n\t\t\t\t</section>\n\t\t\t\t<section data-auto-animate data-auto-animate-easing=\"cubic-bezier(0.770, 0.000, 0.175, 1.000)\">\n\t\t\t\t\t<div class=\"r-stack\">\n\t\t\t\t\t\t<div data-id=\"box1\" style=\"background: cyan; width: 300px; height: 300px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box2\" style=\"background: magenta; width: 200px; height: 200px;\"></div>\n\t\t\t\t\t\t<div data-id=\"box3\" style=\"background: yellow; width: 100px; height: 100px;\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 style=\"margin-top: 20px;\">Auto-Animate</h2>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Touch Optimized</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPresentations look great on touch devices, like mobile phones and tablets. Simply swipe through your slides.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-markdown>\n\t\t\t\t\t<script type=\"text/template\">\n\t\t\t\t\t\t## Markdown Support\n\n\t\t\t\t\t\tWrite content using inline or external Markdown.\n\t\t\t\t\t\tInstructions and more info available in the [docs](https://revealjs.com/markdown/).\n\n\t\t\t\t\t\t```html []\n\t\t\t\t\t\t<section data-markdown>\n\t\t\t\t\t\t  ## Markdown Support\n\n\t\t\t\t\t\t  Write content using inline or external Markdown.\n\t\t\t\t\t\t  Instructions and more info available in the [docs](https://revealjs.com/markdown/).\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t```\n\t\t\t\t\t</script>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<p>Add the <code>r-fit-text</code> class to auto-size text</p>\n\t\t\t\t\t<h2 class=\"r-fit-text\">FIT TEXT</h2>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<section id=\"fragments\">\n\t\t\t\t\t\t<h2>Fragments</h2>\n\t\t\t\t\t\t<p>Hit the next arrow...</p>\n\t\t\t\t\t\t<p class=\"fragment\">... to step through ...</p>\n\t\t\t\t\t\t<p><span class=\"fragment\">... a</span> <span class=\"fragment\">fragmented</span> <span class=\"fragment\">slide.</span></p>\n\n\t\t\t\t\t\t<aside class=\"notes\">\n\t\t\t\t\t\t\tThis slide has fragments which are also stepped through in the notes window.\n\t\t\t\t\t\t</aside>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2>Fragment Styles</h2>\n\t\t\t\t\t\t<p>There's different types of fragments, like:</p>\n\t\t\t\t\t\t<p class=\"fragment grow\">grow</p>\n\t\t\t\t\t\t<p class=\"fragment shrink\">shrink</p>\n\t\t\t\t\t\t<p class=\"fragment fade-out\">fade-out</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<span style=\"display: inline-block;\" class=\"fragment fade-right\">fade-right, </span>\n\t\t\t\t\t\t\t<span style=\"display: inline-block;\" class=\"fragment fade-up\">up, </span>\n\t\t\t\t\t\t\t<span style=\"display: inline-block;\" class=\"fragment fade-down\">down, </span>\n\t\t\t\t\t\t\t<span style=\"display: inline-block;\" class=\"fragment fade-left\">left</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p class=\"fragment fade-in-then-out\">fade-in-then-out</p>\n\t\t\t\t\t\t<p class=\"fragment fade-in-then-semi-out\">fade-in-then-semi-out</p>\n\t\t\t\t\t\t<p>Highlight <span class=\"fragment highlight-red\">red</span> <span class=\"fragment highlight-blue\">blue</span> <span class=\"fragment highlight-green\">green</span></p>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\t\t\t\t<section id=\"transitions\">\n\t\t\t\t\t<h2>Transition Styles</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou can select from different transitions, like: <br>\n\t\t\t\t\t\t<a href=\"?transition=none#/transitions\">None</a> -\n\t\t\t\t\t\t<a href=\"?transition=fade#/transitions\">Fade</a> -\n\t\t\t\t\t\t<a href=\"?transition=slide#/transitions\">Slide</a> -\n\t\t\t\t\t\t<a href=\"?transition=convex#/transitions\">Convex</a> -\n\t\t\t\t\t\t<a href=\"?transition=concave#/transitions\">Concave</a> -\n\t\t\t\t\t\t<a href=\"?transition=zoom#/transitions\">Zoom</a>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section id=\"themes\">\n\t\t\t\t\t<h2>Themes</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\treveal.js comes with a few themes built in: <br>\n\t\t\t\t\t\t<!-- Hacks to swap themes after the page has loaded. Not flexible and only intended for the reveal.js demo deck. -->\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/black.css'); return false;\">Black (default)</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/white.css'); return false;\">White</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/league.css'); return false;\">League</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/sky.css'); return false;\">Sky</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/beige.css'); return false;\">Beige</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/simple.css'); return false;\">Simple</a> <br>\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/serif.css'); return false;\">Serif</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/blood.css'); return false;\">Blood</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/night.css'); return false;\">Night</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/moon.css'); return false;\">Moon</a> -\n\t\t\t\t\t\t<a href=\"#/themes\" onclick=\"document.getElementById('theme').setAttribute('href','dist/theme/solarized.css'); return false;\">Solarized</a>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<section data-background=\"#dddddd\">\n\t\t\t\t\t\t<h2>Slide Backgrounds</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSet <code>data-background=\"#dddddd\"</code> on a slide to change the background color. All CSS color formats are supported.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<a href=\"#\" class=\"navigate-down\">\n\t\t\t\t\t\t\t<img class=\"r-frame\" style=\"background: rgba(255,255,255,0.1);\" width=\"178\" height=\"238\" data-src=\"https://static.slid.es/reveal/arrow.png\" alt=\"Down arrow\">\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-background-gradient=\"linear-gradient(to bottom, #283b95, #17b2c3)\">\n\t\t\t\t\t\t<h2>Gradient Backgrounds</h2>\n\t\t\t\t\t\t<pre><code class=\"hljs html wrap\">&lt;section data-background-gradient=\n\t\t\t\t\t\t\t\"linear-gradient(to bottom, #ddd, #191919)\"&gt;</code></pre>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-background=\"https://static.slid.es/reveal/image-placeholder.png\">\n\t\t\t\t\t\t<h2>Image Backgrounds</h2>\n\t\t\t\t\t\t<pre><code class=\"hljs html\">&lt;section data-background=\"image.png\"&gt;</code></pre>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-background=\"https://static.slid.es/reveal/image-placeholder.png\" data-background-repeat=\"repeat\" data-background-size=\"100px\">\n\t\t\t\t\t\t<h2>Tiled Backgrounds</h2>\n\t\t\t\t\t\t<pre><code class=\"hljs html\" style=\"word-wrap: break-word;\">&lt;section data-background=\"image.png\" data-background-repeat=\"repeat\" data-background-size=\"100px\"&gt;</code></pre>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-background-video=\"https://static.slid.es/site/homepage/v1/homepage-video-editor.mp4\" data-background-color=\"#000000\">\n\t\t\t\t\t\t<div style=\"background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;\">\n\t\t\t\t\t\t\t<h2>Video Backgrounds</h2>\n\t\t\t\t\t\t\t<pre><code class=\"hljs html\" style=\"word-wrap: break-word;\">&lt;section data-background-video=\"video.mp4,video.webm\"&gt;</code></pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-background=\"http://i.giphy.com/90F8aUepslB84.gif\">\n\t\t\t\t\t\t<h2>... and GIFs!</h2>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-transition=\"slide\" data-background=\"#4d7e65\" data-background-transition=\"zoom\">\n\t\t\t\t\t<h2>Background Transitions</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDifferent background transitions are available via the backgroundTransition option. This one's called \"zoom\".\n\t\t\t\t\t</p>\n\t\t\t\t\t<pre><code class=\"hljs javascript\">Reveal.configure({ backgroundTransition: 'zoom' })</code></pre>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-transition=\"slide\" data-background=\"#b5533c\" data-background-transition=\"zoom\">\n\t\t\t\t\t<h2>Background Transitions</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou can override background transitions per-slide.\n\t\t\t\t\t</p>\n\t\t\t\t\t<pre><code class=\"hljs html\" style=\"word-wrap: break-word;\">&lt;section data-background-transition=\"zoom\"&gt;</code></pre>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-background-iframe=\"https://hakim.se\" data-background-interactive>\n\t\t\t\t\t<div style=\"position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;\">\n\t\t\t\t\t\t<h2>Iframe Backgrounds</h2>\n\t\t\t\t\t\t<p>Since reveal.js runs on the web, you can easily embed other web content. Try interacting with the page in the background.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Marvelous List</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>No order here</li>\n\t\t\t\t\t\t<li>Or here</li>\n\t\t\t\t\t\t<li>Or here</li>\n\t\t\t\t\t\t<li>Or here</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Fantastic Ordered List</h2>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>One is smaller than...</li>\n\t\t\t\t\t\t<li>Two is smaller than...</li>\n\t\t\t\t\t\t<li>Three!</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Tabular Tables</h2>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Item</th>\n\t\t\t\t\t\t\t\t<th>Value</th>\n\t\t\t\t\t\t\t\t<th>Quantity</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Apples</td>\n\t\t\t\t\t\t\t\t<td>$1</td>\n\t\t\t\t\t\t\t\t<td>7</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Lemonade</td>\n\t\t\t\t\t\t\t\t<td>$2</td>\n\t\t\t\t\t\t\t\t<td>18</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Bread</td>\n\t\t\t\t\t\t\t\t<td>$3</td>\n\t\t\t\t\t\t\t\t<td>2</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Clever Quotes</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThese guys come in two forms, inline: <q cite=\"http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations\">The nice thing about standards is that there are so many to choose from</q> and block:\n\t\t\t\t\t</p>\n\t\t\t\t\t<blockquote cite=\"http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations\">\n\t\t\t\t\t\t&ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would\n\t\t\t\t\t\treproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.&rdquo;\n\t\t\t\t\t</blockquote>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Intergalactic Interconnections</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou can link between slides internally,\n\t\t\t\t\t\t<a href=\"#/2/3\">like this</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Speaker View</h2>\n\t\t\t\t\t<p>There's a <a href=\"https://revealjs.com/speaker-view/\">speaker view</a>. It includes a timer, preview of the upcoming slide as well as your speaker notes.</p>\n\t\t\t\t\t<p>Press the <em>S</em> key to try it out.</p>\n\n\t\t\t\t\t<aside class=\"notes\">\n\t\t\t\t\t\tOh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit 's' on your keyboard).\n\t\t\t\t\t</aside>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Export to PDF</h2>\n\t\t\t\t\t<p>Presentations can be <a href=\"https://revealjs.com/pdf-export/\">exported to PDF</a>, here's an example:</p>\n\t\t\t\t\t<iframe data-src=\"https://www.slideshare.net/slideshow/embed_code/42840540\" width=\"445\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:3px solid #666; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Global State</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSet <code>data-state=\"something\"</code> on a slide and <code>\"something\"</code>\n\t\t\t\t\t\twill be added as a class to the document element when the slide is open. This lets you\n\t\t\t\t\t\tapply broader style changes, like switching the page background.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section data-state=\"customevent\">\n\t\t\t\t\t<h2>State Events</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAdditionally custom events can be triggered on a per slide basis by binding to the <code>data-state</code> name.\n\t\t\t\t\t</p>\n\t\t\t\t\t<pre><code class=\"javascript\" data-trim contenteditable style=\"font-size: 18px;\">\nReveal.on( 'customevent', function() {\n\tconsole.log( '\"customevent\" has fired' );\n} );\n\t\t\t\t\t</code></pre>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Take a Moment</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPress B or . on your keyboard to pause the presentation. This is helpful when you're on stage and want to take distracting slides off the screen.\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Much more</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Right-to-left support</li>\n\t\t\t\t\t\t<li><a href=\"https://revealjs.com/api/\">Extensive JavaScript API</a></li>\n\t\t\t\t\t\t<li><a href=\"https://revealjs.com/auto-slide/\">Auto-progression</a></li>\n\t\t\t\t\t\t<li><a href=\"https://revealjs.com/backgrounds/#parallax-background\">Parallax backgrounds</a></li>\n\t\t\t\t\t\t<li><a href=\"https://revealjs.com/keyboard/\">Custom keyboard bindings</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</section>\n\n\t\t\t\t<section style=\"text-align: left;\">\n\t\t\t\t\t<h1>THE END</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t- <a href=\"https://slides.com\">Try the online editor</a> <br>\n\t\t\t\t\t\t- <a href=\"https://github.com/hakimel/reveal.js\">Source code &amp; documentation</a>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<script src=\"dist/reveal.js\"></script>\n\t\t<script src=\"plugin/zoom/zoom.js\"></script>\n\t\t<script src=\"plugin/notes/notes.js\"></script>\n\t\t<script src=\"plugin/search/search.js\"></script>\n\t\t<script src=\"plugin/markdown/markdown.js\"></script>\n\t\t<script src=\"plugin/highlight/highlight.js\"></script>\n\t\t<script>\n\n\t\t\t// Also available as an ES module, see:\n\t\t\t// https://revealjs.com/initialization/\n\t\t\tReveal.initialize({\n\t\t\t\tcontrols: true,\n\t\t\t\tprogress: true,\n\t\t\t\tcenter: true,\n\t\t\t\thash: true,\n\n\t\t\t\t// Learn about plugins: https://revealjs.com/plugins/\n\t\t\t\tplugins: [ RevealZoom, RevealNotes, RevealSearch, RevealMarkdown, RevealHighlight ]\n\t\t\t});\n\n\t\t</script>\n\n\t</body>\n</html>\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 9.62,
          "content": "const fs = require('fs');\nconst pkg = require('./package.json')\nconst glob = require('glob')\nconst yargs = require('yargs')\nconst through = require('through2');\nconst qunit = require('node-qunit-puppeteer')\n\nconst {rollup} = require('rollup')\nconst terser = require('@rollup/plugin-terser')\nconst babel = require('@rollup/plugin-babel').default\nconst commonjs = require('@rollup/plugin-commonjs')\nconst resolve = require('@rollup/plugin-node-resolve').default\nconst sass = require('sass')\n\nconst gulp = require('gulp')\nconst zip = require('gulp-zip')\nconst header = require('gulp-header-comment')\nconst eslint = require('gulp-eslint')\nconst minify = require('gulp-clean-css')\nconst connect = require('gulp-connect')\nconst autoprefixer = require('gulp-autoprefixer')\n\nconst root = yargs.argv.root || '.'\nconst port = yargs.argv.port || 8000\nconst host = yargs.argv.host || 'localhost'\n\nconst cssLicense = `\nreveal.js ${pkg.version}\n${pkg.homepage}\nMIT licensed\n\nCopyright (C) 2011-2024 Hakim El Hattab, https://hakim.se\n`;\n\nconst jsLicense = `/*!\n * reveal.js ${pkg.version}\n * ${pkg.homepage}\n * MIT licensed\n *\n * Copyright (C) 2011-2024 Hakim El Hattab, https://hakim.se\n */\\n`;\n\n// Prevents warnings from opening too many test pages\nprocess.setMaxListeners(20);\n\nconst babelConfig = {\n    babelHelpers: 'bundled',\n    ignore: ['node_modules'],\n    compact: false,\n    extensions: ['.js', '.html'],\n    plugins: [\n        'transform-html-import-to-string'\n    ],\n    presets: [[\n        '@babel/preset-env',\n        {\n            corejs: 3,\n            useBuiltIns: 'usage',\n            modules: false\n        }\n    ]]\n};\n\n// Our ES module bundle only targets newer browsers with\n// module support. Browsers are targeted explicitly instead\n// of using the \"esmodule: true\" target since that leads to\n// polyfilling older browsers and a larger bundle.\nconst babelConfigESM = JSON.parse( JSON.stringify( babelConfig ) );\nbabelConfigESM.presets[0][1].targets = { browsers: [\n    'last 2 Chrome versions',\n    'last 2 Safari versions',\n    'last 2 iOS versions',\n    'last 2 Firefox versions',\n    'last 2 Edge versions',\n] };\n\nlet cache = {};\n\n// Creates a bundle with broad browser support, exposed\n// as UMD\ngulp.task('js-es5', () => {\n    return rollup({\n        cache: cache.umd,\n        input: 'js/index.js',\n        plugins: [\n            resolve(),\n            commonjs(),\n            babel( babelConfig ),\n            terser()\n        ]\n    }).then( bundle => {\n        cache.umd = bundle.cache;\n        return bundle.write({\n            name: 'Reveal',\n            file: './dist/reveal.js',\n            format: 'umd',\n            banner: jsLicense,\n            sourcemap: true\n        });\n    });\n})\n\n// Creates an ES module bundle\ngulp.task('js-es6', () => {\n    return rollup({\n        cache: cache.esm,\n        input: 'js/index.js',\n        plugins: [\n            resolve(),\n            commonjs(),\n            babel( babelConfigESM ),\n            terser()\n        ]\n    }).then( bundle => {\n        cache.esm = bundle.cache;\n        return bundle.write({\n            file: './dist/reveal.esm.js',\n            format: 'es',\n            banner: jsLicense,\n            sourcemap: true\n        });\n    });\n})\ngulp.task('js', gulp.parallel('js-es5', 'js-es6'));\n\n// Creates a UMD and ES module bundle for each of our\n// built-in plugins\ngulp.task('plugins', () => {\n    return Promise.all([\n        { name: 'RevealHighlight', input: './plugin/highlight/plugin.js', output: './plugin/highlight/highlight' },\n        { name: 'RevealMarkdown', input: './plugin/markdown/plugin.js', output: './plugin/markdown/markdown' },\n        { name: 'RevealSearch', input: './plugin/search/plugin.js', output: './plugin/search/search' },\n        { name: 'RevealNotes', input: './plugin/notes/plugin.js', output: './plugin/notes/notes' },\n        { name: 'RevealZoom', input: './plugin/zoom/plugin.js', output: './plugin/zoom/zoom' },\n        { name: 'RevealMath', input: './plugin/math/plugin.js', output: './plugin/math/math' },\n    ].map( plugin => {\n        return rollup({\n                cache: cache[plugin.input],\n                input: plugin.input,\n                plugins: [\n                    resolve(),\n                    commonjs(),\n                    babel({\n                        ...babelConfig,\n                        ignore: [/node_modules\\/(?!(highlight\\.js|marked)\\/).*/],\n                    }),\n                    terser()\n                ]\n            }).then( bundle => {\n                cache[plugin.input] = bundle.cache;\n                bundle.write({\n                    file: plugin.output + '.esm.js',\n                    name: plugin.name,\n                    format: 'es'\n                })\n\n                bundle.write({\n                    file: plugin.output + '.js',\n                    name: plugin.name,\n                    format: 'umd'\n                })\n            });\n    } ));\n})\n\n// a custom pipeable step to transform Sass to CSS\nfunction compileSass() {\n  return through.obj( ( vinylFile, encoding, callback ) => {\n    const transformedFile = vinylFile.clone();\n\n    sass.render({\n        silenceDeprecations: ['legacy-js-api'],\n        data: transformedFile.contents.toString(),\n        file: transformedFile.path,\n    }, ( err, result ) => {\n        if( err ) {\n            callback(err);\n        }\n        else {\n            transformedFile.extname = '.css';\n            transformedFile.contents = result.css;\n            callback( null, transformedFile );\n        }\n    });\n  });\n}\n\ngulp.task('css-themes', () => gulp.src(['./css/theme/source/*.{sass,scss}'])\n        .pipe(compileSass())\n        .pipe(gulp.dest('./dist/theme')))\n\ngulp.task('css-core', () => gulp.src(['css/reveal.scss'])\n    .pipe(compileSass())\n    .pipe(autoprefixer())\n    .pipe(minify({compatibility: 'ie9'}))\n    .pipe(header(cssLicense))\n    .pipe(gulp.dest('./dist')))\n\ngulp.task('css', gulp.parallel('css-themes', 'css-core'))\n\ngulp.task('qunit', () => {\n\n    let serverConfig = {\n        root,\n        port: 8009,\n        host: 'localhost',\n        name: 'test-server'\n    }\n\n    let server = connect.server( serverConfig )\n\n    let testFiles = glob.sync('test/*.html' )\n\n    let totalTests = 0;\n    let failingTests = 0;\n\n    let tests = Promise.all( testFiles.map( filename => {\n        return new Promise( ( resolve, reject ) => {\n            qunit.runQunitPuppeteer({\n                targetUrl: `http://${serverConfig.host}:${serverConfig.port}/${filename}`,\n                timeout: 20000,\n                redirectConsole: false,\n                puppeteerArgs: ['--allow-file-access-from-files', '--no-sandbox']\n            })\n                .then(result => {\n                    if( result.stats.failed > 0 ) {\n                        console.log(`${'!'} ${filename} [${result.stats.passed}/${result.stats.total}] in ${result.stats.runtime}ms`.red);\n                        // qunit.printResultSummary(result, console);\n                        qunit.printFailedTests(result, console);\n                    }\n                    else {\n                        console.log(`${'✔'} ${filename} [${result.stats.passed}/${result.stats.total}] in ${result.stats.runtime}ms`.green);\n                    }\n\n                    totalTests += result.stats.total;\n                    failingTests += result.stats.failed;\n\n                    resolve();\n                })\n                .catch(error => {\n                    console.error(error);\n                    reject();\n                });\n        } )\n    } ) );\n\n    return new Promise( ( resolve, reject ) => {\n\n        tests.then( () => {\n                if( failingTests > 0 ) {\n                    reject( new Error(`${failingTests}/${totalTests} tests failed`.red) );\n                }\n                else {\n                    console.log(`${'✔'} Passed ${totalTests} tests`.green.bold);\n                    resolve();\n                }\n            } )\n            .catch( () => {\n                reject();\n            } )\n            .finally( () => {\n                server.close();\n            } );\n\n    } );\n} )\n\ngulp.task('eslint', () => gulp.src(['./js/**', 'gulpfile.js'])\n        .pipe(eslint())\n        .pipe(eslint.format()))\n\ngulp.task('test', gulp.series( 'eslint', 'qunit' ))\n\ngulp.task('default', gulp.series(gulp.parallel('js', 'css', 'plugins'), 'test'))\n\ngulp.task('build', gulp.parallel('js', 'css', 'plugins'))\n\ngulp.task('package', gulp.series(async () => {\n\n    let dirs = [\n        './index.html',\n        './dist/**',\n        './plugin/**',\n        './*/*.md'\n    ];\n\n    if (fs.existsSync('./lib')) dirs.push('./lib/**');\n    if (fs.existsSync('./images')) dirs.push('./images/**');\n    if (fs.existsSync('./slides')) dirs.push('./slides/**');\n\n    return gulp.src( dirs, { base: './', encoding: false } )\n    .pipe(zip('reveal-js-presentation.zip')).pipe(gulp.dest('./'))\n\n}))\n\ngulp.task('reload', () => gulp.src(['index.html'])\n    .pipe(connect.reload()));\n\ngulp.task('serve', () => {\n\n    connect.server({\n        root: root,\n        port: port,\n        host: host,\n        livereload: true\n    })\n\n    const slidesRoot = root.endsWith('/') ? root : root + '/'\n    gulp.watch([\n        slidesRoot + '**/*.html',\n        slidesRoot + '**/*.md',\n        `!${slidesRoot}**/node_modules/**`, // ignore node_modules\n    ], gulp.series('reload'))\n\n    gulp.watch(['js/**'], gulp.series('js', 'reload', 'eslint'))\n\n    gulp.watch(['plugin/**/plugin.js', 'plugin/**/*.html'], gulp.series('plugins', 'reload'))\n\n    gulp.watch([\n        'css/theme/source/**/*.{sass,scss}',\n        'css/theme/template/*.{sass,scss}',\n    ], gulp.series('css-themes', 'reload'))\n\n    gulp.watch([\n        'css/*.scss',\n        'css/print/*.{sass,scss,css}'\n    ], gulp.series('css-core', 'reload'))\n\n    gulp.watch(['test/*.html'], gulp.series('test'))\n\n})\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.12,
          "content": "<!doctype html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\n\t\t<title>reveal.js</title>\n\n\t\t<link rel=\"stylesheet\" href=\"dist/reset.css\">\n\t\t<link rel=\"stylesheet\" href=\"dist/reveal.css\">\n\t\t<link rel=\"stylesheet\" href=\"dist/theme/black.css\">\n\n\t\t<!-- Theme used for syntax highlighted code -->\n\t\t<link rel=\"stylesheet\" href=\"plugin/highlight/monokai.css\">\n\t</head>\n\t<body>\n\t\t<div class=\"reveal\">\n\t\t\t<div class=\"slides\">\n\t\t\t\t<section>Slide 1</section>\n\t\t\t\t<section>Slide 2</section>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<script src=\"dist/reveal.js\"></script>\n\t\t<script src=\"plugin/notes/notes.js\"></script>\n\t\t<script src=\"plugin/markdown/markdown.js\"></script>\n\t\t<script src=\"plugin/highlight/highlight.js\"></script>\n\t\t<script>\n\t\t\t// More info about initialization & config:\n\t\t\t// - https://revealjs.com/initialization/\n\t\t\t// - https://revealjs.com/config/\n\t\t\tReveal.initialize({\n\t\t\t\thash: true,\n\n\t\t\t\t// Learn about plugins: https://revealjs.com/plugins/\n\t\t\t\tplugins: [ RevealMarkdown, RevealHighlight, RevealNotes ]\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 341.03,
          "content": "{\n  \"name\": \"reveal.js\",\n  \"version\": \"5.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"reveal.js\",\n      \"version\": \"5.1.0\",\n      \"license\": \"MIT\",\n      \"devDependencies\": {\n        \"@babel/core\": \"^7.23.2\",\n        \"@babel/eslint-parser\": \"^7.22.15\",\n        \"@babel/preset-env\": \"^7.23.2\",\n        \"@rollup/plugin-babel\": \"^6.0.4\",\n        \"@rollup/plugin-commonjs\": \"^25.0.7\",\n        \"@rollup/plugin-node-resolve\": \"^15.2.3\",\n        \"@rollup/plugin-terser\": \"^0.4.4\",\n        \"babel-plugin-transform-html-import-to-string\": \"2.0.0\",\n        \"colors\": \"^1.4.0\",\n        \"core-js\": \"^3.33.1\",\n        \"fitty\": \"^2.3.7\",\n        \"glob\": \"^10.3.10\",\n        \"gulp\": \"^5.0.0\",\n        \"gulp-autoprefixer\": \"^8.0.0\",\n        \"gulp-clean-css\": \"^4.3.0\",\n        \"gulp-connect\": \"^5.7.0\",\n        \"gulp-eslint\": \"^6.0.0\",\n        \"gulp-header-comment\": \"^0.10.0\",\n        \"gulp-zip\": \"^5.1.0\",\n        \"highlight.js\": \"^11.9.0\",\n        \"marked\": \"^4.3.0\",\n        \"node-qunit-puppeteer\": \"^2.2.0\",\n        \"qunit\": \"^2.22.0\",\n        \"rollup\": \"^4.1.5\",\n        \"sass\": \"^1.79.4\",\n        \"through2\": \"^4.0.2\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\"\n      }\n    },\n    \"node_modules/@aashutoshrathi/word-wrap\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz\",\n      \"integrity\": \"sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz\",\n      \"integrity\": \"sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.22.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.13.tgz\",\n      \"integrity\": \"sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.22.13\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.23.2.tgz\",\n      \"integrity\": \"sha512-0S9TQMmDHlqAZ2ITT95irXKfxN9bncq8ZCoJhun3nHL/lLUxd2NKBJYoNGWH7S0hz6fRQwWlAWn/ILM0C70KZQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.23.2.tgz\",\n      \"integrity\": \"sha512-n7s51eWdaWZ3vGT2tD4T7J6eJs3QoBXydv7vkUM06Bf1cbVD2Kc2UrkzhiQwobfV7NwOnQXYL7UBJ5VPU+RGoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.23.0\",\n        \"@babel/helper-compilation-targets\": \"^7.22.15\",\n        \"@babel/helper-module-transforms\": \"^7.23.0\",\n        \"@babel/helpers\": \"^7.23.2\",\n        \"@babel/parser\": \"^7.23.0\",\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.23.2\",\n        \"@babel/types\": \"^7.23.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/eslint-parser\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/eslint-parser/-/eslint-parser-7.22.15.tgz\",\n      \"integrity\": \"sha512-yc8OOBIQk1EcRrpizuARSQS0TWAcOMpEJ1aafhNznaeYkeL+OhqnDObGFylB8ka8VFF/sZc+S4RzHyO+3LjQxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nicolo-ribaudo/eslint-scope-5-internals\": \"5.1.1-v1\",\n        \"eslint-visitor-keys\": \"^2.1.0\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10.13.0 || ^12.13.0 || >=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.11.0\",\n        \"eslint\": \"^7.5.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.23.0.tgz\",\n      \"integrity\": \"sha512-lN85QRR+5IbYrMWM6Y4pE/noaQtg4pNiqeNGX60eqOfo6gtEj6uw/JagelB8vVztSd7R6M5n1+PQkDbHbBRU4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.23.0\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.22.5.tgz\",\n      \"integrity\": \"sha512-LvBTxu8bQSQkcyKOU+a1btnNFQ1dMAd0R6PyW3arXes06F6QLWLIrd681bxRPIXlrMGR3XYnW9JyML7dP3qgxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-builder-binary-assignment-operator-visitor\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.22.15.tgz\",\n      \"integrity\": \"sha512-QkBXwGgaoC2GtGZRoma6kv7Szfv06khvhFav67ZExau2RaXzy8MpHSMO2PNoP2XtmQphJQRHFfg77Bq731Yizw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.22.15.tgz\",\n      \"integrity\": \"sha512-y6EEzULok0Qvz8yyLkCvVX+02ic+By2UdOhylwUOvOn9dvYc9mKICJuuU1n1XBI02YWsNsnrY1kc6DVbjcXbtw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.22.9\",\n        \"@babel/helper-validator-option\": \"^7.22.15\",\n        \"browserslist\": \"^4.21.9\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.22.15.tgz\",\n      \"integrity\": \"sha512-jKkwA59IXcvSaiK2UN45kKwSC9o+KuoXsBDvHvU/7BecYIp8GQ2UwrVvFgJASUT+hBnwJx6MhvMCuMzwZZ7jlg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-environment-visitor\": \"^7.22.5\",\n        \"@babel/helper-function-name\": \"^7.22.5\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.22.15\",\n        \"@babel/helper-optimise-call-expression\": \"^7.22.5\",\n        \"@babel/helper-replace-supers\": \"^7.22.9\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-regexp-features-plugin\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.22.15.tgz\",\n      \"integrity\": \"sha512-29FkPLFjn4TPEa3RE7GpW+qbE8tlsu3jntNYNfcGsc49LphF1PQIiD+vMZ1z1xVOKt+93khA9tc2JBs3kBjA7w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"regexpu-core\": \"^5.3.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-define-polyfill-provider\": {\n      \"version\": \"0.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.4.3.tgz\",\n      \"integrity\": \"sha512-WBrLmuPP47n7PNwsZ57pqam6G/RGo1vw/87b0Blc53tZNGZ4x7YvZ6HgQe2vo1W/FR20OgjeZuGXzudPiXHFug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.22.6\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"debug\": \"^4.1.1\",\n        \"lodash.debounce\": \"^4.0.8\",\n        \"resolve\": \"^1.14.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-environment-visitor\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz\",\n      \"integrity\": \"sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-function-name\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz\",\n      \"integrity\": \"sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-hoist-variables\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz\",\n      \"integrity\": \"sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.23.0.tgz\",\n      \"integrity\": \"sha512-6gfrPwh7OuT6gZyJZvd6WbTfrqAo7vm4xCzAXOusKqq/vWdKXphTpj5klHKNmRUU6/QRGlBsyU9mAIPaWHlqJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.22.15.tgz\",\n      \"integrity\": \"sha512-0pYVBnDKZO2fnSPCrgM/6WMc7eS20Fbok+0r88fp+YtWVLZrp4CkafFGIp+W0VKw4a22sgebPT99y+FDNMdP4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.23.0.tgz\",\n      \"integrity\": \"sha512-WhDWw1tdrlT0gMgUJSlX0IQvoO1eN279zrAUbVB+KpV2c3Tylz8+GnKOLllCS6Z/iZQEyVYxhZVUdPTqs2YYPw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-module-imports\": \"^7.22.15\",\n        \"@babel/helper-simple-access\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.22.5.tgz\",\n      \"integrity\": \"sha512-HBwaojN0xFRx4yIvpwGqxiV2tUfl7401jlok564NgB9EHS1y6QT17FmKWm4ztqjeVdXLuC4fSvHc5ePpQjoTbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.22.5.tgz\",\n      \"integrity\": \"sha512-uLls06UVKgFG9QD4OeFYLEGteMIAa5kpTPcFL28yuCIIzsf6ZyKZMllKVOCZFhiZ5ptnwX4mtKdWCBE/uT4amg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-remap-async-to-generator\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.22.20.tgz\",\n      \"integrity\": \"sha512-pBGyV4uBqOns+0UvhsTO8qgl8hO89PmiDYv+/COyp1aeMcmfrfruz+/nCMFiYyFF/Knn0yfrC85ZzNFjembFTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-wrap-function\": \"^7.22.20\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-replace-supers\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.22.20.tgz\",\n      \"integrity\": \"sha512-qsW0In3dbwQUbK8kejJ4R7IHVGwHJlV6lpG6UA7a9hSa2YEiAib+N1T2kr6PEeUT+Fl7najmSOS6SmAwCHK6Tw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.22.15\",\n        \"@babel/helper-optimise-call-expression\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-simple-access\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.22.5.tgz\",\n      \"integrity\": \"sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.22.5.tgz\",\n      \"integrity\": \"sha512-tK14r66JZKiC43p8Ki33yLBVJKlQDFoA8GYN67lWCDCqoL6EMMSuM9b+Iff2jHaM/RRFYl7K+iiru7hbRqNx8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-split-export-declaration\": {\n      \"version\": \"7.22.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz\",\n      \"integrity\": \"sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz\",\n      \"integrity\": \"sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz\",\n      \"integrity\": \"sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.22.15.tgz\",\n      \"integrity\": \"sha512-bMn7RmyFjY/mdECUbgn9eoSY4vqvacUnS9i9vGAGttgFWesO6B4CYWA7XlpbWgBt71iv/hfbPlynohStqnu5hA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-wrap-function\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.22.20.tgz\",\n      \"integrity\": \"sha512-pms/UwkOpnQe/PDAEdV/d7dVCoBbB+R4FvYoHGZz+4VPcg7RtYy2KP7S2lbuWM6FCSgob5wshfGESbC/hzNXZw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-function-name\": \"^7.22.5\",\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.19\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.23.2.tgz\",\n      \"integrity\": \"sha512-lzchcp8SjTSVe/fPmLwtWVBFC7+Tbn8LGHDVfDp9JGxpAY5opSaEFgt8UQvrnECWOTdji2mOWMz1rOhkHscmGQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.22.15\",\n        \"@babel/traverse\": \"^7.23.2\",\n        \"@babel/types\": \"^7.23.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.22.20\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.20.tgz\",\n      \"integrity\": \"sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.23.0.tgz\",\n      \"integrity\": \"sha512-vvPKKdMemU85V9WE/l5wZEmImpCtLqbnTvqDS2U1fJ96KrxoW7KrXhNsNCblQlg8Ck4b85yxdTyelsMUgFUXiw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.22.15.tgz\",\n      \"integrity\": \"sha512-FB9iYlz7rURmRJyXRKEnalYPPdn87H5no108cyuQQyMwlpJ2SJtpIUBI27kdTin956pz+LPypkPVPUTlxOmrsg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.22.15.tgz\",\n      \"integrity\": \"sha512-Hyph9LseGvAeeXzikV88bczhsrLrIZqDPxO+sSmAunMPaGrBGhfMWzCPYTtiW9t+HzSE2wtV8e5cc5P6r1xMDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\",\n        \"@babel/plugin-transform-optional-chaining\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.13.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-private-property-in-object\": {\n      \"version\": \"7.21.0-placeholder-for-preset-env.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz\",\n      \"integrity\": \"sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-dynamic-import\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz\",\n      \"integrity\": \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-assertions\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.22.5.tgz\",\n      \"integrity\": \"sha512-rdV97N7KqsRzeNGoWUOK6yUsWarLjE5Su/Snk9IYPU9CwkWHs4t+rTGOvffTR8XGkJMTAdLfO0xVnXm8wugIJg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-attributes\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.22.5.tgz\",\n      \"integrity\": \"sha512-KwvoWDeNKPETmozyFE0P2rOLqh39EoQHNjqizrI5B8Vt0ZNS7M56s7dAiAqbYfiAYOuIzIh96z3iR2ktgu3tEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-meta\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz\",\n      \"integrity\": \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-unicode-sets-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-arrow-functions\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.22.5.tgz\",\n      \"integrity\": \"sha512-26lTNXoVRdAnsaDXPpvCNUq+OVWEVC6bx7Vvz9rC53F2bagUWW4u4ii2+h8Fejfh7RYqPxn+libeFBBck9muEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-async-generator-functions\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.23.2.tgz\",\n      \"integrity\": \"sha512-BBYVGxbDVHfoeXbOwcagAkOQAm9NxoTdMGfTqghu1GrvadSaw6iW3Je6IcL5PNOw8VwjxqBECXy50/iCQSY/lQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.22.20\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-async-to-generator\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.22.5.tgz\",\n      \"integrity\": \"sha512-b1A8D8ZzE/VhNDoV1MSJTnpKkCG5bJo+19R4o4oy03zM7ws8yEMK755j61Dc3EyvdysbqH5BOOTquJ7ZX9C6vQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoped-functions\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.22.5.tgz\",\n      \"integrity\": \"sha512-tdXZ2UdknEKQWKJP1KMNmuF5Lx3MymtMN/pvA+p/VEkhK8jVcQ1fzSy8KM9qRYhAf2/lV33hoMPKI/xaI9sADA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoping\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.23.0.tgz\",\n      \"integrity\": \"sha512-cOsrbmIOXmf+5YbL99/S49Y3j46k/T16b9ml8bm9lP6N9US5iQ2yBK7gpui1pg0V/WMcXdkfKbTb7HXq9u+v4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-class-properties\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.22.5.tgz\",\n      \"integrity\": \"sha512-nDkQ0NfkOhPTq8YCLiWNxp1+f9fCobEjCb0n8WdbNUBc4IB5V7P1QnX9IjpSoquKrXF5SKojHleVNs2vGeHCHQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-class-static-block\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.22.11.tgz\",\n      \"integrity\": \"sha512-GMM8gGmqI7guS/llMFk1bJDkKfn3v3C4KHK9Yg1ey5qcHcOlKb0QvcMrgzvxo+T03/4szNh5lghY+fEC98Kq9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.22.11\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.12.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-classes\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.22.15.tgz\",\n      \"integrity\": \"sha512-VbbC3PGjBdE0wAWDdHM9G8Gm977pnYI0XpqMd6LrKISj8/DJXEsWqgRuTYaNE9Bv0JGhTZUzHDlMk18IpOuoqw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-compilation-targets\": \"^7.22.15\",\n        \"@babel/helper-environment-visitor\": \"^7.22.5\",\n        \"@babel/helper-function-name\": \"^7.22.5\",\n        \"@babel/helper-optimise-call-expression\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-replace-supers\": \"^7.22.9\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-computed-properties\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.22.5.tgz\",\n      \"integrity\": \"sha512-4GHWBgRf0krxPX+AaPtgBAlTgTeZmqDynokHOX7aqqAB4tHs3U2Y02zH6ETFdLZGcg9UQSD1WCmkVrE9ErHeOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/template\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-destructuring\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.23.0.tgz\",\n      \"integrity\": \"sha512-vaMdgNXFkYrB+8lbgniSYWHsgqK5gjaMNcc84bMIOMRLH0L9AqYq3hwMdvnyqj1OPqea8UtjPEuS/DCenah1wg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-dotall-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-5/Yk9QxCQCl+sOIB1WelKnVRxTJDSAIxtJLL2/pqL14ZVlbH0fUQUZa/T5/UnQtBNgghR7mfB8ERBKyKPCi7Vw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-duplicate-keys\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.22.5.tgz\",\n      \"integrity\": \"sha512-dEnYD+9BBgld5VBXHnF/DbYGp3fqGMsyxKbtD1mDyIA7AkTSpKXFhCVuj/oQVOoALfBs77DudA0BE4d5mcpmqw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-dynamic-import\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.22.11.tgz\",\n      \"integrity\": \"sha512-g/21plo58sfteWjaO0ZNVb+uEOkJNjAaHhbejrnBmu011l/eNDScmkbjCC3l4FKb10ViaGU4aOkFznSu2zRHgA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-exponentiation-operator\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.22.5.tgz\",\n      \"integrity\": \"sha512-vIpJFNM/FjZ4rh1myqIya9jXwrwwgFRHPjT3DkUA9ZLHuzox8jiXkOLvwm1H+PQIP3CqfC++WPKeuDi0Sjdj1g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-export-namespace-from\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.22.11.tgz\",\n      \"integrity\": \"sha512-xa7aad7q7OiT8oNZ1mU7NrISjlSkVdMbNxn9IuLZyL9AJEhs1Apba3I+u5riX1dIkdptP5EKDG5XDPByWxtehw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-for-of\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.22.15.tgz\",\n      \"integrity\": \"sha512-me6VGeHsx30+xh9fbDLLPi0J1HzmeIIyenoOQHuw2D4m2SAU3NrspX5XxJLBpqn5yrLzrlw2Iy3RA//Bx27iOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-function-name\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.22.5.tgz\",\n      \"integrity\": \"sha512-UIzQNMS0p0HHiQm3oelztj+ECwFnj+ZRV4KnguvlsD2of1whUeM6o7wGNj6oLwcDoAXQ8gEqfgC24D+VdIcevg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.22.5\",\n        \"@babel/helper-function-name\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-json-strings\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.22.11.tgz\",\n      \"integrity\": \"sha512-CxT5tCqpA9/jXFlme9xIBCc5RPtdDq3JpkkhgHQqtDdiTnTI0jtZ0QzXhr5DILeYifDPp2wvY2ad+7+hLMW5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-literals\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.22.5.tgz\",\n      \"integrity\": \"sha512-fTLj4D79M+mepcw3dgFBTIDYpbcB9Sm0bpm4ppXPaO+U+PKFFyV9MGRvS0gvGw62sd10kT5lRMKXAADb9pWy8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-logical-assignment-operators\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.22.11.tgz\",\n      \"integrity\": \"sha512-qQwRTP4+6xFCDV5k7gZBF3C31K34ut0tbEcTKxlX/0KXxm9GLcO14p570aWxFvVzx6QAfPgq7gaeIHXJC8LswQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-member-expression-literals\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.22.5.tgz\",\n      \"integrity\": \"sha512-RZEdkNtzzYCFl9SE9ATaUMTj2hqMb4StarOJLrZRbqqU4HSBE7UlBw9WBWQiDzrJZJdUWiMTVDI6Gv/8DPvfew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-amd\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.23.0.tgz\",\n      \"integrity\": \"sha512-xWT5gefv2HGSm4QHtgc1sYPbseOyf+FFDo2JbpE25GWl5BqTGO9IMwTYJRoIdjsF85GE+VegHxSCUt5EvoYTAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.23.0\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.23.0.tgz\",\n      \"integrity\": \"sha512-32Xzss14/UVc7k9g775yMIvkVK8xwKE0DPdP5JTapr3+Z9w4tzeOuLNY6BXDQR6BdnzIlXnCGAzsk/ICHBLVWQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.23.0\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-simple-access\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-systemjs\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.23.0.tgz\",\n      \"integrity\": \"sha512-qBej6ctXZD2f+DhlOC9yO47yEYgUh5CZNz/aBoH4j/3NOlRfJXJbY7xDQCqQVf9KbrqGzIWER1f23doHGrIHFg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-module-transforms\": \"^7.23.0\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-umd\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.22.5.tgz\",\n      \"integrity\": \"sha512-+S6kzefN/E1vkSsKx8kmQuqeQsvCKCd1fraCM7zXm4SFoggI099Tr4G8U81+5gtMdUeMQ4ipdQffbKLX0/7dBQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-named-capturing-groups-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-YgLLKmS3aUBhHaxp5hi1WJTgOUb/NCuDHzGT9z9WTt3YG+CPRhJs6nprbStx6DnWM4dh6gt7SU3sZodbZ08adQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-new-target\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.22.5.tgz\",\n      \"integrity\": \"sha512-AsF7K0Fx/cNKVyk3a+DW0JLo+Ua598/NxMRvxDnkpCIGFh43+h/v2xyhRUYf6oD8gE4QtL83C7zZVghMjHd+iw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-nullish-coalescing-operator\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.22.11.tgz\",\n      \"integrity\": \"sha512-YZWOw4HxXrotb5xsjMJUDlLgcDXSfO9eCmdl1bgW4+/lAGdkjaEvOnQ4p5WKKdUgSzO39dgPl0pTnfxm0OAXcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-numeric-separator\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.22.11.tgz\",\n      \"integrity\": \"sha512-3dzU4QGPsILdJbASKhF/V2TVP+gJya1PsueQCxIPCEcerqF21oEcrob4mzjsp2Py/1nLfF5m+xYNMDpmA8vffg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-object-rest-spread\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.22.15.tgz\",\n      \"integrity\": \"sha512-fEB+I1+gAmfAyxZcX1+ZUwLeAuuf8VIg67CTznZE0MqVFumWkh8xWtn58I4dxdVf080wn7gzWoF8vndOViJe9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.22.9\",\n        \"@babel/helper-compilation-targets\": \"^7.22.15\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-transform-parameters\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-object-super\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.22.5.tgz\",\n      \"integrity\": \"sha512-klXqyaT9trSjIUrcsYIfETAzmOEZL3cBYqOYLJxBHfMFFggmXOv+NYSX/Jbs9mzMVESw/WycLFPRx8ba/b2Ipw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-replace-supers\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-optional-catch-binding\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.22.11.tgz\",\n      \"integrity\": \"sha512-rli0WxesXUeCJnMYhzAglEjLWVDF6ahb45HuprcmQuLidBJFWjNnOzssk2kuc6e33FlLaiZhG/kUIzUMWdBKaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-optional-chaining\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.23.0.tgz\",\n      \"integrity\": \"sha512-sBBGXbLJjxTzLBF5rFWaikMnOGOk/BmK6vVByIdEggZ7Vn6CvWXZyRkkLFK6WE0IF8jSliyOkUN6SScFgzCM0g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-parameters\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.22.15.tgz\",\n      \"integrity\": \"sha512-hjk7qKIqhyzhhUvRT683TYQOFa/4cQKwQy7ALvTpODswN40MljzNDa0YldevS6tGbxwaEKVn502JmY0dP7qEtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-private-methods\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.22.5.tgz\",\n      \"integrity\": \"sha512-PPjh4gyrQnGe97JTalgRGMuU4icsZFnWkzicB/fUtzlKUqvsWBKEpPPfr5a2JiyirZkHxnAqkQMO5Z5B2kK3fA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-private-property-in-object\": {\n      \"version\": \"7.22.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.22.11.tgz\",\n      \"integrity\": \"sha512-sSCbqZDBKHetvjSwpyWzhuHkmW5RummxJBVbYLkGkaiTOWGxml7SXt0iWa03bzxFIx7wOj3g/ILRd0RcJKBeSQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.22.5\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.22.11\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-property-literals\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.22.5.tgz\",\n      \"integrity\": \"sha512-TiOArgddK3mK/x1Qwf5hay2pxI6wCZnvQqrFSqbtg1GLl2JcNMitVH/YnqjP+M31pLUeTfzY1HAXFDnUBV30rQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-regenerator\": {\n      \"version\": \"7.22.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.22.10.tgz\",\n      \"integrity\": \"sha512-F28b1mDt8KcT5bUyJc/U9nwzw6cV+UmTeRlXYIl2TNqMMJif0Jeey9/RQ3C4NOd2zp0/TRsDns9ttj2L523rsw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"regenerator-transform\": \"^0.15.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-reserved-words\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.22.5.tgz\",\n      \"integrity\": \"sha512-DTtGKFRQUDm8svigJzZHzb/2xatPc6TzNvAIJ5GqOKDsGFYgAskjRulbR/vGsPKq3OPqtexnz327qYpP57RFyA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-shorthand-properties\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.22.5.tgz\",\n      \"integrity\": \"sha512-vM4fq9IXHscXVKzDv5itkO1X52SmdFBFcMIBZ2FRn2nqVYqw6dBexUgMvAjHW+KXpPPViD/Yo3GrDEBaRC0QYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-spread\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.22.5.tgz\",\n      \"integrity\": \"sha512-5ZzDQIGyvN4w8+dMmpohL6MBo+l2G7tfC/O2Dg7/hjpgeWvUx8FzfeOKxGog9IimPa4YekaQ9PlDqTLOljkcxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-sticky-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-zf7LuNpHG0iEeiyCNwX4j3gDg1jgt1k3ZdXBKbZSoA3BbGQGvMiSvfbZRR3Dr3aeJe3ooWFZxOOG3IRStYp2Bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-template-literals\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.22.5.tgz\",\n      \"integrity\": \"sha512-5ciOehRNf+EyUeewo8NkbQiUs4d6ZxiHo6BcBcnFlgiJfu16q0bQUw9Jvo0b0gBKFG1SMhDSjeKXSYuJLeFSMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-typeof-symbol\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.22.5.tgz\",\n      \"integrity\": \"sha512-bYkI5lMzL4kPii4HHEEChkD0rkc+nvnlR6+o/qdqR6zrm0Sv/nodmyLhlq2DO0YKLUNd2VePmPRjJXSBh9OIdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-escapes\": {\n      \"version\": \"7.22.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.22.10.tgz\",\n      \"integrity\": \"sha512-lRfaRKGZCBqDlRU3UIFovdp9c9mEvlylmpod0/OatICsSfuQ9YFthRo1tpTkGsklEefZdqlEFdY4A2dwTb6ohg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-property-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-HCCIb+CbJIAE6sXn5CjFQXMwkCClcOfPCzTlilJ8cUatfzwHlWQkbtV0zD338u9dZskwvuOYTuuaMaA8J5EI5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-028laaOKptN5vHJf9/Arr/HiJekMd41hOEZYvNsrsXqJ7YPYuX2bQxh31fkZzGmq3YqHRJzYFFAVYvKfMPKqyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-sets-regex\": {\n      \"version\": \"7.22.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.22.5.tgz\",\n      \"integrity\": \"sha512-lhMfi4FC15j13eKrh3DnYHjpGj6UKQHtNKTbtc1igvAhRy4+kLhV07OpLcsN0VgDEw/MjAvJO4BdMJsHwMhzCg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.22.5\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/preset-env\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.23.2.tgz\",\n      \"integrity\": \"sha512-BW3gsuDD+rvHL2VO2SjAUNTBe5YrjsTiDyqamPDWY723na3/yPQ65X5oQkFVJZ0o50/2d+svm1rkPoJeR1KxVQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.23.2\",\n        \"@babel/helper-compilation-targets\": \"^7.22.15\",\n        \"@babel/helper-plugin-utils\": \"^7.22.5\",\n        \"@babel/helper-validator-option\": \"^7.22.15\",\n        \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": \"^7.22.15\",\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.22.15\",\n        \"@babel/plugin-proposal-private-property-in-object\": \"7.21.0-placeholder-for-preset-env.2\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-assertions\": \"^7.22.5\",\n        \"@babel/plugin-syntax-import-attributes\": \"^7.22.5\",\n        \"@babel/plugin-syntax-import-meta\": \"^7.10.4\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n        \"@babel/plugin-syntax-unicode-sets-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-arrow-functions\": \"^7.22.5\",\n        \"@babel/plugin-transform-async-generator-functions\": \"^7.23.2\",\n        \"@babel/plugin-transform-async-to-generator\": \"^7.22.5\",\n        \"@babel/plugin-transform-block-scoped-functions\": \"^7.22.5\",\n        \"@babel/plugin-transform-block-scoping\": \"^7.23.0\",\n        \"@babel/plugin-transform-class-properties\": \"^7.22.5\",\n        \"@babel/plugin-transform-class-static-block\": \"^7.22.11\",\n        \"@babel/plugin-transform-classes\": \"^7.22.15\",\n        \"@babel/plugin-transform-computed-properties\": \"^7.22.5\",\n        \"@babel/plugin-transform-destructuring\": \"^7.23.0\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.22.5\",\n        \"@babel/plugin-transform-duplicate-keys\": \"^7.22.5\",\n        \"@babel/plugin-transform-dynamic-import\": \"^7.22.11\",\n        \"@babel/plugin-transform-exponentiation-operator\": \"^7.22.5\",\n        \"@babel/plugin-transform-export-namespace-from\": \"^7.22.11\",\n        \"@babel/plugin-transform-for-of\": \"^7.22.15\",\n        \"@babel/plugin-transform-function-name\": \"^7.22.5\",\n        \"@babel/plugin-transform-json-strings\": \"^7.22.11\",\n        \"@babel/plugin-transform-literals\": \"^7.22.5\",\n        \"@babel/plugin-transform-logical-assignment-operators\": \"^7.22.11\",\n        \"@babel/plugin-transform-member-expression-literals\": \"^7.22.5\",\n        \"@babel/plugin-transform-modules-amd\": \"^7.23.0\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.23.0\",\n        \"@babel/plugin-transform-modules-systemjs\": \"^7.23.0\",\n        \"@babel/plugin-transform-modules-umd\": \"^7.22.5\",\n        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.22.5\",\n        \"@babel/plugin-transform-new-target\": \"^7.22.5\",\n        \"@babel/plugin-transform-nullish-coalescing-operator\": \"^7.22.11\",\n        \"@babel/plugin-transform-numeric-separator\": \"^7.22.11\",\n        \"@babel/plugin-transform-object-rest-spread\": \"^7.22.15\",\n        \"@babel/plugin-transform-object-super\": \"^7.22.5\",\n        \"@babel/plugin-transform-optional-catch-binding\": \"^7.22.11\",\n        \"@babel/plugin-transform-optional-chaining\": \"^7.23.0\",\n        \"@babel/plugin-transform-parameters\": \"^7.22.15\",\n        \"@babel/plugin-transform-private-methods\": \"^7.22.5\",\n        \"@babel/plugin-transform-private-property-in-object\": \"^7.22.11\",\n        \"@babel/plugin-transform-property-literals\": \"^7.22.5\",\n        \"@babel/plugin-transform-regenerator\": \"^7.22.10\",\n        \"@babel/plugin-transform-reserved-words\": \"^7.22.5\",\n        \"@babel/plugin-transform-shorthand-properties\": \"^7.22.5\",\n        \"@babel/plugin-transform-spread\": \"^7.22.5\",\n        \"@babel/plugin-transform-sticky-regex\": \"^7.22.5\",\n        \"@babel/plugin-transform-template-literals\": \"^7.22.5\",\n        \"@babel/plugin-transform-typeof-symbol\": \"^7.22.5\",\n        \"@babel/plugin-transform-unicode-escapes\": \"^7.22.10\",\n        \"@babel/plugin-transform-unicode-property-regex\": \"^7.22.5\",\n        \"@babel/plugin-transform-unicode-regex\": \"^7.22.5\",\n        \"@babel/plugin-transform-unicode-sets-regex\": \"^7.22.5\",\n        \"@babel/preset-modules\": \"0.1.6-no-external-plugins\",\n        \"@babel/types\": \"^7.23.0\",\n        \"babel-plugin-polyfill-corejs2\": \"^0.4.6\",\n        \"babel-plugin-polyfill-corejs3\": \"^0.8.5\",\n        \"babel-plugin-polyfill-regenerator\": \"^0.5.3\",\n        \"core-js-compat\": \"^3.31.0\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-modules\": {\n      \"version\": \"0.1.6-no-external-plugins\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.6-no-external-plugins.tgz\",\n      \"integrity\": \"sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@babel/types\": \"^7.4.4\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0 || ^8.0.0-0 <8.0.0\"\n      }\n    },\n    \"node_modules/@babel/regjsgen\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz\",\n      \"integrity\": \"sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==\",\n      \"dev\": true\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.2.tgz\",\n      \"integrity\": \"sha512-mM8eg4yl5D6i3lu2QKPuPH4FArvJ8KhTofbE7jwMUv9KX5mBvwPAqnV3MlyBNqdp9RyRKP6Yck8TrfYrPvX3bg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.22.15\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.22.15.tgz\",\n      \"integrity\": \"sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/parser\": \"^7.22.15\",\n        \"@babel/types\": \"^7.22.15\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.2.tgz\",\n      \"integrity\": \"sha512-azpe59SQ48qG6nu2CzcMLbxUudtN+dOM9kDbUqGq3HXUJRlo7i8fvPoxQUzYgLZ4cMVmuZgm8vvBpNeRhd6XSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.22.13\",\n        \"@babel/generator\": \"^7.23.0\",\n        \"@babel/helper-environment-visitor\": \"^7.22.20\",\n        \"@babel/helper-function-name\": \"^7.23.0\",\n        \"@babel/helper-hoist-variables\": \"^7.22.5\",\n        \"@babel/helper-split-export-declaration\": \"^7.22.6\",\n        \"@babel/parser\": \"^7.23.0\",\n        \"@babel/types\": \"^7.23.0\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.23.0.tgz\",\n      \"integrity\": \"sha512-0oIyUfKoI3mSqMvsxBdclDwxXKXAUA8v/apZbc+iSyARYou1o8ZGDxbUYyLFoW2arqS2jDGqJuZvv1d/io1axg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.22.5\",\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"to-fast-properties\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.10.0.tgz\",\n      \"integrity\": \"sha512-Cu96Sd2By9mCNTx2iyKOmq10v22jUVQv0lQnlGNy16oE9589yE+QADPbrMGCkA51cKZSg3Pu/aTJVTGfL/qjUA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.2.tgz\",\n      \"integrity\": \"sha512-+wvgpDsrB1YqAMdEUCcnTlpfVBH7Vqn6A/NT3D8WVXFIaKMlErPIZT3oCIAVCOtarRpMtelZLqJeU3t7WY6X6g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/globals\": {\n      \"version\": \"13.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.23.0.tgz\",\n      \"integrity\": \"sha512-XAmF0RjlrjY23MA51q3HltdlGxUpXPvg0GioKiD9X6HD28iMjo2dKC8Vqwm7lne4GNr78+RHTfliktR6ZH09wA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.52.0.tgz\",\n      \"integrity\": \"sha512-mjZVbpaeMZludF2fsWLD0Z9gCref1Tk4i9+wddjRvpUNqqcndPkBD09N/Mapey0b3jaXbLm2kICwFv2E64QinA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@gulpjs/messages\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@gulpjs/messages/-/messages-1.1.0.tgz\",\n      \"integrity\": \"sha512-Ys9sazDatyTgZVb4xPlDufLweJ/Os2uHWOv+Caxvy2O85JcnT4M3vc73bi8pdLWlv3fdWQz3pdI9tVwo8rQQSg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/@gulpjs/to-absolute-glob\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@gulpjs/to-absolute-glob/-/to-absolute-glob-4.0.0.tgz\",\n      \"integrity\": \"sha512-kjotm7XJrJ6v+7knhPaRgaT6q8F8K2jiafwYdNHLzmV0uGLuZY43FK6smNSHUPrhq5kX2slCUy+RGG/xGqmIKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-negated-glob\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.13\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.13.tgz\",\n      \"integrity\": \"sha512-JSBDMiDKSzQVngfRjOdFXgFfklaXI4K9nLF49Auh21lmBWRLIK3+xTErTWD4KU54pb6coM6ESE7Awz/FNU3zgQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^2.0.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.1.tgz\",\n      \"integrity\": \"sha512-dvuCeX5fC9dXgJn9t+X5atfmgQAzUOWqS1254Gh0m6i8wKd10ebXkfNKiRK+1GWi/yTvvLDHpoxLr0xxxeslWw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/@isaacs/cliui/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.1.tgz\",\n      \"integrity\": \"sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/source-map\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.5.tgz\",\n      \"integrity\": \"sha512-UTYAUj/wviwdsMfzoSJspJxbkH5o1snzwX0//0ENX1u/55kkZZkcTZP6u9bwKGkv+dkk9at4m1Cpt0uY80kcpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.15\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n      \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.20\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.20.tgz\",\n      \"integrity\": \"sha512-R8LcPeWZol2zR8mmH3JeKQ6QRCFb7XgUhV9ZlGhHLGyg4wpPiPZNQOOWhFZhxKw8u//yTbNGI42Bx/3paXEQ+Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@nicolo-ribaudo/eslint-scope-5-internals\": {\n      \"version\": \"5.1.1-v1\",\n      \"resolved\": \"https://registry.npmjs.org/@nicolo-ribaudo/eslint-scope-5-internals/-/eslint-scope-5-internals-5.1.1-v1.tgz\",\n      \"integrity\": \"sha512-54/JRvkLIzzDWshCWfuhadfrfZVPiElY8Fcgmg1HroEly/EDSszzhBAsarCux+D/kOslTRquNzuyGSmUSTTHGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-scope\": \"5.1.1\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@parcel/watcher\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher/-/watcher-2.4.1.tgz\",\n      \"integrity\": \"sha512-HNjmfLQEVRZmHRET336f20H/8kOozUGwk7yajvsonjNxbj2wBTK1WsQuHkD5yYh9RxFGL2EyDHryOihOwUoKDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"detect-libc\": \"^1.0.3\",\n        \"is-glob\": \"^4.0.3\",\n        \"micromatch\": \"^4.0.5\",\n        \"node-addon-api\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      },\n      \"optionalDependencies\": {\n        \"@parcel/watcher-android-arm64\": \"2.4.1\",\n        \"@parcel/watcher-darwin-arm64\": \"2.4.1\",\n        \"@parcel/watcher-darwin-x64\": \"2.4.1\",\n        \"@parcel/watcher-freebsd-x64\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm64-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm64-musl\": \"2.4.1\",\n        \"@parcel/watcher-linux-x64-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-x64-musl\": \"2.4.1\",\n        \"@parcel/watcher-win32-arm64\": \"2.4.1\",\n        \"@parcel/watcher-win32-ia32\": \"2.4.1\",\n        \"@parcel/watcher-win32-x64\": \"2.4.1\"\n      }\n    },\n    \"node_modules/@parcel/watcher-android-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-android-arm64/-/watcher-android-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-LOi/WTbbh3aTn2RYddrO8pnapixAziFl6SMxHM69r3tvdSm94JtCenaKgk1GRg5FJ5wpMCpHeW+7yqPlvZv7kg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-darwin-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-arm64/-/watcher-darwin-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-ln41eihm5YXIY043vBrrHfn94SIBlqOWmoROhsMVTSXGh0QahKGy77tfEywQ7v3NywyxBBkGIfrWRHm0hsKtzA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-darwin-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-x64/-/watcher-darwin-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-yrw81BRLjjtHyDu7J61oPuSoeYWR3lDElcPGJyOvIXmor6DEo7/G2u1o7I38cwlcoBHQFULqF6nesIX3tsEXMg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-freebsd-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-freebsd-x64/-/watcher-freebsd-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-TJa3Pex/gX3CWIx/Co8k+ykNdDCLx+TuZj3f3h7eOjgpdKM+Mnix37RYsYU4LHhiYJz3DK5nFCCra81p6g050w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm-glibc/-/watcher-linux-arm-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-4rVYDlsMEYfa537BRXxJ5UF4ddNwnr2/1O4MHM5PjI9cvV2qymvhwZSFgXqbS8YoTk5i/JR0L0JDs69BUn45YA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm64-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-glibc/-/watcher-linux-arm64-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-BJ7mH985OADVLpbrzCLgrJ3TOpiZggE9FMblfO65PlOCdG++xJpKUJ0Aol74ZUIYfb8WsRlUdgrZxKkz3zXWYA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm64-musl\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-musl/-/watcher-linux-arm64-musl-2.4.1.tgz\",\n      \"integrity\": \"sha512-p4Xb7JGq3MLgAfYhslU2SjoV9G0kI0Xry0kuxeG/41UfpjHGOhv7UoUDAz/jb1u2elbhazy4rRBL8PegPJFBhA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-x64-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-glibc/-/watcher-linux-x64-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-s9O3fByZ/2pyYDPoLM6zt92yu6P4E39a03zvO0qCHOTjxmt3GHRMLuRZEWhWLASTMSrrnVNWdVI/+pUElJBBBg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-x64-musl\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-musl/-/watcher-linux-x64-musl-2.4.1.tgz\",\n      \"integrity\": \"sha512-L2nZTYR1myLNST0O632g0Dx9LyMNHrn6TOt76sYxWLdff3cB22/GZX2UPtJnaqQPdCRoszoY5rcOj4oMTtp5fQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-arm64/-/watcher-win32-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-Uq2BPp5GWhrq/lcuItCHoqxjULU1QYEcyjSO5jqqOK8RNFDBQnenMMx4gAl3v8GiWa59E9+uDM7yZ6LxwUIfRg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-ia32\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-ia32/-/watcher-win32-ia32-2.4.1.tgz\",\n      \"integrity\": \"sha512-maNRit5QQV2kgHFSYwftmPBxiuK5u4DXjbXx7q6eKjq5dsLXZ4FJiVvlcw35QXzk0KrUecJmuVFbj4uV9oYrcw==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-+DvS92F9ezicfswqrvIRM2njcYJbd5mb9CUgtrHCHmvn7pPPa+nMDRu1o1bYYz/l5IB2NVGNJWiH7h1E58IF2A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.4.0.tgz\",\n      \"integrity\": \"sha512-x8J1csfIygOwf6D6qUAZ0ASk3z63zPb7wkNeHRerCMh82qWKUrOgkuP005AJC8lDL6/evtXETGEJVcwykKT4/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.3.6\",\n        \"extract-zip\": \"^2.0.1\",\n        \"progress\": \"^2.0.3\",\n        \"proxy-agent\": \"^6.4.0\",\n        \"semver\": \"^7.6.3\",\n        \"tar-fs\": \"^3.0.6\",\n        \"unbzip2-stream\": \"^1.4.3\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"browsers\": \"lib/cjs/main-cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/semver\": {\n      \"version\": \"7.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@rollup/plugin-babel\": {\n      \"version\": \"6.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-6.0.4.tgz\",\n      \"integrity\": \"sha512-YF7Y52kFdFT/xVSuVdjkV5ZdX/3YtmX0QulG+x0taQOtJdHYzVU61aSSkAgVJ7NOv6qPkIYiJSgSWWN/DM5sGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@rollup/pluginutils\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\",\n        \"@types/babel__core\": \"^7.1.9\",\n        \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/babel__core\": {\n          \"optional\": true\n        },\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-commonjs\": {\n      \"version\": \"25.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-25.0.7.tgz\",\n      \"integrity\": \"sha512-nEvcR+LRjEjsaSsc4x3XZfCCvZIaSMenZu/OiwOKGN2UhQpAYI7ru7czFvyWbErlpoGjnSX3D5Ch5FcMA3kRWQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.1\",\n        \"commondir\": \"^1.0.1\",\n        \"estree-walker\": \"^2.0.2\",\n        \"glob\": \"^8.0.3\",\n        \"is-reference\": \"1.2.1\",\n        \"magic-string\": \"^0.30.3\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.68.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-commonjs/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@rollup/plugin-commonjs/node_modules/glob\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n      \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^5.0.1\",\n        \"once\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@rollup/plugin-commonjs/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@rollup/plugin-node-resolve\": {\n      \"version\": \"15.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.2.3.tgz\",\n      \"integrity\": \"sha512-j/lym8nf5E21LwBT4Df1VD6hRO2L2iwUeUmP7litikRsVp1H6NWx20NEp0Y7su+7XGc476GnXXc4kFeZNGmaSQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.1\",\n        \"@types/resolve\": \"1.20.2\",\n        \"deepmerge\": \"^4.2.2\",\n        \"is-builtin-module\": \"^3.2.1\",\n        \"is-module\": \"^1.0.0\",\n        \"resolve\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.78.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-terser\": {\n      \"version\": \"0.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-terser/-/plugin-terser-0.4.4.tgz\",\n      \"integrity\": \"sha512-XHeJC5Bgvs8LfukDwWZp7yeqin6ns8RTl2B9avbejt6tZqsqvVoWI7ZTQrcNsfKEDWBTnTxM8nMDkO2IFFbd0A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"serialize-javascript\": \"^6.0.1\",\n        \"smob\": \"^1.0.0\",\n        \"terser\": \"^5.17.4\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-terser/node_modules/serialize-javascript\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.1.tgz\",\n      \"integrity\": \"sha512-owoXEFjWRllis8/M1Q+Cw5k8ZH40e3zhp/ovX+Xr/vi1qj6QesbyXXViFbpNvWvPNAD62SutwEXavefrLJWj7w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/@rollup/pluginutils\": {\n      \"version\": \"5.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\n      \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-walker\": \"^2.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/rollup-android-arm-eabi\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.0.tgz\",\n      \"integrity\": \"sha512-Q6HJd7Y6xdB48x8ZNVDOqsbh2uByBhgK8PiQgPhwkIw/HC/YX5Ghq2mQY5sRMZWHb3VsFkWooUVOZHKr7DmDIA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-android-arm64\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.0.tgz\",\n      \"integrity\": \"sha512-ijLnS1qFId8xhKjT81uBHuuJp2lU4x2yxa4ctFPtG+MqEE6+C5f/+X/bStmxapgmwLwiL3ih122xv8kVARNAZA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-arm64\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.0.tgz\",\n      \"integrity\": \"sha512-bIv+X9xeSs1XCk6DVvkO+S/z8/2AMt/2lMqdQbMrmVpgFvXlmde9mLcbQpztXm1tajC3raFDqegsH18HQPMYtA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-x64\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.0.tgz\",\n      \"integrity\": \"sha512-X6/nOwoFN7RT2svEQWUsW/5C/fYMBe4fnLK9DQk4SX4mgVBiTA9h64kjUYPvGQ0F/9xwJ5U5UfTbl6BEjaQdBQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.0.tgz\",\n      \"integrity\": \"sha512-0KXvIJQMOImLCVCz9uvvdPgfyWo93aHHp8ui3FrtOP57svqrF/roSSR5pjqL2hcMp0ljeGlU4q9o/rQaAQ3AYA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.0.tgz\",\n      \"integrity\": \"sha512-it2BW6kKFVh8xk/BnHfakEeoLPv8STIISekpoF+nBgWM4d55CZKc7T4Dx1pEbTnYm/xEKMgy1MNtYuoA8RFIWw==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.0.tgz\",\n      \"integrity\": \"sha512-i0xTLXjqap2eRfulFVlSnM5dEbTVque/3Pi4g2y7cxrs7+a9De42z4XxKLYJ7+OhE3IgxvfQM7vQc43bwTgPwA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.0.tgz\",\n      \"integrity\": \"sha512-9E6MKUJhDuDh604Qco5yP/3qn3y7SLXYuiC0Rpr89aMScS2UAmK1wHP2b7KAa1nSjWJc/f/Lc0Wl1L47qjiyQw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-powerpc64le-gnu\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.0.tgz\",\n      \"integrity\": \"sha512-2XFFPJ2XMEiF5Zi2EBf4h73oR1V/lycirxZxHZNc93SqDN/IWhYYSYj8I9381ikUFXZrz2v7r2tOVk2NBwxrWw==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.0.tgz\",\n      \"integrity\": \"sha512-M3Dg4hlwuntUCdzU7KjYqbbd+BLq3JMAOhCKdBE3TcMGMZbKkDdJ5ivNdehOssMCIokNHFOsv7DO4rlEOfyKpg==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.0.tgz\",\n      \"integrity\": \"sha512-mjBaoo4ocxJppTorZVKWFpy1bfFj9FeCMJqzlMQGjpNPY9JwQi7OuS1axzNIk0nMX6jSgy6ZURDZ2w0QW6D56g==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.0.tgz\",\n      \"integrity\": \"sha512-ZXFk7M72R0YYFN5q13niV0B7G8/5dcQ9JDp8keJSfr3GoZeXEoMHP/HlvqROA3OMbMdfr19IjCeNAnPUG93b6A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-musl\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.0.tgz\",\n      \"integrity\": \"sha512-w1i+L7kAXZNdYl+vFvzSZy8Y1arS7vMgIy8wusXJzRrPyof5LAb02KGr1PD2EkRcl73kHulIID0M501lN+vobQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.0.tgz\",\n      \"integrity\": \"sha512-VXBrnPWgBpVDCVY6XF3LEW0pOU51KbaHhccHw6AS6vBWIC60eqsH19DAeeObl+g8nKAz04QFdl/Cefta0xQtUQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.0.tgz\",\n      \"integrity\": \"sha512-xrNcGDU0OxVcPTH/8n/ShH4UevZxKIO6HJFK0e15XItZP2UcaiLFd5kiX7hJnqCbSztUF8Qot+JWBC/QXRPYWQ==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.0.tgz\",\n      \"integrity\": \"sha512-fbMkAF7fufku0N2dE5TBXcNlg0pt0cJue4xBRE2Qc5Vqikxr4VCgKj/ht6SMdFcOacVA9rqF70APJ8RN/4vMJw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@tootallnate/quickjs-emscripten\": {\n      \"version\": \"0.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz\",\n      \"integrity\": \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz\",\n      \"integrity\": \"sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"22.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.7.5.tgz\",\n      \"integrity\": \"sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~6.19.2\"\n      }\n    },\n    \"node_modules/@types/resolve\": {\n      \"version\": \"1.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\n      \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/yauzl\": {\n      \"version\": \"2.10.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz\",\n      \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@ungap/structured-clone\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz\",\n      \"integrity\": \"sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.11.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.11.2.tgz\",\n      \"integrity\": \"sha512-nc0Axzp/0FILLEVsm4fNwLCwMttvhEI263QtVPQcbpfZZ3ts0hLsZGOpE6czNlid7CJ9MlyH8reXkpsf3YUY4w==\",\n      \"dev\": true,\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/agent-base\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.1.tgz\",\n      \"integrity\": \"sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz\",\n      \"integrity\": \"sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-wrap\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-escapes/node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-gray\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-gray/-/ansi-gray-0.1.1.tgz\",\n      \"integrity\": \"sha512-HrgGIZUl8h2EHuZaU9hTR/cU5nhKxpVE1V6kdGsQ8e4zirElJ5fvtfc8N7Q1oq1aatO275i8pUFUCpNWCAnVWw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-wrap\": \"0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ansi-wrap\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz\",\n      \"integrity\": \"sha512-ZyznvL8k/FZeQHr2T6LzcJ/+vBApDnMNZvfVFy3At0knswWd6rJ3/0Hhmpu8oqa6C92npmozs890sX9Dl6q+Qw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/arr-diff\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz\",\n      \"integrity\": \"sha512-YVIQ82gZPGBebQV/a8dar4AitzCQs0jjXwMPZllpXMaGjXPYVUawSxQrRsjhjupyVxEvbHgUmIhKVlND+j02kA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/arr-union\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz\",\n      \"integrity\": \"sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-each\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-each/-/array-each-1.0.1.tgz\",\n      \"integrity\": \"sha512-zHjL5SZa68hkKHBFBK6DJCTtr9sfTCPCaph/L7tMSLcTFgy+zX7E+6q5UArbtOtMBCtxdICpfTCspRse+ywyXA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/array-slice\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-slice/-/array-slice-1.1.0.tgz\",\n      \"integrity\": \"sha512-B1qMD3RBP7O8o0H2KbrXDyB0IccejMF15+87Lvlor12ONPRHP6gTjXMNkt/d3ZuOGbAe66hFmaCfECI24Ufp6w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/assign-symbols\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz\",\n      \"integrity\": \"sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ast-types\": {\n      \"version\": \"0.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz\",\n      \"integrity\": \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ast-types/node_modules/tslib\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.7.0.tgz\",\n      \"integrity\": \"sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==\",\n      \"dev\": true\n    },\n    \"node_modules/astral-regex\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz\",\n      \"integrity\": \"sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/async-done\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/async-done/-/async-done-2.0.0.tgz\",\n      \"integrity\": \"sha512-j0s3bzYq9yKIVLKGE/tWlCpa3PfFLcrDZLTSVdnnCTGagXuXBJO4SsY9Xdk/fQBirCkH4evW5xOeJXqlAQFdsw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.4.4\",\n        \"once\": \"^1.4.0\",\n        \"stream-exhaust\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/async-settle\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/async-settle/-/async-settle-2.0.0.tgz\",\n      \"integrity\": \"sha512-Obu/KE8FurfQRN6ODdHN9LuXqwC+JFIM9NRyZqJJ4ZfLJmIYN9Rg0/kb+wF70VV5+fJusTMQlJ1t5rF7J/ETdg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"async-done\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.16\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.16.tgz\",\n      \"integrity\": \"sha512-7vd3UC6xKp0HLfua5IjZlcXvGAGy7cBAXTg2lyQ/8WpNhd6SiZ8Be+xm3FyBSYJx5GKcpRCzBh7RH4/0dnY+uQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/autoprefixer\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"browserslist\": \"^4.21.10\",\n        \"caniuse-lite\": \"^1.0.30001538\",\n        \"fraction.js\": \"^4.3.6\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.0.0\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/b4a\": {\n      \"version\": \"1.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/b4a/-/b4a-1.6.7.tgz\",\n      \"integrity\": \"sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==\",\n      \"dev\": true\n    },\n    \"node_modules/babel-plugin-polyfill-corejs2\": {\n      \"version\": \"0.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.6.tgz\",\n      \"integrity\": \"sha512-jhHiWVZIlnPbEUKSSNb9YoWcQGdlTLq7z1GHL4AjFxaoOUMuuEVJ+Y4pAaQUGOGk93YsVCKPbqbfw3m0SM6H8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.22.6\",\n        \"@babel/helper-define-polyfill-provider\": \"^0.4.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-corejs3\": {\n      \"version\": \"0.8.6\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.8.6.tgz\",\n      \"integrity\": \"sha512-leDIc4l4tUgU7str5BWLS2h8q2N4Nf6lGZP6UrNDxdtfF2g69eJ5L0H7S8A5Ln/arfFAfHor5InAdZuIOwZdgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.4.3\",\n        \"core-js-compat\": \"^3.33.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-regenerator\": {\n      \"version\": \"0.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.5.3.tgz\",\n      \"integrity\": \"sha512-8sHeDOmXC8csczMrYEOf0UTNa4yE2SxV5JGeT/LP1n0OYVDUUFPxG9vdk2AlDlIit4t+Kf0xCtpgXPBwnn/9pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.4.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\"\n      }\n    },\n    \"node_modules/babel-plugin-transform-html-import-to-string\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-transform-html-import-to-string/-/babel-plugin-transform-html-import-to-string-2.0.0.tgz\",\n      \"integrity\": \"sha512-+N/mOjUIgKOcmcJsmYxb++l/ApbFxuBQDlgEC56H1CdABJzXjCZ04/yFMDF0/EfrZSGkx+heqX4P++qFrfpw6g==\",\n      \"dev\": true\n    },\n    \"node_modules/bach\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/bach/-/bach-2.0.1.tgz\",\n      \"integrity\": \"sha512-A7bvGMGiTOxGMpNupYl9HQTf0FFDNF4VCmks4PJpFyN1AX2pdKuxuwdvUz2Hu388wcgp+OvGFNsumBfFNkR7eg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"async-done\": \"^2.0.0\",\n        \"async-settle\": \"^2.0.0\",\n        \"now-and-later\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/bare-events\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/bare-events/-/bare-events-2.5.0.tgz\",\n      \"integrity\": \"sha512-/E8dDe9dsbLyh2qrZ64PEPadOQ0F4gbl1sUJOrmph7xOiIxfY8vwab/4bFLh4Y88/Hk/ujKcrQKc+ps0mv873A==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/bare-fs\": {\n      \"version\": \"2.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/bare-fs/-/bare-fs-2.3.5.tgz\",\n      \"integrity\": \"sha512-SlE9eTxifPDJrT6YgemQ1WGFleevzwY+XAP1Xqgl56HtcrisC2CHCZ2tq6dBpcH2TnNxwUEUGhweo+lrQtYuiw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-events\": \"^2.0.0\",\n        \"bare-path\": \"^2.0.0\",\n        \"bare-stream\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/bare-os\": {\n      \"version\": \"2.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/bare-os/-/bare-os-2.4.4.tgz\",\n      \"integrity\": \"sha512-z3UiI2yi1mK0sXeRdc4O1Kk8aOa/e+FNWZcTiPB/dfTWyLypuE99LibgRaQki914Jq//yAWylcAt+mknKdixRQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/bare-path\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/bare-path/-/bare-path-2.1.3.tgz\",\n      \"integrity\": \"sha512-lh/eITfU8hrj9Ru5quUp0Io1kJWIk1bTjzo7JH1P5dWmQ2EL4hFUlfI8FonAhSlgIfhn63p84CDY/x+PisgcXA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-os\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/bare-stream\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/bare-stream/-/bare-stream-2.3.0.tgz\",\n      \"integrity\": \"sha512-pVRWciewGUeCyKEuRxwv06M079r+fRjAQjBEK2P6OYGrO43O+Z0LrPZZEjlc4mB6C2RpZ9AxJ1s7NLEtOHO6eA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"b4a\": \"^1.6.6\",\n        \"streamx\": \"^2.20.0\"\n      }\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/basic-ftp\": {\n      \"version\": \"5.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz\",\n      \"integrity\": \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/batch\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/batch/-/batch-0.6.1.tgz\",\n      \"integrity\": \"sha512-x+VAiMRL6UPkx+kudNvxTl6hB2XNNCG2r+7wixVfIYwu/2HKRXimwQyaumLjMveWvT2Hkd/cAJw+QBMfJ/EKVw==\",\n      \"dev\": true\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bl\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/bl/-/bl-5.1.0.tgz\",\n      \"integrity\": \"sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer\": \"^6.0.3\",\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"^3.4.0\"\n      }\n    },\n    \"node_modules/bl/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/bl/node_modules/readable-stream\": {\n      \"version\": \"3.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz\",\n      \"integrity\": \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/body\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/body/-/body-5.1.0.tgz\",\n      \"integrity\": \"sha512-chUsBxGRtuElD6fmw1gHLpvnKdVLK302peeFa9ZqAEk8TyzZ3fygLyUEDDPTJvL9+Bor0dIwn6ePOsRM2y0zQQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"continuable-cache\": \"^0.3.1\",\n        \"error\": \"^7.0.0\",\n        \"raw-body\": \"~1.1.0\",\n        \"safe-json-parse\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.22.1\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.22.1.tgz\",\n      \"integrity\": \"sha512-FEVc202+2iuClEhZhrWy6ZiAcRLvNMyYcxZ8raemul1DYVOVdFsbqckWLdsixQZCpJlwe77Z3UTalE7jsjnKfQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001541\",\n        \"electron-to-chromium\": \"^1.4.535\",\n        \"node-releases\": \"^2.0.13\",\n        \"update-browserslist-db\": \"^1.0.13\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n      \"dev\": true\n    },\n    \"node_modules/builtin-modules\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz\",\n      \"integrity\": \"sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-1.0.0.tgz\",\n      \"integrity\": \"sha512-/x68VkHLeTl3/Ll8IvxdwzhrT+IyKc52e/oyHhA2RwqPqswSnjVbSddfPRwAsJtbilMAPSRWwAlpxdYsSWOTKQ==\",\n      \"dev\": true\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001668\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001668.tgz\",\n      \"integrity\": \"sha512-nWLrdxqCdblixUO+27JtGJJE/txpJlyUy5YN1u53wLZkP0emYCo5zgS6QYft7VUYR42LGgi/S5hdLZTrnyIddw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/chardet\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz\",\n      \"integrity\": \"sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==\",\n      \"dev\": true\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/chromium-bidi\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.8.0.tgz\",\n      \"integrity\": \"sha512-uJydbGdTw0DEUjhoogGveneJVWX/9YuqkWePzMmkBYwtdAqo5d3J/ovNKFr+/2hWXYmYCr6it8mSSTIj6SS6Ug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mitt\": \"3.0.1\",\n        \"urlpattern-polyfill\": \"10.0.0\",\n        \"zod\": \"3.23.8\"\n      },\n      \"peerDependencies\": {\n        \"devtools-protocol\": \"*\"\n      }\n    },\n    \"node_modules/clean-css\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/clean-css/-/clean-css-4.2.3.tgz\",\n      \"integrity\": \"sha512-VcMWDN54ZN/DS+g58HYL5/n4Zrqe8vHJpGA8KdgUXFU4fuP/aHNw8eld9SyEIyabIMJX/0RaY/fplOo5hYLSFA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"source-map\": \"~0.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.0\"\n      }\n    },\n    \"node_modules/cli-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"restore-cursor\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cli-width\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-3.0.0.tgz\",\n      \"integrity\": \"sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/cliui/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/cliui/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/cliui/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/clone\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/clone/-/clone-2.1.2.tgz\",\n      \"integrity\": \"sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/clone-buffer\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz\",\n      \"integrity\": \"sha512-KLLTJWrvwIP+OPfMn0x2PheDEP20RPUcGXj/ERegTgdmPEZylALQldygiqrPPu8P45uNuPs7ckmReLY6v/iA5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/clone-stats\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz\",\n      \"integrity\": \"sha512-au6ydSpg6nsrigcZ4m8Bc9hxjeW+GJ8xh5G3BJCMt4WXe1H10UNaVOamqQTmrx1kjVuxAHIQSNU6hY4Nsn9/ag==\",\n      \"dev\": true\n    },\n    \"node_modules/cloneable-readable\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.3.tgz\",\n      \"integrity\": \"sha512-2EF8zTQOxYq70Y4XKtorQupqF0m49MBz2/yf5Bj+MHjvpG3Hy7sImifnqD6UA+TKYxeSV+u6qqQPawN5UvnpKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.1\",\n        \"process-nextick-args\": \"^2.0.0\",\n        \"readable-stream\": \"^2.3.5\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/color-support\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz\",\n      \"integrity\": \"sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"color-support\": \"bin.js\"\n      }\n    },\n    \"node_modules/colors\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/colors/-/colors-1.4.0.tgz\",\n      \"integrity\": \"sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-7.2.0.tgz\",\n      \"integrity\": \"sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/commenting\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/commenting/-/commenting-1.1.0.tgz\",\n      \"integrity\": \"sha512-YeNK4tavZwtH7jEgK1ZINXzLKm6DZdEMfsaaieOsCAN0S8vsY7UeuO3Q7d/M018EFgE+IeUAuBOKkFccBZsUZA==\",\n      \"dev\": true\n    },\n    \"node_modules/commondir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n      \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\n      \"dev\": true\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/connect\": {\n      \"version\": \"3.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/connect/-/connect-3.7.0.tgz\",\n      \"integrity\": \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"finalhandler\": \"1.1.2\",\n        \"parseurl\": \"~1.3.3\",\n        \"utils-merge\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/connect-livereload\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/connect-livereload/-/connect-livereload-0.6.1.tgz\",\n      \"integrity\": \"sha512-3R0kMOdL7CjJpU66fzAkCe6HNtd3AavCS4m+uW4KtJjrdGPT0SQEZieAYd+cm+lJoBznNQ4lqipYWkhBMgk00g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/connect/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/connect/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"dev\": true\n    },\n    \"node_modules/continuable-cache\": {\n      \"version\": \"0.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/continuable-cache/-/continuable-cache-0.3.1.tgz\",\n      \"integrity\": \"sha512-TF30kpKhTH8AGCG3dut0rdd/19B7Z+qCnrMoBLpyQu/2drZdNrrpcjPEoJeSVsQM+8KmWG5O56oPDjSSUsuTyA==\",\n      \"dev\": true\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/copy-props\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/copy-props/-/copy-props-4.0.0.tgz\",\n      \"integrity\": \"sha512-bVWtw1wQLzzKiYROtvNlbJgxgBYt2bMJpkCbKmXM3xyijvcjjWXEk5nyrrT3bgJ7ODb19ZohE2T0Y3FgNPyoTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"each-props\": \"^3.0.0\",\n        \"is-plain-object\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/core-js\": {\n      \"version\": \"3.33.1\",\n      \"resolved\": \"https://registry.npmjs.org/core-js/-/core-js-3.33.1.tgz\",\n      \"integrity\": \"sha512-qVSq3s+d4+GsqN0teRCJtM6tdEEXyWxjzbhVrCHmBS5ZTM0FS2MOS0D13dUXAWDUN6a+lHI/N1hF9Ytz6iLl9Q==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/core-js-compat\": {\n      \"version\": \"3.33.1\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.33.1.tgz\",\n      \"integrity\": \"sha512-6pYKNOgD/j/bkC5xS5IIg6bncid3rfrI42oBH1SQJbsmYPKF7rhzcFzYCcxYMmNQQ0rCEB8WqpW7QHndOggaeQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"browserslist\": \"^4.22.1\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/core-util-is\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\",\n      \"dev\": true\n    },\n    \"node_modules/cosmiconfig\": {\n      \"version\": \"9.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-9.0.0.tgz\",\n      \"integrity\": \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"env-paths\": \"^2.2.1\",\n        \"import-fresh\": \"^3.3.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"parse-json\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/d-fischer\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=4.9.5\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/data-uri-to-buffer\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz\",\n      \"integrity\": \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/degenerator\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz\",\n      \"integrity\": \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ast-types\": \"^0.13.4\",\n        \"escodegen\": \"^2.1.0\",\n        \"esprima\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\n      \"integrity\": \"sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/detect-file\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz\",\n      \"integrity\": \"sha512-DtCOLG98P007x7wiiOmfI0fi3eIKyWiLTGJ2MDnVi/E04lWGbf+JzrRHMm0rgIIZJGtHpKpbVgLWHrv8xXpc3Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/detect-libc\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz\",\n      \"integrity\": \"sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"detect-libc\": \"bin/detect-libc.js\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/devtools-protocol\": {\n      \"version\": \"0.0.1342118\",\n      \"resolved\": \"https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1342118.tgz\",\n      \"integrity\": \"sha512-75fMas7PkYNDTmDyb6PRJCH7ILmHLp+BhrZGeMsa4bCh40DTxgCz2NRy5UDzII4C5KuD0oBMZ9vXKhEl6UD/3w==\",\n      \"dev\": true\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/each-props\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/each-props/-/each-props-3.0.0.tgz\",\n      \"integrity\": \"sha512-IYf1hpuWrdzse/s/YJOrFmU15lyhSzxelNVAHTEG3DtP4QsLTWZUzcUL3HMXmKQxXpa4EIrBPpwRgj0aehdvAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-plain-object\": \"^5.0.0\",\n        \"object.defaults\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"dev\": true\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"dev\": true\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.4.569\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.569.tgz\",\n      \"integrity\": \"sha512-LsrJjZ0IbVy12ApW3gpYpcmHS3iRxH4bkKOW98y1/D+3cvDUWGcbzbsFinfUS8knpcZk/PG/2p/RnkMCYN7PVg==\",\n      \"dev\": true\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/env-paths\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz\",\n      \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/error\": {\n      \"version\": \"7.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/error/-/error-7.2.1.tgz\",\n      \"integrity\": \"sha512-fo9HBvWnx3NGUKMvMwB/CBCMMrfEJgbDTVDEkPygA3Bdd3lM1OyCd+rbQ8BwnpF6GdVeOLDNmyL4N5Bg80ZvdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-template\": \"~0.2.1\"\n      }\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"dev\": true\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/escodegen\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz\",\n      \"integrity\": \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esprima\": \"^4.0.1\",\n        \"estraverse\": \"^5.2.0\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"bin\": {\n        \"escodegen\": \"bin/escodegen.js\",\n        \"esgenerate\": \"bin/esgenerate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"optionalDependencies\": {\n        \"source-map\": \"~0.6.1\"\n      }\n    },\n    \"node_modules/escodegen/node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.52.0.tgz\",\n      \"integrity\": \"sha512-zh/JHnaixqHZsolRB/w9/02akBk9EPrOs9JwcTP2ek7yL5bVvXuRariiaAjjoJ5DvuwQ1WAE/HsMz+w17YgBCg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.2\",\n        \"@eslint/js\": \"8.52.0\",\n        \"@humanwhocodes/config-array\": \"^0.11.13\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"@ungap/structured-clone\": \"^1.2.0\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^4.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/eslint-utils\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.4.3.tgz\",\n      \"integrity\": \"sha512-fbBN5W2xdY45KulGXmLHZ3c3FHfVYmKg0IrAKGOkT/464PQsx2UeIzfz1RmEci+KLm1bBaAzZAh8+/E+XAeZ8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/eslint-utils/node_modules/eslint-visitor-keys\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz\",\n      \"integrity\": \"sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz\",\n      \"integrity\": \"sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/eslint/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/eslint/node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint/node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint/node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/globals\": {\n      \"version\": \"13.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.23.0.tgz\",\n      \"integrity\": \"sha512-XAmF0RjlrjY23MA51q3HltdlGxUpXPvg0GioKiD9X6HD28iMjo2dKC8Vqwm7lne4GNr78+RHTfliktR6ZH09wA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/eslint/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/espree/node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esquery/node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esrecurse/node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n      \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n      \"dev\": true\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/expand-tilde\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/expand-tilde/-/expand-tilde-2.0.2.tgz\",\n      \"integrity\": \"sha512-A5EmesHW6rfnZ9ysHQjPdJRni0SRar0tjtG5MNtm9n5TUvsYU8oozprtRD4AqHxcZWWlVuAmQo2nWKfN9oyjTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"homedir-polyfill\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"dev\": true\n    },\n    \"node_modules/extend-shallow\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz\",\n      \"integrity\": \"sha512-BwY5b5Ql4+qZoefgMj2NUmx+tehVTH/Kf4k1ZEtOHNFcm2wSxMRo992l6X3TIgni2eZVTZ85xMOjF31fwZAj6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"assign-symbols\": \"^1.0.0\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/external-editor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz\",\n      \"integrity\": \"sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chardet\": \"^0.7.0\",\n        \"iconv-lite\": \"^0.4.24\",\n        \"tmp\": \"^0.0.33\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"extract-zip\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.17.0\"\n      },\n      \"optionalDependencies\": {\n        \"@types/yauzl\": \"^2.9.1\"\n      }\n    },\n    \"node_modules/fancy-log\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.3.tgz\",\n      \"integrity\": \"sha512-k9oEhlyc0FrVh25qYuSELjr8oxsCoc4/LEZfg2iJJrfEk/tZL9bCoJE47gqAvI2m/AUjluCS4+3I0eTx8n3AEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-gray\": \"^0.1.1\",\n        \"color-support\": \"^1.1.3\",\n        \"parse-node-version\": \"^1.0.0\",\n        \"time-stamp\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-fifo\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz\",\n      \"integrity\": \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"node_modules/fastest-levenshtein\": {\n      \"version\": \"1.0.16\",\n      \"resolved\": \"https://registry.npmjs.org/fastest-levenshtein/-/fastest-levenshtein-1.0.16.tgz\",\n      \"integrity\": \"sha512-eRnCtTTtGZFpQCwhJiUOuxPQWRXVKYDn0b2PeHfXL6/Zi53SLAzAHfVhVWK2AryC/WH05kGfxhFIPvTF0SXQzg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4.9.1\"\n      }\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.15.0.tgz\",\n      \"integrity\": \"sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/faye-websocket\": {\n      \"version\": \"0.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz\",\n      \"integrity\": \"sha512-Xhj93RXbMSq8urNCUq4p9l0P6hnySJ/7YNRhYNug0bLOuii7pKO7xQFb5mx9xZXWCar88pLPb805PvUkwrLZpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"websocket-driver\": \">=0.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/figures\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\",\n      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz\",\n      \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"~2.3.0\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"~1.5.0\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/finalhandler/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"dev\": true\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/findup-sync\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/findup-sync/-/findup-sync-5.0.0.tgz\",\n      \"integrity\": \"sha512-MzwXju70AuyflbgeOhzvQWAvvQdo1XL0A9bVvlXsYcFEBM87WR4OakL4OfZq+QRmr+duJubio+UtNQCPsVESzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"detect-file\": \"^1.0.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"micromatch\": \"^4.0.4\",\n        \"resolve-dir\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/fined\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fined/-/fined-2.0.0.tgz\",\n      \"integrity\": \"sha512-OFRzsL6ZMHz5s0JrsEr+TpdGNCtrVtnuG3x1yzGNiQHT0yaDnXAj8V/lWcpJVrnoDpcwXcASxAZYbuXda2Y82A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.2\",\n        \"is-plain-object\": \"^5.0.0\",\n        \"object.defaults\": \"^1.1.0\",\n        \"object.pick\": \"^1.3.0\",\n        \"parse-filepath\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/fitty\": {\n      \"version\": \"2.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/fitty/-/fitty-2.3.7.tgz\",\n      \"integrity\": \"sha512-yucQBzDD8sRa8EXfHu4/h9vNDFHUXpYtC+nydtBRfLSjzToCEvacy4qiBJyihgUVrqpXB+Kp5kWCbROSrePd2g==\",\n      \"dev\": true\n    },\n    \"node_modules/flagged-respawn\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-2.0.0.tgz\",\n      \"integrity\": \"sha512-Gq/a6YCi8zexmGHMuJwahTGzXlAZAOsbCVKduWXC6TlLCjjFRlExMJc4GC2NYPYZ0r/brw9P7CpRgQmlPVeOoA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.1.1.tgz\",\n      \"integrity\": \"sha512-/qM2b3LUIaIgviBQovTLvijfyOQXPtSRnRK26ksj2J7rzPIecePUIpJsZ4T02Qg+xiAEKIs5K8dsHEd+VaKa/Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"flatted\": \"^3.2.9\",\n        \"keyv\": \"^4.5.3\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.2.9.tgz\",\n      \"integrity\": \"sha512-36yxDn5H7OFZQla0/jFJmbIKTdZAQHngCedGxiMmpNfEZM0sdEeT+WczLQrjK6D7o2aiyLYDnkw0R3JK0Qv1RQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/for-in\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz\",\n      \"integrity\": \"sha512-7EwmXrOjyL+ChxMhmG5lnW9MPt1aIeZEwKhQzoBUdTV0N3zuwWDZYVJatDvZ2OyzPUvdIAZDsCetk3coyMfcnQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/for-own\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz\",\n      \"integrity\": \"sha512-0OABksIGrxKK8K4kynWkQ7y1zounQxP+CWnyclVwj81KW3vlLlGUx57DKGcP/LH216GzqnstnPocF16Nxs0Ycg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"for-in\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz\",\n      \"integrity\": \"sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/foreground-child/node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz\",\n      \"integrity\": \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://github.com/sponsors/rawify\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"11.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-11.2.0.tgz\",\n      \"integrity\": \"sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.14\"\n      }\n    },\n    \"node_modules/fs-mkdirp-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fs-mkdirp-stream/-/fs-mkdirp-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-UTOY+59K6IA94tec8Wjqm0FSh5OVudGNB0NL/P6fB3HiE3bYOY3VYBGijsnOHNkQSwC1FKkU77pmq7xp9CskLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.8\",\n        \"streamx\": \"^2.12.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functional-red-black-tree\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz\",\n      \"integrity\": \"sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==\",\n      \"dev\": true\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-uri\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/get-uri/-/get-uri-6.0.3.tgz\",\n      \"integrity\": \"sha512-BzUrJBS9EcUb4cFol8r4W3v1cPsSyajLSthNkz5BxbpDcHN5tIrM10E2eNvfnvBn3DaT3DUgx0OpsBKkaOpanw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"basic-ftp\": \"^5.0.2\",\n        \"data-uri-to-buffer\": \"^6.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"fs-extra\": \"^11.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"10.3.10\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.3.10.tgz\",\n      \"integrity\": \"sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^2.3.5\",\n        \"minimatch\": \"^9.0.1\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\",\n        \"path-scurry\": \"^1.10.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glob-stream\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-stream/-/glob-stream-8.0.2.tgz\",\n      \"integrity\": \"sha512-R8z6eTB55t3QeZMmU1C+Gv+t5UnNRkA55c5yo67fAVfxODxieTwsjNG7utxS/73NdP1NbDgCrhVEg2h00y4fFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@gulpjs/to-absolute-glob\": \"^4.0.0\",\n        \"anymatch\": \"^3.1.3\",\n        \"fastq\": \"^1.13.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        \"is-negated-glob\": \"^1.0.0\",\n        \"normalize-path\": \"^3.0.0\",\n        \"streamx\": \"^2.12.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glob-watcher\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob-watcher/-/glob-watcher-6.0.0.tgz\",\n      \"integrity\": \"sha512-wGM28Ehmcnk2NqRORXFOTOR064L4imSw3EeOqU5bIwUf62eXGwg89WivH6VMahL8zlQHeodzvHpXplrqzrz3Nw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"async-done\": \"^2.0.0\",\n        \"chokidar\": \"^3.5.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"9.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz\",\n      \"integrity\": \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/global-modules\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/global-modules/-/global-modules-1.0.0.tgz\",\n      \"integrity\": \"sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"global-prefix\": \"^1.0.1\",\n        \"is-windows\": \"^1.0.1\",\n        \"resolve-dir\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/global-prefix\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/global-prefix/-/global-prefix-1.0.2.tgz\",\n      \"integrity\": \"sha512-5lsx1NUDHtSjfg0eHlmYvZKv8/nVqX4ckFbM+FrGcQ+04KWcWFo9P5MxPZYSzUvyzmdTbI7Eix8Q4IbELDqzKg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.2\",\n        \"homedir-polyfill\": \"^1.0.1\",\n        \"ini\": \"^1.3.4\",\n        \"is-windows\": \"^1.0.1\",\n        \"which\": \"^1.2.14\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/global-prefix/node_modules/which\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.1.tgz\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"which\": \"bin/which\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/globalyzer\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globalyzer/-/globalyzer-0.1.0.tgz\",\n      \"integrity\": \"sha512-40oNTM9UfG6aBmuKxk/giHn5nQ8RVz/SS4Ir6zgzOv9/qC3kKZ9v4etGTcJbEl/NyVQH7FGU7d+X1egr57Md2Q==\",\n      \"dev\": true\n    },\n    \"node_modules/globrex\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/globrex/-/globrex-0.1.2.tgz\",\n      \"integrity\": \"sha512-uHJgbwAMwNFf5mLst7IWLNg14x1CkeqglJb/K3doi4dw6q2IvAAmM/Y81kevy83wP+Sst+nutFTYOGg3d1lsxg==\",\n      \"dev\": true\n    },\n    \"node_modules/glogg\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/glogg/-/glogg-2.2.0.tgz\",\n      \"integrity\": \"sha512-eWv1ds/zAlz+M1ioHsyKJomfY7jbDDPpwSkv14KQj89bycx1nvK5/2Cj/T9g7kzJcX5Bc7Yv22FjfBZS/jl94A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sparkles\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/gulp\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp/-/gulp-5.0.0.tgz\",\n      \"integrity\": \"sha512-S8Z8066SSileaYw1S2N1I64IUc/myI2bqe2ihOBzO6+nKpvNSg7ZcWJt/AwF8LC/NVN+/QZ560Cb/5OPsyhkhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob-watcher\": \"^6.0.0\",\n        \"gulp-cli\": \"^3.0.0\",\n        \"undertaker\": \"^2.0.0\",\n        \"vinyl-fs\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"gulp\": \"bin/gulp.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/gulp-autoprefixer\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-8.0.0.tgz\",\n      \"integrity\": \"sha512-sVR++PIaXpa81p52dmmA/jt50bw0egmylK5mjagfgOJ8uLDGaF9tHyzvetkY9Uo0gBZUS5sVqN3kX/GlUKOyog==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"autoprefixer\": \"^10.2.6\",\n        \"fancy-log\": \"^1.3.3\",\n        \"plugin-error\": \"^1.0.1\",\n        \"postcss\": \"^8.3.0\",\n        \"through2\": \"^4.0.2\",\n        \"vinyl-sourcemaps-apply\": \"^0.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"peerDependencies\": {\n        \"gulp\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"gulp\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/gulp-clean-css\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-clean-css/-/gulp-clean-css-4.3.0.tgz\",\n      \"integrity\": \"sha512-mGyeT3qqFXTy61j0zOIciS4MkYziF2U594t2Vs9rUnpkEHqfu6aDITMp8xOvZcvdX61Uz3y1mVERRYmjzQF5fg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clean-css\": \"4.2.3\",\n        \"plugin-error\": \"1.0.1\",\n        \"through2\": \"3.0.1\",\n        \"vinyl-sourcemaps-apply\": \"0.2.1\"\n      }\n    },\n    \"node_modules/gulp-clean-css/node_modules/through2\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-3.0.1.tgz\",\n      \"integrity\": \"sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readable-stream\": \"2 || 3\"\n      }\n    },\n    \"node_modules/gulp-cli\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-cli/-/gulp-cli-3.0.0.tgz\",\n      \"integrity\": \"sha512-RtMIitkT8DEMZZygHK2vEuLPqLPAFB4sntSxg4NoDta7ciwGZ18l7JuhCTiS5deOJi2IoK0btE+hs6R4sfj7AA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@gulpjs/messages\": \"^1.1.0\",\n        \"chalk\": \"^4.1.2\",\n        \"copy-props\": \"^4.0.0\",\n        \"gulplog\": \"^2.2.0\",\n        \"interpret\": \"^3.1.1\",\n        \"liftoff\": \"^5.0.0\",\n        \"mute-stdout\": \"^2.0.0\",\n        \"replace-homedir\": \"^2.0.0\",\n        \"semver-greatest-satisfied-range\": \"^2.0.0\",\n        \"string-width\": \"^4.2.3\",\n        \"v8flags\": \"^4.0.0\",\n        \"yargs\": \"^16.2.0\"\n      },\n      \"bin\": {\n        \"gulp\": \"bin/gulp.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/gulp-cli/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/gulp-cli/node_modules/yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz\",\n      \"integrity\": \"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/gulp-connect\": {\n      \"version\": \"5.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-connect/-/gulp-connect-5.7.0.tgz\",\n      \"integrity\": \"sha512-8tRcC6wgXMLakpPw9M7GRJIhxkYdgZsXwn7n56BA2bQYGLR9NOPhMzx7js+qYDy6vhNkbApGKURjAw1FjY4pNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-colors\": \"^2.0.5\",\n        \"connect\": \"^3.6.6\",\n        \"connect-livereload\": \"^0.6.0\",\n        \"fancy-log\": \"^1.3.2\",\n        \"map-stream\": \"^0.0.7\",\n        \"send\": \"^0.16.2\",\n        \"serve-index\": \"^1.9.1\",\n        \"serve-static\": \"^1.13.2\",\n        \"tiny-lr\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-connect/node_modules/ansi-colors\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-2.0.5.tgz\",\n      \"integrity\": \"sha512-yAdfUZ+c2wetVNIFsNRn44THW+Lty6S5TwMpUfLA/UaGhiXbBv/F8E60/1hMLd0cnF/CDoWH8vzVaI5bAcHCjw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/gulp-eslint\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-eslint/-/gulp-eslint-6.0.0.tgz\",\n      \"integrity\": \"sha512-dCVPSh1sA+UVhn7JSQt7KEb4An2sQNbOdB3PA8UCfxsoPlAKjJHxYHGXdXC7eb+V1FAnilSFFqslPrq037l1ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint\": \"^6.0.0\",\n        \"fancy-log\": \"^1.3.2\",\n        \"plugin-error\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/acorn\": {\n      \"version\": \"7.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz\",\n      \"integrity\": \"sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/ansi-regex\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.1.tgz\",\n      \"integrity\": \"sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/cross-spawn\": {\n      \"version\": \"6.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz\",\n      \"integrity\": \"sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"nice-try\": \"^1.0.4\",\n        \"path-key\": \"^2.0.1\",\n        \"semver\": \"^5.5.0\",\n        \"shebang-command\": \"^1.2.0\",\n        \"which\": \"^1.2.9\"\n      },\n      \"engines\": {\n        \"node\": \">=4.8\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/cross-spawn/node_modules/semver\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.2.tgz\",\n      \"integrity\": \"sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/eslint\": {\n      \"version\": \"6.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-6.8.0.tgz\",\n      \"integrity\": \"sha512-K+Iayyo2LtyYhDSYwz5D5QdWw0hCacNzyq1Y821Xna2xSJj7cijoLLYmLxTQgcgZ9mC61nryMy9S7GRbYpI5Ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"ajv\": \"^6.10.0\",\n        \"chalk\": \"^2.1.0\",\n        \"cross-spawn\": \"^6.0.5\",\n        \"debug\": \"^4.0.1\",\n        \"doctrine\": \"^3.0.0\",\n        \"eslint-scope\": \"^5.0.0\",\n        \"eslint-utils\": \"^1.4.3\",\n        \"eslint-visitor-keys\": \"^1.1.0\",\n        \"espree\": \"^6.1.2\",\n        \"esquery\": \"^1.0.1\",\n        \"esutils\": \"^2.0.2\",\n        \"file-entry-cache\": \"^5.0.1\",\n        \"functional-red-black-tree\": \"^1.0.1\",\n        \"glob-parent\": \"^5.0.0\",\n        \"globals\": \"^12.1.0\",\n        \"ignore\": \"^4.0.6\",\n        \"import-fresh\": \"^3.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"inquirer\": \"^7.0.0\",\n        \"is-glob\": \"^4.0.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.3.0\",\n        \"lodash\": \"^4.17.14\",\n        \"minimatch\": \"^3.0.4\",\n        \"mkdirp\": \"^0.5.1\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.8.3\",\n        \"progress\": \"^2.0.0\",\n        \"regexpp\": \"^2.0.1\",\n        \"semver\": \"^6.1.2\",\n        \"strip-ansi\": \"^5.2.0\",\n        \"strip-json-comments\": \"^3.0.1\",\n        \"table\": \"^5.2.3\",\n        \"text-table\": \"^0.2.0\",\n        \"v8-compile-cache\": \"^2.0.3\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^8.10.0 || ^10.13.0 || >=11.10.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/eslint-visitor-keys\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz\",\n      \"integrity\": \"sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/espree\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-6.2.1.tgz\",\n      \"integrity\": \"sha512-ysCxRQY3WaXJz9tdbWOwuWr5Y/XrPTGX9Kiz3yoUXwW0VZ4w30HTkQLaGx/+ttFjF8i+ACbArnB4ce68a9m5hw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^7.1.1\",\n        \"acorn-jsx\": \"^5.2.0\",\n        \"eslint-visitor-keys\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/file-entry-cache\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz\",\n      \"integrity\": \"sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/flat-cache\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz\",\n      \"integrity\": \"sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flatted\": \"^2.0.0\",\n        \"rimraf\": \"2.6.3\",\n        \"write\": \"1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/flatted\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-2.0.2.tgz\",\n      \"integrity\": \"sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i+75zmd8jcKdMR4O6jA==\",\n      \"dev\": true\n    },\n    \"node_modules/gulp-eslint/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/globals\": {\n      \"version\": \"12.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-12.4.0.tgz\",\n      \"integrity\": \"sha512-BWICuzzDvDoH54NHKCseDanAhE3CeDorgDL5MT6LMXXj2WCnd9UC2szdk4AWLfjdgNBCXLUanXYcpBBKOSWGwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.8.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/ignore\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz\",\n      \"integrity\": \"sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/levn\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.3.0.tgz\",\n      \"integrity\": \"sha512-0OO4y2iOHix2W6ujICbKIaEQXvFQHue65vUG3pb5EUomzPI90z9hsA1VsO/dbIIpC53J8gxM9Q4Oho0jrCM/yA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"~1.1.2\",\n        \"type-check\": \"~0.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/optionator\": {\n      \"version\": \"0.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.8.3.tgz\",\n      \"integrity\": \"sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-is\": \"~0.1.3\",\n        \"fast-levenshtein\": \"~2.0.6\",\n        \"levn\": \"~0.3.0\",\n        \"prelude-ls\": \"~1.1.2\",\n        \"type-check\": \"~0.3.2\",\n        \"word-wrap\": \"~1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/path-key\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz\",\n      \"integrity\": \"sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/prelude-ls\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz\",\n      \"integrity\": \"sha512-ESF23V4SKG6lVSGZgYNpbsiaAkdab6ZgOxe52p7+Kid3W3u3bxR4Vfd/o21dmN7jSt0IwgZ4v5MUd26FEtXE9w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/rimraf\": {\n      \"version\": \"2.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz\",\n      \"integrity\": \"sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/shebang-command\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz\",\n      \"integrity\": \"sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/shebang-regex\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz\",\n      \"integrity\": \"sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/strip-ansi\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz\",\n      \"integrity\": \"sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/type-check\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz\",\n      \"integrity\": \"sha512-ZCmOJdvOWDBYJlzAoFkC+Q0+bUyEOS1ltgp1MGU03fqHG+dbi9tBFU2Rd9QKiDZFAYrhPh2JUf7rZRIuHRKtOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/type-fest\": {\n      \"version\": \"0.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz\",\n      \"integrity\": \"sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/gulp-eslint/node_modules/which\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.1.tgz\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"which\": \"bin/which\"\n      }\n    },\n    \"node_modules/gulp-header-comment\": {\n      \"version\": \"0.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-header-comment/-/gulp-header-comment-0.10.0.tgz\",\n      \"integrity\": \"sha512-WD8hpuhv17fWU5ja2Yz9AMYP/E70eWOM5jcAWEJHmliMDrU/Nz/SmbLq+BNeJs64+laYmCw3/qwi9lnA3SyLLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-colors\": \"4.1.1\",\n        \"commenting\": \"1.1.0\",\n        \"fancy-log\": \"1.3.3\",\n        \"lodash\": \"4.17.21\",\n        \"magic-string\": \"0.25.7\",\n        \"moment\": \"2.29.1\",\n        \"plugin-error\": \"1.0.1\",\n        \"q\": \"1.5.1\",\n        \"through2\": \"4.0.2\",\n        \"vinyl-sourcemaps-apply\": \"0.2.1\"\n      }\n    },\n    \"node_modules/gulp-header-comment/node_modules/ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz\",\n      \"integrity\": \"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/gulp-header-comment/node_modules/magic-string\": {\n      \"version\": \"0.25.7\",\n      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.25.7.tgz\",\n      \"integrity\": \"sha512-4CrMT5DOHTDk4HYDlzmwu4FVCcIYI8gauveasrdCu2IKIFOJ3f0v/8MDGJCDL9oD2ppz/Av1b0Nj345H9M+XIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sourcemap-codec\": \"^1.4.4\"\n      }\n    },\n    \"node_modules/gulp-zip\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-zip/-/gulp-zip-5.1.0.tgz\",\n      \"integrity\": \"sha512-XZr/y91IliK/SpR74g3TkZejGkGEmK7CSDjSghT1jXshgO+dFvpLIz9w9fpuwkew6i7k4F+G24TubNgq1ISzEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-stream\": \"^5.2.0\",\n        \"plugin-error\": \"^1.0.1\",\n        \"through2\": \"^3.0.1\",\n        \"vinyl\": \"^2.1.0\",\n        \"yazl\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"peerDependencies\": {\n        \"gulp\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"gulp\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/gulp-zip/node_modules/replace-ext\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.1.tgz\",\n      \"integrity\": \"sha512-yD5BHCe7quCgBph4rMQ+0KkIRKwWCrHDOX1p1Gp6HwjPM5kVoCdKGNhN7ydqqsX6lJEnQDKZ/tFMiEdQ1dvPEw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gulp-zip/node_modules/through2\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-3.0.2.tgz\",\n      \"integrity\": \"sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.4\",\n        \"readable-stream\": \"2 || 3\"\n      }\n    },\n    \"node_modules/gulp-zip/node_modules/vinyl\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl/-/vinyl-2.2.1.tgz\",\n      \"integrity\": \"sha512-LII3bXRFBZLlezoG5FfZVcXflZgWP/4dCwKtxd5ky9+LOtM4CS3bIRQsmR1KMnMW07jpE8fqR2lcxPZ+8sJIcw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clone\": \"^2.1.1\",\n        \"clone-buffer\": \"^1.0.0\",\n        \"clone-stats\": \"^1.0.0\",\n        \"cloneable-readable\": \"^1.0.0\",\n        \"remove-trailing-separator\": \"^1.0.1\",\n        \"replace-ext\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/gulplog\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gulplog/-/gulplog-2.2.0.tgz\",\n      \"integrity\": \"sha512-V2FaKiOhpR3DRXZuYdRLn/qiY0yI5XmqbTKrYbdemJ+xOh2d2MOweI/XFgMzd/9+1twdvMwllnZbWZNJ+BOm4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glogg\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\n      \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/highlight.js\": {\n      \"version\": \"11.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/highlight.js/-/highlight.js-11.9.0.tgz\",\n      \"integrity\": \"sha512-fJ7cW7fQGCYAkgv4CPfwFHrfd/cLS4Hau96JuJ+ZTOWhjnhoeN1ub1tFmALm/+lW5z4WCAuAV9bm05AP0mS6Gw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/homedir-polyfill\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz\",\n      \"integrity\": \"sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parse-passwd\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"1.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\n      \"integrity\": \"sha512-lks+lVC8dgGyh97jxvxeYTWQFvh4uw4yC12gVl63Cg30sjPX4wuGcdkICVXDAESr6OJGjqGA8Iz5mkeN6zlD7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"depd\": \"~1.1.2\",\n        \"inherits\": \"2.0.3\",\n        \"setprototypeof\": \"1.1.0\",\n        \"statuses\": \">= 1.4.0 < 2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/http-errors/node_modules/inherits\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n      \"integrity\": \"sha512-x00IRNXNy63jwGkJmzPigoySHbaqpNuzKbBOmzK+g2OdZpQ9w+sxCN+VSB3ja7IAge2OP2qpfxTjeNcyjmW1uw==\",\n      \"dev\": true\n    },\n    \"node_modules/http-parser-js\": {\n      \"version\": \"0.5.8\",\n      \"resolved\": \"https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.8.tgz\",\n      \"integrity\": \"sha512-SGeBX54F94Wgu5RH3X5jsDtf4eHyRogWX1XGT3b4HuW3tQPM4AaBzoUji/4AAJNXCEOWZ5O0DgZmJw1947gD5Q==\",\n      \"dev\": true\n    },\n    \"node_modules/http-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/https-proxy-agent\": {\n      \"version\": \"7.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.5.tgz\",\n      \"integrity\": \"sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.2.4.tgz\",\n      \"integrity\": \"sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/immutable\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/immutable/-/immutable-4.3.4.tgz\",\n      \"integrity\": \"sha512-fsXeu4J4i6WNWSikpI88v/PcVflZz+6kMhUfIwc5SY+poQRPnaf5V7qds6SUyUN3cVxEzuCab7QIoLOQ+DQ1wA==\",\n      \"dev\": true\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ini\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-1.3.8.tgz\",\n      \"integrity\": \"sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==\",\n      \"dev\": true\n    },\n    \"node_modules/inquirer\": {\n      \"version\": \"7.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-7.3.3.tgz\",\n      \"integrity\": \"sha512-JG3eIAj5V9CwcGvuOmoo6LB9kbAYT8HXffUl6memuszlwDC/qvFAJw49XJ5NROSFNPxp3iQg1GqkFhaY/CR0IA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.1.0\",\n        \"cli-cursor\": \"^3.1.0\",\n        \"cli-width\": \"^3.0.0\",\n        \"external-editor\": \"^3.0.3\",\n        \"figures\": \"^3.0.0\",\n        \"lodash\": \"^4.17.19\",\n        \"mute-stream\": \"0.0.8\",\n        \"run-async\": \"^2.4.0\",\n        \"rxjs\": \"^6.6.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"through\": \"^2.3.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/inquirer/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/inquirer/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/inquirer/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/inquirer/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/inquirer/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/inquirer/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/interpret\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/interpret/-/interpret-3.1.1.tgz\",\n      \"integrity\": \"sha512-6xwYfHbajpoF0xLW+iwLkhwgvLoZDfjYfoFNu8ftMoXINzwuymNLd9u/KmwtdT2GbR+/Cz66otEGEVVUHX9QLQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/ip-address/node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"dev\": true\n    },\n    \"node_modules/is-absolute\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-absolute/-/is-absolute-1.0.0.tgz\",\n      \"integrity\": \"sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-relative\": \"^1.0.0\",\n        \"is-windows\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"dev\": true\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-builtin-module\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.1.tgz\",\n      \"integrity\": \"sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"builtin-modules\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extendable\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz\",\n      \"integrity\": \"sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-plain-object\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-extendable/node_modules/is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz\",\n      \"integrity\": \"sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-module\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\n      \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\n      \"dev\": true\n    },\n    \"node_modules/is-negated-glob\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-negated-glob/-/is-negated-glob-1.0.0.tgz\",\n      \"integrity\": \"sha512-czXVVn/QEmgvej1f50BZ648vUI+em0xqMq2Sn+QncCLN4zj1UAxlT+kw/6ggQTOaZPd1HqKQGEqbpQVtJucWug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-plain-object\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz\",\n      \"integrity\": \"sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-reference\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\n      \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/is-relative\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-relative/-/is-relative-1.0.0.tgz\",\n      \"integrity\": \"sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-unc-path\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-unc-path\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz\",\n      \"integrity\": \"sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"unc-path-regex\": \"^0.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-valid-glob\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-valid-glob/-/is-valid-glob-1.0.0.tgz\",\n      \"integrity\": \"sha512-AhiROmoEFDSsjx8hW+5sGwgKVIORcXnrlAx/R0ZSeaPw70Vw0CqkGBBhHGL58Uox2eXnU1AnvXJl1XlyedO5bA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-windows\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz\",\n      \"integrity\": \"sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n      \"integrity\": \"sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"dev\": true\n    },\n    \"node_modules/isobject\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz\",\n      \"integrity\": \"sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-2.3.6.tgz\",\n      \"integrity\": \"sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"dev\": true\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\",\n      \"dev\": true\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz\",\n      \"integrity\": \"sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/last-run\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/last-run/-/last-run-2.0.0.tgz\",\n      \"integrity\": \"sha512-j+y6WhTLN4Itnf9j5ZQos1BGPCS8DAwmgMroR3OzfxAsBxam0hMw7J8M3KqZl0pLQJ1jNnwIexg5DYpC/ctwEQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/lead\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lead/-/lead-4.0.0.tgz\",\n      \"integrity\": \"sha512-DpMa59o5uGUWWjruMp71e6knmwKU3jRBBn1kjuLWN9EeIOxNeSAwvHf03WIl8g/ZMR2oSQC9ej3yeLBwdDc/pg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/liftoff\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/liftoff/-/liftoff-5.0.0.tgz\",\n      \"integrity\": \"sha512-a5BQjbCHnB+cy+gsro8lXJ4kZluzOijzJ1UVVfyJYZC+IP2pLv1h4+aysQeKuTmyO8NAqfyQAk4HWaP/HjcKTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"extend\": \"^3.0.2\",\n        \"findup-sync\": \"^5.0.0\",\n        \"fined\": \"^2.0.0\",\n        \"flagged-respawn\": \"^2.0.0\",\n        \"is-plain-object\": \"^5.0.0\",\n        \"rechoir\": \"^0.8.0\",\n        \"resolve\": \"^1.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n      \"dev\": true\n    },\n    \"node_modules/livereload-js\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/livereload-js/-/livereload-js-2.4.0.tgz\",\n      \"integrity\": \"sha512-XPQH8Z2GDP/Hwz2PCDrh2mth4yFejwA1OZ/81Ti3LgKyhDcEjsSsqFWZojHG0va/duGd+WyosY7eXLDoOyqcPw==\",\n      \"dev\": true\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.debounce\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz\",\n      \"integrity\": \"sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/magic-string\": {\n      \"version\": \"0.30.5\",\n      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\n      \"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.4.15\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/map-cache\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz\",\n      \"integrity\": \"sha512-8y/eV9QQZCiyn1SprXSrCmqJN0yNRATe+PO8ztwqrvrbdRLA3eYJF0yaR0YayLWkMbsQSKWS9N2gPcGEc4UsZg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/map-stream\": {\n      \"version\": \"0.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz\",\n      \"integrity\": \"sha512-C0X0KQmGm3N2ftbTGBhSyuydQ+vV1LC3f3zPvT3RXHXNZrvfPZcoXp/N5DOa8vedX/rTMm2CjTtivFg2STJMRQ==\",\n      \"dev\": true\n    },\n    \"node_modules/marked\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-4.3.0.tgz\",\n      \"integrity\": \"sha512-PRsaiG84bK+AMvxziE/lCFss8juXjNaWzVbN5tXAm4XjeaS9NAHhop+PjQxz2A9h8Q4M/xGmzP8vqNwy6JeK0A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"marked\": \"bin/marked.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.0.4.tgz\",\n      \"integrity\": \"sha512-jYofLM5Dam9279rdkWzqHozUo4ybjdZmCsDHePy5V/PbBcVMiSZR97gmAy45aqi8CK1lG2ECd356FU86avfwUQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/mitt\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz\",\n      \"integrity\": \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\",\n      \"dev\": true\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/moment\": {\n      \"version\": \"2.30.1\",\n      \"resolved\": \"https://registry.npmjs.org/moment/-/moment-2.30.1.tgz\",\n      \"integrity\": \"sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/mute-stdout\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stdout/-/mute-stdout-2.0.0.tgz\",\n      \"integrity\": \"sha512-32GSKM3Wyc8dg/p39lWPKYu8zci9mJFzV1Np9Of0ZEpe6Fhssn/FbI7ywAMd40uX+p3ZKh3T5EeCFv81qS3HmQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/mute-stream\": {\n      \"version\": \"0.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz\",\n      \"integrity\": \"sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==\",\n      \"dev\": true\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz\",\n      \"integrity\": \"sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/netmask\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz\",\n      \"integrity\": \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/nice-try\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz\",\n      \"integrity\": \"sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==\",\n      \"dev\": true\n    },\n    \"node_modules/node-addon-api\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz\",\n      \"integrity\": \"sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==\",\n      \"dev\": true\n    },\n    \"node_modules/node-qunit-puppeteer\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-qunit-puppeteer/-/node-qunit-puppeteer-2.2.0.tgz\",\n      \"integrity\": \"sha512-sHtj0QJx6/iOK7kSPu+tWsT0b8MPQWz1tnjx6ZsTdla/vp3cMaE1IkXtzfccLTXw1E2FuRQwDKg32iJpVW3B7Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"colors\": \"^1.4.0\",\n        \"puppeteer\": \"^23.3.0\"\n      },\n      \"bin\": {\n        \"node-qunit-puppeteer\": \"cli.js\"\n      }\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.13.tgz\",\n      \"integrity\": \"sha512-uYr7J37ae/ORWdZeQ1xxMJe3NtdmqMC/JZK+geofDrkLUApKRHPd18/TxtBOJ4A0/+uUIliorNrfYV6s1b02eQ==\",\n      \"dev\": true\n    },\n    \"node_modules/node-watch\": {\n      \"version\": \"0.7.3\",\n      \"resolved\": \"https://registry.npmjs.org/node-watch/-/node-watch-0.7.3.tgz\",\n      \"integrity\": \"sha512-3l4E8uMPY1HdMMryPRUAl+oIHtXtyiTlIiESNSVSNxcPfzAFzeTbXFQkZfAwBbo0B1qMSG8nUABx+Gd+YrbKrQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n      \"integrity\": \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/now-and-later\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/now-and-later/-/now-and-later-3.0.0.tgz\",\n      \"integrity\": \"sha512-pGO4pzSdaxhWTGkfSfHx3hVzJVslFPwBp2Myq9MYN/ChfJZF87ochMAXnvz6/58RJSf5ik2q9tXprBBrk2cpcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz\",\n      \"integrity\": \"sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.defaults\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/object.defaults/-/object.defaults-1.1.0.tgz\",\n      \"integrity\": \"sha512-c/K0mw/F11k4dEUBMW8naXUuBuhxRCfG7W+yFy8EcijU/rSmazOUd1XAEEe6bC0OuXY4HUKjTJv7xbxIMqdxrA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-each\": \"^1.0.1\",\n        \"array-slice\": \"^1.0.0\",\n        \"for-own\": \"^1.0.0\",\n        \"isobject\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object.pick\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz\",\n      \"integrity\": \"sha512-tqa/UMy/CCoYmj+H5qc07qvSL9dqcs/WZENZ1JbtWBlATP+iVOe778gE6MSijnyCnORzDuX6hU+LA4SZ09YjFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\n      \"integrity\": \"sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz\",\n      \"integrity\": \"sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@aashutoshrathi/word-wrap\": \"^1.2.3\",\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/pac-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-BFi3vZnO9X5Qt6NRz7ZOaPja3ic0PhlsmCRYLOpN11+mWBCR6XJDqW5RF3j8jm4WGGQZtBA+bTfxYzeKW73eHg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@tootallnate/quickjs-emscripten\": \"^0.23.0\",\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"get-uri\": \"^6.0.1\",\n        \"http-proxy-agent\": \"^7.0.0\",\n        \"https-proxy-agent\": \"^7.0.5\",\n        \"pac-resolver\": \"^7.0.1\",\n        \"socks-proxy-agent\": \"^8.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/pac-resolver\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz\",\n      \"integrity\": \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"degenerator\": \"^5.0.0\",\n        \"netmask\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-filepath\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.2.tgz\",\n      \"integrity\": \"sha512-FwdRXKCohSVeXqwtYonZTXtbGJKrn+HNyWDYVcp5yuJlesTwNH4rsmRZ+GrKAPJ5bLpRxESMeS+Rl0VCHRvB2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-absolute\": \"^1.0.0\",\n        \"map-cache\": \"^0.2.0\",\n        \"path-root\": \"^0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"lines-and-columns\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parse-node-version\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parse-node-version/-/parse-node-version-1.0.1.tgz\",\n      \"integrity\": \"sha512-3YHlOa/JgH6Mnpr05jP9eDG254US9ek25LyIxZlDItp2iJtwyaXQb57lBYLdT3MowkUFYEV2XXNAYIPlESvJlA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/parse-passwd\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz\",\n      \"integrity\": \"sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-root\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz\",\n      \"integrity\": \"sha512-QLcPegTHF11axjfojBIoDygmS2E3Lf+8+jI6wOVmNVenrKSo3mFdSGiIgdSHenczw3wPtlVMQaFVwGmM7BJdtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-root-regex\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-root-regex\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz\",\n      \"integrity\": \"sha512-4GlJ6rZDhQZFE0DPVKh0e9jmZ5egZfxTkp7bcRDuPlJXbAwhxcl2dINPUAsjLdejqaLsCeg8axcLjIbvBjN4pQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.10.1.tgz\",\n      \"integrity\": \"sha512-MkhCqzzBEpPvxxQ71Md0b1Kk51W01lrYvlMzSUaIzNsODdd7mqhiimSZlr+VegAz5Z6Vzt9Xg2ttE//XBhH3EQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^9.1.1 || ^10.0.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.0.1.tgz\",\n      \"integrity\": \"sha512-IJ4uwUTi2qCccrioU6g9g/5rvvVl13bsdczUUcqbciD9iLr095yj8DQKdObriEvuNSx325N1rV1O0sJFszx75g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\",\n      \"dev\": true\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz\",\n      \"integrity\": \"sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==\",\n      \"dev\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/plugin-error\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/plugin-error/-/plugin-error-1.0.1.tgz\",\n      \"integrity\": \"sha512-L1zP0dk7vGweZME2i+EeakvUNqSrdiI3F91TwEoYiGrAfUXmVv6fJIq4g82PAXxNsWOp0J7ZqQy/3Szz0ajTxA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-colors\": \"^1.0.1\",\n        \"arr-diff\": \"^4.0.0\",\n        \"arr-union\": \"^3.1.0\",\n        \"extend-shallow\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.4.31\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz\",\n      \"integrity\": \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.6\",\n        \"picocolors\": \"^1.0.0\",\n        \"source-map-js\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz\",\n      \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\",\n      \"dev\": true\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n      \"dev\": true\n    },\n    \"node_modules/progress\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz\",\n      \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/proxy-agent\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.4.0.tgz\",\n      \"integrity\": \"sha512-u0piLU+nCOHMgGjRbimiXmA9kM/L9EHh3zL81xCdp7m+Y2pHIsnmbdDoEDoAz5geaonNR6q6+yOPQs6n4T6sBQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"http-proxy-agent\": \"^7.0.1\",\n        \"https-proxy-agent\": \"^7.0.3\",\n        \"lru-cache\": \"^7.14.1\",\n        \"pac-proxy-agent\": \"^7.0.1\",\n        \"proxy-from-env\": \"^1.1.0\",\n        \"socks-proxy-agent\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/proxy-agent/node_modules/lru-cache\": {\n      \"version\": \"7.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz\",\n      \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/proxy-from-env\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\",\n      \"dev\": true\n    },\n    \"node_modules/pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n      \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/puppeteer\": {\n      \"version\": \"23.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/puppeteer/-/puppeteer-23.5.3.tgz\",\n      \"integrity\": \"sha512-FghmfBsr/UUpe48OiCg1gV3W4vVfQJKjQehbF07SjnQvEpWcvPTah1nykfGWdOQQ1ydJPIXcajzWN7fliCU3zw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"dependencies\": {\n        \"@puppeteer/browsers\": \"2.4.0\",\n        \"chromium-bidi\": \"0.8.0\",\n        \"cosmiconfig\": \"^9.0.0\",\n        \"devtools-protocol\": \"0.0.1342118\",\n        \"puppeteer-core\": \"23.5.3\",\n        \"typed-query-selector\": \"^2.12.0\"\n      },\n      \"bin\": {\n        \"puppeteer\": \"lib/cjs/puppeteer/node/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/puppeteer-core\": {\n      \"version\": \"23.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-23.5.3.tgz\",\n      \"integrity\": \"sha512-V58MZD/B3CwkYsqSEQlHKbavMJptF04fzhMdUpiCRCmUVhwZNwSGEPhaiZ1f8I3ABQUirg3VNhXVB6Z1ubHXtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@puppeteer/browsers\": \"2.4.0\",\n        \"chromium-bidi\": \"0.8.0\",\n        \"debug\": \"^4.3.7\",\n        \"devtools-protocol\": \"0.0.1342118\",\n        \"typed-query-selector\": \"^2.12.0\",\n        \"ws\": \"^8.18.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/q\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/q/-/q-1.5.1.tgz\",\n      \"integrity\": \"sha512-kV/CThkXo6xyFEZUugw/+pIOywXcDbFYgSct5cT3gqlbkBE1SJdwy6UQoZvodiWF/ckQLZyDE/Bu1M6gVu5lVw==\",\n      \"deprecated\": \"You or someone you depend on is using Q, the JavaScript Promise library that gave JavaScript developers strong feelings about promises. They can almost certainly migrate to the native JavaScript promise now. Thank you literally everyone for joining me in this bet against the odds. Be excellent to each other.\\n\\n(For a CapTP with native promises, see @endo/eventual-send and @endo/captp)\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6.0\",\n        \"teleport\": \">=0.2.0\"\n      }\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"peer\": true\n    },\n    \"node_modules/queue-tick\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/queue-tick/-/queue-tick-1.0.1.tgz\",\n      \"integrity\": \"sha512-kJt5qhMxoszgU/62PLP1CJytzd2NKetjSRnyuj31fDd3Rlcz3fzlFdFLD1SItunPwyqEOkca6GbV612BWfaBag==\",\n      \"dev\": true\n    },\n    \"node_modules/qunit\": {\n      \"version\": \"2.22.0\",\n      \"resolved\": \"https://registry.npmjs.org/qunit/-/qunit-2.22.0.tgz\",\n      \"integrity\": \"sha512-wPYvAvpjTL3zlUeyCX75T8gfZfdVXZa8y1EVkGe/XZNORIsCH/WI2X8R2KlemT921X9EKSZUL6CLGSPC7Ks08g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"commander\": \"7.2.0\",\n        \"node-watch\": \"0.7.3\",\n        \"tiny-glob\": \"0.2.9\"\n      },\n      \"bin\": {\n        \"qunit\": \"bin/qunit.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-1.1.7.tgz\",\n      \"integrity\": \"sha512-WmJJU2e9Y6M5UzTOkHaM7xJGAPQD8PNzx3bAd2+uhZAim6wDk6dAZxPVYLF67XhbR4hmKGh33Lpmh4XWrCH5Mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bytes\": \"1\",\n        \"string_decoder\": \"0.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/raw-body/node_modules/string_decoder\": {\n      \"version\": \"0.10.31\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n      \"integrity\": \"sha512-ev2QzSzWPYmy9GuqfIVildA4OdcGLeFZQrq5ys6RtiuF+RQQiZWr8TZNyAcuVXyQRYfEO+MsoB/1BuQVhOJuoQ==\",\n      \"dev\": true\n    },\n    \"node_modules/readable-stream\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz\",\n      \"integrity\": \"sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/rechoir\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/rechoir/-/rechoir-0.8.0.tgz\",\n      \"integrity\": \"sha512-/vxpCXddiX8NGfGO/mTafwjq4aFa/71pvamip0++IQk3zG8cbCj0fifNPrjjF1XMXUne91jL9OoxmdykoEtifQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"resolve\": \"^1.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/regenerate\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz\",\n      \"integrity\": \"sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==\",\n      \"dev\": true\n    },\n    \"node_modules/regenerate-unicode-properties\": {\n      \"version\": \"10.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.1.1.tgz\",\n      \"integrity\": \"sha512-X007RyZLsCJVVrjgEFVpLUTZwyOZk3oiL75ZcuYjlIWd6rNJtOjkBwQc5AsRrpbKVkxN6sklw/k/9m2jJYOf8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerate\": \"^1.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.0.tgz\",\n      \"integrity\": \"sha512-srw17NI0TUWHuGa5CFGGmhfNIeja30WMBfbslPNhf6JrqQlLN5gcrvig1oqPxiVaXb0oW0XRKtH6Nngs5lKCIA==\",\n      \"dev\": true\n    },\n    \"node_modules/regenerator-transform\": {\n      \"version\": \"0.15.2\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.2.tgz\",\n      \"integrity\": \"sha512-hfMp2BoF0qOk3uc5V20ALGDS2ddjQaLrdl7xrGXvAIow7qeWRM2VA2HuCHkUKk9slq3VwEwLNK3DFBqDfPGYtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.4\"\n      }\n    },\n    \"node_modules/regexpp\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz\",\n      \"integrity\": \"sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.5.0\"\n      }\n    },\n    \"node_modules/regexpu-core\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.3.2.tgz\",\n      \"integrity\": \"sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/regjsgen\": \"^0.8.0\",\n        \"regenerate\": \"^1.4.2\",\n        \"regenerate-unicode-properties\": \"^10.1.0\",\n        \"regjsparser\": \"^0.9.1\",\n        \"unicode-match-property-ecmascript\": \"^2.0.0\",\n        \"unicode-match-property-value-ecmascript\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regjsparser\": {\n      \"version\": \"0.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/regjsparser/-/regjsparser-0.9.1.tgz\",\n      \"integrity\": \"sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jsesc\": \"~0.5.0\"\n      },\n      \"bin\": {\n        \"regjsparser\": \"bin/parser\"\n      }\n    },\n    \"node_modules/regjsparser/node_modules/jsesc\": {\n      \"version\": \"0.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz\",\n      \"integrity\": \"sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      }\n    },\n    \"node_modules/remove-trailing-separator\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz\",\n      \"integrity\": \"sha512-/hS+Y0u3aOfIETiaiirUFwDBDzmXPvO+jAfKTitUngIPzdKc6Z0LoFjM/CK5PL4C+eKwHohlHAb6H0VFfmmUsw==\",\n      \"dev\": true\n    },\n    \"node_modules/replace-ext\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/replace-ext/-/replace-ext-2.0.0.tgz\",\n      \"integrity\": \"sha512-UszKE5KVK6JvyD92nzMn9cDapSk6w/CaFZ96CnmDMUqH9oowfxF/ZjRITD25H4DnOQClLA4/j7jLGXXLVKxAug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/replace-homedir\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/replace-homedir/-/replace-homedir-2.0.0.tgz\",\n      \"integrity\": \"sha512-bgEuQQ/BHW0XkkJtawzrfzHFSN70f/3cNOiHa2QsYxqrjaC30X1k74FJ6xswVBP0sr0SpGIdVFuPwfrYziVeyw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.8\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-dir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-dir/-/resolve-dir-1.0.1.tgz\",\n      \"integrity\": \"sha512-R7uiTjECzvOsWSfdM0QKFNBVFcK27aHOUwdvK53BcW8zqnGdYp0Fbj82cy54+2A4P2tFM22J5kRfe1R+lM/1yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expand-tilde\": \"^2.0.0\",\n        \"global-modules\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/resolve-options\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-options/-/resolve-options-2.0.0.tgz\",\n      \"integrity\": \"sha512-/FopbmmFOQCfsCx77BRFdKOniglTiHumLgwvd6IDPihy1GKkadZbgQJBcTb2lMzSR1pndzd96b1nZrreZ7+9/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"value-or-function\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/restore-cursor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz\",\n      \"integrity\": \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"onetime\": \"^5.1.0\",\n        \"signal-exit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rimraf/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rollup\": {\n      \"version\": \"4.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.24.0.tgz\",\n      \"integrity\": \"sha512-DOmrlGSXNk1DM0ljiQA+i+o0rSLhtii1je5wgk60j49d1jHT5YYttBv1iWOnYSTG+fZZESUOSNiAl89SIet+Cg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"1.0.6\"\n      },\n      \"bin\": {\n        \"rollup\": \"dist/bin/rollup\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\",\n        \"npm\": \">=8.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@rollup/rollup-android-arm-eabi\": \"4.24.0\",\n        \"@rollup/rollup-android-arm64\": \"4.24.0\",\n        \"@rollup/rollup-darwin-arm64\": \"4.24.0\",\n        \"@rollup/rollup-darwin-x64\": \"4.24.0\",\n        \"@rollup/rollup-linux-arm-gnueabihf\": \"4.24.0\",\n        \"@rollup/rollup-linux-arm-musleabihf\": \"4.24.0\",\n        \"@rollup/rollup-linux-arm64-gnu\": \"4.24.0\",\n        \"@rollup/rollup-linux-arm64-musl\": \"4.24.0\",\n        \"@rollup/rollup-linux-powerpc64le-gnu\": \"4.24.0\",\n        \"@rollup/rollup-linux-riscv64-gnu\": \"4.24.0\",\n        \"@rollup/rollup-linux-s390x-gnu\": \"4.24.0\",\n        \"@rollup/rollup-linux-x64-gnu\": \"4.24.0\",\n        \"@rollup/rollup-linux-x64-musl\": \"4.24.0\",\n        \"@rollup/rollup-win32-arm64-msvc\": \"4.24.0\",\n        \"@rollup/rollup-win32-ia32-msvc\": \"4.24.0\",\n        \"@rollup/rollup-win32-x64-msvc\": \"4.24.0\",\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/run-async\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz\",\n      \"integrity\": \"sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"peer\": true,\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"6.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz\",\n      \"integrity\": \"sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"npm\": \">=2.0.0\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"node_modules/safe-json-parse\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-json-parse/-/safe-json-parse-1.0.1.tgz\",\n      \"integrity\": \"sha512-o0JmTu17WGUaUOHa1l0FPGXKBfijbxK6qoHzlkihsDXxzBHvJcA7zgviKR92Xs841rX9pK16unfphLq0/KqX7A==\",\n      \"dev\": true\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"node_modules/sass\": {\n      \"version\": \"1.79.5\",\n      \"resolved\": \"https://registry.npmjs.org/sass/-/sass-1.79.5.tgz\",\n      \"integrity\": \"sha512-W1h5kp6bdhqFh2tk3DsI771MoEJjvrSY/2ihJRJS4pjIyfJCw0nTsxqhnrUzaLMOJjFchj8rOvraI/YUVjtx5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@parcel/watcher\": \"^2.4.1\",\n        \"chokidar\": \"^4.0.0\",\n        \"immutable\": \"^4.0.0\",\n        \"source-map-js\": \">=0.6.2 <2.0.0\"\n      },\n      \"bin\": {\n        \"sass\": \"sass.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/sass/node_modules/chokidar\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-4.0.1.tgz\",\n      \"integrity\": \"sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readdirp\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/sass/node_modules/readdirp\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-4.0.2.tgz\",\n      \"integrity\": \"sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"type\": \"individual\",\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/semver-greatest-satisfied-range\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver-greatest-satisfied-range/-/semver-greatest-satisfied-range-2.0.0.tgz\",\n      \"integrity\": \"sha512-lH3f6kMbwyANB7HuOWRMlLCa2itaCrZJ+SAqqkSZrZKO/cAsk2EOyaKHUtNkVLFyFW9pct22SFesFp3Z7zpA0g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sver\": \"^1.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/send/node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/send/node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/send/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"dev\": true\n    },\n    \"node_modules/send/node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/send/node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"dev\": true\n    },\n    \"node_modules/send/node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/serve-index\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz\",\n      \"integrity\": \"sha512-pXHfKNP4qujrtteMrSBb0rc8HJ9Ms/GrXwcUtUtD5s4ewDJI8bT3Cz2zTVRMKtri49pLx2e0Ya8ziP5Ya2pZZw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"accepts\": \"~1.3.4\",\n        \"batch\": \"0.6.1\",\n        \"debug\": \"2.6.9\",\n        \"escape-html\": \"~1.0.3\",\n        \"http-errors\": \"~1.6.2\",\n        \"mime-types\": \"~2.1.17\",\n        \"parseurl\": \"~1.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/serve-index/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/serve-index/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"dev\": true\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/serve-static/node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\n      \"integrity\": \"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\",\n      \"dev\": true\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"node_modules/slice-ansi\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz\",\n      \"integrity\": \"sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.0\",\n        \"astral-regex\": \"^1.0.0\",\n        \"is-fullwidth-code-point\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/slice-ansi/node_modules/is-fullwidth-code-point\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n      \"integrity\": \"sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/smob\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/smob/-/smob-1.4.1.tgz\",\n      \"integrity\": \"sha512-9LK+E7Hv5R9u4g4C3p+jjLstaLe11MDsL21UpYaCNmapvMkYhqCV4A/f/3gyH8QjMyh6l68q9xC85vihY9ahMQ==\",\n      \"dev\": true\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.3.tgz\",\n      \"integrity\": \"sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks-proxy-agent\": {\n      \"version\": \"8.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.4.tgz\",\n      \"integrity\": \"sha512-GNAq/eg8Udq2x0eNiFkr9gRg5bA7PXEWagQdeRX4cPSG+X/8V38v637gim9bjFptMk1QWsCTr0ttrJEiXbNnRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.1\",\n        \"debug\": \"^4.3.4\",\n        \"socks\": \"^2.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.0.2.tgz\",\n      \"integrity\": \"sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.21\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz\",\n      \"integrity\": \"sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/sourcemap-codec\": {\n      \"version\": \"1.4.8\",\n      \"resolved\": \"https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz\",\n      \"integrity\": \"sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==\",\n      \"deprecated\": \"Please use @jridgewell/sourcemap-codec instead\",\n      \"dev\": true\n    },\n    \"node_modules/sparkles\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/sparkles/-/sparkles-2.1.0.tgz\",\n      \"integrity\": \"sha512-r7iW1bDw8R/cFifrD3JnQJX0K1jqT0kprL48BiBpLZLJPmAm34zsVBsK5lc7HirZYZqMW65dOXZgbAGt/I6frg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\",\n      \"dev\": true\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz\",\n      \"integrity\": \"sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/stream-composer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/stream-composer/-/stream-composer-1.0.2.tgz\",\n      \"integrity\": \"sha512-bnBselmwfX5K10AH6L4c8+S5lgZMWI7ZYrz2rvYjCPB2DIMC4Ig8OpxGpNJSxRZ58oti7y1IcNvjBAz9vW5m4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"streamx\": \"^2.13.2\"\n      }\n    },\n    \"node_modules/stream-exhaust\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/stream-exhaust/-/stream-exhaust-1.0.2.tgz\",\n      \"integrity\": \"sha512-b/qaq/GlBK5xaq1yrK9/zFcyRSTNxmcZwFLGSTG0mXgZl/4Z6GgiyYOXOvY7N3eEvFRAG1bkDRz5EPGSvPYQlw==\",\n      \"dev\": true\n    },\n    \"node_modules/streamx\": {\n      \"version\": \"2.20.1\",\n      \"resolved\": \"https://registry.npmjs.org/streamx/-/streamx-2.20.1.tgz\",\n      \"integrity\": \"sha512-uTa0mU6WUC65iUvzKH4X9hEdvSW7rbPxPtwfWiLMSj3qTdQbAiUboZTxauKfpFuGIGa1C2BYijZ7wgdUXICJhA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-fifo\": \"^1.3.2\",\n        \"queue-tick\": \"^1.0.1\",\n        \"text-decoder\": \"^1.1.0\"\n      },\n      \"optionalDependencies\": {\n        \"bare-events\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"node_modules/string-template\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/string-template/-/string-template-0.2.1.tgz\",\n      \"integrity\": \"sha512-Yptehjogou2xm4UJbxJ4CxgZx12HBfeystp0y3x7s4Dj32ltVVG1Gg8YhKjHZkHicuKpZX/ffilA8505VbUbpw==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/sver\": {\n      \"version\": \"1.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/sver/-/sver-1.8.4.tgz\",\n      \"integrity\": \"sha512-71o1zfzyawLfIWBOmw8brleKyvnbn73oVHNCsu51uPMz/HWiKkkXsI31JjHW5zqXEqnPYkIiHd8ZmL7FCimLEA==\",\n      \"dev\": true,\n      \"optionalDependencies\": {\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"node_modules/table\": {\n      \"version\": \"5.4.6\",\n      \"resolved\": \"https://registry.npmjs.org/table/-/table-5.4.6.tgz\",\n      \"integrity\": \"sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.10.2\",\n        \"lodash\": \"^4.17.14\",\n        \"slice-ansi\": \"^2.1.0\",\n        \"string-width\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/table/node_modules/ansi-regex\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.1.tgz\",\n      \"integrity\": \"sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/table/node_modules/emoji-regex\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz\",\n      \"integrity\": \"sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==\",\n      \"dev\": true\n    },\n    \"node_modules/table/node_modules/is-fullwidth-code-point\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n      \"integrity\": \"sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/table/node_modules/string-width\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz\",\n      \"integrity\": \"sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^7.0.1\",\n        \"is-fullwidth-code-point\": \"^2.0.0\",\n        \"strip-ansi\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/table/node_modules/strip-ansi\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz\",\n      \"integrity\": \"sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/tar-fs\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-3.0.6.tgz\",\n      \"integrity\": \"sha512-iokBDQQkUyeXhgPYaZxmczGPhnhXZ0CmrqI+MOb/WFGS9DW5wnfrLgtjUJBvz50vQ3qfRwJ62QVoCFu8mPVu5w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\",\n        \"tar-stream\": \"^3.1.5\"\n      },\n      \"optionalDependencies\": {\n        \"bare-fs\": \"^2.1.1\",\n        \"bare-path\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/tar-stream\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz\",\n      \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\",\n        \"fast-fifo\": \"^1.2.0\",\n        \"streamx\": \"^2.15.0\"\n      }\n    },\n    \"node_modules/teex\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/teex/-/teex-1.0.1.tgz\",\n      \"integrity\": \"sha512-eYE6iEI62Ni1H8oIa7KlDU6uQBtqr4Eajni3wX7rpfXD8ysFx8z0+dri+KWEPWpBsxXfxu58x/0jvTVT1ekOSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"streamx\": \"^2.12.5\"\n      }\n    },\n    \"node_modules/terser\": {\n      \"version\": \"5.22.0\",\n      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.22.0.tgz\",\n      \"integrity\": \"sha512-hHZVLgRA2z4NWcN6aS5rQDc+7Dcy58HOf2zbYwmFcQ+ua3h6eEFf5lIDKTzbWwlazPyOZsFQO8V80/IjVNExEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/source-map\": \"^0.3.3\",\n        \"acorn\": \"^8.8.2\",\n        \"commander\": \"^2.20.0\",\n        \"source-map-support\": \"~0.5.20\"\n      },\n      \"bin\": {\n        \"terser\": \"bin/terser\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/terser/node_modules/commander\": {\n      \"version\": \"2.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n      \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/text-decoder\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-decoder/-/text-decoder-1.2.0.tgz\",\n      \"integrity\": \"sha512-n1yg1mOj9DNpk3NeZOx7T6jchTbyJS3i3cucbNN6FcdPriMZx7NsgrGpWWdWZZGxD7ES1XB+3uoqHMgOKaN+fg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"dev\": true\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\",\n      \"dev\": true\n    },\n    \"node_modules/through2\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-4.0.2.tgz\",\n      \"integrity\": \"sha512-iOqSav00cVxEEICeD7TjLB1sueEL+81Wpzp2bY17uZjZN0pWZPuo4suZ/61VujxmqSGFfgOcNuTZ85QJwNZQpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readable-stream\": \"3\"\n      }\n    },\n    \"node_modules/through2/node_modules/readable-stream\": {\n      \"version\": \"3.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz\",\n      \"integrity\": \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"string_decoder\": \"^1.1.1\",\n        \"util-deprecate\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/time-stamp\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/time-stamp/-/time-stamp-1.1.0.tgz\",\n      \"integrity\": \"sha512-gLCeArryy2yNTRzTGKbZbloctj64jkZ57hj5zdraXue6aFgd6PmvVtEyiUU+hvU0v7q08oVv8r8ev0tRo6bvgw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/tiny-glob\": {\n      \"version\": \"0.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-glob/-/tiny-glob-0.2.9.tgz\",\n      \"integrity\": \"sha512-g/55ssRPUjShh+xkfx9UPDXqhckHEsHr4Vd9zX55oSdGZc/MD0m3sferOkwWtp98bv+kcVfEHtRJgBVJzelrzg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"globalyzer\": \"0.1.0\",\n        \"globrex\": \"^0.1.2\"\n      }\n    },\n    \"node_modules/tiny-lr\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-lr/-/tiny-lr-1.1.1.tgz\",\n      \"integrity\": \"sha512-44yhA3tsaRoMOjQQ+5v5mVdqef+kH6Qze9jTpqtVufgYjYt08zyZAwNwwVBj3i1rJMnR52IxOW0LK0vBzgAkuA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"body\": \"^5.1.0\",\n        \"debug\": \"^3.1.0\",\n        \"faye-websocket\": \"~0.10.0\",\n        \"livereload-js\": \"^2.3.0\",\n        \"object-assign\": \"^4.1.0\",\n        \"qs\": \"^6.4.0\"\n      }\n    },\n    \"node_modules/tiny-lr/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz\",\n      \"integrity\": \"sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"os-tmpdir\": \"~1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/to-fast-properties\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz\",\n      \"integrity\": \"sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/to-through\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-through/-/to-through-3.0.0.tgz\",\n      \"integrity\": \"sha512-y8MN937s/HVhEoBU1SxfHC+wxCHkV1a9gW8eAdTadYh/bGyesZIVcbjI+mSpFbSVwQici/XjBjuUyri1dnXwBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"streamx\": \"^2.12.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz\",\n      \"integrity\": \"sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-query-selector\": {\n      \"version\": \"2.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/typed-query-selector/-/typed-query-selector-2.12.0.tgz\",\n      \"integrity\": \"sha512-SbklCd1F0EiZOyPiW192rrHZzZ5sBijB6xM+cpmrwDqObvdtunOHHIk9fCGsoK5JVIYXoyEp4iEdE3upFH3PAg==\",\n      \"dev\": true\n    },\n    \"node_modules/unbzip2-stream\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz\",\n      \"integrity\": \"sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer\": \"^5.2.1\",\n        \"through\": \"^2.3.8\"\n      }\n    },\n    \"node_modules/unc-path-regex\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz\",\n      \"integrity\": \"sha512-eXL4nmJT7oCpkZsHZUOJo8hcX3GbsiDOa0Qu9F646fi8dT3XuSVopVqAcEiVzSKKH7UoDti23wNX3qGFxcW5Qg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/undertaker\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/undertaker/-/undertaker-2.0.0.tgz\",\n      \"integrity\": \"sha512-tO/bf30wBbTsJ7go80j0RzA2rcwX6o7XPBpeFcb+jzoeb4pfMM2zUeSDIkY1AWqeZabWxaQZ/h8N9t35QKDLPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bach\": \"^2.0.1\",\n        \"fast-levenshtein\": \"^3.0.0\",\n        \"last-run\": \"^2.0.0\",\n        \"undertaker-registry\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/undertaker-registry\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/undertaker-registry/-/undertaker-registry-2.0.0.tgz\",\n      \"integrity\": \"sha512-+hhVICbnp+rlzZMgxXenpvTxpuvA67Bfgtt+O9WOE5jo7w/dyiF1VmoZVIHvP2EkUjsyKyTwYKlLhA+j47m1Ew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/undertaker/node_modules/fast-levenshtein\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-3.0.0.tgz\",\n      \"integrity\": \"sha512-hKKNajm46uNmTlhHSyZkmToAc56uZJwYq7yrciZjqOxnlfQwERDQJmHPUp7m1m9wx8vgOe8IaCKZ5Kv2k1DdCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fastest-levenshtein\": \"^1.0.7\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"6.19.8\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz\",\n      \"integrity\": \"sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/unicode-canonical-property-names-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"unicode-canonical-property-names-ecmascript\": \"^2.0.0\",\n        \"unicode-property-aliases-ecmascript\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-value-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-property-aliases-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz\",\n      \"integrity\": \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.13.tgz\",\n      \"integrity\": \"sha512-xebP81SNcPuNpPP3uzeW1NYXxI3rxyJzF3pD6sH4jE7o/IX+WtSpwnVU+qIsDPyk0d3hmFQ7mjqc6AtV604hbg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.1.1\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/urlpattern-polyfill\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz\",\n      \"integrity\": \"sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==\",\n      \"dev\": true\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n      \"dev\": true\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/v8-compile-cache\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.4.0.tgz\",\n      \"integrity\": \"sha512-ocyWc3bAHBB/guyqJQVI5o4BZkPhznPYUG2ea80Gond/BgNWpap8TOmLSeeQG7bnh2KMISxskdADG59j7zruhw==\",\n      \"dev\": true\n    },\n    \"node_modules/v8flags\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/v8flags/-/v8flags-4.0.1.tgz\",\n      \"integrity\": \"sha512-fcRLaS4H/hrZk9hYwbdRM35D0U8IYMfEClhXxCivOojl+yTRAZH3Zy2sSy6qVCiGbV9YAtPssP6jaChqC9vPCg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/value-or-function\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/value-or-function/-/value-or-function-4.0.0.tgz\",\n      \"integrity\": \"sha512-aeVK81SIuT6aMJfNo9Vte8Dw0/FZINGBV8BfCraGtqVxIeLAEhJyoWs8SmvRVmXfGss2PmmOwZCuBPbZR+IYWg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.13.0\"\n      }\n    },\n    \"node_modules/vinyl\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl/-/vinyl-3.0.0.tgz\",\n      \"integrity\": \"sha512-rC2VRfAVVCGEgjnxHUnpIVh3AGuk62rP3tqVrn+yab0YH7UULisC085+NYH+mnqf3Wx4SpSi1RQMwudL89N03g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clone\": \"^2.1.2\",\n        \"clone-stats\": \"^1.0.0\",\n        \"remove-trailing-separator\": \"^1.1.0\",\n        \"replace-ext\": \"^2.0.0\",\n        \"teex\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/vinyl-contents\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl-contents/-/vinyl-contents-2.0.0.tgz\",\n      \"integrity\": \"sha512-cHq6NnGyi2pZ7xwdHSW1v4Jfnho4TEGtxZHw01cmnc8+i7jgR6bRnED/LbrKan/Q7CvVLbnvA5OepnhbpjBZ5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bl\": \"^5.0.0\",\n        \"vinyl\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/vinyl-fs\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-4.0.0.tgz\",\n      \"integrity\": \"sha512-7GbgBnYfaquMk3Qu9g22x000vbYkOex32930rBnc3qByw6HfMEAoELjCjoJv4HuEQxHAurT+nvMHm6MnJllFLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs-mkdirp-stream\": \"^2.0.1\",\n        \"glob-stream\": \"^8.0.0\",\n        \"graceful-fs\": \"^4.2.11\",\n        \"iconv-lite\": \"^0.6.3\",\n        \"is-valid-glob\": \"^1.0.0\",\n        \"lead\": \"^4.0.0\",\n        \"normalize-path\": \"3.0.0\",\n        \"resolve-options\": \"^2.0.0\",\n        \"stream-composer\": \"^1.0.2\",\n        \"streamx\": \"^2.14.0\",\n        \"to-through\": \"^3.0.0\",\n        \"value-or-function\": \"^4.0.0\",\n        \"vinyl\": \"^3.0.0\",\n        \"vinyl-sourcemap\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/vinyl-fs/node_modules/iconv-lite\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz\",\n      \"integrity\": \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/vinyl-sourcemap\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl-sourcemap/-/vinyl-sourcemap-2.0.0.tgz\",\n      \"integrity\": \"sha512-BAEvWxbBUXvlNoFQVFVHpybBbjW1r03WhohJzJDSfgrrK5xVYIDTan6xN14DlyImShgDRv2gl9qhM6irVMsV0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"convert-source-map\": \"^2.0.0\",\n        \"graceful-fs\": \"^4.2.10\",\n        \"now-and-later\": \"^3.0.0\",\n        \"streamx\": \"^2.12.5\",\n        \"vinyl\": \"^3.0.0\",\n        \"vinyl-contents\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/vinyl-sourcemaps-apply\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz\",\n      \"integrity\": \"sha512-+oDh3KYZBoZC8hfocrbrxbLUeaYtQK7J5WU5Br9VqWqmCll3tFJqKp97GC9GmMsVIL0qnx2DgEDVxdo5EZ5sSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"source-map\": \"^0.5.1\"\n      }\n    },\n    \"node_modules/vinyl-sourcemaps-apply/node_modules/source-map\": {\n      \"version\": \"0.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz\",\n      \"integrity\": \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/websocket-driver\": {\n      \"version\": \"0.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz\",\n      \"integrity\": \"sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"http-parser-js\": \">=0.5.1\",\n        \"safe-buffer\": \">=5.1.0\",\n        \"websocket-extensions\": \">=0.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/websocket-extensions\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz\",\n      \"integrity\": \"sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/word-wrap\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n      \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/write\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/write/-/write-1.0.3.tgz\",\n      \"integrity\": \"sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mkdirp\": \"^0.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.18.0.tgz\",\n      \"integrity\": \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \">=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/yazl\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/yazl/-/yazl-2.5.1.tgz\",\n      \"integrity\": \"sha512-phENi2PLiHnHb6QBVot+dJnaAZ0xosj7p3fWl+znIjBDlnMI2PsZCJZ306BPTFOaHf5qdDEI8x5qFrSOBN5vrw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/zod\": {\n      \"version\": \"3.23.8\",\n      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.23.8.tgz\",\n      \"integrity\": \"sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/colinhacks\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.4,
          "content": "{\n  \"name\": \"reveal.js\",\n  \"version\": \"5.1.0\",\n  \"description\": \"The HTML Presentation Framework\",\n  \"homepage\": \"https://revealjs.com\",\n  \"subdomain\": \"revealjs\",\n  \"main\": \"dist/reveal.js\",\n  \"module\": \"dist/reveal.esm.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"test\": \"gulp test\",\n    \"start\": \"gulp serve\",\n    \"build\": \"gulp build\"\n  },\n  \"author\": {\n    \"name\": \"Hakim El Hattab\",\n    \"email\": \"hakim.elhattab@gmail.com\",\n    \"web\": \"https://hakim.se\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/hakimel/reveal.js.git\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"keywords\": [\n    \"reveal\",\n    \"slides\",\n    \"presentation\"\n  ],\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.23.2\",\n    \"@babel/eslint-parser\": \"^7.22.15\",\n    \"@babel/preset-env\": \"^7.23.2\",\n    \"@rollup/plugin-babel\": \"^6.0.4\",\n    \"@rollup/plugin-commonjs\": \"^25.0.7\",\n    \"@rollup/plugin-node-resolve\": \"^15.2.3\",\n    \"@rollup/plugin-terser\": \"^0.4.4\",\n    \"babel-plugin-transform-html-import-to-string\": \"2.0.0\",\n    \"colors\": \"^1.4.0\",\n    \"core-js\": \"^3.33.1\",\n    \"fitty\": \"^2.3.7\",\n    \"glob\": \"^10.3.10\",\n    \"gulp\": \"^5.0.0\",\n    \"gulp-autoprefixer\": \"^8.0.0\",\n    \"gulp-clean-css\": \"^4.3.0\",\n    \"gulp-connect\": \"^5.7.0\",\n    \"gulp-eslint\": \"^6.0.0\",\n    \"gulp-header-comment\": \"^0.10.0\",\n    \"gulp-zip\": \"^5.1.0\",\n    \"highlight.js\": \"^11.9.0\",\n    \"marked\": \"^4.3.0\",\n    \"node-qunit-puppeteer\": \"^2.2.0\",\n    \"through2\": \"^4.0.2\",\n    \"qunit\": \"^2.22.0\",\n    \"rollup\": \"^4.1.5\",\n    \"sass\": \"^1.79.4\",\n    \"yargs\": \"^17.7.2\"\n  },\n  \"overrides\": {\n    \"gulp-connect\": {\n      \"send\": \"0.19.0\"\n    },\n    \"gulp-header-comment\": {\n      \"moment\": \"2.30.1\"\n    }\n  },\n  \"browserslist\": \"> 2%, not dead\",\n  \"eslintConfig\": {\n    \"env\": {\n      \"browser\": true,\n      \"es6\": true\n    },\n    \"parser\": \"@babel/eslint-parser\",\n    \"parserOptions\": {\n      \"sourceType\": \"module\",\n      \"allowImportExportEverywhere\": true,\n      \"requireConfigFile\": false\n    },\n    \"globals\": {\n      \"module\": false,\n      \"console\": false,\n      \"unescape\": false,\n      \"define\": false,\n      \"exports\": false\n    },\n    \"rules\": {\n      \"curly\": 0,\n      \"eqeqeq\": 2,\n      \"wrap-iife\": [\n        2,\n        \"any\"\n      ],\n      \"no-use-before-define\": [\n        2,\n        {\n          \"functions\": false\n        }\n      ],\n      \"new-cap\": 2,\n      \"no-caller\": 2,\n      \"dot-notation\": 0,\n      \"no-eq-null\": 2,\n      \"no-unused-expressions\": 0\n    }\n  }\n}\n"
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    },
    {
      "nameWithOwner": "swiftlang/swift",
      "stars": 67864,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.06,
          "content": "BasedOnStyle: LLVM\nAlwaysBreakTemplateDeclarations: true\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.29,
          "content": "# See https://clang.llvm.org/extra/clang-tidy/checks/list.html\n\nChecks: '\n-*,\nllvm-*,\nmisc-*,\n-misc-const-correctness,\n-misc-unused-parameters,\n-misc-non-private-member-variables-in-classes,\n-misc-no-recursion,\n-misc-use-anonymous-namespace,\n-readability-qualified-auto,\n-llvm-qualified-auto\n'\n"
        },
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 1.47,
          "content": ";;; Directory Local Variables\n;;; For more information see (info \"(emacs) Directory Variables\")\n\n((nil\n  (eval let*\n        ((x (dir-locals-find-file default-directory))\n         (this-directory (if (listp x) (car x) (file-name-directory x))))\n        (unless (or (featurep 'swift-project-settings) \n                    (and (fboundp 'tramp-tramp-file-p)\n                         (tramp-tramp-file-p this-directory)))\n          (add-to-list 'load-path\n                       (concat this-directory \"utils\")\n                       :append)\n          (defvar swift-project-directory)\n          (let ((swift-project-directory this-directory))\n            (require 'swift-project-settings)))\n        (set (make-local-variable 'swift-project-directory)\n         this-directory)\n        )\n  (fill-column . 80)\n  (c-file-style . \"swift\"))\n (c++-mode\n  (whitespace-style face lines indentation:space)\n  (flycheck-clang-language-standard . \"c++14\"))\n (c-mode\n  (whitespace-style face lines indentation:space))\n (objc-mode\n  (whitespace-style face lines indentation:space))\n (prog-mode\n  (eval add-hook 'prog-mode-hook\n        (lambda nil\n          (whitespace-mode 1))\n        (not :APPEND)\n        :BUFFER-LOCAL))\n (swift-mode\n  (swift-find-executable-fn . swift-project-executable-find)\n  (swift-syntax-check-fn . swift-project-swift-syntax-check)\n  (whitespace-style face lines indentation:space)\n  (swift-basic-offset . 2)\n  (tab-always-indent . t)))\n\n\n\n;; Local Variables:\n;; eval: (whitespace-mode -1)\n;; End:\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.13,
          "content": "# editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 1.91,
          "content": "[flake8]\n\nfilename =\n    *.py,\n\n    ./benchmark/scripts/Benchmark_Driver,\n    ./benchmark/scripts/Benchmark_DTrace.in,\n    ./benchmark/scripts/Benchmark_GuardMalloc.in,\n    ./benchmark/scripts/Benchmark_QuickCheck.in,\n    ./benchmark/scripts/Benchmark_RuntimeLeaksRunner.in,\n    ./benchmark/scripts/run_smoke_bench,\n\n    ./docs/scripts/ns-html2rst,\n\n    ./test/Driver/Inputs/fake-toolchain/ld,\n\n    ./utils/80+-check,\n    ./utils/backtrace-check,\n    ./utils/build-script,\n    ./utils/check-incremental,\n    ./utils/coverage/coverage-build-db,\n    ./utils/coverage/coverage-generate-data,\n    ./utils/coverage/coverage-query-db,\n    ./utils/coverage/coverage-touch-tests,\n    ./utils/dev-scripts/blockifyasm,\n    ./utils/dev-scripts/split-cmdline,\n    ./utils/gyb,\n    ./utils/line-directive,\n    ./utils/PathSanitizingFileCheck,\n    ./utils/recursive-lipo,\n    ./utils/round-trip-syntax-test,\n    ./utils/rth,\n    ./utils/run-test,\n    ./utils/scale-test,\n    ./utils/submit-benchmark-results,\n    ./utils/swift_build_support/tests/mock-distcc,\n    ./utils/symbolicate-linux-fatal,\n    ./utils/update-checkout,\n    ./utils/viewcfg,\n\n    # TODO: We should be linting the lit configs.\n    #lit.cfg,\n\nexclude =\n    .git,\n    __pycache__,\n    .build,\n\nignore =\n    # The black tool treats slices consistently, the E203 warning is not PEP8\n    # compliant (https://github.com/psf/black#slices).\n    E203,\n\n    # Line breaks before binary operators are not explicitly disallowed in\n    # PEP8, rather it should be consistent throughout the project. The black\n    # tool puts them on new lines which is to be considered a best practice\n    # in the future.\n    W503,\n\n    # Similarly ignore line break after binary operators.\n    W504,\n\n    # TODO: Ignore Bugbear lints for now, but we should enable these in the\n    # future.\n    B,\n\n# 10% larger than the standard 80 character limit. Conforms to the black\n# standard and Bugbear's B950.\nmax-line-length = 88\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.09,
          "content": "*.swift.gyb linguist-language=Swift\n*.cpp.gyb linguist-language=C++\n*.bat text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.71,
          "content": "#==============================================================================#\n# This file specifies intentionally untracked files that git should ignore.\n# See: http://www.kernel.org/pub/software/scm/git/docs/gitignore.html\n#\n# This file is intentionally different from the output of `git svn show-ignore`,\n# as most of those are useless.\n#==============================================================================#\n\n#==============================================================================#\n# File extensions to be ignored anywhere in the tree.\n#==============================================================================#\n# Temp files created by most text editors.\n*~\n# Merge files created by git.\n*.orig\n# Byte compiled Python modules.\n*.pyc\n# vim swap files\n.*.sw[a-z]\n.sw?\n\n#==============================================================================#\n# Explicit files to ignore (only matches one).\n#==============================================================================#\nBrewfile.lock.json\ncscope.files\ncscope.out\n.vimrc\ntags\n\n#==============================================================================#\n# Directories to ignore (do not add trailing '/'s, they skip symlinks).\n#==============================================================================#\n# Generated docs\ndocs/_build\n\n# Finder metadata\n.DS_Store\n\n# Visual Studio metadata\n.vs\n\n# Visual Studio Code Configurations\n.vscode\n\n# JetBrains\n.idea\n\n# clangd\n.cache\n.clangd\n\n# SwiftPM\n.build\n.index-build\n.swiftpm\n\n#==============================================================================#\n# Ignore CMake temporary files\n#==============================================================================#\nCMakeCache.txt\nCMakeFiles\n.atom-build.json\n\n# Generated by JetBrains IDEs\ncmake-build-*\n\n#==============================================================================#\n# Ignore compile database\n#==============================================================================#\ncompile_commands.json\n\n#==============================================================================#\n# Ignore generated GYB files until we fix the workaround on Windows\n#==============================================================================#\n8\n4\nSortedCFDatabase.def\nhtmlcov\n.coverage\n/benchmark/scripts/Benchmark_Driverc\n\n#==============================================================================#\n# Ignore copied Swift Stdlib files while migrating stdlib\n#==============================================================================#\nRuntimes/**/*.swift\nRuntimes/**/*.h\nRuntimes/**/*.cpp\nRuntimes/**/*.c\nRuntimes/**/*.m\nRuntimes/**/*.mm\nRuntimes/**/*.def\nRuntimes/**/*.gyb\nRuntimes/**/*.apinotes\nRuntimes/**/*.yaml\nRuntimes/**/*.inc\nRuntimes/**/*.json\nRuntimes/**/*.modulemap\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 8.34,
          "content": "Adrian-Constantin Popescu <epsilon.gamma@gmail.com> <adrian-constantin.popescu@outlook.com>\nAlex Blewitt <alblue@apple.com> <alex.blewitt@gmail.com>\nAlex Hoppen <ahoppen@apple.com> <alex@alexhoppen.de>\nAlex Hoppen <ahoppen@apple.com> <alex@ateamer.de>\nAlexis Beingessner <abeingessner@apple.com> <a.beingessner@gmail.com>\nAlper Çugun <github@alper.nl> <alper@users.noreply.github.com>\nAmr Aboelela <amraboelela@gmail.com> <amraboelela@users.noreply.github.com>\nAnkit Aggarwal <ankit_aggarwal@apple.com> <ankit.spd@gmail.com>\nArgyrios Kyrtzidis <kyrtzidis@apple.com> <akyrtzi@gmail.com>\nArsen Gasparyan <to.arsen.gasparyan@gmail.com> <frootloops@users.noreply.github.com>\nAshley Garland <acgarland@apple.com> <dfarler@apple.com>\nBecca Royal-Gordon <beccadax@apple.com> <becca@beccadax.com>\nBecca Royal-Gordon <beccadax@apple.com> <brent@brentdax.com>\nBecca Royal-Gordon <beccadax@apple.com> <brentdax@apple.com>\nBecca Royal-Gordon <beccadax@apple.com> <broyalgordon@apple.com>\nBen Cohen <ben_cohen@apple.com>\nBen Cohen <ben_cohen@apple.com> <airspeedswift@users.noreply.github.com>\nBen Cohen <ben_cohen@apple.com> <ben@airspeedvelocity.net>\nBen Langmuir <blangmuir@apple.com> <ben.langmuir@gmail.com>\nBrian Croom <bcroom@apple.com> <brian.s.croom@gmail.com>\nBrian Gesiak <bgesiak@fb.com> <modocache@gmail.com>\nBryan Chan <bryan.chan@ca.ibm.com> <bryanpkc@gmail.com>\nCalvin Hill <mr_j.c.h@hotmail.com> <return@users.noreply.github.com>\nChris Bieneman <beanz@apple.com>\nChris Bieneman <beanz@apple.com> <cbieneman@apple.com>\nChris Lattner <clattner@nondot.org> <clattner@apple.com>\nChris Lattner <clattner@nondot.org> <lattner@users.noreply.github.com>\nChris Lattner <clattner@nondot.org> <sabre@iMac.local>\nChris Williams <cwilliams@fitbit.com> <ultramiraculous@users.noreply.github.com>\ncodester <sahil.profile@gmail.com> codestergit <sahil.profile@gmail.com>\nDan Liew <dliew@apple.com> <36706441+danliew-apple@users.noreply.github.com>\nDaniel Duan <daniel@duan.org> <danmarner@gmail.com>\nDante Broggi <34220985+Dante-Broggi@users.noreply.github.com>\nDave <davesweeris@mac.com>\nDave Abrahams <dabrahams@apple.com> <dave@boostpro.com>\nDave Abrahams <dabrahams@apple.com> <dave@Skree.local>\nDave Abrahams <dabrahams@apple.com> <dave@Wingy.local>\nDave Lee <davelee.com@gmail.com> <davelee@lyft.com>\nDavid Rönnqvist <david.ronnqvist@gmail.com>\nDavid Rönnqvist <david.ronnqvist@gmail.com> <david.ronnqvist@skype.net>\nDavid Ungar <dungar@apple.com> <ungar@mac.com>\nDavid Zarzycki <dave@znu.io> <zarzycki@apple.com>\nDavid Zarzycki <dave@znu.io> <zarzycki@icloud.com>\nDavid Zarzycki <dave@znu.io> <zarzycki@mac.com>\nDavide Italiano <ditaliano@apple.com> <dcci@users.noreply.github.com>\nDavide Italiano <ditaliano@apple.com> <dccitaliano@gmail.com>\nDmitri Gribenko <gribozavr@gmail.com> <dgribenko@apple.com>\nDoug Coleman <doug_coleman@apple.com> <doug.coleman@gmail.com>\nEnrico Granata <egranata@apple.com> <granata.enrico@gmail.com>\nErik Eckstein <eeckstein@apple.com>\nErik Verbruggen <erik.verbruggen@me.com> <erikjv@users.noreply.github.com>\nEwa Matejska <ematejska@apple.com>\nEwa Matejska <ematejska@apple.com> <ematejska@Ewas-MacBook-Pro.local>\nEwa Matejska <ematejska@apple.com> <ewamatejska@Ewas-iMac.local>\nFlorent Bruneau <florent.bruneau@intersec.com> <florent.bruneau_github@m4x.org>\nFrancis Ricci <fjricci@fb.com> <francisjricci@gmail.com>\nGauravDS <er.gauravds@gmail.com> <gaurav.sharma@punchh.com>\nGraydon Hoare <ghoare@apple.com> <graydon@users.noreply.github.com>\nGreg Parker <gparker@apple.com> <gparker-github@sealiesoftware.com>\nGreg Titus <gregomni@gmail.com>\nGuillaume Lessard <dhtnstff@gmail.com> <glessard@users.noreply.github.com>\nHamish Knight <hamish_knight@apple.com> <hamish2knight@gmail.com>\nHamish Knight <hamish_knight@apple.com> <hamish_github@mediocremail.com>\nHan Sangjin <tinysun@jssolution.co.kr> <tinysun.net@gmail.com>\nHarlan Haskins <harlan@apple.com> <harlan@harlanhaskins.com>\nHarlan Haskins <harlan@apple.com> <hbh@google.com>\nHitster GTD <hitstergtd@users.noreply.github.com>\nHuon Wilson <huon@apple.com> <dbau.pp+github@gmail.com>\nIngmar Stein <IngmarStein@users.noreply.github.com>\nItai Ferber <iferber@apple.com> <itai@itaiferber.net>\nJacob Bandes-Storch <jacob@bandes-stor.ch> <jacob@bandes-storch.net>\nJacob Mizraji <jmizraji@apple.com> <jacobmizraji@gmail.com>\nJanosch Hildebrand <jnosh@jnosh.com> <jnosh+git@jnosh.com>\nJanosch Hildebrand <jnosh@jnosh.com> <jnosh+github@jnosh.com>\nJavier Soto <jsbustos@twitch.tv> <javier.api@gmail.com>\nJavier Soto <jsbustos@twitch.tv> <javiers@twitter.com>\nJoe <joe@iachieved.it>\nJoe <joewillsher@icloud.com>\njoe DeCapo <joe@polka.cat>\nJoe Groff <jgroff@apple.com> <arcata@gmail.com>\nJoe Shajrawi <shajrawi@apple.com> <joeshajrawi@iMac-2.local>\nJoe Shajrawi <shajrawi@apple.com> <joeshajrawi@Joes-iMac-Pro.local>\nJohannes Weiß <johannesweiss@apple.com> <github@tux4u.de>\nJohn Regner <john@johnregner.com> <regnerjr@gmail.com>\nKaroy Lorentey <klorentey@apple.com> <karoly@lorentey.hu>\nKavon Farvardin <kfarvardin@apple.com> <kavon@farvard.in>\nKeith Smiley <k@keith.so> <keithbsmiley@gmail.com>\nKevin Saldaña <ksaldana1@gmail.com>\nKim Topley <ktopley@apple.com>\nKosuke Ogawa <ogawa_kousuke@aratana.jp> <koogawa.app@gmail.com>\nKuba Mracek <mracek@apple.com>\nKuba Mracek <mracek@apple.com> <jbrecka@apple.com>\nLily Ballard <lily@sb.org> <kevin.ballard@postmates.com>\nLily Ballard <lily@sb.org> <kevin@sb.org>\nLuiz Fernando Silva <luizinho_mack@yahoo.com.br>\nLuqman Aden <luqman@apple.com> <luqman_aden@apple.com>\nMarcelo Fabri <me@marcelofabri.com> <marcelofabri@users.noreply.github.com>\nMark Lacey <mark.lacey@apple.com> <rudkx@icloud.com>\nMark Lacey <mark.lacey@apple.com> <rudkx@users.noreply.github.com>\nMatt Rajca <matt.rajca@me.com> <mattrajca@users.noreply.github.com>\nMax Moiseev <moiseev@apple.com>\nMax Moiseev <moiseev@apple.com> <maxim.moiseev@gmail.com>\nMax Moiseev <moiseev@apple.com> <moiseev@users.noreply.github.com>\nMaxwell Swadling <maxs@apple.com> <maxwellswadling@gmail.com>\nMaxwell Swadling <maxs@apple.com> <mswadling@apple.com>\nMayur Raiturkar <mayur@mayur.xyz> <mayurkr@users.noreply.github.com>\nMegan Batty <megan@stormbrew.ca> <graham.batty@apple.com>\nMichael Gottesman <mgottesman@apple.com> <gottesmm@users.noreply.github.com>\nMichael Ilseman <milseman@apple.com> <michael.ilseman@gmail.com>\nMike Ash <mikeash@apple.com> <mike@mikeash.com>\nMike Ferris <mferris@apple.com> <mike@lorax.com>\nMishal Awadah <mawadah@apple.com>\nMishal Shah <mishal_shah@apple.com>\nMishal Shah <mishal_shah@apple.com> <shahmishal@users.noreply.github.com>\nNadav Rotem <nrotem@apple.com> <nadavrot@users.noreply.github.com>\nNate Cook <natecook@apple.com> <nate@Nates-MacBook-Pro.local>\nNate Cook <natecook@apple.com> <natecook1000@users.noreply.github.com>\nNate Cook <natecook@apple.com> <natecook@gmail.com>\nNate Cook <natecook@apple.com> <nmersethcook@apple.com>\nNathan Lanza <lanza@fb.com> <nathan@lanza.io>\nNicole Jacque <jacque@apple.com>\nNiels Andriesse <andriesseniels@gmail.com> <nielsandriesse@users.noreply.github.com>\nPaul Meng <mno2@mno2.org> <mno2.csie@gmail.com>\nPavel Yaskevich <pyaskevich@apple.com> <xedin@apache.org>\nPaweł Szot <pszot@pgs-soft.com>\nPaweł Szot <pszot@pgs-soft.com> <qwertyszot@gmail.com>\nPete Cooper <peter_cooper@apple.com>\nPhilip Ridgeway <pridgeway@vernier.com> <philip.ridgeway@gmail.com>\nRichard Wei <rxwei@apple.com> <rxwei@google.com>\nRintaro Ishizaki <rishizaki@apple.com> <fs.output@gmail.com>\nRobert Widmann <rwidmann@apple.com> <devteam.codafi@gmail.com>\nRoman Levenstein <rlevenstein@apple.com> <swiftix@users.noreply.github.com>\nRoss Bayer <ross.m.bayer@gmail.com>\nRoss Bayer <ross.m.bayer@gmail.com> <Rostepher@users.noreply.github.com>\nRuss Bishop <rbishopjr@apple.com> <russ@plangrid.com>\nRyan Lovelett <ryan@lovelett.me> <RLovelett@users.noreply.github.com>\nShawn Erickson <shawn.erickson@citrix.com> <shawnce@gmail.com>\nSlava Pestov <spestov@apple.com> <sviatoslav.pestov@gmail.com>\nStephen Canon <scanon@apple.com>\nStephen Canon <scanon@apple.com> <stephentyrone@gmail.com>\nSukolsak Sakshuwong <sukolsak@gmail.com>\nTodd Fiala <tfiala@apple.com> <todd.fiala@gmail.com>\nToni Suter <tonisuter@me.com> <tonisuter@users.noreply.github.com>\nVedant Kumar <vsk@apple.com> <vk@vedantk.com>\nXin Tong <xin_tong@apple.com> <trent.xin.tong@gmail.com>\nXin Tong <xin_tong@apple.com> <trentxintong@Xins-MacBook-Pro.local>\nYuka Ezura <ezura@users.noreply.github.com> <2020337+ezura@users.noreply.github.com>\nYurii Samsoniuk <ura@google.com> <mr.sigito@gmail.com>\nZac Bowling <zbowling@google.com> <zac@zacbowling.com>\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.04,
          "content": "brew \"cmake\"\nbrew \"ninja\"\nbrew \"sccache\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 374.9,
          "content": "# CHANGELOG\n\n> [!NOTE]\n> This is in reverse chronological order, so newer entries are added to the top.\n\n## Swift 6.1\n\n* Projected value initializers are now correctly injected into calls when\n  an argument exactly matches a parameter with an external property wrapper.\n\n  For example:\n\n  ```swift\n  struct Binding {\n    ...\n\tinit(projectedValue: Self) { ... }\n  }\n\n  func checkValue(@Binding value: Int) {}\n\n  func use(v: Binding<Int>) {\n    checkValue($value: v)\n\t// Transformed into: `checkValue(value: Binding(projectedValue: v))`\n  }\n  ```\n\n  Previous versions of the Swift compiler incorrectly omitted projected value\n  initializer injection in the call to `checkValue` because the argument type\n  matched the parameter type exactly.\n\n* [SE-0444][]:\n  When the upcoming feature `MemberImportVisibility` is enabled, Swift will\n  require that a module be directly imported in a source file when resolving\n  member declarations from that module:\n  \n  ```swift\n  let recipe = \"2 slices of bread, 1.5 tbs peanut butter\".parse()\n  // error: instance method 'parse()' is inaccessible due to missing import of\n  //        defining module 'RecipeKit'\n  // note:  add import of module 'RecipeKit'\n  ```\n  \n  This new behavior prevents ambiguities from arising when a transitively\n  imported module declares a member that conflicts with a member of a directly\n  imported module.\n\n* Syntactic SourceKit queries no longer attempt to provide information\n  within the inactive `#if` regions. For example, given:\n\n  ```swift\n  #if DEBUG\n  extension MyType: CustomDebugStringConvertible {\n    var debugDescription: String { ... }\n  }\n  #endif\n  ```\n\n  If `DEBUG` is not set, SourceKit results will not involve the\n  inactive code. Clients should use either SourceKit-LSP or\n  swift-syntax for syntactic queries that are independent of the\n  specific build configuration.\n\n* [SE-0442][]:\n  TaskGroups can now be created without explicitly specifying their child task's result types:\n\n  Previously the child task type would have to be specified explicitly when creating the task group:\n\n  ```swift\n  await withTaskGroup(of: Int.self) { group in \n    group.addTask { 12 }\n\n    return await group.next()\n  } \n  ```\n\n  Now the type is inferred based on the first use of the task group within the task group's body:\n\n  ```swift\n  await withTaskGroup { group in \n    group.addTask { 12 }\n\n    return await group.next()\n  } \n  ```\n\n\n## Swift 6.0\n\n### 2024-09-17 (Xcode 16.0)\n\n* Swift 6 comes with a new language mode that prevents the risk of data races\n  at compile time. This guarantee is accomplished through _data isolation_; the\n  compiler will validate that data passed over a boundary between concurrently\n  executing code is either safe to reference concurrently, or mutually\n  exclusive access to the value is enforced.\n\n  The data-race safety checks were previously available in Swift 5.10 through\n  the `-strict-concurrency=complete` compiler flag. Complete concurrency\n  checking in Swift 5.10 was overly restrictive, and Swift 6 removes many\n  false-positive data-race warnings through better `Sendable` inference,\n  new analysis that proves mutually exclusive access when passing values with\n  non-`Sendable` type over isolation boundaries, and more.\n\n  You can enable the Swift 6 language mode using the `-swift-version 6`\n  compiler flag.\n\n* [SE-0428][]:\n  Distributed actors now have the ability to support complete split server / \n  client systems, thanks to the new `@Resolvable` macro and runtime changes.\n\n  It is now possible to share an \"API module\" between a client and server \n  application, declare a resolvable distributed actor protocol with the expected \n  API contract and perform calls on it, without knowing the specific type the \n  server is implementing those actors as. \n\n  Declaring such protocol looks like this:\n\n```swift\nimport Distributed \n\n@Resolvable\nprotocol Greeter where ActorSystem: DistributedActorSystem<any Codable> {\n  distributed func greet(name: String) -> String\n}\n```\n\nAnd the module structure to support such applications looks like this:\n\n```\n                         ┌────────────────────────────────────────┐\n                         │                API Module              │\n                         │========================================│\n                         │ @Resolvable                            │\n                         │ protocol Greeter: DistributedActor {   │\n                 ┌───────┤   distributed func greet(name: String) ├───────┐\n                 │       │ }                                      │       │\n                 │       └────────────────────────────────────────┘       │\n                 │                                                        │\n                 ▼                                                        ▼   \n┌────────────────────────────────────────────────┐      ┌──────────────────────────────────────────────┐\n│             Client Module                      │      │               Server Module                  │\n│================================================│      │==============================================│\n│ let g = try $Greeter.resolve(...) /*new*/      │      │ distributed actor EnglishGreeter: Greeter {  │\n│ try await greeter.hello(name: ...)             │      │   distributed func greet(name: String) {     │\n└────────────────────────────────────────────────┘      │     \"Greeting in english, for \\(name)!\"      │\n/* Client cannot know about EnglishGreeter type */      │   }                                          │      \n                                                        │ }                                            │\n                                                        └──────────────────────────────────────────────┘\n```\n\n* [SE-0424][]:\n  Serial executor gains a new customization point `checkIsolation()`, which can be\n  implemented by custom executor implementations in order to provide a last resort  \n  check before the isolation asserting APIs such as `Actor.assumeIsolated` or\n  `assertIsolated` fail and crash.\n\n  This specifically enables Dispatch to implement more sophisticated isolation\n  checking, and now even an actor which is \"on a queue which is targeting \n  another specific queue\" can be properly detected using these APIs.\n\n* Closures can now appear in pack expansion expressions, which allows you to\n  construct a parameter pack of closures where each closure captures the\n  corresponding element of some other parameter pack. For example:\n\n  ```swift\n  struct Manager<each T> {\n    let fn: (repeat () -> (each T))\n\n    init(_ t: repeat each T) {\n      fn = (repeat { each t })\n    }\n  }\n  ```\n\n* [SE-0431][]:\n  You can now require a function value to carry its actor isolation\n  dynamically in a way that can be directly read by clients:\n\n  ```swift\n  func apply<R>(count: Int,\n                operation: @isolated(any) async () -> R) async -> [R]\n      where R: Sendable {\n    // implementation\n  }\n  ```\n\n  The isolation can read with the `.isolation` property, which has type\n  `(any Actor)?`:\n\n  ```swift\n  let iso = operation.isolation\n  ```\n\n  This capability has been adopted by the task-creation APIs in the\n  standard library.  As a result, creating a task with an actor-isolated\n  function will now synchronously enqueue the task on the actor, which\n  can be used for transitive event-ordering guarantees if the actor\n  guarantees that jobs will be run in the order they are enqueued, as\n  `@MainActor` does.  If the function is not explicitly isolated, Swift\n  still retains the right to optimize enqueues for functions that actually\n  start by doing work with different isolation from their formal isolation.\n\n* [SE-0423][]:\n  You can now use `@preconcurrency` attribute to replace static actor isolation\n  checking with dynamic checks for witnesses of synchronous nonisolated protocol\n  requirements when the witness is isolated. This is common when Swift programs\n  need to interoperate with frameworks written in C/C++/Objective-C whose\n  implementations cannot participate in static data race safety.\n\n  ```swift\n  public protocol ViewDelegateProtocol {\n    func respondToUIEvent()\n  }\n  ```\n\n  It's now possible for a `@MainActor`-isolated type to conform to\n  `ViewDelegateProtocol` by marking conformance declaration as `@preconcurrency`:\n\n  ```swift\n  @MainActor\n  class MyViewController: @preconcurrency ViewDelegateProtocol {\n    func respondToUIEvent() {\n      // implementation...\n    }\n  }\n  ```\n\n  The compiler would emit dynamic checks into the `respondToUIEvent()` witness\n  to make sure that it's always executed in `@MainActor` isolated context.\n\n  Additionally, the compiler would emit dynamic actor isolation checks for:\n\n  - `@objc` thunks of synchronous actor-isolated members of classes.\n\n  - Synchronous actor-isolated function values passed to APIs that\n    erase actor isolation and haven't yet adopted strict concurrency checking.\n\n  - Call-sites of synchronous actor-isolated functions imported from Swift 6 libraries.\n\n  The dynamic actor isolation checks can be disabled using the flag\n  `-disable-dynamic-actor-isolation`.\n\n* [SE-0420][]:\n  `async` functions can now explicitly inherit the isolation of their caller\n  by declaring an `isolated` parameter with the default value of `#isolation`:\n\n  ```swift\n  func poll(isolation: isolated (any Actor)? = #isolation) async -> [Item] {\n    // implementation\n  }\n  ```\n\n  When the caller is actor-isolated, this allows it to pass isolated state\n  to the function, which would otherwise have concurrency problems.  The\n  function may also be able to eliminate unwanted scheduling changes, such\n  as when it can quickly return in a fast path without needing to suspend.\n\n* [SE-0418][]:\n\n  The compiler would now automatically employ `Sendable` on functions\n  and key path literal expressions that cannot capture non-Sendable values.\n\n  This includes partially-applied and unapplied instance methods of `Sendable`\n  types, as well as non-local functions. Additionally, it is now disallowed\n  to utilize `@Sendable` on instance methods of non-Sendable types.\n\n  Let's use the following type to illustrate the new inference rules:\n\n  ```swift\n  public struct User {\n    var name: String\n\n    func getAge() -> Int { ... }\n  }\n  ```\n\n  Key path `\\User.name` would be inferred as `WritableKeyPath<User, String> & Sendable`\n  because it doesn't capture any non-Sendable values.\n\n  The same applies to keypath-as-function conversions:\n\n  ```swift\n  let _: @Sendable (User) -> String = \\User.name // Ok\n  ```\n\n  A function value produced by an un-applied reference to `getAge`\n  would be marked as `@Sendable` because `User` is a `Sendable` struct:\n\n  ```swift\n  let _ = User.getAge // Inferred as `@Sendable (User) -> @Sendable () -> Int`\n\n  let user = User(...)\n  user.getAge // Inferred as `@Sendable () -> Int`\n  ```\n\n* [SE-0432][]:\n  Noncopyable enums can be pattern-matched with switches without consuming the\n  value you switch over:\n\n  ```swift\n  enum Lunch: ~Copyable {\n    case soup\n    case salad\n    case sandwich\n  }\n  \n  func isSoup(_ lunch: borrowing Lunch) -> Bool {\n    switch lunch {\n      case .soup: true\n      default: false\n    }\n  }\n  ```\n\n\n* [SE-0429][]:\n  The noncopyable fields of certain types can now be consumed individually:\n\n  ```swift\n  struct Token: ~Copyable {}\n\n  struct Authentication: ~Copyable {\n    let id: Token\n    let name: String\n\n    mutating func exchange(_ new: consuming Token) -> Token {\n      let old = self.id  // <- partial consumption of 'self'\n      self = .init(id: new, name: self.name)\n      return old\n    }\n  }\n  ```\n\n* [SE-0430][]:\n\n  Region Based Isolation is now extended to enable the application of an\n  explicit `sending` annotation to function parameters and results. A function\n  parameter or result that is annotated with `sending` is required to be\n  disconnected at the function boundary and thus possesses the capability of\n  being safely sent across an isolation domain or merged into an actor-isolated\n  region in the function's body or the function's caller respectively. Example:\n  \n  ```swift\n  func parameterWithoutSending(_ x: NonSendableType) async {\n    // Error! Cannot send a task-isolated value to the main actor!\n    await transferToMainActor(x)\n  }\n  \n  func parameterWithSending(_ x: sending NonSendableType) async {\n    // Ok since `x` is `sending` and thus disconnected.\n    await transferToMainActor(x)\n  }\n  ```\n\n* [SE-0414][]:\n\n  The compiler is now capable of determining whether or not a value that does\n  not conform to the `Sendable` protocol can safely be sent over an isolation\n  boundary. This is done by introducing the concept of *isolation regions* that\n  allows the compiler to reason conservatively if two values can affect each\n  other. Through the usage of isolation regions, the compiler can now prove that\n  sending a value that does not conform to the `Sendable` protocol over an\n  isolation boundary cannot result in races because the value (and any other\n  value that might reference it) is not used in the caller after the point of\n  sending allowing code like the following to compile:\n  \n  ```swift\n  actor MyActor {\n      init(_ x: NonSendableType) { ... }\n  }\n  \n  func useValue() {\n    let x = NonSendableType()\n    let a = await MyActor(x) // Error without Region Based Isolation!\n  }\n  ```\n\n* [SE-0427][]:\n  You can now suppress `Copyable` on protocols, generic parameters, \n  and existentials:\n\n  ```swift\n  // Protocol does not require conformers to be Copyable.\n  protocol Flower: ~Copyable {\n    func bloom()\n  }\n\n  // Noncopyable type\n  struct Marigold: Flower, ~Copyable {\n    func bloom() { print(\"Marigold blooming!\") }\n  }\n\n  // Copyable type\n  struct Hibiscus: Flower {\n    func bloom() { print(\"Hibiscus blooming!\") }\n  }\n\n  func startSeason(_ flower: borrowing some Flower & ~Copyable) {\n    flower.bloom()\n  }\n\n  startSeason(Marigold())\n  startSeason(Hibiscus())\n  ```\n\n  By writing `~Copyable` on a generic type, you're suppressing a default\n  `Copyable` constraint that would otherwise appear on that type. This permits\n  noncopyable types, which have no `Copyable` conformance, to conform to such \n  protocols and be substituted for those generic types. Full functionality of this\n  feature requires the newer Swift 6 runtime.\n\n* Since its introduction in Swift 5.1 the @TaskLocal property wrapper was used to   \n  create and access task-local value bindings. Property wrappers introduce mutable storage,\n  which was now properly flagged as potential source of concurrency unsafety.\n \n  In order for Swift 6 language mode to not flag task-locals as potentially thread-unsafe,\n  task locals are now implemented using a macro. The macro has the same general semantics \n  and usage patterns, however there are two source-break situations which the Swift 6 \n  task locals cannot handle:\n\n  Using an implicit default `nil` value for task local initialization, when combined with a type alias:\n  ```swift\n  // allowed in Swift 5.x, not allowed in Swift 6.x\n  \n  typealias MyValue = Optional<Int> \n  \n  @TaskLocal\n  static var number: MyValue // Swift 6: error, please specify default value explicitly\n  \n  // Solution 1: Specify the default value\n  @TaskLocal\n  static var number: MyValue = nil\n  \n  // Solution 2: Avoid the type-alias\n  @TaskLocal\n  static var number: Optional<Int>\n  ```\n\n  At the same time, task locals can now be declared as global properties, which wasn't possible before.\n\n* Swift 5.10 missed a semantic check from [SE-0309][]. In type context, a reference to a\n  protocol `P` that has associated types or `Self` requirements should use\n  the `any` keyword, but this was not enforced in nested generic argument positions.\n  This is now an error as required by the proposal:\n\n  ```swift\n  protocol P { associatedtype A }\n  struct Outer<T> { struct Inner<U> { } }\n  let x = Outer<P>.Inner<P>()  // error\n  ```\n  To correct the error, add `any` where appropriate, for example\n  `Outer<any P>.Inner<any P>`.\n\n* Swift 5.10 accepted certain invalid opaque return types from [SE-0346][].\n  If a generic argument of a constrained opaque return type did not\n  satisfy the requirements on the primary associated type, the generic\n  argument was silently ignored and type checking would proceed as if it\n  weren't stated. This now results in a diagnostic:\n\n  ```swift\n  protocol P<A> { associatedtype A: Sequence }\n  struct G<A: Sequence>: P {}\n\n  func f() -> some P<Int> { return G<Array<Int>>() }  // error\n  ```\n\n  The return type above should be written as `some P<Array<Int>>` to match\n  the return statement. The old broken behavior in this situation can also\n  be restored, by removing the erroneous constraint and using the more general\n  upper bound `some P`.\n\n* [SE-0408][]:\n  A `for`-`in` loop statement can now accept a pack expansion expression,\n  enabling iteration over the elements of its respective value pack. This form\n  supports pattern matching, control transfer statements, and other features\n  available to a `Sequence`-driven `for`-`in` loop, except for the `where`\n  clause. Below is an example implementation of the equality operator for\n  tuples of arbitrary length using pack iteration:\n\n  ```swift\n  func == <each Element: Equatable>(lhs: (repeat each Element),\n                                    rhs: (repeat each Element)) -> Bool {\n\n    for (left, right) in repeat (each lhs, each rhs) {\n      guard left == right else { return false }\n    }\n    return true\n  }\n  ```\n\n  The elements of the value pack corresponding to the pack expansion expression\n  are evaluated on demand, meaning the i<sup>th</sup> element is evaluated on\n  the i<sup>th</sup> iteration:\n\n  ```swift\n  func doSomething(_: some Any) {}\n\n  func evaluateFirst<each T>(_ t: repeat each T) {\n    for _ in repeat doSomething(each t) {\n      break\n    }\n  }\n\n  evaluateFirst(1, 2, 3) \n  // 'doSomething' will be called only on the first element of the pack.\n  ```\n\n* [SE-0352][]:\n  The Swift 6 language mode will open existential values with\n  \"self-conforming\" types (such as `any Error` or `@objc` protocols)\n  passed to generic functions. For example:\n\n  ```swift\n  func takeError<E: Error>(_ error: E) { }\n\n  func passError(error: any Error) {\n    takeError(error)  // Swift 5 does not open `any Error`, Swift 6 does\n  }\n  ```\n\n  This behavior can be enabled prior to the Swift 6 language mode\n  using the upcoming language feature `ImplicitOpenExistentials`.\n\n* [SE-0422][]:\n  Non-built-in expression macros can now be used as default arguments that\n  expand at each call site. For example, a custom `#CurrentFile` macro used as\n  a default argument in 'Library.swift' won't be expanded to `\"Library.swift\"`:\n\n  ```swift\n  @freestanding(expression)\n  public macro CurrentFile() -> String = ...\n\n  public func currentFile(name: String = #CurrentFile) { name }\n  ```\n\n  Instead, it will be expanded at where the function is called:\n  \n  ```swift\n  print(currentFile())\n  // Prints \"main.swift\"\n  ```\n\n  The expanded code can also use declarations from the caller side context:\n\n  ```swift\n  var person = \"client\"\n  greetPerson(/* greeting: #informalGreeting */)\n  // Prints \"Hi client\" if macro expands to \"Hi \\(person)\"\n  ```\n\n* [SE-0417][]:\n  Tasks now gain the ability to respect Task Executor preference.\n  This allows tasks executing default actors (which do not declare a custom executor),\n  and nonisolated asynchronous functions to fall back to a preferred executor, rather than always\n  executing on the default global pool.\n\n  The executor preference may be stated using the `withTaskExecutorPreference` function:\n\n  ```swift\n  nonisolated func doSomething() async { ... }\n  \n  await withTaskExecutorPreference(preferredExecutor) {\n    doSomething()\n  ```\n\n  Or when creating new unstructured or child-tasks (e.g. in a task group):\n\n  ```swift\n  Task(executorPreference: preferredExecutor) {\n    // executes on 'preferredExecutor'\n    await doSomething() // doSomething body would execute on 'preferredExecutor'\n  }\n  ```\n\n* [SE-0413][]:\n\n  Functions can now specify the type of error that they throw as part of the\n  function signature. For example:\n\n  ```swift\n  func parseRecord(from string: String) throws(ParseError) -> Record { ... }\n  ```\n\n  A call to `parseRecord(from:)` will either return a `Record` instance or throw\n  an error of type `ParseError`. For example, a `do..catch` block will infer\n  the `error` variable as being of type `ParseError`:\n\n  ```swift\n  do {\n    let record = try parseRecord(from: myString)\n  } catch {\n    // error has type ParseError\n  }\n  ```\n\n  Typed throws generalizes over throwing and non-throwing functions. A function\n  that is specified as `throws` (without an explicitly-specified error type) is\n  equivalent to one that specifies `throws(any Error)`, whereas a non-throwing\n  is equivalent to one that specifies `throws(Never)`. Calls to functions that\n  are `throws(Never)` are non-throwing.\n\n  Typed throws can also be used in generic functions to propagate error types\n  from parameters, in a manner that is more precise than `rethrows`. For\n  example, the `Sequence.map` operation can propagate the thrown error type from\n  its closure parameter, indicating that it only throws errors of the same type\n  as that closure does:\n\n  ```swift\n  extension Sequence {\n    func map<T, E>(_ body: (Element) throws(E) -> T) throws(E) -> [T] { ... }\n  }\n  ```\n\n  When given a non-throwing closure as a parameter, `map` will not throw.\n\n* [#70065][]:\n\n  With the implementation of [SE-0110][], a closure parameter syntax consisting\n  of only a parameter type — and no parameter name — was accidentally made legal\n  for certain unambiguous type syntaxes in Swift 4. For example:\n\n  ```swift\n  let closure = { ([Int]) in }\n  ```\n\n  Having been [gated](https://github.com/apple/swift/pull/28171) behind a\n  compiler warning since at least Swift 5.2, this syntax is now rejected.\n\n* [#71075][]:\n\n  \\_SwiftConcurrencyShims used to declare the `exit` function, even though it\n  might not be available. The declaration has been removed, and must be imported\n  from the appropriate C library module (e.g. Darwin or SwiftGlibc)\n  \n* [SE-0270][]:\n\n  The Standard Library now provides APIs for performing collection operations\n  over noncontiguous elements. For example:\n  \n  ```swift\n  var numbers = Array(1...15)\n\n  // Find the indices of all the even numbers\n  let indicesOfEvens = numbers.indices(where: { $0.isMultiple(of: 2) })\n\n  // Perform an operation with just the even numbers\n  let sumOfEvens = numbers[indicesOfEvens].reduce(0, +)\n  // sumOfEvens == 56\n\n  // You can gather the even numbers at the beginning\n  let rangeOfEvens = numbers.moveSubranges(indicesOfEvens, to: numbers.startIndex)\n  // numbers == [2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 7, 9, 11, 13, 15]\n  // numbers[rangeOfEvens] == [2, 4, 6, 8, 10, 12, 14]\n  ```\n  \n  The standard library now provides a new `indices(where:)` function which creates\n  a `RangeSet` - a new type representing a set of discontiguous indices. `RangeSet`\n  is generic over its index type and can be used to execute operations over\n  noncontiguous indices such as collecting, moving, or removing elements from a\n  collection. Additionally, `RangeSet` is generic over any `Comparable` collection\n  index and can be used to represent a selection of items in a list or a refinement\n  of a filter or search result.\n\n## Swift 5.10\n\n### 2024-03-05 (Xcode 15.3)\n\n* Swift 5.10 closes all known static data-race safety holes in complete strict\nconcurrency checking.\n\n  When writing code against `-strict-concurrency=complete`, Swift 5.10 will\n  diagnose all potential for data races at compile time unless an explicit\n  unsafe opt out, such as `nonisolated(unsafe)` or `@unchecked Sendable`, is\n  used.\n\n  For example, in Swift 5.9, the following code crashes at runtime due to a\n  `@MainActor`-isolated initializer being evaluated outside the actor, but it\n  was not diagnosed under `-strict-concurrency=complete`:\n\n  ```swift\n  @MainActor\n  class MyModel {\n    init() {\n      MainActor.assertIsolated()\n    }\n\n    static let shared = MyModel()\n  }\n\n  func useShared() async {\n    let model = MyModel.shared\n  }\n\n  await useShared()\n  ```\n\n  The above code admits data races because a `@MainActor`-isolated static\n  variable, which evaluates a `@MainActor`-isolated initial value upon first\n  access, is accessed synchronously from a `nonisolated` context. In Swift\n  5.10, compiling the code with `-strict-concurrency=complete` produces a\n  warning that the access must be done asynchronously:\n\n  ```\n  warning: expression is 'async' but is not marked with 'await'\n    let model = MyModel.shared\n                ^~~~~~~~~~~~~~\n                await\n  ```\n\n  Swift 5.10 fixed numerous other bugs in `Sendable` and actor isolation\n  checking to strengthen the guarantees of complete concurrency checking.\n\n  Note that the complete concurrency model in Swift 5.10 is conservative.\n  Several Swift Evolution proposals are in active development to improve the\n  usability of strict concurrency checking ahead of Swift 6.\n\n* [SE-0412][]:\n\n  Global and static variables are prone to data races because they provide memory that can be accessed from any program context.  Strict concurrency checking in Swift 5.10 prevents data races on global and static variables by requiring them to be either:\n\n    1. isolated to a global actor, or\n    2. immutable and of `Sendable` type.\n\n  For example:\n\n  ```swift\n  var mutableGlobal = 1\n  // warning: var 'mutableGlobal' is not concurrency-safe because it is non-isolated global shared mutable state\n  // (unless it is top-level code which implicitly isolates to @MainActor)\n\n  @MainActor func mutateGlobalFromMain() {\n    mutableGlobal += 1\n  }\n\n  nonisolated func mutateGlobalFromNonisolated() async {\n    mutableGlobal += 10\n  }\n\n  struct S {\n    static let immutableSendable = 10\n    // okay; 'immutableSendable' is safe to access concurrently because it's immutable and 'Int' is 'Sendable'\n  }\n  ```\n\n  A new `nonisolated(unsafe)` modifier can be used to annotate a global or static variable to suppress data isolation violations when manual synchronization is provided:\n\n  ```swift\n  // This global is only set in one part of the program\n  nonisolated(unsafe) var global: String!\n  ```\n\n  `nonisolated(unsafe)` can be used on any form of storage, including stored properties and local variables, as a more granular opt out for `Sendable` checking, eliminating the need for `@unchecked Sendable` wrapper types in many use cases:\n\n  ```swift\n  import Dispatch\n\n  // 'MutableData' is not 'Sendable'\n  class MutableData { ... } \n\n  final class MyModel: Sendable {\n    private let queue = DispatchQueue(...)\n    // 'protectedState' is manually isolated by 'queue'\n    nonisolated(unsafe) private var protectedState: MutableData\n  }\n  ```\n\n  Note that without correct implementation of a synchronization mechanism to achieve data isolation, dynamic run-time analysis from exclusivity enforcement or tools such as the Thread Sanitizer could still identify failures.\n\n* [SE-0411][]:\n\n  Swift 5.10 closes a data-race safety hole that previously permitted isolated\n  default stored property values to be synchronously evaluated from outside the\n  actor. For example, the following code compiles warning-free under\n  `-strict-concurrency=complete` in Swift 5.9, but it will crash at runtime at\n  the call to `MainActor.assertIsolated()`:\n\n  ```swift\n  @MainActor func requiresMainActor() -> Int {\n    MainActor.assertIsolated()\n    return 0\n  }\n\n  @MainActor struct S {\n    var x = requiresMainActor()\n    var y: Int\n  }\n\n  nonisolated func call() async {\n    let s = await S(y: 10)\n  }\n\n  await call()\n  ```\n\n  This happens because `requiresMainActor()` is used as a default argument to\n  the member-wise initializer of `S`, but default arguments are always\n  evaluated in the caller. In this case, the caller runs on the generic\n  executor, so the default argument evaluation crashes.\n\n  Under `-strict-concurrency=complete` in Swift 5.10, default argument values\n  can safely share the same isolation as the enclosing function or stored\n  property. The above code is still valid, but the isolated default argument is\n  guaranteed to be evaluated in the callee's isolation domain.\n\n## Swift 5.9.2\n\n### 2023-12-11 (Xcode 15.1)\n\n* [SE-0407][]:\n\n  Member macros can specify a list of protocols via the `conformances` argument to the macro role. The macro implementation will be provided with those protocols that are listed but have not already been implemented by the type to which the member macro is attached, in the same manner as extension macros.\n\n  ```swift\n  @attached(member, conformances: Decodable, Encodable, names: named(init(from:), encode(to:)))\n  @attached(extension, conformances: Decodable, Encodable, names: named(init(from:), encode(to:)))\n  macro Codable() = #externalMacro(module: \"MyMacros\", type: \"CodableMacro\")\n  ```\n\n## Swift 5.9\n\n### 2023-09-18 (Xcode 15.0)\n\n* [SE-0382][], [SE-0389][], [SE-0394][], [SE-0397][]:\n\n  Swift 5.9 includes a new macro system that can be used to eliminate boilerplate and provide new forms of expressive APIs. Macros are declared with the new `macro` introducer:\n\n  ```swift\n  @freestanding(expression)\n  macro assert(_ condition: Bool) = #externalMacro(module: \"PowerAssertMacros\", type: \"AssertMacro\")\n  ```\n\n  Macros have parameter and result types, like functions, but are defined as separate programs that operate on syntax trees (using [swift-syntax][]) and produce new syntax trees that are incorporated into the program. Freestanding macros, indicated with the `@freestanding` attribute, are expanded in source code with a leading `#`:\n\n  ```swift\n  #assert(x + y == z) // expands to check the result of x + y == z and report failure if it's false\n  ```\n\n  Macros can also be marked as `@attached`, in which case they will be meaning that they will be expanded using custom attribute syntax. For example:\n\n  ```swift\n  @attached(peer, names: overloaded)\n  macro AddCompletionHandler() = #externalMacro(\n    module: \"ConcurrencyHelperMacros\",\n    type: \"AddCompletionHandlerMacro\"\n  )\n  \n  @AddCompletionHandler\n  func fetchAvatar(from url: URL) throws -> Image { ... }\n  \n  // expands to...\n  func fetchAvatar(from url: URL, completionHandler: @escaping (Result<Image, Error>) -> Void) {\n    Task.detached {\n      do {\n        let result = try await fetchAvatar(from: url)\n        completionHandler(.success(result))\n      } catch {\n        completionHandler(.failure(error))\n      }\n    }\n  }\n  ```\n\n  Macros are implemented in separate programs, which are executed by the Swift compiler. The Swift Package Manager's manifest provides a new `macro` target type to describe macros:\n\n  ```swift\n  import PackageDescription\n  import CompilerPluginSupport\n  \n  let package = Package(\n      name: \"ConcurrencyHelpers\",\n      dependencies: [\n          .package(url: \"https://github.com/apple/swift-syntax\", from: \"509.0.0\"),\n      ],\n      targets: [\n          .macro(name: \"ConcurrencyHelperMacros\",\n                 dependencies: [\n                     .product(name: \"SwiftSyntaxMacros\", package: \"swift-syntax\"),\n                     .product(name: \"SwiftCompilerPlugin\", package: \"swift-syntax\")\n                 ]),\n          .target(name: \"ConcurrencyHelpers\", dependencies: [\"ConcurrencyHelperMacros\"]),\n          .testTarget(name: \"ConcurrencyHelperMacroTests\", dependencies: [\"ConcurrencyHelperMacros\"]),\n      ]\n  )\n  ```\n\n* [SE-0380][]:\n\n  `if` and `switch` statements may now be used as expressions to:\n\n  * Return values from functions, properties, and closures (either with\n    implicit or explicit `return`)\n  * Throw errors using `throw`\n  * Assign values to variables\n  * Declare variables\n\n  Each branch of the `if` or `switch` must be a single expression, the value\n  of which becomes the value of the overall expression when that branch is\n  chosen.\n\n  ```swift\n  let bullet =\n    if isRoot && (count == 0 || !willExpand) { \"\" }\n    else if count == 0 { \"- \" }\n    else if maxDepth <= 0 { \"▹ \" }\n    else { \"▿ \" }\n  ```\n\n  ```swift\n  public static func width(_ x: Unicode.Scalar) -> Int {\n    switch x.value {\n      case 0..<0x80: 1\n      case 0x80..<0x0800: 2\n      case 0x0800..<0x1_0000: 3\n      default: 4\n    }\n  }\n  ```\n\n* [#64927][]:\n\n  Swift 5.9 introduces warnings that catch conversions from an inout\n  argument in the caller to an `UnsafeRawPointer` in the callee\n  whenever the original type contains an object reference.\n\n  ```swift\n  func inspectString(string: inout String) {\n    readBytes(&string)\n    // warning: forming an 'UnsafeRawPointer' to an inout variable of type String\n    // exposes the internal representation rather than the string contents.\n  }\n  ```\n\n  ```swift\n  func inspectData(data: inout Data) {\n    readBytes(&data)\n    // warning: forming an 'UnsafeRawPointer' to a variable of type 'T';\n    // this is likely incorrect because 'T' may contain an object reference.\n  }\n  ```\n\n  Please see the \"Workarounds for common cases\" section link in github\n  issue #64927.\n\n* Marking stored properties as unavailable with `@available` has been banned,\n  closing an unintentional soundness hole that had allowed arbitrary\n  unavailable code to run and unavailable type metadata to be used at runtime:\n  \n  ```swift\n  @available(*, unavailable)\n  struct Unavailable {\n    init() {\n      print(\"Unavailable.init()\")\n    }\n  }\n\n  struct S {\n    @available(*, unavailable)\n    var x = Unavailable()\n  }\n\n  _ = S() // prints \"Unavailable.init()\"\n  ```\n  \n  Marking `deinit` as unavailable has also been banned for similar reasons.\n\n* [SE-0366][]:\n\n  The lifetime of a local variable value can be explicitly ended using the\n  `consume` operator, forwarding ownership to the surrounding call, assignment,\n  or initialization without copying:\n\n  ```swift\n  var x: [String] = []\n  x.append(\"apples\")\n  x.append(\"bananas\")\n  x.append(\"oranges\")\n\n  process(consume x) // forward the current value, without copying\n\n  x = [] // start building a new value\n  x.append(\"broccoli\")\n  x.append(\"cauliflower\")\n  x.append(\"asparagus\")\n  ...\n  ```\n\n* [SE-0377][]:\n\n  Functions can now declare whether they take value parameters by `borrowing`\n  access to a value provided by the caller, or by `consuming` a value that the\n  callee is allowed to take ownership of:\n\n  ```swift\n  struct HealthyFoods {\n    var values: [String] = []\n\n    // Ask to `consume` the parameter, since we want to use it\n    // to incorporate into our own `values` array\n    mutating func add(_ value: consuming String) {\n        values.append(value)\n    }\n  }\n  ```\n\n## Swift 5.8\n\n### 2023-03-30 (Xcode 14.3)\n\n* [SE-0376][]:\n\n  The `@backDeployed(before:)` attribute may now be used to extend the availability of a function to OS releases prior to the introduction of that function as ABI.\n  \n  For example, suppose that `struct Temperature` was introduced in a macOS SDK framework in macOS 12. Later in macOS 13 the framework authors decided to add a `degreesFahrenheit` property as a convenience:\n  \n  ```swift\n  @available(macOS 12, *)\n  public struct Temperature {\n    public var degreesCelsius: Double\n    \n    // ...\n  }\n  \n  extension Temperature {\n    @available(macOS 12, *)\n    @backDeployed(before: macOS 13)\n    public var degreesFahrenheit: Double {\n      return (degreesCelsius * 9 / 5) + 32\n    }\n  }\n  ```\n  \n  Adding the `@backDeployed` attribute to `degreesFahrenheit` enables the framework author to make this new declaration available to apps with a minimum deployment target of macOS 12, even though the ABI entry point for `degreesFahrenheit` is only present in macOS 13 and up.\n  \n  When a function with `@backDeployed` is called, the compiler wraps the invocation of the function in a thunk. The thunk checks whether the library entry point for the declaration is available at runtime, and invokes it if it is. Otherwise, a copy of the function that was emitted into the client is called instead.\n\n* [#56139][]:\n\n  Сollection downcasts in cast patterns are now supported. For example:\n\n  ```swift\n  func collectionDowncast(_ arr: [Any]) {\n    switch arr {\n    case let ints as [Int]:\n      // ...\n    case is [Bool]:\n      // ...\n    }\n  }\n  ``` \n* [SE-0370][]:\n\n  The API of `UnsafeMutableRawPointer`, `UnsafeMutableBufferPointer`, `UnsafeMutableRawBufferPointer` were improved, adding previously missing initialization (and deinitialization) methods, including more performant initialization from `Collection` types.\n\n  For `UnsafeMutablePointer<T>` and `UnsafeMutableBufferPointer<T>`, method names containing the word \"assign\" were renamed to use the word \"update\", and many more were added. Every multi-element initialization method of `UnsafeMutablePointer` and `UnsafeMutableBufferPointer` now has a corresponding \"update\" method.\n\n  Slices of `UnsafeBufferPointer`, `UnsafeRawBufferPointer`, `UnsafeMutableBufferPointer` and `UnsafeMutableRawBufferPointer` now share the collection-like API of their base type. For example, given an initialized `b: UnsafeMutableBufferPointer<Int>`, the following lines are synonymous:\n  ```swift\n  b.update(repeating: 0)\n  b[b.startIndex..<b.endIndex].update(repeating: 0)\n  ```\n\n* [SE-0365][]:\n \n  Implicit `self` is now permitted for `weak self` captures, after `self` is unwrapped.\n\n  For example, the usage of implicit `self` below is permitted:\n\n  ```swift\n  class ViewController {\n    let button: Button\n\n    func setup() {\n        button.tapHandler = { [weak self] in\n            guard let self else { return }\n            dismiss() // refers to `self.dismiss()`\n        }\n    }\n\n    func dismiss() { ... }\n  }\n  ```\n\n  In Swift 5 language modes, implicit `self` is permitted for `weak self` captures in _non-escaping_ closures even before `self` is unwrapped. For example, this code compiles successfully in Swift 5 language mode:\n\n  ```swift\n  class ExampleClass {\n    func makeArray() -> [String] {\n      // `Array.map` takes a non-escaping closure:\n      [\"foo\", \"bar\", \"baaz\"].map { [weak self] string in\n        double(string) // implicitly refers to `self!.double(string)`\n      }\n    } \n\n    func double(_ string: String) -> String {\n      string + string\n    }\n  }\n  ```\n\n  In Swift 6, the above code will no longer compile. `weak self` captures in non-escaping closures now have the same behavior as captures in escaping closures (as described in [SE-0365][]). Code relying on the previous behavior will need to be updated to either unwrap `self` (e.g. by adding a `guard let self else return` statement), or to use a different capture method (e.g. using `[self]` or `[unowned self]` instead of `[weak self]`).\n\n* [SE-0362][]:\n\n  The compiler flag `-enable-upcoming-feature X` can now be used to enable a specific feature `X` that has been accepted by the evolution process, but whose introduction into the language is waiting for the next major version (e.g., version 6). The `X` is specified by any proposal that falls into this category:\n  * `ConciseMagicFile` enables the new `#file` semantics in [SE-0274][].\n  * `ForwardTrailingClosures` disables the \"backward\" scanning behavior of [SE-0286][].\n  * `BareSlashRegexLiterals` enables the regex literal syntax of [SE-0354][].\n\n  Features can be detected in source code with `#if hasFeature(X)`.\n\n## Swift 5.7\n\n### 2022-09-12 (Xcode 14.0)\n\n* [SE-0327][]:\n\n  There are a few notable changes in Swift 5.7 with respect to SE-0327.\n\n  First, the deinitializer and most kinds of initializers for `actor` types, and types constrained by a global actor like the `@MainActor`, have revised rules about what expressions are permitted in their body. The goal of these revisions has been to improve language expressivity and safety. In particular, many more programming patterns are now permitted in these initializers.\n\n  For example, a non-async initializer of an `actor` prior to Swift 5.7 would raise a diagnostic any time `self` escapes the initializer before returning. That diagnostic's purpose was to protect against a possible data race when accessing isolated stored proeprties. But, that diagnostic was emitted even if there was no dangerous racy access.\n\n  In Swift 5.7, the compiler now checks these initializers for dangerous accesses to isolated stored properties that occur after an escape of `self`:\n\n  ```swift\n  actor Database {\n    // ... other properties ...\n    var rows: Int = 0\n\n    init(_ world: DataUser) {\n      defer {\n        print(\"last = \\(self.rows)\") // ❌ this access to 'rows' is illegal.\n      }\n\n      print(\"before = \\(self.rows)\") // ✅ this access to 'rows' is OK\n      world.publishDatabase(self)    // ✅ passing 'self' is OK in Swift 5.7+\n      print(\"after = \\(self.rows)\")  // ❌ this access to 'rows' is illegal. \n\n      Task { [weak self] in          // ✅ capturing 'self' is OK in Swift 5.7+\n        while let db = self { await db.prune() }\n      }\n    }\n  }\n  ```\n\n  This is a control-flow sensitive check, meaning an illegal access does not necessarily appear on a source line after an escape of `self` (in the example above, consider _when_ the `defer` is executed). The compiler will always point out one of the escapes of `self` that is causing an access to become illegal.\n\n  Next, delegating initializers of an actor are no longer always non-isolated. This means an `async` delegating initializer can do the same things as a non-delegating one.\n\n  Finally, the diagnostic about non-isolated default-value expressions introduced for Swift 5.6 in the Xcode 13.3 release has been removed. The proposed rule was not precise enough to avoid flagging an innocuous yet common pattern in SwiftUI code involving `@StateObject` properties and `@MainActor`.\n\n* The Swift compiler no longer warns about redundant requirements in generic declarations. For example,\n  the following code diagnosed a warning in Swift 5.6 about the `T.Iterator : IteratorProtocol`\n  requirement being redundant, because it is implied by `T : Sequence`:\n\n  ```swift\n  func firstElement<T: Sequence>(_: T) -> T.Element where T.Iterator: IteratorProtocol {...}\n  ```\n\n  A redundant requirement does not indicate a coding error, and sometimes it is desirable to spell them\n  out for documentation purposes. For this reason these warnings are now disabled by default.\n\n  To restore the previous behavior, pass the `-Xfrontend -warn-redundant-requirements`\n  compiler flag.\n\n* [SE-0338][]:\n\n  Non-isolated async functions now always execute on the global concurrent pool,\n  so calling a non-isolated async function from actor-isolated code will leave\n  the actor. For example:\n\n  ```swift\n  class C { }\n\n  func f(_: C) async { /* always executes on the global concurrent pool */ }\n\n  actor A {\n    func g(c: C) async {\n      /* always executes on the actor */\n      print(\"on the actor\")\n\n      await f(c)\n    }\n  }\n  ```\n\n  Prior to this change, the call from `f` to `g` might have started execution of\n  `g` on the actor, which could lead to actors being busy longer than strictly\n  necessary. Now, the non-isolated async function will always hop to the global\n  cooperative pool, not run on the actor. This can result in a behavior change\n  for programs that assumed that a non-isolated async function called from a\n  `@MainActor` context will be executed on the main actor, although such\n  programs were already technically incorrect.\n\n  Additionally, when leaving an actor to execution on the global cooperative\n  pool, `Sendable` checking will be performed, so the compiler will emit a\n  diagnostic in the call to `f` if `c` is not of `Sendable` type.\n\n* [SE-0350][]:\n\n  The standard library has a new `Regex<Output>` type.\n\n  This type represents an _extended regular expression_, allowing more fluent\n  string processing operations. A `Regex` may be created by\n  [initialization from a string][SE-0355]:\n\n  ```swift\n  let pattern = \"a[bc]+\" // matches \"a\" followed by one or more instances\n                         // of either \"b\" or \"c\"\n  let regex = try! Regex(pattern)\n  ```\n\n  Or via a [regex literal][SE-0354]:\n\n  ```swift\n  let regex = #/a[bc]+/#\n  ```\n\n  In Swift 6, `/` will also be supported as a delimiter for `Regex` literals.\n  You can enable this mode in Swift 5.7 with the `-enable-bare-slash-regex`\n  flag. Doing so will cause some existing expressions that use `/` as an \n  operator to no longer compile; you can add parentheses or line breaks as a\n  workaround.\n\n  There are [new string-processing algorithms][SE-0357] that support\n  `String`, `Regex` and arbitrary `Collection` types.\n\n* [SE-0329][]:\n\n  New types representing time and clocks were introduced. This includes a protocol `Clock` defining clocks which allow for defining a concept of now and a way to wake up after a given instant. Additionally a new protocol `InstantProtocol` for defining instants in time was added. Furthermore a new protocol `DurationProtocol` was added to define an elapsed duration between two given `InstantProtocol` types. Most commonly the `Clock` types for general use are the `SuspendingClock` and `ContinuousClock` which represent the most fundamental clocks for the system. The `SuspendingClock` type does not progress while the machine is suspended whereas the `ContinuousClock` progresses no matter the state of the machine. \n\n  ```swift\n  func delayedHello() async throws {\n    try await Task.sleep(until: .now + .milliseconds(123), clock: .continuous)\n    print(\"hello delayed world\")\n  }\n  ```\n\n  `Clock` also has methods to measure the elapsed duration of the execution of work. In the case of the `SuspendingClock` and `ContinuousClock` this measures with high resolution and is suitable for benchmarks.\n\n  ```swift\n  let clock = ContinuousClock()\n  let elapsed = clock.measure {\n    someLongRunningWork()\n  }\n  ```\n\n* [SE-0309][]:\n\n  Protocols with associated types and `Self` requirements can now be used as the\n  types of values with the `any` keyword.\n\n  Protocol methods that return associated types can be called on an `any` type;\n  the result is type-erased to the associated type's upper bound, which is another\n  `any` type having the same constraints as the associated type. For example:\n\n  ```swift\n  protocol Surface {...}\n  \n  protocol Solid {\n    associatedtype SurfaceType: Surface\n    func boundary() -> SurfaceType\n  }\n  \n  let solid: any Solid = ...\n  \n  // Type of 'boundary' is 'any Surface'\n  let boundary = solid.boundary()\n  ```\n\n  Protocol methods that take an associated type or `Self` cannot be used with `any`,\n  however in conjunction with [SE-0352][], you can pass the `any` type to a function\n  taking a generic parameter constrained to the protocol. Within the generic context,\n  type relationships are explicit and all protocol methods can be used.\n\n* [SE-0346][]:\n\n  Protocols can now declare a list of one or more _primary associated types_, which enable writing same-type requirements on those associated types using angle bracket syntax:\n\n  ```swift\n  protocol Graph<Vertex, Edge> {\n    associatedtype Vertex\n    associatedtype Edge\n  }\n  ```\n\n  You can now write a protocol name followed by type arguments in angle brackets, like\n  `Graph<Int, String>`, anywhere that a protocol conformance requirement may appear:\n\n  ```swift\n  func shortestPath<V, E>(_: some Graph<V, E>, from: V, to: V) -> [E]\n\n  extension Graph<Int, String> {...}\n\n  func build() -> some Graph<Int, String> {}\n  ```\n\n  A protocol name followed by angle brackets is shorthand for a conformance requirement,\n  together with a same-type requirement for the protocol's primary associated types.\n  The first two examples above are equivalent to the following:\n\n  ```swift\n  func shortestPath<V, E, G>(_: G, from: V, to: V) -> [E]\n    where G: Graph, G.Vertex == V, G.Edge == E\n\n  extension Graph where Vertex == Int, Edge == String {...}\n  ```\n\n  The `build()` function returning `some Graph<Int, String>` can't be written using a\n  `where` clause; this is an example of a constrained opaque result type, which is new expressivity in Swift 5.7.\n\n* [SE-0353][]:\n\n  Protocols with primary associated types can now be used in existential types,\n  enabling same-type constraints on those associated types.\n\n  ```swift\n  let strings: any Collection<String> = [ \"Hello\" ]\n  ```\n\n  Note that language features requiring runtime support like dynamic casts\n  (`is`, `as?`, `as!`), as well as generic usages of parameterized existentials\n  in generic types (e.g. `Array<any Collection<Int>>`) involve additional\n  availability checks to use. Back-deploying usages in generic position can be\n  worked around with a generic type-erasing wrapper struct, which is now much\n  simpler to implement:\n\n  ```swift\n  struct AnyCollection<T> {\n    var wrapped: any Collection<T>\n  }\n\n  let arrayOfCollections: [AnyCollection<T>] = [ /**/ ]\n  ```\n\n* [SE-0358][]:\n\n  Various protocols in the standard library now declare primary associated types, for\n  example `Sequence` and `Collection` declare a single primary associated type `Element`.\n  For example, this allows writing down the types `some Collection<Int>` and\n  `any Collection<Int>`.\n\n* References to `optional` methods on a protocol metatype, as well as references to dynamically looked up methods on `AnyObject` are now supported on par with other function references. The type of such a reference (formerly an immediate optional by mistake) has been altered to that of a function that takes a single argument and returns an optional value of function type:\n\n  ```swift\n  class Object {\n    @objc func getTag() -> Int { ... }\n  }\n\n  let getTag: (AnyObject) -> (() -> Int)? = AnyObject.getTag\n\n  @objc protocol Delegate {\n    @objc optional func didUpdateObject(withTag tag: Int)\n  }\n\n  let didUpdateObjectWithTag: (Delegate) -> ((Int) -> Void)? = Delegate.didUpdateObject\n  ```\n\n  > **Warning**  \n  > Due to the type change, selectors for aforementioned method references that require writing out their type explicitly for disambiguation will no longer compile. To fix this, simply adjust the written type, or resort to a `#if swift(<5.7)` directive when compatibility with older compiler versions is warranted. For example:\n  >\n  > ```swift\n  > #if swift(<5.7)\n  > let decidePolicyForNavigationAction = #selector(WKNavigationDelegate.webView(_:decidePolicyFor:decisionHandler:) as ((WKNavigationDelegate) -> (WKWebView, WKNavigationAction, @escaping (WKNavigationActionPolicy) -> Void) -> Void)?)\n  > #else\n  > let decidePolicyForNavigationAction = #selector(WKNavigationDelegate.webView(_:decidePolicyFor:decisionHandler:) as (WKNavigationDelegate) -> ((WKWebView, WKNavigationAction, @escaping (WKNavigationActionPolicy) -> Void) -> Void)?)\n  > #endif\n  > ```\n\n* [SE-0349][]:\n\n  Loading data from raw memory represented by `UnsafeRawPointer`,\n  `UnsafeRawBufferPointer` and their mutable counterparts now supports unaligned\n  accesses. This previously required a workaround involving an intermediate\n  copy:\n\n  ```swift\n  let result = unalignedData.withUnsafeBytes { buffer -> UInt32 in\n    var storage = UInt32.zero\n    withUnsafeMutableBytes(of: &storage) {\n      $0.copyBytes(from: buffer.prefix(MemoryLayout<UInt32>.size))\n    }\n    return storage\n  }\n  ```\n  Now:\n  ```swift\n  let result = unalignedData.withUnsafeBytes { $0.loadUnaligned(as: UInt32.self) }\n  ```\n  Additionally, the counterpart `storeBytes(of:toByteOffset:as:)` had its\n  alignment restriction lifted, so that storing to arbitrary offsets of raw\n  memory can now succeed.\n\n* [SE-0334][]:\n\n  - `UnsafeRawPointer` and `UnsafeMutableRawPointer` have new functionality for\n  pointer arithmetic, adding functions to obtain a pointer advanced to the next\n  or previous alignment boundary:\n\n    ```swift\n    extension UnsafeRawPointer {\n      public func alignedUp<T>(for: T.type) -> UnsafeRawPointer\n      public func alignedDown<T>(for: T.type) -> UnsafeRawPointer\n      public func alignedUp(toMultipleOf alignment: Int) -> UnsafeRawPointer\n      public func alignedDown(toMultipleOf alignment: Int) -> UnsafeRawPointer\n    }\n    ```\n  - It is now possible to use a pointer to `struct` to obtain a pointer to one\n  of its stored properties:\n\n    ```swift\n    withUnsafeMutablePointer(to: &myStruct) {\n      let interiorPointer = $0.pointer(to: \\.myProperty)!\n      return myCFunction(interiorPointer)\n    }\n    ```\n  - Comparisons between pointers have been simplified by being more permissive.\n  Since pointers are representations of memory locations within a single pool of\n  underlying memory, Swift now allows comparing pointers without requiring type\n  conversions with the `==`, `!=`, `<`,`<=`,`>`, and `>=` operators. \n\n* [SE-0333][]:\n\n  It is now possible to use the `withMemoryRebound<T>()` method on raw memory,\n  that is `UnsafeRawPointer` , `UnsafeRawBufferPointer` and their mutable\n  counterparts. Additionally, we clarified the semantics of\n  `withMemoryRebound<T>()` when used on typed memory (`UnsafePointer<Pointee>`,\n  `UnsafeBufferPointer<Pointee>` and their mutable counterparts). Whereas\n  `Pointee` and `T` were previously required to have the same stride, you can\n  now rebind in cases where `Pointee` is an aggregate of `T` or vice-versa. For\n  example, given an `UnsafeMutableBufferPointer<CGPoint>`, you can now use\n  `withMemoryRebound` to operate temporarily on a\n  `UnsafeMutableBufferPointer<CGFloat>`, because `CGPoint` is an aggregate of\n  `CGFloat`.\n\n* [SE-0352][]:\n\n  It's now possible to call a generic function with a value of protocol type\n  in places that would previously fail because `any` types do not conform\n  to their protocols. For example:\n\n  ```swift\n  protocol P {\n    associatedtype A\n    func getA() -> A\n  }\n\n  func takeP<T: P>(_ value: T) { }\n\n  func test(p: any P) {\n    takeP(p) // was an error \"type 'any P' cannot conform to 'P'\", now accepted\n  }\n  ```\n\n  This operates by \"opening\" the value of protocol type and passing the\n  underlying type directly to the generic function.\n\n* [SE-0347][]:\n\n  It's now possible to use a default value expression with a generic parameter type\n  to default the argument and its type:\n\n  ```swift\n  func compute<C: Collection>(_ values: C = [0, 1, 2]) {\n    ...\n  }\n  ```\n\n  `compute` is now accepted by compiler and `[Int]` is going to be inferred\n  for `C` at call sites that do not provide the argument explicitly.\n\n* [SE-0326][]:\n\n  It's now possible to infer parameter and result types from the body of a multi-statement\n  closure. The distinction between single- and multi-statement closures has been removed.\n\n  Use of closures becomes less cumbersome by removing the need to constantly specify explicit\n  closure types which sometimes could be pretty large e.g. when there are multiple parameters\n  or a complex tuple result type.\n\n  For example:\n\n  ```swift\n  func map<T>(fn: (Int) -> T) -> T {\n    return fn(42)\n  }\n\n  func computeResult<U: BinaryInteger>(_: U) -> U { /* processing */ }\n\n  let _ = map {\n    if let $0 < 0 {\n       // do some processing\n    }\n\n    return computeResult($0)\n  }\n  ```\n\n  The result type of `map` can now be inferred from the body of the trailing closure\n  passed as an argument.\n\n* [SE-0345][]:\n\n  It is now possible to unwrap optional variables with a shorthand syntax that\n  shadows the existing declaration. For example, the following:\n  \n  ```swift\n  let foo: String? = \"hello world\"\n  \n  if let foo {\n    print(foo) // prints \"hello world\"\n  }\n  ```\n  \n  is equivalent to:\n  \n  ```swift\n  let foo: String? = \"hello world\"\n  \n  if let foo = foo {\n    print(foo) // prints \"hello world\"\n  }\n  ```\n\n* [SE-0340][]:\n\n  It is now possible to make declarations unavailable from use in asynchronous\n  contexts with the `@available(*, noasync)` attribute.\n\n  This is to protect the consumers of an API against undefined behavior that can\n  occur when the API uses thread-local storage, or encourages using thread-local\n  storage, across suspension points, or protect developers against holding locks\n  across suspension points which may lead to undefined behavior, priority\n  inversions, or deadlocks.\n\n* [SE-0343][]:\n\n  Top-level scripts support asynchronous calls.\n\n  Using an `await` by calling an asynchronous function or accessing an isolated\n  variable transitions the top-level to an asynchronous context. As an\n  asynchronous context, top-level variables are `@MainActor`-isolated and the\n  top-level is run on the `@MainActor`.\n\n  Note that the transition affects function overload resolution and starts an\n  implicit run loop to drive the concurrency machinery.\n\n  Unmodified scripts are not affected by this change unless `-warn-concurrency` is\n  passed to the compiler invocation. With `-warn-concurrency`, variables in the\n  top-level are isolated to the main actor and the top-level context is isolated\n  to the main actor, but is not an asynchronous context.\n\n* [SE-0336][]:\n\n  It is now possible to declare `distributed actor` and `distributed func`s inside of them.\n\n  Distributed actors provide stronger isolation guarantees than \"local\" actors, and enable additional checks to be made on return types and parameters of distributed methods, e.g. checking if they conform to `Codable`. Distributed methods can be called on \"remote\" references of distributed actors, turning those invocations into remote procedure calls, by means of pluggable and user extensible distributed actor system implementations. \n  \n  Swift does not provide any specific distributed actor system by itself, however, packages in the ecosystem fulfill the role of providing those implementations.\n  \n  ```swift\n  distributed actor Greeter { \n    var greetingsSent = 0\n    \n    distributed func greet(name: String) -> String {\n      greetingsSent += 1\n      return \"Hello, \\(name)!\"\n    }\n  }\n  \n  func talkTo(greeter: Greeter) async throws {\n    // isolation of distributed actors is stronger, it is impossible to refer to\n    // any stored properties of distributed actors from outside of them:\n    greeter.greetingsSent // distributed actor-isolated property 'name' can not be accessed from a non-isolated context\n    \n    // remote calls are implicitly throwing and async, \n    // to account for the potential networking involved:\n    let greeting = try await greeter.greet(name: \"Alice\")\n    print(greeting) // Hello, Alice!\n  }\n  ```\n\n* The compiler now emits a warning when a non-final class conforms to a protocol that imposes a same-type requirement between `Self` and an associated type. This is because such a requirement makes the conformance unsound for subclasses.\n\n  For example, Swift 5.6 would allow the following code, which at runtime would construct an instance of `C` and not `SubC` as expected:\n\n  ```swift\n  protocol P {\n    associatedtype A : Q where Self == Self.A.B\n  }\n  \n  protocol Q {\n    associatedtype B\n  \n    static func getB() -> B\n  }\n  \n  class C : P {\n    typealias A = D\n  }\n  \n  class D : Q {\n    typealias B = C\n  \n    static func getB() -> C { return C() }\n  }\n  \n  extension P {\n    static func getAB() -> Self {\n      // This is well-typed, because `Self.A.getB()` returns\n      // `Self.A.B`, which is equivalent to `Self`.\n      return Self.A.getB()\n    }\n  }\n  \n  class SubC : C {}\n  \n  // P.getAB() declares a return type of `Self`, so it should\n  // return `SubC`, but it actually returns a `C`.\n  print(SubC.getAB())\n  ```\n\n  To make the above example correct, either the class `C` needs to become `final` (in which case `SubC` cannot be declared) or protocol `P` needs to be re-designed to not include the same-type requirement `Self == Self.A.B`.\n\n* [SE-0341][]:\n\n  Opaque types can now be used in the parameters of functions and subscripts, when they provide a shorthand syntax for the introduction of a generic parameter. For example, the following:\n\n  ```swift\n  func horizontal(_ v1: some View, _ v2: some View) -> some View {\n    HStack {\n      v1\n      v2\n    }\n  }\n  ```\n\n  is equivalent to\n\n  ```swift\n  func horizontal<V1: View, V2: View>(_ v1: V1, _ v2: V2) -> some View {\n    HStack {\n      v1\n      v2\n    }\n  }\n  ```\n\n  With this, `some` in a parameter type provides a generalization where the\n  caller chooses the parameter's type as well as its value, whereas `some` in\n  the result type provides a generalization where the callee chooses the\n  resulting type and value.\n\n* The compiler now correctly emits errors for `@available` attributes on stored properties with the `lazy` modifier or with attached property wrappers. Previously, the attribute was accepted on this subset of stored properties but the resulting binary would crash at runtime when type metadata was unavailable.\n\n  ```swift\n  struct S {\n    @available(macOS 99, *) // error: stored properties cannot be marked potentially unavailable with '@available'\n    lazy var a: Int = 42\n\n    @available(macOS 99, *) // error: stored properties cannot be marked potentially unavailable with '@available'\n    @Wrapper var b: Int\n  }\n  ```\n\n* The compiler now correctly emits warnings for more kinds of expressions where a protocol conformance is used and may be unavailable at runtime. Previously, member reference expressions and type erasing expressions that used potentially unavailable conformances were not diagnosed, leading to potential crashes at runtime.\n\n  ```swift\n  struct Pancake {}\n  protocol Food {}\n\n  extension Food {\n    var isGlutenFree: Bool { false }\n  }\n\n  @available(macOS 12.0, *)\n  extension Pancake: Food {}\n\n  @available(macOS 11.0, *)\n  func eatPancake(_ pancake: Pancake) {\n    if (pancake.isGlutenFree) { // warning: conformance of 'Pancake' to 'Food' is only available in macOS 12.0 or newer\n      eatFood(pancake) // warning: conformance of 'Pancake' to 'Food' is only available in macOS 12.0 or newer\n    }\n  }\n\n  func eatFood(_ food: Food) {}\n  ```\n\n* [SE-0328][]:\n\n  Opaque types (expressed with `some`) can now be used in structural positions\n  within a result type, including having multiple opaque types in the same\n  result. For example:\n\n  ```swift\n  func getSomeDictionary() -> [some Hashable: some Codable] {\n    return [ 1: \"One\", 2: \"Two\" ]\n  }\n  ```\n\n## Swift 5.6\n\n### 2022-03-14 (Xcode 13.3)\n\n* [SE-0327][]:\n\n  In Swift 5 mode, a warning is now emitted if the default-value expression of an\n  instance-member property requires global-actor isolation. For example:\n\n  ```swift\n  @MainActor\n  func partyGenerator() -> [PartyMember] { fatalError(\"todo\") }\n  \n  class Party {\n    @MainActor var members: [PartyMember] = partyGenerator()\n    //                                      ^~~~~~~~~~~~~~~~\n    // warning: expression requiring global actor 'MainActor' cannot\n    //          appear in default-value expression of property 'members'\n  }\n  ```\n  \n  Previously, the isolation granted by the type checker matched the isolation of\n  the property itself, but at runtime that is not guaranteed. In Swift 6, \n  such default-value expressions will become an error if they require isolation.\n\n* Actor isolation checking now understands that `defer` bodies share the isolation of their enclosing function.\n\n  ```swift\n  // Works on global actors\n  @MainActor\n  func runAnimation(controller: MyViewController) async {\n    controller.hasActiveAnimation = true\n    defer { controller.hasActiveAnimation = false }\n\n    // do the animation here...\n  }\n\n  // Works on actor instances\n  actor OperationCounter {\n    var activeOperationCount = 0\n\n    func operate() async {\n      activeOperationCount += 1\n      defer { activeOperationCount -= 1 }\n\n      // do work here...\n    }\n  }\n  ```\n\n* [SE-0335][]:\n\n  Swift now allows existential types to be explicitly written with the `any`\n  keyword, creating a syntactic distinction between existential types and\n  protocol conformance constraints. For example:\n\n  ```swift\n  protocol P {}\n\n  func generic<T>(value: T) where T: P {\n    ...\n  }\n\n  func existential(value: any P) {\n     ...\n  }\n  ```\n\n* [SE-0337][]:\n\n  Swift now provides an incremental migration path to data race safety, allowing\n  APIs to adopt concurrency without breaking their clients that themselves have\n  not adopted concurrency. An existing declaration can introduce\n  concurrency-related annotations (such as making its closure parameters\n  `@Sendable`) and use the `@preconcurrency` attribute to maintain its behavior\n  for clients who have not themselves adopted concurrency:\n\n  ```swift\n  // module A\n  @preconcurrency func runOnSeparateTask(_ workItem: @Sendable () -> Void)\n\n  // module B\n  import A\n\n  class MyCounter {\n    var value = 0\n  }\n\n  func doesNotUseConcurrency(counter: MyCounter) {\n    runOnSeparateTask {\n      counter.value += 1 // no warning, because this code hasn't adopted concurrency\n    }\n  }\n\n  func usesConcurrency(counter: MyCounter) async {\n    runOnSeparateTask {\n      counter.value += 1 // warning: capture of non-Sendable type 'MyCounter'\n    }\n  }\n  ```\n\n  One can enable warnings about data race safety within a module with the\n  `-warn-concurrency` compiler option. When using a module that does not yet\n  provide `Sendable` annotations, one can suppress warnings for types from that\n  module by marking the import with `@preconcurrency`:\n\n  ```swift\n  /// module C\n  public struct Point {\n    public var x, y: Double\n  }\n\n  // module D\n  @preconcurrency import C\n\n  func centerView(at location: Point) {\n    Task {\n      await mainView.center(at: location) // no warning about non-Sendable 'Point' because the @preconcurrency import suppresses it\n    }\n  }\n  ```\n\n* [SE-0302][]:\n\n  Swift will now produce warnings to indicate potential data races when\n  non-`Sendable` types are passed across actor or task boundaries. For\n  example:\n\n  ```swift\n  class MyCounter {\n    var value = 0\n  }\n\n  func f() -> MyCounter {\n    let counter = MyCounter()\n    Task {\n      counter.value += 1  // warning: capture of non-Sendable type 'MyCounter'\n    }\n    return counter\n  }\n  ```\n\n* [SE-0331][]:\n\n  The conformance of the unsafe pointer types (e.g., `UnsafePointer`,\n  `UnsafeMutableBufferPointer`) to the `Sendable` protocols has been removed,\n  because pointers cannot safely be transferred across task or actor boundaries.\n\n* References to `Self` or so-called \"`Self` requirements\" in the type signatures\n  of protocol members are now correctly detected in the parent of a nested type.\n  As a result, protocol members that fall under this overlooked case are no longer\n  available on values of protocol type:\n\n  ```swift\n  struct Outer<T> {\n    struct Inner {}\n  }\n\n  protocol P {}\n  extension P {\n    func method(arg: Outer<Self>.Inner) {}\n  }\n\n  func test(p: P) {\n    // error: 'method' has a 'Self' requirement and cannot be used on a value of\n    // protocol type (use a generic constraint instead).\n    _ = p.method\n  }\n  ```\n\n* [SE-0324][]:\n\n  Relax diagnostics for pointer arguments to C functions. The Swift\n  compiler now accepts limited pointer type mismatches when directly\n  calling functions imported from C as long as the C language allows\n  those pointer types to alias. Consequently, any Swift\n  `Unsafe[Mutable]Pointer<T>` or `Unsafe[Mutable]RawPointer` may be\n  passed to C function arguments declared as `[signed|unsigned] char\n  *`. Swift `Unsafe[Mutable]Pointer<T>` can also be passed to C\n  function arguments with an integer type that differs from `T` only\n  in its signedness.\n\n  For example, after importing a C function declaration:\n  ```c\n  long long decode_int64(const char *ptr_to_int64);\n  ```\n  Swift can now directly pass a raw pointer as the function argument:\n  ```swift\n  func decodeAsInt64(data: Data) -> Int64 {\n      data.withUnsafeBytes { (bytes: UnsafeRawBufferPointer) in\n          decode_int64(bytes.baseAddress!)\n      }\n  }\n  ```\n\n* [SE-0322][]:\n\n  The standard library now provides a new operation\n  `withUnsafeTemporaryAllocation` which provides an efficient temporarily\n  allocation within a limited scope, which will be optimized to use stack\n  allocation when possible.\n\n* [SE-0320][]:\n\n  Dictionaries with keys of any type conforming to the new protocol\n  `CodingKeyRepresentable` can now be encoded and decoded. Formerly, encoding\n  and decoding was limited to keys of type `String` or `Int`.\n\n* [SE-0315][]:\n\n  Type expressions and annotations can now include \"type placeholders\" which\n  directs the compiler to fill in that portion of the type according to the usual\n  type inference rules. Type placeholders are spelled as an underscore (\"`_`\") in\n  a type name. For instance:\n  \n  ```swift\n  // This is OK--the compiler can infer the key type as `Int`.\n  let dict: [_: String] = [0: \"zero\", 1: \"one\", 2: \"two\"]\n  ```\n\n* [SE-0290][]:\n\n  It is now possible to write inverted availability conditions by using the new `#unavailable` keyword:\n\n  ```swift\n  if #unavailable(iOS 15.0) {\n      // Old functionality\n  } else {\n      // iOS 15 functionality \n  }\n  ```\n\n## Swift 5.5\n\n### 2021-09-20 (Xcode 13.0)\n\n* [SE-0323][]:\n\n  The main function is executed with `MainActor` isolation applied, so functions\n  and variables with `MainActor` isolation may be called and modified\n  synchronously from the main function. If the main function is annotated with a\n  global actor explicitly, it must be the main actor or an error is emitted. If\n  no global actor annotation is present, the main function is implicitly run on\n  the main actor.\n\n  The main function is executed synchronously up to the first suspension point.\n  Any tasks enqueued by initializers in Objective-C or C++ will run after the\n  main function runs to the first suspension point. At the suspension point, the\n  main function suspends and the tasks are executed according to the Swift\n  concurrency mechanisms.\n\n* [SE-0313][]:\n\n  Parameters of actor type can be declared as `isolated`, which means that they\n  represent the actor on which that code will be executed. `isolated` parameters\n  extend the actor-isolated semantics of the `self` parameter of actor methods\n  to arbitrary parameters. For example:\n\n  ```swift\n  actor MyActor {\n    func f() { }\n  }\n\n  func g(actor: isolated MyActor) {\n    actor.f()   // okay, this code is always executing on \"actor\"\n  }\n\n  func h(actor: MyActor) async {\n    g(actor: actor)        // error, call must be asynchronous\n    await g(actor: actor)  // okay, hops to \"actor\" before calling g\n  }\n  ```\n\n  The `self` parameter of actor methods are implicitly `isolated`. The\n  `nonisolated` keyword makes the `self` parameter no longer `isolated`.\n\n* [#57081][]:\n\n  The compiler now correctly rejects the application of generic arguments to the\n  special `Self` type:\n\n  ```swift\n  struct Box<T> {\n    // previously interpreted as a return type of Box<T>, ignoring the <Int> part;\n    // now we diagnose an error with a fix-it suggesting replacing `Self` with `Box`\n    static func makeBox() -> Self<Int> {...}\n  }\n  ```\n\n* [#57225][]:\n\n  The compiler now correctly rejects `@available` annotations on enum cases with\n  associated values with an OS version newer than the current deployment target:\n\n  ```swift\n  @available(macOS 12, *)\n  public struct Crayon {}\n\n  public enum Pen {\n    case pencil\n\n    @available(macOS 12, *)\n    case crayon(Crayon)\n  }\n  ```\n\n  While this worked with some examples, there is no way for the Swift runtime to\n  perform the requisite dynamic layout needed to support this in general, which\n  could cause crashes at runtime.\n\n  Note that conditional availability on stored properties in structs and classes\n  is not supported for similar reasons; it was already correctly detected and\n  diagnosed.\n\n* [SE-0311][]:\n\n  Task local values can be defined using the new `@TaskLocal` property wrapper.\n  Such values are carried implicitly by the task in which the binding was made,\n  as well as any child-tasks, and unstructured task created from the tasks context.\n  \n  ```swift\n  struct TraceID { \n    @TaskLocal\n    static var current: TraceID? \n  }\n  \n  func printTraceID() {\n    if let traceID = TraceID.current {\n      print(\"\\(traceID)\")\n    } else {\n      print(\"nil\")\n    }\n  }\n  \n  func run() async { \n    printTraceID()    // prints: nil\n    TraceID.$current.withValue(\"1234-5678\") { \n      printTraceID()  // prints: 1234-5678\n      inner()         // prints: 1234-5678\n    }\n    printTraceID()    // prints: nil\n  }\n  \n  func inner() {\n    // if called from a context in which the task-local value\n    // was bound, it will print it (or 'nil' otherwise)\n    printTraceID()\n  }\n  ```\n\n* [SE-0316][]:\n\n\tA type can be defined as a global actor. Global actors extend the notion\n\tof actor isolation outside of a single actor type, so that global state\n\t(and the functions that access it) can benefit from actor isolation,\n\teven if the state and functions are scattered across many different\n\ttypes, functions and modules. Global actors make it possible to safely\n\twork with global variables in a concurrent program, as well as modeling\n\tother global program constraints such as code that must only execute on\n  the \"main thread\" or \"UI thread\". A new global actor can be defined with\n  the `globalActor` attribute:\n\n  ```swift\n  @globalActor\n  struct DatabaseActor {\n    actor ActorType { }\n\n    static let shared: ActorType = ActorType()\n  }\n  ```\n\n  Global actor types can be used as custom attributes on various declarations,\n  which ensures that those declarations are only accessed on the actor described\n  by the global actor's `shared` instance. For example:\n\n  ```swift\n  @DatabaseActor func queryDB(query: Query) throws -> QueryResult\n\n  func runQuery(queryString: String) async throws -> QueryResult {\n    let query = try Query(parsing: queryString)\n    return try await queryDB(query: query) // 'await' because this implicitly hops to DatabaseActor.shared\n  }\n  ```\n\n  The concurrency library defines one global actor, `MainActor`, which\n  represents the main thread of execution. It should be used for any code that\n  must execute on the main thread, e.g., for updating UI.\n\n* [SE-0313][]:\n\n  Declarations inside an actor that would normally be actor-isolated can\n  explicitly become non-isolated using the `nonisolated` keyword. Non-isolated\n  declarations can be used to conform to synchronous protocol requirements:\n\n  ```swift\n  actor Account: Hashable {\n    let idNumber: Int\n    var balance: Double\n\n    nonisolated func hash(into hasher: inout Hasher) { // okay, non-isolated satisfies synchronous requirement\n      hasher.combine(idNumber) // okay, can reference idNumber from outside the let\n      hasher.combine(balance) // error: cannot synchronously access actor-isolated property\n    }\n  }\n  ```\n\n* [SE-0300][]:\n\n  Async functions can now be suspended using the `withUnsafeContinuation`\n  and `withUnsafeThrowingContinuation` functions. These both take a closure,\n  and then suspend the current async task, executing that closure with a\n  continuation value for the current task. The program must use that\n  continuation at some point in the future to resume the task, passing in\n  a value or error, which then becomes the result of the `withUnsafeContinuation`\n  call in the resumed task.\n\n* Type names are no longer allowed as an argument to a subscript parameter that expects a metatype type\n\n  ```swift\n  struct MyValue {\n  }\n\n  struct MyStruct {\n    subscript(a: MyValue.Type) -> Int { get { ... } }\n  }\n\n  func test(obj: MyStruct) {\n    let _ = obj[MyValue]\n  }\n  ```\n\n  Accepting subscripts with `MyValue` as an argument was an oversight because `MyValue` requires explicit `.self`\n  to reference its metatype, so correct syntax would be to use `obj[MyValue.self]`.\n\n* [SE-0310][]:\n  \n  Read-only computed properties and subscripts can now define their `get` accessor to be `async` and/or `throws`, by writing one or both of those keywords between the `get` and `{`.  Thus, these members can now make asynchronous calls or throw errors in the process of producing a value:\n  ```swift\n  class BankAccount: FinancialAccount {\n    var manager: AccountManager?\n\n    var lastTransaction: Transaction {\n      get async throws {\n        guard manager != nil else { throw BankError.notInYourFavor }\n        return await manager!.getLastTransaction()\n      }\n    }\n\n    subscript(_ day: Date) -> [Transaction] {\n      get async {\n        return await manager?.getTransactions(onDay: day) ?? []\n      }\n    }\n  }\n\n  protocol FinancialAccount {\n    associatedtype T\n    var lastTransaction: T { get async throws }\n    subscript(_ day: Date) -> [T] { get async }\n  }\n  ```\n  Accesses to such members, like `lastTransaction` above, will require appropriate marking with `await` and/or `try`:\n  ```swift\n  extension BankAccount {\n    func meetsTransactionLimit(_ limit: Amount) async -> Bool {\n      return try! await self.lastTransaction.amount < limit\n      //                    ^~~~~~~~~~~~~~~~ this access is async & throws\n    }                \n  }\n\n    \n  func hadWithdrawalOn(_ day: Date, from acct: BankAccount) async -> Bool {\n    return await !acct[day].allSatisfy { $0.amount >= Amount.zero }\n    //            ^~~~~~~~~ this access is async\n  }\n  ```\n\n* [SE-0306][]:\n\n  Swift 5.5 includes support for actors, a new kind of type that isolates its instance data to protect it from concurrent access. Accesses to an actor's instance declarations from outside the must be asynchronous:\n\n  ```swift\n  actor Counter {\n    var value = 0\n\n    func increment() {\n      value = value + 1\n    }\n  }\n\n  func useCounter(counter: Counter) async {\n    print(await counter.value) // interaction must be async\n    await counter.increment()  // interaction must be async\n  }\n  ```\n\n* The determination of whether a call to a `rethrows` function can throw now considers default arguments of `Optional` type.\n\n  In Swift 5.4, such default arguments were ignored entirely by `rethrows` checking. This meant that the following example was accepted:\n\n  ```swift\n  func foo(_: (() throws -> ())? = nil) rethrows {}\n  foo()  // no 'try' needed\n  ```\n\n  However, it also meant that the following was accepted, even though the call to `foo()` can throw and the call site is not marked with `try`:\n\n  ```swift\n  func foo(_: (() throws -> ())? = { throw myError }) rethrows {}\n  foo()  // 'try' *should* be required here\n  ```\n\n  The new behavior is that the first example is accepted because the default argument is syntactically written as `nil`, which is known not to throw. The second example is correctly rejected, on account of missing a `try` since the default argument *can* throw.\n\n* [SE-0293][]:\n\n  Property wrappers can now be applied to function and closure parameters:\n\n  ```swift\n  @propertyWrapper\n  struct Wrapper<Value> {\n    var wrappedValue: Value\n\n    var projectedValue: Self { return self }\n\n    init(wrappedValue: Value) { ... }\n\n    init(projectedValue: Self) { ... }\n  }\n\n  func test(@Wrapper value: Int) {\n    print(value)\n    print($value)\n    print(_value)\n  }\n\n  test(value: 10)\n\n  let projection = Wrapper(wrappedValue: 10)\n  test($value: projection)\n  ```\n\n  The call-site can pass a wrapped value or a projected value, and the property wrapper will be initialized using `init(wrappedValue:)` or `init(projectedValue:)`, respectively.\n\n* [SE-0299][]:\n\n  It is now possible to use leading-dot syntax in generic contexts to access static members of protocol extensions where `Self` is constrained to a fully concrete type:\n\n  ```swift\n  public protocol ToggleStyle { ... }\n\n  public struct DefaultToggleStyle: ToggleStyle { ... }\n\n  extension ToggleStyle where Self == DefaultToggleStyle {\n    public static var `default`: Self { .init() }\n  }\n\n  struct Toggle {\n    func applyToggle<T: ToggleStyle>(_ style: T) { ... }\n  }\n\n  Toggle(...).applyToggle(.default)\n  ```\n\n* Whenever a reference to `Self` does not impede the usage of a protocol as a value type, or a protocol member on a value of protocol type, the same is now true for references to `[Self]` and `[Key : Self]`:\n\n  ```swift\n  protocol Copyable {\n    func copy() -> Self\n    func copy(count: Int) -> [Self]\n  }\n\n  func test(c: Copyable) {\n    let copy: Copyable = c.copy() // OK\n    let copies: [Copyable] = c.copy(count: 5) // also OK\n  }\n  ```\n\n* [SE-0296][]:\n\n  Asynchronous programming is now natively supported using async/await. Asynchronous functions can be defined using `async`:\n\n  ```swift\n  func loadWebResource(_ path: String) async throws -> Resource { ... }\n  func decodeImage(_ r1: Resource, _ r2: Resource) async throws -> Image\n  func dewarpAndCleanupImage(_ i : Image) async -> Image\n  ```\n\n  Calls to `async` functions may suspend, meaning that they give up the thread on which they are executing and will be scheduled to run again later. The potential for suspension on asynchronous calls requires the `await` keyword, similarly to the way in which `try` acknowledges a call to a `throws` function:\n\n  ```swift\n  func processImageData() async throws -> Image {\n    let dataResource  = try await loadWebResource(\"dataprofile.txt\")\n    let imageResource = try await loadWebResource(\"imagedata.dat\")\n    let imageTmp      = try await decodeImage(dataResource, imageResource)\n    let imageResult   = await dewarpAndCleanupImage(imageTmp)\n    return imageResult\n  }\n  ```\n\n* The `lazy` keyword now works in local contexts, making the following valid:\n\n  ```swift\n  func test(useIt: Bool) {\n    lazy var result = getPotentiallyExpensiveResult()\n    if useIt {\n      doIt(result)\n    }\n  }\n  ```\n\n* [SE-0297][]:\n\n  An Objective-C method that delivers its results asynchronously via a completion handler block will be translated into an `async` method that directly returns the result (or throws). For example, the following Objective-C method from [CloudKit](https://developer.apple.com/documentation/cloudkit/ckcontainer/1640387-fetchshareparticipantwithuserrec):\n\n  ```objc\n  - (void)fetchShareParticipantWithUserRecordID:(CKRecordID *)userRecordID\n      completionHandler:(void (^)(CKShareParticipant * _Nullable, NSError * _Nullable))completionHandler;\n  ```\n\n  will be translated into an `async throws` method that returns the participant instance:\n\n  ```swift\n  func fetchShareParticipant(\n      withUserRecordID userRecordID: CKRecord.ID\n  ) async throws -> CKShare.Participant\n  ```\n\n  Swift callers can invoke this `async` method within an `await` expression:\n\n  ```swift\n  guard let participant = try? await container.fetchShareParticipant(withUserRecordID: user) else {\n      return nil\n  }\n  ```\n\n* [SE-0298][]:\n\n  The \"for\" loop can be used to traverse asynchronous sequences in asynchronous code:\n\n  ```swift\n  for try await line in myFile.lines() {\n    // Do something with each line\n  }\n  ```\n\n  Asynchronous for loops use asynchronous sequences, defined by the protocol\n  `AsyncSequence` and its corresponding `AsyncIterator`.\n\n## Swift 5.4\n\n### 2021-04-26 (Xcode 12.5)\n\n* Protocol conformance checking now considers `where` clauses when evaluating if a `typealias` is a suitable witness for an associated type requirement. The following code is now rejected:\n\n  ```swift\n  protocol Holder {\n    associatedtype Contents\n  }\n\n  struct Box<T> : Holder {}\n  // error: type 'Box<T>' does not conform to protocol 'Holder'\n\n  extension Box where T : Hashable {\n    typealias Contents = T\n  }\n  ```\n\n  In most cases, the compiler would either crash or produce surprising results when making use of a `typealias` with an unsatisfied `where` clause, but it is possible that some previously-working code is now rejected. In the above example, the conformance can be fixed in one of various ways:\n\n  1) making it conditional (moving the `: Holder` from the definition of `Box` to the extension)\n  2) moving the `typealias` from the extension to the type itself\n  3) relaxing the `where` clause on the extension\n\n* Availability checking now rejects protocols that refine less available protocols. Previously, this was accepted by the compiler but could result in linker errors or runtime crashes:\n\n  ```swift\n  @available(macOS 11, *)\n  protocol Base {}\n\n  protocol Bad : Base {}\n  // error: 'Base' is only available in macOS 11 or newer\n\n  @available(macOS 11, *)\n  protocol Good : Base {} // OK\n  ```\n\n* The `@available` attribute is no longer permitted on generic parameters, where it had no effect:\n\n  ```swift\n  struct Bad<@available(macOS 11, *) T> {}\n  // error: '@available' attribute cannot be applied to this declaration\n\n  struct Good<T> {} // equivalent\n  ```\n\n* If a type is made to conform to a protocol via an extension, the availability of the extension is now taken into account when forming generic types that use this protocol conformance. For example, consider a `Box` type whose conformance to `Hashable` uses features only available on macOS 11:\n\n  ```swift\n  public struct Box {}\n\n  @available(macOS 11, *)\n  extension Box : Hashable {\n    func hash(into: inout Hasher) {\n      // call some new API to hash the value...\n    }\n  }\n\n  public func findBad(_: Set<Box>) -> Box {}\n  // warning: conformance of 'Box' to 'Hashable' is only available in macOS 11 or newer\n\n  @available(macOS 11, *)\n  public func findGood(_: Set<Box>) -> Box {} // OK\n  ```\n\n  In the above code, it is not valid for `findBad()` to take a `Set<Box>`, since `Set` requires that its element type conform to `Hashable`; however the conformance of `Box` to `Hashable` is not available prior to macOS 11.\n\n  Note that using an unavailable protocol conformance is a warning, not an error, to avoid potential source compatibility issues. This is because it was technically possible to write code in the past that made use of unavailable protocol conformances but worked anyway, if the optimizer had serendipitously eliminated all runtime dispatch through this conformance, or the code in question was entirely unreachable at runtime.\n\n  Protocol conformances can also be marked as completely unavailable or deprecated, by placing an appropriate `@available` attribute on the extension:\n\n  ```swift\n  @available(*, unavailable, message: \"Not supported anymore\")\n  extension Box : Hashable {}\n\n  @available(*, deprecated, message: \"Suggest using something else\")\n  extension Box : Hashable {}\n  ```\n\n  If a protocol conformance is defined on the type itself, it inherits availability from the type. You can move the protocol conformance to an extension if you need it to have narrower availability than the type.\n\n* When `swift` is run with no arguments, it starts a REPL (read eval print loop) that uses LLDB. The compiler also had a second REPL implementation, known as the \"integrated REPL\", formerly accessible by running `swift -frontend -repl`. The \"integrated REPL\" was only intended for use by compiler developers, and has now been removed.\n\n  Note that this does not take away the ability to put Swift code in a script and run it with `swift myScript.swift`. This so-called \"script mode\" is distinct from the integrated REPL, and continues to be supported.\n\n* Property wrappers now work in local contexts, making the following valid:\n\n  ```swift\n  @propertyWrapper\n  struct Wrapper<T> {\n    var wrappedValue: T\n  }\n\n  func test() {\n    @Wrapper var value = 10\n  }\n  ```\n\n* [#52471][]:\n\n  Function overloading now works in local contexts, making the following valid:\n\n  ```swift\n  func outer(x: Int, y: String) {\n    func doIt(_: Int) {}\n    func doIt(_: String) {}\n\n    doIt(x) // calls the first 'doIt(_:)' with an Int value\n    doIt(y) // calls the second 'doIt(_:)' with a String value\n  }\n  ```\n\n* [SE-0284][]:\n\n  Functions, subscripts, and initializers may now have more than one variadic parameter, as long as all parameters which follow variadic parameters are labeled. This makes declarations like the following valid:\n\n  ```swift\n  func foo(_ a: Int..., b: Double...) { }\n\n  struct Bar {\n    subscript(a: Int..., b b: Int...) -> [Int] { a + b }\n\n    init(a: String..., b: Float...) { }\n  }\n  ```\n\n* [SE-0287][]:\n\n  Implicit member expressions now support chains of member accesses, making the following valid:\n  \n  ```swift\n  let milky: UIColor = .white.withAlphaComponent(0.5)\n  let milky2: UIColor = .init(named: \"white\")!.withAlphaComponent(0.5)\n  let milkyChance: UIColor? = .init(named: \"white\")?.withAlphaComponent(0.5)\n  ```\n  \n  As is the case with the existing implicit member expression syntax, the resulting type of the chain must be the same as the (implicit) base, so it is not well-formed to write:\n  \n  ```swift\n  let cgMilky: CGColor = .white.withAlphaComponent(0.5).cgColor\n  ```\n  \n  (Unless, of course, appropriate `white` and `withAlphaComponent` members were defined on `CGColor`.)\n  \n  Members of a \"chain\" can be properties, method calls, subscript accesses, force unwraps, or optional chaining question marks. Furthermore, the type of each member along the chain is permitted to differ (again, as long as the base of the chain matches the resulting type) meaning the following successfully typechecks:\n  \n  ```swift\n  struct Foo {\n    static var foo = Foo()\n    static var bar = Bar()\n    \n    var anotherFoo: Foo { Foo() }\n    func getFoo() -> Foo { Foo() }\n    var optionalFoo: Foo? { Foo() }\n    subscript() -> Foo { Foo() }\n  }\n  \n  struct Bar {\n    var anotherFoo = Foo()\n  }\n\n  let _: Foo? = .bar.anotherFoo.getFoo().optionalFoo?.optionalFoo![]\n  ```\n\n## Swift 5.3\n\n### 2020-09-16 (Xcode 12.0)\n\n* [SE-0279][] & [SE-0286][]:\n\n  Trailing closure syntax has been extended to allow additional labeled closures to follow the initial unlabeled closure:\n  \n  ```swift\n  // Single trailing closure argument\n  UIView.animate(withDuration: 0.3) {\n    self.view.alpha = 0\n  }\n  // Multiple trailing closure arguments\n  UIView.animate(withDuration: 0.3) {\n    self.view.alpha = 0\n  } completion: { _ in\n    self.view.removeFromSuperview()\n  }\n  ```\n  \n  Additionally, trailing closure arguments now match the appropriate parameter according to a forward-scan rule (as opposed to the previous backward-scan rule):\n  \n  ```swift\n  func takesClosures(first: () -> Void, second: (Int) -> Void = { _ in }) {}\n  \n  takesClosures {\n    print(\"First\")\n  }\n  ```\n  \n  In the above example, the trailing closure argument matches parameter `first`, whereas pre-Swift-5.3 it would have matched `second`. In order to ease the transition to this new rule, cases in which the forward-scan and backward-scan match a single trailing closure to different parameters, the backward-scan result is preferred and a warning is emitted. This is expected to be upgraded to an error in the next major version of Swift.\n\n* [#49631][]:\n\n  Property observers such as `willSet` and `didSet` are now supported on `lazy` properties:\n\n  ```swift\n  class C {\n    lazy var property: Int = 0 {\n      willSet { print(\"willSet called!\") } // Okay\n      didSet { print(\"didSet called!\") } // Okay\n    }\n  }\n  ```\n\n  Note that the initial value of the property will be forced and made available as the `oldValue` for the `didSet` observer, if the property hasn't been accessed yet.\n  \n  ```swift\n  class C {\n    lazy var property: Int = 0 {\n      didSet { print(\"Old value: \", oldValue) }\n    }\n  }\n\n  let c = C()\n  c.property = 1 // Prints 'Old value: 0'\n  ```\n\n  This could have side-effects, for example if the lazy property's initializer is doing other work.\n\n* [#54108][]:\n\n  Exclusivity violations within code that computes the `default`\n  argument during Dictionary access are now diagnosed.\n\n  ```swift\n  struct Container {\n     static let defaultKey = 0\n\n     var dictionary = [defaultKey:0]\n\n     mutating func incrementValue(at key: Int) {\n       dictionary[key, default: dictionary[Container.defaultKey]!] += 1\n     }\n  }\n  // error: overlapping accesses to 'self.dictionary', but modification requires exclusive access; consider copying to a local variable\n  //     dictionary[key, default: dictionary[Container.defaultKey]!] += 1\n  //     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  // note: conflicting access is here\n  //     dictionary[key, default: dictionary[Container.defaultKey]!] += 1\n  //                              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n  ```\n\n  The exclusivity violation can be avoided by precomputing the `default`\n  argument using a local variable.\n\n  ```swift\n  struct Container {\n    static let defaultKey = 0\n\n    var dictionary = [defaultKey:0]\n\n    mutating func incrementValue(at key: Int) {\n      let defaultValue = dictionary[Container.defaultKey]!\n      dictionary[key, default: defaultValue] += 1\n    }\n  }\n  // No error.\n  ```\n\n* [SE-0268][]:\n  \n  A `didSet` observer which does not refer to the `oldValue` in its body or does not explicitly request it by placing it in the parameter list (i.e. `didSet(oldValue)`) will no longer trigger a call to the property getter to fetch the `oldValue`.\n  \n  ```swift\n  class C {\n    var value: Int = 0 {\n      didSet { print(\"didSet called!\") }\n    }\n  }\n  \n  let c = C()\n  // This does not trigger a call to the getter for 'value'\n  // because the 'didSet' observer on 'value' does not\n  // refer to the 'oldValue' in its body, which means\n  // the 'oldValue' does not need to be fetched.\n  c.value = 1\n  ```\n  \n* [SE-0276][]:\n\n  Catch clauses in a `do`-`catch` statement can now include multiple patterns in a comma-separated list. The body of a `catch` clause will be executed if a thrown error matches any of its patterns.\n\n  ```swift\n  do {\n    try performTask()\n  } catch TaskError.someFailure(let msg),\n          TaskError.anotherFailure(let msg) {\n    showMessage(msg)\n  }\n  ```\n\n* [SE-0280][]:\n  \n  Enum cases can now satisfy static protocol requirements. A static get-only property of type `Self` can be witnessed by an enum case with no associated values and a static function with arguments and returning `Self` can be witnessed by an enum case with associated values.\n  \n  ```swift\n  protocol P {\n    static var foo: Self { get }\n    static func bar(value: Int) -> Self\n  }\n  \n  enum E: P {\n    case foo // matches 'static var foo'\n    case bar(value: Int) // matches 'static func bar(value:)'\n  }\n  ```\n\n* [SE-0267][]:\n  \n  Non-generic members that support a generic parameter list, including nested type declarations, are now allowed to carry a contextual `where` clause against outer generic parameters. Previously, such declarations could only be expressed by placing the member inside a dedicated constrained extension.\n\n  ```swift\n  struct Box<Wrapped> {\n    func boxes() -> [Box<Wrapped.Element>] where Wrapped: Sequence { ... }\n  }\n  ```\n  Since contextual `where` clauses are effectively visibility constraints, overrides adopting this feature must be at least as visible as the overridden method. In practice, this implies any instance of `Derived` that can access `Base.foo` must also be able to access `Derived.foo`.\n  \n  ```swift\n  class Base<T> {\n    func foo() where T == Int { ... }\n  }\n  \n  class Derived<U>: Base<U> {\n    // OK, <U where U: Equatable> has broader visibility than <T where T == Int>\n    override func foo() where U: Equatable { ... } \n  }\n\n* [#42697][]:\n\n  Unapplied references to protocol methods are now supported. Previously this\n  only worked for methods defined in structs, enums and classes.\n\n  ```swift\n  protocol Cat {\n    func play(catToy: Toy)\n  }\n\n  let fn = Cat.play(catToy:)\n  fn(myCat)(myToy)\n  ```\n\n* [SE-0266][]:\n  \n  Enumerations with no associated values, or only `Comparable` associated values, can opt-in to synthesized `Comparable` conformance by declaring conformance to the `Comparable` protocol. The synthesized implementation orders the cases first by case-declaration order, and then by lexicographic order of the associated values (if any).\n  \n  ```swift\n  enum Foo: Comparable {\n    case a(Int), b(Int), c\n  }\n  \n  // .a(0) < .a(1) < .b(0) < .b(1) < .c\n  ```\n\n* [SE-0269][]:\n\n  When an escaping closure explicitly captures `self` in its capture list, the\n  use of implicit `self` is enabled within that closure. This means that the\n  following code is now valid:\n  \n  ```swift\n  func doStuff(_ stuff: @escaping () -> Void) {}\n  \n  class C {\n    var x = 0\n\n    func method() {\n      doStuff { [self] in\n        x += 1\n      }\n    }\n  }\n  ```\n  \n  This proposal also introduces new diagnostics for inserting `self` into the\n  closure's capture list in addition to the existing 'use `self.` explicitly'\n  fix-it.\n\n## Swift 5.2\n\n### 2020-03-24 (Xcode 11.4)\n\n* [#54246][]:\n\n  When chaining calls to `filter(_:)` on a lazy sequence or collection, the\n  filtering predicates will now be called in the same order as eager filters.\n  \n  ```swift\n  let evens = (1...10).lazy\n      .filter { $0.isMultiple(of: 2) }\n      .filter { print($0); return true }\n  _ = evens.count\n  // Prints 2, 4, 6, 8, and 10 on separate lines\n  ```\n  \n  Previously, the predicates were called in reverse order.\n  \n* [apple/swift-corelibs-foundation#4326][]:\n\n  The compiler will now emit a warning when attempting to pass a temporary\n  pointer argument produced from an array, string, or inout argument to a\n  parameter which is known to escape it. This includes the various initializers \n  for the `UnsafePointer`/`UnsafeBufferPointer` family of types, as well as\n  memberwise initializers.\n\n  ```swift\n  struct S {\n    var ptr: UnsafePointer<Int8>\n  }\n\n  func foo() {\n    var i: Int8 = 0\n    let ptr = UnsafePointer(&i)\n    // warning: initialization of 'UnsafePointer<Int8>' results in a \n    // dangling pointer\n    \n    let s1 = S(ptr: [1, 2, 3]) \n    // warning: passing '[Int8]' to parameter, but argument 'ptr' should be a\n    // pointer that outlives the call to 'init(ptr:)'\n    \n    let s2 = S(ptr: \"hello\")\n    // warning: passing 'String' to parameter, but argument 'ptr' should be a\n    // pointer that outlives the call to 'init(ptr:)'\n  }\n  ```\n\n  All 3 of the above examples are unsound because each argument produces a\n  temporary pointer only valid for the duration of the call they are passed to.\n  Therefore the returned value in each case references a dangling pointer.\n\n* [#44797][]:\n\n  The compiler now supports local functions whose default arguments capture\n  values from outer scopes.\n\n  ```swift\n  func outer(x: Int) -> (Int, Int) {\n    func inner(y: Int = x) -> Int {\n      return y\n    }\n\n    return (inner(), inner(y: 0))\n  }\n  ```\n\n* [#53830][]:\n\n  The compiler will now correctly strip argument labels from function references\n  used with the `as` operator in a function call. As a result, the `as` operator\n  can now be used to disambiguate a call to a function with argument labels. \n  \n  ```swift\n  func foo(x: Int) {}\n  func foo(x: UInt) {}\n  \n  (foo as (Int) -> Void)(5)  // Calls foo(x: Int)\n  (foo as (UInt) -> Void)(5) // Calls foo(x: UInt)\n  ```\n  \n  Previously this was only possible for functions without argument labels.\n  \n  This change also means that a generic type alias can no longer be used to\n  preserve the argument labels of a function reference through the `as`\n  operator. The following is now rejected:\n  \n  ```swift\n  typealias Magic<T> = T\n  func foo(x: Int) {}\n  (foo as Magic)(x: 5) // error: Extraneous argument label 'x:' in call\n  ```\n  \n  The function value must instead be called without argument labels:\n  \n  ```swift\n  (foo as Magic)(5)\n  ```\n\n* [#53699][]:\n\n  A class-constrained protocol extension, where the extended protocol does\n  not impose a class constraint, will now infer the constraint implicitly.\n\n  ```swift\n  protocol Foo {}\n  class Bar: Foo {\n    var someProperty: Int = 0\n  }\n\n  // Even though 'Foo' does not impose a class constraint, it is automatically\n  // inferred due to the Self: Bar constraint.\n  extension Foo where Self: Bar {\n    var anotherProperty: Int {\n      get { return someProperty }\n      // As a result, the setter is now implicitly nonmutating, just like it would\n      // be if 'Foo' had a class constraint.\n      set { someProperty = newValue }\n    }\n  }\n  ```\n\n* [SE-0253][]:\n\n  Values of types that declare `func callAsFunction` methods can be called\n  like functions. The call syntax is shorthand for applying\n  `func callAsFunction` methods.\n\n  ```swift\n  struct Adder {\n    var base: Int\n    func callAsFunction(_ x: Int) -> Int {\n      return x + base\n    }\n  }\n  var adder = Adder(base: 3)\n  adder(10) // returns 13, same as `adder.callAsFunction(10)`\n  ```\n\n  * `func callAsFunction` argument labels are required at call sites.\n  * Multiple `func callAsFunction` methods on a single type are supported.\n  * `mutating func callAsFunction` is supported.\n  * `func callAsFunction` works with `throws` and `rethrows`.\n  * `func callAsFunction` works with trailing closures.\n  \n* [SE-0249][]:\n\n  A `\\Root.value` key path expression is now allowed wherever a `(Root) -> Value` \n  function is allowed. Such an expression is implicitly converted to a key path \n  application of `{ $0[keyPath: \\Root.value] }`.\n  \n  For example:\n  \n  ```swift\n  struct User {\n    let email: String\n    let isAdmin: Bool\n  }\n  \n  users.map(\\.email) // this is equivalent to: users.map { $0[keyPath: \\User.email] }\n  ```\n\n* [#46789][]:\n\n  A method override is no longer allowed to have a generic signature with\n  requirements not imposed by the base method. For example:\n\n  ```swift\n  protocol P {}\n  \n  class Base {\n    func foo<T>(arg: T) {}\n  }\n  \n  class Derived: Base {\n    override func foo<T: P>(arg: T) {}\n  }\n  ```\n\n  will now be diagnosed as an error.\n\n* [#48673][]:\n\n  Subscripts can now declare default arguments:\n\n  ```swift\n  struct Subscriptable {\n    subscript(x: Int, y: Int = 0) {\n      ...\n    }\n  }\n\n  let s = Subscriptable()\n  print(s[0])\n  ```\n\n## Swift 5.1\n\n### 2019-09-20 (Xcode 11.0)\n\n* [#51478][]:\n\n  Duplicate tuple element labels are no longer allowed, because it leads\n  to incorrect behavior. For example:\n\n  ```swift\n  let dupLabels: (foo: Int, foo: Int) = (foo: 1, foo: 2)\n\n  enum Foo { case bar(x: Int, x: Int) }\n  let f: Foo = .bar(x: 0, x: 1)\n  ```\n\n  will now be diagnosed as an error. \n\n  Note: You can still use duplicate argument labels when declaring functions and\n  subscripts, as long as the internal parameter names are different. For example:\n\n  ```swift\n  func foo(bar x: Int, bar y: Int) {}\n  subscript(a x: Int, a y: Int) -> Int {}\n  ```\n\n* [SE-0244][]:\n\n  Functions can now hide their concrete return type by declaring what protocols\n  it conforms to instead of specifying the exact return type:\n\n  ```swift\n  func makeMeACollection() -> some Collection {\n    return [1, 2, 3]\n  }\n  ```\n\n  Code that calls the function can use the interface of the protocol, but\n  does not have visibility into the underlying type.\n\n* [SE-0254][]:\n\n  Subscripts can now be declared `static` or (inside classes) `class`.\n\n* [SE-0252][]:\n\n  The existing `@dynamicMemberLookup` attribute has been extended with a\n  support for strongly-typed keypath implementations:\n\n  ```swift\n  @dynamicMemberLookup\n  struct Lens<T> {\n    let getter: () -> T\n    let setter: (T) -> Void\n\n    var value: T {\n      get {\n        return getter()\n      }\n      set {\n        setter(newValue)\n      }\n    }\n\n    subscript<U>(dynamicMember keyPath: WritableKeyPath<T, U>) -> Lens<U> {\n      return Lens<U>(\n          getter: { self.value[keyPath: keyPath] },\n          setter: { self.value[keyPath: keyPath] = $0 })\n    }\n  }\n  ```\n\n* [#51064][], [#51546][]:\n\n  More thorough checking has been implemented for restrictions around\n  escaping closures capturing `inout` parameters or values of noescape type.\n  While most code should not be affected, there are edge cases where\n  the Swift 5.0 compiler would accept code violating these restrictions.\n  This could result in runtime crashes or silent data corruption.\n  \n  An example of invalid code which was incorrectly accepted by the Swift 5.0\n  compiler is an `@escaping` closure calling a local function which\n  references an `inout` parameter from an outer scope:\n\n  ```swift\n  struct BadCaptureExample {\n    var escapingClosure: () -> ()\n\n    mutating func takesInOut(_ x: inout Int) {\n      func localFunction() {\n        x += 1\n      }\n\n      escapingClosure = { localFunction() }\n    }\n  }\n  ```\n\n  The compiler now correctly diagnoses the above code by pointing out that\n  the capture of `x` by `localFunction()` is invalid, since `localFunction()`\n  is referenced from an `@escaping` closure.\n\n  This also addresses certain cases where the compiler incorrectly diagnosed\n  certain code as invalid, when in fact no violation of restrictions had\n  taken place. For example,\n\n  ```swift\n  func takesNoEscape(_ fn: () -> ()) {\n    func localFunction() {\n      fn()\n    }\n\n    { localFunction() }()\n  }\n  ```\n\n* [#45277][]:\n\n  Conversions between tuple types are now fully implemented.\n  Previously, the following would diagnose an error:\n\n  ```swift\n  let values: (Int, Int) = (10, 15)\n  let converted: (Int?, Any) = values\n\n* [SE-0242][]:\n\n  The memberwise initializer for structures now provide default values for variables that hold default expressions.\n\n  ```swift\n  struct Dog {\n    var name = \"Generic dog name\"\n    var age = 0\n\n    // The synthesized memberwise initializer\n    init(name: String = \"Generic dog name\", age: Int = 0)\n  }\n\n  let sparky = Dog(name: \"Sparky\") // Dog(name: \"Sparky\", age: 0)\n  ```\n\n* [SE-0068][]:\n\n  It is now possible to use `Self` to refer to the innermost nominal\n  type inside struct, enum and class declarations. For example, the\n  two method declarations inside this struct are equivalent:\n  \n  ```swift\n  struct Box<Value> {\n    func transform1() -> Self { return self }\n    func transform2() -> Box<Value> { return self }\n  }\n  ```\n\n  In classes, `Self` is the dynamic type of the `self` value, as before.\n  Existing restrictions on `Self` in declaration types still apply;\n  that is, `Self` can only appear as the return type of a method.\n  However, `Self` can now be used inside the body of a method\n  without limitation.\n\n* [#50338][]:\n\n  Enum cases can now be matched against an optional enum without\n  requiring a '?' at the end of the pattern.\n\n  ```swift\n  enum Foo { case zero, one }\n\n  let foo: Foo? = .zero\n\n  switch foo {\n    case .zero: break\n    case .one: break\n    case .none: break\n  }\n  ```\n\n* [#52244][]:\n\n  `weak` and `unowned` stored properties no longer inhibit the\n   automatic synthesis of `Equatable` or `Hashable` conformance.\n\n* [#45293][]:\n\n  An `@autoclosure` parameter can now be declared with a typealias type.\n\n  ```swift\n  class Foo {\n    typealias FooClosure = () -> String\n    func fooFunction(closure: @autoclosure FooClosure) {}\n  }\n  ```\n\n* [#50143][]:\n\n  Methods declared `@objc` inside a class can now return `Self`:\n\n  ```swift\n  class MyClass : NSObject {\n    @objc func clone() -> Self { return self }\n  }\n  ```\n\n* [#44784][]:\n\n  Assigning '.none' to an optional enum which also has a 'none' case\n  or comparing such an enum with '.none' will now warn. Such expressions\n  create an ambiguity because the compiler chooses Optional.none\n  over Foo.none.\n\n  ```swift\n  enum Foo { case none }\n\n  // Assigned Optional.none instead of Foo.none\n  let foo: Foo? = .none\n  // Comparing with Optional.none instead of Foo.none\n  let isEqual = foo == .none\n  ```\n\n  The compiler will provide a warning along with a fix-it to\n  replace '.none' with 'Optional.none' or 'Foo.none' to resolve\n  the ambiguity.\n\n* Key path expressions can now include references to tuple elements.\n\n* Single-parameter functions accepting values of type `Any` are no\n  longer preferred over other functions.\n\n  ```swift\n  func foo(_: Any) { print(\"Any\") }\n  func foo<T>(_: T) { print(\"T\") }\n  foo(0) // prints \"Any\" in Swift < 5.1, \"T\" in Swift 5.1\n  ```\n\n* [SE-0245][]:\n\n  `Array` and `ContiguousArray` now have `init(unsafeUninitializedCapacity:initializingWith:)`,\n  which provides access to the array's uninitialized storage.\n\n## Swift 5.0\n\n### 2019-03-25 (Xcode 10.2)\n\n* [SE-0235][]:\n\n  The standard library now contains a `Result` type for manually propagating errors.\n  \n  ```swift\n  enum Result<Success, Failure: Error> {\n      case success(Success)\n      case failure(Failure)\n  }\n  ```\n  \n  This type serves a complementary role to that of throwing functions and initializers. \n  Use `Result` in situations where automatic error propagation or `try`-`catch` \n  blocks are undesirable, such as in asynchronous code or when accumulating the \n  results of successive error-producing operations.\n  \n* `Error` now conforms to itself. This allows for the use of `Error` itself as \n  the argument for a generic parameter constrained to `Error`.\n\n* Swift 3 mode has been removed. Supported values for the `-swift-version`\n  flag are `4`, `4.2`, and `5`.\n\n* [SE-0228][]:\n\n  String interpolation has been overhauled to improve its performance,\n  clarity, and efficiency.\n\n  Note that the old `_ExpressibleByStringInterpolation` protocol has been\n  removed; any code making use of this protocol will need to be updated\n  for the new design. An `#if compiler` block can be used to conditionalize\n  code between 4.2 and 5.0, for example:\n  \n  ```swift\n  #if compiler(<5.0)\n  extension MyType : _ExpressibleByStringInterpolation { ... }\n  #else\n  extension MyType : ExpressibleByStringInterpolation { ... }\n  #endif\n  ```\n\n* [SE-0213][]:\n\n  If `T` conforms to one of the `ExpressibleBy*` protocols and `literal` is a\n  literal expression, then `T(literal)` will construct a literal of type `T`\n  using the corresponding protocol, rather than calling a constructor member\n  of `T` with a value of  the protocol's default literal type.\n\n  For example, expressions like `UInt64(0xffff_ffff_ffff_ffff)` are now valid,\n  where previously they would overflow the default integer literal type of `Int`.\n\n* [SE-0230][]:\n\n  In Swift 5 mode, `try?` with an expression of Optional type will flatten the\n  resulting Optional, instead of returning an Optional of an Optional.\n\n* [#48289][]:\n\n  In Swift 5 mode, `@autoclosure` parameters can no longer be forwarded to\n  `@autoclosure` arguments in another function call. Instead, you must explicitly\n  call the function value with `()`; the call itself is wrapped inside an\n  implicit closure, guaranteeing the same behavior as in Swift 4 mode.\n\n  Example:\n\n  ```swift\n  func foo(_ fn: @autoclosure () -> Int) {}\n  func bar(_ fn: @autoclosure () -> Int) {\n    foo(fn)   // Incorrect, `fn` can't be forwarded and has to be called\n    foo(fn()) // Ok\n  }\n  ```\n\n* [#50641][]:\n\n  Single-element labeled tuple expressions, for example `(label: 123)`, were\n  allowed in some contexts but often resulted in surprising, inconsistent\n  behavior that varied across compiler releases. They are now completely\n  disallowed.\n\n  Note that single-element labeled _types_, for example `var x: (label: Int)`,\n  have already been prohibited since Swift 3.\n\n* [#43310][]:\n\n  In Swift 5 mode, a class method returning `Self` can no longer be overridden\n  with a method returning a non-final concrete class type. Such code is not\n  type safe and will need to be updated.\n\n  For example,\n\n  ```swift\n  class Base {\n    class func factory() -> Self { ... }\n  }\n\n  class Derived : Base {\n    class override func factory() -> Derived { ... }\n  }\n  ```\n\n* In Swift 5 mode, the type of `self` in a convenience initializer of a non-final\n  class is now the dynamic `Self` type, and not the concrete class type.\n\n* [#48153][]:\n\n  Protocols can now constrain their conforming types to those that subclasses a\n  given class. Two equivalent forms are supported:\n\n  ```swift\n  protocol MyView : UIView { ... }\n  protocol MyView where Self : UIView { ... }\n  ```\n\n  Note that Swift 4.2 accepted the second form, but it was not fully implemented\n  and could sometimes crash at compile time or run time.\n\n* [#43248][]:\n\n  Extension binding now supports extensions of nested types which themselves are\n  defined inside extensions. Previously this could fail with some declaration orders,\n  producing spurious \"undeclared type\" errors.\n\n* [#49687][]:\n\n  Exclusive memory access is now enforced at runtime by default in\n  optimized (`-O`/`-Osize`) builds. Programs that violate exclusivity will\n  trap at runtime with an \"overlapping access\" diagnostic\n  message. This can be disabled via a command line flag:\n  `-enforce-exclusivity=unchecked`, but doing so may result in undefined\n  behavior.\n\n  Runtime violations of exclusivity typically result from\n  simultaneous access of class properties, global variables (including\n  variables in top-level code), or variables captured by escaping\n  closures.\n\n* [SE-0216][]:\n\n  The `@dynamicCallable` attribute enables nominal types to be \"callable\" via a\n  simple syntactic sugar. The primary use case is dynamic language\n  interoperability.\n\n  Toy example:\n\n  ```swift\n  @dynamicCallable\n  struct ToyCallable {\n    func dynamicallyCall(withArguments: [Int]) {}\n    func dynamicallyCall(withKeywordArguments: KeyValuePairs<String, Int>) {}\n  }\n  let x = ToyCallable()\n  x(1, 2, 3) // desugars to `x.dynamicallyCall(withArguments: [1, 2, 3])`\n  x(label: 1, 2) // desugars to `x.dynamicallyCall(withKeywordArguments: [\"label\": 1, \"\": 2])`\n  ```\n\n* [#49799][]:\n\n  In Swift 5 mode, attempting to declare a static property with the same name as a\n  nested type is now always correctly rejected. Previously, it was possible to\n  perform such a redeclaration in an extension of a generic type.\n  \n  For example:\n  ```swift\n  struct Foo<T> {}\n  extension Foo {\n    struct i {}\n    \n    // compiler error: Invalid redeclaration of 'i'\n    // (prior to Swift 5, this did not produce an error)\n    static var i: Int { return 0 }\n  }\n  ```\n\n* [#46831][]:\n\n  In Swift 5 mode, when casting an optional value to a generic placeholder type,\n  the compiler will be more conservative with the unwrapping of the value. The \n  result of such a cast now more closely matches the result you would get in a\n  non-generic context.\n  \n  For example:\n  ```swift\n  func forceCast<U>(_ value: Any?, to type: U.Type) -> U {\n    return value as! U\n  }\n\n  let value: Any? = 42\n  print(forceCast(value, to: Any.self)) \n  // prints: Optional(42)\n  // (prior to Swift 5, this would print: 42)\n  \n  print(value as! Any)                  \n  // prints: Optional(42)\n  ```\n\n* [SE-0227][]:\n\n  Key paths now support the `\\.self` keypath, which is a `WritableKeyPath`\n  that refers to its entire input value:\n\n    ```swift\n    let id = \\Int.self\n\n    var x = 2\n    print(x[keyPath: id]) // prints 2\n    x[keyPath: id] = 3\n    print(x[keyPath: id]) // prints 3\n    ```\n\n* [SE-0214][]:\n\n  The `DictionaryLiteral` type has been renamed to `KeyValuePairs`.\n  A typealias preserves the old name for compatibility.\n\n* [#45213][]\n\n  Default arguments are now printed in SourceKit-generated interfaces for Swift\n  modules, instead of just using a placeholder `default`.\n\n* `unowned` and `unowned(unsafe)` variables now support Optional types.\n\n* Designated initializers with variadic parameters are now correctly inherited\n  in subclasses.\n\n* Extensions of concrete subclasses of generic classes can now contain\n  `@objc` members.\n\n* Complex recursive type definitions involving classes and generics that would\n  previously cause deadlocks at run time are now fully supported.\n\n* [#43036][]\n\n  In Swift 5 mode, when setting a property from within its own `didSet` or\n  `willSet` observer, the observer will now only avoid being recursively called\n  if the property is set on `self` (either implicitly or explicitly).\n\n  For example:\n  ```swift\n  class Node {\n    var children = [Node]()\n\n    var depth: Int = 0 {\n      didSet {\n        if depth < 0 {\n          // Will not recursively call didSet, as setting depth on self (same\n          // with `self.depth = 0`).\n          depth = 0\n        }\n\n        // Will call didSet for each of the children, as we're not setting the\n        // property on self (prior to Swift 5, this did not trigger property\n        // observers to be called again).\n        for child in children {\n          child.depth = depth + 1\n        }\n      }\n    }\n  }\n  ```\n\n## Swift 4.2\n\n### 2018-09-17 (Xcode 10.0)\n\n* [SE-0202][]\n\n  The standard library now provides a unified set of randomization functionality.\n  Integer types, floating point types, and Bool all introduce a new static\n  method that creates a random value.\n  \n  ```swift\n  let diceRoll = Int.random(in: 1 ... 6)\n  let randomUnit = Double.random(in: 0 ..< 1)\n  let randomBool = Bool.random()\n  ```\n  \n  There are also additions to select a random element from a collection or\n  shuffle its contents.\n  \n  ```swift\n  let greetings = [\"hey\", \"hello\", \"hi\", \"hola\"]\n  let randomGreeting = greetings.randomElement()! // This returns an Optional\n  let newGreetings = greetings.shuffled() // [\"hola\", \"hi\", \"hey\", \"hello\"]\n  ```\n\n  Core to the randomization functionality is a new `RandomNumberGenerator`\n  protocol. The standard library defines its own random number generator\n  called `SystemRandomNumberGenerator` which is backed by a secure and\n  thread-safe random number generator on each platform. All the randomization\n  functions have a `using:` parameter that take a `RandomNumberGenerator` that\n  users can pass in their own random number generator.\n  \n  ```swift\n  struct MersenneTwister: RandomNumberGenerator {\n    func next() -> UInt64 {\n      // implementation\n    }\n  }\n  \n  var mt = MersenneTwister()\n  let diceRoll = Int.random(in: 1 ... 6, using: &mt)\n  ```\n\n* [SE-0194][]\n\n  The new CaseIterable protocol describes types which have a static\n  “allCases” property that is used to describe all of the cases of the\n  type. Swift will synthesize this “allCases” property for enums that\n  have no associated values. For example:\n\n  ```swift\n  enum Suit: CaseIterable {\n    case heart\n    case club\n    case diamond\n    case spade\n  }\n\n  print(Suit.allCases) // prints [Suit.heart, Suit.club, Suit.diamond, Suit.spade]\n  ```\n\n* [SE-0185][]\n\n  Protocol conformances are now able to be synthesized in extensions in the same\n  file as the type definition, allowing automatic synthesis of conditional\n  conformances to `Hashable`, `Equatable` and `Codable` (both `Encodable` and\n  `Decodable`). For instance, if there is a generic wrapper type that can only\n  be `Equatable` when its wrapped type is also `Equatable`, the `==` method can\n  be automatically constructed by the compiler:\n\n  ```swift\n  struct Generic<Param> {\n    var property: Param\n  }\n\n  extension Generic: Equatable where Param: Equatable {}\n  // Automatically synthesized inside the extension:\n  // static func ==(lhs: Generic, rhs: Generic) -> Bool {\n  //   return lhs.property == rhs.property\n  // }\n  ```\n\n  Code that wants to be as precise as possible should generally not\n  conditionally conform to `Codable` directly, but rather its two constituent\n  protocols `Encodable` and `Decodable`, or else one can only (for instance)\n  decode a `Generic<Param>` if `Param` is `Encodable` in addition to\n  `Decodable`, even though `Encodable` is likely not required:\n\n  ```swift\n  // Unnecessarily restrictive:\n  extension Generic: Codable where Param: Codable {}\n\n  // More precise:\n  extension Generic: Encodable where Param: Encodable {}\n  extension Generic: Decodable where Param: Decodable {}\n  ```\n\n  Finally, due to `Decodable` having an `init` requirement, it is not possible\n  to conform to `Decodable` in an extension of a non-final class: such a class\n  needs to have any `init`s from protocols be `required`, which means they need\n  to be in the class definition.\n\n\n* [SE-0054][]\n\n  `ImplicitlyUnwrappedOptional<T>` is now an unavailable typealias of `Optional<T>`.\n  Declarations annotated with `!` have the type `Optional<T>`. If an\n  expression involving one of these values will not compile successfully with the\n  type `Optional<T>`, it is implicitly unwrapped, producing a value of type `T`.\n\n  In some cases this change will cause code that previously compiled to\n  need to be adjusted. Please see [this blog post](https://swift.org/blog/iuo/)\n  for more information.\n\n* [SE-0206][]\n\n    The standard library now uses a high-quality, randomly seeded, universal\n    hash function, represented by the new public `Hasher` struct.\n  \n    “Random seeding” varies the result of `hashValue` on each execution of a\n    Swift program, improving the reliability of the standard library's hashed\n    collections such as `Set` and `Dictionary`. In particular, random seeding\n    enables better protection against (accidental or deliberate) hash-flooding\n    attacks.\n    \n    This change fulfills a long-standing prophecy in Hashable's documentation:\n\n    > Hash values are not guaranteed to be equal across different executions of\n    > your program. Do not save hash values to use during a future execution.\n    \n    As a consequence of random seeding, the elements in `Set` and `Dictionary`\n    values may have a different order on each execution. This may expose some\n    bugs in existing code that accidentally relies on repeatable ordering.\n\n    Additionally, the `Hashable` protocol now includes an extra function\n    requirement, `hash(into:)`. The new requirement is designed to be much\n    easier to implement than the old `hashValue` property, and it generally\n    provides better hashing. To implement `hash(into:)`, simply feed the exact\n    same components of your type that you compare in `Equatable`'s `==`\n    implementation to the supplied `Hasher`:\n    \n    ```swift\n    struct Foo: Hashable {\n      var a: String?\n      var b: [Int]\n      var c: [String: Int]\n      \n      static func ==(lhs: Foo, rhs: Foo) -> Bool {\n        return lhs.a == rhs.a && lhs.b == rhs.b && lhs.c == rhs.c\n      }\n      \n      func hash(into hasher: inout Hasher) {\n        hasher.combine(a)\n        hasher.combine(b)\n        hasher.combine(c)\n      }\n    }\n    ```\n    \n    Automatic synthesis for `Hashable` ([SE-0185]) has been updated to generate\n    `hash(into:)` implementations. For example, the `==` and `hash(into:)`\n    implementations above are equivalent to the ones synthesized by the\n    compiler, and can be removed without changing the meaning of the code.\n    \n    Synthesis has also been extended to support deriving `hashValue` from\n    `hash(into:)`, and vice versa. Therefore, code that only implements\n    `hashValue` continues to work in Swift 4.2. This new compiler functionality\n    works for all types that can implement `Hashable`, including classes.\n    \n    Note that these changes don't affect Foundation's hashing interface. Classes\n    that subclass `NSObject` should override the `hash` property, like before.\n\n    In certain controlled environments, such as while running particular tests,\n    it may be helpful to selectively disable hash seed randomization, so that\n    hash values and the order of elements in `Set`/`Dictionary` values remain\n    consistent across executions. You can disable hash seed randomization by\n    defining the environment variable `SWIFT_DETERMINISTIC_HASHING` with the\n    value of `1`. The Swift runtime looks at this variable during process\n    startup and, if it is defined, replaces the random seed with a constant\n    value.\n  \n* [#42728][]\n\n  The behavior of `.description` and `.debugDescription` for floating-point\n  numbers has been changed. Previously these unconditionally printed a fixed\n  number of decimal digits (e.g. 15 and 17 for Double, respectively). They now\n  print exactly as many digits as are needed for the resulting string to\n  convert back to the original source value, and no more. For more details,\n  see the original bug report and the linked pull request.\n\n* [SE-0193][]\n\n  Various function-like declarations can now be marked as `@inlinable`,\n  making their bodies available for optimizations from other modules.\n\n  Inlinable function bodies must only reference public declarations, unless\n  the referenced declaration is marked as `@usableFromInline`.\n\n  Note that the presence of the attribute itself does not force inlining or\n  any other optimization to be performed, nor does it have any effect on\n  optimizations performed within a single module.\n\n* The C `long double` type is now imported as `Float80` on i386 and x86_64\n  macOS and Linux. The tgmath functions in the Darwin and glibc modules now\n  support `Float80` as well as `Float` and `Double`. Several tgmath\n  functions have been made generic over `[Binary]FloatingPoint` so that they\n  will automatically be available for any conforming type.\n\n* [SE-0143][]\n\n  The standard library types `Optional`, `Array`, `ArraySlice`,\n  `ContiguousArray`, `Dictionary`, `Range`, and `ClosedRange` now conform to the\n  `Hashable` protocol when their element or bound types (as the case may be)\n  conform to `Hashable`.  This makes synthesized `Hashable` implementations\n  available for types that include stored properties of these types.\n\n* [SE-0196][]\n  \n  Custom compile-time warnings or error messages can be emitted using the\n  `#warning(_:)` and `#error(_:)` directives.\n\n  ```swift\n  #warning(\"this is incomplete\")\n\n  #if MY_BUILD_CONFIG && MY_OTHER_BUILD_CONFIG\n    #error(\"MY_BUILD_CONFIG and MY_OTHER_BUILD_CONFIG cannot both be set\")\n  #endif\n  ```\n\n* Public classes may now have internal `required` initializers. The rule for\n  `required` initializers is that they must be available everywhere the class\n  can be subclassed, but previously we said that `required` initializers on\n  public classes needed to be public themselves. (This limitation is a holdover\n  from before the introduction of the open/public distinction in Swift 3.)\n\n* C macros containing casts are no longer imported to Swift if the type in the\n  cast is unavailable or deprecated, or produces some other diagnostic when\n  referenced. (These macros were already only imported under very limited\n  circumstances with very simple values, so this is unlikely to affect\n  real-world code.)\n\n* [SE-0143][]\n\n  Runtime query of conditional conformances is now implemented. Therefore,\n  a dynamic cast such as `value as? P`, where the dynamic type of `value`\n  conditionally conforms to `P`, will succeed when the conditional\n  requirements are met.\n\n## Swift 4.1\n\n### 2018-03-29 (Xcode 9.3)\n\n* [SE-0075][]\n\n  Compile-time testing for the existence and importability of modules is now\n  implemented as a build configuration test.  The `canImport` test allows\n  the development of features that require a possibly-failing import \n  declaration across multiple platforms.  \n\n  ```swift\n  #if canImport(UIKit)\n    import UIKit\n    class MyView : UIView {}\n  #elseif canImport(AppKit)\n    import AppKit\n    class MyView : NSView {}\n  #else\n    class MyView : CustomView {}\n  #endif\n  ```\n\n* [SE-0189][]\n\n  If an initializer is declared in a different module from a struct, it must\n  use `self.init(…)` or `self = …` before returning or accessing `self`.\n  Failure to do so will produce a warning in Swift 4 and an error in Swift 5.\n  This is to keep a client app from accidentally depending on a library's\n  implementation details, and matches an existing restriction for classes,\n  where cross-module initializers must be convenience initializers.\n\n  This will most commonly affect code that extends a struct imported from C.\n  However, most imported C structs are given a zeroing no-argument initializer,\n  which can be called as `self.init()` before modifying specific properties.\n\n  Swift library authors who wish to continue allowing initialization on a\n  per-member basis should explicitly declare a public memberwise initializer\n  for clients in other modules to use.\n\n* [SE-0166][] / [SE-0143][]\n\n  The standard library now defines the conformances of `Optional`,\n  `Array`, `Dictionary`, and `Set` to `Encodable` and `Decodable` as\n  conditional conformances, available only when their type parameters\n  conform to `Encodable` or `Decodable`, respectively.\n\n* [SE-0188][] \n  \n  Index types for most standard library collections now conform to `Hashable`. \n  These indices can now be used in key-path subscripts and hashed collections:\n  \n  ```swift\n  let s = \"Hashable\"\n  let p = \\String.[s.startIndex]\n  s[keyPath: p] // \"H\"\n  ```\n\n* [SE-0143][] The standard library types `Optional`, `Array`, `ArraySlice`,\n  `ContiguousArray`, and `Dictionary` now conform to the `Equatable` protocol\n  when their element types conform to `Equatable`. This allows the `==` operator\n  to compose (e.g., one can compare two values of type `[Int : [Int?]?]` with\n  `==`), as well as use various algorithms defined for `Equatable` element\n  types, such as `index(of:)`.\n\n* [SE-0157][] is implemented. Associated types can now declare \"recursive\"\n  constraints, which require that the associated type conform to the enclosing\n  protocol. The standard library protocols have been updated to make use of\n  recursive constraints. For example, the `SubSequence` associated type of\n  `Sequence` follows the enclosing protocol:\n\n  ```swift\n  protocol Sequence {\n    associatedtype Element\n    associatedtype SubSequence: Sequence\n      where SubSequence.Element == Element,\n            SubSequence.SubSequence == SubSequence\n    // ...\n  }\n\n  protocol Collection: Sequence where Self.SubSequence: Collection {\n    // ...\n  }\n  ```\n\n  As a result, a number of new constraints have been introduced into the\n  standard library protocols:\n\n  * Make the `Indices` associated type have the same traversal requirements as\n    its enclosing protocol, e.g., `Collection.Indices` conforms to\n    `Collection`, `BidirectionalCollection.Indices` conforms to\n    `BidirectionalCollection`, and so on\n  * Make `Numeric.Magnitude` conform to `Numeric`\n  * Use more efficient `SubSequence` types for lazy filter and map\n  * Eliminate the `*Indexable` protocols\n\n* [SE-0161][] is fully implemented. KeyPaths now support subscript, optional\n  chaining, and optional force-unwrapping components.\n\n* [SE-0186][]\n\n  It is no longer valid to use the ownership keywords `weak` and `unowned` for property declarations in protocols. These keywords are meaningless and misleading when used in a protocol as they don't have any effect.\n\n  In Swift 3 and 4 mode the following example will produce a warning with a fix-it to remove the keyword. In Swift 5 mode and above an error will be produced.\n\n  ```swift\n  class A {}\n\n  protocol P {\n      weak var weakVar: A? { get set }\n      unowned var unownedVar: A { get set }\n  }\n  ```\n\n* [SE-0185][]\n\n  Structs and enums that declare a conformance to `Equatable`/`Hashable` now get an automatically synthesized implementation of `==`/`hashValue`. For structs, all stored properties must be `Equatable`/`Hashable`. For enums, all enum cases with associated values must be `Equatable`/`Hashable`.\n\n  ```swift\n  public struct Point: Hashable {\n    public let x: Int\n    public let y: Int\n\n    public init(x: Int, y: Int) {\n      self.x = x\n      self.y = y\n    }\n  }\n\n  Point(3, 0) == Point(0, 3)  // false\n  Point(3, 0) == Point(3, 0)  // true\n  Point(3, 0).hashValue       // -2942920663782199421\n\n  public enum Token: Hashable {\n    case comma\n    case identifier(String)\n    case number(Int)\n  }\n\n  Token.identifier(\"x\") == .number(5)        // false\n  Token.identifier(\"x\") == .identifier(\"x\")  // true\n  Token.number(50).hashValue                 // -2002318238093721609\n  ```\n\n  If you wish to provide your own implementation of `==`/`hashValue`, you still can; a custom implementation will replace the one synthesized by the compiler.\n\n## Swift 4.0\n\n### 2017-09-19 (Xcode 9.0)\n\n* [SE-0165][] and [SE-0154][]\n\n  The standard library's `Dictionary` and `Set` types have some new features. You can now create a new dictionary from a sequence of keys and values, and merge keys and values into an existing dictionary.\n\n  ```swift\n  let asciiTable = Dictionary(uniqueKeysWithValues: zip(\"abcdefghijklmnopqrstuvwxyz\", 97...))\n  // [\"w\": 119, \"n\": 110, \"u\": 117, \"v\": 118, \"x\": 120, \"q\": 113, ...]\n\n  let vegetables = [\"tomato\", \"carrot\", \"onion\", \"onion\", \"carrot\", \"onion\"]\n  var vegetableCounts = Dictionary(zip(vegetables, repeatElement(1, count: Int.max)),\n                                   uniquingKeysWith: +)\n  vegetableCounts.merge([(\"tomato\", 1)], uniquingKeysWith: +)\n  // [\"tomato\": 2, \"carrot\": 2, \"onion\": 3]\n  ```\n\n  Filtering a set or a dictionary now results in the same type. You can also now transform just the values of a dictionary, keeping the same keys, using the `mapValues(_:)` method.\n\n  ```swift\n  let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  let asciiVowels = asciiTable.filter({ vowels.contains($0.key) })\n  asciiVowels[\"a\"]  // 97\n  asciiVowels[\"b\"]  // nil\n\n  let asciiHexTable = asciiTable.mapValues({ \"0x\" + String($0, radix: 16) })\n  // [\"w\": \"0x77\", \"n\": \"0x6e\", \"u\": \"0x75\", \"v\": \"0x76\", \"x\": \"0x78\", ...]\n  ```\n\n  When using a key as a dictionary subscript, you can now supply a default value to be returned if the key is not present in the dictionary.\n\n  ```swift\n  for veg in [\"tomato\", \"cauliflower\"] {\n      vegetableCounts[veg, default: 0] += 1\n  }\n  // [\"tomato\": 3, \"carrot\": 2, \"onion\": 3, \"cauliflower\": 1]\n  ```\n\n  Use the new `init(grouping:by:)` initializer to convert an array or other sequence into a dictionary, grouped by a particular trait.\n\n  ```swift\n  let buttons = // an array of button instances\n  let buttonsByStatus = Dictionary(grouping: buttons, by: { $0.isEnabled })\n  // How many enabled buttons?\n  print(\"Enabled:\", buttonsByStatus[true]?.count ?? 0)\n  ```\n\n  Additionally, dictionaries and sets now have a visible `capacity` property and a `reserveCapacity(_:)` method similar to arrays, and a dictionary's `keys` and `values` properties are represented by specialized collections.\n\n* [SE-0161][] is partially implemented. Swift now natively supports key path\n  objects for properties. Similar to KVC key path strings in Cocoa, key path\n  objects allow a property to be referenced independently of accessing it\n  from a value:\n\n    ```swift\n    struct Point {\n      var x, y: Double\n    }\n    let x = \\Point.x\n    let y = \\Point.y\n\n    let p = Point(x: 3, y: 4)\n    p[keyPath: x] // gives 3\n    p[keyPath: y] // gives 4\n    ```\n\n* Core Foundation types implicitly conform to Hashable (and Equatable), using\n  CFHash and CFEqual as the implementation. This change applies even to \"Swift\n  3 mode\", so if you were previously adding this conformance yourself, use\n  `#if swift(>=3.2)` to restrict the extension to Swift 3.1 and below.\n  ([#44995][])\n\n* [SE-0156][]\n\n  Protocol composition types can now contain one or more class type terms,\n  forming a class-constrained protocol composition.\n\n  For example:\n\n  ```swift\n  protocol Paintable {\n    func paint()\n  }\n\n  class Canvas {\n    var origin: CGPoint\n  }\n\n  class Wall : Canvas, Paintable {\n    func paint() { ... }\n  }\n\n  func render(_: Canvas & Paintable) { ... }\n\n  render(Wall())\n  ```\n\n  Note that class-constrained protocol compositions can be written and\n  used in both Swift 3 and Swift 4 mode.\n\n  Generated headers for Swift APIs will map class-constrained protocol\n  compositions to Objective-C protocol-qualified class types in both\n  Swift 3 and Swift 4 mode (for instance, `NSSomeClass & SomeProto &\n  OtherProto` in Swift becomes `NSSomeClass <SomeProto, OtherProto>`\n  in Objective-C).\n\n  Objective-C APIs which use protocol-qualified class types differ in\n  behavior when imported by a module compiled in Swift 3 mode and\n  Swift 4 mode. In Swift 3 mode, these APIs will continue to import as\n  protocol compositions without a class constraint\n  (eg, `SomeProto & OtherProto`).\n\n  In Swift 4 mode, protocol-qualified class types import as\n  class-constrained protocol compositions, for a more faithful mapping\n  of APIs from Objective-C to Swift.\n\n  Note that the current implementation of class-constrained protocol\n  compositions lacks three features outlined in the Swift evolution proposal:\n\n  - In the evolution proposal, a class-constrained is permitted to contain\n    two different classes as long as one is a superclass of the other.\n    The current implementation only allows multiple classes to appear in\n    the composition if they are identical.\n\n  - In the evolution proposal, associated type and class inheritance clauses\n    are generalized to allow class-constrained protocol compositions. The\n    current implementation does not allow this.\n\n  - In the evolution proposal, protocol inheritance clauses are allowed to\n    contain a class, placing a requirement that all conforming types are\n    a subclass of the given class. The current implementation does not\n    allow this.\n\n  These missing aspects of the proposal can be introduced in a future\n  release without breaking source compatibility with existing code.\n\n* [SE-0142][]\n\n  Protocols and associated types can now contain `where` clauses that\n  provide additional restrictions on associated types. For example:\n\n    ```swift\n    protocol StringRepresentable: RawRepresentable\n    where RawValue == String { }\n\n    protocol RawStringWrapper {\n      associatedtype Wrapped: RawRepresentable\n        where Wrapper.RawValue == String\n    }\n    ```\n\n* [SE-0160][]\n\n  In Swift 4 mode, a declaration is inferred to be `@objc` where it is required for semantic consistency of the programming model. Specifically, it is inferred when:\n\n    * The declaration is an override of an `@objc` declaration\n    * The declaration satisfies a requirement in an `@objc` protocol\n    * The declaration has one of the following attributes: `@IBAction`, `@IBOutlet`, `@IBInspectable`, `@GKInspectable`, or `@NSManaged`\n\n  Additionally, in Swift 4 mode, `dynamic` declarations that don't\n  have `@objc` inferred based on the rules above will need to be\n  explicitly marked `@objc`.\n\n  Swift 3 compatibility mode retains the more-permissive Swift 3\n  rules for inference of `@objc` within subclasses of\n  `NSObject`. However, the compiler will emit warnings about places\n  where the Objective-C entry points for these inference cases are\n  used, e.g., in a `#selector` or `#keyPath` expression, via\n  messaging through `AnyObject`, or direct uses in Objective-C code\n  within a mixed project. The warnings can be silenced by adding an\n  explicit `@objc`. Uses of these entrypoints that are not\n  statically visible to the compiler can be diagnosed at runtime by\n  setting the environment variable\n  `SWIFT_DEBUG_IMPLICIT_OBJC_ENTRYPOINT` to a value between 1 and 3\n  and testing the application. See the [migration discussion in\n  SE-0160](https://github.com/apple/swift-evolution/blob/main/proposals/0160-objc-inference.md#minimal-migration-workflow).\n\n* [SE-0138](https://github.com/apple/swift-evolution/blob/main/proposals/0138-unsaferawbufferpointer.md#amendment-to-normalize-the-slice-type):\n\n  Slicing a raw buffer no longer results in the same raw buffer\n  type. Specifically, `Unsafe[Mutable]BufferPointer.SubSequence` now has type\n  `[Mutable]RandomAccessSlice<Unsafe[Mutable]RawBufferPointer>`. Therefore,\n  indexing into a raw buffer slice is no longer zero-based. This is required for\n  raw buffers to fully conform to generic `Collection`. Changing the slice type\n  resulted in the following behavioral changes:\n\n  Passing a region within buffer to another function that takes a buffer can no\n  longer be done via subscript:\n\n  Incorrect: `takesRawBuffer(buffer[i..<j])`\n\n  This now requires explicit initialization, using a `rebasing:` initializer,\n  which converts from a slice to a zero-based `Unsafe[Mutable]RawBufferPointer`:\n\n  Correct: `takesRawBuffer(UnsafeRawBufferPointer(rebasing: buffer[i..<j]))`\n\n  Subscript assignment directly from a buffer no longer compiles:\n\n  Incorrect: `buffer[n..<m] = smaller_buffer`\n\n  This now requires creation of a slice from the complete source buffer:\n\n  Correct: `buffer[n..<m] = smaller_buffer.suffix(from: 0)`\n\n  `UnsafeRawBufferPointer`'s slice type no longer has a nonmutating subscript\n  setter. So assigning into a mutable `let` buffer no longer compiles:\n\n  ```swift\n  let slice = buffer[n..<m]\n  slice[i..<j] = buffer[k..<l]\n  ```\n\n  The assigned buffer slice now needs to be a `var`.\n\n  ```swift\n  var slice = buffer[n..<m]\n  slice[i..<j] = buffer[k..<l]\n  ```\n\n* [#44138][]:\n\n  Covariant method overrides are now fully supported, fixing many crashes\n  and compile-time assertions when defining or calling such methods.\n  Examples:\n\n  ```swift\n  class Bed {}\n  class Nook : Bed {}\n\n  class Cat<T> {\n    func eat(snack: T) {}\n    func play(game: String) {}\n    func sleep(where: Nook) {}\n  }\n\n  class Dog : Cat<(Int, Int)> {\n    // 'T' becomes concrete\n    override func eat(snack: (Int, Int)) {}\n\n    // 'game' becomes optional\n    override func play(game: String?) {}\n\n    // 'where' becomes a superclass\n    override func sleep(where: Bed) {}\n  }\n  ```\n\n* [SE-0148][]:\n\n  Subscript declarations can now be defined to have generic parameter lists.\n  Example:\n\n  ```swift\n  extension JSON {\n    subscript<T>(key: String) -> T?\n        where T : JSONConvertible {\n      // ...\n    }\n  }\n  ```\n\n* [SE-0110][]:\n\n  In Swift 4 mode, Swift's type system properly distinguishes between functions that\n  take one tuple argument, and functions that take multiple arguments.\n\n* More types of C macros which define integer constants are supported by the\n  importer. Specifically the `+, -, *, /, ^, >>, ==, <, <=, >, >=` operators\n  are now recognized, and the previously-supported `<<, &&, ||, &, |`\n  operators always look through importable macros on each side of the operator.\n  Logical AND and OR macros (`&&` and `||`) are now imported as Boolean\n  constants, rather than integers of value 0 or 1.\n\n  ```c\n  #define HIGHER    (5 + 5)\n  #define THE_EDGE  (INT64_MAX - 1)\n  #define FORTY_TWO (6 * 9)\n  #define SPLIT     (THE_EDGE / FORTY_TWO)\n\n  #define HALF_AND_HALF (UINT64_MAX ^ UINT32_MAX)\n\n  #define SMALL   (BITWIDTH == 32)\n  #define TINY    (BITWIDTH <= 16)\n  #define LIMITED (SMALL || TINY)   // now imported as Bool.\n  ```\n\n## Swift 3.1\n\n### 2017-03-27 (Xcode 8.3)\n\n* [SE-0080][]:\n\n  Adds a new family of conversion initializers to all numeric types that\n  either complete successfully without loss of information or return nil.\n\n* Swift will now warn when an `NSObject` subclass attempts to override the\n  class `initialize` method. Swift doesn't guarantee that references to class\n  names trigger Objective-C class realization if they have no other\n  side effects, leading to bugs when Swift code attempted to override\n  `initialize`.\n\n* [#45001][]\n\n  C functions that \"return twice\" are no longer imported into Swift. Instead,\n  they are explicitly made unavailable, so attempting to reference them will\n  result in a compilation error.\n\n  Examples of functions that \"return twice\" include `vfork` and `setjmp`.\n  These functions change the control flow of a program in ways that Swift\n  has never supported. For example, definitive initialization of variables,\n  a core Swift language feature, could not be guaranteed when these functions\n  were used.\n\n  Swift code that references these functions will no longer compile. Although\n  this could be considered a source-breaking change, it's important to note that\n  any use of these functions would have most likely crashed at runtime. Now,\n  the compiler will prevent them from being used in the first place.\n\n* Indirect fields from C structures and unions are now always imported, while\n  they previously weren't imported if they belonged to a union. This is done by\n  naming anonymous fields. For example:\n\n  ```c\n  typedef struct foo_t {\n    union {\n      int a;\n      double b;\n    };\n  } foo_t;\n  ```\n\n  Get imported as:\n\n  ```swift\n  struct foo_t {\n    struct __Unnamed_union___Anonymous_field0 {\n      var a : Int { get set }\n      var b : Double { get set }\n    }\n    var __Anonymous_field0 : foo_t.__Unnamed_union___Anonymous_field0\n\n    // a and b are computed properties accessing the content of __Anonymous_field0\n    var a : Int { get set }\n    var b : Double { get set }\n  }\n  ```\n\n  Since new symbols are exposed from imported structure/unions, this may conflict\n  with existing code that extended C types in order to provide their own accessors\n  to the indirect fields.\n\n* The `withoutActuallyEscaping` function from [SE-0103][] has been implemented.\n  To pass off a non-escaping closure to an API that formally takes an\n  `@escaping` closure, but which is used in a way that will not in fact\n  escape it in practice, use `withoutActuallyEscaping` to get an escapable\n  copy of the closure and delimit its expected lifetime. For example:\n\n  ```swift\n  func doSimultaneously(_ f: () -> (), and g: () -> (), on q: DispatchQueue) {\n    // DispatchQueue.async normally has to be able to escape its closure\n    // since it may be called at any point after the operation is queued.\n    // By using a barrier, we ensure it does not in practice escape.\n    withoutActuallyEscaping(f) { escapableF in\n      withoutActuallyEscaping(g) { escapableG in\n        q.async(escapableF)\n        q.async(escapableG)\n        q.sync(flags: .barrier) {}\n      }\n    }\n    // `escapableF` and `escapableG` must be dequeued by the point\n    // `withoutActuallyEscaping` returns.\n  }\n  ```\n\n  The old workaround of using `unsafeBitCast` to cast to an `@escaping` type\n  is not guaranteed to work in future versions of Swift, and will\n  now raise a warning.\n\n* [#44055][]\n\n  Nested types may now appear inside generic types, and nested types may have their own generic parameters:\n\n  ```swift\n  struct OuterNonGeneric {\n      struct InnerGeneric<T> {}\n  }\n\n  struct OuterGeneric<T> {\n      struct InnerNonGeneric {}\n\n      struct InnerGeneric<T> {}\n  }\n\n  extension OuterNonGeneric.InnerGeneric {}\n  extension OuterGeneric.InnerNonGeneric {}\n  extension OuterGeneric.InnerGeneric {}\n  ```\n\n* [#43621][]:\n\n  Constrained extensions allow same-type constraints between generic parameters and concrete types. This enables you to create extensions, for example, on `Array` with `Int` elements:\n\n  ```swift\n  extension Array where Element == Int { }\n  ```\n\n* [SE-0045][]:\n\n  The `Sequence` protocol adds two new members `prefix(while:)` and\n  `drop(while:)` for common utility. `prefix(while:)` requests the longest subsequence\n  satisfying a predicate.  `drop(while:)` requests the remaining\n  subsequence after dropping the longest subsequence satisfying a\n  predicate.\n\n## Swift 3.0\n\n### 2016-09-13 (Xcode 8.0)\n\n* [SE-0101][]:\n\n  The functions `sizeof()`, `strideof()`, and `alignof()` have been removed.\n  Memory layout properties for a type `T` are now spelled\n  `MemoryLayout<T>.size`, `MemoryLayout<T>.stride`, and\n  `MemoryLayout<T>.alignment`, respectively.\n\n* [SE-0136][]:\n\n  The functions `sizeofValue()`, `strideofValue()`, and `alignofValue()` have been renamed to `MemoryLayout.size(ofValue:)`, `MemoryLayout.stride(ofValue:)`,\n  and `MemoryLayout.alignment(ofValue:)`.\n\n* [SE-0125][]:\n\n  The functions `isUniquelyReferenced()` and `isUniquelyReferencedNonObjC()`\n  have been removed. Call the function `isKnownUniquelyReferenced()` instead.\n\n  Classes using `isUniquelyReferenced()` needed to inherit from `NonObjectiveCBase`. The `NonObjectiveCBase` class has been removed.\n\n  The method `ManagedBufferPointer.holdsUniqueReference` has been renamed to\n  `ManagedBufferPointer.isUniqueReference`.\n\n  ```swift\n  // old\n  class SwiftKlazz : NonObjectiveCBase {}\n  expectTrue(isUniquelyReferenced(SwiftKlazz()))\n\n  var managedPtr : ManagedBufferPointer = ...\n  if !managedPtr.holdsUniqueReference() {\n    print(\"not unique\")\n  }\n\n  // new\n  class SwiftKlazz {}\n  expectTrue(isKnownUniquelyReferenced(SwiftKlazz()))\n\n  var managedPtr : ManagedBufferPointer = ...\n  if !managedPtr.isUniqueReference() {\n    print(\"not unique\")\n  }\n  ```\n\n* [SE-0124][]:\n\n  Initializers on `Int` and `UInt` that accept an `ObjectIdentifier` must now use an explicit `bitPattern` label.\n\n  ```swift\n  let x: ObjectIdentifier = ...\n\n  // old\n  let u = UInt(x)\n  let i = Int(x)\n\n  // new\n  let u = UInt(bitPattern: x)\n  let i = Int(bitPattern: x)\n  ```\n\n* [SE-0120][]:\n\n  The collection methods `partition()` and `partition(isOrderedBefore:)` have been removed from Swift. They are replaced by the method `partition(by:)` which takes a unary predicate.\n\n  Calls to the `partition()` method can be replaced by the following code.\n\n  ```swift\n  // old\n  let p = c.partition()\n\n  // new\n  let p = c.first.flatMap({ first in\n      c.partition(by: { $0 >= first })\n  }) ?? c.startIndex\n  ```\n\n* [SE-0103][]:\n\n  Closure parameters are now non-escaping by default and do not require `@noescape` annotation. Use `@escaping` to indicate that a closure parameter can escape. `@autoclosure(escaping)` is now spelled `@autoclosure @escaping`. `@noescape` and `@autoclosure(escaping)` are deprecated.\n\n* [SE-0115][]:\n\n  To clarify their roles, `*LiteralConvertible` protocols have been renamed to `ExpressibleBy*Literal`.  The protocol requirements are unchanged.\n\n* [SE-0107][]:\n\n  An `Unsafe[Mutable]RawPointer` type has been introduced. It replaces\n  `Unsafe[Mutable]Pointer<Void>`. Conversion from `UnsafePointer<T>`\n  to `UnsafePointer<U>` has been disallowed. `Unsafe[Mutable]RawPointer`\n  provides an API for untyped memory access, and an API for binding memory\n  to a type. Binding memory allows for safe conversion between pointer types.\n\n  For detailed instructions on how to migrate your code to the new API refer to the [UnsafeRawPointer migration guide](https://swift.org/migration-guide/se-0107-migrate.html). See also: See `bindMemory(to:capacity:)`, `assumingMemoryBound(to:)`, and\n  `withMemoryRebound(to:capacity:)`.\n\n* [SE-0096][]:\n\n  The `dynamicType` keyword has been removed from Swift.  It's replaced by a new primitive function `type(of:)`.  Existing code\nusing the `.dynamicType` member to retrieve the type of an expression should migrate to this new primitive.  Code using `.dynamicType` in conjunction with `sizeof` should migrate to the `MemoryLayout` structure introduced by [SE-0101][].\n\n* [SE-0113][]:\n\n  The following two methods were added to `FloatingPoint`:\n\n  ```swift\n  func rounded(_ rule: FloatingPointRoundingRule) -> Self\n  mutating func round( _ rule: FloatingPointRoundingRule)\n  ```\n\n  These methods bind the IEEE 754 roundToIntegral operations. They provide the functionality of the C / C++ `round()`, `ceil()`, `floor()`, and `trunc()` functions along with other rounding operations.\n\n  Following onto [SE-0113][] and [SE-0067][], the following `Darwin.C` and `glibc` module mathematical operations now operate on any type conforming to `FloatingPoint`: `fabs`, `sqrt`, `fma`,\n  `remainder`, `fmod`, `ceil`, `floor`, `round`, and `trunc`.\n\n  See also: the changes associated with [SE-0067][].\n\n* [SE-0067][]:\n\n  The `FloatingPoint` protocol has been expanded to include most IEEE 754\n  required operations. A number of useful properties have been added to the\n  protocol, representing quantities like the largest finite value or\n  the smallest positive normal value (these correspond to the macros such as\n  FLT_MAX defined in C).\n\n  While almost all of the changes are additive, four changes impact existing code:\n\n  - The `%` operator is no longer available for `FloatingPoint` types. It\n  was difficult to use correctly and its semantics did not match\n  those of the corresponding integer operation. This made it something of an attractive nuisance. The new method `formTruncatingRemainder(dividingBy:)`\n  provides the old semantics if they are needed.\n\n  - The static property `.NaN` has been renamed `.nan`.\n\n  - The static property `.quietNaN` was redundant and has been removed. Use\n  `.nan` instead.\n\n  - The predicate `isSignaling` has been renamed `isSignalingNaN`.\n\n  See also: the changes associated with [SE-0113][].\n\n* [SE-0111][]:\n\n  Argument labels have been removed from Swift function types. They are now\n  part of the name of a function, subscript, or initializer. Calls to a function or initializer, and subscript uses, still require argument labels as they always have:\n\n  ```swift\n  func doSomething(x: Int, y: Int) { }\n  doSomething(x: 0, y: 0)     // argument labels are required\n  ```\n\n  Unapplied references to functions or initializers no longer carry argument labels. For example:\n\n  ```swift\n  let f = doSomething(x:y:)     // inferred type is now (Int, Int) -> Void\n  ```\n\n  Explicitly-written function types can no longer carry argument labels. You can still provide parameter names for documentation purposes using the '_' in the argument label position:\n\n  ```swift\n  typealias CompletionHandler =\n     (token: Token, error: Error?) -> Void   // error: function types cannot have argument labels\n\n  typealias CompletionHandler =\n     (_ token: Token, _ error: Error?) -> Void   // okay: names are for documentation purposes\n  ```\n\n* [SE-0025][]:\n\n  The access level formerly known as `private` is now called `fileprivate`. A Swift 3 declaration marked `private` can no longer be accessed outside its lexical scope (essentially its enclosing curly braces `{}`). A `private` declaration at the top level of a file can be accessed anywhere within the same file, as it could in Swift 2.\n\n* [SE-0131][]:\n\n  The standard library introduces the `AnyHashable` type for use in hashed heterogeneous collections. Untyped `NSDictionary` and `NSSet` Objective-C APIs now import as `[AnyHashable: Any]` and `Set<AnyHashable>`.\n\n* [SE-0102][]:\n\n  Swift removes the `@noreturn` attribute on function declarations and replaces the attribute with an empty `Never` type:\n\n  ```swift\n  @noreturn func fatalError(msg: String) { ... }  // old\n  func fatalError(msg: String) -> Never { ... }   // new\n\n  func performOperation<T>(continuation: @noreturn T -> ()) { ... }  // old\n  func performOperation<T>(continuation: T -> Never) { ... }         // new\n  ```\n\n* [SE-0116][]:\n\n  Swift now imports Objective-C `id` APIs as `Any`. In Swift 2, `id` imported as `AnyObject`. Swift also imports untyped `NSArray` and `NSDictionary` as `[Any]` and `[AnyHashable: Any]`, respectively.\n\n* [SE-0072][]:\n\n  Swift eliminates implicit bridging conversions. Use `as` to force the conversion from a Swift value type to its corresponding object. For example, use `string as NSString`. Use `as AnyObject` to convert a Swift value to its boxed `id` representation.\n\n* Collection subtype conversions and dynamic casts now work with protocol types:\n\n    ```swift\n    protocol P {}; extension Int: P {}\n    var x: [Int] = [1, 2, 3]\n    var p: [P] = x\n    var x2 = p as! [Int]\n    ```\n\n* [#44739][]:\n\n  The `hasPrefix` and `hasSuffix` functions now consider the empty string to be a prefix and suffix of all strings.\n\n* [SE-0128][]:\n\n  Some non-failable UnicodeScalar initializers now return an Optional. When a UnicodeScalar cannot be constructed, these initializers return nil.\n\n  ```swift\n  // Old\n  var string = \"\"\n  let codepoint: UInt32 = 55357 // Invalid\n  let ucode = UnicodeScalar(codepoint) // Program crashes here.\n  string.append(ucode)\n  ```\n\n  The updated initializers allow users to write code that safely works around invalid codepoints, like this example:\n\n  ```swift\n  // New\n  var string = \"\"\n  let codepoint: UInt32 = 55357 // Invalid\n  if let ucode = UnicodeScalar(codepoint) {\n      string.append(ucode)\n  } else {\n      // do something else\n  }\n  ```\n\n* [SE-0095][]:\n\n  Swift removes the `protocol<...>` composition construct and introduces an infix type operator `&` in its place.\n\n  ```swift\n  let a: Foo & Bar\n  let b = value as? A & B & C\n  func foo<T : Foo & Bar>(x: T) { ... }\n  func bar(x: Foo & Bar) { ... }\n  typealias G = GenericStruct<Foo & Bar>\n  ```\n\n  Swift previously defined the empty protocol composition (the `Any` type) as `protocol<>`. This definition has been removed from the standard library. The `Any` keyword behavior remains unchanged.\n\n* [SE-0091][]:\n\n  Swift permits you to define operators within types or their extensions. For example:\n\n  ```swift\n  struct Foo: Equatable {\n    let value: Int\n\n    static func ==(lhs: Foo, rhs: Foo) -> Bool {\n      return lhs.value == rhs.value\n    }\n  }\n  ```\n\n  You must declare these operators as `static` (or, within a class, `class\n  final`) and they must use the same signature as their global counterparts. As part of this change, protocol-declared operator requirements must be declared `static` explicitly:\n\n  ```swift\n  protocol Equatable {\n    static func ==(lhs: Self, rhs: Self) -> Bool\n  }\n  ```\n\n  Note: The type checker performance optimization described by [SE-0091][]\n  is not yet implemented.\n\n* [SE-0099][]:\n\n  Condition clauses in `if`, `guard`, and `while` statements now use a more\n  regular syntax. Each pattern or optional binding must be prefixed with `case`\n  or `let` respectively, and all conditions are separated by `,` instead of\n  `where`.\n\n  ```swift\n  // before\n  if let a = a, b = b where a == b { }\n\n  // after\n  if let a = a, let b = b, a == b { }\n  ```\n\n* [SE-0112][]:\n\n  The `NSError` type now bridges to the Swift `Error` protocol type (formerly `ErrorProtocol` in Swift 3, `ErrorType` in Swift 2)\n  in Objective-C APIs. `NSError` now bridges like other Objective-C types, e.g., `NSString` bridges to `String`.\n\n  For\n  example, the `UIApplicationDelegate` method\n  `applicate(_:didFailToRegisterForRemoteNotificationsWithError:)`\n  previously accepted an `NSError` argument:\n\n  ```swift\n  optional func application(_ application: UIApplication,\n    didFailToRegisterForRemoteNotificationsWithError error: NSError)\n  ```\n\n  Now it accepts an `Error` argument:\n\n  ```swift\n  optional func application(_ application: UIApplication,\n    didFailToRegisterForRemoteNotificationsWithError error: Error)\n  ```\n\n  Error types imported from Cocoa[Touch] maintain all of\n  the information in the corresponding `NSError`. You no longer `catch let as NSError` to extract, for example, the user-info\n  dictionary.\n\n  Specific error types now contain typed accessors for\n  their common user-info keys. For example:\n\n  ```swift\n  catch let error as CocoaError where error.code == .fileReadNoSuchFileError {\n    print(\"No such file: \\(error.url)\")\n  }\n  ```\n\n  Swift-defined error types can now provide localized error\n  descriptions by adopting the new `LocalizedError` protocol, e.g.,\n\n  ```swift\n  extension HomeworkError : LocalizedError {\n    var errorDescription: String? {\n      switch self {\n      case .forgotten: return NSLocalizedString(\"I forgot it\")\n      case .lost: return NSLocalizedString(\"I lost it\")\n      case .dogAteIt: return NSLocalizedString(\"The dog ate it\")\n      }\n    }\n  }\n  ```\n\n  New `RecoverableError` and `CustomNSError` protocols\n  allow additional control over the handling of the error.\n\n* [SE-0060][]:\n\n  Function parameters with defaulted arguments are specified in\n  declaration order. Call sites must now supply those arguments using that order:\n\n    ```swift\n    func requiredArguments(a: Int, b: Int, c: Int) {}\n    func defaultArguments(a: Int = 0, b: Int = 0, c: Int = 0) {}\n\n    requiredArguments(a: 0, b: 1, c: 2)\n    requiredArguments(b: 0, a: 1, c: 2) // error\n    defaultArguments(a: 0, b: 1, c: 2)\n    defaultArguments(b: 0, a: 1, c: 2) // error\n    ```\n\n    Labeled parameters with default arguments may still be elided, so long as included arguments follow declaration order:\n\n    ```swift\n    defaultArguments(a: 0) // ok\n    defaultArguments(b: 1) // ok\n    defaultArguments(c: 2) // ok\n    defaultArguments(a: 1, c: 2) // ok\n    defaultArguments(b: 1, c: 2) // ok\n    defaultArguments(c: 1, b: 2) // error\n    ```\n\n* Traps from force-unwrapping nil `Optional`s now show the source location of the force unwrap operator.\n\n* [SE-0093][]:\n\n  Slice types add a `base` property that allows public readonly access to their base collections.\n\n* Nested generic functions may now capture bindings from the environment, for example:\n\n    ```swift\n    func outer<T>(t: T) -> T {\n      func inner<U>(u: U) -> (T, U) {\n        return (t, u)\n      }\n      return inner(u: (t, t)).0\n    }\n    ```\n\n* Initializers are now inherited even if the base class or derived class is generic:\n\n    ```swift\n    class Base<T> {\n      let t: T\n\n      init(t: T) {\n        self.t = t\n      }\n    }\n\n    class Derived<T> : Base<T> {\n      // init(t: T) is now synthesized to call super.init(t: t)\n    }\n    ```\n\n* [SE-0081][]:\n\n  \"Move `where` clause to end of declaration\" is now implemented. This change allows you to write `where` clauses after a declaration signature and before its body.  For example, before this change was implemented, you'd write:\n\n    ```swift\n    func anyCommonElements<T : SequenceType, U : SequenceType\n        where T.Generator.Element: Equatable, T.Generator.Element == U.Generator.Element>\n        (lhs: T, _ rhs: U) -> Bool\n    {\n        ...\n    }\n    ```\n\n  Now the `where` clause appears just before the body:\n\n    ```swift\n    func anyCommonElements<T : SequenceType, U : SequenceType>(lhs: T, _ rhs: U) -> Bool\n        where T.Generator.Element: Equatable, T.Generator.Element == U.Generator.Element\n    {\n        ...\n    }\n    ```\n\n  The old form is currently accepted for compatibility. It will eventually be rejected.\n\n* [SE-0071][]:\n\n  \"Allow (most) keywords in member references\" is implemented.  This change allows the use of members after a dot without backticks, e.g. \"foo.default\", even though `default` is a keyword for `switch` statements.\n\n* [SE-0057][]:\n\n  Objective-C lightweight generic classes are now imported as generic types\n  in Swift. Some limitations apply because Objective-C generics are not represented at runtime:\n\n  - When an ObjC generic class is used in a checked `as?`, `as!`, or `is` cast, the generic parameters are not checked at runtime. The cast succeeds if the operand is an instance of the ObjC class, regardless of parameters.\n\n    ```swift\n    let x = NSFoo<NSNumber>(value: NSNumber(integer: 0))\n    let y: AnyObject = x\n    let z = y as! NSFoo<NSString> // Succeeds\n    ```\n\n  - Swift subclasses can only inherit from an ObjC generic class when its generic parameters are fully specified.\n\n    ```swift\n    // Error: Can't inherit ObjC generic class with unbound parameter T\n    class SwiftFoo1<T>: NSFoo<T> { }\n\n    // OK: Can inherit ObjC generic class with specific parameters\n    class SwiftFoo2<T>: NSFoo<NSString> { }\n    ```\n\n  - Swift can extend ObjC generic classes but the extensions cannot be constrained, and definitions inside the extension don't have access to the class's generic parameters.\n\n    ```swift\n    extension NSFoo {\n      // Error: Can't access generic param T\n      func foo() -> T {\n        return T()\n      }\n    }\n\n    // Error: extension can't be constrained\n    extension NSFoo where T: NSString {\n    }\n    ```\n\n  - Foundation container classes `NS[Mutable]Array`, `NS[Mutable]Set`, and `NS[Mutable]Dictionary` are still imported as nongeneric classes for the time being.\n\n* [SE-0036][]:\n\n  Enum elements can no longer be accessed as instance members in instance methods.\n\n  * As part of the changes for [SE-0055][] (see below), the *pointee* types of imported pointers (e.g. the `id` in `id *`) are no longer assumed to always be `_Nullable` even if annotated otherwise.\n  * An implicit or explicit annotation of `_Null_unspecified` on a pointee type still imports as `Optional`.\n\n* [SE-0055][]:\n\n  The types `UnsafePointer`, `UnsafeMutablePointer`,\n  `AutoreleasingUnsafeMutablePointer`, `OpaquePointer`, `Selector`, and `Zone` (formerly `NSZone`) now represent non-nullable pointers, i.e. pointers that are never `nil`. A nullable pointer is now represented using `Optional`, e.g. `UnsafePointer<Int>?` For types imported from C, non-object pointers (such as `int *`) now have their nullability taken into account.\n\n  One possible area of difficulty is passing a nullable pointer to a function that uses C variadics. Swift will not permit this directly. As a workaround, use the following idiom to pass a pointer-sized integer value instead:\n\n  ```swift\n  unsafeBitCast(nullablePointer, to: Int.self)\n  ```\n\n* [SE-0046][]:\n\n  Function parameters adopt consistent labeling across all function parameters. With this update, first parameter declarations match the existing behavior of the second and later parameters. This change makes the language simpler.\n\n  Functions that were written and called as follows:\n\n  ```swift\n  func foo(x: Int, y: Int) {}\n  foo(1, y: 2)\n\n  func bar(a a: Int, b: Int) {}\n  bar(a: 3, b: 4)\n  ```\n\n  Are now written as follows with the same behavior at call sites:\n\n  ```swift\n  func foo(_ x: Int, y: Int) {}\n  foo(1, y: 2)\n\n  func bar(a: Int, b: Int) {}\n  bar(a: 3, b: 4)\n  ```\n\n* [SE-0037][]:\n\n  Comments are now treated as whitespace when determining whether an operator is prefix, postfix, or binary. For example, these now work:\n\n  ```swift\n  if /*comment*/!foo { ... }\n  1 +/*comment*/2\n  ```\n\n  Comments can no longer appear between a unary operator and its argument.\n\n  ```swift\n  foo/* comment */! // no longer works\n  ```\n\n  Parse errors resulting from this change can be resolved by moving the comment outside the expression.\n\n* [SE-0031][]:\n\n  The location of the inout attribute moves to after the colon (`:`) and before the parameter type.\n\n  ```swift\n  func foo(inout x: Int) {\n  }\n  ```\n\n  will now be written as:\n\n  ```swift\n  func foo(x: inout Int) {\n  }\n  ```\n\n* [SE-0053][]:\n\n  `let` is no longer accepted as a parameter attribute for functions. The compiler provides a fixit to remove it from the function declaration.\n\n* [SE-0003][]:\n\n  `var` is no longer accepted as a parameter attribute for functions. The compiler provides a fixit to create a shadow copy in the function body.\n\n  ```swift\n  func foo(var x: Int) {\n  }\n  ```\n\n  will now be written as:\n\n  ```swift\n  func foo(x: Int) {\n    var x = x\n  }\n  ```\n\n* The \"none\" members of imported NS_OPTIONS option sets are marked as unavailable when they are imported.  Use `[]` to make an empty option set, instead of a None member.\n\n* [SE-0043][]\n\n  Adds the ability to declare variables in multiple patterns in cases.\n\n* [SE-0005][]\n\n  Allows the Clang importer to import ObjC symbols using substantially different Swift-like naming paradigms:\n\n  * These updates generalize the use of `swift_name`, allowing arbitrary C and Objective-C entity import names. This adds fine-grained control over the import process.\n  * Redundant type names are pruned (`documentForURL(_: NSURL)` becomes `document(for: URL)`). Selectors are guaranteed to never be empty, to be transformed into Swift keywords, to be vacuously named (like `get`, `set`, `with`, `for`). Additional pruning rules preserve readability and sense.\n  * Common arguments are sensibly defaulted where the Objective-C API strongly hints at the need for a default argument. (For example,  nullable trailing closures default to `nil`, option sets to `[]`, and `NSDictionary` parameters to `[:]`.) First argument labels are added for defaulted arguments.\n  * Boolean properties are prepended with `is`, and read as assertions on the receiver.\n  * Non-type values, including enumerators, are lowercased.\n  * Classes that implement `compare(_:) -> NSComparisonResult` automatically import as `Comparable`.\n\n* [SE-0040][]\n\n  Attributes change from using `=` in parameters lists\n  to using `:`, aligning with function call syntax.\n\n  ```swift\n  // before\n  @available(*, unavailable, renamed=\"MyRenamedProtocol\")\n\n  // after\n  @available(*, unavailable, renamed: \"MyRenamedProtocol\")\n  ```\n\n* [SE-0048][]\n\n  Generic typealiases are now supported. For example:\n\n  ```swift\n  typealias StringDictionary<T> = Dictionary<String, T>\n  typealias IntFunction<T> = (T) -> Int\n  typealias MatchingTriple<T> = (T, T, T)\n  typealias BackwardTriple<T1, T2, T3> = (T3, T2, T1)\n  ```\n\n  etc.\n\n* [SE-0049][]\n\n  The `@noescape` attribute is extended to be a more general type attribute. You can now declare values of `@noescape` function type, e.g. in manually curried function signatures.  You can now also declare local variables of `@noescape` type, and use `@noescape` in `typealiases`.  For example, this is now valid code:\n\n  ```swift\n  func apply<T, U>(@noescape f: T -> U,\n                   @noescape g: (@noescape T -> U) -> U) -> U {\n    return g(f)\n  }\n  ```\n\n* [SE-0034][]\n\n  The `#line` directive (which resets the logical\n  source location for diagnostics and debug information) is renamed to `#sourceLocation`.\n\n* [SE-0002][]\n\n  Curried function syntax (with successive parenthesized groups of arguments) is removed, and now produces a compile-time error. Use chained functional return types instead.\n\n  ```swift\n  // Before\n  public func project(function f: FunctionType)(p0: CGPoint, p1: CGPoint)(x: CGFloat) -> CGPoint\n\n  // After\n  public func project(function f: FunctionType) -> (p0: CGPoint, p1: CGPoint) -> (x: CGFloat) -> CGPoint\n  ```\n\n* Generic signatures can now contain superclass requirements with generic parameter types, for example:\n\n  ```swift\n  func f<Food : Chunks<Meat>, Meat : Molerat>(f: Food, m: Meat) {}\n  ```\n\n* Section markers are created in ELF binaries through special objects during link time. These objects allow for the deletion of `swift.ld` and the use of non-BFD linkers. A new argument to swiftc is provided to select the linker used, and the gold linker is set as the default for arm-based platforms.\n\n* Catch blocks in `rethrows` functions may now `throw` errors. For example:\n\n    ```swift\n    func process(f: () throws -> Int) rethrows -> Int {\n        do {\n            return try f()\n        } catch is SomeError {\n            throw OtherError()\n        }\n    }\n    ```\n\n* Throwing closure arguments of a rethrowing function may now be optional. For example:\n\n    ```swift\n    func executeClosureIfNotNil(closure: (() throws -> Void)?) rethrows {\n        try closure?()\n    }\n    ```\n\n* [SE-0064][]:\n\n  The Objective-C selectors for the getter or setter of a property can now be referenced with `#selector`. For example:\n\n    ```swift\n    let sel1 = #selector(getter: UIView.backgroundColor) // sel1 has type Selector\n    let sel2 = #selector(setter: UIView.backgroundColor) // sel2 has type Selector\n    ```\n\n* [SE-0062][]:\n\n  A key-path can now be formed with `#keyPath`. For example:\n\n    ```swift\n    person.valueForKeyPath(#keyPath(Person.bestFriend.lastName))\n    ```\n\n## Swift 2.2\n\n### 2016-03-21 (Xcode 7.3)\n\n* [SE-0011][]:\n\n  Associated types in protocols can now be specified with a new `associatedtype`\n  declaration, to replace the use of `typealias`:\n\n    ```swift\n    protocol P {\n      associatedtype Ty\n    }\n    ```\n\n  The `typealias` keyword is still allowed (but deprecated and produces a warning)\n  in Swift 2.2. This warning will become an error in Swift 3.0.\n\n* [SE-0002][]:\n\n  Curried function syntax has been deprecated, and is slated to be removed in\n  Swift 3.0.\n\n* [SE-0004][]:\n\n  The `++` and `--` operators have been deprecated, and are slated to be removed in\n  Swift 3.0.  As a replacement, please use `x += 1` on integer or floating point\n  types, and `x = x.successor()` on Index types.\n\n* [SE-0029][]:\n\n  The implicit tuple splat behavior in function application has been deprecated\n  and will be removed in Swift 3.0.  For example, this code:\n\n    ```swift\n    func foo(a : Int, b : Int) { ... }\n    let x = (1, b: 2)\n    foo(x)   // Warning, deprecated.\n    ```\n\n  should move to being written as:\n\n    ```swift\n    foo(x.0, x.b)\n    ```\n\n* [SE-0028][]:\n\n  New `#file`, `#line`, `#column`, and `#function` expressions have been introduced to\n  replace the existing `__FILE__`, `__LINE__`, `__COLUMN__`, and `__FUNCTION__` symbols.\n  The `__FILE__`-style symbols have been deprecated, and will be removed in\n  Swift 3.0.\n\n* The operator identifier lexer grammar has been revised to simplify the rules\n  for operators that start with a dot (\".\").  The new rule is that an operator\n  that starts with a dot may contain other dots in it, but operators that start\n  with some other character may not contain dots.  For example:\n\n    ```swift\n    x....foo   --> \"x\" \"....\" \"foo\"\n    x&%^.foo   --> \"x\" \"&%^\"  \".foo\"\n    ```\n\n  This eliminates a special case for the `..<` operator, folding it into a simple\n  and consistent rule.\n\n* [SE-0007][]:\n\n  The \"C-style for loop\", which is spelled `for init; comparison; increment {}`\n  has been deprecated and is slated for removal in Swift 3.0.\n\n* Three new doc comment fields, namely `- keyword:`, `- recommended:`\n  and `- recommendedover:`, allow Swift users to cooperate with code\n  completion engine to deliver more effective code completion results.\n  The `- keyword:` field specifies concepts that are not fully manifested in\n  declaration names. `- recommended:` indicates other declarations are preferred\n  to the one decorated; to the contrary, `- recommendedover:` indicates\n  the decorated declaration is preferred to those declarations whose names\n  are specified.\n\n* Designated class initializers declared as failable or throwing may now\n  return `nil` or throw an error, respectively, before the object has been\n  fully initialized. For example:\n\n    ```swift\n    class Widget : Gadget {\n      let complexity: Int\n\n      init(complexity: Int, elegance: Int) throws {\n        if complexity > 3 { throw WidgetError.TooComplex }\n        self.complexity = complexity\n\n        try super.init(elegance: elegance)\n      }\n    }\n    ```\n\n* All slice types now have `removeFirst()` and `removeLast()` methods.\n\n* `ArraySlice.removeFirst()` now preserves element indices.\n\n* Global `anyGenerator()` functions have been changed into initializers on\n  `AnyGenerator`, making the API more intuitive and idiomatic.  They have been\n  deprecated in Swift 2.2, and will be removed in Swift 3.0.\n\n* Closures appearing inside generic types and generic methods can now be\n  converted to C function pointers, as long as no generic type parameters\n  are referenced in the closure's argument list or body. A conversion of\n  a closure that references generic type parameters now produces a\n  diagnostic instead of crashing.\n\n  **(rdar://problem/22204968)**\n\n* Anonymously-typed members of C structs and unions can now be accessed\n  from Swift. For example, given the following struct 'Pie', the 'crust'\n  and 'filling' members are now imported:\n\n    ```swift\n    struct Pie {\n      struct { bool crispy; } crust;\n      union { int fruit; } filling;\n    }\n    ```\n\n  Since Swift does not support anonymous structs, these fields are\n  imported as properties named `crust` and `filling` having nested types\n  named `Pie.__Unnamed_crust` and `Pie.__Unnamed_filling`.\n\n  **(rdar://problem/21683348)**\n\n* [SE-0001][]:\n\n  Argument labels and parameter names can now be any keyword except\n  `var`, `let`, or `inout`. For example:\n\n  ```swift\n  NSURLProtectionSpace(host: \"somedomain.com\", port: 443, protocol: \"https\",\n                       realm: \"Some Domain\", authenticationMethod: \"Basic\")\n  ```\n\n  would previously have required `protocol` to be surrounded in\n  back-ticks.\n\n* [SE-0015][]:\n\n  Tuples (up to arity 6) whose elements are all `Comparable` or `Equatable` now\n  implement the full set of comparison/equality operators. The comparison\n  operators are defined in terms of\n  [lexicographical order](https://en.wikipedia.org/wiki/Lexicographical_order).\n\n* The `@objc(SomeName)` attribute is now supported on enums and enum cases to\n  rename the generated Objective-C declaration.\n\n  **(rdar://problem/21930334)**\n\n* [SE-0021][]:\n\n  When referencing a function or initializer, one can provide the\n  complete name, including argument labels. For example:\n\n  ```swift\n  let fn1 = someView.insertSubview(_:at:)\n  let fn2 = someView.insertSubview(_:aboveSubview:)\n\n  let buttonFactory = UIButton.init(type:)\n  ```\n\n* [SE-0020][]:\n\n  There is a new build configuration function, `#if swift(>=x.y)`, which\n  tests if the current Swift language version is at least `x.y`. This\n  allows you to conditionally compile code for multiple language\n  versions in the same file, even with different syntax, by deactivating\n  parsing in inactive code blocks. For example:\n\n  ```swift\n  #if swift(>=2.2)\n    // Only this code will be parsed in Swift 3.0\n    func foo(x: Int) -> (y: Int) -> () {}\n  #else\n    // This code is ignored entirely.\n    func foo(x: Int)(y: Int) {}\n  #endif\n  ```\n\n* [SE-0022][]:\n\n  The Objective-C selector of a Swift method can now be determined\n  directly with the #selector expression, e.g.,:\n\n  ```swift\n  let sel = #selector(insertSubview(_:aboveSubview:)) // sel has type Selector\n  ```\n\n  Along with this change, the use of string literals as selectors has\n  been deprecated, e.g.,\n\n  ```swift\n  let sel: Selector = \"insertSubview:aboveSubview:\"\n  ```\n\n  Generally, such string literals should be replaced with uses of\n  `#selector`, and the compiler will provide Fix-Its that use\n  `#selector`. In cases where this is not possible (e.g., when referring\n  to the getter of a property), one can still directly construct\n  selectors, e.g.:\n\n  ```swift\n  let sel = Selector(\"propertyName\")\n  ```\n\n  Note that the compiler is now checking the string literals used to\n  construct Selectors to ensure that they are well-formed Objective-C\n  selectors and that there is an `@objc` method with that selector.\n\n## Swift 2.1\n\n### 2015-10-21 (Xcode 7.1)\n\n* Enums imported from C now automatically conform to the `Equatable` protocol,\n  including a default implementation of the `==` operator. This conformance\n  allows you to use C enum pattern matching in switch statements with no\n  additional code. **(17287720)**\n\n* The `NSNumber.unsignedIntegerValue` property now has the type `UInt` instead\n  of `Int`, as do other methods and properties that use the `NSUInteger` type\n  in Objective-C and whose names contain `unsigned..`. Most other uses of\n  `NSUInteger` in system frameworks are imported as `Int` as they were in\n  Xcode 7. **(19134055)**\n\n* Field getters and setters are now created for named unions imported from C.\n  In addition, an initializer with a named parameter for the field is provided.\n  For example, given the following Objective-C `typedef`:\n\n  ```objc\n  typedef union IntOrFloat {\n    int intField;\n    float floatField;\n  } IntOrFloat;\n  ```\n\n  Importing this `typedef` into Swift generates the following interface:\n\n  ```swift\n  struct IntOrFloat {\n    var intField: Int { get set }\n    init(intField: Int)\n\n    var floatField: Float { get set }\n    init(floatField: Float)\n  }\n  ```\n\n  **(19660119)**\n\n* Bitfield members of C structs are now imported into Swift. **(21702107)**\n\n* The type `dispatch_block_t` now refers to the type\n  `@convention(block) () -> Void`, as it did in Swift 1.2.\n  This change allows programs using `dispatch_block_create` to work as expected,\n  solving an issue that surfaced in Xcode 7.0 with Swift 2.0.\n\n  **Note:** Converting to a Swift closure value and back is not guaranteed to\n  preserve the identity of a `dispatch_block_t`.\n  **(22432170)**\n\n* Editing a file does not trigger a recompile of files that depend upon it if\n  the edits only modify declarations marked private. **(22239821)**\n\n* Expressions interpolated in strings may now contain string literals.\n  For example, `My name is \\(attributes[\"name\"]!)` is now a valid expression.\n  **(14050788)**\n\n* Error messages produced when the type checker cannot solve its constraint\n  system continue to improve in many cases.\n\n  For example, errors in the body of generic closures (for instance, the\n  argument closure to `map`) are much more usefully diagnosed. **(18835890)**\n\n* Conversions between function types are supported, exhibiting covariance in\n  function result types and contravariance in function parameter types.\n  For example, it is legal to assign a function of type `Any -> Int` to a\n  variable of type `String -> Any`. **(19517003)**\n\n## Swift 2.0\n\n### 2015-09-17 (Xcode 7.0)\n\n#### Swift Language Features\n\n* New `defer` statement. This statement runs cleanup code when the scope is\n  exited, which is particularly useful in conjunction with the new error\n  handling model. For example:\n\n  ```swift\n  func xyz() throws {\n     let f = fopen(\"x.txt\", \"r\")\n     defer { fclose(f) }\n     try foo(f)                    // f is closed if an error is propagated.\n     let f2 = fopen(\"y.txt\", \"r\")\n     defer { fclose(f2) }\n     try bar(f, f2)                // f2 is closed, then f is closed if an error is propagated.\n  }                                // f2 is closed, then f is closed on a normal path\n  ```\n\n  **(17302850)**\n\n* Printing values of certain `enum` types shows the enum `case` and payload, if\n  any. This is not supported for `@objc` enums or certain enums with multiple\n  payloads. **(18334936)**\n\n* You can specify availability information on your own declarations with the\n  `@available()` attribute.\n\n  For example:\n\n  ```swift\n  @available(iOS 8.0, OSX 10.10, *)\n  func startUserActivity() -> NSUserActivity {\n    ...\n  }\n  ```\n\n  This code fragment indicates that the `startUserActivity()` method is\n  available on iOS 8.0+, on OS X v10.10+, and on all versions of any other\n  platform. **(20938565)**\n\n* A new `@nonobjc` attribute is introduced to selectively suppress ObjC export\n  for instance members that would otherwise be `@objc`. **(16763754)**\n\n* Nongeneric classes may now inherit from generic classes. **(15520519)**\n\n* Public extensions of generic types are now permitted.\n\n  ```swift\n  public extension Array { ... }\n  ```\n\n  **(16974298)**\n\n* Enums now support multiple generic associated values, for example:\n\n  ```swift\n  enum Either<T, U> {\n     case Left(T), Right(U)\n  }\n  ```\n\n  **(15666173)**\n\n* **Protocol extensions**: Extensions can be written for protocol types.\n  With these extensions, methods and properties can be added to any type that\n  conforms to a particular protocol, allowing you to reuse more of your code.\n  This leads to more natural caller side \"dot\" method syntax that follows the\n  principle of \"fluent interfaces\" and that makes the definition of generic\n  code simpler (reducing \"angle bracket blindness\"). **(11735843)**\n\n* **Protocol default implementations**: Protocols can have default\n  implementations for requirements specified in a protocol extension, allowing\n  \"mixin\" or \"trait\" like patterns.\n\n* **Availability checking**. Swift reports an error at compile time if you call an\n  API that was introduced in a version of the operating system newer than the\n  currently selected deployment target.\n\n  To check whether a potentially unavailable API is available at runtime, use\n  the new `#available()` condition in an if or guard statement. For example:\n\n  ```swift\n  if #available(iOS 8.0, OSX 10.10, *) {\n    // Use Handoff APIs when available.\n    let activity =\n      NSUserActivity(activityType:\"com.example.ShoppingList.view\")\n    activity.becomeCurrent()\n  } else {\n    // Fall back when Handoff APIs not available.\n  }\n  ```\n\n  **(14586648)**\n\n* Native support for C function pointers: C functions that take function pointer\n  arguments can be called using closures or global functions, with the\n  restriction that the closure must not capture any of its local context.\n  For example, the standard C qsort function can be invoked as follows:\n\n  ```swift\n  var array = [3, 14, 15, 9, 2, 6, 5]\n  qsort(&array, array.count, sizeofValue(array[0])) { a, b in\n    return Int32(UnsafePointer<Int>(a).memory - UnsafePointer<Int>(b).memory)\n  }\n  print(array)\n  ```\n\n  **(16339559)**\n\n* **Error handling**. You can create functions that `throw`, `catch`, and manage\n  errors in Swift.\n\n  Using this capability, you can surface and deal with recoverable\n  errors, such as \"file-not-found\" or network timeouts. Swift's error handling\n  interoperates with `NSError`. **(17158652)**\n\n* **Testability**: Tests of Swift 2.0 frameworks and apps are written without\n  having to make internal routines public.\n\n  Use `@testable import {ModuleName}` in your test source code to make all\n  public and internal routines usable. The app or framework target needs to be\n  compiled with the `Enable Testability` build setting set to `Yes`. The `Enable\n  Testability` build setting should be used only in your Debug configuration,\n  because it prohibits optimizations that depend on not exporting internal\n  symbols from the app or framework. **(17732115)**\n\n* if statements can be labeled, and labeled break statements can be used as a\n  jump out of the matching if statement.\n\n  An unlabeled break does not exit the if statement. It exits the enclosing\n  loop or switch statement, or it is illegal if none exists. (19150249)\n\n* A new `x?` pattern can be used to pattern match against optionals as a\n  synonym for `.Some(x)`. **(19382878)**\n\n* Concatenation of Swift string literals, including across multiple lines, is\n  now a guaranteed compile-time optimization, even at `-Onone`. **(19125926)**\n\n* Nested functions can now recursively reference themselves and other nested\n  functions. **(11266246)**\n\n* Improved diagnostics:\n  - A warning has been introduced to encourage the use of let instead of var\n    when appropriate.\n  - A warning has been introduced to signal unused variables.\n  - Invalid mutation diagnostics are more precise.\n  - Unreachable switch cases cause a warning.\n  - The switch statement \"exhaustiveness checker\" is smarter.\n  **(15975935,20130240)**\n\n* Failable convenience initializers are allowed to return `nil` before calling\n  `self.init`.\n\n  Designated initializers still must initialize all stored properties before\n  returning `nil`; this is a known limitation. **(20193929)**\n\n* A new `readLine()` function has been added to the standard library.\n  **(15911365)**\n\n* **SIMD Support**: Clang extended vectors are imported and usable in Swift.\n\n  This capability enables many graphics and other low-level numeric APIs\n  (for example, `simd.h`) to be usable in Swift.\n\n* New `guard` statement: This statement allows you to model an early exit out\n  of a scope.\n\n  For example:\n\n  ```swift\n  guard let z = bar() else { return }\n  use(z)\n  ```\n\n  The `else` block is required to exit the scope (for example, with `return`,\n  `throw`, `break`, `continue`, and so forth) or end in a call to a `@noreturn`\n  function. **(20109722)**\n\n* Improved pattern matching: `switch`/`case` pattern matching is available to\n  many new conditional control flow statements, including `if`/`case`,\n  `while`/`case`, `guard`/`case`, and `for-in`/`case`. `for-in` statements can\n  also have `where` clauses, which combine to support many of the features of\n  list comprehensions in other languages.\n\n* A new `do` statement allows scopes to be introduced with the `do` statement.\n\n  For example:\n\n  ```swift\n  do {\n      //new scope\n      do {\n          //another scope\n      }\n  }\n  ```\n\n#### Swift Enhancements and Changes\n\n* A new keyword `try?` has been added to Swift.\n\n  `try?` attempts to perform an operation that may throw. If the operation\n  succeeds, the result is wrapped in an optional; if it fails (that is, if an\n  error is thrown), the result is `nil` and the error is discarded.\n\n  For example:\n\n  ```swift\n  func produceGizmoUsingTechnology() throws -> Gizmo { ... }\n  func produceGizmoUsingMagic() throws -> Gizmo { ... }\n\n  if let result = try? produceGizmoUsingTechnology() { return result }\n  if let result = try? produceGizmoUsingMagic() { return result }\n  print(\"warning: failed to produce a Gizmo in any way\")\n  return nil\n  ```\n\n  `try?` always adds an extra level of `Optional` to the result type of the\n  expression being evaluated. If a throwing function's normal return type is\n  `Int?`, the result of calling it with `try?` will be `Int??`, or\n  `Optional<Optional<Int>>`. **(21692467)**\n\n* Type names and enum cases now print and convert to `String` without\n  qualification by default. `debugPrint` or `String(reflecting:)` can still be\n  used to get fully qualified names. For example:\n\n  ```swift\n  enum Fruit { case Apple, Banana, Strawberry }\n  print(Fruit.Apple)      // \"Apple\"\n  debugPrint(Fruit.Apple) // \"MyApp.Fruit.Apple\")\n  ```\n\n  **(21788604)**\n\n* C `typedef`s of block types are imported as `typealias`s for Swift closures.\n\n  The primary result of this is that `typedef`s for blocks with a parameter of\n  type `BOOL` are imported as closures with a parameter of type `Bool` (rather\n  than `ObjCBool` as in the previous release). This matches the behavior of\n  block parameters to imported Objective-C methods. **(22013912)**\n\n* The type `Boolean` in `MacTypes.h` is imported as `Bool` in contexts that allow\n  bridging between Swift and Objective-C types.\n\n  In cases where the representation is significant, `Boolean` is imported as a\n  distinct `DarwinBoolean` type, which is `BooleanLiteralConvertible` and can be\n  used in conditions (much like the `ObjCBool` type). **(19013551)**\n\n* Fields of C structs that are marked `__unsafe_unretained` are presented in\n  Swift using `Unmanaged`.\n\n  It is not possible for the Swift compiler to know if these references are\n  really intended to be strong (+1) or unretained (+0). **(19790608)**\n\n* The `NS_REFINED_FOR_SWIFT` macro can be used to move an Objective-C\n  declaration aside to provide a better version of the same API in Swift,\n  while still having the original implementation available. (For example, an\n  Objective-C API that takes a `Class` could offer a more precise parameter\n  type in Swift.)\n\n  The `NS_REFINED_FOR_SWIFT` macro operates differently on different declarations:\n\n  - `init` methods will be imported with the resulting Swift initializer having\n    `__` prepended to its first external parameter name.\n\n    ```objc\n    // Objective-C\n    - (instancetype)initWithClassName:(NSString *)name NS_REFINED_FOR_SWIFT;\n    ```\n\n    ```swift\n    // Swift\n    init(__className: String)\n    ```\n\n  - Other methods will be imported with `__` prepended to their base name.\n\n    ```objc\n    // Objective-C\n    - (NSString *)displayNameForMode:(DisplayMode)mode NS_REFINED_FOR_SWIFT;\n    ```\n\n    ```swift\n    // Swift\n    func __displayNameForMode(mode: DisplayMode) -> String\n    ```\n\n  - Subscript methods will be treated like any other methods and will not be\n    imported as subscripts.\n\n  - Other declarations will have `__` prepended to their name.\n\n    ```objc\n    // Objective-C\n    @property DisplayMode mode NS_REFINED_FOR_SWIFT;\n    ```\n\n    ```swift\n    // Swift\n    var __mode: DisplayMode { get set }\n    ```\n\n  **(20070465)**\n\n* Xcode provides context-sensitive code completions for enum elements and\n  option sets when using the shorter dot syntax. **(16659653)**\n\n* The `NSManaged` attribute can be used with methods as well as properties,\n  for access to Core Data's automatically generated Key-Value-Coding-compliant\n  to-many accessors.\n\n  ```swift\n  @NSManaged var employees: NSSet\n\n  @NSManaged func addEmployeesObject(employee: Employee)\n  @NSManaged func removeEmployeesObject(employee: Employee)\n  @NSManaged func addEmployees(employees: NSSet)\n  @NSManaged func removeEmployees(employees: NSSet)\n  ```\n\n  These can be declared in your `NSManagedObject` subclass. **(17583057)**\n\n* The grammar has been adjusted so that lines beginning with '.' are always\n  parsed as method or property lookups following the previous line, allowing\n  for code formatted like this to work:\n\n  ```swift\n  foo\n    .bar\n    .bas = 68000\n  ```\n\n  It is no longer possible to begin a line with a contextual static member\n  lookup (for example, to say `.staticVar = MyType()`). **(20238557)**\n\n* Code generation for large `struct` and `enum` types has been improved to reduce\n  code size. **(20598289)**\n\n* Nonmutating methods of structs, enums, and protocols may now be partially\n  applied to their self parameter:\n\n  ```swift\n  let a: Set<Int> = [1, 2, 3]\n  let b: [Set<Int>] = [[1], [4]]\n  b.map(a.union) // => [[1, 2, 3], [1, 2, 3, 4]]\n  ```\n\n  **(21091944)**\n\n* Swift documentation comments recognize a new top-level list\n  item: `- Throws: ...`\n\n  This item is used to document what errors can be thrown and why. The\n  documentation appears alongside parameters and return descriptions in Xcode\n  QuickHelp. **(21621679)**\n\n* Unnamed parameters now require an explicit `_:` to indicate that they are\n  unnamed. For example, the following is now an error:\n\n  ```swift\n  func f(Int) { }\n  ```\n\n  and must be written as:\n\n  ```swift\n  func f(_: Int) { }\n  ```\n\n  This simplifies the argument label model and also clarifies why cases like\n  `func f((a: Int, b: Int))` do not have parameters named `a` and `b`.\n  **(16737312)**\n\n* It is now possible to append a tuple to an array. **(17875634)**\n\n* The ability to refer to the 0 element of a scalar value (producing the\n  scalar value itself) has been removed. **(17963034)**\n\n* Variadic parameters can now appear anywhere in the parameter list for a\n  function or initializer. For example:\n\n  ```swift\n  func doSomethingToValues(values: Int... , options: MyOptions = [], fn: (Int) -&gt; Void) { ... }\n  ```\n\n  **(20127197)**\n\n* Generic subclasses of Objective-C classes are now supported. **(18505295)**\n\n* If an element of an enum with string raw type does not have an explicit raw\n  value, it will default to the text of the enum's name. For example:\n\n  ```swift\n  enum WorldLayer : String {\n      case Ground, BelowCharacter, Character\n  }\n  ```\n\n  is equivalent to:\n\n  ```swift\n  enum WorldLayer : String {\n      case Ground = \"Ground\"\n      case BelowCharacter = \"BelowCharacter\"\n      case Character = \"Character\"\n  }\n  ```\n\n  **(15819953)**\n\n* The `performSelector` family of APIs is now available for Swift code.\n  **(17227475)**\n\n* When delegating or chaining to a failable initializer (for example, with\n  `self.init(...)` or `super.init(...)`), one can now force-unwrap the result with\n  `!`. For example:\n\n  ```swift\n  extension UIImage {\n    enum AssetIdentifier: String {\n      case Isabella\n      case William\n      case Olivia\n    }\n\n    convenience init(assetIdentifier: AssetIdentifier) {\n      self.init(named: assetIdentifier.rawValue)!\n    }\n  }\n  ```\n\n  **(18497407)**\n\n* Initializers can now be referenced like static methods by referring to\n  `.init` on a static type reference or type object. For example:\n\n  ```swift\n  let x = String.init(5)\n  let stringType = String.self\n  let y = stringType.init(5)\n\n  let oneTwoThree = [1, 2, 3].map(String.init).reduce(\"\", combine: +)\n  ```\n\n  `.init` is still implicit when constructing using a static type, as in\n  `String(5)`. `.init` is required when using dynamic type objects or when\n  referring to the initializer as a function value. **(21375845)**\n\n* Enums and cases can now be marked indirect, which causes the associated\n  value for the enum to be stored indirectly, allowing for recursive data\n  structures to be defined. For example:\n\n  ```swift\n    enum List<T> {\n    case Nil\n    indirect case Cons(head: T, tail: List<T>)\n  }\n\n  indirect enum Tree<T> {\n    case Leaf(T)\n    case Branch(left: Tree<T>, right: Tree<T>)\n  }\n  ```\n\n  **(21643855)**\n\n* Formatting for Swift expression results has changed significantly when\n  using `po` or `expr -O`. Customization that was introduced has been refined\n  in the following ways:\n\n  - The formatted summary provided by either `debugDescription` or\n    `description` methods will always be used for types that conform to\n    `CustomDebugStringConvertible` or `CustomStringConvertible` respectively.\n    When neither conformance is present, the type name is displayed and\n    reference types also display the referenced address to more closely mimic\n    existing behavior for Objective-C classes.\n\n  - Value types such as enums, tuples, and structs display all members\n    indented below the summary by default, while reference types will not. This\n    behavior can be customized for all types by implementing\n    `CustomReflectable`.\n\n  These output customizations can be bypassed by using `p` or `expr` without\n  the `-O` argument to provide a complete list of all fields and their values.\n  **(21463866)**\n\n* Properties and methods using `Unmanaged` can now be exposed to Objective-C.\n  **(16832080)**\n\n* Applying the `@objc` attribute to a class changes that class's compile-time\n  name in the target's generated Objective-C header as well as changing its\n  runtime name. This applies to protocols as well. For example:\n\n  ```swift\n  // Swift\n  @objc(MyAppDelegate)\n  class AppDelegate : NSObject, UIApplicationDelegate {\n    // ...\n  }\n  ```\n\n  ```objc\n  // Objective-C\n  @interface MyAppDelegate : NSObject <UIApplicationDelegate>\n    // ...\n  @end\n  ```\n\n  **(17469485)**\n\n* Collections containing types that are not Objective-C compatible are no\n  longer considered Objective-C compatible types themselves.\n\n  For example, previously `Array<SwiftClassType>` was permitted as the type\n  of a property marked `@objc`; this is no longer the case. **(19787270)**\n\n* Generic subclasses of Objective-C classes, as well as nongeneric classes\n  that inherit from such a class, require runtime metadata instantiation and\n  cannot be directly named from Objective-C code.\n\n  When support for generic subclasses of Objective-C classes was first added,\n  the generated Objective-C bridging header erroneously listed such classes,\n  which, when used, could lead to incorrect runtime behavior or compile-time\n  errors. This has been fixed.\n\n  The behavior of the `@objc` attribute on a class has been clarified such that\n  applying `@objc` to a class which cannot appear in a bridging header is now\n  an error.\n\n  Note that this change does not result in a change of behavior with valid\n  code because members of a class are implicitly `@objc` if any superclass of\n  the class is an `@objc` class, and all `@objc` classes must inherit from\n  NSObject. **(21342574)**\n\n* The performance of `-Onone` (debug) builds has been improved by using\n  prespecialized instances of generics in the standard library. It produces\n  significantly faster executables in debug builds in many cases, without\n  impacting compile time. **(20486658)**\n\n* `AnyObject` and `NSObject` variables that refer to class objects can be cast\n  back to class object types. For example, this code succeeds:\n\n  ```swift\n  let x: AnyObject = NSObject.self\n  let y = x as! NSObject.Type\n  ```\n\n  Arrays, dictionaries, and sets that contain class objects successfully\n  bridge with `NSArray`, `NSDictionary`, and `NSSet` as well. Objective-C APIs\n  that provide `NSArray<Class> *` objects, such as `-[NSURLSessionConfiguration\n  protocolClasses]`, now work correctly when used in Swift. **(16238475)**\n\n* `print()` and reflection via Mirrors is able to report both the current\n  case and payload for all enums with multiple payload types. The only\n  remaining enum types that do not support reflection are `@objc` enums and\n  enums imported from C. **(21739870)**\n\n* Enum cases with payloads can be used as functions. For example:\n\n  ```swift\n  enum Either<T, U> { case Left(T), Right(U) }\n  let lefts: [Either<Int, String>] = [1, 2, 3].map(Either.Left)\n  let rights: [Either<Int, String>] = [\"one\", \"two\", \"three\"].map(Either.Right)\n  ```\n\n  **(19091028)**\n\n* `ExtensibleCollectionType` has been folded into\n  `RangeReplaceableCollectionType`. In addition, default implementations have\n  been added as methods, which should be used instead of the free Swift\n  module functions related to these protocols. **(18220295)**\n\n#### Swift Standard Library\n\n* The standard library moved many generic global functions (such as `map`,\n  `filter`, and `sort`) to be methods written with protocol extensions. This\n  allows those methods to be pervasively available on all sequence and\n  collection types and allowed the removal of the global functions.\n\n* Deprecated enum elements no longer affect the names of nondeprecated\n  elements when an Objective-C enum is imported into Swift. This may cause\n  the Swift names of some enum elements to change. **(17686122)**\n\n* All enums imported from C are `RawRepresentable`, including those not\n  declared with `NS_ENUM` or `NS_OPTIONS`. As part of this change, the value\n  property of such enums has been renamed `rawValue`. **(18702016)**\n\n* Swift documentation comments use a syntax based on the Markdown format,\n  aligning them with rich comments in playgrounds.\n\n  - Outermost list items are interpreted as special fields and are highlighted\n    in Xcode QuickHelp.\n\n  - There are two methods of documenting parameters: parameter outlines and\n    separate parameter fields. You can mix and match these forms as you see\n    fit in any order or continuity throughout the doc comment. Because these\n    are parsed as list items, you can nest arbitrary content underneath them.\n\n  - Parameter outline syntax:\n\n    ```swift\n    - Parameters:\n      - x: ...\n      - y: ...\n    ```\n\n  - Separate parameter fields:\n\n    ```swift\n    - parameter x: ...\n    - parameter y: ...\n    ```\n\n  - Documenting return values:\n\n    ```swift\n    - returns: ...\n    ```\n\n  Other special fields are highlighted in QuickHelp, as well as rendering\n  support for all of Markdown. (20180161)\n\n* The `CFunctionPointer<T -> U>` type has been removed. C function types are\n  specified using the new `@convention(c)` attribute. Like other function\n  types, `@convention(c) T -> U` is not nullable unless made optional. The\n  `@objc_block` attribute for specifying block types has also been removed and\n  replaced with `@convention(block)`.\n\n* Methods and functions have the same rules for parameter names. You can omit\n  providing an external parameter name with `_`. To further simplify the model,\n  the shorthand `#` for specifying a parameter name has been removed, as have\n  the special rules for default arguments.\n\n  ```swift\n  // Declaration\n    func printFunction(str: String, newline: Bool)\n    func printMethod(str: String, newline: Bool)\n    func printFunctionOmitParameterName(str: String, _  newline: Bool)\n\n  // Call\n    printFunction(\"hello\", newline: true)\n    printMethod(\"hello\", newline: true)\n    printFunctionOmitParameterName(\"hello\", true)\n  ```\n\n  **(17218256)**\n\n* `NS_OPTIONS` types get imported as conforming to the `OptionSetType` protocol,\n  which presents a set-like interface for options. Instead of using bitwise\n  operations such as:\n\n  ```swift\n  // Swift 1.2:\n  object.invokeMethodWithOptions(.OptionA | .OptionB)\n  object.invokeMethodWithOptions(nil)\n\n  if options @ .OptionC == .OptionC {\n    // .OptionC is set\n  }\n  ```\n\n  Option sets support set literal syntax, and set-like methods such as contains:\n\n  ```swift\n  object.invokeMethodWithOptions([.OptionA, .OptionB])\n  object.invokeMethodWithOptions([])\n\n  if options.contains(.OptionC) {\n    // .OptionC is set\n  }\n  ```\n\n  A new option set type can be written in Swift as a struct that conforms to\n  the `OptionSetType` protocol. If the type specifies a `rawValue` property and\n  option constants as `static let` constants, the standard library will provide\n  default implementations of the rest of the option set API:\n\n  ```swift\n  struct MyOptions: OptionSetType {\n    let rawValue: Int\n\n    static let TuringMachine  = MyOptions(rawValue: 1)\n    static let LambdaCalculus = MyOptions(rawValue: 2)\n    static let VonNeumann     = MyOptions(rawValue: 4)\n  }\n\n  let churchTuring: MyOptions = [.TuringMachine, .LambdaCalculus]\n  ```\n\n  **(18069205)**\n\n* Type annotations are no longer allowed in patterns and are considered part\n  of the outlying declaration. This means that code previously written as:\n\n  ```swift\n  var (a : Int, b : Float) = foo()\n  ```\n\n  needs to be written as:\n\n  ```swift\n  var (a, b) : (Int, Float) = foo()\n  ```\n\n  if an explicit type annotation is needed. The former syntax was ambiguous\n  with tuple element labels. **(20167393)**\n\n* The `do`/`while` loop is renamed to `repeat`/`while` to make it obvious\n  whether a statement is a loop from its leading keyword.\n\n  In Swift 1.2:\n\n  ```swift\n  do {\n  ...\n  } while <condition>\n  ```\n\n  In Swift 2.0:\n\n  ```swift\n  repeat {\n  ...\n  } while <condition>\n  ```\n\n  **(20336424)**\n\n* `forEach` has been added to `SequenceType`. This lets you iterate over\n  elements of a sequence, calling a body closure on each. For example:\n\n  ```swift\n  (0..<10).forEach {\n    print($0)\n  }\n  ```\n\n  This is very similar to the following:\n\n  ```swift\n  for x in 0..<10 {\n    print(x)\n  }\n  ```\n\n  But take note of the following differences:\n\n  - Unlike for-in loops, you can't use `break` or `continue` to exit the current\n    call of the body closure or skip subsequent calls.\n\n  - Also unlike for-in loops, using `return` in the body closure only exits from\n    the current call to the closure, not any outer scope, and won't skip\n    subsequent calls.\n\n  **(18231840)**\n\n* The `Word` and `UWord` types have been removed from the standard library; use\n  `Int` and `UInt` instead. **(18693488)**\n\n* Most standard library APIs that take closures or `@autoclosure` parameters\n  now use `rethrows`. This allows the closure parameters to methods like `map`\n  and `filter` to throw errors, and allows short-circuiting operators like `&&`,\n  `||`, and `??` to work with expressions that may produce errors.\n  **(21345565)**\n\n* SIMD improvements: Integer vector types in the simd module now only support\n  unchecked arithmetic with wraparound semantics using the `&+`, `&-`, and `&*`\n  operators, in order to better support the machine model for vectors.\n  The `+`, `-`, and `*` operators are unavailable on integer vectors, and Xcode\n  automatically suggests replacing them with the wrapping operators.\n\n  Code generation for vector types in the simd module has been improved to\n  better utilize vector hardware, leading to dramatically improved performance\n  in many cases. **(21574425)**\n\n* All `CollectionType` objects are now sliceable. `SequenceType` now has a notion\n  of `SubSequence`, which is a type that represents only some of the values but\n  in the same order. For example, the `ArraySubSequence` type is `ArraySlice`,\n  which is an efficient view on the `Array` type's buffer that avoids copying as\n  long as it uniquely references the `Array` from which it came.\n\n  The following free Swift functions for splitting/slicing sequences have been\n  removed and replaced by method requirements on the `SequenceType` protocol\n  with default implementations in protocol extensions. `CollectionType` has\n  specialized implementations, where possible, to take advantage of efficient\n  access of its elements.\n\n  ```swift\n  /// Returns the first `maxLength` elements of `self`,\n  /// or all the elements if `self` has fewer than `maxLength` elements.\n  prefix(maxLength: Int) -> SubSequence\n\n  /// Returns the last `maxLength` elements of `self`,\n  /// or all the elements if `self` has fewer than `maxLength` elements.\n  suffix(maxLength: Int) -> SubSequence\n\n  /// Returns all but the first `n` elements of `self`.\n  dropFirst(n: Int) -> SubSequence\n\n  /// Returns all but the last `n` elements of `self`.\n  dropLast(n: Int) -> SubSequence\n\n  /// Returns the maximal `SubSequence`s of `self`, in order, that\n  /// don't contain elements satisfying the predicate `isSeparator`.\n  split(maxSplits maxSplits: Int, allowEmptySlices: Bool, @noescape isSeparator: (Generator.Element) -> Bool) -> [SubSequence]\n  ```\n\n  The following convenience extension is provided for `split`:\n\n  ```swift\n  split(separator: Generator.Element, maxSplit: Int, allowEmptySlices: Bool) -> [SubSequence]\n  ```\n\n  Also, new protocol requirements and default implementations on\n  `CollectionType` are now available:\n\n  ```swift\n  /// Returns `self[startIndex..<end]`\n  prefixUpTo(end: Index) -> SubSequence\n\n  /// Returns `self[start..<endIndex]`\n  suffixFrom(start: Index) -> SubSequence\n\n  /// Returns `prefixUpTo(position.successor())`\n  prefixThrough(position: Index) -> SubSequence\n  ```\n\n  **(21663830)**\n\n* The `print` and `debugPrint` functions are improved:\n  - Both functions have become variadic, and you can print any number of items\n    with a single call.\n  - `separator: String = \" \"` was added so you can control how the items are\n    separated.\n  - `terminator: String = \"\\n\"` replaced `appendNewline: bool = true.`  With\n    this change, `print(x, appendNewline: false)` is expressed as\n    `print(x, terminator: \"\")`.\n\n  - For the variants that take an output stream, the argument label `toStream`\n    was added to the stream argument.\n\n  The `println` function from Swift 1.2 has been removed. **(21788540)**\n\n* For consistency and better composition of generic code, `ArraySlice` indices\n  are no longer always zero-based but map directly onto the indices of the\n  collection they are slicing and maintain that mapping even after mutations.\n\n  Before:\n\n  ```swift\n  var a = Array(0..<10)\n  var s = a[5..<10]\n  s.indices        // 0..<5\n  s[0] = 111\n  s                // [111, 6, 7, 8, 9]\n  s.removeFirst()\n  s.indices        // 1..<5\n  ```\n\n  After:\n\n  ```swift\n  var a = Array(0..<10)\n  var s = a[5..<10]\n  s.indices        // 5..<10\n  s[5] = 99\n  s                // [99, 6, 7, 8, 9]\n  s.removeFirst()\n  s.indices        // 6..<10\n  ```\n\n  Rather than define variants of collection algorithms that take explicit\n  subrange arguments, such as `a.sortSubrangeInPlace(3..<7)`, the Swift\n  standard library provides \"slicing,\" which composes well with algorithms.\n  This enables you to write `a[3..<7].sortInPlace()`, for example. With most\n  collections, these algorithms compose naturally.\n\n  For example, before this change was incorporated:\n\n  ```swift\n  extension MyIntCollection {\n    func prefixThroughFirstNegativeSubrange() -> SubSequence {\n      // Find the first negative element\n      let firstNegative = self.indexOf { $0 < 0 } ?? endIndex\n\n      // Slice off non-negative prefix\n      let startsWithNegative = self.suffixFrom(firstNegative)\n\n      // Find the first non-negative position in the slice\n      let end = startsWithNegative.indexOf { $0 >= 0 } ?? endIndex\n      return self[startIndex..<end]\n    }\n  }\n  ```\n\n  The above code would work for any collection of `Int`s unless the collection\n  is an `Array<Int>`. Unfortunately, when array slice indices are zero-based,\n  the last two lines of the method need to change to:\n\n  ```swift\n  let end = startsWithNegative.indexOf { $0 >= 0 }\n    ?? startsWithNegative.endIndex\n  return self[startIndex..<end + firstNegative]\n  ```\n\n  These differences made working with slices awkward, error-prone, and\n  nongeneric.\n\n  After this change, Swift collections start to provide a guarantee that, at\n  least until there is a mutation, slice indices are valid in the collection\n  from which they were sliced, and refer to the same elements. **(21866825)**\n\n* The method `RangeReplaceableCollectionType.extend()` was renamed to\n  `appendContentsOf()`, and the `splice()` method was renamed to\n  `insertContentsOf()`. **(21972324)**\n\n* `find` has been renamed to `indexOf()`, sort has been renamed to\n  `sortInPlace()`, and `sorted()` becomes `sort()`.\n\n* `String.toInt()` has been renamed to a failable `Int(String)` initializer,\n  since initialization syntax is the preferred style for type conversions.\n\n* `String` no longer conforms to `SequenceType` in order to prevent non-Unicode\n  correct sequence algorithms from being prominently available on String. To\n  perform grapheme-cluster-based, UTF-8-based, or UTF-16-based algorithms, use\n  the `.characters`, `.utf8`, and `.utf16` projections respectively.\n\n* Generic functions that declare type parameters not used within the generic\n  function's type produce a compiler error. For example:\n\n  ```swift\n  func foo<T>() { } // error: generic parameter 'T' is not used in function signature\n  ```\n\n* The `Dictionary.removeAtIndex(_:)` method now returns the key-value pair\n  being removed as a two-element tuple (rather than returning `Void`).\n  Similarly, the `Set.removeAtIndex(_:)` method returns the element being\n  removed. **(20299881)**\n\n* Generic parameters on types in the Swift standard library have been renamed\n  to reflect the role of the types in the API. For example, `Array<T>` became\n  `Array<Element>`, `UnsafePointer<T>` became `UnsafePointer<Memory>`, and so\n  forth. **(21429126)**\n\n* The `SinkType` protocol and `SinkOf` struct have been removed from the standard\n  library in favor of `(T) -> ()` closures. **(21663799)**\n\n## Swift 1.2\n\n### 2015-04-08 (Xcode 6.3)\n\n#### Swift Language Changes\n\n* The notions of guaranteed conversion and \"forced failable\" conversion are now\n  separated into two operators. Forced failable conversion now uses the `as!`\n  operator. The `!` makes it clear to readers of code that the cast may fail and\n  produce a runtime error. The `as` operator remains for upcasts\n  (e.g. `someDerivedValue as Base`) and type annotations (`0 as Int8`) which\n  are guaranteed to never fail. **(19031957)**\n\n* Immutable (`let`) properties in `struct` and `class` initializers have been\n  revised to standardize on a general \"`let`s are singly initialized but never\n  reassigned or mutated\" model. Previously, they were completely mutable\n  within the body of initializers. Now, they are only allowed to be assigned\n  to once to provide their value. If the property has an initial value in its\n  declaration, that counts as the initial value for all initializers.\n  **(19035287)**\n\n* The implicit conversions from bridged Objective-C classes\n  (`NSString`/`NSArray`/`NSDictionary`) to their corresponding Swift value types\n  (`String`/`Array`/`Dictionary`) have been removed, making the Swift type\n  system simpler and more predictable.\n\n  This means that the following code will no longer work:\n\n  ```swift\n  import Foundation\n  func log(s: String) { println(x) }\n  let ns: NSString = \"some NSString\" // okay: literals still work\n  log(ns)     // fails with the error\n              // \"'NSString' is not convertible to 'String'\"\n  ```\n\n  In order to perform such a bridging conversion, make the conversion explicit\n  with the as keyword:\n\n  ```swift\n  log(ns as String) // succeeds\n  ```\n\n  Implicit conversions from Swift value types to their bridged Objective-C\n  classes are still permitted. For example:\n\n  ```swift\n  func nsLog(ns: NSString) { println(ns) }\n  let s: String = \"some String\"\n  nsLog(s) // okay: implicit conversion from String to NSString is permitted\n  ```\n\n  Note that these Cocoa types in Objective-C headers are still automatically\n  bridged to their corresponding Swift type, which means that code is only\n  affected if it is explicitly referencing (for example) `NSString` in a Swift\n  source file. It is recommended you use the corresponding Swift types (for\n  example, `String`) directly unless you are doing something advanced, like\n  implementing a subclass in the class cluster. **(18311362)**\n\n* The `@autoclosure` attribute is now an attribute on a parameter, not an\n  attribute on the parameter's type.\n\n  Where before you might have used\n\n  ```swift\n  func assert(predicate : @autoclosure () -> Bool) {...}\n  ```\n\n  you now write this as\n\n  ```swift\n  func assert(@autoclosure predicate : () -> Bool) {...}\n  ```\n\n  **(15217242)**\n\n* The `@autoclosure` attribute on parameters now implies the new `@noescape`\n  attribute.\n\n* Curried function parameters can now specify argument labels.\n\n  For example:\n\n  ```swift\n  func curryUnnamed(a: Int)(_ b: Int) { return a + b }\n  curryUnnamed(1)(2)\n\n  func curryNamed(first a: Int)(second b: Int) -> Int { return a + b }\n  curryNamed(first: 1)(second: 2)\n  ```\n\n  **(17237268)**\n\n* Swift now detects discrepancies between overloading and overriding in the\n  Swift type system and the effective behavior seen via the Objective-C runtime.\n\n  For example, the following conflict between the Objective-C setter for\n  `property` in a class and the method `setProperty` in its extension is now\n  diagnosed:\n\n  ```swift\n  class A : NSObject {\n  var property: String = \"Hello\" // note: Objective-C method 'setProperty:'\n      // previously declared by setter for\n      // 'property' here\n  }\n\n  extension A {\n  func setProperty(str: String) { }     // error: method 'setProperty'\n      // redeclares Objective-C method\n      //'setProperty:'\n  }\n  ```\n\n  Similar checking applies to accidental overrides in the Objective-C runtime:\n\n  ```swift\n  class B : NSObject {\n  func method(arg: String) { }     // note: overridden declaration\n      // here has type '(String) -> ()'\n  }\n\n  class C : B {\n  func method(arg: [String]) { } // error: overriding method with\n      // selector 'method:' has incompatible\n      // type '([String]) -> ()'\n  }\n  ```\n\n  as well as protocol conformances:\n\n  ```swift\n  class MyDelegate : NSObject, NSURLSessionDelegate {\n  func URLSession(session: NSURLSession, didBecomeInvalidWithError:\n      Bool){ } // error: Objective-C method 'URLSession:didBecomeInvalidWithError:'\n      // provided by method 'URLSession(_:didBecomeInvalidWithError:)'\n      // conflicts with optional requirement method\n      // 'URLSession(_:didBecomeInvalidWithError:)' in protocol\n      // 'NSURLSessionDelegate'\n  }\n  ```\n\n  **(18391046, 18383574)**\n\n* The precedence of the Nil Coalescing Operator (`??`) has been raised to bind\n  tighter than short-circuiting logical and comparison operators, but looser\n  than as conversions and range operators. This provides more useful behavior\n  for expressions like:\n\n  ```swift\n  if allowEmpty || items?.count ?? 0 > 0 {...}\n  ```\n\n* The `&/` and `&%` operators were removed, to simplify the language and\n  improve consistency.\n\n  Unlike the `&+`, `&-`, and `&*` operators, these operators did not provide\n  two's-complement arithmetic behavior; they provided special case behavior\n  for division, remainder by zero, and `Int.min/-1`. These tests should be\n  written explicitly in the code as comparisons if needed. **(17926954)**\n\n* Constructing a `UInt8` from an ASCII value now requires the ascii keyword\n  parameter. Using non-ASCII unicode scalars will cause this initializer to\n  trap. **(18509195)**\n\n* The C `size_t` family of types are now imported into Swift as `Int`, since\n  Swift prefers sizes and counts to be represented as signed numbers, even if\n  they are non-negative.\n\n  This change decreases the amount of explicit type conversion between `Int`\n  and `UInt`, better aligns with `sizeof` returning `Int`, and provides safer\n  arithmetic properties. **(18949559)**\n\n* Classes that do not inherit from `NSObject` but do adopt an `@objc` protocol\n  will need to explicitly mark those methods, properties, and initializers\n  used to satisfy the protocol requirements as `@objc`.\n\n  For example:\n\n  ```swift\n  @objc protocol SomethingDelegate {\n      func didSomething()\n  }\n\n  class MySomethingDelegate : SomethingDelegate {\n      @objc func didSomething() { ... }\n  }\n  ```\n\n#### Swift Language Fixes\n\n* Dynamic casts (`as!`, `as?` and `is`) now work with Swift protocol types, so\n  long as they have no associated types. **(18869156)**\n\n* Adding conformances within a Playground now works as expected.\n\n  For example:\n\n  ```swift\n  struct Point {\n    var x, y: Double\n  }\n\n  extension Point : Printable {\n    var description: String {\n      return \"(\\(x), \\(y))\"\n    }\n  }\n\n  var p1 = Point(x: 1.5, y: 2.5)\n  println(p1) // prints \"(1.5, 2.5)\"\n  ```\n\n* Imported `NS_ENUM` types with undocumented values, such as\n  `UIViewAnimationCurve`, can now be converted from their raw integer values\n  using the `init(rawValue:)` initializer without being reset to `nil`. Code\n  that used `unsafeBitCast` as a workaround for this issue can be written to\n  use the raw value initializer.\n\n  For example,\n\n  ```swift\n  let animationCurve =\n    unsafeBitCast(userInfo[UIKeyboardAnimationCurveUserInfoKey].integerValue,\n    UIViewAnimationCurve.self)\n  ```\n\n  can now be written instead as\n\n  ```swift\n  let animationCurve = UIViewAnimationCurve(rawValue:\n    userInfo[UIKeyboardAnimationCurveUserInfoKey].integerValue)!\n  ```\n\n  **(19005771)**\n\n* Negative floating-point literals are now accepted as raw values in enums.\n  **(16504472)**\n\n* Unowned references to Objective-C objects, or Swift objects inheriting from\n  Objective-C objects, no longer cause a crash if the object holding the\n  unowned reference is deallocated after the referenced object has been\n  released. **(18091547)**\n\n* Variables and properties with observing accessors no longer require an\n  explicit type if it can be inferred from the initial value expression.\n  **(18148072)**\n\n* Generic curried functions no longer produce random results when fully\n  applied. **(18988428)**\n\n* Comparing the result of a failed `NSClassFromString` lookup against `nil` now\n  behaves correctly. **(19318533)**\n\n* Subclasses that override base class methods with co- or contravariance in\n  Optional types no longer cause crashes at runtime.\n\n  For example:\n\n  ```swift\n  class Base {\n    func foo(x: String) -> String? { return x }\n  }\n  class Derived: Base {\n    override func foo(x: String?) -> String { return x! }\n  }\n  ```\n\n  **(19321484)**\n\n#### Swift Language Enhancements\n\n* Swift now supports building targets incrementally, i.e. not rebuilding\n  every Swift source file in a target when a single file is changed.\n\n  The incremental build capability is based on a conservative dependency\n  analysis, so you may still see more files rebuilding than absolutely\n  necessary. If you find any cases where a file is not rebuilt when it should\n  be, please file a bug report. Running Clean on your target afterwards should\n  allow you to complete your build normally. **(18248514)**\n\n* A new `Set` data structure is included which provides a generic collection of\n  unique elements with full value semantics. It bridges with `NSSet`, providing\n  functionality analogous to `Array` and `Dictionary`. **(14661754)**\n\n* The `if-let` construct has been expanded to allow testing multiple optionals\n  and guarding conditions in a single `if` (or `while`) statement using syntax\n  similar to generic constraints:\n\n  ```swift\n  if let a = foo(), b = bar() where a < b,\n     let c = baz() {\n  }\n  ```\n\n  This allows you to test multiple optionals and include intervening boolean\n  conditions, without introducing undesirable nesting (for instance, to avoid\n  the optional unwrapping _\"pyramid of doom\"_).\n\n  Further, `if-let` now also supports a single leading boolean condition along\n  with optional binding `let` clauses. For example:\n\n  ```swift\n  if someValue > 42 && someOtherThing < 19, let a = getOptionalThing() where a > someValue {\n  }\n  ```\n\n  **(19797158, 19382942)**\n\n* The `if-let` syntax has been extended to support a single leading boolean\n  condition along with optional binding `let` clauses.\n\n  For example:\n\n  ```swift\n  if someValue > 42 && someOtherThing < 19, let a = getOptionalThing() where a > someValue {\n  }\n  ```\n\n  **(19797158)**\n\n* `let` constants have been generalized to no longer require immediate\n  initialization. The new rule is that a `let` constant must be initialized\n  before use (like a `var`), and that it may only be initialized: not\n  reassigned or mutated after initialization. This enables patterns such as:\n\n  ```swift\n  let x: SomeThing\n  if condition {\n    x = foo()\n  } else {\n    x = bar()\n  }\n  use(x)\n  ```\n\n  which formerly required the use of a `var`, even though there is no mutation\n  taking place. **(16181314)**\n\n* `static` methods and properties are now allowed in classes (as an alias for\n  `class final`). You are now allowed to declare static stored properties in\n  classes, which have global storage and are lazily initialized on first\n  access (like global variables). Protocols now declare type requirements as\n  static requirements instead of declaring them as class requirements.\n  **(17198298)**\n\n* Type inference for single-expression closures has been improved in several ways:\n  - Closures that are comprised of a single return statement are now type\n    checked as single-expression closures.\n  - Unannotated single-expression closures with non-`Void` return types can now\n    be used in `Void` contexts.\n  - Situations where a multi-statement closure's type could not be inferred\n    because of a missing return-type annotation are now properly diagnosed.\n\n* Swift enums can now be exported to Objective-C using the `@objc` attribute.\n  `@objc` enums must declare an integer raw type, and cannot be generic or use\n  associated values. Because Objective-C enums are not namespaced, enum cases\n  are imported into Objective-C as the concatenation of the enum name and\n  case name.\n\n  For example, this Swift declaration:\n\n  ```swift\n  // Swift\n  @objc\n  enum Bear: Int {\n     case Black, Grizzly, Polar\n  }\n  ```\n\n  imports into Objective-C as:\n\n  ```objc\n  // Objective-C\n  typedef NS_ENUM(NSInteger, Bear) {\n     BearBlack, BearGrizzly, BearPolar\n  };\n  ```\n\n  **(16967385)**\n\n* Objective-C language extensions are now available to indicate the nullability\n  of pointers and blocks in Objective-C APIs, allowing your Objective-C APIs\n  to be imported without `ImplicitlyUnwrappedOptional`. (See items below for\n  more details.) **(18868820)**\n\n* Swift can now partially import C aggregates containing unions, bitfields,\n  SIMD vector types, and other C language features that are not natively\n  supported in Swift. The unsupported fields will not be accessible from\n  Swift, but C and Objective-C APIs that have arguments and return values of\n  these types can be used in Swift. This includes the Foundation `NSDecimal`\n  type and the `GLKit` `GLKVector` and `GLKMatrix` types, among others.\n  **(15951448)**\n\n* Imported C structs now have a default initializer in Swift that initializes\n  all of the struct's fields to zero.\n\n  For example:\n\n  ```swift\n  import Darwin\n  var devNullStat = stat()\n  stat(\"/dev/null\", &devNullStat)\n  ```\n\n  If a structure contains fields that cannot be correctly zero initialized\n  (i.e. pointer fields marked with the new `__nonnull` modifier), this default\n  initializer will be suppressed. **(18338802)**\n\n* New APIs for converting among the `Index` types for `String`,\n  `String.UnicodeScalarView`, `String.UTF16View`, and `String.UTF8View` are\n  available, as well as APIs for converting each of the `String` views into\n  `String`s. **(18018911)**\n\n* Type values now print as the full demangled type name when used with\n  `println` or string interpolation.\n\n  ```swift\n  toString(Int.self)          // prints \"Swift.Int\"\n  println([Float].self)       // prints \"Swift.Array&lt;Swift.Float&gt;\"\n  println((Int, String).self) // prints \"(Swift.Int, Swift.String)\"\n  ```\n\n  **(18947381)**\n\n* A new `@noescape` attribute may be used on closure parameters to functions.\n  This indicates that the parameter is only ever called (or passed as an\n  `@noescape` parameter in a call), which means that it cannot outlive the\n  lifetime of the call. This enables some minor performance optimizations,\n  but more importantly disables the `self.` requirement in closure arguments.\n  This enables control-flow-like functions to be more transparent about their\n  behavior. In a future beta, the standard library will adopt this attribute\n  in functions like `autoreleasepool()`.\n\n  ```swift\n  func autoreleasepool(@noescape code: () -> ()) {\n     pushAutoreleasePool()\n     code()\n     popAutoreleasePool()\n  }\n  ```\n\n  **(16323038)**\n\n* Performance is substantially improved over Swift 1.1 in many cases. For\n  example, multidimensional arrays are algorithmically faster in some cases,\n  unoptimized code is much faster in many cases, and many other improvements\n  have been made.\n\n* The diagnostics emitted for expression type check errors are greatly\n  improved in many cases. **(18869019)**\n\n* Type checker performance for many common expression kinds has been greatly\n  improved. This can significantly improve build times and reduces the number\n  of \"expression too complex\" errors. **(18868985)**\n\n* The `@autoclosure` attribute has a second form, `@autoclosure(escaping)`, that\n  provides the same caller-side syntax as `@autoclosure` but allows the\n  resulting closure to escape in the implementation.\n\n  For example:\n\n  ```swift\n  func lazyAssertion(@autoclosure(escaping) condition: () -> Bool,\n                     message: String = \"\") {\n    lazyAssertions.append(condition) // escapes\n    }\n  lazyAssertion(1 == 2, message: \"fail eventually\")\n  ```\n\n  **(19499207)**\n\n#### Swift Performance\n\n* A new compilation mode has been introduced for Swift called Whole Module\n  Optimization. This option optimizes all of the files in a target together\n  and enables better performance (at the cost of increased compile time). The\n  new flag can be enabled in Xcode using the `Whole Module Optimization` build\n  setting or by using the `swiftc` command line tool with the flag\n  `-whole-module-optimization`. **(18603795)**\n\n#### Swift Standard Library Enhancements and Changes\n\n* `flatMap` was added to the standard library. `flatMap` is the function that\n  maps a function over something and returns the result flattened one level.\n  `flatMap` has many uses, such as to flatten an array:\n\n  ```swift\n  [[1,2],[3,4]].flatMap { $0 }\n  ```\n\n  or to chain optionals with functions:\n\n  ```swift\n  [[1,2], [3,4]].first.flatMap { find($0, 1) }\n  ```\n\n  **(19881534)**\n\n* The function `zip` was added. It joins two sequences together into one\n  sequence of tuples. **(17292393)**\n\n* `utf16Count` is removed from `String`. Instead use count on the `UTF16` view\n  of the `String`.\n\n  For example:\n\n  ```swift\n  count(string.utf16)\n  ```\n\n  **(17627758)**\n\n## Swift 1.1\n\n### 2014-12-02 (Xcode 6.1.1)\n\n* Class methods and initializers that satisfy protocol requirements now properly\n  invoke subclass overrides when called in generic contexts. For example:\n\n    ```swift\n    protocol P {\n      class func foo()\n    }\n\n    class C: P {\n      class func foo() { println(\"C!\") }\n    }\n\n    class D: C {\n      override class func foo() { println(\"D!\") }\n    }\n\n    func foo<T: P>(x: T) {\n      x.dynamicType.foo()\n    }\n\n    foo(C()) // Prints \"C!\"\n    foo(D()) // Used to incorrectly print \"C!\", now prints \"D!\"\n    ```\n\n  **(18828217)**\n\n### 2014-10-09 (Xcode 6.1)\n\n* Values of type `Any` can now contain values of function type. **(16406907)**\n\n* Documentation for the standard library (displayed in quick help and in the\n  synthesized header for the Swift module) is improved. **(16462500)**\n\n* Class properties don't need to be marked final to avoid `O(n)` mutations on\n  value semantic types. **(17416120)**\n\n* Casts can now be performed between `CF` types (such as `CFString`, `CGImage`,\n  and `SecIdentity`) and AnyObject. Such casts will always succeed at run-time.\n  For example:\n\n  ```swift\n  var cfStr: CFString = ...\n  var obj: AnyObject = cfStr as AnyObject\n  var cfStr = obj as CFString\n  ```\n\n  **(18088474)**\n\n* `HeapBuffer<Value, Element>`, `HeapBufferStorage<Value, Element>`, and\n  `OnHeap<Value>` were never really useful, because their APIs were\n  insufficiently public.  They have been replaced with a single class,\n  `ManagedBuffer<Value, Element>`.  See also the new function\n  `isUniquelyReferenced(x)` which is often useful in conjunction with\n  `ManagedBuffer`.\n\n* The `Character` enum has been turned into a struct, to avoid\n  exposing its internal implementation details.\n\n* The `countElements` function has been renamed `count`, for better\n  consistency with our naming conventions.\n\n* Mixed-sign addition and subtraction operations, that were\n  unintentionally allowed in previous versions, now cause a\n  compilation error.\n\n* OS X apps can now apply the `@NSApplicationMain` attribute to their app delegate\n  class in order to generate an implicit `main` for the app. This works like\n  the `@UIApplicationMain` attribute for iOS apps.\n\n* Objective-C `init` and factory methods are now imported as failable\n  initializers when they can return `nil`. In the absence of information\n  about a potentially-`nil` result, an Objective-C `init` or factory\n  method will be imported as `init!`.\n\n  As part of this change, factory methods that have NSError**\n  parameters, such as `+[NSString\n  stringWithContentsOfFile:encoding:error:]`, will now be imported as\n  (failable) initializers, e.g.,\n\n    ```swift\n    init?(contentsOfFile path: String,\n          encoding: NSStringEncoding,\n          error: NSErrorPointer)\n    ```\n\n* Nested classes explicitly marked `@objc` will now properly be included in a\n  target's generated header as long as the containing context is also\n  (implicitly or explicitly) `@objc`. Nested classes not explicitly marked\n  `@objc` will never be printed in the generated header, even if they extend an\n  Objective-C class.\n\n* All of the `*LiteralConvertible` protocols, as well as\n  `StringInterpolationConvertible`, now use initializers for their\n  requirements rather than static methods starting with\n  `convertFrom`. For example, `IntegerLiteralConvertible` now has the\n  following initializer requirement:\n\n    ```swift\n    init(integerLiteral value: IntegerLiteralType)\n    ```\n  Any type that previously conformed to one of these protocols will\n  need to replace its `convertFromXXX` static methods with the\n  corresponding initializer.\n\n## Swift 1.0\n\n### 2014-09-15 (Xcode 6.0)\n\n* Initializers can now fail by returning `nil`. A failable initializer is\n  declared with `init?` (to return an explicit optional) or `init!` (to return\n  an implicitly-unwrapped optional). For example, you could implement\n  `String.toInt` as a failable initializer of `Int` like this:\n\n    ```swift\n    extension Int {\n      init?(fromString: String) {\n        if let i = fromString.toInt() {\n          // Initialize\n          self = i\n        } else {\n          // Discard self and return 'nil'.\n          return nil\n        }\n      }\n    }\n    ```\n\n  The result of constructing a value using a failable initializer then becomes\n  optional:\n\n    ```swift\n    if let twentytwo = Int(fromString: \"22\") {\n      println(\"the number is \\(twentytwo)\")\n    } else {\n      println(\"not a number\")\n    }\n    ```\n\n  In the current implementation, struct and enum initializers can return `nil`\n  at any point inside the initializer, but class initializers can only return\n  `nil` after all of the stored properties of the object have been initialized\n  and `self.init` or `super.init` has been called. If `self.init` or\n  `super.init` is used to delegate to a failable initializer, then the `nil`\n  return is implicitly propagated through the current initializer if the\n  called initializer fails.\n\n* The `RawRepresentable` protocol that enums with raw types implicitly conform\n  to has been redefined to take advantage of failable initializers. The\n  `fromRaw(RawValue)` static method has been replaced with an initializer\n  `init?(rawValue: RawValue)`, and the `toRaw()` method has been replaced with\n  a `rawValue` property. Enums with raw types can now be used like this:\n\n    ```swift\n    enum Foo: Int { case A = 0, B = 1, C = 2 }\n    let foo = Foo(rawValue: 2)! // formerly 'Foo.fromRaw(2)!'\n    println(foo.rawValue) // formerly 'foo.toRaw()'\n    ```\n\n### 2014-09-02\n\n* Characters can no longer be concatenated using `+`.  Use `String(c1) +\n  String(c2)` instead.\n\n### 2014-08-18\n\n* When force-casting between arrays of class or `@objc` protocol types\n  using `a as [C]`, type checking is now deferred until the moment\n  each element is accessed.  Because bridging conversions from NSArray\n  are equivalent to force-casts from `[NSArray]`, this makes certain\n  Array round-trips through Objective-C code `O(1)` instead of `O(N)`.\n\n### 2014-08-04\n\n* `RawOptionSetType` now implements `BitwiseOperationsType`, so imported\n  `NS_OPTIONS` now support the bitwise assignment operators `|=`, `&=`,\n  and `^=`. It also no longer implements `BooleanType`; to check if an option\n  set is empty, compare it to `nil`.\n\n* Types implementing `BitwiseOperationsType` now automatically support\n  the bitwise assignment operators `|=`, `&=`, and `^=`.\n\n* Optionals can now be coalesced with default values using the `??` operator.\n  `??` is a short-circuiting operator that takes an optional on the left and\n  a non-optional expression on the right. If the optional has a value, its\n  value is returned as a non-optional; otherwise, the expression on the right\n  is evaluated and returned:\n\n    ```swift\n    var sequence: [Int] = []\n    sequence.first ?? 0 // produces 0, because sequence.first is nil\n    sequence.append(22)\n    sequence.first ?? 0 // produces 22, the value of sequence.first\n    ```\n\n* The optional chaining `?` operator can now be mutated through, like `!`.\n  The assignment and the evaluation of the right-hand side of the operator\n  are conditional on the presence of the optional value:\n\n    ```swift\n    var sequences = [\"fibonacci\": [1, 1, 2, 3, 4], \"perfect\": [6, 28, 496]]\n    sequences[\"fibonacci\"]?[4]++ // Increments element 4 of key \"fibonacci\"\n    sequences[\"perfect\"]?.append(8128) // Appends to key \"perfect\"\n\n    sequences[\"cubes\"]?[3] = 3*3*3 // Does nothing; no \"cubes\" key\n    ```\n\n  Note that optional chaining still flows to the right, so prefix increment\n  operators are *not* included in the chain, so this won't type-check:\n\n    ```swift\n    ++sequences[\"fibonacci\"]?[4] // Won't type check, can't '++' Int?\n    ```\n\n### 2014-07-28\n\n* The swift command line interface is now divided into an interactive driver\n  `swift`, and a batch compiler `swiftc`:\n\n  ```\n  swift [options] input-file [program-arguments]\n    Runs the script 'input-file' immediately, passing any program-arguments\n    to the script. Without any input files, invokes the repl.\n\n  swiftc [options] input-filenames\n    The familiar swift compiler interface: compiles the input-files according\n    to the mode options like -emit-object, -emit-executable, etc.\n  ```\n\n* For greater clarity and explicitness when bypassing the type system,\n  `reinterpretCast` has been renamed `unsafeBitCast`, and it has acquired\n  a (required) explicit type parameter.  So\n\n    ```swift\n    let x: T = reinterpretCast(y)\n    ```\n\n  becomes\n\n    ```swift\n    let x = unsafeBitCast(y, T.self)\n    ```\n\n* Because their semantics were unclear, the methods `asUnsigned` (on\n  the signed integer types) and `asSigned` (on the unsigned integer\n  types) have been replaced.  The new idiom is explicit construction\n  of the target type using the `bitPattern:` argument label.  So,\n\n    ```swift\n    myInt.asUnsigned()\n    ```\n\n  has become\n\n    ```swift\n    UInt(bitPattern: myInt)\n    ```\n\n* To better follow Cocoa naming conventions and to encourage\n  immutability, The following pointer types were renamed:\n\n  | Old Name                        | New Name                               |\n  |---------------------------------|----------------------------------------|\n  | `UnsafePointer<T>`              | `UnsafeMutablePointer<T>`              |\n  | `ConstUnsafePointer<T>`         | `UnsafePointer<T>`                     |\n  | `AutoreleasingUnsafePointer<T>` | `AutoreleasingUnsafeMutablePointer<T>` |\n\n  Note that the meaning of `UnsafePointer` has changed from mutable to\n  immutable. As a result, some of your code may fail to compile when\n  assigning to an `UnsafePointer.memory` property.  The fix is to\n  change your `UnsafePointer<T>` into an `UnsafeMutablePointer<T>`.\n\n* The optional unwrapping operator `x!` can now be assigned through, and\n  mutating methods and operators can be applied through it:\n\n    ```swift\n    var x: Int! = 0\n    x! = 2\n    x!++\n\n    // Nested dictionaries can now be mutated directly:\n    var sequences = [\"fibonacci\": [1, 1, 2, 3, 0]]\n    sequences[\"fibonacci\"]![4] = 5\n    sequences[\"fibonacci\"]!.append(8)\n    ```\n\n* The `@auto_closure` attribute has been renamed to `@autoclosure`.\n\n* There is a new `dynamic` declaration modifier. When applied to a method,\n  property, subscript, or initializer, it guarantees that references to the\n  declaration are always dynamically dispatched and never inlined or\n  devirtualized, and that the method binding can be reliably changed at runtime.\n  The implementation currently relies on the Objective-C runtime, so `dynamic`\n  can only be applied to `@objc-compatible` declarations for now. `@objc` now\n  only makes a declaration visible to Objective-C; the compiler may now use\n  vtable lookup or direct access to access (non-dynamic) `@objc` declarations.\n\n    ```swift\n    class Foo {\n      // Always accessed by objc_msgSend\n      dynamic var x: Int\n\n      // Accessed by objc_msgSend from ObjC; may be accessed by vtable\n      // or by static reference in Swift\n      @objc var y: Int\n\n      // Not exposed to ObjC (unless Foo inherits NSObject)\n      var z: Int\n    }\n    ```\n\n  `dynamic` enables KVO, proxying, and other advanced Cocoa features to work\n  reliably with Swift declarations.\n\n* Clang submodules can now be imported:\n\n    ```swift\n    import UIKit.UIGestureRecognizerSubclass\n    ```\n\n* The numeric optimization levels `-O[0-3]` have been removed in favor of the\n  named levels `-Onone` and `-O`.\n\n* The `-Ofast` optimization flag has been renamed to `-Ounchecked`. We will accept\n  both names for now and remove `-Ofast` in a later build.\n\n* An initializer that overrides a designated initializer from its\n  superclass must be marked with the `override` keyword, so that all\n  overrides in the language consistently require the use of\n  `override`. For example:\n\n    ```swift\n    class A {\n      init() { }\n    }\n\n    class B : A {\n      override init() { super.init() }\n    }\n    ```\n\n* Required initializers are now more prominent in several ways. First,\n  a (non-final) class that conforms to a protocol that contains an\n  initializer requirement must provide a required initializer to\n  satisfy that requirement. This ensures that subclasses will also\n  conform to the protocol, and will be most visible with classes that\n  conform to `NSCoding`:\n\n    ```swift\n    class MyClass : NSObject, NSCoding {\n      required init(coder aDecoder: NSCoder!) { /*... */ }\n      func encodeWithCoder(aCoder: NSCoder!) { /* ... */ }\n    }\n    ```\n  Second, because `required` places a significant requirement on all\n  subclasses, the `required` keyword must be placed on overrides of a\n  required initializer:\n\n    ```swift\n    class MySubClass : MyClass {\n      var title: String = \"Untitled\"\n\n      required init(coder aDecoder: NSCoder!) { /*... */ }\n      override func encodeWithCoder(aCoder: NSCoder!) { /* ... */ }\n    }\n    ```\n  Finally, required initializers can now be inherited like any other\n  initializer:\n\n    ```swift\n    class MySimpleSubClass : MyClass { } // inherits the required init(coder:).\n    ```\n\n### 2014-07-21\n\n* Access control has been implemented.\n\n  - `public` declarations can be accessed from any module.\n  - `internal` declarations (the default) can be accessed from within the\n    current module.\n  - `private` declarations can be accessed only from within the current file.\n\n  There are still details to iron out here, but the model is in place.\n  The general principle is that an entity cannot be defined in terms of another\n  entity with less accessibility.\n\n  Along with this, the generated header for a framework will only include\n  public declarations. Generated headers for applications will include public\n  and internal declarations.\n\n* `CGFloat` is now a distinct floating-point type that wraps either a\n  `Float` (on 32-bit architectures) or a `Double` (on 64-bit\n  architectures). It provides all of the same comparison and\n  arithmetic operations of Float and Double, and can be created using\n  numeric literals.\n\n* The immediate mode `swift -i` now works for writing `#!` scripts that take\n  command line arguments. The `-i` option to the swift driver must now come at\n  the end of the compiler arguments, directly before the input filename. Any\n  arguments that come after `-i` and the input filename are treated as arguments\n  to the interpreted file and forwarded to `Process.arguments`.\n\n* Type inference for `for..in` loops has been improved to consider the\n  sequence along with the element pattern. For example, this accepts\n  the following loops that were previously rejected:\n\n    ```swift\n    for i: Int8 in 0..<10 { }\n    for i: Float in 0.0...10.0 { }\n    ```\n\n* Introduced the new `BooleanLiteralConvertible` protocol, which allows\n  user-defined types to support Boolean literals. `true` and `false`\n  are now `Boolean` constants and keywords.\n\n* The `@final`, `@lazy`, `@required` and `@optional` attributes are now\n  considered to be declaration modifiers - they no longer require (or allow) an\n  `@` sign.\n\n* The `@prefix`, `@infix`, and `@postfix` attributes have been changed to\n  declaration modifiers, so they are no longer spelled with an `@` sign.\n  Operator declarations have been rearranged from `operator prefix +` to\n  `prefix operator +` for consistency.\n\n### 2014-07-03\n\n* C function pointer types are now imported as `CFunctionPointer<T>`, where `T`\n  is a Swift function type. `CFunctionPointer` and `COpaquePointer` can be\n  explicitly constructed from one another, but they do not freely convert, nor\n  is `CFunctionPointer` compatible with Swift closures.\n\n  Example: `int (*)(void)` becomes `CFunctionPointer<(Int) -> Void>`.\n\n* The interop model for pointers in C APIs has been simplified. Most code that\n  calls C functions by passing arrays, UnsafePointers, or the addresses of\n  variables with `&x` does not need to change. However, the `CConstPointer` and\n  `CMutablePointer` bridging types have been removed, and functions and methods\n  are now imported as and overridden by taking UnsafePointer and\n  `ConstUnsafePointer` directly. `Void` pointers are now imported as\n  `(Const)UnsafePointer<Void>`; `COpaquePointer` is only imported for opaque\n  types now.\n\n* `Array` types are now spelled with the brackets surrounding the\n  element type. For example, an array of `Int` is written as:\n\n    ```swift\n    var array: [Int]\n    ```\n\n* `Dictionary` types can now be spelled with the syntax `[K : V]`, where `K`\n  is the key type and `V` is the value type. For example:\n\n    ```swift\n    var dict: [String : Int] = [\"Hello\" : 1, \"World\" : 2]\n    ```\n\n  The type `[K : V]` is syntactic sugar for `Dictionary<K, V>`; nothing\n  else has changed.\n\n* The `@IBOutlet` attribute no longer implicitly (and invisibly) changes the type\n  of the declaration it is attached to.  It no longer implicitly makes variables\n  be an implicitly unwrapped optional and no longer defaults them to weak.\n\n* The `\\x`, `\\u` and `\\U` escape sequences in string literals have been\n  consolidated into a single and less error prone `\\u{123456}` syntax.\n\n### 2014-06-23\n\n* The half-open range operator has been renamed from `..` to `..<` to reduce\n  confusion.  The `..<` operator is precedented in Groovy (among other languages)\n  and makes it much more clear that it doesn't include the endpoint.\n\n* Class objects such as `NSObject.self` can now be converted to `AnyObject` and\n  used as object values.\n\n* Objective-C protocol objects such as `NSCopying.self` can now be used as\n  instances of the `Protocol` class, such as in APIs such as XPC.\n\n* Arrays now have full value semantics: both assignment and\n  initialization create a logically-distinct object\n\n* The `sort` function and array method modify the target in-place.  A\n  new `sorted` function and array method are non-mutating, creating\n  and returning a new collection.\n\n### 2014-05-19\n\n* `sort`, `map`, `filter`, and `reduce` methods on `Array`s accept trailing\n  closures:\n\n    ```swift\n    let a = [5, 6, 1, 3, 9]\n    a.sort{ $0 > $1 }\n    println(a)                                 // [9, 6, 5, 3, 1]\n    println(a.map{ $0 * 2 })                   // [18, 12, 10, 6, 2]\n    println(a.map{ $0 * 2 }.filter{ $0 < 10})  // [6, 2]\n    println(a.reduce(1000){ $0 + $1 })         // 1024 (no kidding)\n    ```\n\n* A lazy `map()` function in the standard library works on any `Sequence`.\n  Example:\n\n    ```swift\n    class X {\n      var value: Int\n\n      init(_ value: Int) {\n        self.value = value\n        println(\"created X(\\(value))\")\n      }\n    }\n\n    // logically, this sequence is X(0), X(1), X(2), ... X(50)\n    let lazyXs = map(0..50){ X($0) }\n\n    // Prints \"created X(...)\" 4 times\n    for x in lazyXs {\n      if x.value == 4 {\n        break\n      }\n    }\n    ```\n\n* There's a similar lazy `filter()` function:\n\n    ```swift\n    // 0, 10, 20, 30, 40\n    let tens = filter(0..50) { $0 % 10 == 0 }\n    let tenX = map(tens){ X($0) }    // 5 lazy Xs\n    let tenXarray = Array(tenX)      // Actually creates those Xs\n    ```\n\n* Weak pointers of classbound protocol type work now.\n\n* `IBOutlets` now default to weak pointers with implicit optional type (`T!`).\n\n* `NSArray*` parameters and result types of Objective-C APIs are now\n  imported as `AnyObject[]!`, i.e., an implicitly unwrapped optional\n  array storing `AnyObject` values. For example, `NSView`'s constraints\n  property\n\n    ```objc\n    @property (readonly) NSArray *constraints;\n    ```\n\n  is now imported as\n\n    ```swift\n    var constraints: AnyObject[]!\n    ```\n\n  Note that one can implicitly convert between an `AnyObject[]` and an\n  `NSArray` (in both directions), so (for example) one can still\n  explicitly use `NSArray` if desired:\n\n    ```swift\n    var array: NSArray = view.constraints\n    ```\n\n  Swift arrays bridge to `NSArray` similarly to the way Swift\n  strings bridge to `NSString`.\n\n* `ObjCMutablePointer` has been renamed `AutoreleasingUnsafePointer`.\n\n* `UnsafePointer` (and `AutoreleasingUnsafePointer`)'s `set()` and `get()`\n  have been replaced with a property called `memory`.\n\n  - Previously you would write:\n\n    ```swift\n    val = p.get()\n    p.set(val)\n    ```\n\n  - Now you write:\n\n    ```swift\n    val = p.memory\n    p.memory = val\n    ```\n\n* Removed shorthand `x as T!`; instead use `(x as T)!`\n\n  - `x as T!` now means \"x as implicitly unwrapped optional\".\n\n* Range operators `..` and `...` have been switched.\n\n  - `1..3` now means 1,2\n  - `1...3` now means 1,2,3\n\n* The pound sign (`#`) is now used instead of the back-tick (\\`) to mark\n  an argument name as a keyword argument, e.g.,\n\n    ```swift\n    func moveTo(#x: Int, #y: Int) { ... }\n    moveTo(x: 5, y: 7)\n    ```\n\n* Objective-C factory methods are now imported as initializers. For\n  example, `NSColor`'s `+colorWithRed:green:blue:alpha` becomes\n\n    ```swift\n    init(red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat)\n    ```\n\n  which allows an `NSColor` to be created as, e.g.,\n\n    ```swift\n    NSColor(red: 0.5, green: 0.25, blue: 0.25, alpha: 0.5)\n    ```\n\n  Factory methods are identified by their kind (class methods), name\n  (starts with words that match the words that end the class name),\n  and result type (`instancetype` or the class type).\n\n* Objective-C properties of some `CF` type are no longer imported as `Unmanaged`.\n\n* REPL mode now uses LLDB, for a greatly-expanded set of features. The colon\n  prefix now treats the rest of the line as a command for LLDB, and entering\n  a single colon will drop you into the debugging command prompt. Most\n  importantly, crashes in the REPL will now drop you into debugging mode to\n  see what went wrong.\n\n  If you do have a need for the previous REPL, pass `-integrated-repl`.\n\n* In a UIKit-based application, you can now eliminate your 'main.swift' file\n  and instead apply the `@UIApplicationMain` attribute to your\n  `UIApplicationDelegate` class. This will cause the `main` entry point to the\n  application to be automatically generated as follows:\n\n    ```swift\n    UIApplicationMain(argc, argv, nil,\n                      NSStringFromClass(YourApplicationDelegate.self))\n    ```\n\n  If you need nontrivial logic in your application entry point, you can still\n  write out a `main.swift`. Note that `@UIApplicationMain` and `main.swift` are\n  mutually exclusive.\n\n### 2014-05-13\n\n* weak pointers now work with implicitly unchecked optionals, enabling usecases\n  where you don't want to `!` every use of a weak pointer.  For example:\n\n     ```swift\n     weak var myView : NSView!\n     ```\n\n  of course, they still work with explicitly checked optionals like `NSView?`\n\n* Dictionary subscripting now takes/returns an optional type.  This allows\n  querying a dictionary via subscripting to gracefully fail.  It also enables\n  the idiom of removing values from a dictionary using `dict[key] = nil`.\n  As part of this, `deleteKey` is no longer available.\n\n* Stored properties may now be marked with the `@lazy` attribute, which causes\n  their initializer to be evaluated the first time the property is touched\n  instead of when the enclosing type is initialized.  For example:\n\n    ```swift\n    func myInitializer() -> Int { println(\"hello\\n\"); return 42 }\n    class MyClass {\n      @lazy var aProperty = myInitializer()\n    }\n\n    var c = MyClass()     // doesn't print hello\n    var tmp = c.aProperty // prints hello on first access\n    tmp = c.aProperty     // doesn't print on subsequent loads.\n\n    c = MyClass()         // doesn't print hello\n    c.aProperty = 57      // overwriting the value prevents it from ever running\n    ```\n\n  Because lazy properties inherently rely on mutation of the property, they\n  cannot be `let`s.  They are currently also limited to being members of structs\n  and classes (they aren't allowed as local or global variables yet) and cannot\n  be observed with `willSet`/`didSet` yet.\n\n* Closures can now specify a capture list to indicate with what strength they\n  want to capture a value, and to bind a particular field value if they want to.\n\n  Closure capture lists are square-bracket delimited and specified before the\n  (optional) argument list in a closure.  Each entry may be specified as `weak`\n  or `unowned` to capture the value with a weak or unowned pointer, and may\n  contain an explicit expression if desired.  Some examples:\n\n    ```swift\n    takeClosure { print(self.title) }                    // strong capture\n    takeClosure { [weak self] in print(self!.title) }    // weak capture\n    takeClosure { [unowned self] in print(self.title) }  // unowned capture\n    ```\n\n  You can also bind arbitrary expression to named values in the capture list.\n  The expression is evaluated when the closure is formed, and captured with the\n  specified strength.  For example:\n\n    ```swift\n    // weak capture of \"self.parent\"\n    takeClosure { [weak tmp = self.parent] in print(tmp!.title) }\n    ```\n\n  The full form of a closure can take a signature (an argument list and\n  optionally a return type) if needed.  To use either the capture list or the\n  signature, you must specify the context sensitive `in` keyword.  Here is a\n  (weird because there is no need for `unowned`) example of a closure with both:\n\n    ```swift\n    myNSSet.enumerateObjectsUsingBlock { [unowned self] (obj, stop) in\n      self.considerWorkingWith(obj)\n    }\n    ```\n\n* The word `with` is now removed from the first keyword argument name\n  if an initialized imported from Objective-C. For example, instead of\n  building `UIColor` as:\n\n    ```swift\n    UIColor(withRed: r, green: g, blue: b, alpha: a)\n    ```\n\n  it will now be:\n\n    ```swift\n    UIColor(red: r, green: g, blue: b, alpha: a)\n    ```\n\n* `Dictionary` can be bridged to `NSDictionary` and vice versa:\n\n  - `NSDictionary` has an implicit conversion to `Dictionary<NSObject,\n    AnyObject>`.  It bridges in O(1), without memory allocation.\n\n  - `Dictionary<K, V>` has an implicit conversion to `NSDictionary`.\n    `Dictionary<K, V>` bridges to `NSDictionary` iff both `K` and `V` are\n    bridged.  Otherwise, a runtime error is raised.\n\n    Depending on `K` and `V` the operation can be `O(1)` without memory\n    allocation, or `O(N)` with memory allocation.\n\n* Single-quoted literals are no longer recognized.  Use double-quoted literals\n  and an explicit type annotation to define `Characters` and `UnicodeScalars`:\n\n    ```swift\n    var ch: Character = \"a\"\n    var us: UnicodeScalar = \"a\"\n    ```\n\n### 2014-05-09\n\n* The use of keyword arguments is now strictly enforced at the call\n  site. For example, consider this method along with a call to it:\n\n    ```swift\n    class MyColor {\n      func mixColorWithRed(red: Float, green: Float, blue: Float) { /* ... */ }\n    }\n\n    func mix(color: MyColor, r: Float, g: Float, b: Float) {\n      color.mixColorWithRed(r, g, b)\n    }\n    ```\n\n  The compiler will now complain about the missing `green:` and\n  `blue:` labels, with a Fix-It to correct the code:\n\n    ```\n    color.swift:6:24: error: missing argument labels 'green:blue:' in call\n      color.mixColorWithRed(r, g, b)\n                           ^\n                               green:  blue:\n    ```\n\n  The compiler handles missing, extraneous, and incorrectly-typed\n  argument labels in the same manner. Recall that one can make a\n  parameter a keyword argument with the back-tick or remove a keyword\n  argument with the underscore.\n\n    ```swift\n    class MyColor {\n      func mixColor(`red: Float, green: Float, blue: Float) { /* ... */ }\n      func mixColorGuess(red: Float, _ green: Float, _ blue: Float) { /* ... */ }\n    }\n\n    func mix(color: MyColor, r: Float, g: Float, b: Float) {\n      color.mixColor(red: r, green: g, blue: b) // okay: all keyword arguments\n      color.mixColorGuess(r, g, b) // okay: no keyword arguments\n    }\n    ```\n\n  Arguments cannot be re-ordered unless the corresponding parameters\n  have default arguments. For example, given:\n\n    ```swift\n    func printNumber(`number: Int, radix: Int = 10, separator: String = \",\") { }\n    ```\n\n  The following three calls are acceptable because only the arguments for\n  defaulted parameters are re-ordered relative to each other:\n\n    ```swift\n    printNumber(number: 256, radix: 16, separator: \"_\")\n    printNumber(number: 256, separator: \"_\")\n    printNumber(number: 256, separator: \",\", radix: 16)\n    ```\n\n  However, this call:\n\n    ```swift\n    printNumber(separator: \",\", radix: 16, number: 256)\n    ```\n\n  results in an error due to the re-ordering:\n\n    ```\n    printnum.swift:7:40: error: argument 'number' must precede argument 'separator'\n    printNumber(separator: \",\", radix: 16, number: 256)\n                ~~~~~~~~~~~~~~             ^       ~~~\n    ```\n\n* `;` can no longer be used to demarcate an empty case in a switch statement,\n  use `break` instead.\n\n### 2014-05-07\n\n* The compiler's ability to diagnose many common kinds of type check errors has\n  improved. (`expression does not type-check` has been retired.)\n\n* Ranges can be formed with floating point numbers, e.g. `0.0 .. 100.0`.\n\n* Convenience initializers are now spelled as `convenience init` instead of with\n  the `-> Self` syntax.  For example:\n\n    ```swift\n    class Foo {\n      init(x : Int) {}  // designated initializer\n\n      convenience init() { self.init(42) } // convenience initializer\n    }\n    ```\n\n  You still cannot declare designated initializers in extensions, only\n  convenience initializers are allowed.\n\n* Reference types using the CoreFoundation runtime are now imported as\n  class types.  This means that Swift will automatically manage the\n  lifetime of a `CFStringRef` the same way that it manages the lifetime\n  of an `NSString`.\n\n  In many common cases, this will just work.  Unfortunately, values\n  are returned from `CF`-style APIs in a wide variety of ways, and\n  unlike Objective-C methods, there simply isn't enough consistency\n  for Swift to be able to safely apply the documented conventions\n  universally.  The framework teams have already audited many of the\n  most important `CF`-style APIs, and those APIs should be imported\n  without a hitch into Swift.  For all the APIs which haven't yet\n  been audited, we must import return types using the `Unmanaged` type.\n  This type allows the programmer to control exactly how the object\n  is passed.\n\n  For example:\n\n    ```swift\n    // CFBundleGetAllBundles() returns an Unmanaged<CFArrayRef>.\n    // From the documentation, we know that it returns a +0 value.\n    let bundles = CFBundleGetAllBundles().takeUnretainedValue()\n\n    // CFRunLoopCopyAllModes() returns an Unmanaged<CFArrayRef>.\n    // From the documentation, we know that it returns a +1 value.\n    let modes = CFRunLoopCopyAllModes(CFRunLoopGetMain()).takeRetainedValue()\n    ```\n\n  You can also use `Unmanaged` types to pass and return objects\n  indirectly, as well as to generate unbalanced retains and releases\n  if you really require them.\n\n  The API of the Unmanaged type is still in flux, and your feedback\n  would be greatly appreciated.\n\n### 2014-05-03\n\n* The `@NSManaged` attribute can be applied to the properties of an\n  `NSManagedObject` subclass to indicate that they should be handled by\n  CoreData:\n\n    ```swift\n    class Employee : NSManagedObject {\n      @NSManaged var name: String\n      @NSManaged var department: Department\n    }\n    ```\n\n* The `@weak` and `@unowned` attributes have become context sensitive keywords\n  instead of attributes.  To declare a `weak` or `unowned` pointer, use:\n\n    ```swift\n    weak var someOtherWindow : NSWindow?\n    unowned var someWindow : NSWindow\n    ```\n  ... with no `@` on the `weak`/`unowned`.\n\n### 2014-04-30\n\n* Swift now supports a `#elseif` form for build configurations, e.g.:\n\n    ```swift\n    #if os(OSX)\n      typealias SKColor = NSColor\n    #elseif os(iOS)\n      typealias SKColor = UIColor\n    #else\n      typealias SKColor = Green\n    #endif\n    ```\n\n* You can now use the `true` and `false` constants in build configurations,\n  allowing you to emulate the C idioms of `#if 0` (but spelled `#if false`).\n\n* `break` now breaks out of switch statements.\n\n* It is no longer possible to specify `@mutating` as an attribute, you may only\n  use it as a keyword, e.g.:\n\n    ```swift\n    struct Pair {\n      var x, y : Int\n      mutating func nuke() { x = 0; y = 0 }\n    }\n    ```\n  The former `@!mutating` syntax used to mark setters as non-mutating is now\n  spelled with the `nonmutating` keyword.  Both mutating and nonmutating are\n  context sensitive keywords.\n\n* `NSLog` is now available from Swift code.\n\n* The parser now correctly handles expressions like `var x = Int[]()` to\n  create an empty array of integers.  Previously you'd have to use syntax like\n  `Array<Int>()` to get this.  Now that this is all working, please prefer to\n  use `Int[]` consistently instead of `Array<Int>`.\n\n* `Character` is the new character literal type:\n\n    ```swift\n    var x = 'a' // Infers 'Character' type\n    ```\n\n  You can force inference of `UnicodeScalar` like this:\n\n    ```swift\n    var scalar: UnicodeScalar = 'a'\n    ```\n\n  `Character` type represents a Unicode extended grapheme cluster (to put it\n  simply, a grapheme cluster is what users think of as a character: a base plus\n  any combining marks, or other cases explained in\n  [Unicode Standard Annex #29](http://unicode.org/reports/tr29/)).\n\n### 2014-04-22\n\n* Loops and switch statements can now carry labels, and you can\n  `break`/`continue` to those labels.  These use conventional C-style label\n  syntax, and should be dedented relative to the code they are in.  An example:\n\n    ```swift\n    func breakContinue(x : Int) -> Int {\n    Outer:\n      for a in 0..1000 {\n\n      Switch:\n        switch x {\n        case 42: break Outer\n        case 97: continue Outer\n        case 102: break Switch\n        case 13: continue // continue always works on loops.\n        case 139: break   // break will break out of the switch (but see below)\n        }\n      }\n    }\n    ```\n\n* We are changing the behavior of `break` to provide C-style semantics, to allow\n  breaking out of a switch statement.  Previously, break completely ignored\n  switches so that it would break out of the nearest loop. In the example above,\n  `case 139` would break out of the `Outer` loop, not the `Switch`.\n\n  In order to avoid breaking existing code, we're making this a compile time\n  error instead of a silent behavior change.  If you need a solution for the\n  previous behavior, use labeled break.\n\n  This error will be removed in a week or two.\n\n* Cocoa methods and properties that are annotated with the\n  `NS_RETURNS_INNER_POINTER` attribute, including `-[NSData bytes]` and\n  `-[{NS,UI}Color CGColor]`, are now safe to use and follow the same lifetime\n  extension semantics as ARC.\n\n### 2014-04-18\n\n* Enabling/disabling of asserts\n\n    ```swift\n    assert(condition, msg)\n    ```\n\n  is enabled/disabled dependent on the optimization level. In debug mode at\n  `-O0` asserts are enabled. At higher optimization levels asserts are disabled\n  and no code is generated for them. However, asserts are always type checked\n  even at higher optimization levels.\n\n  Alternatively, assertions can be disabled/enabled by using the frontend flag\n  `-assert-config Debug`, or `-assert-config Release`.\n\n* Added optimization flag `-Ofast`. It disables all assertions (`assert`), and\n  runtime overflow and type checks.\n\n* The \"selector-style\" function and initializer declaration syntax is\n  being phased out. For example, this:\n\n    ```\n    init withRed(red: CGFloat) green(CGFloat) blue(CGFloat) alpha(CGFloat)\n    ```\n\n  will now be written as:\n\n    ```swift\n    init(withRed red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat)\n    ```\n\n  For each parameter, one can have both an argument API name (i.e.,\n  `withRed`, which comes first and is used at the call site) and an\n  internal parameter name that follows it (i.e. `red`, which comes\n  second and is used in the implementation). When the two names are\n  the same, one can simply write the name once and it will be used for\n  both roles (as with `green`, `blue`, and `alpha` above). The\n  underscore (`_`) can be used to mean \"no name\", as when the\n  following function/method:\n\n    ```\n    func murderInRoom(room:String) withWeapon(weapon: String)\n    ```\n\n  is translated to:\n\n    ```swift\n    func murderInRoom(_ room: String, withWeapon weapon: String)\n    ```\n\n  The compiler now complains when it sees the selector-style syntax\n  and will provide Fix-Its to rewrite to the newer syntax.\n\n  Note that the final form of selector syntax is still being hammered\n  out, but only having one declaration syntax, which will be very\n  close to this, is a known.\n\n* Stored properties can now be marked with the `@NSCopying` attribute, which\n  causes their setter to be synthesized with a copy to `copyWithZone:`.  This may\n  only be used with types that conform to the `NSCopying` protocol, or option\n  types thereof.  For example:\n\n    ```swift\n    @NSCopying var myURL : NSURL\n    ```\n\n  This fills the same niche as the (`copy`) attribute on Objective-C properties.\n\n### 2014-04-16\n\n* Optional variables and properties are now default-initialized to `nil`:\n\n    ```swift\n    class MyClass {\n      var cachedTitle: String?       // \"= nil\" is implied\n    }\n    ```\n\n* `@IBOutlet` has been improved in a few ways:\n\n  - `IBOutlets` can now be `@unchecked` optional.\n\n  - An `IBOutlet` declared as non-optional, i.e.,\n\n    ```swift\n    @IBOutlet var button: NSButton\n    ```\n\n    will be treated as an `@unchecked` optional.  This is considered to\n    be the best practice way to write an outlet, unless you want to explicitly\n    handle the null case - in which case, use `NSButton?` as the type. Either\n    way, the `= nil` that was formerly required is now implicit.\n\n* The precedence of `is` and `as` is now higher than comparisons, allowing the\n  following sorts of things to be written without parens:\n\n    ```swift\n    if x is NSButton && y is NSButtonCell { ... }\n\n    if 3/4 as Float == 6/8 as Float { ... }\n    ```\n\n* Objective-C blocks are now transparently bridged to Swift closures. You never\n  have to write `@objc_block` when writing Objective-C-compatible methods anymore.\n  Block parameters are now imported as unchecked optional closure types,\n  allowing `nil` to be passed.\n\n### 2014-04-09\n\n* `Dictionary` changes:\n\n  - `Elements` are now tuples, so you can write\n\n    ```swift\n    for (k, v) in d {\n      // ...\n    }\n    ```\n\n  - `keys` and `values` properties, which are `Collections` projecting\n    the corresponding aspect of each element.  `Dictionary` indices are\n    usable with their `keys` and `values` properties, so:\n\n    ```swift\n    for i in indices(d) {\n      let (k, v) = d[i]\n      assert(k == d.keys[i])\n      assert(v == d.values[i])\n    }\n    ```\n\n* Semicolon can be used as a single no-op statement in otherwise empty cases in\n  `switch` statements:\n\n    ```swift\n    switch x {\n    case 1, 2, 3:\n      print(\"x is 1, 2 or 3\")\n    default:\n      ;\n    }\n    ```\n\n* `override` is now a context sensitive keyword, instead of an attribute:\n\n    ```swift\n    class Base {\n      var property: Int { return 0 }\n      func instanceFunc() {}\n      class func classFunc() {}\n    }\n    class Derived : Base {\n      override var property: Int { return 1 }\n      override func instanceFunc() {}\n      override class func classFunc() {}\n    }\n    ```\n\n### 2014-04-02\n\n* Prefix splitting for imported enums has been revised again due to feedback:\n  - If stripping off a prefix would leave an invalid identifier (like `10_4`),\n    leave one more word in the result than would otherwise be there\n    (`Behavior10_4`).\n  - If all enumerators have a `k` prefix (for `constant`) and the enum doesn't,\n    the `k` should not be considered when finding the common prefix.\n  - If the enum name is a plural (like `NSSomethingOptions`) and the enumerator\n    names use the singular form (`NSSomethingOptionMagic`), this is considered\n    a matching prefix (but only if nothing follows the plural).\n\n* Cocoa APIs that take pointers to plain C types as arguments now get imported\n  as taking the new `CMutablePointer<T>` and `CConstPointer<T>` types instead\n  of `UnsafePointer<T>`. These new types allow implicit conversions from\n  Swift `inout` parameters and from Swift arrays:\n\n    ```swift\n    let rgb = CGColorSpaceCreateDeviceRGB()\n    // CGColorRef CGColorCreate(CGColorSpaceRef, const CGFloat*);\n    let white = CGColorCreate(rgb, [1.0, 1.0, 1.0])\n\n    var s = 0.0, c = 0.0\n    // void sincos(double, double*, double*);\n    sincos(M_PI/2, &s, &c)\n    ```\n\n  Pointers to pointers to ObjC classes, such as `NSError**`, get imported as\n  `ObjCMutablePointer<NSError?>`. This type doesn't work with arrays, but\n  accepts inouts or `nil`:\n\n    ```swift\n    var error: NSError?\n    let words = NSString.stringWithContentsOfFile(\"/usr/share/dict/words\",\n      encoding: .UTF8StringEncoding,\n      error: &error)\n    ```\n\n  `Void` pointer parameters can be passed an array or inout of any type:\n\n    ```swift\n    // + (NSData*)dataWithBytes:(const void*)bytes length:(NSUInteger)length;\n    let data = NSData.dataWithBytes([1.5, 2.25, 3.125],\n                                    length: sizeof(Double.self) * 3)\n    var fromData = [0.0, 0.0, 0.0]\n    // - (void)getBytes:(void*)bytes length:(NSUInteger)length;\n    data.getBytes(&fromData, length: sizeof(Double.self) * 3)\n    ```\n\n  Note that we don't know whether an API reads or writes the C pointer, so\n  you need to explicitly initialize values (like `s` and `c` above) even if\n  you know that the API overwrites them.\n\n  This pointer bridging only applies to arguments, and only works with well-\n  behaved C and ObjC APIs that don't keep the pointers they receive as\n  arguments around or do other dirty pointer tricks. Nonstandard use of pointer\n  arguments still requires `UnsafePointer`.\n\n* Objective-C pointer types now get imported by default as the `@unchecked T?`\n  optional type.  Swift class types no longer implicitly include `nil`.\n\n  A value of `@unchecked T?` can be implicitly used as a value of `T`.\n  Swift will implicitly cause a reliable failure if the value is `nil`,\n  rather than introducing undefined behavior (as in Objective-C ivar\n  accesses or everything in C/C++) or silently ignoring the operation\n  (as in Objective-C message sends).\n\n  A value of `@unchecked T?` can also be implicitly used as a value of `T?`,\n  allowing you explicitly handle the case of a `nil` value.  For example,\n  if you would like to just silently ignore a message send a la Objective-C,\n  you can use the postfix `?` operator like so:\n\n    ```swift\n    fieldsForKeys[kHeroFieldKey]?.setEditable(true)\n    ```\n\n  This design allows you to isolate and handle `nil` values in Swift code\n  without requiring excessive \"bookkeeping\" boilerplate to use values that\n  you expect to be non-`nil`.\n\n  For now, we will continue to import C pointers as non-optional\n  `UnsafePointer` and `C*Pointer` types; that will be evaluated separately.\n\n  We intend to provide attributes for Clang to allow APIs to opt in to\n  importing specific parameters, return types, etc. as either the\n  explicit optional type `T?` or the simple non-optional type `T`.\n\n* The \"separated\" call syntax, i.e.,\n\n    ```\n    NSColor.colorWithRed(r) green(g) blue(b) alpha(a)\n    UIColor.init withRed(r) green(g) blue(b) alpha(a)\n    ```\n\n  is being removed. The compiler will now produce an error and provide\n  Fix-Its to rewrite calls to the \"keyword-argument\" syntax:\n\n    ```swift\n    NSColor.colorWithRed(r, green: g, blue: b, alpha: a)\n    UIColor(withRed: r, green:g, blue:b, alpha: a)\n    ```\n\n* The `objc` attribute now optionally accepts a name, which can be\n  used to provide the name for an entity as seen in Objective-C. For\n  example:\n\n    ```swift\n    class MyType {\n      var enabled: Bool {\n        @objc(isEnabled) get {\n          // ...\n        }\n      }\n    }\n    ```\n\n  The `@objc` attribute can be used to name initializers, methods,\n  getters, setters, classes, and protocols.\n\n* Methods, properties and subscripts in classes can now be marked with the\n  `@final` attribute.  This attribute prevents overriding the declaration in any\n  subclass, and provides better performance (since dynamic dispatch is avoided\n  in many cases).\n\n### 2014-03-26\n\n* Attributes on declarations are no longer comma separated.\n\n  Old syntax:\n\n    ```\n    @_silgen_name(\"foo\"), @objc func bar() {}\n    ```\n\n  New syntax:\n\n    ```swift\n    @_silgen_name(\"foo\") @objc\n    ```\n\n  The `,` was vestigial when the attribute syntax consisted of bracket lists.\n\n* `switch` now always requires a statement after a `case` or `default`.\n\n  Old syntax:\n\n    ```swift\n    switch x {\n    case .A:\n    case .B(1):\n      println(\".A or .B(1)\")\n    default:\n      // Ignore it.\n    }\n    ```\n\n  New syntax:\n\n    ```swift\n    switch x {\n    case .A, .B(1):\n      println(\".A or .B(1)\")\n    default:\n      () // Ignore it.\n    }\n    ```\n\n  The following syntax can be used to introduce guard expressions for patterns\n  inside the `case`:\n\n    ```swift\n    switch x {\n    case .A where isFoo(),\n         .B(1) where isBar():\n      ...\n    }\n    ```\n\n* Observing properties can now `@override` properties in a base class, so you\n  can observe changes that happen to them.\n\n     ```swift\n     class MyAwesomeView : SomeBasicView {\n      @override\n      var enabled : Bool {\n        didSet {\n          println(\"Something changed\")\n        }\n      }\n      ...\n    }\n    ```\n\n  Observing properties still invoke the base class getter/setter (or storage)\n  when accessed.\n\n* An `as` cast can now be forced using the postfix `!` operator without using\n  parens:\n\n    ```swift\n    class B {}\n    class D {}\n\n    let b: B = D()\n\n    // Before\n    let d1: D = (b as D)!\n    // After\n    let d2: D = b as D!\n    ```\n\n  Casts can also be chained without parens:\n\n    ```swift\n    // Before\n    let b2: B = (((D() as B) as D)!) as B\n    // After\n    let b3: B = D() as B as D! as B\n    ```\n\n* `as` can now be used in `switch` cases to match the result of a checked cast:\n\n    ```swift\n    func printHand(hand: Any) {\n      switch hand {\n      case 1 as Int:\n        print(\"ace\")\n      case 11 as Int:\n        print(\"jack\")\n      case 12 as Int:\n        print(\"queen\")\n      case 13 as Int:\n        print(\"king\")\n      case let numberCard as Int:\n        print(\"\\(numberCard)\")\n      case let (a, b) as (Int, Int) where a == b:\n        print(\"two \")\n        printHand(a)\n        print(\"s\")\n      case let (a, b) as (Int, Int):\n        printHand(a)\n        print(\" and a \")\n        printHand(b)\n      case let (a, b, c) as (Int, Int, Int) where a == b && b == c:\n        print(\"three \")\n        printHand(a)\n        print(\"s\")\n      case let (a, b, c) as (Int, Int, Int):\n        printHand(a)\n        print(\", \")\n        printHand(b)\n        print(\", and a \")\n        printHand(c)\n      default:\n        print(\"unknown hand\")\n      }\n    }\n    printHand(1, 1, 1) // prints \"three aces\"\n    printHand(12, 13) // prints \"queen and a king\"\n    ```\n\n* Enums and option sets imported from C/Objective-C still strip common\n  prefixes, but the name of the enum itself is now taken into consideration as\n  well. This keeps us from dropping important parts of a name that happen to be\n  shared by all members.\n\n    ```objc\n    // NSFileManager.h\n    typedef NS_OPTIONS(NSUInteger, NSDirectoryEnumerationOptions) {\n        NSDirectoryEnumerationSkipsSubdirectoryDescendants = 1UL << 0,\n        NSDirectoryEnumerationSkipsPackageDescendants      = 1UL << 1,\n        NSDirectoryEnumerationSkipsHiddenFiles             = 1UL << 2\n    } NS_ENUM_AVAILABLE(10_6, 4_0);\n    ```\n\n    ```swift\n    // Swift\n    let opts: NSDirectoryEnumerationOptions = .SkipsPackageDescendants\n    ```\n\n* `init` methods in Objective-C protocols are now imported as\n  initializers. To conform to `NSCoding`, you will now need to provide\n\n    ```swift\n    init withCoder(aDecoder: NSCoder) { ... }\n    ```\n\n  rather than\n\n    ```swift\n    func initWithCoder(aDecoder: NSCoder) { ... }\n    ```\n\n### 2014-03-19\n\n* When a class provides no initializers of its own but has default\n  values for all of its stored properties, it will automatically\n  inherit all of the initializers of its superclass. For example:\n\n    ```swift\n    class Document {\n      var title: String\n\n      init() -> Self {\n        self.init(withTitle: \"Default title\")\n      }\n\n      init withTitle(title: String) {\n        self.title = title\n      }\n    }\n\n    class VersionedDocument : Document {\n      var version = 0\n\n      // inherits 'init' and 'init withTitle:' from Document\n    }\n    ```\n\n  When one does provide a designated initializer in a subclass, as in\n  the following example:\n\n    ```swift\n    class SecureDocument : Document {\n      var key: CryptoKey\n\n      init withKey(key: CryptoKey) -> Self {\n        self.init(withKey: key, title: \"Default title\")\n      }\n\n      init withKey(key: CryptoKey) title(String) {\n        self.key = key\n        super.init(withTitle: title)\n      }\n    }\n    ```\n\n  the compiler emits Objective-C method stubs for all of the\n  designated initializers of the parent class that will abort at\n  runtime if called, and which indicate which initializer needs to be\n  implemented. This provides memory safety for cases where an\n  Objective-C initializer (such as `-[Document init]` in this example)\n  appears to be inherited, but isn't actually implemented.\n\n* `nil` may now be used as a Selector value. This allows calls to Cocoa methods\n  that accept `nil` selectors.\n\n* `[]` and `[:]` can now be used as the empty array and dictionary literal,\n  respectively.  Because these carry no information about their element types,\n  they may only be used in a context that provides this information through type\n  inference (e.g. when passing a function argument).\n\n* Properties defined in classes are now dynamically dispatched and can be\n  overridden with `@override`.  Currently `@override` only works with computed properties\n  overriding other computed properties, but this will be enhanced in coming weeks.\n\n### 2014-03-12\n\n* The `didSet` accessor of an observing property now gets passed in the old value,\n  so you can easily implement an action for when a property changes value.  For\n  example:\n\n    ```swift\n    class MyAwesomeView : UIView {\n      var enabled : Bool = false {\n      didSet(oldValue):\n        if oldValue != enabled {\n          self.needsDisplay = true\n        }\n      }\n      ...\n    }\n    ```\n\n* The implicit argument name for set and willSet property specifiers has been\n  renamed from `(value)` to `(newValue)`.  For example:\n\n    ```swift\n    var i : Int {\n      get {\n        return 42\n      }\n      set {  // defaults to (newValue) instead of (value)\n        print(newValue)\n      }\n    }\n    ```\n\n* The magic identifier `__FUNCTION__` can now be used to get the name of the\n  current function as a string. Like `__FILE__` and `__LINE__`, if\n  `__FUNCTION__` is used as a default argument, the function name of the caller\n  is passed as the argument.\n\n    ```swift\n    func malkovich() {\n      println(__FUNCTION__)\n    }\n    malkovich() // prints \"malkovich\"\n\n    func nameCaller(name: String = __FUNCTION__) -> String {\n      return name\n    }\n\n    func foo() {\n      println(nameCaller()) // prints \"foo\"\n    }\n\n    func foo(x: Int) bar(y: Int) {\n      println(nameCaller()) // prints \"foo:bar:\"\n    }\n    ```\n\n  At top level, `__FUNCTION__` gives the module name:\n\n    ```swift\n    println(nameCaller()) // prints your module name\n    ```\n\n* Selector-style methods can now be referenced without applying arguments\n  using member syntax `foo.bar:bas:`, for instance, to test for the availability\n  of an optional protocol method:\n\n    ```swift\n    func getFrameOfObjectValueForColumn(ds: NSTableViewDataSource,\n                                        tableView: NSTableView,\n                                        column: NSTableColumn,\n                                        row: Int) -> AnyObject? {\n      if let getObjectValue = ds.tableView:objectValueForTableColumn:row: {\n        return getObjectValue(tableView, column, row)\n      }\n      return nil\n    }\n    ```\n\n* The compiler now warns about cases where a variable is inferred to have\n  `AnyObject`, `AnyClass`, or `()` type, since type inference can turn a simple\n  mistake (e.g. failing to cast an `AnyObject` when you meant to) into something\n  with ripple effects.  Here is a simple example:\n\n    ```\n    t.swift:4:5: warning: variable 'fn' inferred to have type '()', which may be unexpected\n    var fn = abort()\n        ^\n    t.swift:4:5: note: add an explicit type annotation to silence this warning\n    var fn = abort()\n        ^\n          : ()\n    ```\n\n  If you actually did intend to declare a variable of one of these types, you\n  can silence this warning by adding an explicit type (indicated by the Fixit).\n  See **rdar://15263687 and rdar://16252090** for more rationale.\n\n* `x.type` has been renamed to `x.dynamicType`, and you can use `type` as a\n  regular identifier again.\n\n### 2014-03-05\n\n* C macros that expand to a single constant string are now imported as global\n  constants. Normal string literals are imported as `CString`; `NSString` literals\n  are imported as `String`.\n\n* All values now have a `self` property, exactly equivalent to the value\n  itself:\n\n    ```swift\n    let x = 0\n    let x2 = x.self\n    ```\n\n  Types also have a `self` property that is the type object for that\n  type:\n\n    ```swift\n    let theClass = NSObject.self\n    let theObj = theClass()\n    ```\n\n  References to type names are now disallowed outside of a constructor call\n  or member reference; to get a type object as a value, `T.self` is required.\n  This prevents the mistake of intending to construct an instance of a\n  class but forgetting the parens and ending up with the class object instead:\n\n    ```swift\n    let x = MyObject // oops, I meant MyObject()...\n    return x.description() // ...and I accidentally called +description\n                           //    instead of -description\n    ```\n\n* Initializers are now classified as **designated initializers**, which\n  are responsible for initializing the current class object and\n  chaining via `super.init`, and **convenience initializers**, which\n  delegate to another initializer and can be inherited. For example:\n\n    ```swift\n    class A {\n      var str: String\n\n      init() -> Self { // convenience initializer\n        self.init(withString: \"hello\")\n      }\n\n      init withString(str: String) { // designated initializer\n        self.str = str\n      }\n    }\n    ```\n\n  When a subclass overrides all of its superclass's designated\n  initializers, the convenience initializers are inherited:\n\n    ```swift\n    class B {\n      init withString(str: String) { // designated initializer\n        super.init(withString: str)\n      }\n\n      // inherits A.init()\n    }\n    ```\n\n  Objective-C classes that provide `NS_DESIGNATED_INITIALIZER`\n  annotations will have their init methods mapped to designated\n  initializers or convenience initializers as appropriate; Objective-C\n  classes without `NS_DESIGNATED_INITIALIZER` annotations have all of\n  their `init` methods imported as designated initializers, which is\n  safe (but can be verbose for subclasses). Note that the syntax and\n  terminology is still somewhat in flux.\n\n* Initializers can now be marked as `required` with an attribute,\n  meaning that every subclass is required to provide that initializer\n  either directly or by inheriting it from a superclass. To construct\n\n    ```swift\n    class View {\n      @required init withFrame(frame: CGRect) { ... }\n    }\n\n    func buildView(subclassObj: View.Type, frame: CGRect) -> View {\n      return subclassObj(withFrame: frame)\n    }\n\n    class MyView : View {\n      @required init withFrame(frame: CGRect) {\n        super.init(withFrame: frame)\n      }\n    }\n\n    class MyOtherView : View {\n      // error: must override init withFrame(CGRect).\n    }\n    ```\n\n* Properties in Objective-C protocols are now correctly imported as properties.\n  (Previously the getter and setter were imported as methods.)\n\n* Simple enums with no payloads, including `NS_ENUM`s imported\n  from Cocoa, now implicitly conform to the Equatable and Hashable protocols.\n  This means they can be compared with the `==` and `!=` operators and can\n  be used as `Dictionary` keys:\n\n    ```swift\n    enum Flavor {\n      case Lemon, Banana, Cherry\n    }\n\n    assert(Flavor.Lemon == .Lemon)\n    assert(Flavor.Banana != .Lemon)\n\n    struct Profile {\n      var sweet, sour: Bool\n    }\n\n    let flavorProfiles: Dictionary<Flavor, Profile> = [\n      .Lemon:  Profile(sweet: false, sour: true ),\n      .Banana: Profile(sweet: true,  sour: false),\n      .Cherry: Profile(sweet: true,  sour: true ),\n    ]\n    assert(flavorProfiles[.Lemon].sour)\n    ```\n\n* `val` has been removed.  Long live `let`!\n\n* Values whose names clash with Swift keywords, such as Cocoa methods or\n  properties named `class`, `protocol`, `type`, etc., can now be defined and\n  accessed by wrapping reserved keywords in backticks to suppress their builtin\n  meaning:\n\n    ```swift\n    let `class` = 0\n    let `type` = 1\n    let `protocol` = 2\n    println(`class`)\n    println(`type`)\n    println(`protocol`)\n\n    func foo(Int) `class`(Int) {}\n    foo(0, `class`: 1)\n    ```\n\n### 2014-02-26\n\n* The `override` attribute is now required when overriding a method,\n  property, or subscript from a superclass. For example:\n\n    ```swift\n    class A {\n      func foo() { }\n    }\n\n    class B : A {\n      @override func foo() { } // 'override' is required here\n    }\n    ```\n\n* We're renaming `val` back to `let`.  The compiler accepts both for this week,\n  next week it will just accept `let`.  Please migrate your code this week, sorry\n  for the back and forth on this.\n\n* Swift now supports `#if`, `#else` and `#endif` blocks, along with target\n  configuration expressions, to allow for conditional compilation within\n  declaration and statement contexts.\n\n  Target configurations represent certain static information about the\n  compile-time build environment.  They are implicit, hard-wired into the\n  compiler, and can only be referenced within the conditional expression of an\n  `#if` block.\n\n  Target configurations are tested against their values via a pseudo-function\n  invocation expression, taking a single argument expressed as an identifier.\n  The argument represents certain static build-time information.\n\n  There are currently two supported target configurations:\n    `os`, which can have the values `OSX` or `iOS`\n    `arch`, which can have the values `i386`, `x86_64`, `arm` and `arm64`\n\n  Within the context of an `#if` block's conditional expression, a target\n  configuration expression can evaluate to either `true` or `false`.\n\n  For example:\n\n    ```swift\n    #if arch(x86_64)\n      println(\"Building for x86_64\")\n    #else\n      println(\"Not building for x86_64\")\n    #endif\n\n    class C {\n    #if os(OSX)\n      func foo() {\n        // OSX stuff goes here\n      }\n    #else\n      func foo() {\n        // non-OSX stuff goes here\n      }\n    #endif\n    }\n    ```\n\n  The conditional expression of an `#if` block can be composed of one or more of\n  the following expression types:\n    - A unary expression, using `!`\n    - A binary expression, using `&&` or `||`\n    - A parenthesized expression\n    - A target configuration expression\n\n  For example:\n\n    ```swift\n    #if os(iOS) && !arch(I386)\n    ...\n    #endif\n    ```\n\n  Note that `#if`/`#else`/`#endif` blocks do not constitute a preprocessor, and\n  must form valid and complete expressions or statements. Hence, the following\n  produces a parser error:\n\n    ```swift\n    class C {\n\n    #if os(iOS)\n      func foo() {}\n    }\n    #else\n      func bar() {}\n      func baz() {}\n    }\n    #endif\n    ```\n\n  Also note that \"active\" code will be parsed, typechecked and emitted, while\n  \"inactive\" code will only be parsed.  This is why code in an inactive `#if` or\n  `#else` block will produce parser errors for malformed code.  This allows the\n  compiler to detect basic errors in inactive regions.\n\n  This is the first step to getting functionality parity with the important\n  subset of the C preprocessor.  Further refinements are planned for later.\n\n* Swift now has both fully-closed ranges, which include their endpoint, and\n  half-open ranges, which don't.\n\n    ```swift\n    (swift) for x in 0...5 { print(x) } ; print('\\n') // half-open range\n    01234\n    (swift) for x in 0..5 { print(x) } ; print('\\n')  // fully-closed range\n    012345\n    ```\n\n* Property accessors have a new brace-based syntax, instead of using the former\n  \"label like\" syntax.  The new syntax is:\n\n  ```swift\n  var computedProperty: Int {\n    get {\n      return _storage\n    }\n    set {\n      _storage = value\n    }\n  }\n\n  var implicitGet: Int {    // This form still works.\n    return 42\n  }\n\n  var storedPropertyWithObservingAccessors: Int = 0 {\n    willSet { ... }\n    didSet { ... }\n  }\n  ```\n\n* Properties and subscripts now work in protocols, allowing you to do things\n  like:\n\n    ```swift\n    protocol Subscriptable {\n      subscript(idx1: Int, idx2: Int) -> Int { get set }\n      var prop: Int { get }\n    }\n\n    func foo(s: Subscriptable) {\n      return s.prop + s[42, 19]\n    }\n    ```\n\n  These can be used for generic algorithms now as well.\n\n* The syntax for referring to the type of a type, `T.metatype`, has been\n  changed to `T.Type`. The syntax for getting the type of a value, `typeof(x)`,\n  has been changed to `x.type`.\n\n* `DynamicSelf` is now called `Self`; the semantics are unchanged.\n\n* `destructor` has been replaced with `deinit`, to emphasize that it\n  is related to `init`. We will refer to these as\n  `deinitializers`. We've also dropped the parentheses, i.e.:\n\n    ```swift\n    class MyClass {\n      deinit {\n        // release any resources we might have acquired, etc.\n      }\n    }\n    ```\n\n* Class methods defined within extensions of Objective-C classes can\n  now refer to `self`, including using `instancetype` methods. As a\n  result, `NSMutableString`, `NSMutableArray`, and `NSMutableDictionary`\n  objects can now be created with their respective literals, i.e.,\n\n    ```swift\n    var dict: NSMutableDictionary = [\"a\" : 1, \"b\" : 2]\n    ```\n\n### 2014-02-19\n\n* The `Stream` protocol has been renamed back to `Generator,` which is\n  precedented in other languages and causes less confusion with I/O\n  streaming.\n\n* The `type` keyword was split into two: `static` and `class`.  One can define\n  static functions and static properties in structs and enums like this:\n\n    ```swift\n    struct S {\n      static func foo() {}\n      static var bar: Int = 0\n    }\n    enum E {\n      static func foo() {}\n    }\n    ```\n\n  `class` keyword allows one to define class properties and class methods in\n  classes and protocols:\n\n    ```swift\n    class C {\n      class func foo() {}\n      class var bar: Int = 0\n    }\n    protocol P {\n      class func foo() {}\n      class var bar: Int = 0\n    }\n    ```\n\n  When using `class` and `static` in the extension, the choice of keyword\n  depends on the type being extended:\n\n    ```swift\n    extension S {\n      static func baz() {}\n    }\n    extension C {\n      class func baz() {}\n    }\n    ```\n\n* The `let` keyword is no longer recognized.  Please move to `val`.\n\n* The standard library has been renamed to `Swift` (instead of `swift`) to be\n  more consistent with other modules on our platforms.\n\n* `NSInteger` and other types that are layout-compatible with Swift standard\n  library types are now imported directly as those standard library types.\n\n* Optional types now support a convenience method named \"cache\" to cache the\n  result of a closure. For example:\n\n  ```swift\n  class Foo {\n    var _lazyProperty: Int?\n    var property: Int {\n      return _lazyProperty.cache { computeLazyProperty() }\n    }\n  }\n  ```\n\n### 2014-02-12\n\n* We are experimenting with a new message send syntax. For example:\n\n    ```swift\n    SKAction.colorizeWithColor(SKColor.whiteColor()) colorBlendFactor(1.0) duration(0.0)\n    ```\n\n  When the message send is too long to fit on a single line, subsequent lines\n  must be indented from the start of the statement or declaration. For\n  example, this is a single message send:\n\n    ```swift\n    SKAction.colorizeWithColor(SKColor.whiteColor())\n             colorBlendFactor(1.0)\n             duration(0.0)\n    ```\n\n  while this is a message send to colorizeWithColor: followed by calls\n  to `colorBlendFactor` and `duration` (on self or to a global function):\n\n    ```swift\n    SKAction.colorizeWithColor(SKColor.whiteColor())\n    colorBlendFactor(1.0) // call to 'colorBlendFactor'\n    duration(0.0) // call to 'duration'\n    ```\n\n* We are renaming the `let` keyword to `val`.  The `let` keyword didn't work\n  out primarily because it is not a noun, so \"defining a let\" never sounded\n  right.  We chose `val` over `const` and other options because `var` and `val`\n  have similar semantics (making syntactic similarity useful), because `const`\n  has varied and sordid connotations in C that we don't want to bring over, and\n  because we don't want to punish the \"preferred\" case with a longer keyword.\n\n  For migration purposes, the compiler now accepts `let` and `val` as synonyms,\n  `let` will be removed next week.\n\n* Selector arguments in function arguments with only a type are now implicitly\n  named after the selector chunk that contains them.  For example, instead of:\n\n    ```swift\n    func addIntsWithFirst(first : Int) second(second : Int) -> Int {\n      return first+second\n    }\n    ```\n\n  you can now write:\n\n    ```swift\n    func addIntsWithFirst(first : Int) second(Int) -> Int {\n      return first+second\n    }\n    ```\n\n  if you want to explicitly want to ignore an argument, it is recommended that\n  you continue to use the `_` to discard it, as in:\n\n    ```swift\n    func addIntsWithFirst(first : Int) second(_ : Int) -> Int {...}\n    ```\n\n* The `@inout` attribute in argument lists has been promoted to a\n  context-sensitive keyword.  Where before you might have written:\n\n    ```swift\n    func swap<T>(a : @inout T, b : @inout T) {\n      (a, b) = (b, a)\n    }\n    ```\n\n  You are now required to write:\n\n    ```swift\n    func swap<T>(inout a : T, inout b : T) {\n      (a, b) = (b, a)\n    }\n    ```\n\n  We made this change because `inout` is a fundamental part of the type\n  system, which attributes are a poor match for.  The inout keyword is\n  also orthogonal to the `var` and `let` keywords (which may be specified in\n  the same place), so it fits naturally there.\n\n* The `@mutating` attribute (which can be used on functions in structs,\n  enums, and protocols) has been promoted to a context-sensitive keyword.\n  Mutating struct methods are now written as:\n\n    ```swift\n    struct SomeStruct {\n      mutating func f() {}\n    }\n    ```\n\n* Half-open ranges (those that don't include their endpoint) are now\n  spelled with three `.`s instead of two, for consistency with Ruby.\n\n    ```swift\n    (swift) for x in 0...5 { print(x) } ; print('\\n') // new syntax\n    01234\n    ```\n\n  Next week, we'll introduce a fully-closed range which does include\n  its endpoint.  This will provide:\n\n    ```swift\n    (swift) for x in 0..5 { print(x) } ; print('\\n')  // coming soon\n    012345\n    ```\n\n  These changes are being released separately so that users have a\n  chance to update their code before its semantics changes.\n\n* Objective-C properties with custom getters/setters are now imported\n  into Swift as properties. For example, the Objective-C property\n\n    ```swift\n    @property (getter=isEnabled) BOOL enabled;\n    ```\n\n  was previously imported as getter (`isEnabled`) and setter\n  (`setEnabled`) methods. Now, it is imported as a property (`enabled`).\n\n* `didSet`/`willSet` properties may now have an initial value specified:\n\n    ```swift\n    class MyAwesomeView : UIView {\n      var enabled : Bool = false {       // Initial value.\n      didSet: self.needsDisplay = true\n      }\n      ...\n    }\n    ```\n\n  they can also be used as non-member properties now, e.g. as a global\n  variable or a local variable in a function.\n\n* Objective-C instancetype methods are now imported as methods that\n  return Swift's `DynamicSelf` type. While `DynamicSelf` is not\n  generally useful for defining methods in Swift, importing to it\n  eliminates the need for casting with the numerous `instancetype` APIs,\n  e.g.,\n\n    ```swift\n    let tileNode: SKSpriteNode = SKSpriteNode.spriteNodeWithTexture(tileAtlas.textureNamed(\"tile\\(tileNumber).png\"))!\n    ```\n\n  becomes\n\n    ```swift\n    let tileNode = SKSpriteNode.spriteNodeWithTexture(tileAtlas.textureNamed(\"tile\\(tileNumber).png\"))\n    ```\n\n  `DynamicSelf` will become more interesting in the coming weeks.\n\n### 2014-02-05\n\n* `if` and `while` statements can now conditionally bind variables. If the\n  condition of an `if` or `while` statement is a `let` declaration, then the\n  right-hand expression is evaluated as an `Optional` value, and control flow\n  proceeds by considering the binding to be `true` if the `Optional` contains a\n  value, or `false` if it is empty, and the variables are available in the true\n  branch. This allows for elegant testing of dynamic types, methods, nullable\n  pointers, and other Optional things:\n\n    ```swift\n    class B : NSObject {}\n    class D : B {\n      func foo() { println(\"we have a D\") }\n    }\n    var b: B = D()\n    if let d = b as D {\n      d.foo()\n    }\n    var id: AnyObject = D()\n    if let foo = id.foo {\n      foo()\n    }\n    ```\n\n* When referring to a member of an `AnyObject` (or `AnyClass`) object\n  and using it directly (such as calling it, subscripting, or\n  accessing a property on it), one no longer has to write the `?` or\n  `!`. The run-time check will be performed implicitly. For example:\n\n    ```swift\n    func doSomethingOnViews(views: NSArray) {\n      for view in views {\n          view.updateLayer() // no '!' needed\n      }\n    }\n    ```\n\n  Note that one can still test whether the member is available at\n  runtime using `?`, testing the optional result, or conditionally\n  binding a variable to the resulting member.\n\n* The `swift` command line tool can now create executables and libraries\n  directly, just like Clang. Use `swift main.swift` to create an executable and\n  `swift -emit-library -o foo.dylib foo.swift` to create a library.\n\n* Object files emitted by Swift are not debuggable on their own, even if you\n  compiled them with the `-g` option. This was already true if you had multiple\n  files in your project. To produce a debuggable Swift binary from the command\n  line, you must compile and link in a single step with `swift`, or pass object\n  files AND swiftmodule files back into `swift` after compilation.\n  (Or use Xcode.)\n\n* `import` will no longer import other source files, only built modules.\n\n* The current directory is no longer implicitly an import path. Use `-I .` if\n  you have modules in your current directory.\n\n### 2014-01-29\n\n* Properties in structs and classes may now have `willSet:` and `didSet:`\n  observing accessors defined on them:\n\n  For example, where before you may have written something like this in a class:\n\n    ```swift\n    class MyAwesomeView : UIView {\n      var _enabled : Bool  // storage\n      var enabled : Bool { // computed property\n      get:\n        return _enabled\n      set:\n        _enabled = value\n        self.needDisplay = true\n      }\n      ...\n    }\n    ```\n\n  you can now simply write:\n\n    ```swift\n    class MyAwesomeView : UIView {\n      var enabled : Bool {  // Has storage & observing methods\n      didSet: self.needDisplay = true\n      }\n      ...\n    }\n    ```\n\n  Similarly, if you want notification before the value is stored, you can use\n  `willSet`, which gets the incoming value before it is stored:\n\n    ```swift\n    var x : Int {\n    willSet(value):  // value is the default and may be elided, as with set:\n      println(\"changing from \\(x) to \\(value)\")\n    didSet:\n      println(\"we've got a value of \\(x) now.\\n\")\n    }\n    ```\n\n  The `willSet`/`didSet` observers are triggered on any store to the property,\n  except stores from `init()`, destructors, or from within the observers\n  themselves.\n\n  Overall, a property now may either be \"stored\" (the default), \"computed\"\n  (have a `get:` and optionally a `set:` specifier), or an observed\n  (`willSet`/`didSet`) property.  It is not possible to have a custom getter\n  or setter on an observed property, since they have storage.\n\n  Two known-missing bits are:\n  - **(rdar://problem/15920332) didSet/willSet variables need to allow initializers**\n  - **(rdar://problem/15922884) support non-member didset/willset properties**\n\n  Because of the first one, for now, you need to explicitly store an initial\n  value to the property in your `init()` method.\n\n* Objective-C properties with custom getter or setter names are (temporarily)\n  not imported into Swift; the getter and setter will be imported individually\n  as methods instead. Previously, they would appear as properties within the\n  Objective-C class, but attempting to use the accessor with the customized\n  name would result in a crash.\n\n  The long-term fix is tracked as **(rdar://problem/15877160)**.\n\n* Computed 'type' properties (that is, properties of types, rather\n  than of values of the type) are now permitted on classes, on generic\n  structs and enums, and in extensions.  Stored 'type' properties in\n  these contexts remain unimplemented.\n\n  The implementation of stored 'type' properties is tracked as\n  **(rdar://problem/15915785)** (for classes) and **(rdar://problem/15915867)**\n  (for generic types).\n\n* The following command-line flags have been deprecated in favor of new\n  spellings. The old spellings will be removed in the following week's build:\n\n  | Old Spelling             | New Spelling                  |\n  |--------------------------|-------------------------------|\n  | `-emit-llvm`             | `-emit-ir`                    |\n  | `-triple`                | `-target`                     |\n  | `-serialize-diagnostics` | `-serialize-diagnostics-path` |\n\n* Imported `NS_OPTIONS` types now have a default initializer which produces a\n  value with no options set. They can also be initialized to the empty set with\n  `nil`. These are equivalent:\n\n    ```swift\n    var x = NSMatchingOptions()\n    var y: NSMatchingOptions = nil\n    ```\n\n### 2014-01-22\n\n* The swift binary no longer has an SDK set by default. Instead, you must do\n  one of the following:\n    - pass an explicit `-sdk /path/to/sdk`\n    - set `SDKROOT` in your environment\n    - run `swift` through `xcrun`, which sets `SDKROOT` for you\n\n* `let` declarations can now be used as struct/class properties.  A `let`\n  property is mutable within `init()`, and immutable everywhere else.\n\n    ```swift\n    class C {\n      let x = 42\n      let y : Int\n      init(y : Int) {\n        self.y = y   // ok, self.y is mutable in init()\n      }\n\n      func test() {\n        y = 42       // error: 'y' isn't mutable\n      }\n    }\n    ```\n\n* The immutability model for structs and enums is complete, and arguments are\n  immutable by default.  This allows the compiler to reject mutations of\n  temporary objects, catching common bugs.  For example, this is rejected:\n\n    ```swift\n    func setTo4(a : Double[]) {\n      a[10] = 4.0     // error: 'a' isn't mutable\n    }\n    ...\n    setTo4(someArray)\n    ```\n\n  since `a` is semantically a copy of the array passed into the function.  The\n  proper fix in this case is to mark the argument is `@inout`, so the effect is\n  visible in the caller:\n\n    ```swift\n    func setTo4(a : @inout Double[]) {\n      a[10] = 4.0     // ok: 'a' is a mutable reference\n    }\n    ...\n    setTo4(&someArray)\n    ```\n\n  Alternatively, if you really just want a local copy of the argument, you can\n  mark it `var`.  The effects aren't visible in the caller, but this can be\n  convenient in some cases:\n\n    ```swift\n    func doStringStuff(var s : String) {\n      s += \"foo\"\n      print(s)\n    }\n    ```\n\n* Objective-C instance variables are no longer imported from headers written in\n  Objective-C. Previously, they would appear as properties within the\n  Objective-C class, but trying to access them would result in a crash.\n  Additionally, their names can conflict with property names, which confuses\n  the Swift compiler, and there are no patterns in our frameworks that expect\n  you to access a parent or other class's instance variables directly. Use\n  properties instead.\n\n* The `NSObject` protocol is now imported under the name\n  `NSObjectProtocol` (rather than `NSObjectProto`).\n\n### 2014-01-15\n\n* Improved deallocation of Swift classes that inherit from Objective-C\n  classes: Swift destructors are implemented as `-dealloc` methods that\n  automatically call the superclass's `-dealloc`. Stored properties are\n  released right before the object is deallocated (using the same\n  mechanism as ARC), allowing properties to be safely used in\n  destructors.\n\n* Subclasses of `NSManagedObject` are now required to provide initial\n  values for each of their stored properties. This permits\n  initialization of these stored properties directly after +alloc to\n  provide memory safety with CoreData's dynamic subclassing scheme.\n\n* `let` declarations are continuing to make slow progress. Curried\n  and selector-style arguments are now immutable by default, and\n  `let` declarations now get proper debug information.\n\n### 2014-01-08\n\n* The `static` keyword changed to `type`. One can now define \"type\n  functions\" and \"type variables\" which are functions and variables\n  defined on a type (rather than on an instance of the type), e.g.,\n\n    ```swift\n    class X {\n      type func factory() -> X { ... }\n\n      type var version: Int\n    }\n    ```\n\n  The use of `static` was actively misleading, since type methods\n  on classes are dynamically dispatched (the same as Objective-C\n  `+` methods).\n\n  Note that `type` is a context-sensitive keyword; it can still be\n  used as an identifier.\n\n* Strings have a new native UTF-16 representation that can be\n  converted back and forth to `NSString` at minimal cost. String\n  literals are emitted as UTF-16 for string types that support it\n  (including Swift's `String`).\n\n* Initializers can now delegate to other initializers within the same\n  class by calling `self.init`. For example:\n\n    ```swift\n    class A { }\n\n    class B : A {\n      var title: String\n\n      init() {\n        // note: cannot access self before delegating\n        self.init(withTitle: \"My Title\")\n      }\n\n      init withTitle(title: String) {\n        self.title = title\n        super.init()\n      }\n    }\n    ```\n\n* Objective-C protocols no longer have the `Proto` suffix unless there\n  is a collision with a class name. For example, `UITableViewDelegate` is\n  now imported as `UITableViewDelegate` rather than\n  `UITableViewDelegateProto`. Where there is a conflict with a class,\n  the protocol will be suffixed with `Proto`, as in `NSObject` (the\n  class) and `NSObjectProto` (the protocol).\n\n### 2014-01-01\n\n* Happy New Year\n\n* Division and remainder arithmetic now trap on overflow. Like with the other\n  operators, one can use the \"masking\" alternatives to get non-trapping\n  behavior. The behavior of the non-trapping masking operators is defined:\n\n    ```swift\n    x &/ 0 == 0\n    x &% 0 == 0\n    SIGNED_MIN_FOR_TYPE &/ -1 == -1 // i.e. Int8: -0x80 / -1 == -0x80\n    SIGNED_MIN_FOR_TYPE &% -1 == 0\n    ```\n\n* Protocol conformance checking for `@mutating` methods is now implemented: an\n  `@mutating` struct method only fulfills a protocol requirement if the protocol\n  method was itself marked `@mutating`:\n\n    ```swift\n    protocol P {\n      func nonmutating()\n      @mutating\n      func mutating()\n    }\n\n    struct S : P {\n      // Error, @mutating method cannot implement non-@mutating requirement.\n      @mutating\n      func nonmutating() {}\n\n      // Ok, mutating allowed, but not required.\n      func mutating() {}\n    }\n    ```\n\n  As before, class methods never need to be marked `@mutating` (and indeed, they\n  aren't allowed to be marked as such).\n\n### 2013-12-25\n\n* Merry Christmas\n\n* The setters of properties on value types (structs/enums) are now `@mutating` by\n  default.  To mark a setter non-mutating, use the `@!mutating` attribute.\n\n* Compiler inserts calls to `super.init()` into the class initializers that do\n  not call any initializers explicitly.\n\n* A `map` method with the semantics of Haskell's `fmap` was added to\n  `Array<T>`.  Map applies a function `f: T->U` to the values stored in\n  the array and returns an `Array<U>`.  So,\n\n    ```swift\n    (swift) func names(x: Int[]) -> String[] {\n              return x.map { \"<\" + String($0) + \">\" }\n            }\n    (swift) names(Array<Int>())\n    // r0 : String[] = []\n    (swift) names([3, 5, 7, 9])\n    // r1 : String[] = [\"<3>\", \"<5>\", \"<7>\", \"<9>\"]\n    ```\n\n### 2013-12-18\n\n* Global variables and static properties are now lazily initialized on first\n  use. Where you would use `dispatch_once` to lazily initialize a singleton\n  object in Objective-C, you can simply declare a global variable with an\n  initializer in Swift. Like `dispatch_once`, this lazy initialization is thread\n  safe.\n\n  Unlike C++ global variable constructors, Swift global variables and\n  static properties now never emit static constructors (and thereby don't\n  raise build warnings). Also unlike C++, lazy initialization naturally follows\n  dependency order, so global variable initializers that cross module\n  boundaries don't have undefined behavior or fragile link order dependencies.\n\n* Swift has the start of an immutability model for value types. As part of this,\n  you can now declare immutable value bindings with a new `let` declaration,\n  which is semantically similar to defining a get-only property:\n\n    ```swift\n    let x = foo()\n    print(x)        // ok\n    x = bar()       // error: cannot modify an immutable value\n    swap(&x, &y)    // error: cannot pass an immutable value as @inout parameter\n    x.clear()       // error: cannot call mutating method on immutable value\n    getX().clear()  // error: cannot mutate a temporary\n    ```\n\n  In the case of bindings of class type, the bound object itself is still\n  mutable, but you cannot change the binding.\n\n    ```swift\n    let r = Rocket()\n    r.blastOff()    // Ok, your rocket is mutable.\n    r = Rocket()    // error: cannot modify an immutable binding.\n    ```\n\n  In addition to the `let` declaration itself, `self` on classes, and a few\n  other minor things have switched to immutable bindings.\n\n  A pivotal part of this is that methods of value types (structs and enums) need\n  to indicate whether they can mutate self - mutating methods need to be\n  disallowed on let values (and get-only property results, temporaries, etc) but\n  non-mutating methods need to be allowed.  The default for a method is that it\n  does not mutate `self`, though you can opt into mutating behavior with a new\n  `@mutating` attribute:\n\n    ```swift\n    struct MyWeirdCounter {\n      var count : Int\n\n      func empty() -> Bool { return count == 0 }\n\n      @mutating\n      func reset() {\n        count = 0\n      }\n      ...\n    }\n\n    let x = MyWeirdCounter()\n    x.empty()   // ok\n    x.reset()   // error, cannot mutate immutable 'let' value\n    ```\n\n   One missing piece is that the compiler does not yet reject mutations of self\n   in a method that isn't marked `@mutating`.  That will be coming soon.  Related\n   to methods are properties.  Getters and setters can be marked mutating as\n   well:\n\n   ```swift\n   extension MyWeirdCounter {\n      var myproperty : Int {\n      get:\n        return 42\n\n      @mutating\n      set:\n        count = value*2\n      }\n    }\n    ```\n\n  The intention is for setters to default to mutating, but this has not been\n  implemented yet.  There is more to come here.\n\n* A `map` method with the semantics of Haskell's `fmap` was added to\n  `Optional<T>`.  Map applies a function `f: T->U` to any value stored in\n  an `Optional<T>`, and returns an `Optional<U>`.  So,\n\n    ```swift\n   (swift) func nameOf(x: Int?) -> String? {\n             return x.map { \"<\" + String($0) + \">\" }\n           }\n   (swift)\n   (swift) var no = nameOf(.None) // Empty optional in...\n   // no : String? = <unprintable value>\n   (swift) no ? \"yes\" : \"no\"      // ...empty optional out\n   // r0 : String = \"no\"\n   (swift)\n   (swift) nameOf(.Some(42))      // Non-empty in\n   // r1 : String? = <unprintable value>\n   (swift) nameOf(.Some(42))!     // Non-empty out\n   // r2 : String = \"<42>\"\n   ```\n\n* Cocoa types declared with the `NS_OPTIONS` macro are now available in Swift.\n  Like `NS_ENUM` types, their values are automatically shortened based\n  on the common prefix of the value names in Objective-C, and the name can\n  be elided when type context provides it. They can be used in `if` statements\n  using the `&`, `|`, `^`, and `~` operators as in C:\n\n    ```swift\n    var options: NSJSONWritingOptions = .PrettyPrinted\n    if options & .PrettyPrinted {\n      println(\"pretty-printing enabled\")\n    }\n    ```\n\n  We haven't yet designed a convenient way to author `NS_OPTIONS`-like types\n  in Swift.\n\n### 2013-12-11\n\n* Objective-C `id` is now imported as `AnyObject` (formerly known as\n `DynamicLookup`), Objective-C `Class` is imported as `AnyClass`.\n\n* The casting syntax `x as T` now permits both implicit conversions\n  (in which case it produces a value of type `T`) and for\n  runtime-checked casts (in which case it produces a value of type `T?`\n  that will be `.Some(casted x)` on success and `.None` on failure). An\n  example:\n\n    ```swift\n    func f(x: AnyObject, y: NSControl) {\n      var view = y as NSView                  // has type 'NSView'\n      var maybeView = x as NSView             // has type NSView?\n    }\n    ```\n\n* The precedence levels of binary operators has been redefined, with a much\n  simpler model than C's.  This is with a goal to define away classes of bugs\n  such as those caught by Clang's `-Wparentheses` warnings, and to make it\n  actually possible for normal humans to reason about the precedence\n  relationships without having to look them up.\n\n  We ended up with 6 levels, from tightest binding to loosest:\n    ```\n    exponentiative: <<, >>\n    multiplicative: *, /, %, &\n    additive: +, -, |, ^\n    comparative: ==, !=, <, <=, >=, >\n    conjunctive: &&\n    disjunctive: ||\n    ```\n\n* The `Enumerable` protocol has been renamed `Sequence`.\n\n* The `Char` type has been renamed `UnicodeScalar`.  The preferred\n  unit of string fragments for users is called `Character`.\n\n* Initialization semantics for classes, structs and enums init methods are now\n  properly diagnosed by the compiler.  Instance variables now follow the same\n  initialization rules as local variables: they must be defined before use.  The\n  initialization model requires that all properties with storage in the current\n  class be initialized before `super.init` is called (or, in a root class, before\n  any method is called on `self,` and before the final return).\n\n  For example, this will yield an error:\n\n    ```swift\n    class SomeClass : SomeBase {\n      var x : Int\n\n      init() {\n        // error: property 'self.x' not initialized at super.init call\n        super.init()\n      }\n    }\n    ```\n\n  A simple fix for this is to change the property definition to `var x = 0`,\n  or to explicitly assign to it before calling `super.init()`.\n\n* Relatedly, the compiler now diagnoses incorrect calls to `super.init()`.  It\n  validates that any path through an initializer calls `super.init()` exactly once,\n  that all ivars are defined before the call to super.init, and that any uses\n  which require the entire object to be initialized come after the `super.init`\n  call.\n\n* Type checker performance has improved considerably (but we still\n  have much work to do here).\n\n### 2013-12-04\n\n* The \"slice\" versus \"array\" subtlety is now dead. `Slice<T>` has been folded\n  into `Array<T>` and `T[]` is just sugar for `Array<T>`.\n\n### 2013-11-20\n\n* Unreachable code warning has been added:\n\n    ```swift\n    var y: Int = 1\n    if y == 1 { // note: condition always evaluates to true\n      return y\n    }\n    return 1 // warning: will never be executed\n    ```\n\n* Overflows on integer type conversions are now detected at runtime and, when\n  dealing with constants, at compile time:\n\n    ```swift\n    var i: Int = -129\n    var i8 = Int8(i)\n    // error: integer overflows when converted from 'Int' to 'Int8'\n\n    var si = Int8(-1)\n    var ui = UInt8(si)\n    // error: negative integer cannot be converted to unsigned type 'UInt8'\n    ```\n\n* `def` keyword was changed back to `func`.\n\n### 2013-11-13\n\n* Objective-C-compatible protocols can now contain optional\n  requirements, indicated by the `@optional` attribute:\n\n    ```swift\n    @class_protocol @objc protocol NSWobbling {\n      @optional def wobble()\n    }\n    ```\n\n  A class that conforms to the `NSWobbling` protocol above can (but does\n  not have to) implement `wobble`. When referring to the `wobble`\n  method for a value of type `NSWobbling` (or a value of generic type\n  that is bounded by `NSWobbling`), the result is an optional value\n  indicating whether the underlying object actually responds to the\n  given selector, using the same mechanism as messaging `id`. One can\n  use `!` to assume that the method is always there, `?` to chain the\n  optional, or conditional branches to handle each case distinctly:\n\n    ```swift\n    def tryToWobble(w : NSWobbling) {\n      w.wobble()   // error: cannot call a value of optional type\n      w.wobble!()  // okay: calls -wobble, but fails at runtime if not there\n      w.wobble?()  // okay: calls -wobble only if it's there, otherwise no-op\n      if w.wobble {\n        // okay: we know -wobble is there\n      } else {\n        // okay: we know -wobble is not there\n      }\n    }\n    ```\n\n* Enums from Cocoa that are declared with the `NS_ENUM` macro are now imported\n  into Swift as Swift enums. Like all Swift enums, the constants of the Cocoa\n  enum are scoped as members of the enum type, so the importer strips off the\n  common prefix of all of the constant names in the enum when forming the Swift\n  interface. For example, this Objective-C declaration:\n\n    ```objc\n    typedef NS_ENUM(NSInteger, NSComparisonResult) {\n      NSOrderedAscending,\n      NSOrderedSame,\n      NSOrderedDescending,\n    };\n    ```\n\n  shows up in Swift as:\n\n    ```swift\n    enum NSComparisonResult : Int {\n      case Ascending, Same, Descending\n    }\n    ```\n\n  The `enum` cases can then take advantage of type inference from context.\n  In Objective-C, you would write:\n\n    ```objc\n    NSNumber *foo = [NSNumber numberWithInt: 1];\n    NSNumber *bar = [NSNumber numberWithInt: 2];\n\n    switch ([foo compare: bar]) {\n    case NSOrderedAscending:\n      NSLog(@\"ascending\\n\");\n      break;\n    case NSOrderedSame:\n      NSLog(@\"same\\n\");\n      break;\n    case NSOrderedDescending:\n      NSLog(@\"descending\\n\");\n      break;\n    }\n    ```\n\n  In Swift, this becomes:\n\n    ```swift\n    var foo: NSNumber = 1\n    var bar: NSNumber = 2\n\n    switch foo.compare(bar) {\n    case .Ascending:\n      println(\"ascending\")\n    case .Same:\n      println(\"same\")\n    case .Descending:\n      println(\"descending\")\n    }\n    ```\n\n* Work has begun on implementing static properties. Currently they are supported\n  for nongeneric structs and enums.\n\n    ```swift\n    struct Foo {\n      static var foo: Int = 2\n    }\n    enum Bar {\n      static var bar: Int = 3\n    }\n    println(Foo.foo)\n    println(Bar.bar)\n    ```\n\n### 2013-11-06\n\n* `func` keyword was changed to `def`.\n\n* Implicit conversions are now allowed from an optional type `T?` to another\n  optional type `U?` if `T` is implicitly convertible to `U`. For example,\n  optional subclasses convert to their optional base classes:\n\n    ```swift\n    class Base {}\n    class Derived : Base {}\n\n    var d: Derived? = Derived()\n    var b: Base? = d\n    ```\n\n### 2013-10-30\n\n* Type inference for variables has been improved, allowing any\n  variable to have its type inferred from its initializer, including\n  global and instance variables:\n\n    ```swift\n    class MyClass {\n      var size = 0 // inferred to Int\n    }\n\n    var name = \"Swift\"\n    ```\n\n  Additionally, the arguments of a generic type can also be inferred\n  from the initializer:\n\n    ```swift\n    // infers Dictionary<String, Int>\n    var dict: Dictionary = [\"Hello\": 1, \"World\": 2]\n    ```\n\n### 2013-10-23\n\n* Missing return statement from a non-`Void` function is diagnosed as an error.\n\n* `Vector<T>` has been replaced with `Array<T>`. This is a complete rewrite to use\n  value-semantics and copy-on-write behavior. The former means that you never\n  need to defensively copy again (or remember to attribute a property as \"copy\")\n  and the latter yields better performance than defensive copying. `Dictionary<T>`\n  is next.\n\n* `switch` can now pattern-match into structs and classes, using the syntax\n  `case Type(property1: pattern1, property2: pattern2, ...):`.\n\n    ```swift\n    struct Point { var x, y: Double }\n    struct Size { var w, h: Double }\n    struct Rect { var origin: Point; var size: Size }\n\n    var square = Rect(Point(0, 0), Size(10, 10))\n\n    switch square {\n    case Rect(size: Size(w: var w, h: var h)) where w == h:\n      println(\"square\")\n    case Rect(size: Size(w: var w, h: var h)) where w > h:\n      println(\"long rectangle\")\n    default:\n      println(\"tall rectangle\")\n    }\n    ```\n\n  Currently only stored properties (\"ivars\" in ObjC terminology) are\n  supported by the implementation.\n\n* Array and dictionary literals allow an optional trailing comma:\n\n    ```swift\n    var a = [1, 2,]\n    var d = [\"a\": 1, \"b\": 2,]\n    ```\n\n### 2013-10-16\n\n* Unlike in Objective-C, objects of type `id` in Swift do not\n  implicitly convert to any class type. For example, the following\n  code is ill-formed:\n\n    ```swift\n    func getContentViewBounds(window : NSWindow) -> NSRect {\n      var view : NSView = window.contentView() // error: 'id' doesn't implicitly convert to NSView\n     return view.bounds()\n    }\n    ```\n\n  because `contentView()` returns an `id`. One can now use the postfix\n  `!` operator to allow an object of type `id` to convert to any class\n  type, e.g.,\n\n    ```swift\n    func getContentViewBounds(window : NSWindow) -> NSRect {\n      var view : NSView = window.contentView()! // ok: checked conversion to NSView\n     return view.bounds()\n    }\n    ```\n\n  The conversion is checked at run-time, and the program will fail if\n  the object is not an NSView. This is shorthand for\n\n    ```swift\n    var view : NSView = (window.contentView() as NSView)!\n    ```\n\n  which checks whether the content view is an `NSView` (via the `as\n  NSView`). That operation returns an optional `NSView` (written\n  `NSView?`) and the `!` operation assumes that the cast succeeded,\n  i.e., that the optional has a value in it.\n\n* The unconditional checked cast syntax `x as! T` has been removed. Many cases\n  where conversion from `id` is necessary can now be handled by postfix `!`\n  (see above). Fully general unconditional casts can still be expressed using\n  `as` and postfix `!` together, `(x as T)!`.\n\n* The old \"square bracket\" attribute syntax has been removed.\n\n* Overflows on construction of integer and floating point values from integer\n  literals that are too large to fit the type are now reported by the compiler.\n  Here are some examples:\n\n    ```swift\n    var x = Int8(-129)\n    // error: integer literal overflows when stored into 'Int8'\n\n    var y: Int = 0xFFFF_FFFF_FFFF_FFFF_F\n    // error: integer literal overflows when stored into 'Int'\n    ```\n\n  Overflows in constant integer expressions are also reported by the compiler.\n\n    ```swift\n    var x: Int8 = 125\n    var y: Int8 = x + 125\n    // error: arithmetic operation '125 + 125' (on type 'Int8') results in\n    //        an overflow\n    ```\n\n* Division by zero in constant expressions is now detected by the compiler:\n\n    ```swift\n    var z: Int = 0\n    var x = 5 / z  // error: division by zero\n    ```\n\n* Generic structs with type parameters as field types are now fully supported.\n\n    ```swift\n    struct Pair<T, U> {\n      var first: T\n      var second: U\n    }\n    ```\n\n### 2013-10-09\n\n* Autorelease pools can now be created using the `autoreleasepool` function.\n\n    ```swift\n    autoreleasepool {\n      // code\n    }\n    ```\n\n  Note that the wrapped code is a closure, so constructs like `break` and\n  `continue` and `return` do not behave as they would inside an Objective-C\n  `@autoreleasepool` statement.\n\n* Enums can now declare a \"raw type\", and cases can declare \"raw values\",\n  similar to the integer underlying type of C enums:\n\n    ```swift\n    // Declare the underlying type as in Objective-C or C++11, with\n    // ': Type'\n    enum AreaCode : Int {\n      // Assign explicit values to cases with '='\n      case SanFrancisco = 415\n      case EastBay = 510\n      case Peninsula = 650\n      case SanJose = 408\n      // Values are also assignable by implicit auto-increment\n      case Galveston // = 409\n      case Baltimore // = 410\n    }\n    ```\n\n  This introduces `fromRaw` and `toRaw` methods on the enum to perform\n  conversions from and to the raw type:\n\n    ```swift\n    /* As if declared:\n        extension AreaCode {\n          // Take a raw value, and produce the corresponding enum value,\n          // or None if there is no corresponding enum value\n          static func fromRaw(raw:Int) -> AreaCode?\n\n          // Return the corresponding raw value for 'self'\n          func toRaw() -> Int\n        }\n     */\n\n    AreaCode.fromRaw(415) // => .Some(.SanFrancisco)\n    AreaCode.fromRaw(111) // => .None\n    AreaCode.SanJose.toRaw() // => 408\n    ```\n\n  Raw types are not limited to integer types--they can additionally be\n  character, floating-point, or string values:\n\n    ```swift\n    enum State : String {\n      case CA = \"California\"\n      case OR = \"Oregon\"\n      case WA = \"Washington\"\n    }\n\n    enum SquareRootOfInteger : Float {\n      case One = 1.0\n      case Two = 1.414\n      case Three = 1.732\n      case Four = 2.0\n    }\n    ```\n\n  Raw types are currently limited to simple C-like enums with no payload cases.\n  The raw values are currently restricted to simple literal values; expressions\n  such as `1 + 1` or references to other enum cases are not yet supported.\n  Raw values are also currently required to be unique for each case in an enum.\n\n  Enums with raw types implicitly conform to the `RawRepresentable` protocol,\n  which exposes the fromRaw and toRaw methods to generics:\n\n    ```swift\n    protocol RawRepresentable {\n      typealias RawType\n      static func fromRaw(raw: RawType) -> Self?\n      func toRaw() -> RawType\n    }\n    ```\n\n* Attribute syntax has been redesigned (see **(rdar://10700853)** and\n  **(rdar://14462729)**) so that attributes now precede the declaration and use\n  the `@` character to signify them.  Where before you might have written:\n\n    ```swift\n    func [someattribute=42] foo(a : Int) {}\n    ```\n\n  you now write:\n\n    ```swift\n    @someattribute=42\n    func foo(a : Int) {}\n    ```\n\n  This flows a lot better (attributes don't push the name for declarations away),\n  and means that square brackets are only used for array types, collection\n  literals, and subscripting operations.\n\n* The `for` loop now uses the Generator protocol instead of the `Enumerator`\n  protocol to iterate a sequence. This protocol looks like this:\n\n    ```swift\n    protocol Generator {\n      typealias Element\n      func next() -> Element?\n    }\n    ```\n\n  The single method `next()` advances the generator and returns an\n  Optional, which is either `.Some(value)`, wrapping the next value out\n  of the underlying sequence, or `.None` to signal that there are no\n  more elements. This is an improvement over the previous Enumerator\n  protocol because it eliminates the separate `isEmpty()` query and\n  better reflects the semantics of ephemeral sequences like\n  un-buffered input streams.\n\n### 2013-10-02\n\n* The `[byref]` attribute has been renamed to `[inout]`.  When applied to a logical\n  property, the getter is invoked before a call and the setter is applied to\n  write back the result.  `inout` conveys this better and aligns with existing\n  Objective-C practice better.\n\n* `[inout]` arguments can now be captured into closures. The semantics of a\n  inout capture are that the captured variable is an independent local variable\n  of the callee, and the inout is updated to contain the value of that local\n  variable at function exit.\n\n  In the common case, most closure arguments do not outlive the duration of\n  their callee, and the observable behavior is unchanged.  However, if the\n  captured variable outlives the function, you can observe this.  For example,\n  this code:\n\n    ```swift\n    func foo(x : [inout] Int) -> () -> Int {\n      func bar() -> Int {\n        x += 1\n        return x\n      }\n      // Call 'bar' once while the inout is active.\n      bar()\n      return bar\n    }\n\n    var x = 219\n    var f = foo(&x)\n    // x is updated to the value of foo's local x at function exit.\n    println(\"global x = \\(x)\")\n    // These calls only update the captured local 'x', which is now independent\n    // of the inout parameter.\n    println(\"local x = \\(f())\")\n    println(\"local x = \\(f())\")\n    println(\"local x = \\(f())\")\n\n    println(\"global x = \\(x)\")\n    ```\n\n  will print:\n\n    ```\n    global x = 220\n    local x = 221\n    local x = 222\n    local x = 223\n    global x = 220\n    ```\n\n  In no case will you end up with a dangling pointer or other unsafe construct.\n\n* `x as T` now performs a checked cast to `T?`, producing `.Some(t)` if the\n  cast succeeds, or `.None` if the cast fails.\n\n* The ternary expression (`x ? y : z`) now requires whitespace between the\n  first expression and the question mark.  This permits `?` to be used\n  as a postfix operator.\n\n* A significant new piece of syntactic sugar has been added to ease working\n  with optional values.  The `?` postfix operator is analogous to `!`, but\n  instead of asserting on None, it causes all the following postfix\n  operators to get skipped and return `None`.\n\n  In a sense, this generalizes (and makes explicit) the Objective-C behavior\n  where message sends to `nil` silently produce the zero value of the result.\n\n  For example, this code\n\n    ```swift\n    object?.parent.notifyChildEvent?(object!, .didExplode)\n    ```\n\n  first checks whether `object` has a value; if so, it drills to its\n  parent and checks whether that object implements the `notifyChildEvent`\n  method; if so, it calls that method.  (Note that we do not yet have\n  generalized optional methods.)\n\n  This code:\n\n    ```swift\n    var titleLength = object?.title.length\n    ```\n\n  checks whether `object` has a value and, if so, asks for the length of\n  its title.  `titleLength` will have type `Int?`, and if `object` was\n  missing, the variable will be initialized to None.\n\n* Objects with type `id` can now be used as the receiver of property\n  accesses and subscript operations to get (but not set) values. The\n  result is of optional type. For example, for a variable `obj` of\n  type `id`, the expression\n\n    ```swift\n    obj[0]\n    ```\n\n  will produce a value of type `id`, which will either contain the\n  result of the message send objectAtIndexedSubscript(0) (wrapped in an\n  optional type) or, if the object does not respond to\n  `objectAtIndexedSubscript:`, an empty optional. The same approach\n  applies to property accesses.\n\n* `_` can now be used not only in `var` bindings, but in assignments as well,\n  to ignore elements of a tuple assignment, or to explicitly ignore values.\n\n    ```swift\n    var a = (1, 2.0, 3)\n    var x = 0, y = 0\n    _ = a           // explicitly load and discard 'a'\n    (x, _, y) = a   // assign a.0 to x and a.2 to y\n    ```\n\n### 2013-09-24\n\n* The `union` keyword has been replaced with `enum`.  Unions and enums\n  are semantically identical in swift (the former just has data\n  associated with its discriminators) and `enum` is the vastly more\n  common case.  For more rationale, please see\n  [docs/proposals/Enums.rst](https://github.com/apple/swift/blob/main/docs/proposals/Enums.rst)\n\n* The Optional type `T?` is now represented as an `enum`:\n\n    ```swift\n    enum Optional<T> {\n      case None\n      case Some(T)\n    }\n    ```\n\n  This means that, in addition to the existing Optional APIs, it can be\n  pattern-matched with switch:\n\n    ```swift\n    var x : X?, y : Y?\n    switch (x, y) {\n    // Both are present\n    case (.Some(var a), .Some(var b)):\n      println(\"both\")\n\n    // One is present\n    case (.Some, .None):\n    case (.None, .Some):\n      println(\"one\")\n\n    // Neither is present\n    case (.None, .None):\n      println(\"neither\")\n    }\n    ```\n\n* Enums now allow multiple cases to be declared in a comma-separated list\n  in a single `case` declaration:\n\n    ```swift\n    enum Color {\n      case Red, Green, Blue\n    }\n    ```\n\n* The Objective-C `id` and `Class` types now support referring to\n  methods declared in any class or protocol without a downcast. For\n  example, given a variable `sender` of type `id`, one can refer to\n  `-isEqual: with:`\n\n    ```swift\n    sender.isEqual\n    ```\n\n  The actual object may or may not respond to `-isEqual`, so this\n  expression returns result of optional type whose value is determined via a\n  compiler-generated `-respondsToSelector` send. When it succeeds, the\n  optional contains the method; when it fails, the optional is empty.\n\n  To safely test the optional, one can use, e.g.,\n\n    ```swift\n    var senderIsEqual = sender.isEqual\n    if senderIsEqual {\n      // this will never trigger an \"unrecognized selector\" failure\n      var equal = senderIsEqual!(other)\n    } else {\n      // sender does not respond to -isEqual:\n    }\n    ```\n\n  When you *know* that the method is there, you can use postfix `!` to\n  force unwrapping of the optional, e.g.,\n\n    ```swift\n    sender.isEqual!(other)\n    ```\n\n  This will fail at runtime if in fact sender does not respond to `-isEqual:`.\n  We have some additional syntactic optimizations planned for testing\n  an optional value and handling both the success and failure cases\n  concisely. Watch this space.\n\n* Weak references now always have optional type.  If a weak variable\n  has an explicit type, it must be an optional type:\n\n    ```swift\n    var [weak] x : NSObject?\n    ```\n\n  If the variable is not explicitly typed, its type will still be\n  inferred to be an optional type.\n\n* There is now an implicit conversion from `T` to `T?`.\n\n### 2013-09-17\n\n* Constructor syntax has been improved to align better with\n  Objective-C's `init` methods. The `constructor` keyword has been\n  replaced with `init`, and the selector style of declaration used for\n  func declarations is now supported. For example:\n\n    ```swift\n    class Y : NSObject {\n      init withInt(i : Int) string(s : String) {\n        super.init() // call superclass initializer\n      }\n    }\n    ```\n\n  One can use this constructor to create a `Y` object with, e.g.,\n\n    ```swift\n    Y(withInt:17, string:\"Hello\")\n    ```\n\n  Additionally, the rules regarding the selector corresponding to such\n  a declaration have been revised. The selector for the above\n  initializer is `initWithInt:string:`; the specific rules are\n  described in the documentation.\n\n  Finally, Swift initializers now introduce Objective-C entry points,\n  so a declaration such as:\n\n    ```swift\n    class X : NSObject {\n      init() {\n        super.init()\n      }\n    }\n    ```\n\n  Overrides `NSObject`'s `-init` method (which it calls first) as well\n  as introducing the 'allocating' entry point so that one can create a\n  new `X` instance with the syntax `X()`.\n\n* Variables in top-level code (i.e. scripts, but not global variables in\n  libraries) that lack an initializer now work just like local variables:\n  they must be explicitly assigned-to sometime before any use, instead of\n  being default constructed.  Instance variables are still on the TODO\n  list.\n\n* Generic unions with a single payload case and any number of empty cases\n  are now implemented, for example:\n\n    ```swift\n    union Maybe<T> {\n      case Some(T)\n      case None\n    }\n\n    union Tristate<T> {\n      case Initialized(T)\n      case Initializing\n      case Uninitialized\n    }\n    ```\n\n  Generic unions with multiple payload cases are still not yet implemented.\n\n### 2013-09-11\n\n* The implementation now supports partial application of class and struct\n  methods:\n\n    ```swift\n    (swift) class B { func foo() { println(\"B\") } }\n    (swift) class D : B { func foo() { println(\"D\") } }\n    (swift) var foo = B().foo\n    // foo : () -> () = <unprintable value>\n    (swift) foo()\n    B\n    (swift) foo = D().foo\n    (swift) foo()\n    D\n    ```\n\n  Support for partial application of Objective-C class methods and methods in\n  generic contexts is still incomplete.\n\n### 2013-09-04\n\n* Local variable declarations without an initializer are no longer implicitly\n  constructed.  The compiler now verifies that they are initialized on all\n  paths leading to a use of the variable.  This means that constructs like this\n  are now allowed:\n\n    ```swift\n    var p : SomeProtocol\n    if whatever {\n      p = foo()\n    } else {\n      p = bar()\n    }\n    ```\n\n  where before, the compiler would reject the definition of `p` saying that it\n  needed an initializer expression.\n\n  Since all local variables must be initialized before use, simple things like\n  this are now rejected as well:\n\n    ```swift\n    var x : Int\n    print(x)\n    ```\n\n  The fix is to initialize the value on all paths, or to explicitly default\n  initialize the value in the declaration, e.g. with `var x = 0` or with\n  `var x = Int()` (which works for any default-constructible type).\n\n* The implementation now supports unions containing protocol types and weak\n  reference types.\n\n* The type annotation syntax, `x as T`, has been removed from the language.\n  The checked cast operations `x as! T` and `x is T` still remain.\n\n### 2013-08-28\n\n* `this` has been renamed to `self`.  Similarly, `This` has been renamed to\n  `Self`.\n\n* Swift now supports unions. Unlike C unions, Swift's `union` is type-safe\n  and always knows what type it contains at runtime. Union members are labeled\n  using `case` declarations; each case may have a different set of\n  types or no type:\n\n    ```swift\n    union MaybeInt {\n      case Some(Int)\n      case None\n    }\n\n    union HTMLTag {\n      case A(href:String)\n      case IMG(src:String, alt:String)\n      case BR\n    }\n    ```\n\n  Each `case` with a type defines a static constructor function for the union\n  type. `case` declarations without types become static members:\n\n    ```swift\n    var br = HTMLTag.BR\n    var a = HTMLTag.A(href:\"http://www.apple.com/\")\n    // 'HTMLTag' scope deduced for '.IMG' from context\n    var img : HTMLTag = .IMG(src:\"http://www.apple.com/mac-pro.png\",\n                             alt:\"The new Mac Pro\")\n    ```\n\n  Cases can be pattern-matched using `switch`:\n\n    ```swift\n    switch tag {\n    case .BR:\n      println(\"<br>\")\n    case .IMG(var src, var alt):\n      println(\"<img src=\\\"\\(escape(src))\\\" alt=\\\"\\(escape(alt))\\\">\")\n    case .A(var href):\n      println(\"<a href=\\\"\\(escape(href))\\\">\")\n    }\n    ```\n\n  Due to implementation limitations, recursive unions are not yet supported.\n\n* Swift now supports autolinking, so importing frameworks or Swift libraries\n  should no longer require adding linker flags or modifying your project file.\n\n### 2013-08-14\n\n* Swift now supports weak references by applying the `[weak]` attribute to a\n  variable declaration.\n\n    ```swift\n    (swift) var x = NSObject()\n    // x : NSObject = <NSObject: 0x7f95d5804690>\n    (swift) var [weak] w = x\n    // w : NSObject = <NSObject: 0x7f95d5804690>\n    (swift) w == nil\n    // r2 : Bool = false\n    (swift) x = NSObject()\n    (swift) w == nil\n    // r3 : Bool = true\n    ```\n\n  Swift also supports a special form of weak reference, called `[unowned]`, for\n  references that should never be `nil` but are required to be weak to break\n  cycles, such as parent or sibling references. Accessing an `[unowned]`\n  reference asserts that the reference is still valid and implicitly promotes\n  the loaded reference to a strong reference, so it does not need to be loaded\n  and checked for nullness before use like a true `[weak]` reference.\n\n    ```swift\n    class Parent {\n      var children : Array<Child>\n\n      func addChild(c:Child) {\n        c.parent = this\n        children.append(c)\n      }\n    }\n\n    class Child {\n      var [unowned] parent : Parent\n    }\n    ```\n\n### 2013-07-31\n\n* Numeric literals can now use underscores as separators. For example:\n\n    ```swift\n    var billion = 1_000_000_000\n    var crore = 1_00_00_000\n    var MAXINT = 0x7FFF_FFFF_FFFF_FFFF\n    var SMALLEST_DENORM = 0x0.0000_0000_0000_1p-1022\n    ```\n\n* Types conforming to protocols now must always declare the conformance in\n  their inheritance clause.\n\n* The build process now produces serialized modules for the standard library,\n  greatly improving build times.\n\n### 2013-07-24\n\n* Arithmetic operators `+`, `-`, `*`, and `/` on integer types now do\n  overflow checking and trap on overflow. A parallel set of masking operators,\n  `&+`, `&-`, `&*`, and `&/`, are defined to perform two's complement wrapping\n  arithmetic for all signed and unsigned integer types.\n\n* Debugger support. Swift has a `-g` command line switch that turns on\n  debug info for the compiled output. Using the standard lldb debugger\n  this will allow single-stepping through Swift programs, printing\n  backtraces, and navigating through stack frames; all in sync with\n  the corresponding Swift source code. An unmodified lldb cannot\n  inspect any variables.\n\n  Example session:\n\n    ```\n    $ echo 'println(\"Hello World\")' >hello.swift\n    $ swift hello.swift -c -g -o hello.o\n    $ ld hello.o \"-dynamic\" \"-arch\" \"x86_64\" \"-macosx_version_min\" \"10.9.0\" \\\n         -framework Foundation lib/swift/libswift_stdlib_core.dylib \\\n         lib/swift/libswift_stdlib_posix.dylib -lSystem -o hello\n    $ lldb hello\n    Current executable set to 'hello' (x86_64).\n    (lldb) b top_level_code\n    Breakpoint 1: where = hello`top_level_code + 26 at hello.swift:1, addre...\n    (lldb) r\n    Process 38592 launched: 'hello' (x86_64)\n    Process 38592 stopped\n    * thread #1: tid = 0x1599fb, 0x0000000100000f2a hello`top_level_code + ...\n        frame #0: 0x0000000100000f2a hello`top_level_code + 26 at hello.shi...\n    -> 1         println(\"Hello World\")\n    (lldb) bt\n    * thread #1: tid = 0x1599fb, 0x0000000100000f2a hello`top_level_code + ...\n        frame #0: 0x0000000100000f2a hello`top_level_code + 26 at hello.shi...\n        frame #1: 0x0000000100000f5c hello`main + 28\n        frame #2: 0x00007fff918605fd libdyld.dylib`start + 1\n        frame #3: 0x00007fff918605fd libdyld.dylib`start + 1\n    ```\n\n  Also try `s`, `n`, `up`, `down`.\n\n### 2013-07-17\n\n* Swift now has a `switch` statement, supporting pattern matching of\n  multiple values with variable bindings, guard expressions, and range\n  comparisons. For example:\n\n    ```swift\n    func classifyPoint(point:(Int, Int)) {\n      switch point {\n      case (0, 0):\n        println(\"origin\")\n\n      case (_, 0):\n        println(\"on the x axis\")\n\n      case (0, _):\n        println(\"on the y axis\")\n\n      case (var x, var y) where x == y:\n        println(\"on the y = x diagonal\")\n\n      case (var x, var y) where -x == y:\n        println(\"on the y = -x diagonal\")\n\n      case (-10..10, -10..10):\n        println(\"close to the origin\")\n\n      case (var x, var y):\n        println(\"length \\(sqrt(x*x + y*y))\")\n      }\n    }\n    ```\n\n### 2013-07-10\n\n* Swift has a new closure syntax. The new syntax eliminates the use of\n  pipes. Instead, the closure signature is written the same way as a\n  function type and is separated from the body by the `in`\n  keyword. For example:\n\n    ```swift\n    sort(fruits) { (lhs : String, rhs : String) -> Bool in\n      return lhs > rhs\n    }\n    ```\n\n  When the types are omitted, one can also omit the parentheses, e.g.,\n\n    ```swift\n    sort(fruits) { lhs, rhs in lhs > rhs }\n    ```\n\n  Closures with no parameters or that use the anonymous parameters\n  (`$0`, `$1`, etc.) don't need the `in`, e.g.,\n\n    ```swift\n    sort(fruits) { $0 > $1 }\n    ```\n\n* `nil` can now be used without explicit casting. Previously, `nil` had\n  type `NSObject`, so one would have to write (e.g.) `nil as! NSArray`\n  to create a `nil` `NSArray`. Now, `nil` picks up the type of its\n  context.\n\n* `POSIX.EnvironmentVariables` and `swift.CommandLineArguments` global variables\n  were merged into a `swift.Process` variable.  Now you can access command line\n  arguments with `Process.arguments`.  In order to access environment variables\n  add `import POSIX` and use `Process.environmentVariables`.\n\n<!-- References -->\n\n[SE-0001]: <https://github.com/apple/swift-evolution/blob/main/proposals/0001-keywords-as-argument-labels.md>\n[SE-0002]: <https://github.com/apple/swift-evolution/blob/main/proposals/0002-remove-currying.md>\n[SE-0003]: <https://github.com/apple/swift-evolution/blob/main/proposals/0003-remove-var-parameters.md>\n[SE-0004]: <https://github.com/apple/swift-evolution/blob/main/proposals/0004-remove-pre-post-inc-decrement.md>\n[SE-0005]: <https://github.com/apple/swift-evolution/blob/main/proposals/0005-objective-c-name-translation.md>\n[SE-0006]: <https://github.com/apple/swift-evolution/blob/main/proposals/0006-apply-api-guidelines-to-the-standard-library.md>\n[SE-0007]: <https://github.com/apple/swift-evolution/blob/main/proposals/0007-remove-c-style-for-loops.md>\n[SE-0008]: <https://github.com/apple/swift-evolution/blob/main/proposals/0008-lazy-flatmap-for-optionals.md>\n[SE-0009]: <https://github.com/apple/swift-evolution/blob/main/proposals/0009-require-self-for-accessing-instance-members.md>\n[SE-0010]: <https://github.com/apple/swift-evolution/blob/main/proposals/0010-add-staticstring-unicodescalarview.md>\n[SE-0011]: <https://github.com/apple/swift-evolution/blob/main/proposals/0011-replace-typealias-associated.md>\n[SE-0012]: <https://github.com/apple/swift-evolution/blob/main/proposals/0012-add-noescape-to-public-library-api.md>\n[SE-0013]: <https://github.com/apple/swift-evolution/blob/main/proposals/0013-remove-partial-application-super.md>\n[SE-0014]: <https://github.com/apple/swift-evolution/blob/main/proposals/0014-constrained-AnySequence.md>\n[SE-0015]: <https://github.com/apple/swift-evolution/blob/main/proposals/0015-tuple-comparison-operators.md>\n[SE-0016]: <https://github.com/apple/swift-evolution/blob/main/proposals/0016-initializers-for-converting-unsafe-pointers-to-ints.md>\n[SE-0017]: <https://github.com/apple/swift-evolution/blob/main/proposals/0017-convert-unmanaged-to-use-unsafepointer.md>\n[SE-0018]: <https://github.com/apple/swift-evolution/blob/main/proposals/0018-flexible-memberwise-initialization.md>\n[SE-0019]: <https://github.com/apple/swift-evolution/blob/main/proposals/0019-package-manager-testing.md>\n[SE-0020]: <https://github.com/apple/swift-evolution/blob/main/proposals/0020-if-swift-version.md>\n[SE-0021]: <https://github.com/apple/swift-evolution/blob/main/proposals/0021-generalized-naming.md>\n[SE-0022]: <https://github.com/apple/swift-evolution/blob/main/proposals/0022-objc-selectors.md>\n[SE-0023]: <https://github.com/apple/swift-evolution/blob/main/proposals/0023-api-guidelines.md>\n[SE-0024]: <https://github.com/apple/swift-evolution/blob/main/proposals/0024-optional-value-setter.md>\n[SE-0025]: <https://github.com/apple/swift-evolution/blob/main/proposals/0025-scoped-access-level.md>\n[SE-0026]: <https://github.com/apple/swift-evolution/blob/main/proposals/0026-abstract-classes-and-methods.md>\n[SE-0027]: <https://github.com/apple/swift-evolution/blob/main/proposals/0027-string-from-code-units.md>\n[SE-0028]: <https://github.com/apple/swift-evolution/blob/main/proposals/0028-modernizing-debug-identifiers.md>\n[SE-0029]: <https://github.com/apple/swift-evolution/blob/main/proposals/0029-remove-implicit-tuple-splat.md>\n[SE-0030]: <https://github.com/apple/swift-evolution/blob/main/proposals/0030-property-behavior-decls.md>\n[SE-0031]: <https://github.com/apple/swift-evolution/blob/main/proposals/0031-adjusting-inout-declarations.md>\n[SE-0032]: <https://github.com/apple/swift-evolution/blob/main/proposals/0032-sequencetype-find.md>\n[SE-0033]: <https://github.com/apple/swift-evolution/blob/main/proposals/0033-import-objc-constants.md>\n[SE-0034]: <https://github.com/apple/swift-evolution/blob/main/proposals/0034-disambiguating-line.md>\n[SE-0035]: <https://github.com/apple/swift-evolution/blob/main/proposals/0035-limit-inout-capture.md>\n[SE-0036]: <https://github.com/apple/swift-evolution/blob/main/proposals/0036-enum-dot.md>\n[SE-0037]: <https://github.com/apple/swift-evolution/blob/main/proposals/0037-clarify-comments-and-operators.md>\n[SE-0038]: <https://github.com/apple/swift-evolution/blob/main/proposals/0038-swiftpm-c-language-targets.md>\n[SE-0039]: <https://github.com/apple/swift-evolution/blob/main/proposals/0039-playgroundliterals.md>\n[SE-0040]: <https://github.com/apple/swift-evolution/blob/main/proposals/0040-attributecolons.md>\n[SE-0041]: <https://github.com/apple/swift-evolution/blob/main/proposals/0041-conversion-protocol-conventions.md>\n[SE-0042]: <https://github.com/apple/swift-evolution/blob/main/proposals/0042-flatten-method-types.md>\n[SE-0043]: <https://github.com/apple/swift-evolution/blob/main/proposals/0043-declare-variables-in-case-labels-with-multiple-patterns.md>\n[SE-0044]: <https://github.com/apple/swift-evolution/blob/main/proposals/0044-import-as-member.md>\n[SE-0045]: <https://github.com/apple/swift-evolution/blob/main/proposals/0045-scan-takewhile-dropwhile.md>\n[SE-0046]: <https://github.com/apple/swift-evolution/blob/main/proposals/0046-first-label.md>\n[SE-0047]: <https://github.com/apple/swift-evolution/blob/main/proposals/0047-nonvoid-warn.md>\n[SE-0048]: <https://github.com/apple/swift-evolution/blob/main/proposals/0048-generic-typealias.md>\n[SE-0049]: <https://github.com/apple/swift-evolution/blob/main/proposals/0049-noescape-autoclosure-type-attrs.md>\n[SE-0050]: <https://github.com/apple/swift-evolution/blob/main/proposals/0050-floating-point-stride.md>\n[SE-0051]: <https://github.com/apple/swift-evolution/blob/main/proposals/0051-stride-semantics.md>\n[SE-0052]: <https://github.com/apple/swift-evolution/blob/main/proposals/0052-iterator-post-nil-guarantee.md>\n[SE-0053]: <https://github.com/apple/swift-evolution/blob/main/proposals/0053-remove-let-from-function-parameters.md>\n[SE-0054]: <https://github.com/apple/swift-evolution/blob/main/proposals/0054-abolish-iuo.md>\n[SE-0055]: <https://github.com/apple/swift-evolution/blob/main/proposals/0055-optional-unsafe-pointers.md>\n[SE-0056]: <https://github.com/apple/swift-evolution/blob/main/proposals/0056-trailing-closures-in-guard.md>\n[SE-0057]: <https://github.com/apple/swift-evolution/blob/main/proposals/0057-importing-objc-generics.md>\n[SE-0058]: <https://github.com/apple/swift-evolution/blob/main/proposals/0058-objectivecbridgeable.md>\n[SE-0059]: <https://github.com/apple/swift-evolution/blob/main/proposals/0059-updated-set-apis.md>\n[SE-0060]: <https://github.com/apple/swift-evolution/blob/main/proposals/0060-defaulted-parameter-order.md>\n[SE-0061]: <https://github.com/apple/swift-evolution/blob/main/proposals/0061-autoreleasepool-signature.md>\n[SE-0062]: <https://github.com/apple/swift-evolution/blob/main/proposals/0062-objc-keypaths.md>\n[SE-0063]: <https://github.com/apple/swift-evolution/blob/main/proposals/0063-swiftpm-system-module-search-paths.md>\n[SE-0064]: <https://github.com/apple/swift-evolution/blob/main/proposals/0064-property-selectors.md>\n[SE-0065]: <https://github.com/apple/swift-evolution/blob/main/proposals/0065-collections-move-indices.md>\n[SE-0066]: <https://github.com/apple/swift-evolution/blob/main/proposals/0066-standardize-function-type-syntax.md>\n[SE-0067]: <https://github.com/apple/swift-evolution/blob/main/proposals/0067-floating-point-protocols.md>\n[SE-0068]: <https://github.com/apple/swift-evolution/blob/main/proposals/0068-universal-self.md>\n[SE-0069]: <https://github.com/apple/swift-evolution/blob/main/proposals/0069-swift-mutability-for-foundation.md>\n[SE-0070]: <https://github.com/apple/swift-evolution/blob/main/proposals/0070-optional-requirements.md>\n[SE-0071]: <https://github.com/apple/swift-evolution/blob/main/proposals/0071-member-keywords.md>\n[SE-0072]: <https://github.com/apple/swift-evolution/blob/main/proposals/0072-eliminate-implicit-bridging-conversions.md>\n[SE-0073]: <https://github.com/apple/swift-evolution/blob/main/proposals/0073-noescape-once.md>\n[SE-0074]: <https://github.com/apple/swift-evolution/blob/main/proposals/0074-binary-search.md>\n[SE-0075]: <https://github.com/apple/swift-evolution/blob/main/proposals/0075-import-test.md>\n[SE-0076]: <https://github.com/apple/swift-evolution/blob/main/proposals/0076-copying-to-unsafe-mutable-pointer-with-unsafe-pointer-source.md>\n[SE-0077]: <https://github.com/apple/swift-evolution/blob/main/proposals/0077-operator-precedence.md>\n[SE-0078]: <https://github.com/apple/swift-evolution/blob/main/proposals/0078-rotate-algorithm.md>\n[SE-0079]: <https://github.com/apple/swift-evolution/blob/main/proposals/0079-upgrade-self-from-weak-to-strong.md>\n[SE-0080]: <https://github.com/apple/swift-evolution/blob/main/proposals/0080-failable-numeric-initializers.md>\n[SE-0081]: <https://github.com/apple/swift-evolution/blob/main/proposals/0081-move-where-expression.md>\n[SE-0082]: <https://github.com/apple/swift-evolution/blob/main/proposals/0082-swiftpm-package-edit.md>\n[SE-0083]: <https://github.com/apple/swift-evolution/blob/main/proposals/0083-remove-bridging-from-dynamic-casts.md>\n[SE-0084]: <https://github.com/apple/swift-evolution/blob/main/proposals/0084-trailing-commas.md>\n[SE-0085]: <https://github.com/apple/swift-evolution/blob/main/proposals/0085-package-manager-command-name.md>\n[SE-0086]: <https://github.com/apple/swift-evolution/blob/main/proposals/0086-drop-foundation-ns.md>\n[SE-0087]: <https://github.com/apple/swift-evolution/blob/main/proposals/0087-lazy-attribute.md>\n[SE-0088]: <https://github.com/apple/swift-evolution/blob/main/proposals/0088-libdispatch-for-swift3.md>\n[SE-0089]: <https://github.com/apple/swift-evolution/blob/main/proposals/0089-rename-string-reflection-init.md>\n[SE-0090]: <https://github.com/apple/swift-evolution/blob/main/proposals/0090-remove-dot-self.md>\n[SE-0091]: <https://github.com/apple/swift-evolution/blob/main/proposals/0091-improving-operators-in-protocols.md>\n[SE-0092]: <https://github.com/apple/swift-evolution/blob/main/proposals/0092-typealiases-in-protocols.md>\n[SE-0093]: <https://github.com/apple/swift-evolution/blob/main/proposals/0093-slice-base.md>\n[SE-0094]: <https://github.com/apple/swift-evolution/blob/main/proposals/0094-sequence-function.md>\n[SE-0095]: <https://github.com/apple/swift-evolution/blob/main/proposals/0095-any-as-existential.md>\n[SE-0096]: <https://github.com/apple/swift-evolution/blob/main/proposals/0096-dynamictype.md>\n[SE-0097]: <https://github.com/apple/swift-evolution/blob/main/proposals/0097-negative-attributes.md>\n[SE-0098]: <https://github.com/apple/swift-evolution/blob/main/proposals/0098-didset-capitalization.md>\n[SE-0099]: <https://github.com/apple/swift-evolution/blob/main/proposals/0099-conditionclauses.md>\n[SE-0100]: <https://github.com/apple/swift-evolution/blob/main/proposals/0100-add-sequence-based-init-and-merge-to-dictionary.md>\n[SE-0101]: <https://github.com/apple/swift-evolution/blob/main/proposals/0101-standardizing-sizeof-naming.md>\n[SE-0102]: <https://github.com/apple/swift-evolution/blob/main/proposals/0102-noreturn-bottom-type.md>\n[SE-0103]: <https://github.com/apple/swift-evolution/blob/main/proposals/0103-make-noescape-default.md>\n[SE-0104]: <https://github.com/apple/swift-evolution/blob/main/proposals/0104-improved-integers.md>\n[SE-0105]: <https://github.com/apple/swift-evolution/blob/main/proposals/0105-remove-where-from-forin-loops.md>\n[SE-0106]: <https://github.com/apple/swift-evolution/blob/main/proposals/0106-rename-osx-to-macos.md>\n[SE-0107]: <https://github.com/apple/swift-evolution/blob/main/proposals/0107-unsaferawpointer.md>\n[SE-0108]: <https://github.com/apple/swift-evolution/blob/main/proposals/0108-remove-assoctype-inference.md>\n[SE-0109]: <https://github.com/apple/swift-evolution/blob/main/proposals/0109-remove-boolean.md>\n[SE-0110]: <https://github.com/apple/swift-evolution/blob/main/proposals/0110-distinguish-single-tuple-arg.md>\n[SE-0111]: <https://github.com/apple/swift-evolution/blob/main/proposals/0111-remove-arg-label-type-significance.md>\n[SE-0112]: <https://github.com/apple/swift-evolution/blob/main/proposals/0112-nserror-bridging.md>\n[SE-0113]: <https://github.com/apple/swift-evolution/blob/main/proposals/0113-rounding-functions-on-floatingpoint.md>\n[SE-0114]: <https://github.com/apple/swift-evolution/blob/main/proposals/0114-buffer-naming.md>\n[SE-0115]: <https://github.com/apple/swift-evolution/blob/main/proposals/0115-literal-syntax-protocols.md>\n[SE-0116]: <https://github.com/apple/swift-evolution/blob/main/proposals/0116-id-as-any.md>\n[SE-0117]: <https://github.com/apple/swift-evolution/blob/main/proposals/0117-non-public-subclassable-by-default.md>\n[SE-0118]: <https://github.com/apple/swift-evolution/blob/main/proposals/0118-closure-parameter-names-and-labels.md>\n[SE-0119]: <https://github.com/apple/swift-evolution/blob/main/proposals/0119-extensions-access-modifiers.md>\n[SE-0120]: <https://github.com/apple/swift-evolution/blob/main/proposals/0120-revise-partition-method.md>\n[SE-0121]: <https://github.com/apple/swift-evolution/blob/main/proposals/0121-remove-optional-comparison-operators.md>\n[SE-0122]: <https://github.com/apple/swift-evolution/blob/main/proposals/0122-use-colons-for-subscript-type-declarations.md>\n[SE-0123]: <https://github.com/apple/swift-evolution/blob/main/proposals/0123-disallow-value-to-optional-coercion-in-operator-arguments.md>\n[SE-0124]: <https://github.com/apple/swift-evolution/blob/main/proposals/0124-bitpattern-label-for-int-initializer-objectidentfier.md>\n[SE-0125]: <https://github.com/apple/swift-evolution/blob/main/proposals/0125-remove-nonobjectivecbase.md>\n[SE-0126]: <https://github.com/apple/swift-evolution/blob/main/proposals/0126-refactor-metatypes-repurpose-t-dot-self-and-mirror.md>\n[SE-0127]: <https://github.com/apple/swift-evolution/blob/main/proposals/0127-cleaning-up-stdlib-ptr-buffer.md>\n[SE-0128]: <https://github.com/apple/swift-evolution/blob/main/proposals/0128-unicodescalar-failable-initializer.md>\n[SE-0129]: <https://github.com/apple/swift-evolution/blob/main/proposals/0129-package-manager-test-naming-conventions.md>\n[SE-0130]: <https://github.com/apple/swift-evolution/blob/main/proposals/0130-string-initializers-cleanup.md>\n[SE-0131]: <https://github.com/apple/swift-evolution/blob/main/proposals/0131-anyhashable.md>\n[SE-0132]: <https://github.com/apple/swift-evolution/blob/main/proposals/0132-sequence-end-ops.md>\n[SE-0133]: <https://github.com/apple/swift-evolution/blob/main/proposals/0133-rename-flatten-to-joined.md>\n[SE-0134]: <https://github.com/apple/swift-evolution/blob/main/proposals/0134-rename-string-properties.md>\n[SE-0135]: <https://github.com/apple/swift-evolution/blob/main/proposals/0135-package-manager-support-for-differentiating-packages-by-swift-version.md>\n[SE-0136]: <https://github.com/apple/swift-evolution/blob/main/proposals/0136-memory-layout-of-values.md>\n[SE-0137]: <https://github.com/apple/swift-evolution/blob/main/proposals/0137-avoiding-lock-in.md>\n[SE-0138]: <https://github.com/apple/swift-evolution/blob/main/proposals/0138-unsaferawbufferpointer.md>\n[SE-0139]: <https://github.com/apple/swift-evolution/blob/main/proposals/0139-bridge-nsnumber-and-nsvalue.md>\n[SE-0140]: <https://github.com/apple/swift-evolution/blob/main/proposals/0140-bridge-optional-to-nsnull.md>\n[SE-0141]: <https://github.com/apple/swift-evolution/blob/main/proposals/0141-available-by-swift-version.md>\n[SE-0142]: <https://github.com/apple/swift-evolution/blob/main/proposals/0142-associated-types-constraints.md>\n[SE-0143]: <https://github.com/apple/swift-evolution/blob/main/proposals/0143-conditional-conformances.md>\n[SE-0144]: <https://github.com/apple/swift-evolution/blob/main/proposals/0144-allow-single-dollar-sign-as-valid-identifier.md>\n[SE-0145]: <https://github.com/apple/swift-evolution/blob/main/proposals/0145-package-manager-version-pinning.md>\n[SE-0146]: <https://github.com/apple/swift-evolution/blob/main/proposals/0146-package-manager-product-definitions.md>\n[SE-0147]: <https://github.com/apple/swift-evolution/blob/main/proposals/0147-move-unsafe-initialize-from.md>\n[SE-0148]: <https://github.com/apple/swift-evolution/blob/main/proposals/0148-generic-subscripts.md>\n[SE-0149]: <https://github.com/apple/swift-evolution/blob/main/proposals/0149-package-manager-top-of-tree.md>\n[SE-0150]: <https://github.com/apple/swift-evolution/blob/main/proposals/0150-package-manager-branch-support.md>\n[SE-0151]: <https://github.com/apple/swift-evolution/blob/main/proposals/0151-package-manager-swift-language-compatibility-version.md>\n[SE-0152]: <https://github.com/apple/swift-evolution/blob/main/proposals/0152-package-manager-tools-version.md>\n[SE-0153]: <https://github.com/apple/swift-evolution/blob/main/proposals/0153-compensate-for-the-inconsistency-of-nscopyings-behaviour.md>\n[SE-0154]: <https://github.com/apple/swift-evolution/blob/main/proposals/0154-dictionary-key-and-value-collections.md>\n[SE-0155]: <https://github.com/apple/swift-evolution/blob/main/proposals/0155-normalize-enum-case-representation.md>\n[SE-0156]: <https://github.com/apple/swift-evolution/blob/main/proposals/0156-subclass-existentials.md>\n[SE-0157]: <https://github.com/apple/swift-evolution/blob/main/proposals/0157-recursive-protocol-constraints.md>\n[SE-0158]: <https://github.com/apple/swift-evolution/blob/main/proposals/0158-package-manager-manifest-api-redesign.md>\n[SE-0159]: <https://github.com/apple/swift-evolution/blob/main/proposals/0159-fix-private-access-levels.md>\n[SE-0160]: <https://github.com/apple/swift-evolution/blob/main/proposals/0160-objc-inference.md>\n[SE-0161]: <https://github.com/apple/swift-evolution/blob/main/proposals/0161-key-paths.md>\n[SE-0162]: <https://github.com/apple/swift-evolution/blob/main/proposals/0162-package-manager-custom-target-layouts.md>\n[SE-0163]: <https://github.com/apple/swift-evolution/blob/main/proposals/0163-string-revision-1.md>\n[SE-0164]: <https://github.com/apple/swift-evolution/blob/main/proposals/0164-remove-final-support-in-protocol-extensions.md>\n[SE-0165]: <https://github.com/apple/swift-evolution/blob/main/proposals/0165-dict.md>\n[SE-0166]: <https://github.com/apple/swift-evolution/blob/main/proposals/0166-swift-archival-serialization.md>\n[SE-0167]: <https://github.com/apple/swift-evolution/blob/main/proposals/0167-swift-encoders.md>\n[SE-0168]: <https://github.com/apple/swift-evolution/blob/main/proposals/0168-multi-line-string-literals.md>\n[SE-0169]: <https://github.com/apple/swift-evolution/blob/main/proposals/0169-improve-interaction-between-private-declarations-and-extensions.md>\n[SE-0170]: <https://github.com/apple/swift-evolution/blob/main/proposals/0170-nsnumber_bridge.md>\n[SE-0171]: <https://github.com/apple/swift-evolution/blob/main/proposals/0171-reduce-with-inout.md>\n[SE-0172]: <https://github.com/apple/swift-evolution/blob/main/proposals/0172-one-sided-ranges.md>\n[SE-0173]: <https://github.com/apple/swift-evolution/blob/main/proposals/0173-swap-indices.md>\n[SE-0174]: <https://github.com/apple/swift-evolution/blob/main/proposals/0174-filter-range-replaceable.md>\n[SE-0175]: <https://github.com/apple/swift-evolution/blob/main/proposals/0175-package-manager-revised-dependency-resolution.md>\n[SE-0176]: <https://github.com/apple/swift-evolution/blob/main/proposals/0176-enforce-exclusive-access-to-memory.md>\n[SE-0177]: <https://github.com/apple/swift-evolution/blob/main/proposals/0177-add-clamped-to-method.md>\n[SE-0178]: <https://github.com/apple/swift-evolution/blob/main/proposals/0178-character-unicode-view.md>\n[SE-0179]: <https://github.com/apple/swift-evolution/blob/main/proposals/0179-swift-run-command.md>\n[SE-0180]: <https://github.com/apple/swift-evolution/blob/main/proposals/0180-string-index-overhaul.md>\n[SE-0181]: <https://github.com/apple/swift-evolution/blob/main/proposals/0181-package-manager-cpp-language-version.md>\n[SE-0182]: <https://github.com/apple/swift-evolution/blob/main/proposals/0182-newline-escape-in-strings.md>\n[SE-0183]: <https://github.com/apple/swift-evolution/blob/main/proposals/0183-substring-affordances.md>\n[SE-0184]: <https://github.com/apple/swift-evolution/blob/main/proposals/0184-unsafe-pointers-add-missing.md>\n[SE-0185]: <https://github.com/apple/swift-evolution/blob/main/proposals/0185-synthesize-equatable-hashable.md>\n[SE-0186]: <https://github.com/apple/swift-evolution/blob/main/proposals/0186-remove-ownership-keyword-support-in-protocols.md>\n[SE-0187]: <https://github.com/apple/swift-evolution/blob/main/proposals/0187-introduce-filtermap.md>\n[SE-0188]: <https://github.com/apple/swift-evolution/blob/main/proposals/0188-stdlib-index-types-hashable.md>\n[SE-0189]: <https://github.com/apple/swift-evolution/blob/main/proposals/0189-restrict-cross-module-struct-initializers.md>\n[SE-0190]: <https://github.com/apple/swift-evolution/blob/main/proposals/0190-target-environment-platform-condition.md>\n[SE-0191]: <https://github.com/apple/swift-evolution/blob/main/proposals/0191-eliminate-indexdistance.md>\n[SE-0192]: <https://github.com/apple/swift-evolution/blob/main/proposals/0192-non-exhaustive-enums.md>\n[SE-0193]: <https://github.com/apple/swift-evolution/blob/main/proposals/0193-cross-module-inlining-and-specialization.md>\n[SE-0194]: <https://github.com/apple/swift-evolution/blob/main/proposals/0194-derived-collection-of-enum-cases.md>\n[SE-0195]: <https://github.com/apple/swift-evolution/blob/main/proposals/0195-dynamic-member-lookup.md>\n[SE-0196]: <https://github.com/apple/swift-evolution/blob/main/proposals/0196-diagnostic-directives.md>\n[SE-0197]: <https://github.com/apple/swift-evolution/blob/main/proposals/0197-remove-where.md>\n[SE-0198]: <https://github.com/apple/swift-evolution/blob/main/proposals/0198-playground-quicklook-api-revamp.md>\n[SE-0199]: <https://github.com/apple/swift-evolution/blob/main/proposals/0199-bool-toggle.md>\n[SE-0200]: <https://github.com/apple/swift-evolution/blob/main/proposals/0200-raw-string-escaping.md>\n[SE-0201]: <https://github.com/apple/swift-evolution/blob/main/proposals/0201-package-manager-local-dependencies.md>\n[SE-0202]: <https://github.com/apple/swift-evolution/blob/main/proposals/0202-random-unification.md>\n[SE-0203]: <https://github.com/apple/swift-evolution/blob/main/proposals/0203-rename-sequence-elements-equal.md>\n[SE-0204]: <https://github.com/apple/swift-evolution/blob/main/proposals/0204-add-last-methods.md>\n[SE-0205]: <https://github.com/apple/swift-evolution/blob/main/proposals/0205-withUnsafePointer-for-lets.md>\n[SE-0206]: <https://github.com/apple/swift-evolution/blob/main/proposals/0206-hashable-enhancements.md>\n[SE-0207]: <https://github.com/apple/swift-evolution/blob/main/proposals/0207-containsOnly.md>\n[SE-0208]: <https://github.com/apple/swift-evolution/blob/main/proposals/0208-package-manager-system-library-targets.md>\n[SE-0209]: <https://github.com/apple/swift-evolution/blob/main/proposals/0209-package-manager-swift-lang-version-update.md>\n[SE-0210]: <https://github.com/apple/swift-evolution/blob/main/proposals/0210-key-path-offset.md>\n[SE-0211]: <https://github.com/apple/swift-evolution/blob/main/proposals/0211-unicode-scalar-properties.md>\n[SE-0212]: <https://github.com/apple/swift-evolution/blob/main/proposals/0212-compiler-version-directive.md>\n[SE-0213]: <https://github.com/apple/swift-evolution/blob/main/proposals/0213-literal-init-via-coercion.md>\n[SE-0214]: <https://github.com/apple/swift-evolution/blob/main/proposals/0214-DictionaryLiteral.md>\n[SE-0215]: <https://github.com/apple/swift-evolution/blob/main/proposals/0215-conform-never-to-hashable-and-equatable.md>\n[SE-0216]: <https://github.com/apple/swift-evolution/blob/main/proposals/0216-dynamic-callable.md>\n[SE-0217]: <https://github.com/apple/swift-evolution/blob/main/proposals/0217-bangbang.md>\n[SE-0218]: <https://github.com/apple/swift-evolution/blob/main/proposals/0218-introduce-compact-map-values.md>\n[SE-0219]: <https://github.com/apple/swift-evolution/blob/main/proposals/0219-package-manager-dependency-mirroring.md>\n[SE-0220]: <https://github.com/apple/swift-evolution/blob/main/proposals/0220-count-where.md>\n[SE-0221]: <https://github.com/apple/swift-evolution/blob/main/proposals/0221-character-properties.md>\n[SE-0222]: <https://github.com/apple/swift-evolution/blob/main/proposals/0222-lazy-compactmap-sequence.md>\n[SE-0223]: <https://github.com/apple/swift-evolution/blob/main/proposals/0223-array-uninitialized-initializer.md>\n[SE-0224]: <https://github.com/apple/swift-evolution/blob/main/proposals/0224-ifswift-lessthan-operator.md>\n[SE-0225]: <https://github.com/apple/swift-evolution/blob/main/proposals/0225-binaryinteger-iseven-isodd-ismultiple.md>\n[SE-0226]: <https://github.com/apple/swift-evolution/blob/main/proposals/0226-package-manager-target-based-dep-resolution.md>\n[SE-0227]: <https://github.com/apple/swift-evolution/blob/main/proposals/0227-identity-keypath.md>\n[SE-0228]: <https://github.com/apple/swift-evolution/blob/main/proposals/0228-fix-expressiblebystringinterpolation.md>\n[SE-0230]: <https://github.com/apple/swift-evolution/blob/main/proposals/0230-flatten-optional-try.md>\n[SE-0235]: <https://github.com/apple/swift-evolution/blob/main/proposals/0235-add-result.md>\n[SE-0242]: <https://github.com/apple/swift-evolution/blob/main/proposals/0242-default-values-memberwise.md>\n[SE-0244]: <https://github.com/apple/swift-evolution/blob/main/proposals/0244-opaque-result-types.md>\n[SE-0245]: <https://github.com/apple/swift-evolution/blob/main/proposals/0245-array-uninitialized-initializer.md>\n[SE-0249]: <https://github.com/apple/swift-evolution/blob/main/proposals/0249-key-path-literal-function-expressions.md>\n[SE-0252]: <https://github.com/apple/swift-evolution/blob/main/proposals/0252-keypath-dynamic-member-lookup.md>\n[SE-0253]: <https://github.com/apple/swift-evolution/blob/main/proposals/0253-callable.md>\n[SE-0254]: <https://github.com/apple/swift-evolution/blob/main/proposals/0254-static-subscripts.md>\n[SE-0266]: <https://github.com/apple/swift-evolution/blob/main/proposals/0266-synthesized-comparable-for-enumerations.md>\n[SE-0267]: <https://github.com/apple/swift-evolution/blob/main/proposals/0267-where-on-contextually-generic.md>\n[SE-0268]: <https://github.com/apple/swift-evolution/blob/main/proposals/0268-didset-semantics.md>\n[SE-0269]: <https://github.com/apple/swift-evolution/blob/main/proposals/0269-implicit-self-explicit-capture.md>\n[SE-0270]: <https://github.com/apple/swift-evolution/blob/main/proposals/0270-rangeset-and-collection-operations.md>\n[SE-0274]: <https://github.com/apple/swift-evolution/blob/main/proposals/0274-magic-file.md>\n[SE-0276]: <https://github.com/apple/swift-evolution/blob/main/proposals/0276-multi-pattern-catch-clauses.md>\n[SE-0279]: <https://github.com/apple/swift-evolution/blob/main/proposals/0279-multiple-trailing-closures.md>\n[SE-0280]: <https://github.com/apple/swift-evolution/blob/main/proposals/0280-enum-cases-as-protocol-witnesses.md>\n[SE-0284]: <https://github.com/apple/swift-evolution/blob/main/proposals/0284-multiple-variadic-parameters.md>\n[SE-0286]: <https://github.com/apple/swift-evolution/blob/main/proposals/0286-forward-scan-trailing-closures.md>\n[SE-0287]: <https://github.com/apple/swift-evolution/blob/main/proposals/0287-implicit-member-chains.md>\n[SE-0290]: <https://github.com/apple/swift-evolution/blob/main/proposals/0290-negative-availability.md>\n[SE-0293]: <https://github.com/apple/swift-evolution/blob/main/proposals/0293-extend-property-wrappers-to-function-and-closure-parameters.md>\n[SE-0296]: <https://github.com/apple/swift-evolution/blob/main/proposals/0296-async-await.md>\n[SE-0297]: <https://github.com/apple/swift-evolution/blob/main/proposals/0297-concurrency-objc.md>\n[SE-0298]: <https://github.com/apple/swift-evolution/blob/main/proposals/0298-asyncsequence.md>\n[SE-0299]: <https://github.com/apple/swift-evolution/blob/main/proposals/0299-extend-generic-static-member-lookup.md>\n[SE-0300]: <https://github.com/apple/swift-evolution/blob/main/proposals/0300-continuation.md>\n[SE-0302]: <https://github.com/apple/swift-evolution/blob/main/proposals/0302-concurrent-value-and-concurrent-closures.md>\n[SE-0306]: <https://github.com/apple/swift-evolution/blob/main/proposals/0306-actors.md>\n[SE-0309]: <https://github.com/apple/swift-evolution/blob/main/proposals/0309-unlock-existential-types-for-all-protocols.md>\n[SE-0310]: <https://github.com/apple/swift-evolution/blob/main/proposals/0310-effectful-readonly-properties.md>\n[SE-0311]: <https://github.com/apple/swift-evolution/blob/main/proposals/0311-task-locals.md>\n[SE-0313]: <https://github.com/apple/swift-evolution/blob/main/proposals/0313-actor-isolation-control.md>\n[SE-0315]: <https://github.com/apple/swift-evolution/blob/main/proposals/0315-placeholder-types.md>\n[SE-0316]: <https://github.com/apple/swift-evolution/blob/main/proposals/0316-global-actors.md>\n[SE-0320]: <https://github.com/apple/swift-evolution/blob/main/proposals/0320-codingkeyrepresentable.md>\n[SE-0322]: <https://github.com/apple/swift-evolution/blob/main/proposals/0322-temporary-buffers.md>\n[SE-0323]: <https://github.com/apple/swift-evolution/blob/main/proposals/0323-async-main-semantics.md>\n[SE-0324]: <https://github.com/apple/swift-evolution/blob/main/proposals/0324-c-lang-pointer-arg-conversion.md>\n[SE-0326]: <https://github.com/apple/swift-evolution/blob/main/proposals/0326-extending-multi-statement-closure-inference.md>\n[SE-0327]: <https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md>\n[SE-0328]: <https://github.com/apple/swift-evolution/blob/main/proposals/0328-structural-opaque-result-types.md>\n[SE-0329]: <https://github.com/apple/swift-evolution/blob/main/proposals/0329-clock-instant-duration.md>\n[SE-0331]: <https://github.com/apple/swift-evolution/blob/main/proposals/0331-remove-sendable-from-unsafepointer.md>\n[SE-0333]: <https://github.com/apple/swift-evolution/blob/main/proposals/0333-with-memory-rebound.md>\n[SE-0334]: <https://github.com/apple/swift-evolution/blob/main/proposals/0334-pointer-usability-improvements.md>\n[SE-0335]: <https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md>\n[SE-0336]: <https://github.com/apple/swift-evolution/blob/main/proposals/0336-distributed-actor-isolation.md>\n[SE-0337]: <https://github.com/apple/swift-evolution/blob/main/proposals/0337-support-incremental-migration-to-concurrency-checking.md>\n[SE-0338]: <https://github.com/apple/swift-evolution/blob/main/proposals/0338-clarify-execution-non-actor-async.md>\n[SE-0340]: <https://github.com/apple/swift-evolution/blob/main/proposals/0340-swift-noasync.md>\n[SE-0341]: <https://github.com/apple/swift-evolution/blob/main/proposals/0341-opaque-parameters.md>\n[SE-0343]: <https://github.com/apple/swift-evolution/blob/main/proposals/0343-top-level-concurrency.md>\n[SE-0345]: <https://github.com/apple/swift-evolution/blob/main/proposals/0345-if-let-shorthand.md>\n[SE-0346]: <https://github.com/apple/swift-evolution/blob/main/proposals/0346-light-weight-same-type-syntax.md>\n[SE-0347]: <https://github.com/apple/swift-evolution/blob/main/proposals/0347-type-inference-from-default-exprs.md>\n[SE-0349]: <https://github.com/apple/swift-evolution/blob/main/proposals/0349-unaligned-loads-and-stores.md>\n[SE-0350]: <https://github.com/apple/swift-evolution/blob/main/proposals/0350-regex-type-overview.md>\n[SE-0352]: <https://github.com/apple/swift-evolution/blob/main/proposals/0352-implicit-open-existentials.md>\n[SE-0353]: <https://github.com/apple/swift-evolution/blob/main/proposals/0353-constrained-existential-types.md>\n[SE-0354]: <https://github.com/apple/swift-evolution/blob/main/proposals/0354-regex-literals.md>\n[SE-0355]: <https://github.com/apple/swift-evolution/blob/main/proposals/0355-regex-syntax-run-time-construction.md>\n[SE-0357]: <https://github.com/apple/swift-evolution/blob/main/proposals/0357-regex-string-processing-algorithms.md>\n[SE-0358]: <https://github.com/apple/swift-evolution/blob/main/proposals/0358-primary-associated-types-in-stdlib.md>\n[SE-0362]: <https://github.com/apple/swift-evolution/blob/main/proposals/0362-piecemeal-future-features.md>\n[SE-0365]: <https://github.com/apple/swift-evolution/blob/main/proposals/0365-implicit-self-weak-capture.md>\n[SE-0366]: <https://github.com/apple/swift-evolution/blob/main/proposals/0366-move-function.md>\n[SE-0370]: <https://github.com/apple/swift-evolution/blob/main/proposals/0370-pointer-family-initialization-improvements.md>\n[SE-0376]: <https://github.com/apple/swift-evolution/blob/main/proposals/0376-function-back-deployment.md>\n[SE-0377]: <https://github.com/apple/swift-evolution/blob/main/proposals/0377-parameter-ownership-modifiers.md>\n[SE-0380]: <https://github.com/apple/swift-evolution/blob/main/proposals/0380-if-switch-expressions.md>\n[SE-0382]: https://github.com/apple/swift-evolution/blob/main/proposals/0382-expression-macros.md\n[SE-0389]: https://github.com/apple/swift-evolution/blob/main/proposals/0389-attached-macros.md\n[SE-0394]: https://github.com/apple/swift-evolution/blob/main/proposals/0394-swiftpm-expression-macros.md\n[SE-0397]: https://github.com/apple/swift-evolution/blob/main/proposals/0397-freestanding-declaration-macros.md\n[SE-0407]: https://github.com/apple/swift-evolution/blob/main/proposals/0407-member-macro-conformances.md\n[SE-0408]: https://github.com/apple/swift-evolution/blob/main/proposals/0408-pack-iteration.md\n[SE-0411]: https://github.com/apple/swift-evolution/blob/main/proposals/0411-isolated-default-values.md\n[SE-0412]: https://github.com/apple/swift-evolution/blob/main/proposals/0412-strict-concurrency-for-global-variables.md\n[SE-0413]: https://github.com/apple/swift-evolution/blob/main/proposals/0413-typed-throws.md\n[SE-0414]: https://github.com/apple/swift-evolution/blob/main/proposals/0414-region-based-isolation.md\n[SE-0417]: https://github.com/apple/swift-evolution/blob/main/proposals/0417-task-executor-preference.md\n[SE-0418]: https://github.com/apple/swift-evolution/blob/main/proposals/0418-inferring-sendable-for-methods.md\n[SE-0420]: https://github.com/apple/swift-evolution/blob/main/proposals/0420-inheritance-of-actor-isolation.md\n[SE-0422]: https://github.com/apple/swift-evolution/blob/main/proposals/0422-caller-side-default-argument-macro-expression.md\n[SE-0423]: https://github.com/apple/swift-evolution/blob/main/proposals/0423-dynamic-actor-isolation.md\n[SE-0427]: https://github.com/apple/swift-evolution/blob/main/proposals/0427-noncopyable-generics.md\n[SE-0429]: https://github.com/apple/swift-evolution/blob/main/proposals/0429-partial-consumption.md\n[SE-0432]: https://github.com/apple/swift-evolution/blob/main/proposals/0432-noncopyable-switch.md\n[SE-0430]: https://github.com/apple/swift-evolution/blob/main/proposals/0430-transferring-parameters-and-results.md\n[SE-0418]: https://github.com/apple/swift-evolution/blob/main/proposals/0418-inferring-sendable-for-methods.md\n[SE-0423]: https://github.com/apple/swift-evolution/blob/main/proposals/0423-dynamic-actor-isolation.md\n[SE-0424]: https://github.com/apple/swift-evolution/blob/main/proposals/0424-custom-isolation-checking-for-serialexecutor.md\n[SE-0428]: https://github.com/apple/swift-evolution/blob/main/proposals/0428-resolve-distributed-actor-protocols.md\n[SE-0431]: https://github.com/apple/swift-evolution/blob/main/proposals/0431-isolated-any-functions.md\n[SE-0442]: https://github.com/swiftlang/swift-evolution/blob/main/proposals/0442-allow-taskgroup-childtaskresult-type-to-be-inferred.md\n[SE-0444]: https://github.com/swiftlang/swift-evolution/blob/main/proposals/0444-member-import-visibility.md\n[#64927]: <https://github.com/apple/swift/issues/64927>\n[#42697]: <https://github.com/apple/swift/issues/42697>\n[#42728]: <https://github.com/apple/swift/issues/42728>\n[#43036]: <https://github.com/apple/swift/issues/43036>\n[#43248]: <https://github.com/apple/swift/issues/43248>\n[#43310]: <https://github.com/apple/swift/issues/43310>\n[#43621]: <https://github.com/apple/swift/issues/43621>\n[#44055]: <https://github.com/apple/swift/issues/44055>\n[#44138]: <https://github.com/apple/swift/issues/44138>\n[#44739]: <https://github.com/apple/swift/issues/44739>\n[#44784]: <https://github.com/apple/swift/issues/44784>\n[#44797]: <https://github.com/apple/swift/issues/44797>\n[#44995]: <https://github.com/apple/swift/issues/44995>\n[#45001]: <https://github.com/apple/swift/issues/45001>\n[#45213]: <https://github.com/apple/swift/issues/45213>\n[#45277]: <https://github.com/apple/swift/issues/45277>\n[#45293]: <https://github.com/apple/swift/issues/45293>\n[apple/swift-corelibs-foundation#4326]: <https://github.com/apple/swift-corelibs-foundation/issues/4326>\n[#46789]: <https://github.com/apple/swift/issues/46789>\n[#46831]: <https://github.com/apple/swift/issues/46831>\n[#48153]: <https://github.com/apple/swift/issues/48153>\n[#48289]: <https://github.com/apple/swift/issues/48289>\n[#48673]: <https://github.com/apple/swift/issues/48673>\n[#49631]: <https://github.com/apple/swift/issues/49631>\n[#49687]: <https://github.com/apple/swift/issues/49687>\n[#49799]: <https://github.com/apple/swift/issues/49799>\n[#50143]: <https://github.com/apple/swift/issues/50143>\n[#50338]: <https://github.com/apple/swift/issues/50338>\n[#50641]: <https://github.com/apple/swift/issues/50641>\n[#51064]: <https://github.com/apple/swift/issues/51064>\n[#51478]: <https://github.com/apple/swift/issues/51478>\n[#51546]: <https://github.com/apple/swift/issues/51546>\n[#52244]: <https://github.com/apple/swift/issues/52244>\n[#52471]: <https://github.com/apple/swift/issues/52471>\n[#53699]: <https://github.com/apple/swift/issues/53699>\n[#53830]: <https://github.com/apple/swift/issues/53830>\n[#54108]: <https://github.com/apple/swift/issues/54108>\n[#54246]: <https://github.com/apple/swift/issues/54246>\n[#57081]: <https://github.com/apple/swift/issues/57081>\n[#57225]: <https://github.com/apple/swift/issues/57225>\n[#56139]: <https://github.com/apple/swift/issues/56139>\n[#70065]: <https://github.com/apple/swift/pull/70065>\n[#71075]: <https://github.com/apple/swift/pull/71075>\n[swift-syntax]: https://github.com/apple/swift-syntax\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 60,
          "content": "cmake_minimum_required(VERSION 3.19.6)\n\n\n#  set_property(GLOBAL PROPERTY GLOBAL_DEPENDS_DEBUG_MODE 1)\n\n# TODO: Fix RPATH usage to be CMP0068 compliant\n# Disable Policy CMP0068 for CMake 3.9\n# rdar://37725888\nif(POLICY CMP0068)\n  cmake_policy(SET CMP0068 OLD)\nendif()\n\n# Honour CMAKE_CXX_STANDARD in try_compile(), needed for check_cxx_native_regex.\nif(POLICY CMP0067)\n  cmake_policy(SET CMP0067 NEW)\nendif()\n\n# Convert relative paths to absolute for subdirectory `target_sources`\nif(POLICY CMP0076)\n  cmake_policy(SET CMP0076 NEW)\nendif()\n\n# Don't clobber existing variable values when evaluating `option()` declarations.\nif(POLICY CMP0077)\n  cmake_policy(SET CMP0077 NEW)\nendif()\n\n# Add path for custom CMake modules.\nlist(APPEND CMAKE_MODULE_PATH\n    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules\")\n\nset(CMAKE_DISABLE_IN_SOURCE_BUILD YES)\n\nif(DEFINED CMAKE_JOB_POOLS)\n  # CMake < 3.11 doesn't support CMAKE_JOB_POOLS. Manually set the property.\n  set_property(GLOBAL PROPERTY JOB_POOLS \"${CMAKE_JOB_POOLS}\")\nelse()\n  # Make a job pool for things that can't yet be distributed\n  cmake_host_system_information(\n    RESULT localhost_logical_cores QUERY NUMBER_OF_LOGICAL_CORES)\n  set_property(GLOBAL APPEND PROPERTY JOB_POOLS local_jobs=${localhost_logical_cores})\n  # Put linking in that category\n  set(CMAKE_JOB_POOL_LINK local_jobs)\nendif()\n\nenable_language(C)\nenable_language(CXX)\n\n# On Windows, use MASM or MARMASM\nset(SWIFT_ASM_DIALECT ASM)\nset(SWIFT_ASM_EXT S)\nset(SWIFT_ASM_AVAILABLE YES)\nif(CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n  if(CMAKE_SYSTEM_PROCESSOR MATCHES \"ARM64\")\n    if(CMAKE_VERSION VERSION_LESS \"3.26\")\n      message(WARNING \"We can't build assembly language for ARM64 until CMake 3.26\")\n      set(SWIFT_ASM_AVAILABLE NO)\n    else()\n      set(SWIFT_ASM_DIALECT ASM_MARMASM)\n    endif()\n  else()\n    set(SWIFT_ASM_DIALECT ASM_MASM)\n  endif()\n  set(SWIFT_ASM_EXT asm)\nendif()\n\nif(SWIFT_ASM_AVAILABLE)\n  enable_language(${SWIFT_ASM_DIALECT})\nendif()\n\n# Use C++17.\nset(SWIFT_MIN_CXX_STANDARD 17)\n\n# Unset CMAKE_CXX_STANDARD if it's too low and in the CMakeCache.txt\nif($CACHE{CMAKE_CXX_STANDARD} AND $CACHE{CMAKE_CXX_STANDARD} LESS ${SWIFT_MIN_CXX_STANDARD})\n  message(WARNING \"Resetting cache value for CMAKE_CXX_STANDARD to ${SWIFT_MIN_CXX_STANDARD}\")\n  unset(CMAKE_CXX_STANDARD CACHE)\nendif()\n\n# Allow manually specified CMAKE_CXX_STANDARD if it's greater than the minimum\n# required C++ version\nif(DEFINED CMAKE_CXX_STANDARD AND CMAKE_CXX_STANDARD LESS ${SWIFT_MIN_CXX_STANDARD})\n  message(FATAL_ERROR \"Requested CMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD} which is less than the minimum C++ standard ${SWIFT_MIN_CXX_STANDARD}\")\nendif()\n\nset(CMAKE_CXX_STANDARD ${SWIFT_MIN_CXX_STANDARD} CACHE STRING \"C++ standard to conform to\")\nset(CMAKE_CXX_STANDARD_REQUIRED YES)\nset(CMAKE_CXX_EXTENSIONS NO)\n\n# First include general CMake utilities.\ninclude(SwiftUtils)\ninclude(CheckSymbolExists)\ninclude(CMakeDependentOption)\ninclude(CheckLanguage)\ninclude(GNUInstallDirs)\ninclude(SwiftCompilerCapability)\ninclude(FetchContent)\n\n# Enable Swift for the host compiler build if we have the language. It is\n# optional until we have a bootstrap story.\ncheck_language(Swift)\nif(CMAKE_Swift_COMPILER)\n  # we are not interested in logging any Swift module used\n  # when configuring the build system -- those are not useful\n  # since they will not contribute to the build of the compiler itself\n  unset(ENV{SWIFT_LOADED_MODULE_TRACE_FILE})\n\n  enable_language(Swift)\n  set(DEFAULT_SWIFT_MIN_RUNTIME_VERSION \"${CMAKE_Swift_COMPILER_VERSION}\")\nelse()\n  message(WARNING \"Swift compiler not found on path.\n  Cannot build compiler sources written in Swift.\n  If this is unexpected, please pass the path to the swiftc binary by defining the `CMAKE_Swift_COMPILER` variable.\")\n  set(DEFAULT_SWIFT_MIN_RUNTIME_VERSION)\nendif()\n\n# A convenience pattern to match Darwin platforms. Example:\n#  if(SWIFT_HOST_VARIANT MATCHES \"${SWIFT_DARWIN_VARIANTS}\")\n#     ...\n#  endif()\nset(SWIFT_DARWIN_VARIANTS \"^(macosx|iphoneos|iphonesimulator|appletvos|appletvsimulator|watchos|watchsimulator)\")\nset(SWIFT_DARWIN_EMBEDDED_VARIANTS \"^(iphoneos|iphonesimulator|appletvos|appletvsimulator|watchos|watchsimulator)\")\n\n# A convenient list to match Darwin SDKs. Example:\n#  if(\"${SWIFT_HOST_VARIANT_SDK}\" IN_LIST SWIFT_DARWIN_PLATFORMS)\n#    ...\n#  endif()\nset(SWIFT_DARWIN_PLATFORMS \"IOS\" \"IOS_SIMULATOR\" \"TVOS\" \"TVOS_SIMULATOR\" \"WATCHOS\" \"WATCHOS_SIMULATOR\" \"OSX\" \"XROS\" \"XROS_SIMULATOR\")\n\nset(SWIFT_APPLE_PLATFORMS ${SWIFT_DARWIN_PLATFORMS})\nif(SWIFT_FREESTANDING_FLAVOR STREQUAL \"apple\")\n  list(APPEND SWIFT_APPLE_PLATFORMS \"FREESTANDING\")\n  if(SWIFT_FREESTANDING_IS_DARWIN)\n    list(APPEND SWIFT_DARWIN_PLATFORMS \"FREESTANDING\")\n  endif()\nendif()\n\n# If SWIFT_HOST_VARIANT_SDK not given, try to detect from the CMAKE_SYSTEM_NAME.\nif(SWIFT_HOST_VARIANT_SDK)\n  set(SWIFT_HOST_VARIANT_SDK_default \"${SWIFT_HOST_VARIANT_SDK}\")\nelse()\n  if(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Linux\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"LINUX\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"FreeBSD\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"FREEBSD\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"OpenBSD\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"OPENBSD\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"CYGWIN\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"CYGWIN\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Windows\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"WINDOWS\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Haiku\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"HAIKU\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Android\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"ANDROID\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Darwin\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"OSX\")\n  elseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"WASI\")\n    set(SWIFT_HOST_VARIANT_SDK_default \"WASI\")\n  else()\n    message(FATAL_ERROR \"Unable to detect SDK for host system: ${CMAKE_SYSTEM_NAME}\")\n  endif()\nendif()\n\n# If SWIFT_HOST_VARIANT_ARCH not given, try to detect from the CMAKE_SYSTEM_PROCESSOR.\nif(SWIFT_HOST_VARIANT_ARCH)\n  set(SWIFT_HOST_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\nelse()\n  if(CMAKE_SYSTEM_PROCESSOR MATCHES \"x86_64|AMD64|amd64\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"x86_64\")\n  elseif(CMAKE_SYSTEM_PROCESSOR MATCHES \"aarch64|ARM64|arm64\")\n    if(SWIFT_HOST_VARIANT_SDK_default STREQUAL \"OSX\")\n      set(SWIFT_HOST_VARIANT_ARCH_default \"arm64\")\n    else()\n      set(SWIFT_HOST_VARIANT_ARCH_default \"aarch64\")\n    endif()\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"ppc64\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"powerpc64\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"ppc\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"powerpc\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"ppc64le\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"powerpc64le\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"s390x\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"s390x\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" MATCHES \"armv5|armv5te\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"armv5\")\n  # FIXME: Only matches v6l/v7l - by far the most common variants\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"armv6l\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"armv6\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" MATCHES \"armv7l|armv7-a\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"armv7\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"IA64\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"itanium\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" MATCHES \"(x86|i686)\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"i686\")\n  elseif(\"${CMAKE_SYSTEM_PROCESSOR}\" STREQUAL \"wasm32\")\n    set(SWIFT_HOST_VARIANT_ARCH_default \"wasm32\")\n  else()\n    message(FATAL_ERROR \"Unrecognized architecture on host system: ${CMAKE_SYSTEM_PROCESSOR}\")\n  endif()\nendif()\n\nset(SWIFT_HOST_VARIANT_SDK \"${SWIFT_HOST_VARIANT_SDK_default}\" CACHE STRING\n    \"Deployment sdk for Swift host tools (the compiler).\")\nset(SWIFT_HOST_VARIANT_ARCH \"${SWIFT_HOST_VARIANT_ARCH_default}\" CACHE STRING\n    \"Deployment arch for Swift host tools (the compiler).\")\n\n#\n# User-configurable options that control the inclusion and default build\n# behavior for components which may not strictly be necessary (tools, examples,\n# and tests).\n#\n# This is primarily to support building smaller or faster project files.\n#\n\noption(SWIFT_APPEND_VC_REV\n  \"Embed the version control system revision in Swift\"\n  TRUE)\n\noption(SWIFT_INCLUDE_TOOLS\n    \"Generate build targets for swift tools\"\n    TRUE)\n\noption(SWIFT_BUILD_REMOTE_MIRROR\n    \"Build the Swift Remote Mirror Library\"\n    TRUE)\n\noption(SWIFT_BUILD_DYNAMIC_STDLIB\n    \"Build dynamic variants of the Swift standard library\"\n    TRUE)\n\noption(SWIFT_BUILD_STATIC_STDLIB\n    \"Build static variants of the Swift standard library\"\n    FALSE)\n\noption(SWIFT_STDLIB_STATIC_PRINT\n    \"Build compile-time evaluated vprintf()\"\n    FALSE)\n\noption(SWIFT_STDLIB_ENABLE_UNICODE_DATA\n    \"Include Unicode data files in the standard library.\n    NOTE: Disabling this will cause many String methods to crash.\"\n    TRUE)\n\noption(SWIFT_BUILD_CLANG_OVERLAYS\n  \"Build Swift overlays for the clang builtin modules\"\n  TRUE)\n\n# The SDK overlay is provided by the SDK itself on Darwin platforms.\nif(SWIFT_HOST_VARIANT_SDK IN_LIST SWIFT_DARWIN_PLATFORMS)\n  set(SWIFT_BUILD_DYNAMIC_SDK_OVERLAY_default FALSE)\nelse()\n  set(SWIFT_BUILD_DYNAMIC_SDK_OVERLAY_default TRUE)\nendif()\n\noption(SWIFT_BUILD_DYNAMIC_SDK_OVERLAY\n    \"Build dynamic variants of the Swift SDK overlay\"\n    \"${SWIFT_BUILD_DYNAMIC_SDK_OVERLAY_default}\")\n\noption(SWIFT_BUILD_STATIC_SDK_OVERLAY\n    \"Build static variants of the Swift SDK overlay\"\n    FALSE)\n\noption(SWIFT_BUILD_STDLIB_EXTRA_TOOLCHAIN_CONTENT\n    \"If not building stdlib, controls whether to build 'stdlib/toolchain' content\"\n    TRUE)\n\noption(SWIFT_BUILD_STDLIB_CXX_MODULE\n  \"If not building stdlib, controls whether to build the Cxx module\"\n  TRUE)\n\n# In many cases, the CMake build system needs to determine whether to include\n# a directory, or perform other actions, based on whether the stdlib or SDK is\n# being built at all -- statically or dynamically. Please note that these\n# flags are not related to the deprecated build-script-impl arguments\n# 'build-swift-stdlib' and 'build-swift-sdk-overlay'. These are not flags that\n# the build script should be able to set.\nif(SWIFT_BUILD_DYNAMIC_STDLIB OR SWIFT_BUILD_STATIC_STDLIB)\n  set(SWIFT_BUILD_STDLIB TRUE)\nelse()\n  set(SWIFT_BUILD_STDLIB FALSE)\nendif()\n\nif(SWIFT_BUILD_DYNAMIC_SDK_OVERLAY OR SWIFT_BUILD_STATIC_SDK_OVERLAY)\n  set(SWIFT_BUILD_SDK_OVERLAY TRUE)\nelse()\n  set(SWIFT_BUILD_SDK_OVERLAY FALSE)\nendif()\n\noption(SWIFT_BUILD_PERF_TESTSUITE\n    \"Create in-tree targets for building swift performance benchmarks.\"\n    FALSE)\n\noption(SWIFT_INCLUDE_TESTS \"Create targets for building/running tests.\" TRUE)\n\noption(SWIFT_INCLUDE_TEST_BINARIES\n  \"Create targets for building/running test binaries even if SWIFT_INCLUDE_TESTS is disabled\"\n  TRUE)\n\noption(SWIFT_INCLUDE_DOCS\n    \"Create targets for building docs.\"\n    TRUE)\n\nset(_swift_include_apinotes_default FALSE)\nif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n  set(_swift_include_apinotes_default TRUE)\nendif()\n\noption(SWIFT_INCLUDE_APINOTES\n  \"Create targets for installing the remaining apinotes in the built toolchain.\"\n  ${_swift_include_apinotes_default})\n\n#\n# Miscellaneous User-configurable options.\n#\n# TODO: Please categorize these!\n#\n\nif (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n  set(CMAKE_BUILD_TYPE \"Debug\" CACHE STRING\n      \"Build type for Swift [Debug, RelWithDebInfo, Release, MinSizeRel]\"\n      FORCE)\n  message(STATUS \"No build type was specified, will default to ${CMAKE_BUILD_TYPE}\")\nendif()\n\nset(SWIFT_ANALYZE_CODE_COVERAGE FALSE CACHE STRING\n    \"Build Swift with code coverage instrumenting enabled [FALSE, NOT-MERGED, MERGED]\")\n\ninclude(${CMAKE_CURRENT_LIST_DIR}/cmake/SwiftVersion.cmake)\n\nset(SWIFT_VENDOR \"\" CACHE STRING\n    \"The vendor name of the Swift compiler\")\nset(SWIFT_COMPILER_VERSION \"\" CACHE STRING\n    \"The internal version of the Swift compiler\")\nset(CLANG_COMPILER_VERSION \"\" CACHE STRING\n    \"The internal version of the Clang compiler\")\n\noption(SWIFT_DISABLE_DEAD_STRIPPING\n      \"Turn off Darwin-specific dead stripping for Swift host tools.\" FALSE)\n\nset(SWIFT_TOOLS_ENABLE_LTO OFF CACHE STRING \"Build Swift tools with LTO. One\n    must specify the form of LTO by setting this to one of: 'full', 'thin'. This\n    option only affects the tools that run on the host (the compiler), and has\n    no effect on the target libraries (the standard library and the runtime).\")\n\noption(SWIFT_TOOLS_LD64_LTO_CODEGEN_ONLY_FOR_SUPPORTING_TARGETS\n    \"When building ThinLTO using ld64 on Darwin, controls whether to opt out of\n    LLVM IR optimizations when linking targets that will get\n    little benefit from it (e.g. tools for bootstrapping or\n    debugging Swift)\"\n    FALSE)\n\nset(BOOTSTRAPPING_MODE HOSTTOOLS CACHE STRING [=[\nHow to build the swift compiler modules. Possible values are\n    HOSTTOOLS:     build with a pre-installed toolchain\n    BOOTSTRAPPING: build with a 2-stage bootstrapping process\n    BOOTSTRAPPING-WITH-HOSTLIBS:   build with a 2-stage bootstrapping process,\n                   but the compiler links against the host system swift libs (macOS only)\n    CROSSCOMPILE:  cross-compiledwith a native host compiler, provided in\n                   `SWIFT_NATIVE_SWIFT_TOOLS_PATH` (non-Darwin only)\n    CROSSCOMPILE-WITH-HOSTLIBS:    build with a bootstrapping-with-hostlibs compiled\n                                   compiler, provided in `SWIFT_NATIVE_SWIFT_TOOLS_PATH`\n]=])\n\noption(BRIDGING_MODE [=[\nHow swift-C++ bridging code is compiled:\n    INLINE:       uses full swift C++ interop and briding functions are inlined\n    PURE:         uses limited C++ interp an bridging functions are not inlined\n    DEFAULT:      based on the build configuration\n]=] DEFAULT)\n\noption(SWIFT_USE_SYMLINKS \"Use symlinks instead of copying binaries\" ${CMAKE_HOST_UNIX})\nset(SWIFT_COPY_OR_SYMLINK \"copy_if_different\")\nset(SWIFT_COPY_OR_SYMLINK_DIR \"copy_directory\")\nif(SWIFT_USE_SYMLINKS)\n  set(SWIFT_COPY_OR_SYMLINK \"create_symlink\")\n  set(SWIFT_COPY_OR_SYMLINK_DIR \"create_symlink\")\nendif()\n\n# The following only works with the Ninja generator in CMake >= 3.0.\nset(SWIFT_PARALLEL_LINK_JOBS \"\" CACHE STRING\n  \"Define the maximum number of linker jobs for swift.\")\n\noption(SWIFT_FORCE_OPTIMIZED_TYPECHECKER \"Override the optimization setting of\n  the type checker so that it always compiles with optimization. This eases\n  debugging after type checking occurs by speeding up type checking\" FALSE)\n\n# Allow building Swift with Clang's Profile Guided Optimization\nif(SWIFT_PROFDATA_FILE AND EXISTS ${SWIFT_PROFDATA_FILE})\n  if(NOT CMAKE_C_COMPILER_ID MATCHES Clang)\n    message(FATAL_ERROR \"SWIFT_PROFDATA_FILE can only be specified when compiling with clang\")\n  endif()\n  add_definitions(\"-fprofile-instr-use=${SWIFT_PROFDATA_FILE}\")\nendif()\n\nset(SWIFT_TOOLS_INSTALL_DIR \"${CMAKE_INSTALL_BINDIR}\" CACHE PATH\n  \"Path for binary subdirectory to use during installation.\n  Used by add_swift_tool_symlink in AddSwift.cmake so that llvm_install_symlink generates the installation script properly.\")\n\n#\n# User-configurable Swift Standard Library specific options.\n#\n# TODO: Once the stdlib/compiler builds are split, this should be sunk into the\n# stdlib cmake.\n#\n\nset(SWIFT_STDLIB_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING\n    \"Build type for the Swift standard library and SDK overlays [Debug, RelWithDebInfo, Release, MinSizeRel]\")\n# Allow the user to specify the standard library CMAKE_MSVC_RUNTIME_LIBRARY\n# value.  The following values are valid:\n#   - MultiThreaded (/MT)\n#   - MultiThreadedDebug (/MTd)\n#   - MultiThreadedDLL (/MD)\n#   - MultiThreadedDebugDLL (/MDd)\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  set(SWIFT_STDLIB_MSVC_RUNTIME_LIBRARY_default MultiThreadedDebugDLL)\nelse()\n  set(SWIFT_STDLIB_MSVC_RUNTIME_LIBRARY_default MultiThreadedDLL)\nendif()\nset(SWIFT_STDLIB_MSVC_RUNTIME_LIBRARY\n  ${SWIFT_STDLIB_MSVC_RUNTIME_LIBRARY_default}\n  CACHE STRING \"MSVC Runtime Library for the standard library\")\n\nif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Windows\" AND BOOTSTRAPPING_MODE STREQUAL \"HOSTTOOLS\" AND\n    CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  # Building with the host Swift toolchain requires linking just-built binaries\n  # against the host Swift runtime. In debug builds, that means linking a debug\n  # binary against a release binary. The MSVC linker does not normally permit\n  # this, since debug builds enable bounds-checked C++ iterators by default,\n  # which are not ABI-compatible with regular iterators. Let's instruct MSVC to\n  # disable bounds-checked iterators to make it possible to do a debug build of\n  # the Swift compiler with a host toolchain.\n  add_definitions(-D_ITERATOR_DEBUG_LEVEL=0)\nendif()\n\nif(BRIDGING_MODE STREQUAL \"DEFAULT\" OR NOT BRIDGING_MODE)\n  if(CMAKE_BUILD_TYPE STREQUAL \"Debug\" OR \"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"WINDOWS\" OR (CMAKE_Swift_COMPILER AND CMAKE_Swift_COMPILER_VERSION VERSION_LESS 5.8))\n    # In debug builds, to workaround a problem with LLDB's `po` command (rdar://115770255).\n    # If the host Swift version is less than 5.8, use pure mode to workaround a C++ interop compiler crash.\n    set(BRIDGING_MODE \"PURE\")\n  else()\n    set(BRIDGING_MODE \"INLINE\")\n  endif()\nendif()\n\nis_build_type_optimized(\"${SWIFT_STDLIB_BUILD_TYPE}\" swift_optimized)\nif(swift_optimized)\n  set(SWIFT_STDLIB_ASSERTIONS_default FALSE)\nelse()\n  set(SWIFT_STDLIB_ASSERTIONS_default TRUE)\nendif()\noption(SWIFT_STDLIB_ASSERTIONS\n    \"Enable internal checks for the Swift standard library (useful for debugging the library itself, does not affect checks required for safety)\"\n    \"${SWIFT_STDLIB_ASSERTIONS_default}\")\n\noption(SWIFT_BUILD_RUNTIME_WITH_HOST_COMPILER\n       \"Use the host compiler and not the internal clang to build the swift runtime\"\n       FALSE)\n\noption(SWIFT_RUN_TESTS_WITH_HOST_COMPILER\n       \"Run tests against the host compiler and not the just built swift\"\n       FALSE)\n\nset(SWIFT_SDKS \"\" CACHE STRING\n    \"If non-empty, limits building target binaries only to specified SDKs (despite other SDKs being available)\")\n\nset(SWIFT_PRIMARY_VARIANT_SDK \"\" CACHE STRING\n    \"Primary SDK for target binaries\")\nset(SWIFT_PRIMARY_VARIANT_ARCH \"\" CACHE STRING\n    \"Primary arch for target binaries\")\n\nset(SWIFT_NATIVE_LLVM_TOOLS_PATH \"\" CACHE STRING\n    \"Path to the directory that contains LLVM tools that are executable on the build machine\")\n\nset(SWIFT_NATIVE_CLANG_TOOLS_PATH \"\" CACHE STRING\n    \"Path to the directory that contains Clang tools that are executable on the build machine\")\n\nset(SWIFT_NATIVE_SWIFT_TOOLS_PATH \"\" CACHE STRING\n   \"Path to the directory that contains Swift tools that are executable on the build machine\")\n\noption(SWIFT_STDLIB_ENABLE_SIB_TARGETS\n       \"Should we generate sib targets for the stdlib or not?\"\n       FALSE)\n\noption(SWIFT_STDLIB_BUILD_SYMBOL_GRAPHS\n       \"Whether to build symbol graphs for the stdlib, for use in documentation.\"\n       FALSE)\n\n\nset(SWIFT_DARWIN_SUPPORTED_ARCHS \"\" CACHE STRING\n  \"Semicolon-separated list of architectures to configure on Darwin platforms. \\\nIf left empty all default architectures are configured.\")\n\nset(SWIFT_DARWIN_MODULE_ARCHS \"\" CACHE STRING\n  \"Semicolon-separated list of architectures to configure Swift module-only \\\ntargets on Darwin platforms. These targets are in addition to the full \\\nlibrary targets.\")\n\nset(SWIFT_MIN_RUNTIME_VERSION \"${DEFAULT_SWIFT_MIN_RUNTIME_VERSION}\" CACHE STRING\n  \"Specify the minimum version of the runtime that we target when building \\\nthe compiler itself. This is used on non-Darwin platforms to ensure \\\nthat it's possible to build the compiler using host tools.\")\n\n#\n# User-configurable Linux specific options.\n#\n\nset(SWIFT_MUSL_PATH \"/usr/local/musl\" CACHE STRING\n  \"Path to the directory that contains the Musl headers and libraries. \\\nThis is only required if we have been asked to build the Musl SDK, and \\\ndefaults to the default install location for Musl.\")\n\nset(SWIFT_SDK_LINUX_STATIC_ARCHITECTURES \"\" CACHE STRING\n  \"The architectures to configure when using the static Linux SDK.\")\n\nset(SWIFT_SDK_LINUX_ARCHITECTURES \"\" CACHE STRING\n  \"The architectures to configure when using the Linux SDK.\")\n\n#\n# User-configurable Android specific options.\n#\n\nset(SWIFT_ANDROID_API_LEVEL \"\" CACHE STRING\n  \"Version number for the Android API\")\n\nset(SWIFT_ANDROID_NDK_PATH \"\" CACHE STRING\n  \"Path to the directory that contains the Android NDK tools that are executable on the build machine\")\nset(SWIFT_ANDROID_DEPLOY_DEVICE_PATH \"\" CACHE STRING\n  \"Path on an Android device where build products will be pushed. These are used when running the test suite against the device\")\n\n#\n# User-configurable WebAssembly specific options.\n#\n\noption(SWIFT_ENABLE_WASI_THREADS\n  \"Build the Standard Library with WASI threads support\"\n  FALSE)\n\n#\n# User-configurable Darwin-specific options.\n#\noption(SWIFT_EMBED_BITCODE_SECTION\n    \"If non-empty, embeds LLVM bitcode binary sections in the standard library and overlay binaries for supported platforms\"\n    FALSE)\n\noption(SWIFT_EMBED_BITCODE_SECTION_HIDE_SYMBOLS\n  \"If non-empty, when embedding the LLVM bitcode binary sections into the relevant binaries, pass in -bitcode_hide_symbols. Does nothing if SWIFT_EMBED_BITCODE_SECTION is set to false.\"\n  FALSE)\n\nif(\"${SWIFT_HOST_VARIANT_SDK}\" MATCHES \"(OSX|IOS*|TVOS*|WATCHOS*)\")\n  set(SWIFT_RUNTIME_CRASH_REPORTER_CLIENT_default TRUE)\nelse()\n  set(SWIFT_RUNTIME_CRASH_REPORTER_CLIENT_default FALSE)\nendif()\n\noption(SWIFT_RUNTIME_CRASH_REPORTER_CLIENT\n    \"Whether to enable CrashReporter integration\"\n    \"${SWIFT_RUNTIME_CRASH_REPORTER_CLIENT_default}\")\n\nset(SWIFT_DARWIN_XCRUN_TOOLCHAIN \"XcodeDefault\" CACHE STRING\n    \"The name of the toolchain to pass to 'xcrun'\")\n\nset(SWIFT_DARWIN_STDLIB_INSTALL_NAME_DIR \"/usr/lib/swift\" CACHE STRING\n    \"The directory of the install_name for standard library dylibs\")\n\n# We don't want to use the same install_name_dir as the standard library which\n# will be installed in /usr/lib/swift. These private libraries should continue\n# to use @rpath for now.\nset(SWIFT_DARWIN_STDLIB_PRIVATE_INSTALL_NAME_DIR \"@rpath\" CACHE STRING\n    \"The directory of the install_name for the private standard library dylibs\")\n\noption(SWIFT_ALLOW_LINKING_SWIFT_CONTENT_IN_DARWIN_TOOLCHAIN\n  \"Adds search paths for libraries in the toolchain\n   when building Swift programs.\n   This is needed to support Apple internal configurations.\"\n  FALSE)\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_OSX \"13.0\" CACHE STRING\n    \"Minimum deployment target version for OS X\")\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_IOS \"16.0\" CACHE STRING\n    \"Minimum deployment target version for iOS\")\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_TVOS \"16.0\" CACHE STRING\n    \"Minimum deployment target version for tvOS\")\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_WATCHOS \"6.0\" CACHE STRING\n    \"Minimum deployment target version for watchOS\")\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_XROS \"1.0\" CACHE STRING\n    \"Minimum deployment target version for xrOS\")\n\n#\n#  Compatibility library deployment versions\n#\n\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_OSX \"10.9\")\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_IOS \"7.0\")\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_TVOS \"9.0\")\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_WATCHOS \"2.0\")\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_XROS \"1.0\")\nset(COMPATIBILITY_MINIMUM_DEPLOYMENT_VERSION_MACCATALYST \"13.1\")\n\n#\n# User-configurable debugging options.\n#\n\noption(SWIFT_SIL_VERIFY_ALL\n    \"Run SIL verification after each transform when building Swift files in the build process\"\n    FALSE)\n\noption(SWIFT_SIL_VERIFY_ALL_MACOS_ONLY\n    \"Run SIL verification after each transform when building the macOS stdlib\"\n    FALSE)\n\noption(SWIFT_EMIT_SORTED_SIL_OUTPUT\n    \"Sort SIL output by name to enable diffing of output\"\n    FALSE)\n\nif(SWIFT_STDLIB_ASSERTIONS)\n  set(SWIFT_RUNTIME_CLOBBER_FREED_OBJECTS_default TRUE)\nelse()\n  set(SWIFT_RUNTIME_CLOBBER_FREED_OBJECTS_default FALSE)\nendif()\n\noption(SWIFT_RUNTIME_CLOBBER_FREED_OBJECTS\n    \"Overwrite memory for deallocated Swift objects\"\n    \"${SWIFT_RUNTIME_CLOBBER_FREED_OBJECTS_default}\")\n\noption(SWIFT_STDLIB_SIL_DEBUGGING\n    \"Compile the Swift standard library with -sil-based-debuginfo to enable debugging and profiling on SIL level\"\n    FALSE)\n\noption(SWIFT_CHECK_INCREMENTAL_COMPILATION\n    \"Check if incremental compilation works when compiling the Swift libraries\"\n    FALSE)\n\noption(SWIFT_ENABLE_ARRAY_COW_CHECKS\n    \"Compile the stdlib with Array COW checks enabled (only relevant for assert builds)\"\n    FALSE)\n\noption(SWIFT_REPORT_STATISTICS\n    \"Create json files which contain internal compilation statistics\"\n    FALSE)\n\n# Only Darwin platforms enable ObjC interop by default.\nif(\"${SWIFT_HOST_VARIANT_SDK}\" MATCHES \"(OSX|IOS*|TVOS*|WATCHOS*|XROS*)\")\n  set(SWIFT_STDLIB_ENABLE_OBJC_INTEROP_default TRUE)\nelse()\n  set(SWIFT_STDLIB_ENABLE_OBJC_INTEROP_default FALSE)\nendif()\n\n# Used by stdlib/toolchain as well, so this cannot be in stdlib/CMakeLists.txt\noption(SWIFT_STDLIB_ENABLE_OBJC_INTEROP\n       \"Should stdlib be built with Obj-C interop.\"\n       \"${SWIFT_STDLIB_ENABLE_OBJC_INTEROP_default}\")\n\nset(SWIFT_DEBUGINFO_NON_LTO_ARGS \"-g\" CACHE STRING\n    \"Compiler options to use when building the compiler in debug or debuginfo mode. These do not apply when linking with LTO\")\n\n#\n# User-configurable experimental options.  Do not use in production builds.\n#\n\nset(SWIFT_EXPERIMENTAL_EXTRA_FLAGS \"\" CACHE STRING\n    \"Extra flags to pass when compiling swift files.  Use this option *only* for one-off experiments\")\n\nset(SWIFT_EXPERIMENTAL_EXTRA_REGEXP_FLAGS \"\" CACHE STRING\n  \"A list of [module_regexp1;flags1;module_regexp2;flags2,...] which can be used to apply specific flags to modules that match a cmake regexp. It always applies the first regexp that matches.\")\n\nset(SWIFT_EXPERIMENTAL_EXTRA_NEGATIVE_REGEXP_FLAGS \"\" CACHE STRING\n    \"A list of [module_regexp1;flags1;module_regexp2;flags2,...] which can be used to apply specific flags to modules that do not match a cmake regexp. It always applies the first regexp that does not match. The reason this is necessary is that cmake does not provide negative matches in the regex. Instead you have to use NOT in the if statement requiring a separate variable.\")\n\noption(SWIFT_RUNTIME_ENABLE_LEAK_CHECKER\n  \"Should the runtime be built with support for non-thread-safe leak detecting entrypoints\"\n  FALSE)\n\noption(SWIFT_ENABLE_RUNTIME_FUNCTION_COUNTERS\n  \"Enable runtime function counters and expose the API.\"\n  FALSE)\n\noption(SWIFT_ENABLE_STDLIBCORE_EXCLUSIVITY_CHECKING\n  \"Build stdlibCore with exclusivity checking enabled\"\n  FALSE)\n\noption(SWIFT_STDLIB_ENABLE_DEBUG_PRECONDITIONS_IN_RELEASE\n  \"Enable _debugPrecondition checks in the stdlib in Release configurations\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING\n  \"Enable experimental Swift differentiable programming features\"\n  FALSE)\n\noption(SWIFT_IMPLICIT_CONCURRENCY_IMPORT\n  \"Implicitly import the Swift concurrency module\"\n  TRUE)\n\noption(SWIFT_IMPLICIT_BACKTRACING_IMPORT\n  \"Implicitly import the Swift backtracing module\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_CONCURRENCY\n  \"Enable build of the Swift concurrency module\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_CXX_INTEROP\n  \"Enable experimental C++ interop modules\"\n  TRUE)\n\noption(SWIFT_ENABLE_CXX_INTEROP_SWIFT_BRIDGING_HEADER\n  \"Install the <swift/bridging> C++ interoperability header alongside compiler\"\n  TRUE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_DISTRIBUTED\n  \"Enable experimental distributed actors and functions\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_STRING_PROCESSING\n  \"Enable experimental string processing\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_OBSERVATION\n  \"Enable build of the Swift observation module\"\n  FALSE)\n\noption(SWIFT_STDLIB_ENABLE_STRICT_CONCURRENCY_COMPLETE\n  \"Build the stdlib with -strict-concurrency=complete\"\n  FALSE)\n\noption(SWIFT_ENABLE_SYNCHRONIZATION\n  \"Enable build of the Swift Synchronization module\"\n  FALSE)\n\noption(SWIFT_ENABLE_VOLATILE\n  \"Enable build of the Swift Volatile module\"\n  FALSE)\n\noption(SWIFT_ENABLE_DISPATCH\n  \"Enable use of libdispatch\"\n  TRUE)\n\noption(SWIFT_ENABLE_GLOBAL_ISEL_ARM64\n  \"Enable global isel on arm64\"\n  FALSE)\n\noption(SWIFT_ENABLE_EXPERIMENTAL_PARSER_VALIDATION\n  \"Enable experimental SwiftParser validation by default\"\n  FALSE)\n\ncmake_dependent_option(SWIFT_BUILD_SOURCEKIT\n  \"Build SourceKit\" TRUE\n  \"SWIFT_ENABLE_DISPATCH\" FALSE)\ncmake_dependent_option(SWIFT_ENABLE_SOURCEKIT_TESTS\n  \"Enable running SourceKit tests\" TRUE\n  \"SWIFT_BUILD_SOURCEKIT\" FALSE)\n\noption(SWIFT_THREADING_PACKAGE\n  \"Override the threading package used for the build.  This can either be a\n   single package name, or a semicolon separated sequence of sdk:package pairs.\n   Valid package names are 'pthreads', 'darwin', 'linux', 'win32', 'c11', 'none'\n   or the empty string for the SDK default.\")\n\noption(SWIFT_THREADING_HAS_DLSYM\n  \"Enable the use of the dlsym() function.  This gets used to provide TSan\n   support on some platforms.\"\n  TRUE)\n\noption(SWIFT_ENABLE_MACCATALYST\n  \"Build the Standard Library and overlays with MacCatalyst support\"\n  FALSE)\n\noption(SWIFT_ENABLE_BACKTRACING\n  \"Build backtracing runtime support\"\n  FALSE)\n\nset(SWIFT_DARWIN_DEPLOYMENT_VERSION_MACCATALYST \"14.5\" CACHE STRING\n  \"Minimum deployment target version for macCatalyst\")\n\n#\n# End of user-configurable options.\n#\n\nset(SWIFT_BUILT_STANDALONE FALSE)\nif(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n  set(SWIFT_BUILT_STANDALONE TRUE)\nendif()\n\nif(SWIFT_BUILT_STANDALONE)\n  project(Swift C CXX ${SWIFT_ASM_DIALECT})\nendif()\n\nif(MSVC OR \"${CMAKE_SIMULATE_ID}\" STREQUAL \"MSVC\")\n  include(ClangClCompileRules)\nelseif(UNIX)\n  include(UnixCompileRules)\nendif()\n\nif(CMAKE_C_COMPILER_ID MATCHES Clang)\n  add_compile_options($<$<OR:$<COMPILE_LANGUAGE:C>,$<COMPILE_LANGUAGE:CXX>>:-Werror=gnu>)\nendif()\n\n# Make some warnings errors as they are commonly occurring and flood the build\n# with unnecessary noise.\nif(CMAKE_C_COMPILER_ID MATCHES Clang)\n  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-Werror=c++98-compat-extra-semi>)\nendif()\n\noption(SWIFT_BUILD_SWIFT_SYNTAX\n  \"Enable building swift syntax\"\n  FALSE)\n\noption(SWIFT_BUILD_REGEX_PARSER_IN_COMPILER\n    \"Build the Swift regex parser as part of the compiler.\"\n    TRUE)\nif(SWIFT_BUILD_REGEX_PARSER_IN_COMPILER AND NOT SWIFT_BUILD_SWIFT_SYNTAX)\n  message(WARNING \"Force setting SWIFT_BUILD_REGEX_PARSER_IN_COMPILER=OFF because Swift parser integration is disabled\")\n  set(SWIFT_BUILD_REGEX_PARSER_IN_COMPILER OFF)\nendif()\n\nset(SWIFT_BUILD_HOST_DISPATCH FALSE)\nif(SWIFT_ENABLE_DISPATCH AND NOT CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n  # Only build libdispatch for the host if the host tools are being built and\n  # specifically if these two libraries that depend on it are built.\n  if(SWIFT_INCLUDE_TOOLS AND SWIFT_BUILD_SOURCEKIT)\n    set(SWIFT_BUILD_HOST_DISPATCH TRUE)\n  endif()\n\n  if(SWIFT_BUILD_HOST_DISPATCH)\n    if(NOT EXISTS \"${SWIFT_PATH_TO_LIBDISPATCH_SOURCE}\")\n      message(SEND_ERROR \"SourceKit requires libdispatch on non-Darwin hosts.  Please specify SWIFT_PATH_TO_LIBDISPATCH_SOURCE\")\n    endif()\n  endif()\nendif()\n\nfile(STRINGS \"utils/availability-macros.def\" SWIFT_STDLIB_AVAILABILITY_DEFINITIONS)\nlist(FILTER SWIFT_STDLIB_AVAILABILITY_DEFINITIONS EXCLUDE REGEX \"^\\\\s*(#.*)?$\")\n\n#\n# Include CMake modules\n#\n\ninclude(CheckCXXSourceRuns)\ninclude(CMakeParseArguments)\ninclude(CMakePushCheckState)\n\n# Print out path and version of any installed commands\nmessage(STATUS \"CMake (${CMAKE_COMMAND}) Version: ${CMAKE_VERSION}\")\nif(XCODE)\n  set(version_flag -version)\nelse()\n  set(version_flag --version)\nendif()\nexecute_process(COMMAND ${CMAKE_MAKE_PROGRAM} ${version_flag}\n  OUTPUT_VARIABLE _CMAKE_MAKE_PROGRAM_VERSION\n  OUTPUT_STRIP_TRAILING_WHITESPACE)\nmessage(STATUS \"CMake Make Program (${CMAKE_MAKE_PROGRAM}) Version: ${_CMAKE_MAKE_PROGRAM_VERSION}\")\nmessage(STATUS \"C Compiler (${CMAKE_C_COMPILER}) Version: ${CMAKE_C_COMPILER_VERSION}\")\nmessage(STATUS \"C++ Compiler (${CMAKE_CXX_COMPILER}) Version: ${CMAKE_CXX_COMPILER_VERSION}\")\nmessage(STATUS \"Assembler (${CMAKE_${SWIFT_ASM_DIALECT}_COMPILER}) Version: ${CMAKE_${SWIFT_ASM_DIALECT}_COMPILER_VERSION}\")\nif (CMAKE_Swift_COMPILER)\n  message(STATUS \"Swift Compiler (${CMAKE_Swift_COMPILER}) Version: ${CMAKE_Swift_COMPILER_VERSION}\")\n\n  # Check if the current Swift compiler has implicit _StringProcessing module.\n  swift_supports_implicit_module(\"string-processing\"\n    SWIFT_SUPPORTS_DISABLE_IMPLICIT_STRING_PROCESSING_MODULE_IMPORT)\n  message(STATUS \"  Implicit 'string-processing' import: ${SWIFT_SUPPORTS_DISABLE_IMPLICIT_STRING_PROCESSING_MODULE_IMPORT}\")\n\n  # Same for _Backtracing.\n  swift_supports_implicit_module(\"backtracing\"\n    SWIFT_SUPPORTS_DISABLE_IMPLICIT_BACKTRACING_MODULE_IMPORT)\n  message(STATUS \"  Implicit 'backtracing' import: ${SWIFT_SUPPORTS_DISABLE_IMPLICIT_BACKTRACING_MODULE_IMPORT}\")\n\n  swift_get_package_cmo_support(\n    Swift_COMPILER_PACKAGE_CMO_SUPPORT)\n  message(STATUS \"  Package CMO: ${Swift_COMPILER_PACKAGE_CMO_SUPPORT}\")\nelse()\n  message(STATUS \"Swift Compiler (None).\")\nendif()\n\nset(THREADS_PREFER_PTHREAD_FLAG YES)\ninclude(FindThreads)\n\nif(SWIFT_PATH_TO_CMARK_BUILD)\n  execute_process(COMMAND ${SWIFT_PATH_TO_CMARK_BUILD}/src/cmark --version\n    OUTPUT_VARIABLE _CMARK_VERSION\n    OUTPUT_STRIP_TRAILING_WHITESPACE)\n  message(STATUS \"CMark Version: ${_CMARK_VERSION}\")\nelseif(SWIFT_INCLUDE_TOOLS)\n  find_package(cmark-gfm CONFIG REQUIRED)\nendif()\nmessage(STATUS \"\")\n\n# Check if a prebuilt clang path was passed in, as this variable will be\n# assigned if not, in SwiftSharedCMakeConfig.\nif(\"${SWIFT_NATIVE_CLANG_TOOLS_PATH}\" STREQUAL \"\")\n  set(SWIFT_PREBUILT_CLANG FALSE)\nelse()\n  set(SWIFT_PREBUILT_CLANG TRUE)\nendif()\n\n# Also mark if we have a prebuilt swift before we do anything.\nif(\"${SWIFT_NATIVE_SWIFT_TOOLS_PATH}\" STREQUAL \"\")\n  set(SWIFT_PREBUILT_SWIFT FALSE)\nelse()\n  set(SWIFT_PREBUILT_SWIFT TRUE)\nendif()\n\ninclude(SwiftSharedCMakeConfig)\n\n# NOTE: We include this before SwiftComponents as it relies on some LLVM CMake\n# functionality.\n# Support building Swift as a standalone project, using LLVM as an\n# external library.\nif(SWIFT_BUILT_STANDALONE)\n  swift_common_standalone_build_config(SWIFT)\nelse()\n  swift_common_unified_build_config(SWIFT)\nendif()\n\ninclude(SwiftComponents)\ninclude(SwiftHandleGybSources)\ninclude(SwiftSetIfArchBitness)\ninclude(AddSwift)\ninclude(SwiftConfigureSDK)\ninclude(SwiftComponents)\ninclude(SwiftList)\ninclude(AddPureSwift)\n\n# Configure swift include, install, build components.\nswift_configure_components()\n\n# lipo is used to create universal binaries.\ninclude(SwiftToolchainUtils)\nif(NOT SWIFT_LIPO)\n  find_toolchain_tool(SWIFT_LIPO \"${SWIFT_DARWIN_XCRUN_TOOLCHAIN}\" lipo)\nendif()\n\nget_filename_component(SWIFT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR} REALPATH)\nset(SWIFT_BINARY_DIR \"${CMAKE_CURRENT_BINARY_DIR}\")\nset(SWIFT_CMAKE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules\")\nset(SWIFT_MAIN_INCLUDE_DIR \"${SWIFT_SOURCE_DIR}/include\")\nset(SWIFT_SHIMS_INCLUDE_DIR \"${SWIFT_SOURCE_DIR}/stdlib/public/SwiftShims\")\nset(SWIFT_INCLUDE_DIR \"${CMAKE_CURRENT_BINARY_DIR}/include\")\n\nif (NOT BOOTSTRAPPING_MODE)\n  message(FATAL_ERROR \"turning off bootstrapping is not supported anymore\")\nendif()\n\nset(SWIFT_RUNTIME_OUTPUT_INTDIR \"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/bin\")\nset(SWIFT_LIBRARY_OUTPUT_INTDIR \"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/lib\")\nif(\"${SWIFT_NATIVE_SWIFT_TOOLS_PATH}\" STREQUAL \"\")\n  # This is the normal case. We are not cross-compiling.\n  set(SWIFT_NATIVE_SWIFT_TOOLS_PATH \"${SWIFT_RUNTIME_OUTPUT_INTDIR}\")\n  set(SWIFT_EXEC_FOR_SWIFT_MODULES \"${CMAKE_Swift_COMPILER}\")\n  if(NOT SWIFT_EXEC_FOR_SWIFT_MODULES)\n    message(WARNING \"BOOTSTRAPPING set to OFF because no Swift compiler is defined\")\n    set(BOOTSTRAPPING_MODE \"OFF\")\n  endif()\nelseif(BOOTSTRAPPING_MODE MATCHES \"BOOTSTRAPPING.*\")\n  # If cross-compiling, we don't have to bootstrap. We can just use the previously\n  # built native swiftc to build the swift compiler modules.\n  message(STATUS \"Building swift modules with previously built tools instead of bootstrapping\")\n  set(SWIFT_EXEC_FOR_SWIFT_MODULES \"${SWIFT_NATIVE_SWIFT_TOOLS_PATH}/swiftc\")\n  if(BOOTSTRAPPING_MODE STREQUAL \"BOOTSTRAPPING-WITH-HOSTLIBS\")\n    set(BOOTSTRAPPING_MODE \"CROSSCOMPILE-WITH-HOSTLIBS\")\n  elseif(BOOTSTRAPPING_MODE STREQUAL \"BOOTSTRAPPING\")\n    set(BOOTSTRAPPING_MODE \"CROSSCOMPILE\")\n  else()\n    set(BOOTSTRAPPING_MODE \"HOSTTOOLS\")\n  endif()\nelseif(BOOTSTRAPPING_MODE STREQUAL \"HOSTTOOLS\" OR SWIFT_BUILD_SWIFT_SYNTAX)\n  # We are building using a pre-installed host toolchain but not bootstrapping\n  # the Swift modules. This happens when building using 'build-tooling-libs'\n  # where we haven't built a new Swift compiler. Use the Swift compiler from the\n  # pre-installed host toolchain to build the Swift modules.\n  set(SWIFT_EXEC_FOR_SWIFT_MODULES \"${CMAKE_Swift_COMPILER}\")\nendif()\n\nif(SWIFT_INCLUDE_TOOLS AND SWIFT_BUILD_SWIFT_SYNTAX)\n  # Only \"HOSTTOOLS\" is supported in Linux when Swift parser integration is enabled.\n  if(SWIFT_HOST_VARIANT_SDK MATCHES \"LINUX|OPENBSD|FREEBSD\" AND NOT BOOTSTRAPPING_MODE STREQUAL \"HOSTTOOLS\")\n    message(WARNING \"Force setting BOOTSTRAPPING=HOSTTOOLS because Swift parser integration is enabled\")\n    set(BOOTSTRAPPING_MODE \"HOSTTOOLS\")\n    if(NOT CMAKE_Swift_COMPILER)\n      message(SEND_ERROR \"No Swift compiler found.\\n\"\n        \"Tell CMake where to find the Swift compiler by setting either the \"\n        \"environment variable \\\"SWIFTC\\\" or the CMake cache entry \"\n        \"CMAKE_Swift_COMPILER to the full path of the compiler, or to the \"\n        \"compiler name if it is in the PATH\")\n    endif()\n  endif()\n  add_definitions(-DSWIFT_BUILD_SWIFT_SYNTAX)\nendif()\n\nif(BOOTSTRAPPING_MODE MATCHES \"HOSTTOOLS|.*-WITH-HOSTLIBS\")\n  if(SWIFT_ENABLE_ARRAY_COW_CHECKS)\n    message(STATUS \"array COW checks disabled when building the swift modules with host libraries\")\n    set(SWIFT_ENABLE_ARRAY_COW_CHECKS FALSE)\n  endif()\nendif()\n\n# This setting causes all CMakeLists.txt to automatically have\n# ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CURRENT_SOURCE_DIR} as an\n# include_directories path. This is done for developer\n# convenience. Additionally, LLVM/Clang build with this option enabled, so we\n# should match them unless it is removed from LLVM/Clang as well.\n#\n# *NOTE* Even though these directories are added to the include path for a\n# specific CMakeLists.txt, these include paths are not propagated down to\n# subdirectories.\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\n# We'll need this once we have generated headers\ninclude_directories(BEFORE\n  ${SWIFT_MAIN_INCLUDE_DIR}\n  ${SWIFT_INCLUDE_DIR}\n  ${SWIFT_SHIMS_INCLUDE_DIR}\n  )\n\n# Configuration flags passed to all of our invocations of gyb.  Try to\n# avoid making up new variable names here if you can find a CMake\n# variable that will do the job.\nset(SWIFT_GYB_FLAGS\n    \"-DunicodeGraphemeBreakPropertyFile=${SWIFT_SOURCE_DIR}/utils/UnicodeData/GraphemeBreakProperty.txt\"\n    \"-DunicodeGraphemeBreakTestFile=${SWIFT_SOURCE_DIR}/utils/UnicodeData/GraphemeBreakTest.txt\")\n\n# Directory to use as the Clang module cache when building Swift source files.\nset(SWIFT_MODULE_CACHE_PATH\n    \"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/module-cache\")\n\n# Xcode: use libc++ and c++11 using proper build settings.\nif(XCODE)\n  swift_common_xcode_cxx_config()\nendif()\n\n# Check what linux distribution is being used.\n# This can be used to determine the default linker to use.\nif(CMAKE_VERSION VERSION_GREATER_EQUAL \"3.22\")\n  cmake_host_system_information(RESULT DISTRO_NAME  QUERY DISTRIB_PRETTY_NAME)\nendif()\n\n# Which default linker to use. Prefer LLVM_USE_LINKER if it set, otherwise use\n# our own defaults. This should only be possible in a unified (not stand alone)\n# build environment.\ninclude(GoldVersion)\n\nif(LLVM_USE_LINKER)\n  set(SWIFT_USE_LINKER_default \"${LLVM_USE_LINKER}\")\nelseif(SWIFT_HOST_VARIANT_SDK STREQUAL \"ANDROID\")\n  set(SWIFT_USE_LINKER_default \"lld\")\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Windows\" AND NOT CMAKE_HOST_SYSTEM_NAME STREQUAL \"Windows\")\n  set(SWIFT_USE_LINKER_default \"lld\")\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n  set(SWIFT_USE_LINKER_default \"\")\nelseif(DISTRO_NAME STREQUAL \"Amazon Linux 2023\")\n  set(SWIFT_USE_LINKER_default \"lld\")\nelse()\n  get_gold_version(gold_version)\n  if(NOT gold_version)\n    message(STATUS \"GNU Gold not found; using lld instead\")\n    set(SWIFT_USE_LINKER_default \"lld\")\n  elseif(gold_version VERSION_LESS \"2.36\")\n    message(STATUS \"GNU Gold is too old (${gold_version}); using lld instead\")\n    set(SWIFT_USE_LINKER_default \"lld\")\n  else()\n    message(STATUS \"Using GNU Gold ${gold_version}\")\n    set(SWIFT_USE_LINKER_default \"gold\")\n  endif()\nendif()\nset(SWIFT_USE_LINKER ${SWIFT_USE_LINKER_default} CACHE STRING\n    \"Build Swift with a non-default linker\")\n\ninclude(CheckLinkerFlag)\n\n# Apple's linker complains about duplicate libraries, which CMake likes to do\n# to support ELF platforms. To silence that warning, we can use\n# -no_warn_duplicate_libraries, but only in versions of the linker that\n# support that flag.\nif(NOT LLVM_USE_LINKER AND ${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n  check_linker_flag(C \"-Wl,-no_warn_duplicate_libraries\" SWIFT_LINKER_SUPPORTS_NO_WARN_DUPLICATE_LIBRARIES)\nelse()\n  set(SWIFT_LINKER_SUPPORTS_NO_WARN_DUPLICATE_LIBRARIES OFF CACHE INTERNAL \"\")\nendif()\n\n#\n# Enable additional warnings.\n#\nswift_common_cxx_warnings()\n\n# Check if we're build with MSVC or Clang-cl, as these compilers have similar command line arguments.\nif(\"${CMAKE_C_COMPILER_ID}\" STREQUAL \"MSVC\" OR \"${CMAKE_CXX_SIMULATE_ID}\" STREQUAL \"MSVC\")\n  set(SWIFT_COMPILER_IS_MSVC_LIKE TRUE)\nendif()\n\n#\n# Display a message if the threading package has been overridden\n#\n\nif(SWIFT_THREADING_PACKAGE)\n  message(STATUS \"\")\n  message(STATUS \"Threading package override enabled\")\n  foreach(elt ${SWIFT_THREADING_PACKAGE})\n    string(REPLACE \":\" \";\" elt_list \"${elt}\")\n    list(LENGTH elt_list elt_list_len)\n    if(elt_list_len EQUAL 1)\n      set(elt_sdk \"Global\")\n      list(GET elt_list 0 elt_package)\n    elseif(elt_list_len EQUAL 2)\n      list(GET elt_list 0 elt_sdk)\n      list(GET elt_list 1 elt_package)\n      string(TOUPPER \"${elt_sdk}\" elt_sdk)\n    else()\n      message(FATAL_ERROR \"Bad threading override \\\"${elt}\\\" - SWIFT_THREADING_PACKAGE must be a semicolon separated list of package or sdk:package pairs.\")\n    endif()\n    string(TOLOWER \"${elt_package}\" elt_package)\n    message(STATUS \"  ${elt_sdk}: ${elt_package}\")\n  endforeach()\n  message(STATUS \"\")\nendif()\n\n#\n# Configure SDKs.\n#\n\nif(XCODE)\n  # FIXME: It used to be the case that Xcode would force\n  # -m${platform}-version-min flags that would conflict with those computed\n  # by build-script. version-min flags are deprecated in favor of -target since\n  # clang-11, so we might be able to undo this.\n  set(SWIFT_SDKS \"OSX\")\nendif()\n\n# FIXME: the parameters we specify in SWIFT_SDKS are lacking architecture specifics,\n# so we need to hard-code it. For example, the SDK for Android is just 'ANDROID',\n# and we have to specify SWIFT_SDK_ANDROID_ARCHITECTURES separately.\n# The iOS SDKs all have their architectures hardcoded because they are just specified by name (e.g. 'IOS' or 'WATCHOS').\n# We can't cross-compile the standard library for another linux architecture,\n# because the SDK list would just be 'LINUX' and we couldn't disambiguate it from the host.\n#\n# To fix it, we would need to append the architecture to the SDKs,\n# for example: 'OSX-x86_64;IOS-armv7;...etc'.\n# We could easily do that - we have all of that information in build-script-impl.\n# Darwin targets cheat and use `xcrun`.\n\nif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"LINUX\")\n\n  set(SWIFT_HOST_VARIANT \"linux\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [linux].\")\n\n  is_sdk_requested(LINUX swift_build_linux)\n  if(swift_build_linux)\n    if(\"${SWIFT_SDK_LINUX_ARCHITECTURES}\" STREQUAL \"\")\n      set(SWIFT_SDK_LINUX_ARCHITECTURES \"${SWIFT_HOST_VARIANT_ARCH}\")\n    endif()\n\n    configure_sdk_unix(\"Linux\" \"${SWIFT_SDK_LINUX_ARCHITECTURES}\")\n  endif()\n\n  is_sdk_requested(LINUX_STATIC swift_build_linux_static)\n  if(swift_build_linux_static)\n    if(\"${SWIFT_MUSL_PATH}\" STREQUAL \"\")\n      message(FATAL_ERROR \"You must set SWIFT_MUSL_PATH to point to the Musl libraries and headers.  Specifically, we expect to find Musl at <SWIFT_MUSL_PATH>/<arch> for each requested architecture.\")\n    endif()\n\n    if(\"${SWIFT_SDK_LINUX_STATIC_ARCHITECTURES}\" STREQUAL \"\")\n      set(SWIFT_SDK_LINUX_STATIC_ARCHITECTURES \"aarch64;x86_64\")\n    endif()\n\n    configure_sdk_unix(\"Linux_Static\" \"${SWIFT_SDK_LINUX_STATIC_ARCHITECTURES}\")\n  endif()\n\n  is_sdk_requested(FREESTANDING swift_build_freestanding)\n  if(swift_build_freestanding AND (SWIFT_FREESTANDING_FLAVOR STREQUAL \"linux\"))\n    # TODO\n    # configure_sdk_unix(\"FREESTANDING\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  endif()\n\n  # Default is Linux SDK for host\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"FREEBSD\")\n\n  set(SWIFT_HOST_VARIANT \"freebsd\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [freebsd].\")\n\n  configure_sdk_unix(\"FreeBSD\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"OPENBSD\")\n\n  set(SWIFT_HOST_VARIANT \"openbsd\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [openbsd].\")\n\n  configure_sdk_unix(\"OpenBSD\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"CYGWIN\")\n\n  set(SWIFT_HOST_VARIANT \"cygwin\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [cygwin].\")\n\n  configure_sdk_unix(\"Cygwin\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"WINDOWS\")\n\n  set(SWIFT_HOST_VARIANT \"windows\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [windows].\")\n\n  configure_sdk_windows(\"Windows\" \"msvc\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"HAIKU\")\n\n  set(SWIFT_HOST_VARIANT \"haiku\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [haiku].\")\n\n  configure_sdk_unix(\"Haiku\" \"${SWIFT_HOST_VARIANT_ARCH}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"ANDROID\")\n\n  set(SWIFT_HOST_VARIANT \"android\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [android]\")\n\n  set(SWIFT_ANDROID_NATIVE_SYSROOT \"/data/data/com.termux/files\" CACHE STRING\n      \"Path to Android sysroot, default initialized to the Termux app's layout\")\n\n  if(\"${SWIFT_SDK_ANDROID_ARCHITECTURES}\" STREQUAL \"\")\n    set(SWIFT_SDK_ANDROID_ARCHITECTURES ${SWIFT_HOST_VARIANT_ARCH})\n  endif()\n\n  configure_sdk_unix(\"Android\" \"${SWIFT_SDK_ANDROID_ARCHITECTURES}\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"WASI\")\n  set(SWIFT_HOST_VARIANT \"wasi\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [wasi]\")\n\n  configure_sdk_unix(\"WASI\" \"wasm32\")\n  set(SWIFT_PRIMARY_VARIANT_SDK_default  \"${SWIFT_HOST_VARIANT_SDK}\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${SWIFT_HOST_VARIANT_ARCH}\")\n\nelseif(\"${SWIFT_HOST_VARIANT_SDK}\" MATCHES \"(OSX|IOS*|TVOS*|WATCHOS*|XROS*)\")\n\n  set(SWIFT_HOST_VARIANT \"macosx\" CACHE STRING\n      \"Deployment OS for Swift host tools (the compiler) [macosx, iphoneos].\")\n\n  # Display Xcode toolchain version.\n  # The SDK configuration below prints each SDK version.\n  execute_process(\n    COMMAND \"xcodebuild\" \"-version\"\n    OUTPUT_VARIABLE xcode_version\n    OUTPUT_STRIP_TRAILING_WHITESPACE)\n  string(REPLACE \"\\n\" \", \" xcode_version \"${xcode_version}\")\n  message(STATUS \"${xcode_version}\")\n  message(STATUS \"\")\n\n  include(DarwinSDKs)\n\n  # FIXME: guess target variant based on the host.\n  # if(SWIFT_HOST_VARIANT MATCHES \"^macosx\")\n  #   set(SWIFT_PRIMARY_VARIANT_GUESS \"OSX-R\")\n  # elseif(SWIFT_HOST_VARIANT MATCHES \"^iphoneos\")\n  #   set(SWIFT_PRIMARY_VARIANT_GUESS \"IOS-R\")\n  # else()\n  #   message(FATAL_ERROR \"Unknown SWIFT_HOST_VARIANT '${SWIFT_HOST_VARIANT}'\")\n  # endif()\n  #\n  # set(SWIFT_PRIMARY_VARIANT ${SWIFT_PRIMARY_VARIANT_GUESS} CACHE STRING\n  #    \"[OSX-DA, OSX-RA, OSX-R, IOS-DA, IOS-RA, IOS-R, IOS_SIMULATOR-DA, IOS_SIMULATOR-RA, IOS_SIMULATOR-R]\")\n  #\n  # Primary variant is always OSX; even on iOS hosts.\n  set(SWIFT_PRIMARY_VARIANT_SDK_default \"OSX\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH_default \"${CMAKE_HOST_SYSTEM_PROCESSOR}\")\n\nendif()\n\nif(\"${SWIFT_PRIMARY_VARIANT_SDK}\" STREQUAL \"\")\n  set(SWIFT_PRIMARY_VARIANT_SDK \"${SWIFT_PRIMARY_VARIANT_SDK_default}\")\nendif()\nif(\"${SWIFT_PRIMARY_VARIANT_ARCH}\" STREQUAL \"\")\n  set(SWIFT_PRIMARY_VARIANT_ARCH \"${SWIFT_PRIMARY_VARIANT_ARCH_default}\")\nendif()\n\n# Should we cross-compile the standard library for Android?\nis_sdk_requested(ANDROID swift_build_android)\nif(swift_build_android AND NOT \"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"ANDROID\")\n  if (\"${SWIFT_ANDROID_NDK_PATH}\" STREQUAL \"\")\n    message(FATAL_ERROR \"You must set SWIFT_ANDROID_NDK_PATH to cross-compile the Swift runtime for Android\")\n  endif()\n  if (NOT (\"${CMAKE_HOST_SYSTEM_NAME}\" STREQUAL \"Darwin\" OR \"${CMAKE_HOST_SYSTEM_NAME}\" STREQUAL \"Linux\"))\n    message(FATAL_ERROR \"A Darwin or Linux host is required to build the Swift runtime for Android\")\n  endif()\n\n  if(\"${SWIFT_SDK_ANDROID_ARCHITECTURES}\" STREQUAL \"\")\n    set(SWIFT_SDK_ANDROID_ARCHITECTURES armv7;aarch64)\n  endif()\n  configure_sdk_unix(\"Android\" \"${SWIFT_SDK_ANDROID_ARCHITECTURES}\")\nendif()\n\n# Should we cross-compile the standard library for Windows?\nis_sdk_requested(WINDOWS swift_build_windows)\nif(swift_build_windows AND NOT \"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Windows\")\n  if(\"${SWIFT_SDK_WINDOWS_ARCHITECTURES}\" STREQUAL \"\")\n    set(SWIFT_SDK_WINDOWS_ARCHITECTURES aarch64;armv7;i686;x86_64)\n  endif()\n  configure_sdk_windows(\"Windows\" \"msvc\" \"${SWIFT_SDK_WINDOWS_ARCHITECTURES}\")\nendif()\n\n# Should we cross-compile the standard library for WASI?\nis_sdk_requested(WASI swift_build_wasm)\nif(swift_build_wasm AND NOT \"${SWIFT_HOST_VARIANT_SDK}\" STREQUAL \"WASI\")\n  configure_sdk_unix(WASI wasm32)\nendif()\n\nif(\"${SWIFT_SDKS}\" STREQUAL \"\")\n  set(SWIFT_SDKS \"${SWIFT_CONFIGURED_SDKS}\")\nendif()\n\nlist_subtract(\"${SWIFT_SDKS}\" \"${SWIFT_CONFIGURED_SDKS}\" unknown_sdks)\n\nprecondition(unknown_sdks NEGATE MESSAGE \"Unknown SDKs: ${unknown_sdks}\")\nprecondition(SWIFT_CONFIGURED_SDKS MESSAGE \"No SDKs selected.\")\nprecondition(SWIFT_HOST_VARIANT_SDK MESSAGE \"No SDK for host tools.\")\nprecondition(SWIFT_HOST_VARIANT_ARCH MESSAGE \"No arch for host tools\")\n\nset(SWIFT_PRIMARY_VARIANT_SUFFIX\n    \"-${SWIFT_SDK_${SWIFT_PRIMARY_VARIANT_SDK}_LIB_SUBDIR}-${SWIFT_PRIMARY_VARIANT_ARCH}\")\n\n# Clear universal library names to prevent adding duplicates\nforeach(sdk ${SWIFT_SDKS})\n  unset(UNIVERSAL_LIBRARY_NAMES_${SWIFT_SDK_${sdk}_LIB_SUBDIR} CACHE)\nendforeach()\n\nif(SWIFT_PARALLEL_LINK_JOBS)\n  if(NOT CMAKE_MAKE_PROGRAM MATCHES \"ninja\")\n    message(WARNING \"Job pooling is only available with Ninja generators.\")\n  else()\n    set_property(GLOBAL APPEND PROPERTY JOB_POOLS swift_link_job_pool=${SWIFT_PARALLEL_LINK_JOBS})\n    set(CMAKE_JOB_POOL_LINK swift_link_job_pool)\n  endif()\nendif()\n\n# Set the CMAKE_OSX_* variables in a way that minimizes conflicts.\nif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Darwin\" AND NOT CMAKE_CROSSCOMPILING)\n  set(CMAKE_OSX_SYSROOT \"${SWIFT_SDK_${SWIFT_HOST_VARIANT_SDK}_PATH}\")\n  set(CMAKE_OSX_ARCHITECTURES \"\")\n  set(CMAKE_OSX_DEPLOYMENT_TARGET \"\")\nendif()\n\nswift_get_host_triple(SWIFT_HOST_TRIPLE)\nset(SWIFT_HOST_MODULE_TRIPLE \"${SWIFT_SDK_${SWIFT_HOST_VARIANT_SDK}_ARCH_${SWIFT_HOST_VARIANT_ARCH}_MODULE}\")\nset(SWIFT_HOST_LIBRARIES_DEST_DIR \"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/swift/host\")\n\nif(SWIFT_INCLUDE_TOOLS)\n  message(STATUS \"Building host Swift tools for ${SWIFT_HOST_VARIANT_SDK} ${SWIFT_HOST_VARIANT_ARCH}\")\n  message(STATUS \"  Build type:     ${CMAKE_BUILD_TYPE}\")\n  message(STATUS \"  Assertions:     ${LLVM_ENABLE_ASSERTIONS}\")\n  message(STATUS \"  LTO:            ${SWIFT_TOOLS_ENABLE_LTO}\")\n  message(STATUS \"  Bootstrapping:  ${BOOTSTRAPPING_MODE}\")\n  message(STATUS \"  C++ Bridging:   ${BRIDGING_MODE}\")\n  message(STATUS \"  Swift parser:   ${SWIFT_BUILD_SWIFT_SYNTAX}\")\n  message(STATUS \"\")\nelse()\n  message(STATUS \"Not building host Swift tools\")\n  message(STATUS \"\")\nendif()\n\nif(SWIFT_BUILD_STDLIB OR SWIFT_BUILD_SDK_OVERLAY)\n  message(STATUS \"Building Swift standard library and overlays for SDKs: ${SWIFT_SDKS}\")\n  message(STATUS \"  Build type:       ${SWIFT_STDLIB_BUILD_TYPE}\")\n  message(STATUS \"  Assertions:       ${SWIFT_STDLIB_ASSERTIONS}\")\n  message(STATUS \"\")\n\n  message(STATUS \"Building Swift runtime with:\")\n  message(STATUS \"  Leak Detection Checker Entrypoints: ${SWIFT_RUNTIME_ENABLE_LEAK_CHECKER}\")\n  message(STATUS \"\")\n\n  message(STATUS \"Differentiable Programming Support: ${SWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING}\")\n  message(STATUS \"Concurrency Support:                ${SWIFT_ENABLE_EXPERIMENTAL_CONCURRENCY}\")\n  message(STATUS \"Distributed Support:                ${SWIFT_ENABLE_EXPERIMENTAL_DISTRIBUTED}\")\n  message(STATUS \"String Processing Support:          ${SWIFT_ENABLE_EXPERIMENTAL_STRING_PROCESSING}\")\n  message(STATUS \"Backtracing Support:                ${SWIFT_ENABLE_BACKTRACING}\")\n  message(STATUS \"Unicode Support:                    ${SWIFT_STDLIB_ENABLE_UNICODE_DATA}\")\n  message(STATUS \"Observation Support:                ${SWIFT_ENABLE_EXPERIMENTAL_OBSERVATION}\")\n  message(STATUS \"Synchronization Support:            ${SWIFT_ENABLE_SYNCHRONIZATION}\")\n  message(STATUS \"Volatile Support:                   ${SWIFT_ENABLE_VOLATILE}\")\n  message(STATUS \"\")\nelse()\n  message(STATUS \"Not building Swift standard library, SDK overlays, and runtime\")\n  message(STATUS \"\")\nendif()\n\nif(SWIFT_BUILD_LIBEXEC)\n  message(STATUS \"Building Swift auxiliary executables for SDKs: ${SWIFT_SDKS}\")\n  message(STATUS \"\")\nendif()\n\nif(SWIFT_BUILD_REMOTE_MIRROR)\n  message(STATUS \"Building Swift Remote Mirror for SDKs: ${SWIFT_SDKS}\")\n  message(STATUS \"\")\nendif()\n\n#\n# Find required dependencies.\n#\n\nfind_package(Python3 3.6 COMPONENTS Interpreter REQUIRED)\n\n#\n# Find optional dependencies.\n#\n\nif(LLVM_ENABLE_LIBXML2)\n  find_package(LibXml2 REQUIRED)\nelse()\n  find_package(LibXml2)\nendif()\n\nif(LLVM_ENABLE_LIBEDIT)\n  find_package(LibEdit REQUIRED)\nelse()\n  find_package(LibEdit)\nendif()\n\nif(LibEdit_FOUND)\n  cmake_push_check_state()\n  list(APPEND CMAKE_REQUIRED_INCLUDES ${LibEdit_INCLUDE_DIRS})\n  list(APPEND CMAKE_REQUIRED_LIBRARIES ${LibEdit_LIBRARIES})\n  check_symbol_exists(el_wgets \"histedit.h\" HAVE_EL_WGETS)\n  if(HAVE_EL_WGETS)\n    set(LibEdit_HAS_UNICODE YES)\n  else()\n    set(LibEdit_HAS_UNICODE NO)\n  endif()\n  cmake_pop_check_state()\nendif()\n\ncheck_symbol_exists(wait4 \"sys/wait.h\" HAVE_WAIT4)\n\ncheck_symbol_exists(proc_pid_rusage \"libproc.h\" HAVE_PROC_PID_RUSAGE)\nif(HAVE_PROC_PID_RUSAGE)\n    list(APPEND CMAKE_REQUIRED_LIBRARIES proc)\nendif()\n\nif (LLVM_ENABLE_DOXYGEN)\n  message(STATUS \"Doxygen: enabled\")\nendif()\n\nif(SWIFT_ENABLE_DISPATCH)\n  include(Libdispatch)\nendif()\n\n# Add all of the subdirectories, where we actually do work.\nadd_subdirectory(include)\nif(SWIFT_INCLUDE_TOOLS)\n  add_subdirectory(lib)\nendif()\n\n###############\n# PLEASE READ #\n###############\n#\n# We have to include stdlib/ before tools/.\n# Do not move add_subdirectory(stdlib) after add_subdirectory(tools)!\n#\n# We must include stdlib/ before tools/ because stdlib/CMakeLists.txt\n# declares the swift-stdlib-* set of targets. These targets will then\n# implicitly depend on any targets declared with IS_STDLIB.\n#\n# https://github.com/apple/swift/issues/48534\nif(SWIFT_BUILD_STDLIB)\n  add_subdirectory(stdlib)\nelse()\n  set(SWIFT_STDLIB_SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/stdlib\")\n  # Some of the things below depend on the threading library\n  add_subdirectory(stdlib/public/Threading)\n\n  if(SWIFT_BUILD_STDLIB_EXTRA_TOOLCHAIN_CONTENT)\n    add_subdirectory(stdlib/toolchain)\n\n    if(SWIFT_BUILD_STDLIB_CXX_MODULE)\n      add_subdirectory(stdlib/public/Cxx)\n    endif()\n  endif()\n\n  # Some tools (e.g. swift-reflection-dump) rely on a host swiftRemoteInspection,\n  # so ensure we build that when building tools.\n  if(SWIFT_INCLUDE_TOOLS OR SWIFT_BUILD_STDLIB_CXX_MODULE)\n    add_subdirectory(stdlib/public/SwiftShims/swift/shims)\n  endif()\n\n  # We might want to build Remote Mirror separately\n  if(SWIFT_BUILD_REMOTE_MIRROR)\n    add_subdirectory(stdlib/public/LLVMSupport)\n    add_subdirectory(stdlib/public/Demangling)\n    add_subdirectory(stdlib/public/RemoteInspection)\n    add_subdirectory(stdlib/public/SwiftRemoteMirror)\n  endif()\n\n  # We might also want to build the things in libexec seaprately\n  if(SWIFT_BUILD_LIBEXEC)\n    add_subdirectory(stdlib/public/libexec)\n  endif()\nendif()\n\nif(SWIFT_INCLUDE_APINOTES)\n  add_subdirectory(apinotes)\nendif()\n\nif(SWIFT_INCLUDE_TOOLS)\n  add_subdirectory(SwiftCompilerSources)\n\n  # Always include this after including stdlib/!\n  # Refer to the large comment above the add_subdirectory(stdlib) call.\n  # https://github.com/apple/swift/issues/48534\n  add_subdirectory(tools)\n\n  # Localization targets are configured in a way that assume the swift\n  # frontend is being built, so trying to include them for other builds\n  # (like stdlib) fail!\n  #\n  # Diagnostics information is only useful for the frontend compiler\n  # anyway, so let's only include it if the compiler is being built,\n  # which at the moment seems like if SWIFT_INCLUDE_TOOLS is defined.\n  add_subdirectory(localization)\nendif()\n\nadd_subdirectory(utils)\n\nadd_subdirectory(userdocs)\n\nif (\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Darwin\")\n  if(SWIFT_BUILD_PERF_TESTSUITE)\n    add_subdirectory(benchmark)\n  endif()\nendif()\n\nif(SWIFT_INCLUDE_TESTS)\n  add_subdirectory(test)\n  add_subdirectory(unittests)\nendif()\nif(SWIFT_INCLUDE_DOCS)\n  add_subdirectory(docs)\nendif()\n\nadd_subdirectory(cmake/modules)\n\nswift_install_in_component(FILES \"LICENSE.txt\"\n                           DESTINATION \"share/swift\"\n                           COMPONENT license)\n\n# Add a documentation target so that documentation shows up in the\n# Xcode project.\nif(XCODE)\n  add_custom_target(Documentation\n      SOURCES\n        README.md\n        docs)\n\n  file(GLOB SWIFT_TOPLEVEL_HEADERS\n      ${CMAKE_CURRENT_SOURCE_DIR}/include/swift${dir}/*.h\n      ${CMAKE_CURRENT_SOURCE_DIR}/include/swift${dir}/*.td\n      ${CMAKE_CURRENT_SOURCE_DIR}/include/swift${dir}/*.def)\n  add_custom_target(Miscellaneous\n      SOURCES ${SWIFT_TOPLEVEL_HEADERS})\nendif()\n\n# New standard library build\noption(SWIFT_ENABLE_NEW_RUNTIME_BUILD \"Build Swift runtimes with new build system\" OFF)\nif(SWIFT_ENABLE_NEW_RUNTIME_BUILD)\n\n  add_custom_target(PopulateRuntimeSourceDir\n    COMMAND \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_SOURCE_DIR}/Runtimes/Resync.cmake\"\n    COMMENT \"Copying sources into new runtime build\")\n\n  foreach(sdk ${SWIFT_SDKS})\n    foreach(arch ${SWIFT_SDK_${sdk}_ARCHITECTURES})\n      # Provide a mechanism to skip building one of these runtimes\n      if(SWIFT_SKIP_${sdk}_${arch}_RUNTIME)\n        message(STATUS \"Skipping: ${arch}-${sdk} runtime build\")\n        continue()\n      endif()\n      set(stdlib_target \"swift-stdlib-${SWIFT_SDK_${sdk}_LIB_SUBDIR}-${arch}\")\n      if(${SWIFT_SDK_${sdk}_${arch}_CACHE})\n        set(stdlib_cache_file_flag -C ${SWIFT_SDK_${sdk}_${arch}_CACHE})\n      endif()\n      ExternalProject_Add(\"${stdlib_target}-core\"\n        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/Runtimes/Core\"\n        # TODO: Add this once we're ready to start swapping out the libraries\n        #       for testing\n        # INSTALL_DIR \"${CMAKE_BINARY_DIR}/\"\n\n        DEPENDS PopulateRuntimeSourceDir\n        CMAKE_ARGS\n          -DCMAKE_INSTALL_LIBDIR:FILEPATH=lib/swift/${SWIFT_SDK_${sdk}_LIB_SUBDIR}/${arch}\n          # Compiler will see mismatched swift modules and fail initial checks\n          -DCMAKE_Swift_COMPILER_WORKS:BOOLEAN=YES\n          -DBUILD_SHARED_LIBS:BOOLEAN=YES # TODO: Make this configurable\n          ${stdlib_cache_file_flag}\n          -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}\n          -DCMAKE_INSTALL_PREFIX:FILEPATH=<INSTALL_DIR>\n          -DCMAKE_Swift_COMPILER:FILEPATH=$<IF:$<BOOL:${CMAKE_CROSSCOMPILING}>,${CMAKE_Swift_COMPILER},$<PATH:REPLACE_FILENAME,$<TARGET_FILE:swift-frontend>,swiftc>>\n          -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}\n          -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}\n          -DCMAKE_COLOR_DIAGNOSTICS:BOOLEAN=${CMAKE_COLOR_DIAGNOSTICS}\n          -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM})\n      if(NOT ${CMAKE_CROSSCOMPILING})\n        add_dependencies(\"${stdlib_target}\" swift-frontend)\n      endif()\n    endforeach()\n  endforeach()\nendif()\n"
        },
        {
          "name": "CODE_OWNERS.TXT",
          "type": "blob",
          "size": 1.75,
          "content": "This file is a list of the people responsible for ensuring that patches for a\nparticular part of Swift are reviewed, either by themselves or by someone else.\nThey are also the gatekeepers for their part of Swift, with the final word on\nwhat goes in or not.\n\nThe list is sorted by surname and formatted to allow easy grepping and\nbeautification by scripts.  The fields are: name (N), email (E),\nGitHub account (G), description (D).\n\nN: Ben Cohen\nE: ben_cohen@apple.com\nG: airspeedswift\nD: Swift standard library\n\nN: Brian Croom\nE: bcroom@apple.com\nG: briancroom\nD: XCTest overlay\n\nN: Erik Eckstein\nE: eeckstein@apple.com\nG: eeckstein\nD: SILOptimizer, Swift Benchmark Suite\n\nN: Xi Ge\nE: xi_ge@apple.com\nG: nkcsgexi\nD: Markup, Migrator, lib/Syntax\n\nN: Doug Gregor\nE: dgregor@apple.com\nG: DougGregor\nD: AST, Basic, Parse, Sema\n\nN: Joe Groff\nE: jgroff@apple.com\nG: jckarter\nD: SIL, SILGen, everything in Swift not covered by someone else\n\nN: Argyrios Kyrtzidis\nE: kyrtzidis@apple.com\nG: akyrtzi\nD: IDE, Index, SourceKit, swift-ide-test\n\nN: John McCall\nE: rjmccall@apple.com\nG: rjmccall\nD: Demangler, IRGen, Runtime\n\nN: Victoria Mitchell\nE: victoria_m@apple.com\nG: QuietMisdreavus\nD: SymbolGraphGen\n\nN: Max Moiseev\nE: moiseev@apple.com\nG: moiseev\nD: Apple contact for non-corelibs overlays\n\nN: Tony Parker\nE: anthony.parker@apple.com\nG: parkera\nD: Foundation overlay\n\nN: Slava Pestov\nE: spestov@apple.com\nG: slavapestov\nD: Reflection, SwiftRemoteMirror\n\nN: Adrian Prantl\nE: aprantl@apple.com\nG: adrian-prantl\nD: Debug info\n\nN: Jordan Rose\nE: jordan_rose@apple.com\nG: jrose-apple\nD: ClangImporter, Serialization, PrintAsClang, Driver, Frontend\n\nN: Daniel Steffen\nE: dsteffen@apple.com\nG: das\nD: Dispatch overlay\n\nN: Anna Zaks\nE: ganna@apple.com\nG: AnnaZaks\nD: SIL diagnostics passes, sanitizers\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 18.98,
          "content": "# Contributing to Swift\n\nContributions to Swift are welcomed and encouraged!\nFor contributions to the broader Swift project, please see the\n[Contributing to Swift guide](https://swift.org/contributing/).\n\nTo give clarity of what is expected of our members, Swift has adopted the code of conduct defined by the [Contributor Covenant](http://contributor-covenant.org/).\nThis document is used across many open source communities, and it articulates our values.\nFor more detail, read the project's [Code of Conduct](https://swift.org/code-of-conduct/).\n\nIt is highly recommended that you become familiar with using Swift in your own projects before contributing directly to the language itself.\nWe put together handy [Getting Started](https://www.swift.org/getting-started/) guide and tutorials with step-by-step instructions to get you up and running.\n\n## Reporting Bugs\n\nReporting bugs is a great way for anyone to help improve Swift.\nThe open source Swift project uses GitHub Issues for tracking bugs.\n\n> [!NOTE]\n> If a bug can be reproduced only within an Xcode project or a playground, or if the bug is associated with an Apple NDA, please file a report to Apple’s [bug reporter](https://bugreport.apple.com/) instead.\n\nBecause Swift is under very active development, we receive a lot of bug reports.\nBefore opening a new issue, take a moment to [browse our existing issues](https://github.com/swiftlang/swift/issues) to reduce the chance of reporting a duplicate.\n\n## Good First Issues\n\nGood first issues are bugs, ideas, and tasks that are intended to be accessible for contributors that are new to working on the Swift project, and even new to the patterns and concepts behind subprojects such as the Swift compiler.\nGood first issues are decorated with a corresponding label and are most easily found by visiting https://github.com/swiftlang/swift/contribute.\nThey are expected to be low-priority and of modest scope, and not require excessive refactoring, research, or debugging — rather, they should encourage newcomers to dip their toes in some part of Swift, learn more about it, and make a real contribution.\n\nAnyone with [commit access](https://www.swift.org/contributing/#commit-access) and insight into a particular area is welcome and encouraged to pin down or think up good first issues.\n\n## Contributing Code\n\nIf you are interested in:\n\n- Contributing fixes and features to the compiler: See our\n  [How to Submit Your First Pull Request guide](/docs/HowToGuides/FirstPullRequest.md).\n- Building the compiler as a one-off: See our [Getting Started guide](/docs/HowToGuides/GettingStarted.md).\n\nWe also host answers to [Frequently Asked Questions](/docs/HowToGuides/FAQ.md) that may be of interest.\n\n### Proposing changes - Swift Evolution\n\nShaping the future of Swift is a community effort that anyone can participate in via the [Evolution sections on the Swift forums](https://www.swift.org/community/#swift-evolution).\nThe [Swift evolution process](https://github.com/swiftlang/swift-evolution/blob/main/process.md) covers all changes to the Swift language and the public interface of the Swift standard library, including new language features and APIs, changes to existing language features or APIs, removal of existing features, and so on.\n\nSee the [Swift evolution review schedule](https://www.swift.org/swift-evolution) for current and upcoming proposal reviews.\n\n### Incremental Development\n\nThe Swift project uses small, incremental changes as its preferred development model.\nSometimes these changes are small bug fixes.\nOther times, these changes are small steps along the path to reaching larger stated goals.\nIn contrast, long-term development branches can leave the community without a voice during development. Some additional problems with long-term branches include:\n\n- Resolving merge conflicts can take a lot of time if branch development and mainline development occur in the same pieces of code.\n- People in the community tend to ignore work on branches.\n- Very large changes are difficult to code review.\n- Branches are not routinely tested by the continuous integration infrastructure.\n\nTo address these problems, Swift uses an incremental development style. Small changes are preferred whenever possible.\nWe require contributors to follow this practice when making large or otherwise invasive changes. Some tips follow:\n\n- Large or invasive changes usually have secondary changes that must be made before the large change (for example, API cleanup or addition).\nCommit these changes before the major change, independently of that work.\n\n- If possible, decompose the remaining interrelated work into unrelated sets of changes.\nNext, define the first increment and get consensus on the development goal of the change.\n\n- Make each change in the set either stand alone (for example, to fix a bug) or part of a planned series of changes that work toward the development goal.\nExplaining these relationships to the community can be helpful.\n\nIf you are interested in making a large change and feel unsure about its overall effect, please make sure to first discuss the change and reach a consensus through the [Swift Forums](https://forums.swift.org).\nThen ask about the best way to go about making the change.\n\n### Commit Messages\n\nAlthough we don’t enforce a strict format for commit messages, we prefer that you follow the guidelines below, which are common among open source projects.\nFollowing these guidelines helps with the review process, searching commit logs, and email formatting.\nAt a high level, the contents of the commit message should be to convey the rationale of the change, without delving into much detail.\nFor example, “bits were not set right” leaves the reviewer wondering about which bits and why they weren’t “right”.\nIn contrast, “Correctly compute ‘is dependent type’ bits in ‘Type’” conveys almost all there is to the change.\n\nBelow are some guidelines about the format of the commit message itself:\n\n- Separate the commit message into a single-line title and a separate body that describes the change.\n- Make the title concise to be easily read within a commit log and to fit in the subject line of a commit email.\n- In changes that are restricted to a specific part of the code, include a [tag] at the start of the line in square brackets—for example, “[stdlib] …” or “[SILGen] …”.\nThis tag helps email filters and searches for post-commit reviews.\n- When there is a body, separate it from the title by an empty line.\n- Make body concise, while including the complete reasoning.\nUnless required to understand the change, additional code examples or other details should be left to bug comments or the mailing list.\n- If the commit fixes an issue in the bug tracking system, include a link to the issue in the message.\n- For text formatting and spelling, follow the same rules as documentation and in-code comments—for example, the use of capitalization and periods.\n- If the commit is a bug fix on top of another recently committed change, or a revert or reapply of a patch, include the Git revision number of the prior related commit, for example “Revert abcdef because it caused bug#”.\n\n\n\n### Attribution of Changes\n\nWhen contributors submit a change to a Swift subproject, after that change is approved, other developers with commit access may commit it for the author.\nWhen doing so, it is important to retain correct attribution of the contribution. Generally speaking, Git handles attribution automatically.\n\nWe do not want the source code to be littered with random attributions like “this code written by J. Random Hacker”, which is noisy and distracting.\nDo not add contributor names to the source code or documentation.\n\nIn addition, don’t commit changes authored by others unless they have submitted the change to the project or you have been authorized to submit on their behalf — for example, you work together and your company authorized you to contribute the changes.\n\n### Code Templates\n\nCode Templates\n\nThe license and copyright protections for Swift.org code are called out at the top of every source code file.\nIf you contribute a change that includes a new source file, ensure that the header is filled out appropriately.\n\nFor Swift source files the code header should look this:\n\n```swift\n//===----------------------------------------------------------------------===//\n//\n// This source file is part of the Swift.org open source project\n//\n// Copyright (c) 2024 Apple Inc. and the Swift project authors\n// Licensed under Apache License v2.0 with Runtime Library Exception\n//\n// See https://swift.org/LICENSE.txt for license information\n// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors\n//\n//===----------------------------------------------------------------------===//\n```\n\nFor C or C++ source or header files, the code header should look this:\n\n```c\n//===-- subfolder/Filename.h - Very brief description -----------*- C++ -*-===//\n//\n// This source file is part of the Swift.org open source project\n//\n// Copyright (c) 2024 Apple Inc. and the Swift project authors\n// Licensed under Apache License v2.0 with Runtime Library Exception\n//\n// See https://swift.org/LICENSE.txt for license information\n// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors\n//\n//===----------------------------------------------------------------------===//\n///\n/// \\file\n/// This file contains stuff that I am describing here in the header and will\n/// be sure to keep up to date.\n///\n//===----------------------------------------------------------------------===//\n```\n\nThe divider lines should be exactly 80 characters wide to aid in adherence to the code style guidelines.\nThe bottom section contains an optional description intended for generated documentation (these lines begin with `///` rather than `//`).\nIf there is no description, this area can be skipped.\n\n### Code Review\n\nThe Swift project relies heavily on code review to improve software quality:\n\n- All significant changes, by all developers, must be reviewed before they are committed to the repository.\nSmaller changes (or changes where the developer owns the component) can be reviewed after being committed.\n- Code reviews are conducted on GitHub.\n- The developer responsible for a code change is also responsible for making all necessary review-related changes.\n\nCode review can be an iterative process, which continues until the change is ready to be merged.\nAfter a change is sent out for review it needs an explicit approval before it’s submitted.\nDo not assume silent approval or request active objections to the patch by setting a deadline.\n\nSometimes code reviews will take longer than you would hope for, especially for larger features.\nHere are some accepted ways to speed up review times for your patches:\n\n- **Review other people’s changes**. If you help out, everybody will be more willing to do the same for you. Goodwill is our currency.\n- **Split your change into multiple smaller changes**. The smaller your change, the higher the probability that somebody will take a quick look at it.\n- **Ping the change**. If it is urgent, provide reasons why it is important to get this change landed and ping it every couple of days.\nIf it is not urgent, the common courtesy ping rate is one week. Remember that you’re asking for valuable time from other professional developers.\n\nNote that anyone is welcome to review and give feedback on a change, but only people with commit access to the repository can approve it.\n\n### Testing\n\nDevelopers are required to create test cases for any bugs fixed and any new features added, and to contribute them along with the changes.\n\n- All feature and regression test cases are added to the appropriate test directory—for example, the `swift/test` directory.\n- Write test cases at the abstraction level nearest to the actual feature.\nFor example, if it’s a Swift language feature, write it in Swift; if it’s a SIL optimization, write it in SIL.\n- Reduce test cases as much as possible, especially for regressions.\nIt’s unacceptable to place an entire failing program into `swift/test` because this slows down testing for all developers.\nPlease keep them short.\n\n### Quality\n\nPeople depend on Swift to create their production software.\nThis means that a bug in Swift could cause bugs in thousands, even millions of developers’ products.\nBecause of this, the Swift project maintains a high bar for quality.\nThe minimum quality standards that any change must satisfy before being committed to the main development branch include:\n\n1. Code must compile without errors on all supported platforms and should be free of warnings on at least one platform.\n2. Bug fixes and new features must include a test case to pinpoint any future regressions, or include a justification for why a test case would be impractical.\n3. Code must pass the appropriate test suites—for example, the `swift/test` and `swift/validation-test` test suites in the Swift compiler.\n\nAdditionally, the committer is responsible for addressing any problems found in the future that the change may cause.\nThis responsibility means that you may need to update your change in order to:\n\n- Ensure the code compiles cleanly on all primary platforms.\n- Fix any correctness regressions found in other test suites.\n- Fix any major performance regressions.\n- Fix any performance or correctness regressions in the downstream Swift tools.\n- Fix any performance or correctness regressions that result in customer code that uses Swift.\n- Address any bugs that appear in the bug tracker as a result from your change.\n\nCommits that clearly violate these quality standards may be reverted, in particular when the change blocks other developers from making progress.\nThe developer is welcome to recommit the change after the problem has been fixed.\n\n### Release Branch Pull Requests\n\nA pull request targeting a release branch (`release/x.y` or `swift/release/x.y`) cannot be merged without a GitHub approval by a corresponding branch manager.\nIn order for a change to be considered for inclusion in a release branch, the pull request must have:\n\nA title starting with a designation containing the release version number of the target branch.\n\n[This form](https://github.com/swiftlang/.github/blob/main/PULL_REQUEST_TEMPLATE/release.md?plain=1) filled out in its description.\nAn item that is not applicable may be left blank or completed with an indication thereof, but must not be omitted altogether.\n\nTo switch to this template when drafting a pull request in a [swiftlang](https://github.com/swiftlang) repository in a browser, append the `template=release.md` query parameter to the current URL and refresh. For example:\n\n```diff\n-https://github.com/swiftlang/swift/compare/main...my-branch?quick_pull=1\n+https://github.com/swiftlang/swift/compare/main...my-branch?quick_pull=1&template=release.md\n```\n\n[Here](https://github.com/swiftlang/swift/pull/73697) is an example.\n\n### Commit Access\n\nCommit access is granted to contributors with a track record of submitting high-quality changes.\nIf you would like commit access, please send an email to [the code owners list](mailto:code-owners@forums.swift.org) with the GitHub user name that you want to use and a list of 5 non-trivial pull requests that were accepted without modifications.\n\nOnce you’ve been granted commit access, you will be able to commit to all of the GitHub repositories that host Swift.org projects.\nTo verify that your commit access works, please make a test commit (for example, change a comment or add a blank line). The following policies apply to users with commit access:\n\n- You are granted commit-after-approval to all parts of Swift.\nTo get approval, create a pull request. When the pull request is approved, you may merge it yourself.\n\n- You may commit an obvious change without first getting approval.\nThe community expects you to use good judgment.\nExamples are reverting obviously broken patches, correcting code comments, and other minor changes.\n\nMultiple violations of these policies or a single egregious violation may cause commit access to be revoked.\nEven with commit access, your changes are still subject to [code review](#code-review).\nOf course, you are also encouraged to review other peoples’ changes.\n\n### Adding External Library Dependencies\n\nThere may be times where it is appropriate for one of the Swift projects (compiler, Core Libraries, etc.) to make use of libraries that provide functionality on a given platform.\nAdding library dependencies impacts the portability of Swift projects, and may involve legal questions as well.\n\nAs a rule, all new library dependencies must be explicitly approved by the [Project lead](https://www.swift.org/community/#community-structure).\n\n## LLVM and Swift\n\nSwift is built on the [LLVM Compiler Infrastructure](http://llvm.org/).\nSwift uses the LLVM Core for code generation and optimization (among other things), [Clang](http://clang.llvm.org/) for interoperability with C and Objective-C, and [LLDB](http://lldb.llvm.org/) for debugging and the REPL.\n\nApple maintains a fork of the [LLVM Core](https://github.com/llvm/llvm-project) source repository on GitHub at [llvm-project](https://github.com/apple/llvm-project).\nThis repository track upstreams LLVM development and contains additional changes for Swift.\nThe upstream LLVM repository are merged into the Swift-specific repository frequently.\nEvery attempt is made to minimize the differences between upstream LLVM and the Apple fork to only those changes specifically required for Swift.\n\n### Where Do LLVM Changes Go?\n\nSwift follows a policy of making a change in the most upstream repository that is feasible.\nContributions to Swift that involve Apple’s version of LLVM Project should go directly into the upstream LLVM repository unless they are specific to Swift.\nFor example, an improvement to LLDB’s data formatters for a Swift type belongs in the Apple LLVM Project repository, whereas a bug fix to an LLVM optimizer—even if it’s only been observed when operating on Swift-generated LLVM IR—belongs in upstream LLVM.\n\nCommits to an upstream LLVM repository are automatically merged into the appropriate upstream branches in the corresponding Swift repository (`next`) in the [llvm-project](https://github.com/swiftlang/llvm-project).\n\n### Swift and LLVM Developer Policies\n\nContributions to [llvm-project clone](https://github.com/swiftlang/llvm-project) are governed by the [LLVM Developer Policy](http://llvm.org/docs/DeveloperPolicy.html) and should follow the appropriate [licensing](http://llvm.org/docs/DeveloperPolicy.html#copyright-license-and-patents) and [coding standards](http://llvm.org/docs/CodingStandards.html).\nIssues with LLVM code are tracked using the [LLVM bug database](https://github.com/llvm/llvm-project/issues).\nFor LLDB, changes to files with llvm.org comment headers must go to the [upstream LLDB at llvm.org](https://github.com/llvm/llvm-project/tree/main/lldb) and abide by the [LLVM Developer Policy](http://llvm.org/docs/DeveloperPolicy.html) and [LLDB coding conventions](https://llvm.org/docs/CodingStandards.html).\nContributions to the Swift-specific parts of LLDB (that is, those with a Swift.org comment header) use the [Swift license](https://www.swift.org/community/#license) but still follow the LLDB coding conventions.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.48,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n    1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n    2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n    3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n    4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n    5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n    6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n    7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n    8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n    9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n    END OF TERMS AND CONDITIONS\n\n    APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n\n## Runtime Library Exception to the Apache 2.0 License: ##\n\n\n    As an exception, if you use this Software to compile your source code and\n    portions of this Software are embedded into the binary product as a result,\n    you may redistribute such product without providing attribution as would\n    otherwise be required by Sections 4(a), 4(b) and 4(d) of the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.47,
          "content": "<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://www.swift.org/assets/images/swift~dark.svg\">\n  <img src=\"https://www.swift.org/assets/images/swift.svg\" alt=\"Swift logo\" height=\"70\">\n</picture>\n\n# Swift Programming Language\n\n\n| | **Architecture** | **Build** |\n|---|:---:|:---:|\n| **macOS**        | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-macos/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-macos)|\n| **Ubuntu 20.04** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-20_04/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-20_04)|\n| **Ubuntu 20.04** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-20_04-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-20_04-aarch64)|\n| **Ubuntu 22.04** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-22_04/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-22_04)|\n| **Ubuntu 22.04** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-22_04-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-22_04-aarch64)|\n| **Ubuntu 24.04** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-24_04/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-24_04)|\n| **Ubuntu 24.04** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubuntu-24_04-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubuntu-24_04-aarch64)|\n| **Amazon Linux 2** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-amazon-linux-2/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-amazon-linux-2)|\n| **Amazon Linux 2** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-amazon-linux-2-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-amazon-linux-2-aarch64)|\n| **Universal Base Image 9** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-ubi-9/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-ubi-9)|\n| **Debian 12** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-debian-12/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-debian-12)|\n| **Debian 12** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-debian-12-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-debian-12-aarch64)|\n| **Fedora 39** | x86_64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-fedora-39/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-fedora-39)|\n| **Fedora 39** | AArch64 |[![Build Status](https://ci.swift.org/job/oss-swift-package-fedora-39-aarch64/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-package-fedora-39-aarch64)|\n| **Windows 10** | x86_64 |[![Build Status](https://ci-external.swift.org/job/swift-main-windows-toolchain/lastCompletedBuild/badge/icon)](https://ci-external.swift.org/job/swift-main-windows-toolchain)|\n| **Windows 10** | ARM64 |[![Build Status](https://ci-external.swift.org/job/swift-main-windows-toolchain-arm64/lastCompletedBuild/badge/icon)](https://ci-external.swift.org/job/swift-main-windows-toolchain-arm64)|\n\n**Cross-Compilation Targets**\n\n| **Target** | **Build** |\n|:---:|:---:|\n| **wasm32-unknown-wasi** |[![Build Status](https://ci.swift.org/job/oss-swift-pr-test-crosscompile-wasm-ubuntu-20_04/lastCompletedBuild/badge/icon)](https://ci.swift.org/job/oss-swift-pr-test-crosscompile-wasm-ubuntu-20_04)|\n\n**Swift Community-Hosted CI Platforms**\n\n| **OS** | **Architecture** | **Build** |\n|---|:---:|:---:|\n|**[Android](https://github.com/apple/swift-community-hosted-continuous-integration/blob/main/nodes/x86_64_ubuntu_16_04_LTS_android.json)** | ARMv7 |[![Build Status](https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android/lastCompletedBuild/badge/icon)](https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android)|\n|**[Android](https://github.com/apple/swift-community-hosted-continuous-integration/blob/main/nodes/x86_64_ubuntu_16_04_LTS_android.json)** | AArch64 |[![Build Status](https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64/lastCompletedBuild/badge/icon)](https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64)|\n|**[Windows 2019 (VS 2019)](https://github.com/apple/swift-community-hosted-continuous-integration/blob/main/nodes/x86_64_windows_2019_VS2019.json)** | x86_64 | [![Build Status](https://ci-external.swift.org/job/oss-swift-windows-x86_64-vs2019/lastCompletedBuild/badge/icon)](https://ci-external.swift.org/job/oss-swift-windows-x86_64-vs2019)|\n\n## Welcome to Swift\n\nSwift is a high-performance system programming language.  It has a clean\nand modern syntax, offers seamless access to existing C and Objective-C code\nand frameworks, and is memory-safe by default.\n\nAlthough inspired by Objective-C and many other languages, Swift is not itself a\nC-derived language. As a complete and independent language, Swift packages core\nfeatures like flow control, data structures, and functions, with high-level\nconstructs like objects, protocols, closures, and generics. Swift embraces\nmodules, eliminating the need for headers and the code duplication they entail.\n\nTo learn more about the programming language, visit [swift.org](https://swift.org/documentation/).\n\n- [Contributing to Swift](#contributing-to-swift)\n- [Getting Started](#getting-started)\n  - [Swift Toolchains](#swift-toolchains)\n  - [Build Failures](#build-failures)\n- [Learning More](#learning-more)\n\n## Contributing to Swift\n\nContributions to Swift are welcomed and encouraged! Please see the\n[Contributing to Swift guide](https://swift.org/contributing/).\n\nBefore submitting the pull request, please make sure you have [tested your\n changes](https://github.com/apple/swift/blob/main/docs/ContinuousIntegration.md)\n and that they follow the Swift project [guidelines for contributing\n code](https://swift.org/contributing/#contributing-code).\n\nTo be a truly great community, [Swift.org](https://swift.org/) needs to welcome\ndevelopers from all walks of life, with different backgrounds, and with a wide\nrange of experience. A diverse and friendly community will have more great\nideas, more unique perspectives, and produce more great code. We will work\ndiligently to make the Swift community welcoming to everyone.\n\nTo give clarity of what is expected of our members, Swift has adopted the\ncode of conduct defined by the Contributor Covenant. This document is used\nacross many open source communities, and we think it articulates our values\nwell. For more, see the [Code of Conduct](https://swift.org/code-of-conduct/).\n\n## Getting Started\n\nIf you are interested in:\n- Contributing fixes and features to the compiler: See our\n  [How to Submit Your First Pull Request guide](/docs/HowToGuides/FirstPullRequest.md).\n- Building the compiler as a one-off: See our [Getting Started guide][].\n- Building a toolchain as a one-off: Follow the [Getting Started guide][]\n  up until the \"Building the project\" section. After that, follow the\n  instructions in the [Swift Toolchains](#swift-toolchains) section below.\n\nWe also have an [FAQ](/docs/HowToGuides/FAQ.md) that answers common questions.\n\n[Getting Started guide]: /docs/HowToGuides/GettingStarted.md\n\n### Swift Toolchains\n\n#### Building\n\nSwift toolchains are created using the script\n[build-toolchain](https://github.com/apple/swift/blob/main/utils/build-toolchain). This\nscript is used by swift.org's CI to produce snapshots and can allow for one to\nlocally reproduce such builds for development or distribution purposes. A typical \ninvocation looks like the following:\n\n```sh\n  $ ./swift/utils/build-toolchain $BUNDLE_PREFIX\n```\n\nwhere ``$BUNDLE_PREFIX`` is a string that will be prepended to the build \ndate to give the bundle identifier of the toolchain's ``Info.plist``. For \ninstance, if ``$BUNDLE_PREFIX`` was ``com.example``, the toolchain \nproduced will have the bundle identifier ``com.example.YYYYMMDD``. It \nwill be created in the directory you run the script with a filename \nof the form: ``swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz``.\n\nBeyond building the toolchain, ``build-toolchain`` also supports the \nfollowing (non-exhaustive) set of useful options:\n\n- ``--dry-run``: Perform a dry run build. This is off by default.\n- ``--test``: Test the toolchain after it has been compiled. This is off by default.\n- ``--distcc``: Use distcc to speed up the build by distributing the C++ part of\n  the swift build. This is off by default.\n- ``--sccache``: Use sccache to speed up subsequent builds of the compiler by\n  caching more C++ build artifacts. This is off by default.\n\nMore options may be added over time. Please pass ``--help`` to\n``build-toolchain`` to see the full set of options.\n\n#### Installing into Xcode\n\nOn macOS if one wants to install such a toolchain into Xcode:\n\n1. Untar and copy the toolchain to one of `/Library/Developer/Toolchains/` or\n   `~/Library/Developer/Toolchains/`. E.g.:\n\n```sh\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/\n```\n\nThe script also generates an archive containing debug symbols which\ncan be installed over the main archive allowing symbolication of any\ncompiler crashes.\n\n```sh\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/\n```\n\n2. Specify the local toolchain for Xcode's use via `Xcode->Toolchains`.\n\n### Build Failures\n\nTry the suggestions in\n[Troubleshooting build issues](/docs/HowToGuides/GettingStarted.md#troubleshooting-build-issues).\n\nMake sure you are using the\n[correct release](/docs/HowToGuides/GettingStarted.md#installing-dependencies)\nof Xcode.\n\nIf you have changed Xcode versions but still encounter errors that appear to\nbe related to the Xcode version, try passing `--clean` to `build-script`.\n\nWhen a new version of Xcode is released, you can update your build without\nrecompiling the entire project by passing `--reconfigure` to `build-script`.\n\n## Learning More\n\nBe sure to look at the [documentation index](/docs/README.md) for a bird's eye\nview of the available documentation. In particular, the documents titled\n[Debugging the Swift Compiler](docs/DebuggingTheCompiler.md) and\n[Continuous Integration for Swift](docs/ContinuousIntegration.md) are very\nhelpful to understand before submitting your first PR.\n"
        },
        {
          "name": "Runtimes",
          "type": "tree",
          "content": null
        },
        {
          "name": "SwiftCompilerSources",
          "type": "tree",
          "content": null
        },
        {
          "name": "apinotes",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "localization",
          "type": "tree",
          "content": null
        },
        {
          "name": "stdlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittests",
          "type": "tree",
          "content": null
        },
        {
          "name": "userdocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "validation-test",
          "type": "tree",
          "content": null
        }
      ]
    },
    {
      "nameWithOwner": "Developer-Y/cs-video-courses",
      "stars": 67742,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.09,
          "content": "# Contribution Guidelines\n\n- Recently the quality of MOOCs has diminished, therefore only MOOCs with comprehensive lecture material which cover a subject/topic in ample detail will be added. For example, MOOC on Computer Networks or Machine Learning with 4-5 hours may not be able to cover all topics in sufficient detail and thus should be avoided.\n- One philosophy used in this list while integrating MOOCs is that links should directly point to videos for viewing/downloading than registration and waiting for the next session. If videos are directly accessible through the platform/youtube or any other source, please use the direct source. This is a list of video courses, not a list of MOOCs.\n- Courses within a section are roughly sorted in terms of level i.e. undergraduate courses followed by upper-level undergraduate, followed by graduate courses. As courses are from multiple Universities, sorting is not perfect and only an approximation. For example, while adding a new undergraduate course on Algorithms, please feel free to add it along with other Algorithms courses than after graduate courses.\n"
        },
        {
          "name": "NOTES.md",
          "type": "blob",
          "size": 2.55,
          "content": "# Notes\n\n- Intent of this list is to act as Online bookmarks/lookup table for freely available online video courses. The focus would be to keep the list concise so that it is easy to browse. It would be easier to skim through a 15-page list, find the course and start learning than having to read 60 pages of t&ltext. If you are a student or from non-CS background, please try a few courses to decide for yourself which course suits your learning curve best.\n- 90% of courses on Data Structures/Algorithms/Operating Systems/Machine Learning/Computer Networks/etc tend to have 80-90% overlap in the curriculum. Descriptions for courses are helpful but adding descriptions/comments for each course can lead to repetition/subjective opinions. As a tradeoff, metadata like course number, name, prof, year, University/platform for Course is added in the URL itself. To access the syllabus/notes/assignments, please visit the link to the course or use Google search with the course number/name. If a course has excellent notes/assignments/projects which cannot be reached through the video's link, please feel free to add links alongside.\n- If available, please add the following information to the link - `<Course-Number> <Course-Name> <Year> <Prof Name> <University Name/Platform>`.\n- If you are bored reading above 10 lines, imagine reading descriptions for hundreds of courses :)\n- If you need assistance in deciding the order in which courses should be taken, please refer to sample Course prerequisite charts by Universities to familiarize yourself with the standard CS curriculum. If you need to know the prerequisites for a particular course not covered by the below samples, please check the course link or try Google.\n  - [MIT EECS Curriculum](https://www.eecs.mit.edu/academics/undergraduate-programs/curriculum/)\n  - [Stanford Program Sheets](https://cs.stanford.edu/degrees/ug/ProgramSheets.shtml)\n  - [Stanford Course and Requirement Overview](https://cs.stanford.edu/degrees/ug/Requirements.shtml)\n  - [UMN Computer Science Course Prerequisite Chart](https://onestop.umn.edu/registration/register-classes/course-prerequisites)\n- Disclaimer: The links have been taken from public domain websites like Open courseware sites, class-central, YouTube channels for Universities, University pages, Google, itunes U, blog posts, and similar sites like awesome-courses, etc. If you are University Professor for any course listed in this repository and You would like your course to be removed from the list, please raise a pull request with comment stating its your content and you would like it to be removed.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 146.55,
          "content": "<!-- omit in toc -->\n# Computer Science courses with video lectures\n\n<!-- omit in toc -->\n## Introduction\n\n- Please check [NOTES](https://github.com/Developer-Y/cs-video-courses/blob/master/NOTES.md) for general information about this list.\n- Please refer [CONTRIBUTING.md](https://github.com/Developer-Y/cs-video-courses/blob/master/CONTRIBUTING.md) for contribution guidelines.\n- Please feel free to raise any genuine issue you may have, however, it has been noticed that few people open empty issues to raise their GitHub contribution on their account. Such spammers will be blocked. \n- You are welcome to contribute, please create PR for actual college/University level courses. Please do not add links for small MOOCs, basic tutorials, or advertisements for some sites/channels.\n\n------------------------------\n\nTable of Contents\n\n------------------------------\n\n- [Introduction to Computer Science](#introduction-to-computer-science)\n- [Data Structures and Algorithms](#data-structures-and-algorithms)\n- [Systems Programming](#systems-programming)\n  * [Operating Systems](#operating-systems)\n  * [Distributed Systems](#distributed-systems)\n  * [Real-Time Systems](#real-time-systems) \n- [Database Systems](#database-systems)\n- [Software Engineering](#software-engineering)\n  * [Object Oriented Design](#object-oriented-design)\n  * [Software Engineering](#software-engineering)\n  * [Software Architecture](#software-architecture)\n  * [Concurrency](#concurrency)\n  * [Mobile Application Development](#mobile-application-development)\n- [Artificial Intelligence](#artificial-intelligence)\n- [Machine Learning](#machine-learning)\n  * [Introduction to Machine Learning](#introduction-to-machine-learning)\n  * [Data Mining](#data-mining)\n  * [Probabilistic Graphical Modeling](#probabilistic-graphical-modeling)\n  * [Deep Learning](#deep-learning)\n  * [Reinforcement Learning](#reinforcement-learning)\n  * [Advanced Machine Learning](#advanced-machine-learning)\n  * [Natural Language Processing](#natural-language-processing)\n  * [Generative AI](#generative-ai)\n  * [Computer Vision](#computer-vision)\n  * [Time Series Analysis](#time-series-analysis)\n  * [Optimization](#optimization)\n  * [Misc Machine Learning Topics](#misc-machine-learning-topics)\n- [Computer Networks](#computer-networks)\n- [Math for Computer Scientist](#math-for-computer-scientist)\n- [Web Programming and Internet Technologies](#web-programming-and-internet-technologies)\n- [Theoretical CS and Programming Languages](#theoretical-cs-and-programming-languages)\n- [Embedded Systems](#embedded-systems)\n- [Real time system evaluation](#real-time-system-evaluation)\n- [Computer Organization and Architecture](#computer-organization-and-architecture)\n- [Security](#security)\n- [Computer Graphics](#computer-graphics)\n- [Image Processing and Computer Vision](#image-processing-and-computer-vision)\n- [Computational Physics](#computational-physics)\n- [Computational Biology](#computational-biology)\n- [Quantum Computing](#quantum-computing)\n- [Robotics and Control](#robotics-and-control)\n- [Computational Finance](#computational-finance)\n- [Blockchain Development](#blockchain-development)\n- [Misc](#misc)\n\n<!-- omit in toc -->\n## Courses\n\n------------------------------\n\n### Introduction to Computer Science\n\n- [CS 10 - The Beauty and Joy of Computing - Spring 2015 - Dan Garcia - UC Berkeley InfoCoBuild](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs10-spring2015-berkeley.html)\n- [6.0001 - Introduction to Computer Science and Programming in Python - MIT OCW](https://ocw.mit.edu/courses/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/video_galleries/lecture-videos/)\n- [6.001 - Structure and Interpretation of Computer Programs, MIT](https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video_galleries/video-lectures/)\n- [Introduction to Computational Thinking - MIT](https://computationalthinking.mit.edu/Fall22/)\n- [CS 50 - Introduction to Computer Science, Harvard University](https://online-learning.harvard.edu/course/cs50-introduction-computer-science) ([cs50.tv](http://cs50.tv/2017/fall/))\n- [CS50R - Introduction to Programming with R](https://cs50.harvard.edu/r/2024/) ([Lecture Videos](https://www.youtube.com/playlist?list=PLhQjrBD2T382yfNp_-xzX244d-O9W6YmD))\n- [CS 61A - Structure and Interpretation of Computer Programs [Python], UC Berkeley](https://cs61a.org/)\n- [CPSC 110 - Systematic Program Design [Racket], University of British Columbia](https://www.youtube.com/channel/UC7dEjIUwSxSNcW4PqNRQW8w/playlists?view=1&flow=grid&sort=da)\n- [CS50's Understanding Technology](https://www.youtube.com/playlist?list=PLhQjrBD2T382p8amnvUp1rws1p7n7gJ2p)\n- [CSE 142 Computer Programming I (Java Programming), Spring 2016 - University of Washington](https://courses.cs.washington.edu/courses/cse142/16sp/calendar.shtml)\n- [CS 1301 Intro to computing - Gatech](https://www.cc.gatech.edu/classes/AY2016/cs1301c_fall/)\n- [CS 106A - Programming Methodology, Stanford University](https://see.stanford.edu/Course/CS106A) ([Lecture Videos](https://www.youtube.com/playlist?list=PL84A56BC7F4A1F852))\n- [CS 106B - Programming Abstractions, Stanford University](https://see.stanford.edu/Course/CS106B) ([Lecture Videos](https://www.youtube.com/playlist?list=PLnfg8b9vdpLn9exZweTJx44CII1bYczuk))\n- [CS 106L - Standard C++ Programming](https://web.stanford.edu/class/cs106l/)([Lecture Videos](https://www.youtube.com/playlist?list=PLCgD3ws8aVdolCexlz8f3U-RROA0s5jWA))\n- [CS 106X - Programming Abstractions in C++](http://web.stanford.edu/class/cs106x/) ([Lecture Videos](https://www.youtube.com/playlist?list=PLrivl8gTKLcpIJ-ktHCxMEgWOn8LawYhb))\n- [CS 107 - Programming Paradigms, Stanford University](https://see.stanford.edu/Course/CS107)\n- [CmSc 150 - Introduction to Programming with Arcade Games, Simpson College](http://ProgramArcadeGames.com)\n- [LINFO 1104 - Paradigms of computer programming, Peter Van Roy, Université catholique de Louvain, Belgium - EdX](https://www.youtube.com/playlist?list=PLw454N-VXALSIzIe_eL5U8L4S68v2X_ak)\n- [FP 101x - Introduction to Functional Programming, TU Delft](https://ocw.tudelft.nl/courses/introduction-to-functional-programming/)\n- [Introduction to Problem Solving and Programming - IIT Kanpur](https://nptel.ac.in/courses/106104074/)\n- [Introduction to programming in C - IIT Kanpur](https://nptel.ac.in/courses/106104128/)\n- [Programming in C++ - IIT Kharagpur](https://nptel.ac.in/courses/106105151/)\n- [Python Boot Camp Fall 2016 - Berkeley Institute for Data Science (BIDS)](https://www.youtube.com/playlist?list=PLKW2Azk23ZtSeBcvJi0JnL7PapedOvwz9)\n- [CS 101 - Introduction to Computer Science - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPmjFQ2w9j05WDX8Jtg5RXWW)\n- [6.00SC - Introduction to Computer Science and Programming (Spring 2011) - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/)\n- [6.00 - Introduction to Computer Science and Programming (Fall 2008) - MIT OCW](https://ocw.mit.edu/courses/6-00-introduction-to-computer-science-and-programming-fall-2008/video_galleries/video-lectures/)\n- [6.01SC - Introduction to Electrical Engineering and Computer Science I - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/)\n- [Modern C++ Course (2018) - Bonn University](https://www.youtube.com/playlist?list=PLgnQpQtFTOGR50iIOtO36nK6aNPtVq98C)\n- [Modern C++ (Lecture & Tutorials, 2020, Vizzo & Stachniss) - University of Bonn](https://www.youtube.com/playlist?list=PLgnQpQtFTOGRM59sr3nSL8BmeMZR9GCIA)\n- [UW Madison CS 368 C++ for Java Programmers Fall 2020, by Michael Doescher](https://www.youtube.com/playlist?list=PLXY5xcFHqg33srpQjC7q7jqITLxcErPCM)\n- [UW Madison CS 354 Machine Organization and Programming spring 2020, 2021, by Michael Doescher](https://www.youtube.com/playlist?list=PLXY5xcFHqg32r5MZ-HfpA2Tr8Ke2lDYwI)\n- [Cornell ECE 4960 Computational and Software Engineering spring 2017, by Edwin Kan](https://www.youtube.com/playlist?list=PLcVqWUh-bHiFN2CY1KMTw0-L39iDXlemi)\n\n------------------------------\n\n### Data Structures and Algorithms\n\n- [ECS 36C - Data Structures and Algorithms (C++) - Spring 2020 - Joël Porquet-Lupine - UC Davis](https://lupteach.gitlab.io/courses/ucd-ecs36c/online/)\n- [Programming and Data Structures with Python, 2021-2022, Sem I - by Prof. Madhavan Mukund, CMI](https://www.cmi.ac.in/~madhavan/courses/python2021sep/)\n- [6.006 - Introduction to Algorithms, MIT OCW](https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/video_galleries/lecture-videos/)\n- [MIT 6.006 Introduction to Algorithms, Spring 2020](https://www.youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY)\n- [Algorithms: Design and Analysis 1 - Stanford University](https://www.youtube.com/playlist?list=PLXFMmlk03Dt7Q0xr1PIAriY5623cKiH7V)\n- [Algorithms: Design and Analysis 2 - Stanford University](https://www.youtube.com/playlist?list=PLXFMmlk03Dt5EMI2s2WQBsLsZl7A5HEK6)\n- [COS 226 Algorithms, Youtube, Princeton - by Robert Sedgewick and Kevin Wayne](https://www.youtube.com/watch?v=1QZDe28peZk&list=PLRdD1c6QbAqJn0606RlOR6T3yUqFWKwmX&index=1)\n- [CSE 331 Introduction to Algorithm Design and Analysis, SUNY University at Buffalo, NY - Fall 2017](http://www-student.cse.buffalo.edu/~atri/cse331/fall17/index.html) ([Lectures](https://www.youtube.com/playlist?list=PLZBCR-EGqNpoiHeO17FlLADJ38Kb3EiPU)) ([Homework Walkthroughs](https://www.youtube.com/playlist?list=PLZBCR-EGqNpoVyQCIUDHiXnL-zdFD_ixk))\n- [CSE 373 - Analysis of Algorithms, Stony Brook - Prof Skiena](http://www.cs.sunysb.edu/~algorith/video-lectures/)\n- [COP 3530 Data Structures and Algorithms, Prof Sahni, UFL](http://www.cise.ufl.edu/~sahni/cop3530/) ([Videos](http://www.cise.ufl.edu/academics/courses/preview/cop3530sahni/))\n- [CS225 - Data Structures - University of Illinois at Urbana-Champaign](https://cs.illinois.edu/courses/profile/CS225)([Video lectures](https://www.youtube.com/playlist?list=PLRdSp8jtJxBqG3KNQPKKB-0Z2hh9omoDo))\n- [CS2 - Data Structures and Algorithms - Richard Buckland - UNSW](https://www.youtube.com/playlist?list=PLE621E25B3BF8B9D1)\n- [Data Structures - Pepperdine University](https://itunes.apple.com/us/course/data-structures/id546468797)\n- [CS 161 - Design and Analysis of Algorithms, Prof. Tim Roughgarden, Stanford University](http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=IntroToAlgorithms)\n- [6.046J - Introduction to Algorithms - Fall 2005, MIT OCW](https://ocw.mit.edu/courses/6-046j-introduction-to-algorithms-sma-5503-fall-2005/)\n- [Introduction to Algorithms (Spring 2020), MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-spring-2020/)\n- [6.046 - Design and Analysis of Algorithms, Spring 2015 - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/lecture-videos/)\n- [CS 473 - Algorithms - University of Illinois at Urbana-Champaign](https://courses.engr.illinois.edu/cs473/sp2016/lectures.html) ([Notes - Jeff Erickson](http://jeffe.cs.illinois.edu/teaching/algorithms/)) ([YouTube](https://www.youtube.com/playlist?list=PL0v718LJg-78SFq81e4kJh_rS8XbKZ7Kn))\n- [COMP300E - Programming Challenges, Prof Skiena, Hong Kong University of Science and Technology - 2009](https://www.youtube.com/playlist?list=PL07B3F10B48592010)\n- [16s-4102 - Algorithms, University of Virginia](http://www.cs.virginia.edu/~shelat/16s-4102/) ([Youtube](https://www.youtube.com/channel/UCxXYk53cSZof2bR_Ax0uJYQ/videos))\n- [CS 61B - Data Structures (Java) - UC Berkeley](https://inst.eecs.berkeley.edu/~cs61b/)([Youtube](https://www.youtube.com/watch?v=gG4--V_PpEk&list=PLjuu7kFWxFtZBm-5GifiVpqdAxeW7Hsax))\n- [CS 170 Algorithms - UCBerkeley](https://cs170.org/) [Fall 2018, Youtube](https://www.youtube.com/watch?v=fd5P-8IQwMY&list=PLkFD6_40KJIx8lWWbE-Uk069aZ1R-W-VU&index=2&t=0s) [Fall 2018,Bilibili](https://www.bilibili.com/video/av43955743/?p=1) [2013 Bilibili](https://www.bilibili.com/video/av26670685/)\n- [ECS 122A - Algorithm Design and Analysis, UC Davis](http://web.cs.ucdavis.edu/~gusfield/cs122f10/videolist.html)\n- [CSEP 521 - Applied Algorithms, Winter 2013 - University of Washington](https://courses.cs.washington.edu/courses/csep521/13wi/) ([Videos](https://courses.cs.washington.edu/courses/csep521/13wi/video/))\n- [Data Structures And Algorithms - IIT Delhi](https://nptel.ac.in/courses/106102064/)\n- [Design and Analysis of Algorithms - IIT Bombay](https://nptel.ac.in/courses/106101060/)\n- [Programming, Data Structures and Algorithms - IIT Madras](https://nptel.ac.in/courses/106106127/)\n- [Design and Analysis of Algorithms - IIT Madras](https://nptel.ac.in/courses/106106131/)\n- [Fundamental Algorithms:Design and Analysis - IIT Kharagpur](https://nptel.ac.in/courses/106105157/)\n- [Programming and Data Structure - IIT Kharagpur](https://nptel.ac.in/courses/106105085/)\n- [Programming, Data structures and Algorithms - IIT Madras](https://nptel.ac.in/courses/106106133/)\n- [Programming, Data Structures and Algorithms in Python - IIT Madras](https://nptel.ac.in/courses/106106145/)\n- [Programming and Data structures (PDS) - IIT Madras](https://nptel.ac.in/courses/106106130/)\n- [COP 5536 Advanced Data Structures, Prof Sahni - UFL](http://www.cise.ufl.edu/~sahni/cop5536/index.html) ([Videos](http://www.cise.ufl.edu/academics/courses/preview/cop5536sahni/))\n- [CS 261 - A Second Course in Algorithms, Stanford University](http://theory.stanford.edu/~tim/w16/w16.html) ([Youtube](https://www.youtube.com/playlist?list=PLEGCF-WLh2RJh2yDxlJJjnKswWdoO8gAc))\n- [CS 224 - Advanced Algorithms, Harvard University](http://people.seas.harvard.edu/~minilek/cs224/fall14/index.html) ([Lecture Videos](http://people.seas.harvard.edu/~minilek/cs224/fall14/lec.html)) ([Youtube](https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf))\n- [CS 6150 - Advanced Algorithms (Fall 2016), University of Utah](https://www.youtube.com/playlist?list=PLbuogVdPnkCp8X9FHOglnLqFjyvqGLftx)\n- [CS 6150 - Advanced Algorithms (Fall 2017), University of Utah](https://www.youtube.com/playlist?list=PLbuogVdPnkCqS9Z419eky9m6gJP7zfhO9)\n- [ECS 222A - Graduate Level Algorithm Design and Analysis, UC Davis](http://web.cs.ucdavis.edu/~gusfield/cs222f07/videolist.html)\n- [6.851 - Advanced Data Structures, MIT](http://courses.csail.mit.edu/6.851/spring14/lectures/) ([MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-851-advanced-data-structures-spring-2012/lecture-videos/))\n- [6.854 - Advanced Algorithms, MIT](https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c) ([Prof. Karger lectures](https://www.youtube.com/channel/UCtv9PiQVUDzsT4yl7524DCg/videos))\n- [CS264 Beyond Worst-Case Analysis, Fall 2014 - Tim Roughgarden Lecture](http://theory.stanford.edu/~tim/f14/f14.html) ([Youtube](https://www.youtube.com/playlist?list=PLEGCF-WLh2RL8jsZpaf2tLHa5LotFEt5b))\n- [CS364A Algorithmic Game Theory, Fall 2013 - Tim Roughgarden Lectures](https://www.youtube.com/playlist?list=PLEGCF-WLh2RJBqmxvZ0_ie-mleCFhi2N4)\n- [CS364B Advanced Mechanism Design, Winter 2014 - Tim Roughgarden Lectures](https://www.youtube.com/playlist?list=PLEGCF-WLh2RI77PL4gwLld_OU9Zh3TCX9)\n- [Algorithms - Aduni](http://aduni.org/courses/algorithms/index.php?view=cw)\n- [6.889 - Algorithms for Planar Graphs and Beyond (Fall 2011) MIT](http://courses.csail.mit.edu/6.889/fall11/lectures/)\n- [6.890 Algorithmic Lower Bounds: Fun with Hardness Proofs - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-890-algorithmic-lower-bounds-fun-with-hardness-proofs-fall-2014/)\n- [Computer Algorithms - 2 - IIT Kanpur](https://nptel.ac.in/courses/106104019/)\n- [Parallel Algorithm - IIT Kanpur](https://nptel.ac.in/courses/106104120/)\n- [Graph Theory - IISC Bangalore](https://nptel.ac.in/courses/106108054/)\n- [Data Structures - mycodeschool](https://www.youtube.com/watch?v=92S4zgXN17o&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P)\n- [Algorithmic Game Theory, Winter 2020/21 - Uni Bonn](https://www.youtube.com/playlist?list=PLyzcvvgje7aD_DjpmhFzQ9DVS8zzhrgp6)\n- [NETS 4120: Algorithmic Game Theory, Spring 2023 - UPenn](https://www.youtube.com/playlist?list=PLlIlhe_rS4U1MfB0NzG4IWb7CM0xKkx4d)\n- [Introduction to Game Theory and Mechanism Design - IIT Kanpur](https://www.youtube.com/playlist?list=PL3eEm6KzZ3lF2TlVOnPyJHyGWJhUogn-D)\n- [15-850 Advanced Algorithms - CMU Spring 2023](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%2253c58248-7fd4-4f71-8774-af85013a570a%22&page=1)\n- [CS 270. Combinatorial Algorithms and Data Structures, Spring 2021](https://people.eecs.berkeley.edu/~prasad/spring2021.html) ([Youtube](https://www.youtube.com/playlist?list=PLfkeJ2f4i0AfWApBP8X8YvQfN4WbRQTC3))\n- [CMU 15 850 Advanced Algorithms spring 2023, by Anupam Gupta](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%2253c58248-7fd4-4f71-8774-af85013a570a%22&page=1)\n- [UC Berkeley CS 294-165 Sketching Algorithms fall 2020, by Jelani Nelson](https://www.youtube.com/playlist?list=PL682UO4IMem-SSHdZel8BJ0Ti2yp65spI)\n- [UIUC CS 498 ABD / CS 598 CSC Algorithms for Big Data fall 2020, by Chandra Chekuri](https://www.youtube.com/playlist?list=PL682UO4IMem_OA8_wY3nnSDLOSWr3PgYa)\n- [Algorithms for Data Science spring 2021, by Anil Maheshwari ](https://people.scs.carleton.ca/~maheshwa/courses/ADS/ADS-S20.html)\n- [CMU 15 859 Algorithms for Big Data fall 2020, by David Woodruff](http://www.cs.cmu.edu/~dwoodruf/teaching/15859-fall20/index.html)\n- [CO 642 Graph Theory - University of Waterloo](https://www.youtube.com/playlist?list=PL2BdWtDKMS6mplieDd_vls0TBX9Fq2jht)\n- [COMS W4241 Numerical Algorithms spring 2006, by Henryk Wozniakowski - Columbia](https://www.youtube.com/playlist?list=PL682UO4IMem98vm26lNUJ0TV0-EFrcUJb)\n- [Bonn Algorithms and Uncertainty summer 2021, by Thomas Kesselheim](https://www.youtube.com/playlist?list=PLyzcvvgje7aDZRFMJZgaVgOW5t5KLvD1-)\n- [Harvard Information Theory 2022, by Gregory Falkovich](https://www.youtube.com/playlist?list=PLDEN2FPNHwVZKAFqfFl1b_NNAESTJwV9o)\n- [Math 510 - Linear Programming and Network Flows - Colorado State University](https://www.math.colostate.edu/~adams/teaching/math510fall2020/)\n- [LINFO 2266 Advanced Algorithms for Optimization 2021, by Pierre Schaus - UCLouvain](https://www.youtube.com/playlist?list=PL682UO4IMem-wgYnJl5yMswlNkve_8oGU)\n- [MIT 6.854 / 18.415 Advanced Algorithms spring 2016, by Ankur Moitra](https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c)\n- [CMU 10 801 Advanced Optimization and Randomized Algorithms spring 2014, by Suvrit Sra and Alex Smola](https://www.cs.cmu.edu/~suvrit/teach/)\n- [UC Santa Cruz CSE 202 Combinatorial Algorithms spring 2021, by Seshadhri Comandur](https://www.youtube.com/playlist?list=PLOQjlWvnI0fbn9zAJfvJoQF1nc50KQR9g)\n- [UC Santa Cruz CSE 104, 204 Computational Complexity fall 2020, spring 2022, by Seshadhri Comandur](https://www.youtube.com/playlist?list=PLOQjlWvnI0fYMPFnJeVZ0kt4KPwWcbF0o)\n- [UC Santa Cruz CSE 290A Randomized Algorithms spring 2020, by Seshadhri Comandur](https://www.youtube.com/playlist?list=PLOQjlWvnI0faRpH2oJcyW4CuM5Clt8a2n)\n\n\n------------------------------\n\n### Systems Programming\n\n- [15-213 Introduction to Computer Systems, Fall 2015  - CMU](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22b96d90ae-9871-4fae-91e2-b1627b43e25e%22&maxResults=150)\n- [CS361 - COMPUTER SYSTEMS - UIC](https://www.cs.uic.edu/~ckanich/cs361/f20/)\n- [CS 3650 - Computer Systems - Fall 2020 - Nat Tuck - NEU](https://web.archive.org/web/20210423030302/https://ntuck-neu.site/2020-09/cs3650/) ([Lectures - YouTube](https://www.youtube.com/playlist?list=PLtg_A_3rzLAtBuwQp6mA3WveYw9Q7GzIZ))\n- [CS 4400 – Computer Systems   Fall 2016 - UoUtah](https://www.eng.utah.edu/~cs4400/)\n- [Systems - Aduni](http://aduni.org/courses/systems/index.php?view=cw)\n- [CS110: Principles of Computer Systems - Stanford](https://web.stanford.edu/class/archive/cs/cs110/cs110.1202/)\n- #### **Operating Systems**\n  - [ECS 150 - Operating Systems and Systems Programming - Fall 2020 - Joël Porquet-Lupine - UC Davis](https://lupteach.gitlab.io/courses/ucd-ecs150/online/)\n  - [CS124 Operating Systems - California Institute of Technology, Fall 2018 - Youtube](https://www.youtube.com/playlist?list=PL3swII2vlVoVbav6FV98pidq6BsTN4u56)\n  - [CS 162 Operating Systems and Systems Programming, Spring 2015 - University of California, Berkeley](https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c?sort=titleSorter)\n  - [CS 4414 - Operating Systems, University of Virginia (rust-class)](http://rust-class.org/pages/classes.html)\n  - [CS 4414 Operating Systems, Fall 2018 - University of Virginia](https://www.cs.virginia.edu/~cr4bd/4414/F2018/schedule.html)\n  - [CSE 421/521 - Introduction to Operating Systems, SUNY University at Buffalo, NY - Spring 2016](https://www.ops-class.org/courses/buffalo/CSE421_Spring2016/) ([Lectures - YouTube](https://www.youtube.com/playlist?list=PLE6LEE8y2Jp-kbEcVR2W3vfx0Pdca0BD3)) ([Recitations 2016](https://www.youtube.com/playlist?list=PLE6LEE8y2Jp_YJn8wu9aJTPOgeWqiaJDF)) ([Assignment walkthroughs](https://www.youtube.com/playlist?list=PLE6LEE8y2Jp9PC8fyzc2meL4XvrVSyP8O))\n  - [CS 377 - Operating Systems, Fall 16 - Umass OS](https://www.youtube.com/playlist?list=PLacuG5pysFbDTmsCRGWsMW_PzIOpXnckw)\n  - [CS 577 - Operating Systems, Spring 20 - Umass OS](https://www.youtube.com/playlist?list=PLacuG5pysFbB2_z9EkSfQIjq3yNzy8igs)\n  - [6.828 - Operating System Engineering [Fall 2014]](https://www.youtube.com/playlist?list=PLfciLKR3SgqNJKKIKUliWoNBBH1VHL3AP)\n  - [6.S081 - Operating System Engineering [Fall 2020]](https://pdos.csail.mit.edu/6.828/2020/schedule.html)\n  - [CSE 30341 - Operating Systems, Spr 2008](https://www.youtube.com/playlist?list=PLAB7D5CA7E262B0E2)\n  - [CSEP 551 Operating Systems Autumn 2014 - University of Washington](https://courses.cs.washington.edu/courses/csep551/14au/video/)\n  - [Introduction to Operating Systems - IIT Madras](https://nptel.ac.in/courses/106106144/)\n  - [CS194 Advanced Operating Systems Structures and Implementation, Spring 2013 InfoCoBuild, UC Berkeley](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs194-spring2013-berkeley.html)\n  - [CSE 60641 - Graduate Operating Systems, Fall 08](https://www.youtube.com/view_play_list?p=22B10D854588E20C)\n  - [Advanced Programming in the UNIX Environment](https://stevens.netmeister.org/631/)\n- #### **Distributed Systems**\n  - [CS 677 - Distributed Operating Systems, Spring 24 - Umass OS](https://www.youtube.com/playlist?list=PLacuG5pysFbBpWHfKUU9Dfdk8RmQ7B9EH)\n  - [CS 436 - Distributed Computer Systems - U Waterloo](https://www.youtube.com/playlist?list=PLawkBQ15NDEkDJ5IyLIJUTZ1rRM9YQq6N)\n  - [6.824 - Distributed Systems, Spring 2015 - MIT](https://www.youtube.com/playlist?list=PLkcQbKbegkMqiWf7nF8apfMRL4P4sw8UL)\n  - [6.824 Distributed Systems - Spring 2020 - MIT](https://pdos.csail.mit.edu/6.824/schedule.html) ([Youtube](https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB))\n  - [Distributed Systems Lecture Series](https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB)\n  - [Distributed Algorithms, https://canvas.instructure.com/courses/902299](https://www.youtube.com/playlist?list=PL700757A5D4B3F368)\n  - [CSEP 552 - PMP Distributed Systems, Spring 2013 - University of Washington](https://courses.cs.washington.edu/courses/csep552/13sp/) ([Videos](https://courses.cs.washington.edu/courses/csep552/13sp/video/))\n  - [CSE 490H - Scalable Systems: Design, Implementation and Use of Large Scale Clusters, Autumn 2008 - University of Washington](https://courses.cs.washington.edu/courses/cse490h/08au/lectures.htm) ([Videos](https://courses.cs.washington.edu/courses/cse490h/08au/video.htm))\n  - [MOOC - Cloud Computing Concepts - UIUC](https://www.youtube.com/playlist?list=PLFd87qVsaLhOkTLvfp6MC94iFa_1c9wrU)\n  - [Distributed Systems (Prof. Pallab Dasgupta)](https://www.youtube.com/playlist?list=PLUJ7JmcrTifBROWODSG8wgyl20XgBuE-N)\n  - [EdX KTHx ID2203 Reliable Distributed Algorithms](https://www.youtube.com/playlist?list=PLx3mQFFeHPjndmQ0iP9j6C58b90hqGa0X)\n  - [Distributed Data Management - Technische Universität Braunschweig, Germany](http://www.ifis.cs.tu-bs.de/teaching/ss-15/ddm)\n  - [Information Retrieval and Web Search Engines - Technische Universität Braunschweig, Germany](http://www.ifis.cs.tu-bs.de/teaching/ws-1516/IRWS)\n  - [Middleware and Distributed Systems (WS 2009/10) - Dr. Martin von Löwis - HPI](https://www.tele-task.de/series/729/)\n  - [CSE 138 - Distributed Systems - UC Santa Cruz, Spring 2020](https://www.youtube.com/playlist?list=PLNPUF5QyWU8O0Wd8QDh9KaM1ggsxspJ31) ([2021](https://www.youtube.com/playlist?list=PLNPUF5QyWU8PydLG2cIJrCvnn5I_exhYx))\n  - [CMU 15 440 / 640 Distributed Systems Spring 2022, by Mahadev Satyanarayanan, Padmanabhan Pillai](https://www.youtube.com/playlist?list=PL682UO4IMem8a6N8GAOGkgcbDkGG1g5OH)\n  - [UNC Comp533 - Distributed Systems Spring 2020](https://www.youtube.com/playlist?list=PLH5XTBxCO2hzgww9p5sew30lx3ngJsxcB)\n  - [Brown CSCI 1380 Distributed Computer Systems spring 2016, by Tom Doeppner & Rodrigo Fonseca](https://cs.brown.edu/courses/cs138/s16/syllabus.html)\n- #### **Real-Time Systems**\n  - [CPCS 663 - Real-Time Systems: Video Material - TAMU](http://faculty.cs.tamu.edu/bettati/Courses/663/Video/presentation.html)\n  - [Real Time Systems - IIT Kharagpur](https://nptel.ac.in/courses/106105036/)\n- [6.172 Performance Engineering of Software Systems - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2018/)\n- [Performance Evaluation of Computer Systems - IIT Madras](https://nptel.ac.in/courses/106106048/)\n- [Storage Systems - IISC Bangalore](https://nptel.ac.in/courses/106108058/)\n- [MAP6264 - Queueing Theory - FAU](http://www.cse.fau.edu/~bob/courses/map6264/)([Video Lectures](https://vimeo.com/album/171324/))\n- [EE 380 Colloquium on Computer Systems - Stanford University](http://web.stanford.edu/class/ee380/) ([Lecture videos](https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu))\n\n------------------------------\n\n### Database Systems\n\n- [CMPSC 431W Database Management Systems, Fall 2015 - Penn State University](http://www.cse.psu.edu/~wul2/cmpsc431w/) [Lectures - YouTube](https://www.youtube.com/playlist?list=PLstRzn3gXZMdXqAiVJ1NN2CoyXHqma7pQ)\n- [CS121 - Introduction to Relational Database Systems, Fall 2016 - Caltech](http://users.cms.caltech.edu/~donnie/cs121/)\n- [CS 5530 - Database Systems, Spring 2016 - University of Utah](https://www.youtube.com/playlist?list=PLbuogVdPnkCrercQNP9tTsjjPdgRVYvC7)\n- [Distributed Data Management (WT 2018/19) - HPI University of Potsdam](https://www.tele-task.de/series/1224/)\n- [MOOC - Database Stanford Dbclass](https://www.youtube.com/playlist?list=PL6hGtHedy2Z4EkgY76QOcueU8lAC4o6c3)\n- [CSEP 544, Database Management Systems, Au 2015 - University of Washington](https://www.youtube.com/playlist?list=PLTPQEx-31JXjQYrUKvAjUTWgCYluHGs_L)\n- [Database Design - IIT Madras](https://nptel.ac.in/courses/106106093/)\n- [Fundamentals of Database Systems - IIT Kanpur](https://nptel.ac.in/courses/106104135/)\n- [Principles of Database Management, Bart Baesens](https://www.youtube.com/playlist?list=PLdQddgMBv5zEhlpqdiUcf9aTNEtmESgyl)\n- [FIT9003 Database Systems Design - Monash University](https://itunes.apple.com/us/podcast/fit9003-database-systems-design/id306569364)\n- [15-445 - Introduction to Database Systems, CMU](https://15445.courses.cs.cmu.edu/fall2022/) ([YouTube-2017](https://www.youtube.com/playlist?list=PLSE8ODhjZXjYutVzTeAds8xUt1rcmyT7x), [YouTube-2018](https://www.youtube.com/playlist?list=PLSE8ODhjZXja3hgmuwhf89qboV1kOxMx7), [YouTube-2019](https://www.youtube.com/playlist?list=PLSE8ODhjZXjbohkNBWQs_otTrBTrjyohi), [YouTube-2021](https://www.youtube.com/playlist?list=PLSE8ODhjZXjZaHA6QcxDfJ0SIWBzQFKEG), [YouTube-2022](https://www.youtube.com/playlist?list=PLSE8ODhjZXjaKScG3l0nuOiDTTqpfnWFf))\n- [15-721 - Database Systems, CMU](http://15721.courses.cs.cmu.edu/spring2017) ([YouTube-2017](https://www.youtube.com/playlist?list=PLSE8ODhjZXjYgTIlqf4Dy9KQpQ7kn1Tl0), [YouTube-2016](https://www.youtube.com/playlist?list=PLSE8ODhjZXjbisIGOepfnlbfxeH7TW-8O))\n- [15-721 Advanced Database Systems (Spring 2019) - CMU](https://www.youtube.com/playlist?list=PLSE8ODhjZXja7K1hjZ01UTVDnGQdx5v5U)\n- [CS122 - Relational Database System Implementation, Winter 2014-2015 - Caltech](http://users.cms.caltech.edu/~donnie/cs122/)\n- [CS 186 - Database Systems, UC Berkeley, Spring 2015](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs186-spring2015-berkeley.html)\n- [CS 6530 - Graduate-level Database Systems, Fall 2016, University of Utah](https://www.cs.utah.edu/~lifeifei/cs6530/) ([Lectures - YouTube](https://www.youtube.com/playlist?list=PLbuogVdPnkCqwHUcieMrytP453Ep0y6eI))\n- [6.830/6.814 - Database Systems [Fall 2014]](https://www.youtube.com/playlist?list=PLfciLKR3SgqOxCy1TIXXyfTqKzX2enDjK)\n- [Informatics 1 - Data & Analysis 2014/15- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2014/da.htm)\n- [Database Management Systems, Aduni](http://aduni.org/courses/databases/index.php?view=cw)\n- [D4M - Signal Processing on Databases](https://ocw.mit.edu/resources/res-ll-005-d4m-signal-processing-on-databases-fall-2012/)\n- [In-Memory Data Management (2013)Prof. Hasso Plattner - HPI](https://open.hpi.de/courses/imdb2013/items/72j6pftms3dOSunM98JhfW)\n- [Distributed Data Management (WT 2019/20) - Dr. Thorsten Papenbrock - HPI](https://www.tele-task.de/series/1285/)\n- [CS122d - NoSQL Data Management (Spring 21) - Prof. Mike Carey - UC Irvine](https://uci.yuja.com/V/PlayList?node=9933576&a=1583628376&autoplay=1)\n\n------------------------------\n\n### Software Engineering\n\n- #### **Object Oriented Design**\n  - [ECE 462 Object-Oriented Programming using C++ and Java - Purdue](https://engineering.purdue.edu/OOSD/F2008/F2008.html)\n  - [Object-oriented Program Design and Software Engineering - Aduni](http://aduni.org/courses/java/index.php?view=cw)\n  - [OOSE - Object-Oriented Software Engineering, Dr. Tim Lethbridge](https://www.youtube.com/playlist?list=PL6iDJCG2nkhfNlig8NY5ePPfGvtQX6yLa)\n  - [Object Oriented Systems Analysis and Design (Systems Analysis and Design in a Changing World)](https://www.youtube.com/playlist?list=PL6XklZATqYx9dj72MKG6wLYjljeB2odra)\n  - [CS 251 - Intermediate Software Design (C++ version) - Vanderbilt University](https://www.youtube.com/playlist?list=PLZ9NgFYEMxp4ZsvD10uXmClGnukcu3Uff)\n  - [OOSE - Software Dev Using UML and Java](https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO)\n  - [Object-Oriented Analysis and Design - IIT Kharagpur](https://nptel.ac.in/courses/106105153/)\n  - [CS3 - Design in Computing - Richard Buckland UNSW](https://www.youtube.com/playlist?list=PL0C5D85DBA20E685C)\n  - [Informatics 1 - Object-Oriented Programming 2014/15- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf1op.htm)\n  - [Software Engineering with Objects and Components 2015/16- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2015/seoc.htm)\n- #### **Software Engineering**\n  - [Computer Science 169- Software Engineering - Spring 2015 - UCBerkeley](https://www.youtube.com/playlist?list=PL-XXv-cvA_iCfQHHS7rxlfHFsU4aQW1IF)\n  - [Computer Science 169- Software Engineering - Fall 2019 - UCBerkeley](https://www.youtube.com/playlist?list=PLkFD6_40KJIxCKgzL0uysjsAtfY3JawLS)\n  - [CS 5150 -  Software Engineering, Fall 2014 - Cornell University](http://www.cs.cornell.edu/courses/cs5150/2014fa/materials.html)\n  - [Introduction to Service Design and Engineering - University of Trento, Italy](https://www.youtube.com/playlist?list=PLBdajHWwi0JCn87QuFT3e58mekU0-6WUT)\n  - [CS 164 Software Engineering - Harvard](https://www.youtube.com/watch?v=3zdfCR6c8vw&list=PLuhjguFxSeVLvKvWwTUIpVwXdLtZPX1ZS)\n  - [System Analysis and Design - IISC Bangalore](https://nptel.ac.in/courses/106108102/)\n  - [Software Engineering - IIT Bombay](https://nptel.ac.in/courses/106101061/)\n  - [Dependable Systems (SS 2014)- HPI University of Potsdam](https://www.tele-task.de/series/1005/)\n  - [Software Testing - IIT Kharagpur](https://nptel.ac.in/courses/106105150/)\n  - [Software Testing - Udacity, course-cs258 | 2015](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkWVHeC_8aSIbSxE_NXI76g)\n  - [Software Debugging - Udacity, course-cs259 | 2015](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkxK63TiT88oEe-AIBhr96A)\n  - [Software Engineering - Bauhaus-Uni Weimar](https://www.youtube.com/watch?v=jouBM4AH0jw&list=PLjEglKdMOevU2STTGq79duxTXDFuO-k1H&index=2)\n  - [CMU 17-445 Software Engineering for AI-Enabled Systems summer 2020, by Christian Kaestner](https://www.youtube.com/playlist?list=PLDS2JMJnJzdkQPdkhcuwcbJpjB84g9ffX)\n- #### **Software Architecture**\n  - [CS 411 - Software Architecture Design - Bilkent University](http://video.bilkent.edu.tr/course_videos.php?courseid=10)\n  - [MOOC - Software Architecture & Design - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkMTetlG7xKWaI5ZAZFX8fL)\n- #### **Concurrency**\n  - [CS176 - Multiprocessor Synchronization - Brown University](http://cs.brown.edu/courses/cs176/course_information.shtml) ([Videos from 2012](http://www.brown.edu/cis/sta/dev/herlihy_csci1760_fa12/#vid))\n  - [CS 282 (2014): Concurrent Java Network Programming in Android](https://www.youtube.com/playlist?list=PLZ9NgFYEMxp4KSJPUyaQCj7x--NQ6kvcX)\n  - [CSE P 506 – Concurrency, Spring 2011 - University of Washington](https://courses.cs.washington.edu/courses/csep506/11sp/Home.html) ([Videos](https://courses.cs.washington.edu/courses/csep506/11sp/Videos.html))\n  - [CSEP 524 - Parallel Computation - University of Washington](https://courses.cs.washington.edu/courses/csep524/10sp/) ([Videos](https://courses.cs.washington.edu/courses/csep524/10sp/lectures/video.html))\n  - [Parallel Programming Concepts (WT 2013/14) - HPI University of Potsdam](https://www.tele-task.de/series/977/)\n  - [Parallel Programming Concepts (WT 2012/13) - HPI University of Potsdam](https://www.tele-task.de/series/924/)\n  - [UIUC ECE 408 / CS 408 Applied Parallel Programming spring 2018, fall 2022, by Wen-mei Hwu, Sanjay Patel](https://www.youtube.com/playlist?list=PL6RdenZrxrw-UKfRL5smPfFFpeqwN3Dsz)\n  - [UIUC ECE 508 / CS 508 Manycore Parallel Algorithms spring 2019, by Wen-mei Hwu](https://www.youtube.com/playlist?list=PLRRuQYjFhpmspsME4LmLbuCG1VHbJmIcy)\n  - [UIUC CS 420 / ECE 492 / CSE 402 Introduction to Parallel Programming for Scientists and Engineers fall 2015, by Sanjay Kale](https://www.youtube.com/playlist?list=PL682UO4IMem9cAjfy_RPjAc6k-HPYpTa9)\n  - [Stanford CME 213 Introduction to Parallel Computing using MPI, openMP, and CUDA winter 2020, by Eric Darve](https://www.youtube.com/playlist?list=PLAtMgFDMfGy2mysjPHN_d1cf9sR1muRkq)\n- #### **Mobile Application Development**\n  - [MOOC Programming Mobile Applications for Android Handheld Systems - University of Maryland](https://www.youtube.com/playlist?list=PLkHsKoi6eZnwilGXUc95CqS7Vw4uLLDLG)\n  - [CS 193p - Developing Applications for iOS, Stanford University](https://cs193p.sites.stanford.edu/)\n  - [CS S-76 Building Mobile Applications - Harvard](http://cs76.tv/2013/summer/)\n  - [CS 251 (2015): Intermediate Software Design](https://www.youtube.com/playlist?list=PLZ9NgFYEMxp7lylj-XC8h1kjatOjbh9ne)\n  - [Android App Development for Beginners Playlist - thenewboston](https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBsvRxJJOzG4r4k_zLKrnxl)\n  - [Android Application Development Tutorials - thenewboston](https://www.youtube.com/playlist?list=PL2F07DBCDCC01493A)\n  - [MOOC - Developing Android Apps - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPnMwH5-FNkErnnq_aSy706S)\n  - [MOOC - Advanced Android App Development - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPmETCT07vnDSiIaUBuyut0X)\n  - [CSSE490 Android Development Rose-Hulman Winter 2010-2011, Dave Fisher](https://www.youtube.com/playlist?list=PLF3EEB647F6B52F03)\n  - [iOS Course, Dave Fisher](https://www.youtube.com/playlist?list=PL96C635E4DCD393A8)\n  - [Developing iPad Applications for Visualization and Insight - Carnegie Mellon University](https://itunes.apple.com/us/course/developing-ipad-applications/id499050344)\n  - [Mobile Computing - IIT Madras](https://nptel.ac.in/courses/106106147/)\n  - [Mobile Information Systems - Bauhaus-Uni Weimar](https://www.youtube.com/watch?v=8EmbrZJwMOI&list=PLjEglKdMOevWv4zPW0diw7iJFdT7s4sTP)\n\n------------------------------\n\n### Artificial Intelligence\n\n- [CS50 - Introduction to Artificial Intelligence with Python (and Machine Learning), Harvard OCW](https://cs50.harvard.edu/ai/2023/)\n- [CS 188 - Introduction to Artificial Intelligence, UC Berkeley - Spring 2023](https://www.youtube.com/playlist?list=PLp8QV47qJEg7WWVg_5eOECzVPpy23UjJz)\n- [6.034 Artificial Intelligence, MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/lecture-videos/)\n- [CS221: Artificial Intelligence: Principles and Techniques - Autumn 2019 - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rO1NB9TD4iUZ3qghGEGtqNX)\n- [15-780 - Graduate Artificial Intelligence, Spring 14, CMU](http://www.cs.cmu.edu/~zkolter/course/15-780-s14/lectures.html)\n- [CSE 592 Applications of Artificial Intelligence, Winter 2003 - University of Washington](https://courses.cs.washington.edu/courses/csep573/03wi/lectures/index.htm)\n- [CS322 - Introduction to Artificial Intelligence, Winter 2012-13 - UBC](http://www.cs.ubc.ca/~mack/CS322/) ([YouTube](https://www.youtube.com/playlist?list=PLDPnGbm0sUmpzvcGvktbz446SLdFbfZVU))\n- [CS 4804: Introduction to Artificial Intelligence, Fall 2016](https://www.youtube.com/playlist?list=PLUenpfvlyoa1iiSbGy9BBewgiXjzxVgBd)\n- [CS 5804: Introduction to Artificial Intelligence, Spring 2015](https://www.youtube.com/playlist?list=PLUenpfvlyoa0PB6_kqJ9WU7m6i6z1RhfJ)\n- [Artificial Intelligence - IIT Kharagpur](https://nptel.ac.in/courses/106105077/)\n- [Artificial Intelligence - IIT Madras](https://nptel.ac.in/courses/106106126/)\n- [Artificial Intelligence(Prof.P.Dasgupta) - IIT Kharagpur](https://nptel.ac.in/courses/106105079/)\n- [MOOC - Intro to Artificial Intelligence - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPlqMkzr4xyuD6cXTIgPuzgn)\n- [MOOC - Artificial Intelligence for Robotics - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkCSYXw6-a_aAoXVKLDwnHK)\n- [Graduate Course in Artificial Intelligence, Autumn 2012 - University of Washington](https://www.youtube.com/playlist?list=PLbQ3Aya0VERDoDdbMogU9EASJGWris9qG)\n- [Agent-Based Systems 2015/16- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2015/abs.htm)\n- [Informatics 2D - Reasoning and Agents 2014/15- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf2d.htm)\n- [Artificial Intelligence - Hochschule Ravensburg-Weingarten](https://www.youtube.com/playlist?list=PL39B5D3AFC249556A)\n- [Deductive Databases and Knowledge-Based Systems - Technische Universität Braunschweig, Germany](http://www.ifis.cs.tu-bs.de/teaching/ws-1516/KBS)\n- [Artificial Intelligence: Knowledge Representation and Reasoning - IIT Madras](https://nptel.ac.in/courses/106106140/)\n- [Semantic Web Technologies by Dr. Harald Sack - HPI](https://www.youtube.com/playlist?list=PLoOmvuyo5UAeihlKcWpzVzB51rr014TwD)\n- [Knowledge Engineering with Semantic Web Technologies by Dr. Harald Sack - HPI](https://www.youtube.com/playlist?list=PLoOmvuyo5UAcBXlhTti7kzetSsi1PpJGR)\n- [T81-558: Applications of Deep Neural Networks by Jeff Heaton, 2022, Washington University in St. Louis](https://sites.wustl.edu/jeffheaton/t81-558/)\n- [MSU programming for AI](https://www.youtube.com/playlist?list=PLZ-krWGO-UEz84TseDMIlx2Set6xZp0YP)\n\n------------------------------\n\n### Machine Learning\n\n- #### **Introduction to Machine Learning**\n  - [Introduction to Machine Learning for Coders](https://course18.fast.ai/ml)\n  - [MOOC - Statistical Learning, Stanford University](http://www.dataschool.io/15-hours-of-expert-machine-learning-videos/)\n  - [Statistical Learning with Python - Stanford Online](https://www.youtube.com/playlist?list=PLoROMvodv4rPP6braWoRt5UCXYZ71GZIQ)\n  - [Foundations of Machine Learning Boot Camp, Berkeley Simons Institute](https://www.youtube.com/playlist?list=PLgKuh-lKre11GbZWneln-VZDLHyejO7YD)\n  - [CS155 - Machine Learning & Data Mining, 2017 - Caltech](https://www.youtube.com/playlist?list=PLuz4CTPOUNi6BfMrltePqMAHdl5W33-bC) ([Notes](http://www.yisongyue.com/courses/cs155/2017_winter/)) ([2016](https://www.youtube.com/playlist?list=PL5HdMttxBY0BVTP9y7qQtzTgmcjQ3P0mb))\n  - [CS 156 - Learning from Data, Caltech](https://work.caltech.edu/lectures.html)\n  - [10-601 - Introduction to Machine Learning (MS) - Tom Mitchell - 2015, CMU](http://www.cs.cmu.edu/~ninamf/courses/601sp15/lectures.shtml) ([YouTube](https://www.youtube.com/playlist?list=PLAJ0alZrN8rD63LD0FkzKFiFgkOmEtltQ))\n  - [10-601 Machine Learning | CMU | Fall 2017](https://www.youtube.com/playlist?list=PL7k0r4t5c10-g7CWCnHfZOAxLaiNinChk)\n  - [10-701 - Introduction to Machine Learning (PhD) - Tom Mitchell, Spring 2011, CMU](http://www.cs.cmu.edu/~tom/10701_sp11/lectures.shtml) ([Fall 2014](https://www.youtube.com/playlist?list=PL7y-1rk2cCsDZCVz2xS7LrExqidHpJM3B)) ([Spring 2015 by Alex Smola](https://www.youtube.com/playlist?list=PLZSO_6-bSqHTTV7w9u7grTXBHMH-mw3qn))\n  - [10 - 301/601 - Introduction to Machine Learning - Fall 2023 - CMU](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22d5bf275d-ff88-4bf6-a865-b065010f55c2%22)\n  - [6.036 - Machine Learning, Broderick - MIT Fall 2020](https://www.youtube.com/playlist?list=PLxC_ffO4q_rW0bqQB80_vcQB09HOA3ClV)\n  - [Mediterranean Machine Learning summer school 2023](https://www.youtube.com/playlist?list=PLF-wkqRv4u1Y-Bret-wrcPypPCZ3Gg_3L)\n  - [Applied Machine Learning (Cornell Tech CS 5787, Fall 2020)](https://www.youtube.com/playlist?list=PL2UML_KCiC0UlY7iCQDSiGDMovaupqc83)\n  - [Stanford CS229: Machine Learning Course | Summer 2019 (Anand Avati)](https://www.youtube.com/playlist?list=PLoROMvodv4rNH7qL6-efu_q2_bPuy0adh) ([Spring 2022](https://www.youtube.com/playlist?list=PLoROMvodv4rNyWOpJg_Yh4NSqI4Z4vOYy))\n  - [CMS 165 Foundations of Machine Learning and Statistical Inference - 2020 - Caltech](https://www.youtube.com/playlist?list=PLVNifWxslHCDlbyitaLLYBOAEPbmF1AHg)\n  - [Microsoft Research - Machine Learning Course](https://www.youtube.com/playlist?list=PL34iyE0uXtxo7vPXGFkmm6KbgZQwjf9Kf)\n  - [CS 446 - Machine Learning, Fall 2016, UIUC](https://www.youtube.com/playlist?list=PLQcasX5-oG91TgY6A_gz-IW7YSpwdnD2O)\n  - [undergraduate machine learning at UBC 2012, Nando de Freitas](https://www.youtube.com/playlist?list=PLE6Wd9FR--Ecf_5nCbnSQMHqORpiChfJf)\n  - [CS 229 - Machine Learning - Stanford University](https://see.stanford.edu/Course/CS229) ([Autumn 2018](https://www.youtube.com/playlist?list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU))\n  - [CS 189/289A Introduction to Machine Learning, Prof Jonathan Shewchuk - UCBerkeley](https://people.eecs.berkeley.edu/~jrs/189/)\n  - [CPSC 340: Machine Learning and Data Mining (2018) - UBC](https://www.youtube.com/playlist?list=PLWmXHcz_53Q02ZLeAxigki1JZFfCO6M-b)\n  - [CS4780/5780 Machine Learning, Fall 2013 - Cornell University](http://www.cs.cornell.edu/courses/cs4780/2013fa/)\n  - [CS4780/5780 Machine Learning, Fall 2018 - Cornell University](http://www.cs.cornell.edu/courses/cs4780/2018fa/page18/index.html) ([Youtube](https://www.youtube.com/playlist?list=PLl8OlHZGYOQ7bkVbuRthEsaLr7bONzbXS))\n  - [CSE474/574 Introduction to Machine Learning - SUNY University at Buffalo](https://www.youtube.com/playlist?list=PLEQDy5tl3xkMzk_zlo2DPzXteCquHA8bQ)\n  - [CS 5350/6350 - Machine Learning, Spring 2024, University of Utah](https://svivek.com/teaching/machine-learning/spring2024/) ([Youtube](https://www.youtube.com/playlist?list=PLbuogVdPnkCr-ANNi5GZid3MvSkzm_wnM))\n  - [ECE 5984 Introduction to Machine Learning, Spring 2015 - Virginia Tech](https://filebox.ece.vt.edu/~s15ece5984/)\n  - [CSx824/ECEx242 Machine Learning, Bert Huang, Fall 2015 - Virginia Tech](https://www.youtube.com/playlist?list=PLUenpfvlyoa0rMoE5nXA8kdctBKE9eSob)\n  - [STA 4273H - Large Scale Machine Learning, Winter 2015 - University of Toronto](http://www.cs.toronto.edu/~rsalakhu/STA4273_2015/lectures.html)\n  - [CS 485/685 Machine Learning, Shai Ben-David, University of Waterloo](https://www.youtube.com/channel/UCR4_akQ1HYMUcDszPQ6jh8Q/videos)\n  - [STAT 441/841 Classification Winter 2017 , Waterloo](https://www.youtube.com/playlist?list=PLehuLRPyt1HzXDemu7K4ETcF0Ld_B5adG)\n  - [10-605 - Machine Learning with Large Datasets, Fall 2016 - CMU](https://www.youtube.com/channel/UCIE4UdPoCJZMAZrTLuq-CPQ/videos)\n  - [Information Theory, Pattern Recognition, and Neural Networks - University of Cambridge](https://www.youtube.com/playlist?list=PLruBu5BI5n4aFpG32iMbdWoRVAA-Vcso6)\n  - [Python and machine learning - Stanford Crowd Course Initiative](https://www.youtube.com/playlist?list=PLVxFQjPUB2cnYGZPAGG52OQc9SpWVKjjB)\n  - [MOOC - Machine Learning Part 1a - Udacity/Georgia Tech](https://www.youtube.com/playlist?list=PLAwxTw4SYaPl0N6-e1GvyLp5-MUMUjOKo) ([Part 1b](https://www.youtube.com/playlist?list=PLAwxTw4SYaPlkESDcHD-0oqVx5sAIgz7O) [Part 2](https://www.youtube.com/playlist?list=PLAwxTw4SYaPmaHhu-Lz3mhLSj-YH-JnG7) [Part 3](https://www.youtube.com/playlist?list=PLAwxTw4SYaPnidDwo9e2c7ixIsu_pdSNp))\n  - [Pattern Recognition Class (2012)- Universität Heidelberg](https://www.youtube.com/playlist?list=PLuRaSnb3n4kRDZVU6wxPzGdx1CN12fn0w)\n  - [Introduction to Machine Learning and Pattern Recognition - CBCSL OSU](https://www.youtube.com/playlist?list=PLcXJymqaE9PPGGtFsTNoDWKl-VNVX5d6b)\n  - [Introduction to Machine Learning - IIT Kharagpur](https://nptel.ac.in/courses/106105152/)\n  - [Introduction to Machine Learning - IIT Madras](https://nptel.ac.in/courses/106106139/)\n  - [Pattern Recognition - IISC Bangalore](https://nptel.ac.in/courses/117108048/)\n  - [Pattern Recognition and Application - IIT Kharagpur](https://nptel.ac.in/courses/117105101/)\n  - [Pattern Recognition - IIT Madras](https://nptel.ac.in/courses/106106046/)\n  - [Machine Learning Summer School 2013 - Max Planck Institute for Intelligent Systems Tübingen](https://www.youtube.com/playlist?list=PLqJm7Rc5-EXFv6RXaPZzzlzo93Hl0v91E)\n  - [Machine Learning - Professor Kogan (Spring 2016) - Rutgers](https://www.youtube.com/playlist?list=PLauepKFT6DK_1_plY78bXMDj-bshv7UsQ)\n  - [CS273a: Introduction to Machine Learning](http://sli.ics.uci.edu/Classes/2015W-273a) ([YouTube](https://www.youtube.com/playlist?list=PLkWzaBlA7utJMRi89i9FAKMopL0h0LBMk))\n  - [Machine Learning Crash Course 2015](https://www.youtube.com/playlist?list=PLyGKBDfnk-iD5dK8N7UBUFVVDBBtznenR)\n  - [COM4509/COM6509 Machine Learning and Adaptive Intelligence 2015-16](http://inverseprobability.com/mlai2015/)\n  - [Introduction to Machine Learning - Spring 2018 - ETH Zurich](https://www.youtube.com/playlist?list=PLzn6LN6WhlN273tsqyfdrBUsA-o5nUESV)\n  - [Machine Learning - Pedro Domingos- University of Washington](https://www.youtube.com/user/UWCSE/playlists?view=50&sort=dd&shelf_id=16)\n  - [Machine Learning (COMP09012)](https://www.youtube.com/playlist?list=PLyH-5mHPFffFwz7Twap0XuVeUJ8vuco9t)\n  - [Probabilistic Machine Learning 2020 - University of Tübingen](https://www.youtube.com/playlist?list=PL05umP7R6ij1tHaOFY96m5uX3J21a6yNd)\n  - [Statistical Machine Learning 2020 - Ulrike von Luxburg - University of Tübingen](https://www.youtube.com/playlist?list=PL05umP7R6ij2XCvrRzLokX6EoHWaGA2cC)\n  - [COMS W4995 - Applied Machine Learning - Spring 2020 - Columbia University](https://www.cs.columbia.edu/~amueller/comsw4995s20/schedule/)\n  - [Machine Learning for Engineers 2022](https://apmonitor.com/pds) ([YouTube](https://www.youtube.com/watch?v=Gh5rbBLh4JY&list=PLLBUgWXdTBDg1K1bu60lHypSzSP-WSBmx))\n  - [10-418 / 10-618 (Fall 2019) Machine Learning for Structured Data](https://www.youtube.com/playlist?list=PL4CxkUJbvNVihRKP4bXufvRLIWzeS-ieP)\n  - [ORIE 4741/5741: Learning with Big Messy Data - Cornell](https://people.orie.cornell.edu/mru8/orie4741/lectures.html)\n  - [Machine Learning in IoT](https://www.youtube.com/playlist?list=PLeZoXD_TLsLbW_ILvL9TlhBYdW8wJyON-)\n  - [Stanford CS229M: Machine Learning Theory - Fall 2021](https://www.youtube.com/playlist?list=PLoROMvodv4rP8nAmISxFINlGKSK4rbLKh)\n  - [Intro to Machine Learning and Statistical Pattern Classification - Prof Sebastian Raschka](https://www.youtube.com/playlist?list=PLTKMiZHVd_2KyGirGEvKlniaWeLOHhUF3)\n  - [CMU's Multimodal Machine Learning course (11-777), Fall 2020](https://www.youtube.com/playlist?list=PL-Fhd_vrvisNup9YQs_TdLW7DQz-lda0G)\n  - [EE104: Introduction to Machine Learning - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rN_Uy7_wmS051_q1d6akXmK)\n  - [CPSC 330: Applied Machine Learning (2020) - UBC](https://www.youtube.com/playlist?list=PLWmXHcz_53Q2BXsWviGgEqdlSHmfsjSzC)\n  - [Machine Learning 2013 - Nando de Freitas, UBC](https://www.youtube.com/playlist?list=PLE6Wd9FR--EdyJ5lbFl8UuGjecvVw66F6)\n  - [Machine Learning, 2014-2015, University of Oxford](https://www.cs.ox.ac.uk/people/nando.defreitas/machinelearning/)\n  - [10-702/36-702 - Statistical Machine Learning - Larry Wasserman, Spring 2016, CMU](https://www.stat.cmu.edu/~ryantibs/statml/) ([Spring 2015](https://www.youtube.com/playlist?list=PLjbUi5mgii6BWEUZf7He6nowWvGne_Y8r))\n  - [10-715 Advanced Introduction to Machine Learning - CMU](http://www.cs.cmu.edu/~bapoczos/Classes/ML10715_2015Fall/) ([YouTube](https://www.youtube.com/playlist?list=PL4DwY1suLMkcu-wytRDbvBNmx57CdQ2pJ))\n  - [CS 281B - Scalable Machine Learning, Alex Smola, UC Berkeley](http://alex.smola.org/teaching/berkeley2012/syllabus.html)\n  - [100 Days of Machine Learning - CampusX (Hindi)](https://www.youtube.com/playlist?list=PLKnIA16_Rmvbr7zKYQuBfsVkjoLcJgxHH)\n  - [CampusX Data Science Mentorship Program 2022-23 (Hindi)](https://www.youtube.com/playlist?list=PLKnIA16_RmvbAlyx4_rdtR66B7EHX5k3z)\n  - [Statistical Machine Learning - S2023 - Benyamin Ghojogh](https://www.youtube.com/playlist?list=PLPrxGIUWsqP2g7cpk0nFFt0c4aRcREq2s)\n  - [MIT 6.5940 EfficientML.ai Lecture, Fall 2023](https://www.youtube.com/playlist?list=PL80kAHvQbh-pT4lCkDT53zT8DKmhE0idB)\n  - [TinyML - Tiny Machine Learning at UPenn](https://www.youtube.com/playlist?list=PL7rtKJAz_mPe6kAbiH6Ucq02Vpa95qvBJ)\n  - [ECE 4760 (Digital Systems Design Using Microcontrollers) at Cornell for the Fall, 2022](https://www.youtube.com/playlist?list=PLDqMkB5cbBA5oDg8VXM110GKc-CmvUqEZ)\n  - [EfficientML.ai Lecture, Fall 2023, MIT 6.5940](https://www.youtube.com/playlist?list=PL80kAHvQbh-pT4lCkDT53zT8DKmhE0idB)\n  - [SFU CMPT 727 Statistical Machine Learning spring 2022, 2023, by Maxwell Libbrecht](https://www.youtube.com/playlist?list=PL_5SuHtr8fsp95AhIKeTHbpcVdhlhB9h6)\n  - [UC Berkeley CS 189 / 289A Introduction to Machine Learning fall 2023, by Jennifer Listgarten & Jitendra Malik](https://eecs189.org/)\n  - [UC Berkeley CS 189 Introduction to Machine Learning (CDSS offering) spring 2022, by Marvin Zhang](https://www.youtube.com/playlist?list=PLCuQm2FL98HTlRmlwMk2AuFEM9n1c06HE)\n  - [MIT 6.036 Introduction to Machine Learning spring 2019, by Leslie Kaelbling](https://www.youtube.com/playlist?list=PLQEw29vp6f1Ae9dp8vkKB8H6sF1PHvP5N)\n  - [UCLA STAT C161 Introduction to Pattern Recognition and Machine Learning winter 2023, by Arash Amini](https://www.youtube.com/playlist?list=PLN_qg0-2-0SwLCXGUyM3FNSRwG6GNgONr)\n  - [MSU Machine Learning](https://www.youtube.com/watch?v=kMf0qDtQ_PM&list=PLZ-krWGO-UEyPHsZfOjYH03_TyIN2pPhl&pp=iAQB)\n  - [Data Science for Dynamical Systems, by Oliver Wallscheid & Sebastian Peitz](https://www.youtube.com/@UPB_DS4DS-bu8ec/playlists)\n  - [STATS C161/C261 - Introduction to Pattern Recognition and Machine Learning Winter 2024](https://www.youtube.com/playlist?list=PLN_qg0-2-0SxQ2vlXxlZVMKkt4gI1YYP8)\n  - [Cambridge Statistical Learning in Practice 2021, by Alberto J. Coca](https://www.youtube.com/playlist?list=PLn1JSlh3WT_b7sMBktkAgV9-cP052JFhb)\n  - [Data 8: The Foundations of Data Science - UC Berkeley](http://data8.org/) ([Summer 17](http://data8.org/su17/))\n  - [CSE519 - Data Science Fall 2016 - Skiena, SBU](https://www.youtube.com/playlist?list=PLOtl7M3yp-DVBdLYatrltDJr56AKZ1qXo)\n  - [CS 109 Data Science, Harvard University](http://cs109.github.io/2015/pages/videos.html) ([YouTube](https://www.youtube.com/playlist?list=PLb4G5axmLqiuneCqlJD2bYFkBwHuOzKus))\n  - [6.0002 Introduction to Computational Thinking and Data Science - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0002-introduction-to-computational-thinking-and-data-science-fall-2016/lecture-videos/)\n  - [Data 100 - Summer 19- UC Berkeley](https://www.youtube.com/playlist?list=PLPHXc20GewP8J56CisONS_mFZWZAfa7jR)\n  - [Distributed Data Analytics (WT 2017/18) - HPI University of Potsdam](https://www.tele-task.de/series/1179/)\n  - [Data Profiling and Data Cleansing (WS 2014/15) - HPI University of Potsdam](https://www.tele-task.de/series/1027/)\n  - [CS 229r - Algorithms for Big Data, Harvard University](http://people.seas.harvard.edu/~minilek/cs229r/fall15/lec.html) ([Youtube](https://www.youtube.com/playlist?list=PL2SOU6wwxB0v1kQTpqpuu5kEJo2i-iUyf))\n  - [Algorithms for Big Data - IIT Madras](https://nptel.ac.in/courses/106106142/)\n  - [Python Data Science with the TCLab](https://github.com/APMonitor/data_science) ([YouTube](https://www.youtube.com/watch?v=pAgW_bZVo88&list=PLLBUgWXdTBDg1Qgmwt4jKtVn9BWh5-zgy))\n  \n- #### **Data Mining**\n  - [CSEP 546, Data Mining - Pedro Domingos, Sp 2016 - University of Washington](https://courses.cs.washington.edu/courses/csep546/16sp/) ([YouTube](https://www.youtube.com/playlist?list=PLTPQEx-31JXgtDaC6-3HxWcp7fq4N8YGr))\n  - [CS 5140/6140 - Data Mining, Spring 2020, University of Utah by Prof. Jeff Phillips](https://users.cs.utah.edu/~jeffp/teaching/cs5140-S20/cs5140.html) ([Youtube](https://www.youtube.com/playlist?list=PLbuogVdPnkCrEf65zrd3J1UG3LT6TcDlt))\n  - [CS 5140/6140 - Data Mining, Spring 2023, University of Utah by Prof. Ana Marasović](https://utah-data-mining-spring23.github.io/) ([Youtube](https://www.youtube.com/playlist?list=PLbuogVdPnkCrnLNqZPnTuG_s19TNDoad0))\n  - [CS 5955/6955 - Data Mining, University of Utah](http://www.cs.utah.edu/~jeffp/teaching/cs5955.html) ([YouTube](https://www.youtube.com/channel/UCcrlwW88yMcXujhGjSP2WBg/videos))\n  - [Statistics 202 - Statistical Aspects of Data Mining, Summer 2007 - Google](http://www.stats202.com/original_index.html) ([YouTube](https://www.youtube.com/playlist?list=PLFE776F2C513A744E))\n  - [MOOC - Text Mining and Analytics by ChengXiang Zhai](https://www.youtube.com/playlist?list=PLLssT5z_DsK8Xwnh_0bjN4KNT81bekvtt)\n  - [Information Retrieval SS 2014, iTunes - HPI](https://itunes.apple.com/us/itunes-u/information-retrieval-ss-2014/id874200291)\n  - [MOOC - Data Mining with Weka](https://www.youtube.com/playlist?list=PLm4W7_iX_v4NqPUjceOGd-OKNVO4c_cPD)\n  - [CS 290 DataMining Lectures](https://www.youtube.com/playlist?list=PLB4CCA346A5741C4C)\n  - [CS246 - Mining Massive Data Sets, Winter 2016, Stanford University](https://web.stanford.edu/class/cs246/) ([YouTube](https://www.youtube.com/channel/UC_Oao2FYkLAUlUVkBfze4jg/videos))\n  - [Information Retrieval - Spring 2018 - ETH Zurich](https://www.youtube.com/playlist?list=PLzn6LN6WhlN1ktkDvNurPSDwTQ_oGQisn)\n  - [CAP6673 - Data Mining and Machine Learning - FAU](http://www.cse.fau.edu/~taghi/classes/cap6673/)([Video lectures](https://vimeo.com/album/1505953))\n  \n- #### **Probabilistic Graphical Modeling**\n  - [CS 6190 - Probabilistic Modeling, Spring 2016, University of Utah](https://www.youtube.com/playlist?list=PLbuogVdPnkCpvxdF-Gy3gwaBObx7AnQut)\n  - [10-708 - Probabilistic Graphical Models, Carnegie Mellon University](https://www.cs.cmu.edu/~epxing/Class/10708-20/lectures.html)\n  - [Probabilistic Graphical Models, Daphne Koller, Stanford University](http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=ProbabilisticGraphicalModels)\n  - [Probabilistic Graphical Models, Spring 2018 - Notre Dame](https://www.youtube.com/playlist?list=PLd-PuDzW85AcV4bgdu7wHPL37hm60W4RM)\n  \n- #### **Deep Learning**\n  - [Full Stack Deep Learning - Course 2022](https://www.youtube.com/watch?v=-Iob-FW5jVM&list=PL1T8fO7ArWleMMI8KPJ_5D5XSlovTW_Ur)\n  - [Full Stack Deep Learning - Course 2021](https://www.youtube.com/watch?v=fGxWfEuUu0w&list=PL1T8fO7ArWlcWg04OgNiJy91PywMKT2lv)\n  - [NYU Deep Learning Spring 2020](https://www.youtube.com/playlist?list=PLLHTzKZzVU9eaEyErdV26ikyolxOsz6mq)\n  - [NYU Deep Learning Spring 2021](https://www.youtube.com/playlist?list=PLLHTzKZzVU9e6xUfG10TkTWApKSZCzuBI)\n  - [6.S191: Introduction to Deep Learning - MIT](http://introtodeeplearning.com/)\n  - [Intro to Deep Learning and Generative Models Course - Prof Sebastian Raschka](https://www.youtube.com/playlist?list=PLTKMiZHVd_2KJtIXOW0zFhFfBaJJilH51)\n  - [Deep Learning CMU](https://www.youtube.com/channel/UC8hYZGEkI2dDO8scT8C5UQA/videos)\n  - [CS231n Deep Learning for Computer Vision - Winter 2016 Andrej Karpathy - Stanford University](https://www.youtube.com/playlist?list=PLkt2uSq6rBVctENoVBg1TpCC7OQi31AlC)\n  - [Deep Learning: CS 182 Spring 2021](https://www.youtube.com/playlist?list=PL_iWQOsE6TfVmKkQHucjPAoRtIJYt8a5A)\n  - [10-414/714: Deep Learning Systems - CMU](https://dlsyscourse.org/lectures/) ([Youtube](https://www.youtube.com/@deeplearningsystemscourse1116/videos))\n  - [Part 1: Practical Deep Learning for Coders, v3 - fast.ai](https://course.fast.ai/)\n  - [Part 2: Deep Learning from the Foundations - fast.ai](https://course19.fast.ai/part2)\n  - [Deep learning at Oxford 2015 - Nando de Freitas](https://www.youtube.com/playlist?list=PLE6Wd9FR--EfW8dtjAuPoTuPcqmOV53Fu)\n  - [Self-Driving Cars — Andreas Geiger, 2021/22](https://uni-tuebingen.de/fakultaeten/mathematisch-naturwissenschaftliche-fakultaet/fachbereiche/informatik/lehrstuehle/autonomous-vision/lectures/self-driving-cars/) ([YouTube](https://www.youtube.com/watch?v=wAaSJUAKPuY&list=PL05umP7R6ij321zzKXK6XCQXAaaYjQbzr))\n  - [6.S094: Deep Learning for Self-Driving Cars - MIT](https://www.youtube.com/playlist?list=PLrAXtmErZgOeiKm4sgNOknGvNjby9efdf)\n  - [CS294-129 Designing, Visualizing and Understanding Deep Neural Networks](https://bcourses.berkeley.edu/courses/1453965/pages/cs294-129-designing-visualizing-and-understanding-deep-neural-networks) ([YouTube](https://www.youtube.com/playlist?list=PLkFD6_40KJIxopmdJF_CLNqG3QuDFHQUm))\n  - [CS230: Deep Learning - Autumn 2018 - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rOABXSygHTsbvUz4G_YQhOb)\n  - [STAT-157 Deep Learning 2019 - UC Berkeley](https://www.youtube.com/playlist?list=PLZSO_6-bSqHQHBCoGaObUljoXAyyqhpFW)\n  - [Deep Learning, Stanford University](http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=DeepLearning)\n  - [MOOC - Neural Networks for Machine Learning, Geoffrey Hinton 2016 - Coursera](https://www.youtube.com/playlist?list=PLoRl3Ht4JOcdU872GhiYWf6jwrk_SNhz9)\n  - [Deep Unsupervised Learning -- Berkeley Spring 2020](https://www.youtube.com/playlist?list=PLwRJQ4m4UJjPiJP3691u-qWwPGVKzSlNP)\n  - [Stat 946 Deep Learning - University of Waterloo](https://www.youtube.com/playlist?list=PLehuLRPyt1Hyi78UOkMPWCGRxGcA9NVOE)\n  - [Neural networks class - Université de Sherbrooke](http://info.usherbrooke.ca/hlarochelle/neural_networks/content.html) ([YouTube](https://www.youtube.com/playlist?list=PL6Xpj9I5qXYEcOhn7TqghAJ6NAPrNmUBH))\n  - [CS294-158 Deep Unsupervised Learning SP19](https://www.youtube.com/channel/UCf4SX8kAZM_oGcZjMREsU9w/videos)\n  - [DLCV - Deep Learning for Computer Vision - UPC Barcelona](https://www.youtube.com/playlist?list=PL-5eMc3HQTBavDoZpFcX-bff5WgQqSLzR)\n  - [DLAI - Deep Learning for Artificial Intelligence @ UPC Barcelona](https://www.youtube.com/playlist?list=PL-5eMc3HQTBagIUjKefjcTbnXC0wXC_vd)\n  - [Neural Networks and Applications - IIT Kharagpur](https://nptel.ac.in/courses/117105084/)\n  - [UVA DEEP LEARNING COURSE](http://uvadlc.github.io/#lecture)\n  - [Deep Learning - Winter 2020-21 - Tübingen Machine Learning](https://www.youtube.com/playlist?list=PL05umP7R6ij3NTWIdtMbfvX7Z-4WEXRqD)\n  - [Geometric Deep Learning - AMMI](https://www.youtube.com/playlist?list=PLn2-dEmQeTfQ8YVuHBOvAhUlnIPYxkeu3)\n  - [Math for Deep Learning — Andreas Geiger](https://www.youtube.com/playlist?list=PL05umP7R6ij0bo4UtMdzEJ6TiLOqj4ZCm)\n  - [Applied Deep Learning 2022 - TU Wien](https://www.youtube.com/playlist?list=PLNsFwZQ_pkE_QaTwYxoTmmRJHtMXyIAU6)\n  - [Neural Networks: Zero to Hero - Andrej Karpathy](https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ)\n  - [CIS 522 - Deep Learning - U Penn](https://www.youtube.com/@cis522-deeplearning8/playlists)\n  - [UVA DEEP LEARNING COURSE](http://uvadlc.github.io/#lecture)\n  - [Deep Learning (Fall 2020) - Georgia Tech](https://www.youtube.com/playlist?list=PL-fZD610i7yB7gDnPDpFcKpHI9X8z3OQ7)\n  - [CS7015 - Deep Learning - Prof. Mitesh M. Khapra - IIT Madras](https://www.youtube.com/playlist?list=PLyqSpQzTE6M9gCgajvQbc68Hk_JKGBAYT)\n  - [ETH Zürich | Deep Learning in Scientific Computing 2023](https://www.youtube.com/playlist?list=PLJkYEExhe7rYY5HjpIJbgo-tDZ3bIAqAm)\n  - [CS294 Deep Unsupervised Learning Spring 2024](https://sites.google.com/view/berkeley-cs294-158-sp24/home)\n  - [Applied Deep Learning Maziar Raissi](https://www.youtube.com/playlist?list=PLoEMreTa9CNmuxQeIKWaz7AVFd_ZeAcy4)\n  \n- #### **Reinforcement Learning**\n  - [CS234: Reinforcement Learning - Winter 2019 - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u)\n  - [Introduction to reinforcement learning - UCL](https://www.youtube.com/playlist?list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ)\n  - [Reinforcement Learning - IIT Madras](https://www.youtube.com/playlist?list=PLyqSpQzTE6M_FwzHFAyf4LSkz_IjMyjD9)\n  - [CS885 Reinforcement Learning - Spring 2018 - University of Waterloo](https://www.youtube.com/playlist?list=PLdAoL1zKcqTXFJniO3Tqqn6xMBBL07EDc)\n  - [CS 285 - Deep Reinforcement Learning- UC Berkeley](https://www.youtube.com/playlist?list=PLkFD6_40KJIwhWJpGazJ9VSj9CFMkb79A)\n  - [CS 294 112 - Reinforcement Learning](https://www.youtube.com/playlist?list=PLkFD6_40KJIxJMR-j5A1mkxK26gh_qg37)\n  - [NUS CS 6101 - Deep Reinforcement Learning](https://www.youtube.com/playlist?list=PLllwxvcS7ca5wOmRLKm6ri-OaC0INYehv)\n  - [ECE 8851: Reinforcement Learning](https://www.youtube.com/playlist?list=PL_Nk3YvgORJs1tCLQnlnSRsOJArj_cP9u)\n  - [CS294-112, Deep Reinforcement Learning Sp17](http://rll.berkeley.edu/deeprlcourse/) ([YouTube](https://www.youtube.com/playlist?list=PLkFD6_40KJIwTmSbCv9OVJB3YaO4sFwkX))\n  - [UCL Course 2015 on Reinforcement Learning by David Silver from DeepMind](http://www0.cs.ucl.ac.uk/staff/d.silver/web/Teaching.html) ([YouTube](https://www.youtube.com/watch?v=2pWv7GOvuf0))\n  - [Deep RL Bootcamp - Berkeley Aug 2017](https://sites.google.com/view/deep-rl-bootcamp/lectures)\n  - [Reinforcement Learning - IIT Madras](https://www.youtube.com/playlist?list=PLyqSpQzTE6M_FwzHFAyf4LSkz_IjMyjD9)\n  - [Reinforcement Learning Course at KTH (FDD3359 - 2022)](https://www.youtube.com/playlist?list=PL21JFJEtbq0JLNo53UIkbIwkc2njCVUUR)\n  - [Reinforcement Learning Course at ASU, Spring 2022](https://www.youtube.com/playlist?list=PLmH30BG15SIoXhxLldoio0BhsIY84YMDj)\n  - [CS 4789/5789: Introduction to Reinforcement Learning - Cornell](https://www.youtube.com/playlist?list=PLQVNhPb8ajtCjWSKUvKU8cX5lueYP9s3X)\n  - [S20/IE613 - Online (Machine) Learning/ Bandit Algorithms](https://www.youtube.com/playlist?list=PLDREIwGwrHBdiBm1q0cVJLZn4Cn6Hig2s)\n  - [Reinforcement Learning - Fall 2021 chandar-lab](https://www.youtube.com/playlist?list=PLImtCgowF_ES_JdF_UcM60EXTcGZg67Ua)\n  - [CMU 10 703 Deep Reinforcement Learning & Control fall 2022, by Katerina Fragkiadaki](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22ee5794a2-cb54-4edc-836b-aefc01023243%22)\n  - [ECE524 Foundations of Reinforcement Learning at Princeton University, Spring 2024](https://www.youtube.com/playlist?list=PLYXvCE1En13epbogBmgafC_Yyyk9oQogl)\n  - [REINFORCEMENT LEARNING AND OPTIMAL CONTROL - Dimitri P. Bertsekas, ASU](https://web.mit.edu/dimitrib/www/RLbook.html)\n  - [CMU 16 745 Optimal Control and Reinforcement Learning spring by Zac Manchester](https://www.youtube.com/@roboticexplorationlab3724/playlists)\n  \n- #### **Advanced Machine Learning**\n  - [Advanced Machine Learning, 2021-2022, Sem I - by Prof. Madhavan Mukund, CMI](https://www.cmi.ac.in/~madhavan/courses/aml2021)\n  - [18.409 Algorithmic Aspects of Machine Learning Spring 2015 - MIT](https://www.youtube.com/playlist?list=PLB3sDpSRdrOvI1hYXNsa6Lety7K8FhPpx)\n  - [CS 330 - Deep Multi-Task and Meta Learning - Fall 2019 - Stanford University](https://cs330.stanford.edu/) ([Youtube](https://www.youtube.com/playlist?list=PLoROMvodv4rMC6zfYmnD7UG3LVvwaITY5))\n  - [Stanford CS330: Deep Multi-Task and Meta Learning I Autumn 2022](https://www.youtube.com/playlist?list=PLoROMvodv4rNjRoawgt72BBNwL2V7doGI)\n  - [ES 661 (2023): Probabilistic Machine Learning - IIT Gandhinagar](https://www.youtube.com/playlist?list=PLftoLyLEwECBEJyfRBJoSBd0UaTjEcs3I)\n  - [Information Retrieval in High Dimensional Data](https://www.youtube.com/playlist?list=PLaE1lKCe0jH3ePp9wCU1ygTquVOXY-UYv)\n  - [Trustworthy Machine Learning - Winter Semester 2023-2024, University of Tübingen](https://scalabletrustworthyai.github.io/courses/tml_winter_2324/)\n  \n- #### **Natural Language Processing**\n  - [CS 224N -Natural Language Processing with Deep Learning - Stanford University](http://web.stanford.edu/class/cs224n/) ([Lectures -  Winter 2019](https://youtube.com/playlist?list=PLoROMvodv4rOhcuXMZkNm7j3fVwBBY42z)) ([Lectures -  Winter 2021](https://youtube.com/playlist?list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ))\n  - [CS 224N - Natural Language Processing, Stanford University](https://web.stanford.edu/~jurafsky/NLPCourseraSlides.html) ([Lecture videos](https://academictorrents.com/details/d2c8f8f1651740520b7dfab23438d89bc8c0c0ab))\n  - [Stanford XCS224U: Natural Language Understanding I Spring 2023](https://www.youtube.com/playlist?list=PLoROMvodv4rOwvldxftJTmoR3kRcWkJBp)\n  - [CS388: Natural Language Processing - UT Austin](https://www.cs.utexas.edu/~gdurrett/courses/online-course/materials.html)\n  - [CS 124 - From Languages to Information - Stanford University](https://www.youtube.com/channel/UC_48v322owNVtORXuMeRmpA/playlists?view=50&sort=dd&shelf_id=2)\n  - [CS 6340/5340 - Natural Language Processing - University of Utah - Spring 2024](https://utah-intro-nlp.github.io/) ([Youtube](https://www.youtube.com/playlist?list=PLbuogVdPnkCrPZ4Vc-GRnk730SLhC1L43))\n  - [Neural Networks: Zero to Hero - Andrej Karpathy](https://karpathy.ai/zero-to-hero.html)\n  - [fast.ai Code-First Intro to Natural Language Processing](https://www.youtube.com/playlist?list=PLtmWHNX-gukKocXQOkQjuVxglSDYWsSh9) ([Github](https://github.com/fastai/course-nlp))\n  - [MOOC - Natural Language Processing - Coursera, University of Michigan](https://www.youtube.com/playlist?list=PLLssT5z_DsK8BdawOVCCaTCO99Ya58ryR)\n  - [Natural Language Processing at UT Austin (Greg Durrett)](https://www.youtube.com/playlist?list=PLofp2YXfp7Tbk88uH4jejfXPd2OpWuSLq)\n  - [CS224U: Natural Language Understanding - Spring 2019 - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rObpMCir6rNNUlFAn56Js20)\n  - [Deep Learning for Natural Language Processing, 2017 - Oxford University](https://github.com/oxford-cs-deepnlp-2017/lectures)\n  - [Natural Language Processing - IIT Bombay](https://nptel.ac.in/courses/106101007/)\n  - [CMU Advanced NLP 2021](https://www.youtube.com/playlist?list=PL8PYTP1V4I8AYSXn_GKVgwXVluCT9chJ6)\n  - [CMU Neural Nets for NLP 2021](https://www.youtube.com/playlist?list=PL8PYTP1V4I8AkaHEJ7lOOrlex-pcxS-XV)\n  - [Natural Language Processing - Michael Collins - Columbia University](https://www.youtube.com/playlist?list=PLA212ij5XG8OTDRl8IWFiJgHR9Ve2k9pv)\n  - [CMU CS11-737 - Multilingual Natural Language Processing](https://www.youtube.com/playlist?list=PL8PYTP1V4I8CHhppU6n1Q9-04m96D9gt5)\n  - [UMass CS685: Advanced Natural Language Processing (Spring 2022)](https://www.youtube.com/playlist?list=PLWnsVgP6CzadI4-FT2Po4wsEK7MHCIQ-d)\n  - [Natural Language Processing (CMSC 470)](https://www.youtube.com/playlist?list=PLwrUPjGidcJ4UkSoi7_rmn-1kcedLqgdL)\n  - [Stanford CS25 - Transformers United 2023](https://www.youtube.com/playlist?list=PLoROMvodv4rNiJRchCzutFw5ItR_Z27CM)\n  - [Natural Language Processing (IN2361) - TUM](https://live.rbg.tum.de/?year=2019&term=W&slug=nlp&view=3)\n  - [CS 886: Recent Advances on Foundation Models Winter 2024 - University of Waterloo](https://cs.uwaterloo.ca/~wenhuche/teaching/cs886/)\n  - [UC Berkeley CS 194/294-267 Understanding Large Language Models Foundations and Safety spring 2024, by Dawn Song & Dan Hendrycks](https://www.youtube.com/playlist?list=PLJ66BAXN6D8H_gRQJGjmbnS5qCWoxJNfe)\n  \n- #### **Generative AI**\n  - [Stanford CS236: Deep Generative Models I 2023 I Stefano Ermon](https://www.youtube.com/playlist?list=PLoROMvodv4rPOWA-omMM6STXaWW4FvJT8)\n  - [CS 6785 - Deep Generative Models - Cornell Tech, Spring 2023)](https://www.youtube.com/playlist?list=PL2UML_KCiC0UPzjW9BjO-IW6dqliu9O4B)\n  \n- #### **Computer Vision**\n  - [CS 231n - Convolutional Neural Networks for Visual Recognition, Stanford University](https://www.youtube.com/playlist?list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv)\n  - [CS 198-126: Modern Computer Vision Fall 2022 (UC Berkeley)](https://www.youtube.com/playlist?list=PLzWRmD0Vi2KVsrCqA4VnztE4t71KnTnP5)\n  - [Machine Learning for Robotics and Computer Vision, WS 2013/2014 - TU München](https://vision.in.tum.de/teaching/ws2013/ml_ws13) ([YouTube](https://www.youtube.com/playlist?list=PLTBdjV_4f-EIiongKlS9OKrBEp8QR47Wl))\n  - [Informatics 1 - Cognitive Science 2015/16- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2015/inf1cs.htm)\n  - [Informatics 2A - Processing Formal and Natural Languages 2016-17 - University of Edinburgh](http://www.inf.ed.ac.uk/teaching/courses/inf2a/schedule.html)\n  - [NOC:Deep Learning For Visual Computing - IIT Kharagpur](https://nptel.ac.in/courses/108/105/108105103/)\n  - [Deep Learning for Computer Vision - University of Michigan](https://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r)\n  - [Extreme Classification ](https://www.youtube.com/watch?v=v0rAVyF4rWA&list=PLXtAHOcKKDTk43wjXud9GQS-l-QA5DQxH&pp=iAQB)\n  - [EECS 498/598 - Deep Learning for Computer Vision - University of Michigan - Fall 2019](https://web.eecs.umich.edu/~justincj/teaching/eecs498/FA2019/) ([Youtube](https://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r))\n  \n- #### **Time Series Analysis**\n  - [02417 Time Series Analysis](https://www.youtube.com/playlist?list=PLtiTxpFJ4k6TZ0g496fVcQpt_-XJRNkbi)\n  - [Applied Time Series Analysis](https://www.youtube.com/playlist?list=PLl0FT6O_WWDBm-4W-eoK34omYmEMseQDX)\n  \n- #### **Optimization**\n  - [Optimisation for Machine Learning: Theory and Implementation (Hindi) - IIT](https://www.youtube.com/playlist?list=PLyqSpQzTE6M-pmLzCoMu_ANU6atEFyyJl)\n  - [EE364a: Convex Optimization I - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rMJqxxviPa4AmDClvcbHi6h)\n  - [10-725 Convex Optimization, Spring 2015 - CMU](http://www.stat.cmu.edu/~ryantibs/convexopt-S15/)\n  - [10-725 Convex Optimization: Fall 2016 - CMU](http://www.stat.cmu.edu/~ryantibs/convexopt/)\n  - [10-725 Optimization Fall 2012 - CMU](http://www.cs.cmu.edu/~ggordon/10725-F12/schedule.html)\n  - [10-801 Advanced Optimization and Randomized Methods - CMU](http://www.cs.cmu.edu/~suvrit/teach/aopt.html) ([YouTube](https://www.youtube.com/playlist?list=PLjTcdlvIS6cjdA8WVXNIk56X_SjICxt0d))\n  - [AM 207 - Stochastic Methods for Data Analysis, Inference and Optimization, Harvard University](http://am207.github.io/2016/index.html)\n  - [UCSD CS292F Convex Optimization Spring 2020, by Yu-Xiang Wang](https://cseweb.ucsd.edu/~yuxiangw/classes/CS292F-2020Spring/) ([Youtube](https://www.youtube.com/playlist?list=PLTN4aNO9NiB5VxYILKPBXoy9g1tUqmnBx))\n  - [University of Wisconsin-Madison ISyE/Math/CS/Stat 525 Linear Optimization fall 2021, by Alberto Del Pia](https://www.youtube.com/playlist?list=PLeO_PhASIA0Ot69TqANAnNxoykHGOQp2Y)\n  - [University of Wisconsin-Madison ISyE/Math/CS 728 Integer Optimization (second part of the course) spring 2020](https://www.youtube.com/playlist?list=PLeO_PhASIA0NlDNF9y-SsgVEYcvAMj2CY)\n  \n- #### **Misc Machine Learning Topics**\n  - [Quantum Machine Learning | 2021 Qiskit Global Summer School](https://www.youtube.com/playlist?list=PLOFEBzvs-VvqJwybFxkTiDzhf5E11p8BI)\n  - [CS 6955 - Clustering, Spring 2015, University of Utah](https://www.youtube.com/playlist?list=PLbuogVdPnkCpRvi-qSMCdOwyn4UYoPxTI)\n  - [Info 290 - Analyzing Big Data with Twitter, UC Berkeley school of information](http://blogs.ischool.berkeley.edu/i290-abdt-s12/) ([YouTube](https://www.youtube.com/playlist?list=PLE8C1256A28C1487F))\n  - [CS224W Machine Learning with Graphs | Spring 2021 | Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rPLKxIpqhjhPgdQy7imNkDn)\n  - [9.520 - Statistical Learning Theory and Applications, Fall 2015 - MIT](https://www.youtube.com/playlist?list=PLyGKBDfnk-iDj3FBd0Avr_dLbrU8VG73O)\n  - [Reinforcement Learning - UCL](https://www.youtube.com/playlist?list=PLacBNHqv7n9gp9cBMrA6oDbzz_8JqhSKo)\n  - [Regularization Methods for Machine Learning 2016](http://academictorrents.com/details/493251615310f9b6ae1f483126292378137074cd) ([YouTube](https://www.youtube.com/playlist?list=PLbF0BXX_6CPJ20Gf_KbLFnPWjFTvvRwCO))\n  - [Statistical Inference in Big Data - University of Toronto](http://fields2015bigdata2inference.weebly.com/materials.html)\n  - [Reinforcement Learning - IIT Madras](https://nptel.ac.in/courses/106106143/)\n  - [Statistical Rethinking Winter 2015 - Richard McElreath](https://www.youtube.com/playlist?list=PLDcUM9US4XdMdZOhJWJJD4mDBMnbTWw_z)\n  - [Foundations of Machine Learning - Blmmoberg Edu](https://bloomberg.github.io/foml/#home)\n  - [Introduction to reinforcement learning - UCL](https://www.youtube.com/playlist?list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ)\n  - [Statistical Foundation of Reinforcement Learning - UCSD, by Yu-Xiang Wang, Spring 2021](https://cseweb.ucsd.edu/~yuxiangw/classes/RLCourse-2021Spring/) ([Youtube](https://www.youtube.com/playlist?list=PLTN4aNO9NiB5X8HkOBTkIfZ8VFSLH1W8W))\n  - [Web Information Retrieval (Proff. L. Becchetti - A. Vitaletti)](https://www.youtube.com/playlist?list=PLAQopGWlIcya-9yzQ8c8UtPOuCv0mFZkr)\n  - [Big Data Systems (WT 2019/20) - Prof. Dr. Tilmann Rabl - HPI](https://www.tele-task.de/series/1286/)\n  - [Distributed Data Analytics (WT 2017/18) - Dr. Thorsten Papenbrock - HPI](https://www.tele-task.de/series/1179/)\n  - [Introduction to Data-Centric AI - MIT](https://dcai.csail.mit.edu/)\n  - [Parallel Computing and Scientific Machine Learning](https://www.youtube.com/playlist?list=PLCAl7tjCwWyGjdzOOnlbGnVNZk0kB8VSa)\n  - [Machine Learning System Design - System Design Fight Club](https://www.youtube.com/playlist?list=PLlvnxKilk3aKx0oFua-HTtFf-d_inQ8Qn)\n  - [UT Austin ECE 381V Bandits and Online Learning fall 2021, by Sanjay Shakkottai](https://docs.google.com/document/d/1r6jXNd1DD9o8v4q4XqxShRXWYdhtLMjEXWDzuv0T6LU/edit)\n  - [UCSD MATH 273B Information Geometry and its Applications winter 2022, by Melvin Leok](https://www.youtube.com/playlist?list=PLHZhjPByiV3L94AeJ9FcK1yrnRDOt3Vit)\n  - [Cornell ECE 5545 Machine Learning Hardware and Systems Spring 2022, by Mohamed Abdelfattah](https://www.youtube.com/playlist?list=PL0mFAhrXqy9CuopJhAB8GVu_Oy7J0ery6)\n  - [High Dimensional Analysis: Random Matrices and Machine Learning by Roland Speicher](https://rolandspeicher.com/lectures/course-on-high-dimensional-analysis-random-matrices-and-machine-learning-summer-term-2023/)([Youtube](https://www.youtube.com/playlist?list=PLY11JnnnTUCabY4nc0hKptrd5qEWtLoo2))\n  - [ACP SUMMER SCHOOL 2023 on Machine Learning for Constraint Programming](https://www.youtube.com/playlist?list=PLcByDTr7vRTYJ2s6DL-3bzjGwtQif33y3)\n  - [EE512A - Advanced Inference in Graphical Models, Fall Quarter, 2014](https://people.ece.uw.edu/bilmes/classes/ee512/ee512_fall_2014/)\n  - [UIUC STAT 437 Unsupervised Learning spring 2024, by Tori Ellison](https://www.youtube.com/playlist?list=PLIygTcviGPKB133Vh7zxsxFoblyfS4P5Y)\n  - [University of Wisconsin-Madison CS/ECE 561 - Probability and Information Theory in Machine Learning fall 2020, by Matthew Malley](https://mediaspace.wisc.edu/channel/CS_ECE%2B561%2B-%2BProbability%2Band%2BInfo%2BTheory%2Bin%2BMachine%2BLearning/191748913)\n\n\n------------------------------\n\n\n### Computer Networks\n\n- [CS 144 Introduction to Computer Networking - Stanford University, Fall 2013](http://www.scs.stanford.edu/10au-cs144/) ([Lecture videos](https://www.youtube.com/playlist?list=PL6RdenZrxrw9inR-IJv-erlOKRHjymxMN))\n- [Computer Networking: A Top-Down Approach](https://www.youtube.com/playlist?list=PLm556dMNleHc1MWN5BX9B2XkwkNE2Djiu)\n- [Computer Communication Networks, Rensselaer Polytechnic Institute - Fall 2001](https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html) ([Videos](https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html#ccn_video)) ([Slides](https://www.ecse.rpi.edu/Homepages/koushik/shivkuma-teaching/video_index.html#ccn_foils))\n- [Audio/Video Recordings and Podcasts of Professor Raj Jain's Lectures - Washington University in St. Louis](http://www.cse.wustl.edu/~jain/videos.htm) ([YouTube](https://www.youtube.com/user/ProfRajJain/playlists))\n- [Computer Networks, Tanenbaum, Wetherall Computer Networks 5e - Video Lectures](http://media.pearsoncmg.com/ph/streaming/esm/tanenbaum5e_videonotes/tanenbaum_videoNotes.html)\n- [CSEP 561 - PMP Network Systems, Fall 2013 - University of Washington](https://courses.cs.washington.edu/courses/csep561/13au/) ([Videos](https://courses.cs.washington.edu/courses/csep561/13au/video/))\n- [CSEP 561 – Network Systems, Autumn 2008 - University of Washington](https://courses.cs.washington.edu/courses/csep561/08au/) ([Videos](https://courses.cs.washington.edu/courses/csep561/08au/lectures/))\n- [Computer Networks - IIT Kharagpur](https://nptel.ac.in/courses/106105081/)\n- [Introduction to Data Communications 2013, Steven Gordon - Thammasat University, Thailand](https://www.youtube.com/playlist?list=PLvifRcqOOwF8u4iC7hFTMVC_WD6SEpnkx)\n- [Introduction to Complex Networks - RIT](https://www.youtube.com/playlist?list=PLE9AAD550EA21F3DC)\n- [Structural Analysis and Visualization of Networks](http://www.leonidzhukov.net/hse/2015/networks/)\n- [Data Communication - IIT Kharagpur](https://nptel.ac.in/courses/106105082/)\n- [Error Correcting Codes - IISC Bangalore](https://nptel.ac.in/courses/117108044/)\n- [Information Theory and Coding - IIT Bombay](https://nptel.ac.in/courses/117101053/)\n- [Complex Network : Theory and Application - IIT Kharagpur](https://nptel.ac.in/courses/106105154/)\n- [Advanced 3G and 4G Wireless Mobile Communications - IIT Kanpur](https://nptel.ac.in/courses/117104099/)\n- [Broadband Networks: Concepts and Technology - IIT Bombay](https://nptel.ac.in/courses/117101050/)\n- [Coding Theory - IIT Madras](https://nptel.ac.in/courses/117106031/)\n- [Digital Communication - IIT Bombay](https://nptel.ac.in/courses/117101051/)\n- [Digital Voice & Picture Communication - IIT Kharagpur](https://nptel.ac.in/courses/117105081/)\n- [Wireless Ad Hoc and Sensor Networks - IIT Kharagpur](https://nptel.ac.in/courses/106105160/)\n- [Internetworking with TCP/IP by Prof. Dr. Christoph Meinel - HPI](https://www.youtube.com/playlist?list=PLoOmvuyo5UAfY5VrkObHTckZHwPsS1VCA)\n- [CS798: Mathematical Foundations of Computer Networking - University of Waterloo](https://www.youtube.com/playlist?list=PLFB088DB91845CA34)\n\n------------------------------\n\n### Math for Computer Scientist\n\n- [Maths courses all topics covered - Khan Academy](https://www.khanacademy.org/math/)\n- **Calculus**\n  - [18.01 Single Variable Calculus, Fall 2006 - MIT OCW](https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2006/)\n  - [18.02 Multivariable Calculus, Fall 2007 - MIT OCW](https://ocw.mit.edu/courses/mathematics/18-02-multivariable-calculus-fall-2007/)\n  - [18.03 Differential Equations, Spring 2010 - MIT OCW](https://ocw.mit.edu/courses/mathematics/18-03-differential-equations-spring-2010/)\n  - [Highlights of Calculus - Gilbert Strang, MIT OCW](https://ocw.mit.edu/resources/res-18-005-highlights-of-calculus-spring-2010/)\n  - [MAT123 Introduction to Calculus (Fall 2015) - Stony Brook](https://www.math.stonybrook.edu/~scott/mat123.fall15/)\n  - [Vector Calculus for Engineers - HKUST](https://www.youtube.com/playlist?list=PLkZjai-2JcxnYmkg6fpzz4WFumGVl7MOa)\n- **Discrete Math**\n  - [6.042J - Mathematics for Computer Science, MIT OCW](https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/video_galleries/video-lectures/) \n  - [Computer Science 70, 001 - Spring 2015](https://www.youtube.com/playlist?list=-XXv-cvA_iD8wQm8U0gG_Z1uHjImKXFy)\n  - [CSE 547 Discrete Mathematics, Prof Skiena, University of Stony Brook](http://www3.cs.stonybrook.edu/~algorith/math-video/)\n  - [Discrete Structures (Summer 2011) - Rutgers, The State University of New Jersey](https://itunes.apple.com/us/course/discrete-structures-summer/id698728837)\n  - [Discrete Mathematics and Mathematical Reasoning 2015/16 - University of Edinburgh](https://www.inf.ed.ac.uk/teaching/courses/dmmr/)\n  - [Discrete Mathematical Structures - IIT Madras](https://nptel.ac.in/courses/106106094/)\n  - [Discrete Structures - Pepperdine University](https://itunes.apple.com/us/course/discrete-structures/id546468789)\n  - [CMU 21 228 Discrete Mathematics spring 2021, by Po-Shen Loh](https://www.youtube.com/playlist?list=PLgTkKBA6LRqYuuQ-LboerRblBoD_q_eUM)\n- **Probability & Statistics**\n  - [Statistics - CrashCourse](https://www.youtube.com/playlist?list=PL8dPuuaLjXtNM_Y-bUAhblSAdWRnmBUcr)\n  - [6.041 Probabilistic Systems Analysis and Applied Probability - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-041sc-probabilistic-systems-analysis-and-applied-probability-fall-2013/)\n  - [Stanford CS109 Introduction to Probability for Computer Scientists I 2022 I Chris Piech](https://www.youtube.com/playlist?list=PLoROMvodv4rOpr_A7B9SriE_iZmkanvUg)\n  - [MIT RES.6-012 Introduction to Probability, Spring 2018 - MIT](https://www.youtube.com/playlist?list=PLUl4u3cNGP60hI9ATjSFgLZpbNJ7myAg6)\n  - [Statistics 110 - Probability - Harvard University](https://www.youtube.com/playlist?list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo)\n  - [STAT 2.1x: Descriptive Statistics | UC Berkeley](https://www.youtube.com/playlist?list=PL_Ig1a5kxu56TfFnGlRlH2YpOBWGiYsQD)\n  - [STAT 2.2x: Probability | UC Berkeley](https://www.youtube.com/playlist?list=PL_Ig1a5kxu57qPZnHm-ie-D7vs9g7U-Cl)\n  - [MOOC - Statistics: Making Sense of Data, Coursera](http://academictorrents.com/details/a0cbaf3e03e0893085b6fbdc97cb6220896dddf2)\n  - [MOOC - Statistics One - Coursera](https://www.youtube.com/playlist?list=PLycnP7USbo1V3jlyjAzWUB201cLxPq4NP)\n  - [Probability and Random Processes - IIT Kharagpur](https://nptel.ac.in/courses/117105085/)\n  - [MOOC - Statistical Inference - Coursera](https://www.youtube.com/playlist?list=PLgIPpm6tJZoSvrYM54BUqJJ4CWrYeGO40)\n  - [131B - Introduction to Probability and Statistics, UCI](https://www.youtube.com/playlist?list=PLqOZ6FD_RQ7k-j-86QUC2_0nEu0QOP-Wy)\n  - [STATS 250 - Introduction to Statistics and Data Analysis, UMichigan](https://www.youtube.com/playlist?list=PL432AB57AF9F43D4F)\n  - [Sets, Counting and Probability - Harvard](http://matterhorn.dce.harvard.edu/engage/ui/index.html#/1999/01/82347)\n  - [Opinionated Lessons in Statistics](http://www.opinionatedlessons.org/) ([Youtube](https://www.youtube.com/playlist?list=PLUAHeOPjkJseXJKbuk9-hlOfZU9Wd6pS0))\n  - [Statistics - Brandon Foltz](https://www.youtube.com/user/BCFoltz/playlists)\n  - [Statistical Rethinking: A Bayesian Course Using R and Stan](https://github.com/rmcelreath/statrethinking_winter2019) ([Lectures](https://www.youtube.com/playlist?list=PLDcUM9US4XdPz-KxHM4XHt7uUVGWWVSus)) ([Book](http://www.stat.columbia.edu/~gelman/book/))\n  - [02402 Introduction to Statistics E12 - Technical University of Denmark](https://www.youtube.com/playlist?list=PLMn2aW3wpAtPC8tZHQy6nwWsFG7P6sPqw) ([F17](https://www.youtube.com/playlist?list=PLgowegO9Se58_BnUNnaARajEE_bX-GJEz))\n  - [Engineering Probability (ECSE-2500) - RPI](https://www.youtube.com/playlist?list=PLuh62Q4Sv7BU1dN2G6ncyiMbML7OXh_Jx)\n  - [Purdue ECE302 Introduction to Probability for Data Science](https://www.youtube.com/playlist?list=PL4FSfq6xtSvyqsbgrYDeyV0WWXlXqwy2M)\n  - [Undergraduate Probability with Professor Roman Vershynin](https://www.math.uci.edu/~rvershyn/teaching/ugp/ugp.html)\n  - [High-Dimensional Probability](https://www.math.uci.edu/~rvershyn/teaching/hdp/hdp.html)\n  - [Mathematical Statistics](https://www.youtube.com/playlist?list=PLLyj1Zd4UWrOk5-wIki_oOxHJnNj0_437)\n  - [Bayesian Data Analysis](https://www.youtube.com/playlist?list=PLBqnAso5Dy7O0IVoVn2b-WtetXQk5CDk6)\n  - [Markov Processes - Spring 2023](https://www.youtube.com/playlist?list=PLLyj1Zd4UWrP3rME2XvFvE4Q5vI3H_7_Z)\n  - [Causal Inference Course - Brady Neal](https://www.youtube.com/playlist?list=PLoazKTcS0RzZ1SUgeOgc6SWt51gfT80N0)\n  - [Causal Inference -- Online Lectures (M.Sc/PhD Level)](https://www.youtube.com/playlist?list=PLyvUJLHD8IsJCB7ALqwjRG1BjL5JxE__H)\n  - [Machine Learning & Causal Inference: A Short Course](https://www.youtube.com/playlist?list=PLxq_lXOUlvQAoWZEqhRqHNezS30lI49G-)\n  - [Causal Inference Jonas Peters](https://www.youtube.com/playlist?list=PLzERW_Obpmv-_EXTV1zTmlv-Ab5Tfbp8X)\n  - [UIUC ECE 534 Random Processes fall 2020 - Ilan Shomorony](https://www.youtube.com/playlist?list=PL682UO4IMem-1IrJp1jTK_w1lh0qOwLx3)\n  - [ISyE 320 Simulation and Probabilistic Modeling spring 2022, by Qiaomin Xie - University of Wisconsin-Madison](https://www.youtube.com/playlist?list=PL682UO4IMem-7c512A5mwIn_J90z8Awgd)\n  - [Cambridge Principles of Statistics 2020, by Alberto J. Coca](https://www.youtube.com/playlist?list=PLn1JSlh3WT_YBwXFUfRAb1ZOXnPYDgVNa)\n  - [UC Berkeley STAT 150 Stochastic Processes spring 2021, by Brett Kolesnik](https://www.youtube.com/playlist?list=PL682UO4IMem_H6exlt8NMfBSc0137_wlo)\n  - [UIUC Math 564 Applied Stochastic Processes fall 2016, by Kay Kirkpatrick](https://www.youtube.com/playlist?list=PL682UO4IMem-5C_U0ml6O2kM1s1Yo-D9D)\n  - [CS/ECE 561 - Probability and Info Theory in Machine Learning](https://mediaspace.wisc.edu/channel/CS_ECE%2B561%2B-%2BProbability%2Band%2BInfo%2BTheory%2Bin%2BMachine%2BLearning/191748913)\n  - [UCLA Stats 101C Statistical Models and Data Mining summer 2022, by Miles Chen](https://www.youtube.com/playlist?list=PLIygTcviGPKAYdlamMMGkNGJuKFVYvYER)\n  - [UCLA Stats 102A Introduction to Computational Statistics with R winter 2024, by Miles Chen](https://www.youtube.com/playlist?list=PLIygTcviGPKCiE3kiMI7ofuQ3wmXQUcmx)\n  - [UCLA Stats 102B Computation and Optimization for Statistics spring 2024, by Miles Chen](https://www.youtube.com/playlist?list=PLIygTcviGPKD4XftRgjRlTITljOx792YN)\n  - [UCLA Stats 102C Introduction to Monte Carlo Methods fall 2023, by Miles Chen](https://www.youtube.com/playlist?list=PLIygTcviGPKDv0fZ7RxMGPuaa1Yqx_bzh)\n- **Linear Algebra**\n  - [Mathematical Foundations of Machine Learning (Fall 2021) - University of Chicago - Rebecca Willett](https://willett.psd.uchicago.edu/teaching/mathematical-foundations-of-machine-learning-fall-2021/)\n  - [18.06 - Linear Algebra, Prof. Gilbert Strang, MIT OCW](https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/)\n  - [18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning - MIT OCW](https://ocw.mit.edu/courses/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/video_galleries/video-lectures/)\n  - [Linear Algebra (Princeton University)](https://www.youtube.com/playlist?list=PLGqzsq0erqU7w7ZrTZ-pWWk4-AOkiGEGp)\n  - [MOOC: Coding the Matrix: Linear Algebra through Computer Science Applications - Coursera](http://academictorrents.com/details/54cd86f3038dfd446b037891406ba4e0b1200d5a)\n  - [CS 053 - Coding the Matrix - Brown University](http://cs.brown.edu/courses/cs053/current/lectures.htm) ([Fall 14 videos](https://cs.brown.edu/video/channels/coding-matrix-fall-2014/))\n  - [Linear Algebra Review - CMU](http://www.cs.cmu.edu/~zkolter/course/linalg/outline.html)\n  - [A first course in Linear Algebra - N J Wildberger - UNSW](https://www.youtube.com/playlist?list=PL44B6B54CBF6A72DF)\n  - [INTRODUCTION TO MATRIX ALGEBRA](http://ma.mathforcollege.com/youtube/index.html)\n  - [Computational Linear Algebra - fast.ai](https://www.youtube.com/playlist?list=PLtmWHNX-gukIc92m1K0P6bIOnZb-mg0hY) ([Github](https://github.com/fastai/numerical-linear-algebra))\n  - [ENGR108: Introduction to Applied Linear Algebra—Vectors, Matrices, and Least Squares - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rMz-WbFQtNUsUElIh2cPmN9)\n  - [MIT 18.S096 Matrix Calculus For Machine Learning And Beyond](https://www.youtube.com/playlist?list=PLUl4u3cNGP62EaLLH92E_VCN4izBKK6OE)\n  - [Cornell MATH 2940 Linear Algebra for Engineers spring 2009, by Andy Ruina](https://vod.video.cornell.edu/channel/MATH%2B2940%2B-%2BLinear%2BAlgebra%2Bfor%2BEngineers%2BSpring%2B2009/114208531)\n- [10-600 Math Background for ML - CMU](https://www.youtube.com/playlist?list=PL7y-1rk2cCsA339crwXMWUaBRuLBvPBCg)\n- [MIT 18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning](https://ocw.mit.edu/courses/mathematics/18-065-matrix-methods-in-data-analysis-signal-processing-and-machine-learning-spring-2018/video-lectures/)\n- [Direct Methods for Sparse Linear Systems - Prof Tim Davis - UFL](https://www.youtube.com/playlist?list=PL5EvFKC69QIyRLFuxWRnH6hIw6e1-bBXB)\n- [36-705 - Intermediate Statistics - Larry Wasserman, CMU](http://www.stat.cmu.edu/~larry/=stat705/) ([YouTube](https://www.youtube.com/playlist?list=PLcW8xNfZoh7eI7KSWneVWq-7wr8ffRtHF))\n- [Combinatorics - IISC Bangalore](https://nptel.ac.in/courses/106108051/)\n- [Advanced Engineering Mathematics - Notre Dame](https://www.youtube.com/playlist?list=PLd-PuDzW85Ae4pzlylMLzq_a-RHPx8ryA)\n- [Statistical Computing for Scientists and Engineers - Notre Dame](https://www.youtube.com/playlist?list=PLd-PuDzW85AeltIRcjDY7Z4q49NEAuMcA)\n- [Statistical Computing, Fall 2017 - Notre Dame](https://www.youtube.com/playlist?list=PLd-PuDzW85AcSgNGnT5TUHt85SrCljT3V)\n- [Mathematics for Machine Learning, Lectures by Ulrike von Luxburg - Tübingen Machine Learning](https://www.youtube.com/playlist?list=PL05umP7R6ij1a6KdEy8PVE9zoCv6SlHRS)\n- [Essential Mathematics for Machine Learning- July 2018 - IIT Roorkee - YouTube Lectures](https://www.youtube.com/playlist?list=PLLy_2iUCG87D1CXFxE-SxCFZUiJzQ3IvE)\n- [Numerics of Machine Learning (Winter 2022/23) - Tübingen Machine Learning](https://www.youtube.com/playlist?list=PL05umP7R6ij2lwDdj7IkuHoP9vHlEcH0s)\n- [Nonlinear Dynamics and Chaos - Steven Strogatz, Cornell University](https://www.youtube.com/playlist?list=PLbN57C5Zdl6j_qJA-pARJnKsmROzPnO9V)\n- [Nonlinear Dynamics & Chaos - Virginia Tech](https://www.youtube.com/playlist?list=PLUeHTafWecAUqSh3Gy0NNr7H3OsXoC-aK)\n- [An introduction to Optimization on smooth manifolds (with book) - EPFL](https://www.nicolasboumal.net/book/)\n- [Math Modelling](https://www.youtube.com/playlist?list=PLXsDp0z6VWFT5ZM86xh8i1AMFYxnrefLk)\n- [Large-Scale Convex Optimization: Algorithms & Analyses via Monotone Operators by Ernest Ryu and Wotao Yin](https://www.youtube.com/@large-scaleconvexoptimizat2973/videos)\n- [An Overview of Variational Analysis  2021 by Tyrrell Rockafellar](https://www.youtube.com/playlist?list=PLIismQEEd55Fnzllb-HEYK6k8dMmz2ctj)\n- [UW AMATH 584 Applied Linear Algebra & Numerical Analysis by Nathan Kutz](https://faculty.washington.edu/kutz/am584/am584.html)\n- [UW AMATH 584 Applied Linear Algebra & Introductory Numerical Analysis fall 2005, by Loyce Adams](https://www.youtube.com/playlist?list=PL682UO4IMem-NKDk9uLzRaTOnHPpr4knp)\n- [Stanford CME 206 Introduction to Numerical Methods for Engineering spring 2005, by Charbel Farhat](https://www.youtube.com/playlist?list=PL682UO4IMem97Nk-jJCqUiYZmwpCxMuYF)\n- [Stanford CME 200 Linear Algebra with Application to Engineering Computations autumn 2004, by Margot Gerritsen](https://www.youtube.com/playlist?list=PL682UO4IMem-ZiiCDz7C6bVRjxJ5P35zk)\n- [Stanford CME 302 Numerical Linear Algebra autumn 2007, by Gene Golub](https://www.youtube.com/playlist?list=PL682UO4IMem-OlrG8LXfWQJ2kV_4mpAau)\n- [TUe Numerical Linear Algebra 2021, by Martijn Anthonissen](https://www.youtube.com/playlist?list=PLRb3xghOQGNKbUt8zIRpwrQ-SZ6aIZNvt)\n- [Numerical Linear Algebra fall 2018, by Jaegul Choo](https://www.youtube.com/playlist?list=PLep-kTP3NkcMdmrw07VsKFt87FT584Cpd)\n- [MIT 6.S955 Applied Numerical Algorithms fall 2023, by Justin Solomon](https://www.youtube.com/playlist?list=PLQ3UicqQtfNv_Io_NT1b0Nzr9YDqpK3Lb)\n- [UC Berkeley Math 55 Discrete Mathematics fall 2021, by Nikhil Srivastava](https://www.youtube.com/playlist?list=PLaVBOvvdB5ctaLM6AmkUaODhd4JhyP_zC)\n- [Fundamental Mathematics for Robotics spring 2020, by Ken Tomiyama](https://www.youtube.com/@citqualityeducation803/videos)\n- [Short Course on Casual Inference, by Sanjay Shakkottai](https://www.youtube.com/playlist?list=PLcip-Gs_jEK_l2pNG8V_0UDK9jyPtLyuq)\n- [UCLA STAT 100C Linear Models spring 2023, by Arash Amini](https://www.youtube.com/playlist?list=PLN_qg0-2-0SzrzpEoojAa4anJdaKa49GM)\n- [MSU Math for Computing](https://www.youtube.com/playlist?list=PLZ-krWGO-UEyLqtyA2pACX_tXXBTLWkI1)\n- [Mathematics of Data Science - ETH Zurich](https://www.youtube.com/playlist?list=PLiud-28tsatIKUitdoH3EEUZL-9i516IL)\n\n\n------------------------------\n\n### Web Programming and Internet Technologies\n- [CS50's Web Programming with Python and JavaScript](https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript)\n- [Web Design Decal - HTML/CSS/JavaScript Course, University of California, Berkeley](http://wdd.io/)\n- [CS 75 Building Dynamic Websites - Harvard University](http://cs75.tv/2012/summer/)\n- [Internet Technology - IIT Kharagpur](https://nptel.ac.in/courses/106105084/)\n- [Introduction to Modern Application Development - IIT Madras](https://nptel.ac.in/courses/106106156/)\n- [CSE 199 - How the Internet Works, Fall 2016 - University of Buffalo](https://www.youtube.com/playlist?list=PLk97mPCd8nvbxGGfkYkBXrSEvpTc1xTF8)\n- [Open Sourced Elective: Database and Rails - Intro to Ruby on Rails, University of Texas](https://www.schneems.com/ut-rails) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PL7A85FD7803A8CB1F))\n- [CSEP545 - Transaction Processing for E-Commerce, Winter 2012 - University of Washington](https://courses.cs.washington.edu/courses/csep545/12wi/) ([Videos](https://courses.cs.washington.edu/courses/csep545/12wi/video/))\n- [CT 310 Web Development - Colorado State University](https://www.cs.colostate.edu/~ct310/yr2016sp/home_progress.php)\n- [Internet Technologies and Applications 2012, Steven Gordon - Thammasat University, Thailand](https://www.youtube.com/playlist?list=PLvifRcqOOwF9cfLMTE-42fiBsWvBsOEkS)\n- [CSCI 3110 Advanced Topics in Web Development, Fall 2011 - ETSU iTunes](https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=454017618)\n- [CSCI 5710 e-Commerce Implementation, Fall 2015 - ETSU iTunes](https://itunes.apple.com/us/itunes-u/e-commerce-implementation/id1020427670)\n- [MOOC - Web Development - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPlLXUhUNt1wINWrrH9axjcI)\n- [Web Technologies Prof. Dr. Christoph Meinel - HPI](https://open.hpi.de/courses/webtech2015/items/4oqxq6euKfhXgHOMwFBxbn)\n\n------------------------------\n\n### Theoretical CS and Programming Languages\n\n- [MOOC - Compilers - Stanford University](https://archive.org/details/academictorrents_e31e54905c7b2669c81fe164de2859be4697013a)\n- [CS 6120: Advanced Compilers: The Self-Guided Online Course - Cornell University](https://www.cs.cornell.edu/courses/cs6120/2020fa/self-guided/)\n- [CS 164 Hack your language, UC Berkeley](https://sites.google.com/a/bodik.org/cs164/home) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PLuhjguFxSeVLvKvWwTUIpVwXdLtZPX1ZS))\n- [Theory of computation - Shai Simonson](http://www.aduni.org/courses/theory/index.php?view=cw)\n- [CS 173 Programming Languages, Brown University](http://cs.brown.edu/courses/cs173/2012/Videos/) ([Book](http://cs.brown.edu/courses/cs173/2012/book/))\n- [CS Theory Toolkit at CMU 2020](https://www.youtube.com/playlist?list=PLm3J0oaFux3ZYpFLwwrlv_EHH9wtH6pnX)\n- [CS 421 - Programming Languages and Compilers, UIUC](https://courses.engr.illinois.edu/cs421/fa2014/)\n- [CSC 253 - CPython internals: A ten-hour codewalk through the Python interpreter source code, University of Rochester](https://www.youtube.com/playlist?list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S)\n- [CSE341 - Programming Languages, Dan Grossman, Spring 2013 - University of Washington](https://courses.cs.washington.edu/courses/cse341/13sp/)\n- [CSEP 501 - Compiler Construction, University of Washington](https://courses.cs.washington.edu/courses/csep501/09au/lectures/video.html) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PLTPQEx-31JXhfAWGnGzwbfhB2zUB7Jd4C))\n- [CSEP 505 Programming Languages, Winter 2015 - University of Washington](https://courses.cs.washington.edu/courses/csep505/15wi/video/)\n- [DMFP - Discrete Mathematics and Functional Programming, Wheaton College](http://cs.wheaton.edu/~tvandrun/dmfp/)\n- [CS 374 - Algorithms & Models of Computation (Fall 2014), UIUC](https://courses.engr.illinois.edu/cs498374/fa2014/lectures.html) ([Lecture videos](https://www.youtube.com/playlist?list=PL0v718LJg-7_4Zwx3CE7kZ398mhlB2TqF473))\n- [6.045 Automata, Computability, and Complexity, MIT](https://stellar.mit.edu/S/course/6/sp15/6.045/materials.html) ([Lecture Videos](http://stellar.mit.edu/S/course/6/sp15/6.045/special/videos/index.html))\n- [MOOC - Automata - Jeffrey Ullman - Coursera](https://www.youtube.com/playlist?list=PL82C4B8475CAC3F95)\n- [CS581 Theory of Computation - Portland State University](http://web.cecs.pdx.edu/~harry/videos/) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PLbtzT1TYeoMjNOGEiaRmm_vMIwUAidnQz))\n- [Theory of Computation - Fall 2011 UC Davis](https://www.youtube.com/playlist?list=PLslgisHe5tBM8UTCt1f66oMkpmjCblzkt)\n- [TDA555 Introduction to Functional Programming - Chalmers University of Technology](http://www.cse.chalmers.se/edu/course/TDA555/index.html) ([Lectures - YouTube](https://www.youtube.com/playlist?list=PLIQ9jYeUxhgqEnjey91yRTITaXqZQy3Ta))\n- [Ryan O'Donnell Theoretical Computer Science Talks](https://www.youtube.com/playlist?list=PLm3J0oaFux3bLpmu56cDd1PUTp-aJVaTo)\n- [Philip Wadler Haskell lecture recordings](https://www.youtube.com/playlist?list=PLtRG9GLtNcHBv4cuh2w1cz5VsgY6adoc3)\n- [Functional Programming (2021) - University of Nottingham](http://www.cs.nott.ac.uk/~pszgmh/pgp.html)\n- [Functional Programming - University of Edinburgh - 2016-17](http://www.inf.ed.ac.uk/teaching/courses/inf1/fp/)\n- [MOOC - Functional Programming Principles in Scala by Martin Odersky](https://www.youtube.com/user/afigfigueira/playlists?sort=dd&view=50&shelf_id=9)\n- [CS294 - Program Synthesis for Everyone](https://people.eecs.berkeley.edu/~bodik/cs294fa12)\n- [MOOC - Principles of Reactive Programming, Scala - Coursera](https://www.youtube.com/playlist?list=PLMhMDErmC1TdBMxd3KnRfYiBV2ELvLyxN)\n- [Category Theory for Programmers, 2014 - Bartosz Milewski](https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/) ([YouTube](https://www.youtube.com/playlist?list=PLbgaMIhjbmEnaH_LTkxLI7FMa2HsnawM_))\n- Oregon Programming Languages Summer School (Proof theory, type theory, category theory, verification)\n  - [2012 Lectures](https://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html)\n  - [2013 Lectures](https://www.cs.uoregon.edu/research/summerschool/summer13/curriculum.html)\n  - [2014 Lectures](https://www.cs.uoregon.edu/research/summerschool/summer14/curriculum.html)\n  - [2015 Lectures](https://www.cs.uoregon.edu/research/summerschool/summer15/curriculum.html)\n  - [2016 Lectures](https://www.cs.uoregon.edu/research/summerschool/summer16/curriculum.php)\n  - [ Latest YT playlists](https://www.youtube.com/@OPLSS/playlists)\n- [Inf1 - Computation and Logic 2015 - University of Edinburgh](http://www.inf.ed.ac.uk/teaching/courses/inf1/cl/)\n- [INFORMATICS 1 - FUNCTIONAL PROGRAMMING - University of Edinburgh](http://www.inf.ed.ac.uk/teaching/courses/inf1/fp/) ([Videos](http://groups.inf.ed.ac.uk/vision/VIDEO/2015/inf1fp.htm))\n- [Compiler Design - IISC Bangalore](https://nptel.ac.in/courses/106108052/)\n- [Compiler Design - IIT Kanpur](https://nptel.ac.in/courses/106104123/)\n- [Principles of Programming Languages - IIT Delhi](https://nptel.ac.in/courses/106102067/)\n- [Principles of Compiler Design - IISC Bangalore](https://nptel.ac.in/courses/106108113/)\n- [Functional Programming in Haskell - IIT Madras](https://nptel.ac.in/courses/106106137/)\n- [Theory of Computation - IIT Kanpur](https://nptel.ac.in/courses/106104148/)\n- [Theory of Automata, Formal Languages and Computation - IIT Madras](https://nptel.ac.in/courses/106106049/)\n- [Theory of Computation - IIT Kanpur](https://nptel.ac.in/courses/106104028/)\n- [Logic for CS - IIT Delhi](https://nptel.ac.in/courses/106102013/)\n- [Principles of Compiler Design - Swarthmore College](https://www.cs.swarthmore.edu/~jpolitz/cs75/s16/index.html)\n- [Undergrad Complexity Theory at CMU](https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5vLXpzOyJiLtqLp6dCW2)\n- [Graduate Complexity Theory at CMU](https://www.youtube.com/playlist?list=PLm3J0oaFux3b8Gg1DdaJOzYNsaXYLAOKH)\n- [Great Ideas in Theoretical Computer Science at CMU](https://www.youtube.com/playlist?list=PLm3J0oaFux3aafQm568blS9blxtA_EWQv) \n  - [Another link](https://www.cs251.com/)\n- [Analysis of Boolean Functions at CMU](https://www.youtube.com/playlist?list=PLm3J0oaFux3YypJNaF6sRAf2zC1QzMuTA)\n- [Theoretical Computer Science (Bridging Course)(Tutorial) - SS 2015](http://ais.informatik.uni-freiburg.de/teaching/ss15/bridging/)\n- [Languages & Translators - UCLouvain LINFO2132](https://norswap.com/compilers/)\n- [Compiler Design by Sorav Bansal](https://www.youtube.com/playlist?list=PLf3ZkSCyj1tf3rPAkOKY5hUzDrDoekAc7)\n- [OCaml Programming: Correct + Efficient + Beautiful](https://www.youtube.com/playlist?list=PLre5AT9JnKShBOPeuiD9b-I4XROIJhkIU)\n- [Columbia ELEN E6711 Stochastic Models in Information Systems fall 2005, by Yuliy Barsyhnikov](https://www.youtube.com/playlist?list=PL682UO4IMem9dvI-8vjxlPkM5onW9WoIp)\n- [Columbia ELEN E6717 Information Theory fall 2003, by Vittorio Castelli](https://www.youtube.com/playlist?list=PL682UO4IMem_IUZIFzlJi8vCTtS-Xi8eY)\n- [CMU 21 738 Extremal Combinatorics spring 2020, by Po-Shen Loh](https://www.youtube.com/playlist?list=PLgTkKBA6LRqaGKITvQS1QuIBoEbOVwFTm)\n- [JHU Domain-Specific Languages (DSL) Class (Summer 2018)](https://www.youtube.com/playlist?list=PLW-6wqFEcgTqHMXV_8jI43QLkCv8VgqLk)\n\n------------------------------\n\n### Embedded Systems\n\n- [EE319K Embedded Systems - UT Austin](http://users.ece.utexas.edu/~valvano/Volume1/E-Book/VideoLinks.htm)\n- [EE445L Embedded Systems Design Lab, Fall 2015, UTexas](https://www.youtube.com/playlist?list=PLyg2vmIzGxXGBxFu8nvX3KBadSdsNAvbA)\n- [CS149 Introduction to Embedded Systems - Spring 2011 - UCBerkeley](https://youtube.com/playlist?list=PLu0nzW8Es1x0RIvuWdw1Diez2Clk8xAX5)\n- [ECE 4760 Designing with Microcontrollers Fall 2016, Cornell University](http://people.ece.cornell.edu/land/courses/ece4760/) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PLKcjQ_UFkrd4I5WOIxHEYZ7iY04lj15Ez))\n- [ECE 5760 - Advanced Microcontroller Design and system-on-chip, Spring 2016 - Cornell University](http://people.ece.cornell.edu/land/courses/ece5760/)\n- [Internet of Things by Prof. Dr.-Ing. Dietmar P. F. Möller](https://video.tu-clausthal.de/vorlesung/408.html)\n- [CSE 351 - The Hardware/Software Interface, Spring 16 - University of Washington](https://courses.cs.washington.edu/courses/cse351/16sp/videos.html) ([Coursera](http://academictorrents.com/details/f1384286c8581bffba11e378fdb37608e649d82a))\n- [ECE 5030 - Electronic Bioinstrumentation, Spring 2014 - Cornell University](http://people.ece.cornell.edu/land/courses/ece5030/)\n- [ECE/CS 5780/6780 - Embedded Systems Design, Spring 14 - University of Utah](https://www.youtube.com/playlist?list=PLQefpK95HyFmao3zi-WDOMkeSev-Je5dE)\n- [Embedded Systems Class - Version 1 - 2011 - UNCC](https://www.youtube.com/playlist?list=PLE4462C1C306E2EB2)\n- [Embedded Systems using the Renesas RX63N Processor - Version 3 - UNCC](https://www.youtube.com/playlist?list=PLPIqCiMhcdO5gxLJWt_hY5CPMzqg75IU5)\n- [Software Engineering for Embedded Systems (WS 2011/12) - HPI University of Potsdam](https://www.tele-task.de/series/864/)\n- [Embedded Software Testing - IIT Madras](https://nptel.ac.in/courses/117106112/)\n- [Embedded Systems - IIT Delhi](https://nptel.ac.in/courses/108102045/)\n- [Embedded Systems Design - IIT Kharagpur](https://nptel.ac.in/courses/106105159/)\n- [ARM Based Development - IIT Madras](https://nptel.ac.in/courses/117106111/)\n- [Software Engineering for Self Adaptive Systems - iTunes - HPI University of Potsdam](https://itunes.apple.com/us/itunes-u/software-engineering-for-self/id993578475)\n- [EE260 Embedded Systems by Robert Paz](https://www.youtube.com/playlist?list=PLnvE9iJk1wvib_pdUPdQGYZrkrmg9mf__)\n- [IoT Summer School](https://www.youtube.com/playlist?list=PLHih6DnKQaoYQ5PIT3Tp-UrqUguDYWYQu)\n- [ECSE 421 - Embedded Systems - McGill](http://www.cim.mcgill.ca/~jer/courses/es/)\n- [NOC:Advanced IOT Applications - IISc Bangalore](https://nptel.ac.in/courses/108/108/108108123/)\n- [NOC:Design for internet of things - IISc Bangalore](https://nptel.ac.in/courses/108/108/108108098/)\n\n------------------------------\n\n### Real time system evaluation\n\n- [Performance evaluation of Computer systems - IIT Madras](https://nptel.ac.in/courses/106/106/106106048/)\n- [Real Time systems - IIT Karaghpur](https://nptel.ac.in/courses/106/105/106105036/)\n- [EE 380 Colloquium on Computer Systems - Stanford University](https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu)\n- [System storages - IISc Bangalore](https://nptel.ac.in/courses/106/108/106108058/)\n- [High Performance Computing - IISC Bangalore](https://www.youtube.com/playlist?list=PL2F82ECDF8BB71B0C)\n- [2023 High Performance Computing Course Prof Dr - Ing Morris Riedel](https://www.youtube.com/playlist?list=PLmJwSK7qduwUBwrFn3SY8vi4AYa2rVTWH) ([2022](https://www.youtube.com/playlist?list=PLmJwSK7qduwWyqcSEB45HOyxq--z8njix))\n- [High Performance Computing | Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPk8NaXIiFQXWK6VPnrtMRXC)\n- [UCLA Stats 205 Hierarchical Linear Models spring 2024, by Jingyi Jessica Li](https://www.youtube.com/playlist?list=PLAYxx7zX5F1O2HbRr4gORnscbM9EszYbK)\n- [UF EML 6934 Optimal Control spring 2012, by Anil V. Rao](https://www.youtube.com/playlist?list=PLIygTcviGPKBCJ9JyHfBi4ftc9FDCtaBc)\n\n------------------------------\n\n### Computer Organization and Architecture\n\n- **Computer Organization**\n  - [How Computers Work - Aduni](http://aduni.org/courses/hcw/index.php?view=cw)\n  - [CS 61C - Machine Structures, UC Berkeley Spring 2015](http://www.infocobuild.com/education/audio-video-courses/computer-science/cs61c-spring2015-berkeley.html) \n  - [6.004 - Computation Structures Spring 2013, MIT](https://www.youtube.com/playlist?list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-)\n  - [CS/ECE 3810 Computer Organization, Fall 2015, , University of Utah](http://www.cs.utah.edu/~rajeev/cs3810/) ([YouTube](https://www.youtube.com/playlist?list=PLm7BxCUdWqZzjZ-jRe73KUfj2GsSS2FPy))\n  - [Digital Computer Organization - IIT Kharagpur](https://nptel.ac.in/courses/117105078/)\n  - [Computer Organization - IIT Madras](https://nptel.ac.in/courses/106106092/)\n  - [CS-224 - Computer Organization, 2009-2010 Spring, Bilkent University](http://video.bilkent.edu.tr/course_videos.php?courseid=16) ([YouTube playlist](https://www.youtube.com/playlist?list=PLhwVAYxlh5dvB1MkZrcRZy6x_a2yORNAu))\n  - [INFORMATICS 2C - INTRODUCTION TO COMPUTER SYSTEMS (AUTUMN 2016) - University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2014/inf2c-cs.htm)\n- **Computer Architecture**\n  - [18-447 - Introduction to Computer Architecture, CMU](http://www.ece.cmu.edu/~ece447/s15/doku.php?id=schedule) ([Lectures - YouTube - Fall 15](https://youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq))\n  - [CSEP 548 - Computer Architecture Autumn 2012 - University of Washington](https://courses.cs.washington.edu/courses/csep548/12au/video/index.html)\n  - [CS/ECE 6810 Computer Architecture, Spring 2016, University of Utah](http://www.cs.utah.edu/~rajeev/cs6810/) ([YouTube](https://www.youtube.com/playlist?list=PL8EC1756A7B1764F6))\n  - [MOOC - Computer Architecture, David Wentzlaff - Princeton University/Coursera](http://academictorrents.com/details/53bae6d22f3b6e692673f9335e0a0198c1618426)\n  - [Computer Architecture - ETH Zürich - Fall 2019](https://safari.ethz.ch/architecture/fall2019/doku.php?id=schedule)\n  - [Digital Circuits and Computer Architecture - ETH Zurich - Spring 2017](https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-IXWTT7xoNYpst5-zdZQ6y)\n  - [Computer Architecture - IIT Delhi](https://nptel.ac.in/courses/106102062/)\n  - [Computer Architecture - IIT Kanpur](https://nptel.ac.in/courses/106104122/)\n  - [Computer Architecture - IIT Madras](https://nptel.ac.in/courses/106106134/)\n  - [High Performance Computer Architecture - IIT Kharagpur](https://nptel.ac.in/courses/106105033/)\n  - [BE5B35APO - Computer Architectures, Spring 2022, CTU - FEE](https://cw.fel.cvut.cz/b212/courses/b35apo/en/lectures/start) ([YouTube - Spring 2022](https://www.youtube.com/playlist?list=PLQL6z4JeTTQnTrML7HgagbjdpCtvdyu0M)) ([RISC-V simulator - QtRvSim](https://comparch.edu.cvut.cz/))\n- **Parallel Computer Architecture**\n  - [15-418 - Parallel Computer Architecture and Programming, CMU](http://15418.courses.cs.cmu.edu/spring2015/) ([Lecture Videos](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22a5862643-2416-49ef-b46b-13465d1b6df0%22))\n  - [CS 267 Applications of Parallel Computers, Spring 16 - UC Berkeley](https://people.eecs.berkeley.edu/~demmel/cs267_Spr16/) ([YouTube](https://www.youtube.com/playlist?list=PLkFD6_40KJIzSfxr35ZT59-LZcibZmfp2))\n  - [MOOC - Heterogeneous Parallel Programming - Coursera](http://academictorrents.com/details/8903d0871c652b96c7b29db738cea76902d65888)\n  - [ECE 498AL - Programming Massively Parallel Processors](https://nanohub.org/resources/7225)\n  - [Parallel Computing - IIT Delhi](https://nptel.ac.in/courses/106102114/)\n  - [Parallel Architectures 2012/13- University of Edinburgh](http://groups.inf.ed.ac.uk/vision/VIDEO/2012/pa.htm)\n- **Digital Systems Design**\n  - [ELEC2141 Digital Circuit Design, UNSW](https://www.youtube.com/playlist?list=PLB52B8F4E464CEEF7)\n  - [Digital Systems Design - IIT Kharagpur](https://nptel.ac.in/courses/117105080/)\n  - [Digital Design Course - 2015 - UNCC](https://www.youtube.com/playlist?list=PLPIqCiMhcdO7bBmieyG5u41x2Ogcn67Bs)\n- [CS1 - Higher Computing - Richard Buckland UNSW](https://www.youtube.com/playlist?list=PL6B940F08B9773B9F)\n- [MOOC - From NAND to Tetris - Building a Modern Computer From First Principles](https://www.nand2tetris.org/) ([YouTube](https://www.youtube.com/playlist?list=PLNMIACtpT9BfztU0P92qlw8Gd4vxvvfT1))\n- [System Validation, TU Delft](https://ocw.tudelft.nl/courses/system-validation/)\n- [High Performance Computing - IISC Bangalore](https://nptel.ac.in/courses/106108055/)\n- [Introduction to ARM - Open SecurityTraining](https://www.youtube.com/playlist?list=PLUFkSN0XLZ-n91t_AX5zO007Giz1INwPd)\n- [Intro x86 (32 bit) - Open SecurityTraining](https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0)\n- [Intermediate x86 (32 bit) - Open SecurityTraining](https://www.youtube.com/playlist?list=PL8F8D45D6C1FFD177)\n- [Design of Digital Circuits - ETH Zürich - Spring 2019](https://www.youtube.com/playlist?list=PL5Q2soXY2Zi8J58xLKBNFQFHRO3GrXxA9)\n- [Onur Mutlu @ TU Wien 2019 - Memory Systems](https://www.youtube.com/playlist?list=PL5Q2soXY2Zi_gntM55VoMlKlw7YrXOhbl)\n- [Memory Systems Course - Technion, Summer 2018](https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-IymxXpH_9vlZCOeA7Yfn9)\n- [UC Berkeley EECS16A Designing Information Devices and Systems I summer 2020, by Grace Kuo, Panos Zarkos, Urmita Sikder](https://www.youtube.com/playlist?list=PL682UO4IMem9_svw6nCsGOaDZaYSjpgcB)\n- [UC Berkeley EECS 16B Designing Information Devices and Systems II fall 2020, by Seth Sanders, Miki Lustig](https://www.youtube.com/playlist?list=PL682UO4IMem_QO6og7qXyvjMUHXNI7Hqs)\n- [ELEN E4896 - MUSIC SIGNAL PROCESSING - Spring 2016 - Columbia](https://www.ee.columbia.edu/~dpwe/e4896/outline.html)\n- [Columbia ELEN E6820 Speech and Audio Processing spring 2006, by Dan Ellis](https://www.youtube.com/playlist?list=PL682UO4IMem8IpOKncIUSEFsYWoJyS5ks)\n- [CMU 11 751 / 18 781 Speech Recognition and Understanding fall 2022, by Shinji Watanabe](https://www.youtube.com/playlist?list=PLfVqr2l0FG-u7chWKPQMDoT0o-I2ejxeK)\n- [CMU 11 492 Speech Processing fall 2021, by Alan W. Black](https://www.youtube.com/playlist?list=PL682UO4IMem9InUp3CZHL4g7IwzfKXe3c)\n\n------------------------------\n\n### Security\n\n- [Internet Security (WT 2018/19) - HPI University of Potsdam](https://www.tele-task.de/series/1227/)\n- [6.1600 Foundations of Computer Security - MIT Fall 2023](https://61600.csail.mit.edu/2023/)\n- [6.858 Computer Systems Security - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-858-computer-systems-security-fall-2014/video_galleries/video-lectures/)\n- [CS 253 Web Security - Stanford University](https://www.youtube.com/playlist?list=PL1y1iaEtjSYiiSGVlL1cHsXN_kvJOOhu-)\n- [CS 161: Computer Security, UC Berkeley](https://fa23.cs161.org/) ([Videos](https://www.youtube.com/playlist?list=PLfBkt1-_BHX_VxOWlmstguFxojSN742vz))\n- [6.875 - Cryptography - Spring 2018- MIT](https://www.youtube.com/playlist?list=PL6ogFv-ieghe8MOIcpD6UDtdK-UMHG8oH)\n- [CSEP590A - Practical Aspects of Modern Cryptography, Winter 2011 - University of Washington](https://courses.cs.washington.edu/courses/csep590a/11wi/) ([Videos](https://courses.cs.washington.edu/courses/csep590a/11wi/video/))\n- [CS461/ECE422 - Computer Security - University of Illinois at Urbana-Champaign](https://courses.engr.illinois.edu/cs461/sp2016/) ([Videos](https://recordings.engineering.illinois.edu:8443/ess/portal/section/8a560718-345a-417a-b665-6bd375a71ee2))\n- [Introduction to Cryptography, Christof Paar - Ruhr University Bochum, Germany](https://www.youtube.com/playlist?list=PLwJWuZfL_Ga2KJrTf9hOIgAQWkSpn9RNm)\n- [ECS235B Foundations of Computer and Information Security - UC Davis](https://itunes.apple.com/us/itunes-u/computer-science-foundations/id389259109)\n- [CIS 4930/ CIS 5930 - Offensive Computer Security, Florida State University](http://www.cs.fsu.edu/~redwood/OffensiveComputerSecurity/lectures.html)\n- [Introduction to Information Security I - IIT Madras](https://nptel.ac.in/courses/106106129/)\n- [Information Security - II - IIT Madras](https://nptel.ac.in/courses/106106141/)\n- [Introduction to Cryptology - IIT Roorkee](https://nptel.ac.in/courses/106107155/)\n- [Cryptography and Network Security - IIT Kharagpur](https://nptel.ac.in/courses/106105031/)\n- [18-636 Browser Security, Stanford](https://courseware.stanford.edu/pg/courses/334553/18636-spring-2013)\n- [Internet Security - Weaknesses and Targets (WT 2015/16)](https://www.tele-task.de/archive/series/overview/1084/) ([WT 2012/13](https://www.tele-task.de/archive/series/overview/921/) ([YouTube](https://www.youtube.com/playlist?list=PLVWVhkyKd-7taP50fB9PeZ2W_EPTOLD8o)))\n- [IT Security, Steven Gordon - Thammasat University, Thailand](https://www.youtube.com/playlist?list=PLvifRcqOOwF9-XSGfm-3uA9DfF7plasCF)\n- [Security and Cryptography, Steven Gordon - Thammasat University, Thailand](https://www.youtube.com/playlist?list=PLvifRcqOOwF-z2sfMb3w0uQzd7PfaLFlU)\n- [MOOC - Cryptography - Coursera](https://www.youtube.com/playlist?list=PL58C6Q25sEEHXvACYxiav_lC2DqSlC7Og)\n- [MOOC - Intro to Information Security - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPkG-z00NybuIyDqT4sRh3ak)\n- [ICS 444 - Computer & Network Security](https://www.youtube.com/playlist?list=PLciCszvvRCTV09wIXJwiPmYF7thHiq4En)\n- [Privacy and Security in Online Social Networks - IIT Madras](https://nptel.ac.in/courses/106106146/)\n- [Malware Dynamic Analysis - Open SecurityTraining](http://opensecuritytraining.info/MalwareDynamicAnalysis.html) ([YouTube](https://www.youtube.com/playlist?list=PLUFkSN0XLZ-kqYbGpY4Gt_VATd4ytQg-Z))\n- [CSN09112 - Network Security and Cryptography - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/csn09112)\n- [CSN10107 - Security Testing and Network Forensics - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/csn10107)\n- [CSN11123 - Advanced Cloud and Network Forensics - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/csn11123)\n- [CSN11117 - e-Security - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/csn11117)\n- [CSN08704 - Telecommunications - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/csn08704)\n- [CSN11128 - Incident Response and Malware Analysis - Bill Buchanan - Edinburgh Napier](https://asecuritysite.com/CSN11128)\n- [Internet Security for Beginners by Dr. Christoph Meinel - HPI](https://www.youtube.com/playlist?list=PLoOmvuyo5UAdsi-IacgZJQF1MRw0Ee-HH)\n- [Offensive Security and Reverse Engineering, Chaplain University by Ali Hadi](https://www.youtube.com/playlist?list=PLCS2zI95IiNybAAQ0HL88YzwRpLXje5y6)\n- [Computer Systems Security, Fall 2020, Vinod Ganapathy, IISc Bangalore](https://www.csa.iisc.ac.in/~vg/teaching/SecurityLectures/)\n- [UC Berkeley CS 161 Computer Security, Summer 2021, by Nicholas Ngai and Peyrin Kao](https://www.youtube.com/playlist?list=PLIygTcviGPKAPoe_0mUsXYaxZfsFyQyFE)\n- [UCSD CS291A Differential Privacy Fall 2021, by Yu-Xiang Wang](https://cseweb.ucsd.edu/~yuxiangw/classes/DPCourse-2021Fall/) ([Youtube](https://www.youtube.com/playlist?list=PLTN4aNO9NiB7UiBbSFznHRSkdieBc0-sk))\n\n------------------------------\n\n### Computer Graphics\n\n- [ECS 175 - Computer Graphics, Fall 2009 - UC Davis](https://itunes.apple.com/us/itunes-u/computer-graphics-fall-2009/id457893733?mt=10)\n- [6.837 - Computer Graphics - Spring 2017 - MIT](https://www.youtube.com/playlist?list=PLkHIj5SCfn3_PCotoqTetMpJc_jkpkgLt)\n- [6.838 - Shape Analysis - Spring 2017- MIT](https://www.youtube.com/playlist?list=PLkHIj5SCfn3-FeWqD3xeOZWP2kQYY654o)\n- [Introduction to Computer Graphics - IIT Delhi](https://nptel.ac.in/courses/106102065/)\n- [Computer Graphics - IIT Madras](https://nptel.ac.in/courses/106106090/)\n- [Computer Graphics 2012, Wolfgang Huerst, Utrecht University](https://www.youtube.com/playlist?list=PLDFA8FCF0017504DE)\n- [CS 5630/6630 - Visualization, Fall 2016, University of Utah](http://dataviscourse.net/2016/index.html) ([Lectures - Youtube](https://www.youtube.com/playlist?list=PLbuogVdPnkCpQY3miQpTJtnHgCLze2lr0))\n- [Advanced Visualization UC Davis](https://www.youtube.com/playlist?list=PLslgisHe5tBNnySlj9TlL-n-4jNEK-xgi)\n- [Computer Graphics Fall 2011, Barbara Hecker](https://www.youtube.com/playlist?list=PL9C949E9F19381E61)\n- [Ray Tracing for Global Illumination, UCDavis](https://www.youtube.com/playlist?list=PLslgisHe5tBPckSYyKoU3jEA4bqiFmNBJ)\n- [Rendering / Ray Tracing Course, SS 2015 - TU Wien](https://www.youtube.com/playlist?list=PLujxSBD-JXgnGmsn7gEyN28P1DnRZG7qi)\nintroduction/id389259246))\n- [Computational Geometry - IIT Delhi](https://nptel.ac.in/courses/106102011/)\n- [CS 468 - Differential Geometry for Computer Science - Stanford University](http://graphics.stanford.edu/courses/cs468-13-spring/schedule.html) ([Lecture videos](https://www.youtube.com/playlist?list=PL_deCdukpyu1rdH85XsEEREbpoqEauiJl))\n- [CMU 15-462/662: Computer Graphics](http://15462.courses.cs.cmu.edu/fall2020/)\n\n------------------------------\n\n### Image Processing and Computer Vision\n\n- [Digital Image Processing - IIT Kharagpur](https://nptel.ac.in/courses/117105079/)\n- [CS 543 - Computer Vision – Spring 2017](https://courses.engr.illinois.edu/cs543/sp2017/) ([Recordings](https://echo360.org/section/283b0471-3d9f-4efb-9c51-bc00e778735e/home))\n- [CAP 5415 - Computer Vision - University of Central Florida](https://www.crcv.ucf.edu/courses/cap5415-fall-2012/)([Video Lectures](https://www.youtube.com/playlist?list=PLd3hlSJsX_ImKP68wfKZJVIPTd8Ie5u-9))\n- [EE637 - Digital Image Processing I - Purdue University](https://engineering.purdue.edu/~bouman/ece637/) ([Videos - Sp 2011](https://www.youtube.com/user/ModelBasedImaging),[Videos - Sp 2007](https://engineering.purdue.edu/~bouman/ece637/lectures/lectures07/))\n- [Computer Vision I: Variational Methods - TU München](https://vision.in.tum.de/teaching/ws2015/vmcv2015) ([YouTube](https://www.youtube.com/playlist?list=PLTBdjV_4f-EJ7A2iIH5L5ztqqrWYjP2RI))\n- [Computer Vision II: Multiple View Geometry (IN2228), SS 2016 - TU München](https://vision.in.tum.de/teaching/ss2016/mvg2016) ([YouTube](https://www.youtube.com/playlist?list=PLTBdjV_4f-EJn6udZ34tht9EVIW7lbeo4))\n- [EENG 512/CSCI 512 - Computer Vision - Colorado School of Mines](https://www.youtube.com/playlist?list=PL4B3F8D4A5CAD8DA3)\n- [Computer Vision for Visual Effects - RPI](https://www.ecse.rpi.edu/~rjradke/cvfxcourse.html) ([YouTube](https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUJlKlt84HFqSWfW36MDd5a))\n- [Introduction to Image Processing - RPI](https://www.ecse.rpi.edu/~rjradke/improccourse.html) ([YouTube](https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUf60vkjePfcOQc8sHxmnDX))\n- [CAP 6412 - Advanced Computer Vision - University of Central Florida](https://www.crcv.ucf.edu/cap6412-spring-2013/)([Video lectures](https://www.crcv.ucf.edu/cap6412-spring-2013/)) ([Spring 2018](https://www.youtube.com/playlist?list=PLd3hlSJsX_ImoNaeX5vFrxogGXTSmS993))\n- [Digital Signal Processing - RPI](https://www.ecse.rpi.edu/~rjradke/dspcourse.html)\n- [Advanced Vision 2014 - University of Edinburgh](http://homepages.inf.ed.ac.uk/rbf/AVINVERTED/main_av.htm)\n- [Photogrammetry Course - 2015/16 - University of Bonn, Germany](https://www.youtube.com/playlist?list=PLgnQpQtFTOGRsi5vzy9PiQpNWHjq-bKN1)\n- [MOOC - Introduction to Computer Vision - Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPnbDacyrK_kB_RUkuxQBlCm)\n- [ECSE-4540 - Intro to Digital Image Processing - Spring 2015 - RPI](https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUf60vkjePfcOQc8sHxmnDX)\n- [Machine Learning for Computer Vision - Winter 2017-2018 - UniHeidelberg](https://www.youtube.com/playlist?list=PLuRaSnb3n4kSQFyt8VBldsQ9pO9Xtu8rY)\n- [High-Level Vision - CBCSL OSU](https://www.youtube.com/playlist?list=PLcXJymqaE9POZaT6UFAUUvrQiVQLfzCLN)\n- [Advanced Computer Vision - CBCSL OSU](https://www.youtube.com/playlist?list=PLcXJymqaE9POnU3bVmCVMmtSXzCpcj28T)\n- [Introduction to Image Processing & Computer Vision - CBCSL OSU](https://www.youtube.com/playlist?list=PLcXJymqaE9PMexHWGgXJVINpr6ajy5vuz)\n- [Machine Learning for Computer Vision - TU Munich](https://www.youtube.com/playlist?list=PLTBdjV_4f-EIiongKlS9OKrBEp8QR47Wl)\n- [Biometrics - IIT Kanpur](https://nptel.ac.in/courses/106104119/)\n- [Quantitative Big Imaging 2019 ETH Zurich](https://www.youtube.com/playlist?list=PLTWuXgjdOrnmXVVQG5DRkVeOIGOcTmCIw)\n- [Multiple View Geometry in Computer Vision](https://www.youtube.com/playlist?list=PLyH-5mHPFffFvCCZcbdWXAb_cTy4ZG3Dj)\n- [Modern C++ Course For CV (2020) - University of Bonn](https://www.ipb.uni-bonn.de/teaching/cpp-2020/lectures)\n- [Photogrammetry 1 Course – 2020 - University of Bonn](https://www.ipb.uni-bonn.de/photo1-2020/)\n- [Photogrammetry II Course 2020/21 - University of Bonn](https://www.ipb.uni-bonn.de/photo2-2020/)\n- [3D Computer Vision - National University of Singapore](https://www.youtube.com/playlist?list=PLxg0CGqViygP47ERvqHw_v7FVnUovJeaz)\n------------------------------\n\n### Computational Physics\n\n- [Statistics and Machine Learning for Astronomy](https://www.youtube.com/playlist?list=PLo4wAAMJnA1wDQ2ZmTJCaBYdrXqBWUwT5)\n- [Astronomical data analysis using Python 2021 - NRC IUCAA](https://www.youtube.com/playlist?list=PL3jLiVc5sr3P7Uov0VFsEfwPOEG1rF-FO)\n- [SPARC Workshop on Machine Learning in Solar Physics and Space Weather - CESSI IISER Kolkata](https://www.youtube.com/playlist?list=PLtxxbMktGS8pjURPBXJTAkClnXVE_ZNni)\n- [Data-Driven Methods and Machine Learning in Atmospheric Sciences - IISC](https://www.youtube.com/playlist?list=PLnUDCXHuQXBaGrYSbDMWi2inp7GSe3__8)\n- [Computational Astrophysics - AstroTwinCoLo, 2015](https://www.youtube.com/playlist?list=PLPdkBLbDPtqoHDcjUweIJqe6GKnOz0-Qw)\n- [Astroinformatics 2019 Conference - Caltech](https://m.youtube.com/playlist?list=PL8_xPU5epJdcv2L4MzpzNd6gPyq6glmjc)\n- [Space Science with Python - Astroniz](https://www.youtube.com/playlist?list=PLNvIBWkEdZ2iCc8G9dvx6MQvBruJG-TE8)\n- [Computational Physics Course in Python, Rutgers 2021](https://www.youtube.com/playlist?list=PLXmUYdQdC9IGv61Y1lhGBH0NsDQRdwcJE)\n- [Landau Computational Physics Course](https://www.youtube.com/playlist?list=PLnWQ_pnPVzmJnp794rQXIcwJIjwy7Nb2U)\n- [Statistical Methods and Machine Learning in High Energy Physics](https://www.youtube.com/playlist?list=PL04QVxpjcnjjKDki5FHlKQ8839TGHvj8y)\n------------------------------\n\n### Computational Biology\n\n- [ECS 124 - Foundations of Algorithms for Bioinformatics - Dan Gusfield, UC Davis](http://web.cs.ucdavis.edu/~gusfield/cs124videos/videolist.html) ([YouTube](https://www.youtube.com/playlist?list=PL_w_qWAQZtAbh8bHfzXYpdnVKCGCDmmoL))\n- [CSE549 - Computational Biology - Steven Skiena - 2010 SBU](https://www.youtube.com/playlist?list=PLA48145CC64FE7990)\n- [7.32 Systems Biology, Fall 2014 - MIT OCW](https://ocw.mit.edu/courses/physics/8-591j-systems-biology-fall-2014/)\n- [6.802J/ 6.874J Foundations of Computational and Systems Biology - MIT OCW](https://ocw.mit.edu/courses/7-91j-foundations-of-computational-and-systems-biology-spring-2014/video_galleries/video-lectures/)\n- [6.S897 Machine Learning For Healthcare](https://ocw.mit.edu/courses/6-s897-machine-learning-for-healthcare-spring-2019/video_galleries/lecture-videos/)\n- [6.047/6.878 Machine Learning for Genomics Fall 2020 - MIT](https://www.youtube.com/playlist?list=PLypiXJdtIca6dEYlNoZJwBaz__CdsaoKJ)\n- [6.874 MIT Deep Learning in Life Sciences - Spring 2021 - MIT](https://www.youtube.com/playlist?list=PLypiXJdtIca5sxV7aE3-PS9fYX3vUdIOX)\n- [6.047/6.878 Public Lectures on Computational Biology: Genomes, Networks, Evolution - MIT](http://compbio.mit.edu/lectures.html)\n- [Bio 84 - Your Genes and Your Health, Stanford University](https://cmgm.stanford.edu/bio84/)\n- [BioMedical Informatics 231 Computational Molecular Biology, Stanford University](https://cmgm.stanford.edu/biochem218/)\n- [BioMedical Informatics 258 Genomics, Bioinformatics & Medicine, Stanford University](http://biochem158.stanford.edu/)\n- [03-251: Introduction to Computational Molecular Biology - Carnegie Mellon University](https://www.youtube.com/playlist?list=PLUKmtlUTHfBPoI70nVz3C-82N4nznc3Iz)\n- [03-712: Biological Modeling and Simulation - Carnegie Mellon University](https://www.youtube.com/playlist?list=PLUKmtlUTHfBOgpZFmTvsTwkUh2K1RAse-)\n- [MOOC - Bioinformatics Algorithms: An Active Learning Approach - UC San Diego/Coursera](http://bioinformaticsalgorithms.com/videos.htm)\n- [Neural Networks and Biological Modeling - Lecturer: Prof. Wulfram Gerstner - EPFL](http://www.klewel.com/conferences/epfl-neural-networks/)\n- [Video Lectures of Wulfram Gerstner: Computational Neuroscience - EPFL](http://lcn.epfl.ch/~gerstner/VideoLecturesGerstner.html)\n- [An Introduction To Systems Biology](http://www.weizmann.ac.il/mcb/UriAlon/introduction-systems-biology-design-principles-biological-circuits)\n- [Introduction to Bioinformatics, METUOpenCourseWare](https://www.youtube.com/playlist?list=PLuiPz6iU5SQ-PAjlyz4b3EIIQ6dpZ2DE_)\n- [MOOC - Algorithms for DNA Sequencing, Coursera](https://www.youtube.com/playlist?list=PL2mpR0RYFQsBiCWVJSvVAO3OJ2t7DzoHA)\n- [Frontiers of Biomedical Engineering with W. Mark Saltzman - Yale](https://www.youtube.com/playlist?list=PL27E877E8206F196B)\n- [NOC:Computational Systems Biology - IIT Madras](https://nptel.ac.in/courses/102/106/102106068/)\n- [NOC:BioInformatics:Algorithms and Applications - IIT Madras](https://nptel.ac.in/courses/102/106/102106065/)\n- [Data Science and AI for Neuroscience Summer School - Caltech Neuroscience](https://www.youtube.com/playlist?list=PLlPxFwLgTtnfDtq_AO3dd62s33RHtU4bp)\n- [Neuroscience 299: Computing with High-Dimensional Vectors - Fall 2021 - UC Berkeley](https://redwood.berkeley.edu/courses/computing-with-high-dimensional-vectors/)\n- [BIO410/510 Bioinformatics - California State University, Monterey Bay](https://www.youtube.com/playlist?list=PL17NIL2mko8mOPN9W0e4LOjJ2Dkome7ZH)\n- [BIO412: Comparative Genomics - California State University, Monterey Bay](https://www.youtube.com/playlist?list=PL17NIL2mko8nJ1RvfIwtaFnukoWICqS5B)\n- [CENG 465 - Introduction to Bioinformatics (Spring 2020-2021)](https://www.youtube.com/playlist?list=PL0X39D1PSBWPfCPbHb8GC7hoev8SG4Aye)\n- [UCLA Stats M254 Statistical Methods in Computational Biology spring 2024, by Jingyi Jessica Li](https://www.youtube.com/playlist?list=PLAYxx7zX5F1PieIIeSFc7asuKWRYm6nGy)\n- [Cell and Molecular Biology for Engineers  ETH Zurich](https://video.ethz.ch/lectures/d-itet/2011/autumn/227-0945-00L/8e6b12f7-d8cc-4f78-83b1-352876a266d0.html)\n- [Statistical Models in Computational Biology](https://video.ethz.ch/lectures/d-bsse/2018/spring/636-0702-00L/21c63925-cd10-4d56-bac1-b412ed6fe385.html)\n- [ETH Zürich Statistical Models in Computational Biology spring 2018, by Niko Beerenwinkel](https://video.ethz.ch/lectures/d-bsse/2018/spring/636-0702-00L/21c63925-cd10-4d56-bac1-b412ed6fe385.html)\n- [UC Berkeley CS 198-96 Introduction to Neurotechnology fall 2020](https://github.com/neurotech-berkeley/neurotech-course)\n\n\n------------------------------\n\n### Quantum Computing\n\n- [15-859BB: Quantum Computation and Quantum Information 2018 - CMU](https://www.cs.cmu.edu/~odonnell/quantum18/) ([Youtube](https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz))\n- [Quantum Computation and Information at CMU](https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5qLskC6xQ24JpMwOAeJz)\n- [Ph/CS 219A Quantum Computation - Prof Preskill - Caltech](https://www.youtube.com/playlist?list=PL0ojjrEqIyPy-1RRD8cTD_lF1hflo89Iu)\n- [Quantum Mechanics and Quantum Computation - Umesh Vazirani](https://www.youtube.com/playlist?list=PL74Rel4IAsETUwZS_Se_P-fSEyEVQwni7)\n- [Introduction to quantum computing course 2022 - NYU](https://www.youtube.com/playlist?list=PLo0Vs5tDeRLRIPcJ83SN91M-asGuaa1AD)\n- [Phys 1470 - Foundations of Quantum Computing and Quantum Information - U of Pittsburgh](https://www.youtube.com/playlist?list=PL9KDUYiMK3D5etNeur9HocwcAcfcDtArw)\n- [Introduction to Quantum Computing From a Layperson to a Programmer in 30 Steps (EE225 SJSU)](https://www.youtube.com/playlist?list=PLnK6MrIqGXsJfcBdppW3CKJ858zR8P4eP)\n- [Quantum Computing Hardware and Architecture (EE274 SJSU)](https://www.youtube.com/playlist?list=PLnK6MrIqGXsL1KShnocSdwNSiKnBodpie)\n- [Quantum Physics for Non-Physicists 2021 - ETH Zurich](https://www.youtube.com/playlist?list=PLmE1-ewBrbkiOFq_vMXAww4GDMxDAB3pI) ([2020](https://www.youtube.com/playlist?list=PLmE1-ewBrbkiKoYQU4FawveQfhWU_4MkX))\n- [Introduction to Quantum Computing and Quantum Hardware - Qiskit](https://www.youtube.com/playlist?list=PLOFEBzvs-VvrXTMy5Y2IqmSaUjfnhvBHR)\n- [Understanding Quantum Information and Computation - Qiskit](https://www.youtube.com/playlist?list=PLOFEBzvs-VvqKKMXX4vbi4EB1uaErFMSO)\n- [Lectures in Quantum Computation and Quantum Information (IIT Madras)](https://www.youtube.com/playlist?list=PLqLyTdPNhQZwfLoL4QMeI6scnyH1c__tE)\n- [Quantum Information and Computing by Prof. D.K. Ghosh](https://www.youtube.com/playlist?list=PLq-Gm0yRYwThGmlypvSFQ-kT2rPaXKAZ5)\n- [Quantum Computing by Prof. Debabrata Goswami](https://www.youtube.com/playlist?list=PLq-Gm0yRYwTj7Fs6jyzYa83HErSrpXgPQ)\n- [The Building Blocks of a Quantum Computer: Part 1 - TU Delft](https://ocw.tudelft.nl/courses/building-blocks-quantum-computer-part-1/)\n- [The Building Blocks of a Quantum Computer: Part 2 - TU Delft](https://ocw.tudelft.nl/courses/building-blocks-quantum-computer-part-2/)\n- [Quantum Cryptography - TU Delft](https://ocw.tudelft.nl/courses/quantum-cryptography/)\n- [Introduction to Quantum Information](https://zhenyucai.com/post/intro_to_qi/)\n- [Quantum Computing for Everyone -- Part 1](https://www.youtube.com/playlist?list=PLfOgkuiMs5qApXtgIMREPicgbYIGjbf8e) ([Part 2](https://www.youtube.com/playlist?list=PLfOgkuiMs5qB-0J07mphWZ19j9Gll33ZU))\n- [Quantum Computer Systems – UChicago](https://www.youtube.com/playlist?list=PLfOgkuiMs5qCa8BUrFMumyvPqeoOL-iu8)\n- [Quantum computing for the determined - Michael Nielsen](https://www.youtube.com/playlist?list=PL1826E60FD05B44E4)\n- [Quantum Computing](https://www.youtube.com/playlist?list=PLxP0p--aBHmIe--9rczWe4AZmw03e2bz0)\n------------------------------\n\n### Robotics and Control\n\n- [ROB 101: Computational Linear Algebra - University of Michigan](https://github.com/michiganrobotics/rob101/tree/main/Fall%202021) ([Youtube - Fall 2021](https://www.youtube.com/playlist?list=PLdPQZLMHRjDJ5d_dE4FeOviv0gRe4UYsB))\n- [ROB 102: Introduction to AI and Programming - University of Michigan](https://robotics102.github.io/)\n- [ROB 311: How to Build Robots and Make Them Move - University of Michigan](https://www.youtube.com/playlist?list=PLdPQZLMHRjDIWDJDjiBKjFe7ETD_rssB9)\n- [ROB 320: Robot Operating Systems - University of Michigan](https://autorob.org/)\n- [ROB 501: Mathematics for Robotics - University of Michigan](https://github.com/michiganrobotics/rob501) ([Youtube](https://www.youtube.com/playlist?list=PLdPQZLMHRjDIzO99aE7yAtdOHSVHMXfYH))\n- [ROB 530 MOBILE ROBOTICS at U of Michigan - WINTER 2022 -- Instructor: Maani Ghaffari](https://www.youtube.com/playlist?list=PLdMorpQLjeXmbFaVku4JdjmQByHHqTd1F)\n- [Autorob Winter 2022 - University of Michigan](https://m.youtube.com/playlist?list=PLf_SmXJixhnWMMU6_xYW7iS08-7h9kENY)\n- [DeepRob Winter 2023 - University of Michigan](https://m.youtube.com/playlist?list=PLf_SmXJixhnXoMs0Qvxe500BrjfbIOwSg)\n- [CS 223A - Introduction to Robotics, Stanford University](https://see.stanford.edu/Course/CS223A)\n- [6.832 Underactuated Robotics - MIT OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-832-underactuated-robotics-spring-2009/)\n- [CS287 Advanced Robotics at UC Berkeley Fall 2019 -- Instructor: Pieter Abbeel](https://www.youtube.com/playlist?list=PLwRJQ4m4UJjNBPJdt8WamRAt4XKc639wF)\n- [CS 287 - Advanced Robotics, Fall 2011, UC Berkeley](https://people.eecs.berkeley.edu/~pabbeel/cs287-fa11/) ([Videos](http://rll.berkeley.edu/cs287/lecture_videos/))\n- [CMU 16-715 Robot Dynamics 2022 - CMU](https://www.youtube.com/playlist?list=PLZnJoM76RM6ItAfZIxJYNKdaR_BobleLY)\n- [CMU 16-745 Optimal Control 2023 - CMU](https://www.youtube.com/playlist?list=PLZnJoM76RM6KugDT9sw5zhAmqKnGeoLRa)\n- [CS235 - Applied Robot Design for Non-Robot-Designers - Stanford University](https://www.youtube.com/user/StanfordCS235/videos)\n- [Lecture: Visual Navigation for Flying Robots](https://vision.in.tum.de/teaching/ss2012/visnav2012) ([YouTube](https://www.youtube.com/playlist?list=PLTBdjV_4f-EKeki5ps2WHqJqyQvxls4ha))\n- [CS 205A: Mathematical Methods for Robotics, Vision, and Graphics (Fall 2013)](https://www.youtube.com/playlist?list=PLQ3UicqQtfNvQ_VzflHYKhAqZiTxOkSwi)\n- [Robotics 1, Prof. De Luca, Università di Roma](http://www.dis.uniroma1.it/~deluca/rob1_en/material_rob1_en_2014-15.html) ([YouTube](https://www.youtube.com/playlist?list=PLAQopGWlIcyaqDBW1zSKx7lHfVcOmWSWt))\n- [Robotics 2, Prof. De Luca, Università di Roma](http://www.diag.uniroma1.it/~deluca/rob2_en/material_rob2_en.html) ([YouTube](https://www.youtube.com/playlist?list=PLAQopGWlIcya6LnIF83QlJTqvpYmJXnDm))\n- [Robot Mechanics and Control, SNU](https://www.youtube.com/playlist?list=PLkjy3Accn-E7mlbuSF4aajcMMckG4wLvW)\n- [Introduction to Robotics Course - UNCC](https://www.youtube.com/playlist?list=PL4847E1D1C121292F)\n- [SLAM Lectures](https://www.youtube.com/playlist?list=PLpUPoM7Rgzi_7YWn14Va2FODh7LzADBSm)\n- [ME 597 – Autonomous Mobile Robotics – Fall 2014](http://wavelab.uwaterloo.ca/index6ea9.html?page_id=267)\n- [ME 780 – Perception For Autonomous Driving – Spring 2017](http://wavelab.uwaterloo.ca/indexaef8.html?page_id=481)\n- [ME780 – Nonlinear State Estimation for Robotics and Computer Vision – Spring 2017](http://wavelab.uwaterloo.ca/indexe9a5.html?page_id=533)\n- [METR 4202/7202 -- Robotics & Automation - University of Queensland](http://robotics.itee.uq.edu.au/~metr4202/lectures.html)\n- [Robotics - IIT Bombay](https://nptel.ac.in/courses/112101099/)\n- [Introduction to Machine Vision](https://www.youtube.com/playlist?list=PL1pxneANaikCO1-Z0XTaljLR3SE8tgRXY)\n- [6.834J Cognitive Robotics - MIT OCW](https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-412j-cognitive-robotics-spring-2016/)\n- [Hello (Real) World with ROS – Robot Operating System - TU Delft](https://ocw.tudelft.nl/courses/hello-real-world-ros-robot-operating-system/)\n- [Programming for Robotics (ROS) - ETH Zurich](https://www.youtube.com/playlist?list=PLE-BQwvVGf8HOvwXPgtDfWoxd4Cc6ghiP)\n- [Mechatronic System Design - TU Delft](https://ocw.tudelft.nl/courses/mechatronic-system-design/)\n- [CS 206 Evolutionary Robotics Course Spring 2020](https://www.youtube.com/playlist?list=PLAuiGdPEdw0inlKisMbjDypCbvcb_GBN9)\n- [Foundations of Robotics - UTEC 2018-I](https://www.youtube.com/playlist?list=PLoWGuY2dW-Acmc8V5NYSAXBxADMm1rE4p)\n- [Robotics and Control: Theory and Practice IIT Roorkee](https://www.youtube.com/playlist?list=PLLy_2iUCG87AjAXKbNMiKJZ2T9vvGpMB0)\n- [Mechatronics](https://www.youtube.com/playlist?list=PLtuwVtW88fOeTFS_szBWif0Mcc0lfNWaz)\n- [ME142 - Mechatronics Spring 2020 - UC Merced](https://www.youtube.com/playlist?list=PL-euleXgwWUNQ80DGq6qopHBmHcQyEyNQ)\n- [Mobile Sensing and Robotics - Bonn University](https://www.youtube.com/playlist?list=PLgnQpQtFTOGQJXx-x0t23RmRbjp_yMb4v)\n- [MSR2 - Sensors and State Estimation Course (2020) - Bonn University](https://www.youtube.com/playlist?list=PLgnQpQtFTOGQh_J16IMwDlji18SWQ2PZ6)\n- [SLAM Course (2013) - Bonn University](https://www.youtube.com/playlist?list=PLgnQpQtFTOGQrZ4O5QzbIHgl3b1JHimN_)\n- [ENGR486 Robot Modeling and Control (2014W)](https://www.youtube.com/playlist?list=PLJzZfbLAMTelwaLxFXteeblbY2ytU2AxX)\n- [Robotics by Prof. D K Pratihar - IIT Kharagpur](https://www.youtube.com/playlist?list=PLbRMhDVUMngcdUbBySzyzcPiFTYWr4rV_)\n- [Introduction to Mobile Robotics - SS 2019 - Universität Freiburg](http://ais.informatik.uni-freiburg.de/teaching/ss19/robotics/)\n- [Robot Mapping - WS 2018/19 - Universität Freiburg](http://ais.informatik.uni-freiburg.de/teaching/ws18/mapping/)\n- [Mechanism and Robot Kinematics - IIT Kharagpur](https://nptel.ac.in/courses/112/105/112105236/)\n- [Self-Driving Cars - Cyrill Stachniss - Winter 2020/21 - University of Bonn)](https://www.youtube.com/playlist?list=PLgnQpQtFTOGQo2Z_ogbonywTg8jxCI9pD)\n- [Aerial Robotics - University of Pennsylvania (UPenn)](https://www.youtube.com/playlist?list=PLblGgzWkqSqM7IWsgjDetdzZDS1NbkTnd)\n- [Modern Robotics - Northwestern University](https://www.youtube.com/playlist?list=PLggLP4f-rq02vX0OQQ5vrCxbJrzamYDfx)\n- [MIT 6.4210/6.4212 - Robotic Manipulation - MIT](https://manipulation.csail.mit.edu/Fall2022/index.html) ([Youtube](https://www.youtube.com/playlist?list=PLkx8KyIQkMfUSDs2hvTWzaq-cxGl8Ha69))\n- [Industrial Robotics and Automation - IIT (ISM) Dhanbad](https://www.youtube.com/playlist?list=PLXDsvE7qtfNdt9oYEhJ_LMXDUGu6bH-L6)\n- [MEE5114 Advanced Control for Robotics from Southern University of Science and Technology](https://www.youtube.com/playlist?list=PLYkCanigA7S4x-ExlnFsQN9WrNZREWEZd)\n- [Self-Driving Cars — Andreas Geiger](https://www.youtube.com/playlist?list=PL05umP7R6ij321zzKXK6XCQXAaaYjQbzr)\n- [Signal Processing: An Introduction by Nathan Kutz](https://www.youtube.com/playlist?list=PL6Vi_EcJpt8E96_JTKoOKY3HYWVGjf6b4)\n- [UC Santa Barbara ME 269 Network Systems, Dynamics and Control fall 2021, by Francesco Bullo](https://www.youtube.com/playlist?list=PL7bpQ3f3TaeMsueY06FCmbNIEOOY-Ri2_)\n- [CMU 16 299 Introduction to Feedback Control Systems spring 2022, by Chris Atkeson](http://www.cs.cmu.edu/~cga/controls-intro-22/)\n- [MAE 509 Linear Matrix Inequality Methods in Optimal and Robust Control, by Matthew M. Peet](https://www.youtube.com/playlist?list=PL5ebyVGQORm6n158o-I_liUZ7Q5Od43li)\n- [UIUC CS 588 Autonomous Vehicle System Engineering fall 2021, by David Forsyth](http://luthuli.cs.uiuc.edu/~daf/courses/MAAV-21/588-2021-records.html)\n- [EPFL ME 425 Model Predictive Control fall 2020, by Colin Jones](https://www.youtube.com/playlist?list=PLHmHXT53cpnkpbwLqlKae0iKexM8SXKDM)\n\n------------------------------\n\n### Computational Finance\n\n- [COMP510 - Computational Finance - Steven Skiena - 2007 HKUST](https://www.youtube.com/playlist?list=PL9E205B8FAAD530E1)\n- [Computational Finance Course - Prof Grzelak](https://www.youtube.com/playlist?list=PL6zzGYGhbWrPaI-op1UfNl0uDglxdkaOB)\n- [Financial Engineering Course: Interest Rates and xVA - Prof Grzelak](https://www.youtube.com/playlist?list=PL6zzGYGhbWrMpjEKDtnrHWyIj-oVLKCYD)\n- [MOOC - Mathematical Methods for Quantitative Finance, University of Washington/Coursera)](http://academictorrents.com/details/dfc1ddde962101f00ef9764b91181bd6bb5c9e93)\n- [18.S096 Topics in Mathematics with Applications in Finance, MIT OCW](https://ocw.mit.edu/courses/18-s096-topics-in-mathematics-with-applications-in-finance-fall-2013/video_galleries/video-lectures/)\n- [Computational Finance - Universität Leipzig](https://www.youtube.com/playlist?list=PL4i4aZbplv9J5jan6mDbDHtjfm7ghMWfj)\n- [Machine Learning for Trading | Udacity](https://www.youtube.com/playlist?list=PLAwxTw4SYaPnIRwl6rad_mYwEk4Gmj7Mx)\n- [ACT 460 / STA 2502 – Stochastic Methods for Actuarial Science - University of Toronto](http://www.utstat.utoronto.ca/sjaimung/courses/sta2502/main.htm)\n- [MMF1928H / STA 2503F –\nPricing Theory I / Applied Probability for Mathematical Finance - University of Toronto](http://www.utstat.toronto.edu/sjaimung/courses/mmf1928/content2013.htm)\n- [STA 4505H – High Frequency & Algorithmic trading - University of Toronto](http://www.utstat.utoronto.ca/sjaimung/courses/sta4505/main-2014.htm)\n- [Mathematical Finance - IIT Guwahati](https://nptel.ac.in/courses/111/103/111103126/)\n- [Quantitative Finance - IIT Kanpur](https://nptel.ac.in/courses/110/104/110104066/)\n- [Financial Derivatives & Risk Management - IIT Roorkee](https://nptel.ac.in/courses/110/107/110107128/)\n- [Financial Mathematics - IIT Roorkee](https://nptel.ac.in/courses/112/107/112107260/)\n- [Harvard Economics 2355 Deep Learning for Economics spring 2023, by Melissa Dell](https://www.youtube.com/playlist?list=PLGTgQIsun7ueGTRzDlBWqgX6xBlMce-QC)\n\n------------------------------\n\n### Blockchain Development\n\n- **Blockchain and Cryptocurrencies**\n  - [Blockchain, Solidity, and Full Stack Web3 Development with JavaScript](https://youtu.be/gyMwXuJrbJQ) \n  - [Blockchain Fundamentals Decal 2018 - Berkeley DeCal](https://www.youtube.com/playlist?list=PLSONl1AVlZNU0QTGpbgEQXKHcmgYz-ddT)\n  - [Blockchain for Developers Decal - Spring 2018 - Berkeley DeCal](https://www.youtube.com/playlist?list=PLSONl1AVlZNUzp71_H1kb87PvIh8kIZU9)\n  - [Cryptocurrency Engineering and Design - Spring 2018 - MIT](https://ocw.mit.edu/courses/mas-s62-cryptocurrency-engineering-and-design-spring-2018/video_galleries/lecture-videos/)\n  - [15.S12 Blockchain and Money, Fall 2018 - MIT](https://www.youtube.com/playlist?list=PLUl4u3cNGP63UUkfL0onkxF6MYgVa04Fn)\n  - [Blockchain - Foundations and Use Cases](https://www.coursera.org/learn/blockchain-foundations-and-use-cases/home/welcome)\n- **Become Blockchain Developer**\n  - [Solidity for Beginners - Dapp University](https://www.youtube.com/playlist?list=PLS5SEs8ZftgUq-aMMYeKf8nPqHrNqa3Iu) \n  - [Master Solidity - Dapp University](https://www.youtube.com/playlist?list=PLS5SEs8ZftgVnWHv2_mkvJjn5HBOkde3g)\n  - [IPFS Inter Planetary File System  Dapp University](https://www.youtube.com/playlist?list=PLS5SEs8ZftgWggD3tKfgwsIPXuIhorXZk)\n  - [Solidity, Blockchain, and Smart Contract Course – Beginner to Expert Python Tutorial - FreeCodingCamp](https://www.youtube.com/watch?v=M576WGiDBdQ)\n  - [Web 3.0 - Build Realtime Decentralized applications](https://www.youtube.com/playlist?list=PLS5SEs8ZftgVV6ah1fo2IvlHk1kTCy6un)\n\n------------------------------\n\n### Misc\n\n- **HCI**\n  - [CS147 - Introduction to Human-Computer Interaction Design - Stanford](https://hci.stanford.edu/courses/cs147/2015/au/calendar.php)\n  - [CSEP 510 - Human Computer Interaction](https://courses.cs.washington.edu/courses/csep510/04wi/)\n  - [Programming for Designers - COMP1400-T2 (2010) - UNSW](https://www.youtube.com/playlist?list=PL9444191613E018CC)\n  - [08-763 Intro to HCI for Technology Executives - Fall 2015 - CMU](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%228bb9f417-9f60-4e00-84f6-4ef8e7425ae1%22&maxResults=150)\n  - [05-600 HCI Pro Seminar - Fall 2015 - CMU](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%22d885fd87-1ba1-47a3-9bd2-c4bde55f9749%22&maxResults=150)\n- **Game Development**\n \t- [CS50's Introduction to Game Development](https://www.edx.org/course/cs50s-introduction-to-game-development)\n\t- [MIT CMS.611J Creating Video Games, Fall 2014](https://ocw.mit.edu/courses/comparative-media-studies-writing/cms-611j-creating-video-games-fall-2014/lecture-videos/)\n  - [MOOC - Beginning Game Programming with C# - Coursera](http://academictorrents.com/details/0a7ba7e62821e488a0061751fdb81f4298733bea)\n- **Geospatial**\n  - [Introduction to Spatial Data Science, Autumn 2016, University of Chicago](https://www.youtube.com/playlist?list=PLzREt6r1Nenkr2vtYgbP4hs44HO_s_qEO)\n  - [Spatial Regression Analysis, Spring 2017, University of Chicago](https://www.youtube.com/playlist?list=PLzREt6r1Nenkk7x197-CKPFZ0BuAOCRGT)\n  - [Spatial Data Science, Autumn 2017, University of Chicago](https://www.youtube.com/playlist?list=PLzREt6r1Nenlu-MBaxCRL2KZNk62n7o1g)\n  - [Introduction to Geographic Information Systems - IIT Roorkee](https://nptel.ac.in/courses/105107155/)\n- [MOOC - Matlab - Coursera](https://youtu.be/6iN56l7dEMY)\n- [Computing for Computer Scientists - University of Michigan](https://c4cs.github.io)\n- [Linux Implementation/Administration Practicum - Redhat by Tulio Llosa](https://itunes.apple.com/us/itunes-u/linux-implementation-administration/id430673915)\n- [Innovative Computing - Harvard University](https://www.youtube.com/playlist?list=PLE3E96113F544495A)\n- [Linux Programming & Scripting - IIT Madras](https://nptel.ac.in/courses/117106113/)\n- [Model Checking - IIT Madras](https://nptel.ac.in/courses/106106136/)\n- [Virtual Reality - IIT Madras](https://nptel.ac.in/courses/106106138/)\n- [Dependable Systems (SS 2014) - HPI University of Potsdam](https://www.tele-task.de/series/1005/)\n- [Business Process Compliance (WT 2013/14) - HPI University of Potsdam](https://www.tele-task.de/series/979/)\n- [Design Thinking for Digital Engineering (SS 2018) - Dr. Julia von Thienen - HPI](https://www.tele-task.de/series/1206/)\n- [CS224w – Social Network Analysis – Autumn 2017 - Stanford University](http://snap.stanford.edu/class/cs224w-videos-2017/)\n- [The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)\n- [University of Crete, Computer Science video lectures (mostly Greek language lectures, very few 100% English-speaking courses). Very popular CS destination for European Erasmus students](https://opencourses.uoc.gr/courses/course/index.php?categoryid=28)\n- [Stanford EE274 I Data Compression: Theory and Applications I 2023](https://www.youtube.com/playlist?list=PLoROMvodv4rPj4uhbgUAaEKwNNak8xgkz)\n- [Probabilistic Methods - University of Waterloo](https://www.youtube.com/playlist?list=PL2BdWtDKMS6nRF72s3TOGyBqXwMVHYiLU)\n- [Free Probability Theory and Ramanujan Graphs - Spring 2024](https://www.youtube.com/playlist?list=PL-FpbJb6Ix_Npx7GSSxnD2BLrLtwkdwt4)\n- [Asymptotics and perturbation methods - Prof. Steven Strogatz](https://www.youtube.com/playlist?list=PL5EH0ZJ7V0jV7kMYvPcZ7F9oaf_YAlfbI)\n- [ETH Zürich AI in the Sciences and Engineering](https://www.youtube.com/playlist?list=PLJkYEExhe7rYFkBIB2U5pf_RWzYnFLj7r)\n- [Introduction to GIS Programming (Fall 2024) - Open Geospatial Solutions](https://www.youtube.com/playlist?list=PLAxJ4-o7ZoPfb18kNe2luWX9xKg1233i9)\n- [UC Berkeley EE 120 Signals and Systems spring 2019, by Murat Arcak](https://www.youtube.com/playlist?list=PLIygTcviGPKCFASN_5cR04KUST-G97bb-)\n- [Stanford EE 376a winter 2011, Information Theory, by Thomas Cover](https://www.youtube.com/user/classxteam/playlists)\n\n"
        }
      ]
    }
  ]
}