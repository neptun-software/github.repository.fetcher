{
  "metadata": {
    "timestamp": 1736557572509,
    "page": 615,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "certbot/certbot",
      "stars": 31798,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".azure-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.45,
          "content": "[run]\nomit = */setup.py\nsource =\n    acme\n    certbot\n    certbot-apache\n    certbot-dns-cloudflare\n    certbot-dns-digitalocean\n    certbot-dns-dnsimple\n    certbot-dns-dnsmadeeasy\n    certbot-dns-gehirn\n    certbot-dns-google\n    certbot-dns-linode\n    certbot-dns-luadns\n    certbot-dns-nsone\n    certbot-dns-ovh\n    certbot-dns-rfc2136\n    certbot-dns-route53\n    certbot-dns-sakuracloud\n    certbot-nginx\n\n[report]\nomit = */setup.py\nshow_missing = True\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.3,
          "content": "# this file uses slightly different syntax than .gitignore,\n# e.g. \".tox/\" will not ignore .tox directory\n\n# well, official docker build should be done on clean git checkout\n# anyway, so .tox should be empty... But I'm sure people will try to\n# test docker on their git working directories.\n\n.git\n.tox\nvenv\ndocs\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.25,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n[*]\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\n\n[*.py]\nindent_style = space\nindent_size = 4\ncharset = utf-8\nmax_line_length = 100\n\n[*.yaml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.26,
          "content": "#Default, normalize CRLF into LF in non-binary files\n# Files identified as binary by Git are not changed\n* crlf=auto\n\n# special files\n*.sh crlf=input\n*.py crlf=input\n\n*.bat text eol=crlf\n\n*.der binary\n*.gz binary\n*.jpeg binary\n*.jpg binary\n*.png binary\n*.gz binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.65,
          "content": "*.pyc\n*.egg-info/\n.eggs/\nbuild/\ndist*/\n/venv*/\n/.tox/\n/releases*/\n/log*\nletsencrypt.log\ncertbot.log\npoetry.lock\n\n# coverage\n.coverage\n.coverage.*\n/htmlcov/\n\n/.vagrant\n\ntags\n\n# editor temporary files\n*~\n*.sw?\n\\#*#\n.idea\n.ropeproject\n.vscode\n\n# auth --cert-path --chain-path\n/*.pem\n\n.venv\n\n# pytest cache\n.cache\n.mypy_cache/\n.pytest_cache/\n\n# docker files\n.docker\n\n# certbot tests\n.certbot_test_workspace\n**/assets/pebble*\n**/assets/challtestsrv*\n\n# snap files\n.snapcraft\nparts\nprime\nstage\n*.snap\nsnap-constraints.txt\nqemu-*\ncertbot-dns*/certbot-dns*_amd64*.txt\ncertbot-dns*/certbot-dns*_arm*.txt\n/certbot_amd64*.txt\n/certbot_arm*.txt\ncertbot-dns*/snap\nsnapcraft.cfg\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.18,
          "content": "[settings]\nskip_glob=venv*\nforce_sort_within_sections=True\nforce_single_line=True\norder_by_type=False\nline_length=400\nsrc_paths=acme/acme,acme/tests,certbot*/certbot*,certbot*/tests\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 21.06,
          "content": "[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=pywintypes,win32api,win32file,win32security\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=CVS\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\' represents the directory delimiter on Windows systems, it\n# can't be used as an escape character.\n# CERTBOT COMMENT\n# Changing this line back to the default of `ignore-paths=` is being tracked by\n# https://github.com/certbot/certbot/issues/7908.\nignore-paths=.*/_internal/tests/\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n# CERTBOT COMMENT\n# This is needed for pylint to import linter_plugin.py since\n# https://github.com/PyCQA/pylint/pull/3396.\ninit-hook=\"import pylint.config, os, sys; sys.path.append(os.path.dirname(next(pylint.config.find_default_config_files())))\"\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=0\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=linter_plugin\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.10\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\nfunction-rgx=[a-z_][a-z0-9_]{2,40}$\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _,\n           fd,\n           logger\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\nmethod-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=(__.*__)|(test_[A-Za-z0-9_]*)|(_.*)|(.*Test$)\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\nvariable-rgx=[a-z_][a-z0-9_]{1,30}$\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      __post_init__\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=cls\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.BaseException,\n                       builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\n# git history told me that \"This does something silly/broken...\"\n#indent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Maximum number of lines in a module.\nmax-module-lines=1250\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging,logger\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\n# CERTBOT COMMENT\n# 1) Once certbot codebase is claimed to be compatible exclusively with Python 3,\n#    the useless-object-inheritance check can be enabled again, and code fixed accordingly.\n# 2) Check unsubscriptable-object tends to create a lot of false positives. Let's disable it.\n#    See https://github.com/PyCQA/pylint/issues/1498.\n# 3) Same as point 2 for no-value-for-parameter.\n#    See https://github.com/PyCQA/pylint/issues/2820.\n# 4) raise-missing-from makes it an error to raise an exception from except\n#    block without using explicit exception chaining. While explicit exception\n#    chaining results in a slightly more informative traceback, I don't think\n#    it's beneficial enough for us to change all of our current instances and\n#    give Certbot developers errors about this when they're working on new code\n#    in the future. You can read more about exception chaining and this pylint\n#    check at\n#    https://blog.ram.rachum.com/post/621791438475296768/improving-python-exception-chaining-with.\n# 5) wrong-import-order generates false positives and a pylint developer\n#    suggests that people using isort should disable this check at\n#    https://github.com/PyCQA/pylint/issues/3817#issuecomment-687892090.\n# 6) unspecified-encoding generates errors when encoding is not specified in\n#    in a call to the built-in open function. This relates more to a design decision\n#    (unspecified encoding makes the open function use the default encoding of the system)\n#    than a clear flaw on which a check should be enforced. Anyway the project does\n#    not need to enforce encoding on files so we disable this check.\n# 7) consider-using-f-string is \"suggesting\" to move to f-string when possible with an error. This\n#    clearly relates to code design and not to potential defects in the code, let's just ignore that.\ndisable=fixme,locally-disabled,invalid-name,cyclic-import,duplicate-code,design,import-outside-toplevel,useless-object-inheritance,unsubscriptable-object,no-value-for-parameter,no-else-return,no-else-raise,no-else-break,no-else-continue,raise-missing-from,wrong-import-order,unspecified-encoding,consider-using-f-string,raw-checker-failed,bad-inline-option,file-ignored,suppressed-message,useless-suppression,deprecated-pragma,use-symbolic-message-instead\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=6\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace,Field,Header,JWS,closing\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis\nignored-modules=confargparse,argparse\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 13.62,
          "content": "Authors\n=======\n\n* [Aaron Gable](https://github.com/aarongable)\n* [Aaron Zirbes](https://github.com/aaronzirbes)\n* Aaron Zuehlke\n* Ada Lovelace\n* [Adam Woodbeck](https://github.com/awoodbeck)\n* [Adrien Ferrand](https://github.com/adferrand)\n* [Aidin Gharibnavaz](https://github.com/aidin36)\n* [AJ ONeal](https://github.com/coolaj86)\n* [Alcaro](https://github.com/Alcaro)\n* [Alexander Mankuta](https://github.com/pointlessone)\n* [Alex Bowers](https://github.com/alexbowers)\n* [Alex Conlin](https://github.com/alexconlin)\n* [Alex Gaynor](https://github.com/alex)\n* [Alex Halderman](https://github.com/jhalderm)\n* [Alex Jordan](https://github.com/strugee)\n* [Alex Zorin](https://github.com/alexzorin)\n* [Alexis Hancock](https://github.com/zoracon)\n* [Amir Omidi](https://github.com/aaomidi)\n* [Amjad Mashaal](https://github.com/TheNavigat)\n* [amplifi](https://github.com/amplifi)\n* [Andrew Murray](https://github.com/radarhere)\n* [Andrzej Górski](https://github.com/andrzej3393)\n* [Anna Glasgall](https://github.com/aglasgall)\n* [Anselm Levskaya](https://github.com/levskaya)\n* [Antoine Jacoutot](https://github.com/ajacoutot)\n* [April King](https://github.com/april)\n* [asaph](https://github.com/asaph)\n* [Axel Beckert](https://github.com/xtaran)\n* [Bas](https://github.com/Mechazawa)\n* [benbankes](https://github.com/benbankes)\n* [Ben Irving](https://github.com/benileo)\n* [Benjamin Kerensa](https://github.com/bkerensa)\n* [Benjamin Neff](https://github.com/SuperTux88)\n* [Benjamin Piouffle](https://github.com/Betree)\n* [Ben Ubois](https://github.com/benubois)\n* [Ben Wolfe](https://github.com/bwolfe)\n* [Bigfish](https://github.com/bwolfe)\n* [Blake Griffith](https://github.com/cowlicks)\n* [Brad Warren](https://github.com/bmw)\n* [Brandon Kraft](https://github.com/kraftbj)\n* [Brandon Kreisel](https://github.com/BKreisel)\n* [Brian Heim](https://github.com/brianlheim)\n* [Cameron Steel](https://github.com/Tugzrida)\n* [Ceesjan Luiten](https://github.com/quinox)\n* [Chad Whitacre](https://github.com/whit537)\n* [Chhatoi Pritam Baral](https://github.com/pritambaral)\n* [Chris Johns](https://github.com/ter0)\n* [Chris Lamb](https://github.com/lamby)\n* [chrismarget](https://github.com/chrismarget)\n* [Christian Gärtner](https://github.com/ChristianGaertner)\n* [Christian Rosentreter](https://github.com/the-real-tokai)\n* [Christopher Brown](https://github.com/chbrown)\n* [Christopher Manning](https://github.com/christophermanning)\n* [Christoph Kisfeld](https://github.com/chk1)\n* [Clif Houck](https://github.com/ClifHouck)\n* [Cooper Quintin](https://github.com/cooperq)\n* [Corey Farwell](https://github.com/frewsxcv)\n* [Craig Smith](https://github.com/dashaxiong)\n* [Damian Poddebniak](https://github.com/duesee)\n* [Damien Nozay](https://github.com/dnozay)\n* [Damien Tournoud](https://github.com/damz)\n* [DanCld](https://github.com/DanCld)\n* [Daniel Albers](https://github.com/AID)\n* [Daniel Aleksandersen](https://github.com/da2x)\n* [Daniel Almasi](https://github.com/almasen)\n* [Daniel Convissor](https://github.com/convissor)\n* [Daniel \"Drex\" Drexler](https://github.com/aeturnum)\n* [Daniel Huang](https://github.com/dhuang)\n* [Daniel McMahon] (https://github.com/igloodan)\n* [Dave Guarino](https://github.com/daguar)\n* [David cz](https://github.com/dave-cz)\n* [David Dworken](https://github.com/ddworken)\n* [David Kreitschmann](https://kreitschmann.de)\n* [David Xia](https://github.com/davidxia)\n* [Devin Howard](https://github.com/devvmh)\n* [dokazaki](https://github.com/dokazaki)\n* [Dominic Cleal](https://github.com/domcleal)\n* [Dominic Lüchinger](https://github.com/dol)\n* [Douglas José](https://github.com/douglasjose)\n* [Erica Portnoy](https://github.com/ohemorange)\n* [Eric Engestrom](https://github.com/1ace)\n* [Eric Rescorla](https://github.com/ekr)\n* [Eric Wustrow](https://github.com/ewust)\n* [Erik Rose](https://github.com/erikrose)\n* [Eugene Kazakov](https://github.com/xgin)\n* [Fabian](https://github.com/faerbit)\n* [Faidon Liambotis](https://github.com/paravoid)\n* [Fan Jiang](https://github.com/tcz001)\n* [Felix Lechner](https://github.com/lechner)\n* [Felix Schwarz](https://github.com/FelixSchwarz)\n* [Felix Yan](https://github.com/felixonmars)\n* [Filip Ochnik](https://github.com/filipochnik)\n* [Florian Klink](https://github.com/flokli)\n* [Francesco Colista](https://github.com/fcolista)\n* [Francois Marier](https://github.com/fmarier)\n* [Frank](https://github.com/Frankkkkk)\n* [Frederic BLANC](https://github.com/fblanc)\n* [Garrett Robinson](https://github.com/garrettr)\n* [Gene Wood](https://github.com/gene1wood)\n* [Geoffroy Doucet](https://www.geoffroydoucet.com)\n* [Gian Carlo Pace](https://github.com/gicappa)\n* [Gilles Pietri](https://github.com/gilou)\n* [Giovanni Pellerano](https://github.com/evilaliv3)\n* [Giovanni Toraldo](https://github.com/gionn)\n* [Gordin](https://github.com/Gordin)\n* [Gregor Dschung](https://github.com/chkpnt)\n* [Gregory L. Dietsche](https://github.com/farmergreg)\n* [Greg Osuri](https://github.com/gosuri)\n* [Guillaume Boudreau](https://github.com/gboudreau)\n* [Harlan Lieberman-Berg](https://github.com/hlieberman)\n* [Henri Salo](https://github.com/fgeek)\n* [Henry Chen](https://github.com/henrychen95)\n* [Hugo van Kemenade](https://github.com/hugovk)\n* [Ingolf Becker](https://github.com/watercrossing)\n* [Ivan Nejgebauer](https://github.com/inejge)\n* [Jaap Eldering](https://github.com/eldering)\n* [Jacob Hoffman-Andrews](https://github.com/jsha)\n* [Jacob Sachs](https://github.com/jsachs)\n* [Jairo Llopis](https://github.com/Yajo)\n* [Jakub Warmuz](https://github.com/kuba)\n* [James Balazs](https://github.com/jamesbalazs)\n* [James Kasten](https://github.com/jdkasten)\n* [Jason Grinblat](https://github.com/ptychomancer)\n* [Jawshua](https://github.com/jawshua)\n* [Jay Faulkner](https://github.com/jayofdoom)\n* [J.C. Jones](https://github.com/jcjones)\n* [Jeff Hodges](https://github.com/jmhodges)\n* [Jeremy Gillula](https://github.com/jgillula)\n* [Jeroen Ketelaar](https://github.com/JKetelaar)\n* [Jeroen Pluimers](https://github.com/jpluimers)\n* [j](https://github.com/bit)\n* [Jim Tittsler](https://github.com/jimt)\n* [Joe Ranweiler](https://github.com/ranweiler)\n* [Joerg Sonnenberger](https://github.com/jsonn)\n* [John Leach](https://github.com/johnl)\n* [John Reed](https://github.com/leerspace)\n* [Jonas Berlin](https://github.com/xkr47)\n* [Jonathan Herlin](https://github.com/Jonher937)\n* [Jonathan Vanasco](https://github.com/jvanasco)\n* [Jon Walsh](https://github.com/code-tree)\n* [Joona Hoikkala](https://github.com/joohoi)\n* [Josh McCullough](https://github.com/JoshMcCullough)\n* [Josh Soref](https://github.com/jsoref)\n* [Joubin Jabbari](https://github.com/joubin)\n* [Juho Juopperi](https://github.com/jkjuopperi)\n* [Kane York](https://github.com/riking)\n* [Katsuyoshi Ozaki](https://github.com/moratori)\n* [Kenichi Maehashi](https://github.com/kmaehashi)\n* [Kenneth Skovhede](https://github.com/kenkendk)\n* [Kevin Burke](https://github.com/kevinburke)\n* [Kevin London](https://github.com/kevinlondon)\n* [Kubilay Kocak](https://github.com/koobs)\n* [LeCoyote](https://github.com/LeCoyote)\n* [Lee Watson](https://github.com/TheReverend403)\n* [Leo Famulari](https://github.com/lfam)\n* [Leon G](https://github.com/LeonGr)\n* [lf](https://github.com/lf-)\n* [Liam Marshall](https://github.com/liamim)\n* [Lior Sabag](https://github.com/liorsbg)\n* [Lipis](https://github.com/lipis)\n* [lord63](https://github.com/lord63)\n* [Lorenzo Fundaró](https://github.com/lfundaro)\n* [Luca Beltrame](https://github.com/lbeltrame)\n* [Luca Ebach](https://github.com/lucebac)\n* [Luca Olivetti](https://github.com/olivluca)\n* [Luke Rogers](https://github.com/lukeroge)\n* [Lukhnos Liu](https://github.com/lukhnos)\n* [Maarten](https://github.com/mrtndwrd)\n* [Mads Jensen](https://github.com/atombrella)\n* [Maikel Martens](https://github.com/krukas)\n* [Malte Janduda](https://github.com/MalteJ)\n* [Mantas Mikulėnas](https://github.com/grawity)\n* [Marcel Krüger](https://github.com/zauguin)\n* [Marcos Caceres](https://github.com/marcoscaceres)\n* [Marek Viger](https://github.com/freezy-sk)\n* [Mario Villaplana](https://github.com/supermari0)\n* [Marius Gedminas](https://github.com/mgedmin)\n* [Martey Dodoo](https://github.com/martey)\n* [Martijn Bastiaan](https://github.com/martijnbastiaan)\n* [Martijn Braam](https://github.com/MartijnBraam)\n* [Martin Brugger](https://github.com/mbrugger)\n* [Mathieu Leduc-Hamel](https://github.com/mlhamel)\n* [Matt Bostock](https://github.com/mattbostock)\n* [Matthew Ames](https://github.com/SuperMatt)\n* [Matthew W. Thomas](https://github.com/mwt)\n* [Michael Schumacher](https://github.com/schumaml)\n* [Michael Strache](https://github.com/Jarodiv)\n* [Michael Sverdlin](https://github.com/sveder)\n* [Michael Watters](https://github.com/blackknight36)\n* [Michal Moravec](https://github.com/https://github.com/Majkl578)\n* [Michal Papis](https://github.com/mpapis)\n* [Mickaël Schoentgen](https://github.com/BoboTiG)\n* [Minn Soe](https://github.com/MinnSoe)\n* [Min RK](https://github.com/minrk)\n* [Miquel Ruiz](https://github.com/miquelruiz)\n* [Môshe van der Sterre](https://github.com/moshevds)\n* [mrstanwell](https://github.com/mrstanwell)\n* [Nav Aulakh](https://github.com/Nav)\n* [Nelson Elhage](https://github.com/nelhage)\n* [Nick Fong](https://github.com/nickfong)\n* [Nick Le Mouton](https://github.com/NoodlesNZ)\n* [Nikos Roussos](https://github.com/comzeradd)\n* [Noah Swartz](https://github.com/swartzcr)\n* [Ola Bini](https://github.com/olabini)\n* [Ondřej Súkup](https://github.com/mimi1vx)\n* [Ondřej Surý](https://github.com/oerdnj)\n* [osirisinferi](https://github.com/osirisinferi)\n* Patrick Figel\n* [Patrick Heppler](https://github.com/PatrickHeppler)\n* [Paul Buonopane](https://github.com/Zenexer)\n* [Paul Feitzinger](https://github.com/pfeyz)\n* [Paulo Dias](https://github.com/paulojmdias)\n* [Pavan Gupta](https://github.com/pavgup)\n* [Pavel Pavlov](https://github.com/ghost355)\n* [Peter Conrad](https://github.com/pconrad-fb)\n* [Peter Eckersley](https://github.com/pde)\n* [Peter Mosmans](https://github.com/PeterMosmans)\n* [Phil Martin](https://github.com/frillip)\n* [Philippe Langlois](https://github.com/langloisjp)\n* [Philipp Spitzer](https://github.com/spitza)\n* [Piero Steinger](https://github.com/Jadaw1n)\n* [Pierre Jaury](https://github.com/kaiyou)\n* [Piotr Kasprzyk](https://github.com/kwadrat)\n* [Prayag Verma](https://github.com/pra85)\n* [Preston Locke](https://github.com/Preston12321)\n* [Q Misell][https://magicalcodewit.ch]\n* [Rasesh Patel](https://github.com/raspat1)\n* [Reinaldo de Souza Jr](https://github.com/juniorz)\n* [Remi Rampin](https://github.com/remram44)\n* [Rémy HUBSCHER](https://github.com/Natim)\n* [Rémy Léone](https://github.com/sieben)\n* [Richard Barnes](https://github.com/r-barnes)\n* [Richard Harman](https://github.com/warewolf)\n* [Richard Panek](https://github.com/kernelpanek)\n* [Robert Buchholz](https://github.com/rbu)\n* [Robert Dailey](https://github.com/pahrohfit)\n* [Robert Habermann](https://github.com/frennkie)\n* [Robert Xiao](https://github.com/nneonneo)\n* [Roland Shoemaker](https://github.com/rolandshoemaker)\n* [Roy Wellington Ⅳ](https://github.com/thanatos)\n* [rugk](https://github.com/rugk)\n* [Sachi King](https://github.com/nakato)\n* [Sagi Kedmi](https://github.com/sagi)\n* [Sam Lanning](https://github.com/samlanning)\n* [sapics](https://github.com/sapics)\n* [Scott Barr](https://github.com/scottjbarr)\n* [Scott Merrill](https://github.com/skpy)\n* [Sebastian Bögl](https://github.com/TheBoegl)\n* [Sebastian Wagner](https://github.com/sebix)\n* [sedrubal](https://github.com/sedrubal)\n* [Seppe Stas](https://github.com/seppestas)\n* [Sergey Nuzdhin](https://github.com/lwolf)\n* [Seth Schoen](https://github.com/schoen)\n* [Sharif Nassar](https://github.com/mrwacky42)\n* [Shaun Cummiskey](https://github.com/ampersign)\n* [Shiloh Heurich](https://github.com/sheurich)\n* [silverwind](https://github.com/silverwind)\n* [Sorvani](https://github.com/sorvani)\n* [Spencer Bliven](https://github.com/sbliven)\n* [Stacey Sheldon](https://github.com/solidgoldbomb)\n* [Stavros Korokithakis](https://github.com/skorokithakis)\n* [Ștefan Talpalaru](https://github.com/stefantalpalaru)\n* [Stefan Weil](https://github.com/stweil)\n* [Steve Desmond](https://github.com/stevedesmond-ca)\n* [sydneyli](https://github.com/sydneyli)\n* [taixx046](https://github.com/taixx046)\n* [Tan Jay Jun](https://github.com/jayjun)\n* [Tapple Gao](https://github.com/tapple)\n* [Telepenin Nikolay](https://github.com/telepenin)\n* [Thomas Cottier](https://github.com/tcottier-enalean)\n* [Thomas Mayer](https://github.com/thomaszbz)\n* [Thomas Waldmann](https://github.com/ThomasWaldmann)\n* [Thom Wiggers](https://github.com/thomwiggers)\n* [Till Maas](https://github.com/tyll)\n* [Timothy Guan-tin Chien](https://github.com/timdream)\n* [Torsten Bögershausen](https://github.com/tboegi)\n* [Travis Raines](https://github.com/rainest)\n* [Trung Ngo](https://github.com/Ngo-The-Trung)\n* [Valentin](https://github.com/e00E)\n* [venyii](https://github.com/venyii)\n* [Viktor Szakats](https://github.com/vszakats)\n* [Ville Skyttä](https://github.com/scop)\n* [Vinney Cavallo](https://github.com/vcavallo)\n* [Vladimir Rutsky](https://github.com/rutsky)\n* [Wang Yu](https://github.com/wyhitcs)\n* [Ward Vandewege](https://github.com/cure)\n* [Whyfoo](https://github.com/whyfoo)\n* [Wilfried Teiken](https://github.com/wteiken)\n* [Willem Fibbe](https://github.com/fibbers)\n* [William Budington](https://github.com/Hainish)\n* [Will Greenberg](https://github.com/wgreenberg)\n* [Will Newby](https://github.com/willnewby)\n* [Will Oller](https://github.com/willoller)\n* [Yan](https://github.com/diracdeltas)\n* [Yen Chi Hsuan](https://github.com/yan12125)\n* [Yomna](https://github.com/ynasser)\n* [Yoni Jah](https://github.com/yonjah)\n* [YourDaddyIsHere](https://github.com/YourDaddyIsHere)\n* [Yuseong Cho](https://github.com/g6123)\n* [Zach Shepherd](https://github.com/zjs)\n* [陈三](https://github.com/chenxsan)\n* [Shahar Naveh](https://github.com/ShaharNaveh)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.02,
          "content": "certbot/CHANGELOG.md"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1,
          "content": "This project is governed by [EFF's Public Projects Code of Conduct](https://www.eff.org/pages/eppcode)."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.45,
          "content": "<!---\n\nThis file serves as an entry point for GitHub's Contributing\nGuidelines [1] only.\n\nGitHub doesn't render rST very well, especially in respect to internal\nhyperlink targets and cross-references [2]. People also tend to\nconfuse rST and Markdown syntax. Therefore, instead of keeping the\ncontents here (and including from rST documentation under doc/), link\nto the Sphinx generated docs is provided below.\n\n\n[1] https://github.com/blog/1184-contributing-guidelines\n[2] https://docutils.sourceforge.io/docs/user/rst/quickref.html#hyperlink-targets\n\n-->\n\n# Certbot Contributing Guide\n\nHi! Welcome to the Certbot project. We look forward to collaborating with you.\n\nIf you're reporting a bug in Certbot, please make sure to include:\n - The version of Certbot you're running.\n - The operating system you're running it on.\n - The commands you ran.\n - What you expected to happen, and\n - What actually happened.\n\nIf you're a developer, we have some helpful information in our\n[Developer's Guide](https://certbot.eff.org/docs/contributing.html) to get you\nstarted. In particular, we recommend you read these sections \n\n - [Finding issues to work on](https://certbot.eff.org/docs/contributing.html#find-issues-to-work-on)\n - [Coding style](https://certbot.eff.org/docs/contributing.html#coding-style)\n - [Submitting a pull request](https://certbot.eff.org/docs/contributing.html#submitting-a-pull-request)\n - [EFF's Public Projects Code of Conduct](https://www.eff.org/pages/eppcode)\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.19,
          "content": "Certbot ACME Client\nCopyright (c) Electronic Frontier Foundation and others\nLicensed Apache Version 2.0\n\nThe nginx plugin incorporates code from nginxparser\nCopyright (c) 2014 Fatih Erikli\nLicensed MIT\n\n\nText of Apache License\n======================\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n\nText of MIT License\n===================\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 0.02,
          "content": "certbot/README.rst"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nSecurity vulnerabilities can be reported using GitHub's [private vulnerability reporting tool](https://github.com/certbot/certbot/security/advisories/new).\n"
        },
        {
          "name": "acme",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-apache",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-compatibility-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-cloudflare",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-digitalocean",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-dnsimple",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-dnsmadeeasy",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-gehirn",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-google",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-linode",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-luadns",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-nsone",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-ovh",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-rfc2136",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-route53",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-dns-sakuracloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "certbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "letsencrypt-auto-source",
          "type": "tree",
          "content": null
        },
        {
          "name": "letstest",
          "type": "tree",
          "content": null
        },
        {
          "name": "linter_plugin.py",
          "type": "blob",
          "size": 1.98,
          "content": "\"\"\"\nCertbot PyLint plugin.\n\nThe built-in ImportChecker of Pylint does a similar job to ForbidStandardOsModule to detect\ndeprecated modules. You can check its behavior as a reference to what is coded here.\nSee https://github.com/PyCQA/pylint/blob/b20a2984c94e2946669d727dbda78735882bf50a/pylint/checkers/imports.py#L287\nSee https://docs.pytest.org/en/latest/writing_plugins.html\n\"\"\"\nimport os.path\nimport re\n\nfrom pylint.checkers import BaseChecker\n\n# Modules whose file is matching one of these paths can import the os module.\nWHITELIST_PATHS = [\n    '/acme/acme/',\n    '/certbot-ci/',\n    '/certbot-compatibility-test/',\n]\n\n\nclass ForbidStandardOsModule(BaseChecker):\n    \"\"\"\n    This checker ensures that standard os module (and submodules) is not imported by certbot\n    modules. Otherwise an 'os-module-forbidden' error will be registered for the faulty lines.\n    \"\"\"\n\n    name = 'forbid-os-module'\n    msgs = {\n        'E5001': (\n            'Forbidden use of os module, certbot.compat.os must be used instead',\n            'os-module-forbidden',\n            'Some methods from the standard os module cannot be used for security reasons on '\n            'Windows: the safe wrapper certbot.compat.os must be used instead in Certbot.'\n        )\n    }\n    priority = -1\n\n    def visit_import(self, node):\n        os_used = any(name for name in node.names if name[0] == 'os' or name[0].startswith('os.'))\n        if os_used and not _check_disabled(node):\n            self.add_message('os-module-forbidden', node=node)\n\n    def visit_importfrom(self, node):\n        if node.modname == 'os' or node.modname.startswith('os.') and not _check_disabled(node):\n            self.add_message('os-module-forbidden', node=node)\n\n\ndef register(linter):\n    \"\"\"Pylint hook to auto-register this linter\"\"\"\n    linter.register_checker(ForbidStandardOsModule(linter))\n\n\ndef _check_disabled(node):\n    module = node.root()\n    return any(path for path in WHITELIST_PATHS\n               if os.path.normpath(path) in os.path.normpath(module.file))\n"
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.51,
          "content": "[mypy]\nignore_missing_imports = True\nwarn_unused_ignores = True\nshow_error_codes = True\ndisallow_untyped_defs = True\n\n# Using stricter settings here is being tracked by\n# https://github.com/certbot/certbot/issues/9647.\n[mypy-*._internal.tests.*]\n# By default, mypy prints notes without erroring about any type annotations it\n# finds in untyped function bodies when check_untyped_defs is false. Disabling\n# this \"error\" code removes this visual noise.\ndisable_error_code = annotation-unchecked\ndisallow_untyped_defs = False\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 2.49,
          "content": "# This file isn't used while testing packages in tools/_release.sh so any\n# settings we want to also change there must be added to the release script\n# directly.\n[pytest]\n# Warnings being triggered by our plugins using deprecated features in\n# acme/certbot should be fixed by having our plugins no longer using the\n# deprecated code rather than adding them to the list of ignored warnings here.\n# Fixing things in this way prevents us from shipping packages raising our own\n# deprecation warnings and gives time for plugins that don't use the deprecated\n# API to propagate, especially for plugins packaged as an external snap, before\n# we release breaking changes.\n#\n# The current warnings being ignored are:\n# 1) pytest-cov uses deprecated functionality in pytest-xdist, to be resolved by\n#    https://github.com/pytest-dev/pytest-cov/issues/557.\n# 2) requests-toolbelt<0.10.1 can cause this warning to be raised during our\n#    unit tests. This warning should be ignored until our (transitive)\n#    dependency on requests-toolbelt is removed or our pinned version can be\n#    updated.\n# 3) Ignore DeprecationWarning for datetime.utcfromtimestamp() triggered\n#    from dateutil. See https://github.com/dateutil/dateutil/issues/1314.\n# 4) Ignoring this allows us to continue to update pyOpenSSL (one of our crypto\n#    dependencies) until https://github.com/certbot/certbot/issues/9828 is resolved.\n# 5) CSR support is deprecated in pyOpenSSL since 24.2, we silence\n#    the warning until https://github.com/certbot/certbot/issues/9992 is resolved.\n# 6) pyOpenSSL 24.3 deprecated methods using pyOpenSSL X509Extension objects.\n#    Fixing this should also be resolved by the work on\n#    https://github.com/certbot/certbot/issues/9828 and the open PR\n#    https://github.com/certbot/certbot/pull/9909 currently resolves this issue.\n# 7 & 8) Resolving these warnings is being tracked by\n#        https://github.com/certbot/certbot/issues/10079.\nfilterwarnings =\n    error\n    ignore:.*rsyncdir:DeprecationWarning\n    ignore:'urllib3.contrib.pyopenssl:DeprecationWarning:requests_toolbelt\n    ignore:.*datetime.utcfromtimestamp\\(\\) is deprecated:DeprecationWarning:dateutil\n    ignore:X509Extension support in pyOpenSSL is deprecated:DeprecationWarning\n    ignore:CSR support in pyOpenSSL is deprecated:DeprecationWarning\n    ignore:.*You should use pyca/cryptography's X.509 APIs:DeprecationWarning\n    ignore:Passing pyOpenSSL PKey objects is deprecated:DeprecationWarning\n    ignore:Passing pyOpenSSL X509 objects is deprecated:DeprecationWarning\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 11.1,
          "content": "[tox]\nenvlist = {cover,lint}-posix,mypy\n\nskipsdist = true\n\n[base]\npytest = python -m pytest {posargs}\n# Paths are listed on one line because tox seems to have inconsistent\n# behavior with substitutions that contain line continuations, see\n# https://github.com/tox-dev/tox/issues/2069 for more info.\nsource_paths = acme/acme certbot/certbot certbot-apache/certbot_apache certbot-ci/certbot_integration_tests certbot-ci/snap_integration_tests certbot-compatibility-test/certbot_compatibility_test certbot-dns-cloudflare/certbot_dns_cloudflare certbot-dns-digitalocean/certbot_dns_digitalocean certbot-dns-dnsimple/certbot_dns_dnsimple certbot-dns-dnsmadeeasy/certbot_dns_dnsmadeeasy certbot-dns-gehirn/certbot_dns_gehirn certbot-dns-google/certbot_dns_google certbot-dns-linode/certbot_dns_linode certbot-dns-luadns/certbot_dns_luadns certbot-dns-nsone/certbot_dns_nsone certbot-dns-ovh/certbot_dns_ovh certbot-dns-rfc2136/certbot_dns_rfc2136 certbot-dns-route53/certbot_dns_route53 certbot-dns-sakuracloud/certbot_dns_sakuracloud certbot-nginx/certbot_nginx\n\n[testenv]\nplatform =\n    posix: ^(?!.*win32).*$\nsetenv =\n    PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:--numprocesses auto}\n    PYTHONHASHSEED = 0\n# The default install command is python -I -m pip install {opts} {packages}\ninstall_command = python -I {toxinidir}/tools/pip_install.py {opts} {packages}\ndeps =\n    -e acme[test]\n    -e certbot\n    -e certbot[test]\n    -e certbot-apache[dev]\n    -e certbot-dns-cloudflare\n    -e certbot-dns-digitalocean\n    -e certbot-dns-dnsimple\n    -e certbot-dns-dnsmadeeasy\n    -e certbot-dns-gehirn\n    -e certbot-dns-google\n    -e certbot-dns-linode\n    -e certbot-dns-luadns\n    -e certbot-dns-nsone\n    -e certbot-dns-ovh\n    -e certbot-dns-rfc2136\n    -e certbot-dns-route53\n    -e certbot-dns-sakuracloud\n    -e certbot-nginx\nallowlist_externals =\n    echo\n    false\n# This and the next few testenvs are a workaround for\n# https://github.com/tox-dev/tox/issues/2858.\ncommands =\n    echo \"Unrecognized environment name {envname}\"\n    false\n\n[testenv:py{,-posix}]\ncommands =\n    {[base]pytest} acme certbot certbot-dns-cloudflare certbot-dns-digitalocean certbot-dns-dnsimple certbot-dns-dnsmadeeasy certbot-dns-gehirn certbot-dns-google certbot-dns-linode certbot-dns-luadns certbot-dns-nsone certbot-dns-ovh certbot-dns-rfc2136 certbot-dns-route53 certbot-dns-sakuracloud certbot-nginx certbot-apache\n\n[testenv:py3{,8,9,10,11,12}]\ncommands = {[testenv:py]commands}\n\n[testenv:py3.{8,9,10,11,12}]\ncommands = {[testenv:py]commands}\n\n[testenv:oldest]\n# Setting basepython allows the tests to fail fast if that version of Python\n# isn't available instead of potentially trying to use a newer version of\n# Python which is unlikely to work.\n#\n# This version should be kept in sync with the one declared in\n# tools/pinning/oldest/pyproject.toml.\nbasepython = python3.9\nsetenv = CERTBOT_OLDEST=1\ncommands = {[testenv:py]commands}\n\n[testenv:cover]\ncoverage_report = python -m coverage report\ncommon_coverage_report_commands =\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-cloudflare/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-digitalocean/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-dnsimple/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-dnsmadeeasy/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-gehirn/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-google/*\n    {[testenv:cover]coverage_report} --fail-under 100 --include certbot-dns-linode/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-luadns/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-nsone/*\n    {[testenv:cover]coverage_report} --fail-under 98 --include certbot-dns-ovh/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-rfc2136/*\n    {[testenv:cover]coverage_report} --fail-under 94 --include certbot-dns-route53/*\n    {[testenv:cover]coverage_report} --fail-under 99 --include certbot-dns-sakuracloud/*\n    {[testenv:cover]coverage_report} --fail-under 98 --include certbot-nginx/*\ncommands =\n    {[testenv:py]commands} --cov --cov-report=\n    {[testenv:cover]coverage_report} --fail-under 100 --include acme/*\n    {[testenv:cover]coverage_report} --fail-under 95 --include certbot/*\n    {[testenv:cover]coverage_report} --fail-under 100 --include certbot-apache/*\n    {[testenv:cover]common_coverage_report_commands}\n\n# Another workaround for https://github.com/tox-dev/tox/issues/2858 in tox v4.\n[testenv:cover-posix]\ncommands = {[testenv:cover]commands}\n\n[testenv:lint{,-posix}]\ncommands = python -m pylint --reports=n --rcfile=.pylintrc {[base]source_paths}\n\n[testenv:mypy]\ndeps =\n    {[testenv]deps}\n    -e certbot-ci\ncommands = mypy {[base]source_paths}\n\n[testenv:isolated-acme]\ndescription = Tests acme without any Certbot components installed\ndeps = -e acme[test]\ncommands = {[base]pytest} acme\n\n[testenv:isolated-certbot]\ndescription = Tests Certbot without any additional plugins installed\ndeps =\n    {[testenv:isolated-acme]deps}\n    -e certbot[test]\ncommands = {[base]pytest} certbot\n\n[testenv:isolated-{apache,cloudflare,digitalocean,dnsimple,dnsmadeeasy,gehirn,google,linode,luadns,nsone,ovh,rfc2136,route53,sakuracloud,nginx}]\ndescription = Tests the plugin without installing any other plugins\ndeps =\n    {[testenv:isolated-certbot]deps}\n    apache: -e certbot-apache[dev]\n    cloudflare: -e certbot-dns-cloudflare\n    digitalocean: -e certbot-dns-digitalocean\n    dnsimple: -e certbot-dns-dnsimple\n    dnsmadeeasy: -e certbot-dns-dnsmadeeasy\n    gehirn: -e certbot-dns-gehirn\n    google: -e certbot-dns-google\n    linode: -e certbot-dns-linode\n    luadns: -e certbot-dns-luadns\n    nsone: -e certbot-dns-nsone\n    ovh: -e certbot-dns-ovh\n    rfc2136: -e certbot-dns-rfc2136\n    route53: -e certbot-dns-route53\n    sakuracloud: -e certbot-dns-sakuracloud\n    nginx: -e certbot-nginx\ncommands =\n    apache: {[base]pytest} certbot-apache\n    cloudflare: {[base]pytest} certbot-dns-cloudflare\n    digitalocean: {[base]pytest} certbot-dns-digitalocean\n    dnsimple: {[base]pytest} certbot-dns-dnsimple\n    dnsmadeeasy: {[base]pytest} certbot-dns-dnsmadeeasy\n    gehirn: {[base]pytest} certbot-dns-gehirn\n    google: {[base]pytest} certbot-dns-google\n    linode: {[base]pytest} certbot-dns-linode\n    luadns: {[base]pytest} certbot-dns-luadns\n    nsone: {[base]pytest} certbot-dns-nsone\n    ovh: {[base]pytest} certbot-dns-ovh\n    rfc2136: {[base]pytest} certbot-dns-rfc2136\n    route53: {[base]pytest} certbot-dns-route53\n    sakuracloud: {[base]pytest} certbot-dns-sakuracloud\n    nginx: {[base]pytest} certbot-nginx\n\n[testenv:apacheconftest]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-apache\ncommands =\n    {toxinidir}/certbot-apache/certbot_apache/_internal/tests/apache-conf-files/apache-conf-test --debian-modules\npassenv =\n    SERVER\nallowlist_externals =\n    {toxinidir}/certbot-apache/certbot_apache/_internal/tests/apache-conf-files/apache-conf-test\n\n[testenv:apacheconftest-external-with-pebble]\ndescription = Run apacheconftest with pebble and Certbot outside of the tox virtual environment.\ndeps =\n    -e certbot-ci\nallowlist_externals =\n    {toxinidir}/certbot-apache/certbot_apache/_internal/tests/apache-conf-files/apache-conf-test-pebble.py\ncommands =\n    {toxinidir}/certbot-apache/certbot_apache/_internal/tests/apache-conf-files/apache-conf-test-pebble.py --debian-modules\n\n[testenv:apacheconftest-with-pebble]\ndeps =\n    {[testenv:apacheconftest]deps}\n    {[testenv:apacheconftest-external-with-pebble]deps}\nallowlist_externals =\n    {toxinidir}/certbot-apache/certbot_apache/_internal/tests/apache-conf-files/apache-conf-test-pebble.py\ncommands = {[testenv:apacheconftest-external-with-pebble]commands}\n\n[testenv:nginxroundtrip]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-apache\n    -e certbot-nginx\ncommands =\n    python certbot-compatibility-test/nginx/roundtrip.py certbot-compatibility-test/nginx/nginx-roundtrip-testdata\n\n[testenv:modification]\ndeps =\ncommands =\n    python {toxinidir}/tests/modification-check.py\n\n[testenv:apache_compat]\ndeps =\ncommands =\n    docker build -t certbot-compatibility-test -f certbot-compatibility-test/Dockerfile .\n    docker build -t apache-compat -f certbot-compatibility-test/Dockerfile-apache .\n    docker run --rm -t apache-compat -c apache.tar.gz -vvvv\nallowlist_externals =\n    docker\npassenv =\n    DOCKER_*\n\n[testenv:nginx_compat]\ndeps =\ncommands =\n    docker build -t certbot-compatibility-test -f certbot-compatibility-test/Dockerfile .\n    docker build -t nginx-compat -f certbot-compatibility-test/Dockerfile-nginx .\n    docker run --rm -t nginx-compat -c nginx.tar.gz -vv -aie\nallowlist_externals =\n    docker\npassenv =\n    DOCKER_*\n\n[testenv:integration]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-nginx\n    -e certbot-ci\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests \\\n        --cov=acme --cov=certbot --cov=certbot_nginx --cov-report= \\\n        --cov-config=certbot-ci/certbot_integration_tests/.coveragerc\n    coverage report --include 'certbot/*' --show-missing --fail-under=65\n    coverage report --include 'certbot-nginx/*' --show-missing --fail-under=74\npassenv = DOCKER_*\n\n[testenv:integration-certbot]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-ci\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests/certbot_tests \\\n        --cov=acme --cov=certbot --cov-report= \\\n        --cov-config=certbot-ci/certbot_integration_tests/.coveragerc\n    coverage report --include 'certbot/*' --show-missing --fail-under=62\n\n[testenv:integration-dns-rfc2136]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-dns-rfc2136\n    -e certbot-ci\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests/rfc2136_tests \\\n        --dns-server=bind \\\n        --numprocesses=1 \\\n        --cov=acme --cov=certbot --cov=certbot_dns_rfc2136 --cov-report= \\\n        --cov-config=certbot-ci/certbot_integration_tests/.coveragerc\n    coverage report --include 'certbot/*' --show-missing --fail-under=45\n    coverage report --include 'certbot-dns-rfc2136/*' --show-missing --fail-under=86\n\n[testenv:integration-external]\ndescription = Run integration tests with Certbot outside of the tox virtual environment.\ndeps =\n    -e certbot-ci\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests\npassenv = DOCKER_*\n\n[testenv:integration-certbot-oldest]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-ci\nbasepython =\n    {[testenv:oldest]basepython}\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests/certbot_tests\npassenv = DOCKER_*\nsetenv = {[testenv:oldest]setenv}\n\n[testenv:integration-nginx-oldest]\ndeps =\n    -e acme\n    -e certbot\n    -e certbot-nginx\n    -e certbot-ci\nbasepython =\n    {[testenv:oldest]basepython}\ncommands =\n    {[base]pytest} certbot-ci/certbot_integration_tests/nginx_tests\npassenv = DOCKER_*\nsetenv = {[testenv:oldest]setenv}\n\n[testenv:test-farm-apache2]\npassenv =\n    AWS_*\nsetenv = AWS_DEFAULT_REGION=us-east-1\nchangedir = letstest\ndeps = -e {toxinidir}/letstest\ncommands = {toxinidir}/tools/retry.sh letstest targets/targets.yaml {env:AWS_EC2_PEM_FILE} SET_BY_ENV scripts/test_apache2.sh --repo {toxinidir}\nallowlist_externals =\n    {toxinidir}/tools/retry.sh\n"
        }
      ]
    }
  ]
}