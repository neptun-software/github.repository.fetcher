{
  "metadata": {
    "timestamp": 1736557463475,
    "page": 487,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/arthas",
      "stars": 35869,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.46,
          "content": ".DS_Store\n**/.factorypath\n/core/core.iml\n/agent/agent.iml\n/target\n**/.settings\n**/.classpath\n**/.project\n/.idea\n**/*.iml\n/nb-configuration.xml\n**/target\ncore/src/main/resources/com/taobao/arthas/core/res/version\ntunnel-server/src/main/resources/static\n**/*.orig\n\nsite/src/site/sphinx/_build\nsite/src/site/sphinx/en/_build\n\n**/__pycache__\n\ndependency-reduced-pom.xml\npom.xml.versionsBackup\n.pmd\n**/.flattened-pom.xml\n**/.idea/**\n**/cmake-build-debug/**\n\n# VSCode\n.vscode/"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.28,
          "content": "\n\n## Issue\n\nWelcome to use [issue tracker](https://github.com/alibaba/arthas/issues) to give us :bowtie::\n\n* feedbacks - what you would like to have;\n* usage tips - what usages you have found splendid;\n* experiences - how you use Arthas to do **effective** troubleshooting;\n\n## Documentation\n\n* Under `site/docs/`.\n\n## Online Tutorials\n\nPlease refer to [README.MD at killercoda branch](https://github.com/alibaba/arthas/tree/killercoda/README.md#contribution-guide)\n\n## Developer\n\n* Arthas runtime supports JDK6+\n* It is recommended to use JDK8 to compile, and you will encounter problems when using a higher version. Reference https://github.com/alibaba/arthas/tree/master/.github/workflows\n* If you encounter jfr related problems, it is recommended to use `8u262` and later versions of openjdk8 or zulu jdk8, https://mail.openjdk.org/pipermail/jdk8u-dev/2020-July/012143.html\n### Local Installation\n\n> Note: After modifying `arthas-vmtool` related codes, the packaging results need to be manually copied to the `lib/` path of this repo, and will not be copied automatically.\n\nRecommend to use [`as-package.sh`](as-package.sh) to package, which will auto-install the latest Arthas to local `~/.arthas` and when debugging, Arthas will auto-load the latest version.\n\n* To support jni, cpp compiling environment support is required\n* mac needs to install xcode\n* windows need to install gcc\n\nF.Y.I\n1. when using [`as.sh`](https://github.com/alibaba/arthas/blob/master/bin/as.sh) to start Arthas, it will get the latest version under `~/.arthas/lib`;\n2. when [`as-package.sh`](as-package.sh) packaging, it will get the version from `pom.xml` and suffix it with the current timestamp e.g. `3.0.5.20180917161808`. \n\nYou can also use `./mvnw clean package -DskipTests` to package and generate a `zip` under `packaging/target/` but remember when `as.sh` starts, it load the version under `~/.arthas/lib`.\n\n### Start Arthas in specified version\n\nWhen there are several different version, you can use `--use-version` to specify the version of Arthas to start your debug.\n\n```bash\n./as.sh --use-version 3.0.5.20180919185025\n```\n\nTip: you can use `--versions` to list all available versions.\n\n```bash\n./as.sh --versions\n```\n\n### Debug\n\n* [Debug Arthas In IDEA](https://github.com/alibaba/arthas/issues/222)\n\n### Packaging All\n\n* when packaging the whole project (Packaging All), you need to execute:\n\n    ```bash\n    ./mvnw clean package -DskipTests -P full\n    ```\n\n---\n\n\n\n## Issue\n\n欢迎在issue里对arthas做反馈，分享使用技巧，排查问题的经历。\n\n* https://github.com/alibaba/arthas/issues\n\n## 改进用户文档\n\n用户文档在`site/docs/`目录下，如果希望改进arthas用户文档，欢迎提交PR。\n\n## 改进在线教程\n\n请参考[killercoda 分支下的说明](https://github.com/alibaba/arthas/tree/killercoda/README_CN.md#贡献指南)\n\n## 开发者相关\n\n* Arthas运行支持JDK6+\n* 建议使用JDK8来编译，使用高版本会遇到问题。参考 https://github.com/alibaba/arthas/tree/master/.github/workflows\n* 如果遇到jfr相关问题，建议使用`8u262`及之后的高版本 openjdk8 或者zulu jdk8， https://mail.openjdk.org/pipermail/jdk8u-dev/2020-July/012143.html\n### 安装到本地\n\n> 注意： 修改`arthas-vmtool`相关代码后，打包结果需要手动复制到本仓库的 `lib/` 路径下，不会自动复制。\n\n本地开发时，推荐执行`as-package.sh`来打包，会自动安装最新版本的arthas到`~/.arthas`目录里。debug时会自动使用最新版本。\n\n* 代码里要编译jni，需要cpp编译环境支持\n* mac需要安装xcode\n* windows需要安装gcc\n\n\n`as.sh`在启动时，会对`~/.arthas/lib`下面的目录排序，取最新的版本。`as-package.sh`在打包时，会取`pom.xml`里的版本号，再拼接上当前时间，比如： `3.0.5.20180917161808`，这样子排序时取的就是最新的版本。\n\n也可以直接 `./mvnw clean package -DskipTests`打包，生成的zip在 `packaging/target/` 下面。但是注意`as.sh`启动加载的是`~/.arthas/lib`下面的版本。\n\n### 启动指定版本的arthas\n\n本地开发时，可能会产生多个版本，可以用 `--use-version` 参数来指定版本，比如\n\n```bash\n./as.sh --use-version 3.0.5.20180919185025\n```\n\n可以用`--versions`参数来列出所有版本：\n\n```bash\n./as.sh --versions\n```\n\n### Debug\n\n* [Debug Arthas In IDEA](https://github.com/alibaba/arthas/issues/222)\n\n### 全量打包\n\n\n* 全量打包时，需要配置下面的参数：\n\n    ```\n    ./mvnw clean package -DskipTests -P full\n    ```\n\n### Release Steps\n\n发布release版本流程：\n\n* 如果 arthas-vmtool 有更新，则需要手动触发action，构建后会把新的动态库文件提交到 lib 目录。 https://github.com/alibaba/arthas/actions/workflows/build-vmtool.yaml\n* 修改`as.sh`里的版本，最后修改日期， `Bootstrap.java`里的版本，Dockerfile里的版本\n* 修改本地的maven settings.xml\n* 执行一次 gpg --sign /tmp/2.txt ，让 gpg 后台进程启动，否则打包可能失败\n* mvn clean deploy -DskipTests -P full -P release\n\n* 到 https://oss.sonatype.org/ 上，“Staging Repositories”然后close掉自己的，再release\n* 发布后，可以到这里查看是否同步到仓库里了： https://repo1.maven.org/maven2/com/taobao/arthas/arthas-packaging/\n* 发布完maven仓库之后，需要到阿里云的仓库里检查是否同步，有可能有延时\n\n    比如下载地址： https://maven.aliyun.com/repository/public/com/taobao/arthas/arthas-packaging/3.x.x/arthas-packaging-3.x.x-bin.zip\n    \n    版本号信息地址： https://maven.aliyun.com/repository/public/com/taobao/arthas/arthas-packaging/maven-metadata.xml\n\n* 打上tag，push tag到仓库上\n* 需要更新 gh-pages 分支下面的 arthas-boot.jar/math-game.jar/as.sh ，下载 doc.zip，解压覆盖掉文档的更新，可以通过 github action 更新： https://github.com/alibaba/arthas/actions/workflows/update-doc.yaml\n* 需要更新docker镜像，push新的tag：https://hub.docker.com/r/hengyunabc/arthas/tags?page=1&ordering=last_updated\n\n    可以通过 github action push： https://github.com/alibaba/arthas/actions/workflows/push-docker.yaml \n\n* 更新README.md，比如增加了新命令，要加上说明，更新wiki的链接\n* 更新release页面的 issue信息，修改信息等\n* 更新 https://arthas.aliyun.com/api/latest_version api\n* 更新内部的版本\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.91,
          "content": "FROM openjdk:8-jdk-alpine\n\nARG ARTHAS_VERSION=\"4.0.4\"\nARG MIRROR=false\n\nENV MAVEN_HOST=https://repo1.maven.org/maven2 \\\n    ALPINE_HOST=dl-cdn.alpinelinux.org \\\n    MIRROR_MAVEN_HOST=https://maven.aliyun.com/repository/public \\\n    MIRROR_ALPINE_HOST=mirrors.aliyun.com \n\n# if use mirror change to aliyun mirror site\nRUN if $MIRROR; then MAVEN_HOST=${MIRROR_MAVEN_HOST} ;ALPINE_HOST=${MIRROR_ALPINE_HOST} ; sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_HOST}/g\" /etc/apk/repositories ; fi && \\\n    # https://github.com/docker-library/openjdk/issues/76\n    apk add --no-cache tini && \\ \n    # download & install arthas\n    wget -qO /tmp/arthas.zip \"${MAVEN_HOST}/com/taobao/arthas/arthas-packaging/${ARTHAS_VERSION}/arthas-packaging-${ARTHAS_VERSION}-bin.zip\" && \\\n    mkdir -p /opt/arthas && \\\n    unzip /tmp/arthas.zip -d /opt/arthas && \\\n    rm /tmp/arthas.zip\n\n# Tini is now available at /sbin/tini\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n"
        },
        {
          "name": "Dockerfile-No-Jdk",
          "type": "blob",
          "size": 0.66,
          "content": "# Stage 1: Build\nFROM openjdk:8-jdk-alpine AS builder\n\nARG ARTHAS_VERSION=\"4.0.4\"\nARG MIRROR=false\nENV MAVEN_HOST=https://repo1.maven.org/maven2 \\\n  MIRROR_MAVEN_HOST=https://maven.aliyun.com/repository/public\n\n# if use mirror change to aliyun mirror site\nRUN if [ \"$MIRROR\" = \"true\" ]; then MAVEN_HOST=${MIRROR_MAVEN_HOST} ; fi && \\\n  # download & install arthas\n  wget -qO /tmp/arthas.zip \"${MAVEN_HOST}/com/taobao/arthas/arthas-packaging/${ARTHAS_VERSION}/arthas-packaging-${ARTHAS_VERSION}-bin.zip\" && \\\n  mkdir -p /opt/arthas && \\\n  unzip /tmp/arthas.zip -d /opt/arthas && \\\n  rm /tmp/arthas.zip\n\n# Stage 2: Final\nFROM alpine\n\nCOPY --from=builder /opt/arthas /opt/arthas"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.09,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.75,
          "content": "Arthas\nCopyright 2018 Alibaba Group \n\nThis product includes software developed at\nAlibaba Group (https://www.alibabagroup.com/en/global/home).\n\nThis product contains code form the greys-anatomy Project:\n\nThe greys-anatomy Project\n=================\nPlease visit Github for more information:\n  * https://github.com/oldmanpushcart/greys-anatomy \n\n\n-------------------------------------------------------------------------------\nThis product contains a modified portion of 'Apache Commons Lang':\n  * LICENSE:\n    * Apache License 2.0\n  * HOMEPAGE:\n    * https://commons.apache.org/proper/commons-lang/\n\n\nThis product contains a modified portion of 'Apache Commons Net':\n  * LICENSE:\n    * Apache License 2.0\n  * HOMEPAGE:\n    * https://commons.apache.org/proper/commons-net/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.43,
          "content": "## Arthas\n\n![arthas](site/docs/.vuepress/public/images/arthas.png)\n\n[![Build Status](https://github.com/alibaba/arthas/workflows/JavaCI/badge.svg)](https://github.com/alibaba/arthas/actions)\n[![download](https://img.shields.io/github/downloads/alibaba/arthas/total?label=Downloads)](https://github.com/alibaba/arthas/releases/latest)\n[![maven](https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg)](https://search.maven.org/search?q=g:com.taobao.arthas)\n![license](https://img.shields.io/github/license/alibaba/arthas.svg)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas \"Percentage of issues still open\")\n[![Leaderboard](https://img.shields.io/badge/Arthas-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=arthas)\n\n`Arthas` is a Java Diagnostic tool open sourced by Alibaba.\n\nArthas allows developers to troubleshoot production issues for Java applications without modifying code or restarting servers.\n\n[中文说明/Chinese Documentation](README_CN.md)\n\n### Background\n\nOften times, the production system network is inaccessible from the local development environment. If issues are encountered in production systems, it is impossible to use IDEs to debug the application remotely. More importantly, debugging in production environment is unacceptable, as it will suspend all the threads, resulting in the suspension of business services. \n\nDevelopers could always try to reproduce the same issue on the test/staging environment. However, this is tricky as some issues cannot be reproduced easily on a different environment, or even disappear once restarted. \n\nAnd if you're thinking of adding some logs to your code to help troubleshoot the issue, you will have to go through the following lifecycle; test, staging, and then to production. Time is money! This approach is inefficient! Besides, the issue may not be reproducible once the JVM is restarted, as described above.\n\nArthas was built to solve these issues. A developer can troubleshoot your production issues on-the-fly. No JVM restart, no additional code changes. Arthas works as an observer, which will never suspend your existing threads.\n\n### Key features\n\n* Check whether a class is loaded, or where the class is being loaded. (Useful for troubleshooting jar file conflicts)\n* Decompile a class to ensure the code is running as expected.\n* View classloader statistics, e.g. the number of classloaders, the number of classes loaded per classloader, the classloader hierarchy, possible classloader leaks, etc.\n* View the method invocation details, e.g. method parameter, return object, thrown exception, and etc.\n* Check the stack trace of specified method invocation. This is useful when a developers wants to know the caller of the said method.\n* Trace the method invocation to find slow sub-invocations.\n* Monitor method invocation statistics, e.g. qps, rt, success rate and etc.\n* Monitor system metrics, thread states and cpu usage, gc statistics, and etc.\n* Supports command line interactive mode, with auto-complete feature enabled.\n* Supports telnet and websocket, which enables both local and remote diagnostics with command line and browsers.\n* Supports profiler/Flame Graph\n* Support get objects in the heap that are instances of the specified class. \n* Supports JDK 6+ (version 4.x no longer supports JDK 6 and JDK 7).\n* Supports Linux/Mac/Windows.\n\n\n### Online Tutorials(Recommended)\n\n* [View](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)\n\n### Quick start\n\n#### Use `arthas-boot`(Recommended)\n\nDownload`arthas-boot.jar`，Start with `java` command:\n\n```bash\ncurl -O https://arthas.aliyun.com/arthas-boot.jar\njava -jar arthas-boot.jar\n```\n\nPrint usage:\n\n```bash\njava -jar arthas-boot.jar -h\n```\n\n#### Use `as.sh`\n\nYou can install Arthas with one single line command on Linux, Unix, and Mac. Copy the following command and paste it into the command line, then press *Enter* to run:\n\n```bash\ncurl -L https://arthas.aliyun.com/install.sh | sh\n```\n\nThe command above will download the bootstrap script `as.sh` to the current directory. You can move it any other place you want, or put its location in `$PATH`.\n\nYou can enter its interactive interface by executing `as.sh`, or execute `as.sh -h` for more help information.\n\n\n### Documentation\n\n* [Online Tutorials(Recommended)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)\n* [User manual](https://arthas.aliyun.com/doc/en)\n* [Installation](https://arthas.aliyun.com/doc/en/install-detail.html)\n* [Download](https://arthas.aliyun.com/doc/en/download.html)\n* [Quick start](https://arthas.aliyun.com/doc/en/quick-start.html)\n* [Advanced usage](https://arthas.aliyun.com/doc/en/advanced-use.html)\n* [Commands](https://arthas.aliyun.com/doc/en/commands.html)\n* [WebConsole](https://arthas.aliyun.com/doc/en/web-console.html)\n* [Docker](https://arthas.aliyun.com/doc/en/docker.html)\n* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/en/spring-boot-starter.html)\n* [User cases](https://github.com/alibaba/arthas/issues?q=label%3Auser-case)\n* [FAQ](https://arthas.aliyun.com/doc/en/faq)\n* [Compile and debug/How to contribute](https://github.com/alibaba/arthas/blob/master/CONTRIBUTING.md)\n* [Release Notes](https://github.com/alibaba/arthas/releases)\n\n\n### Feature Showcase\n\n#### Dashboard\n\n* https://arthas.aliyun.com/doc/en/dashboard\n\n![dashboard](site/docs/.vuepress/public/images/dashboard.png)\n\n#### Thread\n\n* https://arthas.aliyun.com/doc/en/thread\n\nSee what is eating your CPU (ranked by top CPU usage) and what is going on there in one glance:\n\n```bash\n$ thread -n 3\n\"as-command-execute-daemon\" Id=29 cpuUsage=75% RUNNABLE\n    at sun.management.ThreadImpl.dumpThreads0(Native Method)\n    at sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:440)\n    at com.taobao.arthas.core.command.monitor200.ThreadCommand$1.action(ThreadCommand.java:58)\n    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute(AbstractCommandHandler.java:238)\n    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand(DefaultCommandHandler.java:67)\n    at com.taobao.arthas.core.server.ArthasServer$4.run(ArthasServer.java:276)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\n    Number of locked synchronizers = 1\n    - java.util.concurrent.ThreadPoolExecutor$Worker@6cd0b6f8\n\n\"as-session-expire-daemon\" Id=25 cpuUsage=24% TIMED_WAITING\n    at java.lang.Thread.sleep(Native Method)\n    at com.taobao.arthas.core.server.DefaultSessionManager$2.run(DefaultSessionManager.java:85)\n\n\"Reference Handler\" Id=2 cpuUsage=0% WAITING on java.lang.ref.Reference$Lock@69ba0f27\n    at java.lang.Object.wait(Native Method)\n    -  waiting on java.lang.ref.Reference$Lock@69ba0f27\n    at java.lang.Object.wait(Object.java:503)\n    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n```\n\n#### jad\n\n* https://arthas.aliyun.com/doc/en/jad\n\nDecompile your class with one shot:\n\n```java\n$ jad javax.servlet.Servlet\n\nClassLoader:\n+-java.net.URLClassLoader@6108b2d7\n  +-sun.misc.Launcher$AppClassLoader@18b4aac2\n    +-sun.misc.Launcher$ExtClassLoader@1ddf84b8\n\nLocation:\n/Users/xxx/work/test/lib/servlet-api.jar\n\n/*\n * Decompiled with CFR 0_122.\n */\npackage javax.servlet;\n\nimport java.io.IOException;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\n\npublic interface Servlet {\n    public void init(ServletConfig var1) throws ServletException;\n\n    public ServletConfig getServletConfig();\n\n    public void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;\n\n    public String getServletInfo();\n\n    public void destroy();\n}\n```\n\n#### mc\n* https://arthas.aliyun.com/doc/en/mc\n\nMemory compiler, compiles `.java` files into `.class` files in memory.\n\n```bash\n$ mc /tmp/Test.java\n```\n\n#### retransform\n\n* https://arthas.aliyun.com/doc/en/retransform\n\nLoad the external `*.class` files to retransform/hotswap the loaded classes in JVM.\n\n```bash\nretransform /tmp/Test.class\nretransform -c 327a647b /tmp/Test.class /tmp/Test\\$Inner.class\n```\n\n#### sc\n\n* https://arthas.aliyun.com/doc/en/sc\n\nSearch any loaded class with detailed information.\n\n```bash\n$ sc -d org.springframework.web.context.support.XmlWebApplicationContext\n class-info        org.springframework.web.context.support.XmlWebApplicationContext\n code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar\n name              org.springframework.web.context.support.XmlWebApplicationContext\n isInterface       false\n isAnnotation      false\n isEnum            false\n isAnonymousClass  false\n isArray           false\n isLocalClass      false\n isMemberClass     false\n isPrimitive       false\n isSynthetic       false\n simple-name       XmlWebApplicationContext\n modifier          public\n annotation\n interfaces\n super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext\n                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext\n                       +-org.springframework.context.support.AbstractRefreshableApplicationContext\n                         +-org.springframework.context.support.AbstractApplicationContext\n                           +-org.springframework.core.io.DefaultResourceLoader\n                             +-java.lang.Object\n class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader\n                     +-java.net.URLClassLoader@6108b2d7\n                       +-sun.misc.Launcher$AppClassLoader@18b4aac2\n                         +-sun.misc.Launcher$ExtClassLoader@1ddf84b8\n classLoaderHash   25131501\n\n```\n\n\n#### vmtool\n\n* https://arthas.aliyun.com/doc/en/vmtool\n\nGet objects in the heap that are instances of the specified class.\n\n```bash\n$ vmtool --action getInstances --className java.lang.String --limit 10\n@String[][\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com.taobao.arthas.core.shell.session.Session],\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/],\n    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],\n    @String[java/util/concurrent/locks/LockSupport],\n]\n```\n\n#### stack\n\n* https://arthas.aliyun.com/doc/en/stack\n\nView the call stack of `test.arthas.TestStack#doGet`:\n\n```bash\n$ stack test.arthas.TestStack doGet\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 286 ms.\nts=2018-09-18 10:11:45;thread_name=http-bio-8080-exec-10;id=d9;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.ParallelWebappClassLoader@25131501\n    @test.arthas.TestStack.doGet()\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)\n        ...\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:451)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1121)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\n#### Trace\n\n* https://arthas.aliyun.com/doc/en/trace\n\nSee what is slowing down your method invocation with trace command:\n\n![trace](site/docs/.vuepress/public/images/trace.png)\n\n#### Watch\n\n* https://arthas.aliyun.com/doc/en/watch\n\nWatch the first parameter and thrown exception of `test.arthas.TestWatch#doGet` only if it throws exception.\n\n```bash\n$ watch test.arthas.TestWatch doGet {params[0], throwExp} -e\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 65 ms.\nts=2018-09-18 10:26:28;result=@ArrayList[\n    @RequestFacade[org.apache.catalina.connector.RequestFacade@79f922b2],\n    @NullPointerException[java.lang.NullPointerException],\n]\n```\n\n#### Monitor\n\n* https://arthas.aliyun.com/doc/en/monitor\n\nMonitor a specific method invocation statistics, including the total number of invocations, average response time, success rate, and every 5 seconds:\n\n```bash\n$ monitor -c 5 org.apache.dubbo.demo.provider.DemoServiceImpl sayHello\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 109 ms.\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.67        0.00%\n\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     1.00        0.00%\n\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.43        0.00%\n```\n\n#### Time Tunnel(tt)\n\n* https://arthas.aliyun.com/doc/en/tt\n\nRecord method invocation data, so that you can check the method invocation parameters, returned value, and thrown exceptions later. It works as if you could come back and replay the past method invocation via time tunnel.\n\n```bash\n$ tt -t org.apache.dubbo.demo.provider.DemoServiceImpl sayHello\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 75 ms.\n INDEX   TIMESTAMP            COST(ms)  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD\n-------------------------------------------------------------------------------------------------------------------------------------\n 1000    2018-09-20 09:54:10  1.971195  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1001    2018-09-20 09:54:11  0.215685  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1002    2018-09-20 09:54:12  0.236303  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1003    2018-09-20 09:54:13  0.159598  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1004    2018-09-20 09:54:14  0.201982  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1005    2018-09-20 09:54:15  0.214205  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1006    2018-09-20 09:54:16  0.241863  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1007    2018-09-20 09:54:17  0.305747  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1008    2018-09-20 09:54:18  0.18468   true    false    0x55965cca     DemoServiceImpl                sayHello\n```\n\n#### Classloader\n\n* https://arthas.aliyun.com/doc/en/classloader\n\n```bash\n$ classloader\n name                                                  numberOfInstances  loadedCountTotal\n BootstrapClassLoader                                  1                  3346\n com.taobao.arthas.agent.ArthasClassloader             1                  1262\n java.net.URLClassLoader                               2                  1033\n org.apache.catalina.loader.ParallelWebappClassLoader  1                  628\n sun.reflect.DelegatingClassLoader                     166                166\n sun.misc.Launcher$AppClassLoader                      1                  31\n com.alibaba.fastjson.util.ASMClassLoader              6                  15\n sun.misc.Launcher$ExtClassLoader                      1                  7\n org.jvnet.hk2.internal.DelegatingClassLoader          2                  2\n sun.reflect.misc.MethodUtil                           1                  1\n```\n\n#### Web Console\n\n* https://arthas.aliyun.com/doc/en/web-console\n\n![web console](site/docs/.vuepress/public/images/web-console-local.png)\n\n\n#### Profiler/FlameGraph\n\n* https://arthas.aliyun.com/doc/en/profiler\n\n```bash\n$ profiler start\nStarted [cpu] profiling\n```\n\n```\n$ profiler stop\nprofiler output file: /tmp/demo/arthas-output/20211207-111550.html\nOK\n```\n\nView profiler results under arthas-output via browser:\n\n![](site/docs/.vuepress/public/images/arthas-output-svg.jpg)\n\n#### Arthas Spring Boot Starter\n\n* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/spring-boot-starter.html)\n\n### Known Users\n\nArthas has more than 120 registered users, [View All](USERS.md).\n\nWelcome to register the company name in this issue: https://github.com/alibaba/arthas/issues/111 (in order of registration)\n\n![Alibaba](static/alibaba.png)\n![Alipay](static/alipay.png)\n![Aliyun](static/aliyun.png)\n![Taobao](static/taobao.png)\n![ICBC](static/icbc.png)\n![雪球财经](static/xueqiu.png)\n![顺丰科技](static/sf.png)\n![贝壳找房](static/ke.png)\n![vipkid](static/vipkid.png)\n![百度凤巢](static/baidufengchao.png)\n![有赞](static/youzan.png)\n![科大讯飞](static/iflytek.png)\n![智联招聘](static/zhaopin.png)\n![达美盛](static/dms.png)\n\n\n### Derivative Projects\n\n* [Bistoury: A project that integrates Arthas](https://github.com/qunarcorp/bistoury)\n* [A fork of arthas using MVEL](https://github.com/XhinLiang/arthas)\n\n### Credits\n\n#### Contributors\n\nThis project exists, thanks to all the people who contributed.\n\n<a href=\"https://github.com/alibaba/arthas/graphs/contributors\"><img src=\"https://opencollective.com/arthas/contributors.svg?width=890&button=false\" /></a>\n\n#### Projects\n\n* [bytekit](https://github.com/alibaba/bytekit) Java Bytecode Kit.\n* [greys-anatomy](https://github.com/oldmanpushcart/greys-anatomy): The Arthas code base has derived from Greys, we thank for the excellent work done by Greys.\n* [termd](https://github.com/alibaba/termd): Arthas's terminal implementation is based on termd, an open source library for writing terminal applications in Java.\n* [crash](https://github.com/crashub/crash): Arthas's text based user interface rendering is based on codes extracted from [here](https://github.com/crashub/crash/tree/1.3.2/shell)\n* [cli](https://github.com/alibaba/cli): Arthas's command line interface implementation is based on cli, open sourced by vert.x\n* [compiler](https://github.com/skalogs/SkaETL/tree/master/compiler) Arthas's memory compiler.\n* [Apache Commons Net](https://commons.apache.org/proper/commons-net/) Arthas's telnet client.\n* [async-profiler](https://github.com/jvm-profiling-tools/async-profiler) Arthas's profiler command.\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 19,
          "content": "\n\n## Arthas\n\n![arthas](site/docs/.vuepress/public/images/arthas.png)\n\n[![Build Status](https://github.com/alibaba/arthas/workflows/JavaCI/badge.svg)](https://github.com/alibaba/arthas/actions)\n[![codecov](https://codecov.io/gh/alibaba/arthas/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/arthas)\n[![maven](https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg)](https://search.maven.org/search?q=g:com.taobao.arthas)\n![license](https://img.shields.io/github/license/alibaba/arthas.svg)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas \"Percentage of issues still open\")\n\n\nEnglish version goes [here](README.md).\n\n`Arthas` 是Alibaba开源的Java诊断工具，深受开发者喜爱。\n\n当你遇到以下类似问题而束手无策时，`Arthas`可以帮助你解决：\n\n0. 这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？\n0. 我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？\n0. 遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？\n0. 线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！\n0. 是否有一个全局视角来查看系统的运行状况？\n0. 有什么办法可以监控到JVM的实时运行状态？\n0. 怎么快速定位应用的热点，生成火焰图？\n0. 怎样直接从JVM内查找某个类的实例？\n\n`Arthas`支持JDK 6+（4.x 版本不再支持 JDK 6 和 JDK 7），支持Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 `Tab` 自动补全功能，进一步方便进行问题的定位和诊断。\n\n\n### 在线教程(推荐)\n\n* [查看](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=cn)\n\n### 快速开始\n\n#### 使用`arthas-boot`(推荐)\n\n下载`arthas-boot.jar`，然后用`java -jar`的方式启动：\n\n```bash\ncurl -O https://arthas.aliyun.com/arthas-boot.jar\njava -jar arthas-boot.jar\n```\n\n打印帮助信息：\n\n```bash\njava -jar arthas-boot.jar -h\n```\n\n* 如果下载速度比较慢，可以使用aliyun的镜像：`java -jar arthas-boot.jar --repo-mirror aliyun --use-http`\n\n#### 使用`as.sh`\n\nArthas 支持在 Linux/Unix/Mac 等平台上一键安装，请复制以下内容，并粘贴到命令行中，敲 `回车` 执行即可：\n\n```bash\ncurl -L https://arthas.aliyun.com/install.sh | sh\n```\n\n上述命令会下载启动脚本文件 `as.sh` 到当前目录，你可以放在任何地方或将其加入到 `$PATH` 中。\n\n直接在shell下面执行`./as.sh`，就会进入交互界面。\n\n也可以执行`./as.sh -h`来获取更多参数信息。\n\n### 文档\n\n* [在线教程(推荐)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=cn)\n* [用户文档](https://arthas.aliyun.com/doc/)\n* [安装](https://arthas.aliyun.com/doc/install-detail.html)\n* [下载](https://arthas.aliyun.com/doc/download.html)\n* [快速入门](https://arthas.aliyun.com/doc/quick-start.html)\n* [进阶使用](https://arthas.aliyun.com/doc/advanced-use.html)\n* [命令列表](https://arthas.aliyun.com/doc/commands.html)\n* [WebConsole](https://arthas.aliyun.com/doc/web-console.html)\n* [Docker](https://arthas.aliyun.com/doc/docker.html)\n* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/spring-boot-starter.html)\n* [用户案例](https://github.com/alibaba/arthas/issues?q=label%3Auser-case)\n* [FAQ/常见问题](https://arthas.aliyun.com/doc/faq)\n* [编译调试/参与贡献](https://github.com/alibaba/arthas/blob/master/CONTRIBUTING.md)\n* [Release Notes](https://github.com/alibaba/arthas/releases)\n* [QQ群/钉钉群](https://arthas.aliyun.com/doc/contact-us.html)\n\n### 案例展示\n\n#### Dashboard\n\n* https://arthas.aliyun.com/doc/dashboard\n\n![dashboard](site/docs/.vuepress/public/images/dashboard.png)\n\n#### Thread\n\n* https://arthas.aliyun.com/doc/thread\n\n一目了然的了解系统的状态，哪些线程比较占cpu？他们到底在做什么？\n\n```\n$ thread -n 3\n\"as-command-execute-daemon\" Id=29 cpuUsage=75% RUNNABLE\n    at sun.management.ThreadImpl.dumpThreads0(Native Method)\n    at sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:440)\n    at com.taobao.arthas.core.command.monitor200.ThreadCommand$1.action(ThreadCommand.java:58)\n    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute(AbstractCommandHandler.java:238)\n    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand(DefaultCommandHandler.java:67)\n    at com.taobao.arthas.core.server.ArthasServer$4.run(ArthasServer.java:276)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\n    Number of locked synchronizers = 1\n    - java.util.concurrent.ThreadPoolExecutor$Worker@6cd0b6f8\n\n\"as-session-expire-daemon\" Id=25 cpuUsage=24% TIMED_WAITING\n    at java.lang.Thread.sleep(Native Method)\n    at com.taobao.arthas.core.server.DefaultSessionManager$2.run(DefaultSessionManager.java:85)\n\n\"Reference Handler\" Id=2 cpuUsage=0% WAITING on java.lang.ref.Reference$Lock@69ba0f27\n    at java.lang.Object.wait(Native Method)\n    -  waiting on java.lang.ref.Reference$Lock@69ba0f27\n    at java.lang.Object.wait(Object.java:503)\n    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n```\n\n#### jad\n\n* https://arthas.aliyun.com/doc/jad\n\n对类进行反编译:\n\n```java\n$ jad javax.servlet.Servlet\n\nClassLoader:\n+-java.net.URLClassLoader@6108b2d7\n  +-sun.misc.Launcher$AppClassLoader@18b4aac2\n    +-sun.misc.Launcher$ExtClassLoader@1ddf84b8\n\nLocation:\n/Users/xxx/work/test/lib/servlet-api.jar\n\n/*\n * Decompiled with CFR 0_122.\n */\npackage javax.servlet;\n\nimport java.io.IOException;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\n\npublic interface Servlet {\n    public void init(ServletConfig var1) throws ServletException;\n\n    public ServletConfig getServletConfig();\n\n    public void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;\n\n    public String getServletInfo();\n\n    public void destroy();\n}\n```\n\n#### mc\n* https://arthas.aliyun.com/doc/mc\n\nMemory Compiler/内存编译器，编译`.java`文件生成`.class`。\n\n```bash\nmc /tmp/Test.java\n```\n\n#### retransform\n* https://arthas.aliyun.com/doc/retransform\n\n加载外部的`.class`文件，retransform 热更新jvm已加载的类。\n\n```bash\nretransform /tmp/Test.class\nretransform -c 327a647b /tmp/Test.class /tmp/Test\\$Inner.class\n```\n\n#### sc\n* https://arthas.aliyun.com/doc/sc\n\n查找JVM中已经加载的类\n\n```bash\n$ sc -d org.springframework.web.context.support.XmlWebApplicationContext\n class-info        org.springframework.web.context.support.XmlWebApplicationContext\n code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar\n name              org.springframework.web.context.support.XmlWebApplicationContext\n isInterface       false\n isAnnotation      false\n isEnum            false\n isAnonymousClass  false\n isArray           false\n isLocalClass      false\n isMemberClass     false\n isPrimitive       false\n isSynthetic       false\n simple-name       XmlWebApplicationContext\n modifier          public\n annotation\n interfaces\n super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext\n                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext\n                       +-org.springframework.context.support.AbstractRefreshableApplicationContext\n                         +-org.springframework.context.support.AbstractApplicationContext\n                           +-org.springframework.core.io.DefaultResourceLoader\n                             +-java.lang.Object\n class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader\n                     +-java.net.URLClassLoader@6108b2d7\n                       +-sun.misc.Launcher$AppClassLoader@18b4aac2\n                         +-sun.misc.Launcher$ExtClassLoader@1ddf84b8\n classLoaderHash   25131501\n\n```\n\n#### vmtool\n\n* https://arthas.aliyun.com/doc/vmtool\n\n从JVM heap中获取指定类的实例。\n\n```bash\n$ vmtool --action getInstances --className java.lang.String --limit 10\n@String[][\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com.taobao.arthas.core.shell.session.Session],\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com/taobao/arthas/core/shell/session/Session],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/taobao/arthas/core/shell/session/Session.class],\n    @String[com/],\n    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],\n    @String[java/util/concurrent/locks/LockSupport],\n]\n```\n#### stack\n\n* https://arthas.aliyun.com/doc/stack\n\n查看方法 `test.arthas.TestStack#doGet` 的调用堆栈：\n\n```bash\n$ stack test.arthas.TestStack doGet\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 286 ms.\nts=2018-09-18 10:11:45;thread_name=http-bio-8080-exec-10;id=d9;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.ParallelWebappClassLoader@25131501\n    @test.arthas.TestStack.doGet()\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)\n        ...\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:451)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1121)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\n#### Trace\n\n* https://arthas.aliyun.com/doc/trace\n\n观察方法执行的时候哪个子调用比较慢:\n\n![trace](site/docs/.vuepress/public/images/trace.png)\n\n#### Watch\n\n* https://arthas.aliyun.com/doc/watch\n\n观察方法 `test.arthas.TestWatch#doGet` 执行的入参，仅当方法抛出异常时才输出。\n\n```bash\n$ watch test.arthas.TestWatch doGet {params[0], throwExp} -e\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 65 ms.\nts=2018-09-18 10:26:28;result=@ArrayList[\n    @RequestFacade[org.apache.catalina.connector.RequestFacade@79f922b2],\n    @NullPointerException[java.lang.NullPointerException],\n]\n```\n\n#### Monitor\n\n* https://arthas.aliyun.com/doc/monitor\n\n监控某个特殊方法的调用统计数据，包括总调用次数，平均rt，成功率等信息，每隔5秒输出一次。\n\n\n```bash\n$ monitor -c 5 org.apache.dubbo.demo.provider.DemoServiceImpl sayHello\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 109 ms.\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.67        0.00%\n\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     1.00        0.00%\n\n timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate\n----------------------------------------------------------------------------------------------------------------------------\n 2018-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.43        0.00%\n```\n\n#### Time Tunnel(tt)\n\n* https://arthas.aliyun.com/doc/tt\n\n记录方法调用信息，支持事后查看方法调用的参数，返回值，抛出的异常等信息，仿佛穿越时空隧道回到调用现场一般。\n\n```bash\n$ tt -t org.apache.dubbo.demo.provider.DemoServiceImpl sayHello\nPress Ctrl+C to abort.\nAffect(class-cnt:1 , method-cnt:1) cost in 75 ms.\n INDEX   TIMESTAMP            COST(ms)  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD\n-------------------------------------------------------------------------------------------------------------------------------------\n 1000    2018-09-20 09:54:10  1.971195  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1001    2018-09-20 09:54:11  0.215685  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1002    2018-09-20 09:54:12  0.236303  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1003    2018-09-20 09:54:13  0.159598  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1004    2018-09-20 09:54:14  0.201982  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1005    2018-09-20 09:54:15  0.214205  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1006    2018-09-20 09:54:16  0.241863  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1007    2018-09-20 09:54:17  0.305747  true    false    0x55965cca     DemoServiceImpl                sayHello\n 1008    2018-09-20 09:54:18  0.18468   true    false    0x55965cca     DemoServiceImpl                sayHello\n```\n\n#### Classloader\n\n* https://arthas.aliyun.com/doc/classloader\n\n了解当前系统中有多少类加载器，以及每个加载器加载的类数量，帮助您判断是否有类加载器泄露。\n\n```bash\n$ classloader\n name                                                  numberOfInstances  loadedCountTotal\n BootstrapClassLoader                                  1                  3346\n com.taobao.arthas.agent.ArthasClassloader             1                  1262\n java.net.URLClassLoader                               2                  1033\n org.apache.catalina.loader.ParallelWebappClassLoader  1                  628\n sun.reflect.DelegatingClassLoader                     166                166\n sun.misc.Launcher$AppClassLoader                      1                  31\n com.alibaba.fastjson.util.ASMClassLoader              6                  15\n sun.misc.Launcher$ExtClassLoader                      1                  7\n org.jvnet.hk2.internal.DelegatingClassLoader          2                  2\n sun.reflect.misc.MethodUtil                           1                  1\n```\n\n#### Web Console\n\n* https://arthas.aliyun.com/doc/web-console\n\n![web console](site/docs/.vuepress/public/images/web-console-local.png)\n\n#### Profiler/FlameGraph/火焰图\n\n* https://arthas.aliyun.com/doc/profiler\n\n```bash\n$ profiler start\nStarted [cpu] profiling\n```\n\n```\n$ profiler stop\nprofiler output file: /tmp/demo/arthas-output/20211207-111550.html\nOK\n```\n\n通过浏览器查看profiler结果：\n\n![](site/docs/.vuepress/public/images/arthas-output-svg.jpg)\n\n#### Arthas Spring Boot Starter\n\n* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/spring-boot-starter.html)\n\n### Known Users\n\nArthas有超过120家登记用户，[查看全部](USERS.md)。\n\n如果您在使用Arthas，请让我们知道，您的使用对我们非常重要：https://github.com/alibaba/arthas/issues/111 （按登记顺序排列）\n\n![Alibaba](static/alibaba.png)\n![Alipay](static/alipay.png)\n![Aliyun](static/aliyun.png)\n![Taobao](static/taobao.png)\n![ICBC](static/icbc.png)\n![雪球财经](static/xueqiu.png)\n![顺丰科技](static/sf.png)\n![贝壳找房](static/ke.png)\n![vipkid](static/vipkid.png)\n![百度凤巢](static/baidufengchao.png)\n![有赞](static/youzan.png)\n![科大讯飞](static/iflytek.png)\n![智联招聘](static/zhaopin.png)\n![高德红外](static/guideir.jpg)\n![达美盛](static/dms.png)\n\n### 衍生项目\n\n* [Bistoury: 一个集成了Arthas的项目](https://github.com/qunarcorp/bistoury)\n* [一个使用MVEL脚本的fork](https://github.com/XhinLiang/arthas)\n\n\n### Credit\n\n#### Contributors\n\n感谢所有Contributors!\n\n<a href=\"https://github.com/alibaba/arthas/graphs/contributors\"><img src=\"https://opencollective.com/arthas/contributors.svg?width=890&button=false\" /></a>\n\n#### Projects\n\n* [bytekit](https://github.com/alibaba/bytekit) Java Bytecode Kit，Arthas里字节码增强的内核。\n* [greys-anatomy](https://github.com/oldmanpushcart/greys-anatomy): Arthas代码基于Greys二次开发而来，非常感谢Greys之前所有的工作，以及Greys原作者对Arthas提出的意见和建议！\n* [termd](https://github.com/alibaba/termd): Arthas的命令行实现基于termd开发，是一款优秀的命令行程序开发框架，感谢termd提供了优秀的框架。\n* [crash](https://github.com/crashub/crash): Arthas的文本渲染功能基于crash中的文本渲染功能开发，可以从[这里](https://github.com/crashub/crash/tree/1.3.2/shell)看到源码，感谢crash在这方面所做的优秀工作。\n* [cli](https://github.com/alibaba/cli): Arthas的命令行界面基于vert.x提供的cli库进行开发，感谢vert.x在这方面做的优秀工作。\n* [compiler](https://github.com/skalogs/SkaETL/tree/master/compiler) Arthas里的内存编译器代码来源\n* [Apache Commons Net](https://commons.apache.org/proper/commons-net/) Arthas里的Telnet Client代码来源\n* [async-profiler](https://github.com/jvm-profiling-tools/async-profiler) Arthas's profiler 命令.\n\n### 仓库镜像\n\n* [码云Arthas](https://gitee.com/arthas/arthas)\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 0.05,
          "content": "English README has been moved [here](README.md).\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 1.8,
          "content": "\n* 代码还是很乱，需要继续重构\n* 依赖需要清理，几个问题：\n    * 所有 apache 的 common 库应当不需要\n    * json 库有好几份\n    * `jopt-simple` 看下能不能用 `cli` 取代\n    * `cli`, `termd` 的 artifactId, version 需要想下。是不是应该直接拿进来。他们的依赖也需要仔细看一下\n* termd 依赖 netty，感觉有点重，而且第一次 attach 比较慢，不确定是 netty 的问题还是 attach 的问题\n* 目前 web console 依赖 termd 中自带的 term.js 和 css，需要美化，需要想下如何集成到研发门户上\n* 因为现在没有 Java 客户端了，所以 batch mode 也就没有了\n* `com.taobao.arthas.core.shell.session.Session` 的能力需要和以前的 session 的实现对标。其中：\n    * 真的需要 textmode 吗？我觉得这个应该是 option 的事情\n    * 真的需要 encoding 吗？我觉得仍然应该在 option 中定义，就算是真的需要，因为我觉得就应该是 UTF-8\n    * duration 是应当展示的，session 的列表也许也应当展示\n    * 需要仔细看下 session 过期是否符合预期\n    * 多人协作的时候 session 原来是在多人之间共享的吗？\n* 所有的命令现在实现的是 AnnotatedCommand，需要继续增强的是:\n    * Help 中的格式化输出被删除。需要为 `@Description` 定义一套统一的格式\n    * 命令的输入以及输出的日志 (record logger) 被删除，需要重新实现，因为现在是用 `CommandProcess` 来输出，所以，需要在 `CommandProcess` 的实现里打日志\n* `com.taobao.arthas.core.GlobalOptions` 看上去好奇怪，感觉是 OptionCommand 应当做的事情\n* `com.taobao.arthas.core.config.Configure` 需要清理，尤其是和 http 相关的\n* 需要合并 develop 分支上后续的修复\n* 代码中的 TODO/FIXME"
        },
        {
          "name": "USERS.md",
          "type": "blob",
          "size": 5.07,
          "content": "### Known Users\n\nWelcome to register the company name in this issue: https://github.com/alibaba/arthas/issues/111 (in order of registration)\n\n![Alibaba](static/alibaba.png)\n![Alipay](static/alipay.png)\n![Aliyun](static/aliyun.png)\n![Taobao](static/taobao.png)\n![Tmall](static/tmall.png)\n![微医](static/weiyi.png)\n![卓越教育](static/zhuoyuejiaoyu.png)\n![狐狸金服](static/hulijingfu.png)\n![三体云](static/santiyun.png)\n![证大文化](static/zhengdawenhua.png)\n![连连支付](static/lianlianpay.png)\n![Acmedcare+](static/acmedcare.png)\n![好慷](static/homeking365_log.png)\n![来电科技](static/laidian.png)\n![四格互联](static/sigehulian.png)\n![ICBC](static/icbc.png)\n![陆鹰](static/luying.png)\n![玩友时代](static/wangyoushidai.png)\n![她社区](static/tashequ.png)\n![龙腾出行](static/longtengchuxing.png)\n![foscam](static/foscam.png)\n![二维火](static/2dfire.png)\n![lanxum](static/lanxum_com.png)\n![纳里健康](static/ngarihealth.png)\n![掌门1对1](static/zhangmen.png)\n![offcn](static/offcn.png)\n![sia](static/sia.png)\n![振安资产](static/zhenganzichang.png)\n![菠萝](static/bolo.png)\n![中通快递](static/zto.png)\n![光点科技](static/guangdian.png)\n![广州工程技术职业学院](static/gzvtc.jpg)\n![mstar](static/mstar.png)\n![xwbank](static/xwbank.png)\n![imexue](static/imexue.png)\n![keking](static/keking.png)\n![secoo](static/secoo.jpg)\n![viax](static/viax.png)\n![yanedu](static/yanedu.png)\n![duia](static/duia.png)\n![哈啰出行](static/hellobike.png)\n![hollycrm](static/hollycrm.png)\n![citycloud](static/citycloud.jpg)\n![yidianzixun](static/yidianzixun.png)\n![神州租车](static/zuche.png)\n![天眼查](static/tianyancha.png)\n![商脉云](static/anjianyun.png)\n![三新文化](static/sanxinbook.png)\n![雪球财经](static/xueqiu.png)\n![百安居](static/bthome.png)\n![安心保险](static/95303.png)\n![杭州源诚科技](static/hzyc.png)\n![91moxie](static/91moxie.png)\n![智慧开源](static/wisdom.png)\n![富佳科技](static/fujias.png)\n![鼎尖软件](static/dingjiansoft.png)\n![广通软件](static/broada.png)\n![九鼎瑞信](static/evercreative.jpg)\n![小米有品](static/xiaomiyoupin.png)\n![欧冶云商](static/ouyeel.png)\n![投投科技](static/toutou.png)\n![饿了么](static/ele.png)\n![58同城](static/58.png)\n![上海浪沙](static/runsa.png)\n![符律科技](static/fhldtech.png)\n![顺丰科技](static/sf.png)\n![新致软件](static/newtouch.png)\n![北京华宇信息](static/thunisoft.png)\n![太平洋保险](static/cpic.png)\n![旅享网络](static/risingch.png)\n![水滴互联](static/shuidihuzhu.png)\n![贝壳找房](static/ke.png)\n![嘟嘟牛](static/dodonew.png)\n![云幂信息](static/yunmixinxi.png)\n![随手科技](static/sui.png)\n![妈妈去哪儿](static/mamaqunaer.jpg)\n![云实信息](static/realscloud.png)\n![BBD数联铭品](static/bbdservice.png)\n![伙伴集团](static/zhaoshang800.png)\n![数梦工场](static/dtdream.png)\n![安恒信息](static/dbappsecurity.png)\n![亚信科技](static/asiainfo.png)\n![云舒写](static/yunshuxie.png)\n![微住](static/iweizhu.png)\n![月亮小屋](static/bluemoon.png)\n![大搜车](static/souche.png)\n![今日图书](static/jinritushu.png)\n![竹间智能](static/emotibot.png)\n![数字认证](static/bjca.png)\n![360金融](static/360jinrong.png)\n![安居客](static/anjuke.jpg)\n![qunar](static/qunar.png)\n![ctrip](static/ctrip.png)\n![Tuniu](static/tuniu.png)\n![多点](static/dmall.jpg)\n![转转](static/zhuanzhuan.jpg)\n![金蝶](static/kingdee.jpg)\n![华清飞扬](static/sincetimes.jpg)\n![神奇视角](static/fasterar.jpg)\n![南京昂克软件](static/angke.jpg)\n![网盛生意宝](static/netsun.jpg)\n![北京登云美业网络](static/idengyun.jpg)\n![Holder](static/holder.png)\n![立林科技](static/leelen.png)\n![爱成长](static/aichengzhang.png)\n![嘉云数据](static/clubfactory.png)\n![百草味](static/bcw.png)\n![青岛优米](static/youmi.png)\n![紫光软件](static/unis.png)\n![拓保软件](static/tobosoft.png)\n![海信集团](static/hisense.png)\n![小红唇](static/xiaohongchun.png)\n![上海恺英](static/kaiying.png)\n![上海慧力](static/xiaohuasheng.png)\n![上海喔噻](static/shouqingba.png)\n![vipkid](static/vipkid.png)\n![宇中科技](static/yuzhong.png)\n![蘑菇财富](static/mogu.jpg)\n![喔趣科技](static/woqu.png)\n![百度凤巢](static/baidufengchao.png)\n![喜百年供应链科技](static/xbn.png)\n![折耳根科技](static/zheergen.png)\n![qdama](static/qdm_logo.png)\n![有赞](static/youzan.png)\n![中原银行](static/zhongyuanbank.png)\n![CVTE](static/cvte.png)\n![北京喜得国际网络科技有限公司](static/cider.png)\n![智联招聘](static/zhaopin.png)\n![深圳航天信息](static/ShenzhenAerospaceInformationCo.,Ltd.png)\n![滴滴出行](static/didiglobal.jpg)\n![兑观科技](static/videt.png)\n![高德红外](static/guideir.jpg)\n\n* 网易云\n* 派迩信息技术\n* 朴新教育\n* OK智慧教育\n* 云集\n* 业余草科技\n* 家家顺\n* 兰亮\n* 浪潮集团\n* 福建博思软件\n* OPPO\n* 中科软科技\n* 大搜车\n* 泰豪软件\n* 中房\n* 安恒信息\n* 武汉力龙\n* 埃欧体科技\n* 创维\n* 启迪出行\n* 大华股份\n* 黄豆伟业\n* 中国有赞\n* 车巴达\n* 华为\n* 云管书\n* 兑观\n* 高德红外\n"
        },
        {
          "name": "agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "arthas-agent-attach",
          "type": "tree",
          "content": null
        },
        {
          "name": "arthas-spring-boot-starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "arthas-vmtool",
          "type": "tree",
          "content": null
        },
        {
          "name": "as-package.sh",
          "type": "blob",
          "size": 1.37,
          "content": "#!/bin/bash\n\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\nget_local_maven_project_version()\n{\n    \"$DIR/mvnw\" -T 2C -Dmaven.test.skip=true -DskipTests=true -Dmaven.javadoc.skip=true org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate \\\n     -Dexpression=project.version -f $DIR/pom.xml -B | grep -e '^[^\\[]' | cut -b 1-5\n}\n\n\"$DIR/mvnw\" -version\n\nCUR_VERSION=$(get_local_maven_project_version)\n\n# arthas's version\nDATE=$(date '+%Y%m%d%H%M%S')\n\nARTHAS_VERSION=\"${CUR_VERSION}.${DATE}\"\n\necho \"${ARTHAS_VERSION}\" > $DIR/core/src/main/resources/com/taobao/arthas/core/res/version\n\n# define newset arthas lib home\nNEWEST_ARTHAS_LIB_HOME=${HOME}/.arthas/lib/${ARTHAS_VERSION}/arthas\n\n\n# exit shell with err_code\n# $1 : err_code\n# $2 : err_msg\nexit_on_err()\n{\n    [[ ! -z \"${2}\" ]] && echo \"${2}\" 1>&2\n    exit ${1}\n}\n\n# maven package the arthas\n\"$DIR/mvnw\" clean package -Dmaven.test.skip=true -DskipTests=true -Dmaven.javadoc.skip=true -f $DIR/pom.xml \\\n|| exit_on_err 1 \"package arthas failed.\"\n\nrm -r \"$DIR/core/src/main/resources/com/taobao/arthas/core/res/version\"\n\npackaging_bin_path=$(ls \"${DIR}\"/packaging/target/arthas-bin.zip)\n\n# install to local\nmkdir -p \"${NEWEST_ARTHAS_LIB_HOME}\"\nunzip ${packaging_bin_path} -d \"${NEWEST_ARTHAS_LIB_HOME}/\"\n\n# print ~/.arthas directory size\narthas_dir_size=\"$(du -hs ${HOME}/.arthas | cut -f1)\"\necho \"${HOME}/.arthas size: ${arthas_dir_size}\""
        },
        {
          "name": "async-profiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "batch.as",
          "type": "blob",
          "size": 0.13,
          "content": "dashboard -n 1\nsysprop\nwatch arthas.Test test \"@com.alibaba.arthas.Test@n.entrySet().iterator.{? #this.key.name()=='STOP' }\" -n 2\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "boot",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "labs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "math-game",
          "type": "tree",
          "content": null
        },
        {
          "name": "memorycompiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 9.83,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.45,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n\nFOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n\nexit /B %ERROR_CODE%\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 19,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>9</version>\n    </parent>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <connection>scm:git:git@github.com:alibaba/arthas.git</connection>\n        <developerConnection>scm:git:git@github.com:alibaba/arthas.git</developerConnection>\n        <url>https://github.com/alibaba/arthas</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <developers>\n        <developer>\n            <id>beiwei30</id>\n            <name>beiwei30</name>\n            <email>ian.luo@gmail.com</email>\n        </developer>\n        <developer>\n            <id>Jerrik Zhu</id>\n            <name>Jerrik Zhu</name>\n            <email>diecui1202@gmail.com</email>\n        </developer>\n        <developer>\n            <id>ralf0131</id>\n            <name>ralf0131</name>\n            <email>huxing.zhang@gmail.com</email>\n        </developer>\n        <developer>\n            <id>hengyunabc</id>\n            <name>hengyunabc</name>\n            <email>hengyunabc@gmail.com</email>\n        </developer>\n    </developers>\n\n    <groupId>com.taobao.arthas</groupId>\n    <artifactId>arthas-all</artifactId>\n    <version>${revision}</version>\n    <packaging>pom</packaging>\n\n    <name>arthas-all</name>\n    <description>arthas</description>\n    <url>https://github.com/alibaba/arthas</url>\n\n    <modules>\n        <module>web-ui</module>\n        <module>math-game</module>\n        <module>common</module>\n        <module>spy</module>\n        <module>arthas-vmtool</module>\n        <module>tunnel-common</module>\n        <module>tunnel-client</module>\n        <module>core</module>\n        <module>agent</module>\n        <module>client</module>\n        <module>memorycompiler</module>\n        <module>boot</module>\n        <module>arthas-agent-attach</module>\n        <module>arthas-spring-boot-starter</module>\n        <module>tunnel-server</module>\n        <module>testcase</module>\n        <module>site</module>\n        <module>packaging</module>\n        <module>labs/arthas-grpc-web-proxy</module>\n        <module>labs/cluster-management/native-agent</module>\n        <module>labs/cluster-management/native-agent-management-web</module>\n        <module>labs/cluster-management/native-agent-proxy</module>\n        <module>labs/cluster-management/native-agent-common</module>\n        <module>labs/arthas-grpc-server</module>\n    </modules>\n\n    <properties>\n        <revision>4.0.4</revision>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <spring-boot.version>2.7.18</spring-boot.version>\n        <spring-boot3.version>3.1.7</spring-boot3.version>\n        <maven-invoker-plugin.version>3.0.0</maven-invoker-plugin.version>\n        <project.build.outputTimestamp>2020-09-27T15:10:43Z</project.build.outputTimestamp>\n        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>\n        <netty.version>4.1.113.Final</netty.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>bytekit-core</artifactId>\n                <version>0.1.3</version>\n            </dependency>\n            <dependency>\n                <groupId>org.benf</groupId>\n                <artifactId>cfr</artifactId>\n                <version>0.152</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.middleware</groupId>\n                <artifactId>termd-core</artifactId>\n                <version>1.1.7.14</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.middleware</groupId>\n                <artifactId>cli</artifactId>\n                <version>1.0.4</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>1.7.36</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.2.13</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-core</artifactId>\n                <version>1.2.13</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.arthas</groupId>\n                <artifactId>arthas-repackage-logger</artifactId>\n                <version>0.0.16</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>repackage-asm</artifactId>\n                <version>0.0.16</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.fastjson2</groupId>\n                <artifactId>fastjson2</artifactId>\n                <version>2.0.52</version>\n            </dependency>\n            <dependency>\n                <groupId>com.taobao.text</groupId>\n                <artifactId>text-ui</artifactId>\n                <version>0.0.3</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fifesoft</groupId>\n                <artifactId>rsyntaxtextarea</artifactId>\n                <version>3.3.4</version>\n            </dependency>\n            <dependency>\n                <groupId>ognl</groupId>\n                <artifactId>ognl</artifactId>\n                <version>3.3.5</version>\n            </dependency>\n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <version>5.10.0</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.assertj</groupId>\n                <artifactId>assertj-core</artifactId>\n                <version>3.24.2</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-core</artifactId>\n                <version>4.11.0</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-buffer</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>jline</groupId>\n                <artifactId>jline</artifactId>\n                <version>2.14.6</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy</artifactId>\n                <version>1.14.11</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy-agent</artifactId>\n                <version>1.14.11</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.zeroturnaround</groupId>\n                <artifactId>zt-zip</artifactId>\n                <version>1.16</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <profiles>\n        <profile>\n            <!-- ci test -->\n            <id>jdk12</id>\n            <activation>\n                <jdk>[12,)</jdk>\n                <property>\n                    <name>JAVA8_HOME</name>\n                </property>\n            </activation>\n            <dependencies>\n                <dependency>\n                    <groupId>com.sun</groupId>\n                    <artifactId>tools</artifactId>\n                    <version>1.6.0</version>\n                    <scope>system</scope>\n                    <systemPath>${JAVA8_HOME}/lib/tools.jar</systemPath>\n                </dependency>\n            </dependencies>\n        </profile>\n\n        <profile>\n            <id>full</id>\n            <build>\n                <plugins>\n                    <!-- git commit info -->\n                    <plugin>\n                        <groupId>pl.project13.maven</groupId>\n                        <artifactId>git-commit-id-plugin</artifactId>\n                        <version>4.9.9</version>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>revision</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <verbose>false</verbose>\n                            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>\n                            <generateGitPropertiesFile>true</generateGitPropertiesFile>\n                            <generateGitPropertiesFilename>${project.build.outputDirectory}/arthas-git.properties</generateGitPropertiesFilename>\n                            <excludeProperties>\n                                <excludeProperty>git.branch</excludeProperty>\n                                <excludeProperty>git.build.host</excludeProperty>\n                                <excludeProperty>git.build.time</excludeProperty>\n                                <excludeProperty>git.build.user.email</excludeProperty>\n                                <excludeProperty>git.build.user.name</excludeProperty>\n                                <excludeProperty>git.remote.origin.url</excludeProperty>\n                                <excludeProperty>git.total.commit.count</excludeProperty>\n                                <excludeProperty>git.commit.time</excludeProperty>\n                                <excludeProperty>git.local.branch.ahead</excludeProperty>\n                                <excludeProperty>git.local.branch.behind</excludeProperty>\n                                <excludeProperty>git.tags</excludeProperty>\n                            </excludeProperties>\n                            <injectAllReactorProjects>true</injectAllReactorProjects>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.2.0</version>\n                        <configuration>\n                            <doclint>none</doclint>\n                            <source>1.8</source>\n                            <failOnError>false</failOnError>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>release</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>release</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>3.0.0-M1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-antrun-plugin</artifactId>\n                    <version>1.8</version>\n                </plugin>\n                <!--This plugin's configuration is used to store Eclipse m2e settings\n                    only. It has no influence on the Maven build itself. -->\n                <plugin>\n                    <groupId>org.eclipse.m2e</groupId>\n                    <artifactId>lifecycle-mapping</artifactId>\n                    <version>${lifecycle-mapping.version}</version>\n                    <configuration>\n                        <lifecycleMappingMetadata>\n                            <pluginExecutions>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>\n                                            org.apache.maven.plugins\n                                        </groupId>\n                                        <artifactId>\n                                            maven-invoker-plugin\n                                        </artifactId>\n                                        <versionRange>\n                                            [1.0.0,)\n                                        </versionRange>\n                                        <goals>\n                                            <goal>\n                                                install\n                                            </goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore />\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>\n                                            org.codehaus.mojo\n                                        </groupId>\n                                        <artifactId>\n                                            flatten-maven-plugin\n                                        </artifactId>\n                                        <versionRange>\n                                            [1.0.0,)\n                                        </versionRange>\n                                        <goals>\n                                            <goal>flatten</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                            </pluginExecutions>\n                        </lifecycleMappingMetadata>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.2.0</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                        </manifest>\n                    </archive>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.2.1</version>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>flatten-maven-plugin</artifactId>\n                <version>1.2.2</version>\n                <configuration>\n                    <flattenMode>minimum</flattenMode>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>flatten</id>\n                        <phase>process-resources</phase>\n                        <goals>\n                            <goal>flatten</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>flatten-clean</id>\n                        <phase>clean</phase>\n                        <goals>\n                            <goal>clean</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n        </plugins>\n    </build>\n</project>\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "spy",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "testcase",
          "type": "tree",
          "content": null
        },
        {
          "name": "tunnel-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "tunnel-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "tunnel-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}