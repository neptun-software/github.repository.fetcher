{
  "metadata": {
    "timestamp": 1736557448660,
    "page": 465,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker/awesome-compose",
      "stars": 36607,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03,
          "content": "* text=auto\nreadme.md merge=union\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.28,
          "content": "# Contributing\n\nContributions should be made via pull requests. Pull requests will be reviewed\nby one or more maintainers and merged when acceptable.\n\nThe goal of the Awesome Compose is to provide a curated list of application \nsamples that can be easily deployed with [Docker Compose](https://github.com/docker/compose).\n\n## Missing an example? \n\nYou can request a new example of an application by submitting an issue to our GitHub repository. \n\nBefore submitting a new application, check if there isn't already application sample matching your need.\n\nIf there is one, consider updating it instead of creating a new one.\n \nIf you would like to submit a new application example, please start by submitting a proposal as an issue.\nThe maintainers will then use this issue to discuss what the most valuable example for the application,\n technology, language, or framework would be.\n\nAfter the choice has been made, you can submit a pull request with the example remembering to:\n- include an example README.md to describe the application and explain how to run/use the sample.\n- edit the global README.md to add your sample in the repository main list.\n\n## Commit Messages\n\nCommit messages should follow best practices and explain the context of the\nproblem and how it was solved-- including any caveats or follow up changes\nrequired. They should tell the story of the change and provide readers an\nunderstanding of what led to it.\n\n[How to Write a Git Commit Message](http://chris.beams.io/posts/git-commit/)\nprovides a good guide for how to do so.\n\nIn practice, the best approach to maintaining a nice commit message is to\nleverage a `git add -p` and `git commit --amend` to formulate a solid\nchange set. This allows one to piece together a change, as information becomes\navailable.\n\nIf you squash a series of commits, don't just submit that. Re-write the commit\nmessage, as if the series of commits was a single stroke of brilliance.\n\nThat said, there is no requirement to have a single commit for a pull request,\nas long as each commit tells the story. For example, if there is a feature that\nrequires a package, it might make sense to have the package in a separate commit\nthen have a subsequent commit that uses it.\n\nRemember, you're telling part of the story with the commit message. Don't make\nyour chapter weird.\n\n## Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.88,
          "content": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.91,
          "content": "# Awesome Compose maintainers file\n#\n# This file describes who runs the docker/awesome-compose project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\t[Org.\"Core maintainers\"]\n\t\tpeople = [\n\t\t\t\"aiordache\",\n\t\t\t\"glours\"\n\t\t]\n\t[Org.Alumni]\n\t\tpeople = [\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.aiordache]\n\tName = \"Anca iordache\"\n\tEmail = \"anca.iordache@docker.com\"\n\tGitHub = \"aiordache\"\n\n\t[people.glours]\n\tName = \"Guillaume Lours\"\n\tEmail = \"guillaume.lours@docker.com\"\n\tGitHub = \"glours\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.45,
          "content": "# Awesome Compose [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n![logo](awesome-compose.jpg)\n\n> A curated list of Docker Compose samples.\n\nThese samples provide a starting point for how to integrate different services using a Compose file and to manage their deployment with Docker Compose.\n\n> **Note**\n> The following samples are intended for use in local development environments such as project setups, tinkering with software stacks, etc. These samples must not be deployed in production environments.\n\n<!--lint disable awesome-toc-->\n## Contents\n\n- [Samples of Docker Compose applications with multiple integrated services](#samples-of-docker-compose-applications-with-multiple-integrated-services).\n- [Single service samples](#single-service-samples).\n- [Basic setups for different platforms (not production ready - useful for personal use)](#basic-setups-for-different-platforms-not-production-ready---useful-for-personal-use).\n\n## Samples of Docker Compose applications with multiple integrated services\n\n<a href=\"https://docs.docker.com/desktop/wasm/\"><img src=\"icon_wasm.svg\" alt=\"Docker + wasm\" height=\"30\" align=\"top\"/></a> Icon indicates Sample is compatible with [Docker+Wasm](https://docs.docker.com/desktop/wasm/).\n\n- [`ASP.NET / MS-SQL`](aspnet-mssql) - Sample ASP.NET core application\nwith MS SQL server database.\n- [`Elasticsearch / Logstash / Kibana`](elasticsearch-logstash-kibana) - Sample Elasticsearch, Logstash, and Kibana stack.\n- [`Go / NGINX / MySQL`](nginx-golang-mysql) - Sample Go application\nwith an Nginx proxy and a MySQL database.\n- [`Go / NGINX / PostgreSQL`](nginx-golang-postgres) - Sample Go\napplication with an Nginx proxy and a PostgreSQL database.\n- [`Java Spark / MySQL`](sparkjava-mysql) - Sample Java application and\na MySQL database.\n- [`NGINX / ASP.NET / MySQL`](nginx-aspnet-mysql) - Sample Nginx reverse proxy with an C# backend using ASP.NET.\n- [`NGINX / Flask / MongoDB`](nginx-flask-mongo) - Sample Python/Flask\napplication with Nginx proxy and a Mongo database.\n- [`NGINX / Flask / MySQL`](nginx-flask-mysql) - Sample Python/Flask application with an Nginx proxy and a MySQL database.\n- [`NGINX / Node.js / Redis`](nginx-nodejs-redis) - Sample Node.js application with Nginx proxy and a Redis database.\n- [`NGINX / Go`](nginx-golang) - Sample Nginx proxy with a Go backend.\n- [`NGINX / WSGI / Flask`](nginx-wsgi-flask) - Sample Nginx reverse proxy with a Flask backend using WSGI.\n- [`PostgreSQL / pgAdmin`](postgresql-pgadmin) - Sample setup for postgreSQL database with pgAdmin web interface.\n- [`Python / Flask / Redis`](flask-redis) - Sample Python/Flask and a Redis database.\n- [`React / Spring / MySQL`](react-java-mysql) - Sample React\napplication with a Spring backend and a MySQL database.\n- [`React / Express / MySQL`](react-express-mysql) - Sample React\napplication with a Node.js backend and a MySQL database.\n- [`React / Express / MongoDB`](react-express-mongodb) - Sample React\napplication with a Node.js backend and a Mongo database.\n- [`React / Rust / PostgreSQL`](react-rust-postgres) - Sample React\napplication with a Rust backend and a Postgres database.\n- [`React / Nginx`](react-nginx) - Sample React application with Nginx.\n- [`Spring / PostgreSQL`](spring-postgres) - Sample Java application\nwith Spring framework and a Postgres database.\n- [`WasmEdge / MySQL / Nginx`](wasmedge-mysql-nginx) - Sample Wasm-based web application with a static HTML frontend, using a MySQL (MariaDB) database. The frontend connects to a Wasm microservice written in Rust, that runs using the WasmEdge runtime.&nbsp;<a href=\"wasmedge-mysql-nginx\"><img src=\"icon_wasm.svg\" alt=\"Compatible with Docker+wasm\" height=\"30\" align=\"top\"/></a>\n- [`WasmEdge / Kafka / MySQL`](wasmedge-kafka-mysql) - Sample Wasm-based microservice that subscribes to a Kafka (Redpanda) queue topic, and transforms and saves any incoming message into a MySQL (MariaDB) database.&nbsp;<a href=\"wasmedge-kafka-mysql\"><img src=\"icon_wasm.svg\" alt=\"Compatible with Docker+wasm\" height=\"30\" align=\"top\"/></a>\n\n## Single service samples\n\n- [`Angular`](angular)\n- [`Spark`](sparkjava)\n- [`VueJS`](vuejs)\n- [`Flask`](flask)\n- [`PHP`](apache-php)\n- [`Traefik`](traefik-golang)\n- [`Django`](django)\n- [`Minecraft server`](https://github.com/docker/awesome-compose/tree/master/minecraft)\n- [`Plex`](https://github.com/docker/awesome-compose/tree/master/plex)\n- [`Portainer`](https://github.com/docker/awesome-compose/tree/master/portainer)\n- [`Wireguard`](https://github.com/docker/awesome-compose/tree/master/wireguard)\n- [`FastAPI`](fastapi)\n\n## Basic setups for different platforms (not production ready - useful for personal use)\n\n- [`Gitea / PostgreSQL`](gitea-postgres)\n- [`Nextcloud / PostgreSQL`](nextcloud-postgres)\n- [`Nextcloud / Redis / MariaDB`](nextcloud-redis-mariadb)\n- [`Pi-hole / cloudflared`](pihole-cloudflared-DoH) - Sample Pi-hole setup with use of DoH cloudflared service\n- [`Prometheus / Grafana`](prometheus-grafana)\n- [`Wordpress / MySQL`](wordpress-mysql)\n\n<!--lint disable awesome-toc-->\n\n## Getting started\n\nThese instructions will get you through the bootstrap phase of creating and\ndeploying samples of containerized applications with Docker Compose.\n\n### Prerequisites\n\n- Make sure that you have Docker and Docker Compose installed\n  - Windows or macOS:\n    [Install Docker Desktop](https://www.docker.com/get-started)\n  - Linux: [Install Docker](https://www.docker.com/get-started) and then\n    [Docker Compose](https://github.com/docker/compose)\n- Download some or all of the samples from this repository.\n\n### Running a sample\n\nThe root directory of each sample contains the `compose.yaml` which\ndescribes the configuration of service components. All samples can be run in\na local environment by going into the root directory of each one and executing:\n\n```console\ndocker compose up -d\n```\n\nCheck the `README.md` of each sample to get more details on the structure and\nwhat is the expected output.\nTo stop and remove all containers of the sample application run:\n\n```console\ndocker compose down\n```\n\n### Quickstart guides\n\nIn addition to all the ready to run Compose samples listed above the folder [official-documentation-samples](official-documentation-samples/README.md) contains quickstart guides. Each of these step by step guides explain which files need to be created to build and run a Docker Compose application.\n\n<!--lint disable awesome-toc-->\n## Contribute\n\nWe welcome examples that help people understand how to use Docker Compose for\ncommon applications. Check the [Contribution Guide](CONTRIBUTING.md) for more details. \n"
        },
        {
          "name": "angular",
          "type": "tree",
          "content": null
        },
        {
          "name": "apache-php",
          "type": "tree",
          "content": null
        },
        {
          "name": "aspnet-mssql",
          "type": "tree",
          "content": null
        },
        {
          "name": "awesome-compose.jpg",
          "type": "blob",
          "size": 69.29,
          "content": null
        },
        {
          "name": "django",
          "type": "tree",
          "content": null
        },
        {
          "name": "elasticsearch-logstash-kibana",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "flask-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "flask",
          "type": "tree",
          "content": null
        },
        {
          "name": "gitea-postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "icon_wasm.svg",
          "type": "blob",
          "size": 1.37,
          "content": "<svg id=\"WA-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"144\" height=\"111\" viewBox=\"0 0 1440 1110\">\n  <defs>\n    <style>\n      .cls-1 {\n        fill: #6f45f9;\n        fill-rule: evenodd;\n      }\n    </style>\n  </defs>\n  <path id=\"shape_4\" data-name=\"shape 4\" class=\"cls-1\" d=\"M445,280H651v7s0.437,32.383,29,49c30.515,17.752,62.137,4.583,72-4,10.362-9.017,22.2-23.3,23-45v-7H981V816H445V280ZM569,567h36l24,128,30-128h33l27,128,28-127h35L737,759H702L675,631,646,759H610ZM776,759l46-191h57l55,191H897l-12-42H820l-9,42H776Z\" transform=\"translate(0.594 9.312)\"/>\n  <path id=\"shape_1\" data-name=\"shape 1\" class=\"cls-1\" d=\"M827,685.471l16-71h15l19,71H827Z\" transform=\"translate(0.594 9.312)\"/>\n  <path id=\"shape_3\" data-name=\"shape 3\" class=\"cls-1\" d=\"M323,232.471l-122,54s-32,12.311-32,51v412s-4.458,38.615,29,54,497,221,497,221,22.409,11.15,46,1,116-51,116-51,14.081-5.669,14-22c-0.088-17.6-16.3-33.023-36-24s-96,43-96,43-17.573,10.1-37,2-449-198-449-198-24-11.257-24-40v-374a42.353,42.353,0,0,1,25-38c25.972-12.225,88-39,88-39s18-5.765,18-26C360,237.118,338.709,225.966,323,232.471Zm284-127,93-41s19.94-8.9,51,5,485,216,485,216,34,14.168,34,51v422s0.85,30.084-26,43-116,53-116,53-14.98,4.522-25-7-8.79-32.833,5-39,67-29,67-29l8-4s23-12.024,23-46v-369s1.61-26.142-28-39-437-194-437-194-21.48-9.931-40-2-77,34-77,34-22.162,7.988-33-8S584.324,115.515,607,105.471Z\" transform=\"translate(0.594 9.312)\"/>\n</svg>\n"
        },
        {
          "name": "minecraft",
          "type": "tree",
          "content": null
        },
        {
          "name": "nextcloud-postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "nextcloud-redis-mariadb",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-aspnet-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-flask-mongo",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-flask-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-golang-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-golang-postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-golang",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-nodejs-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-wsgi-flask",
          "type": "tree",
          "content": null
        },
        {
          "name": "official-documentation-samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "open_in_new.svg",
          "type": "blob",
          "size": 0.77,
          "content": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<mask id=\"mask0_1191_12637\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"24\" height=\"24\">\n<path d=\"M18 19H6C5.45 19 5 18.55 5 18V6C5 5.45 5.45 5 6 5H11C11.55 5 12 4.55 12 4C12 3.45 11.55 3 11 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V13C21 12.45 20.55 12 20 12C19.45 12 19 12.45 19 13V18C19 18.55 18.55 19 18 19ZM14 4C14 4.55 14.45 5 15 5H17.59L8.46 14.13C8.07 14.52 8.07 15.15 8.46 15.54C8.85 15.93 9.48 15.93 9.87 15.54L19 6.41V9C19 9.55 19.45 10 20 10C20.55 10 21 9.55 21 9V4C21 3.45 20.55 3 20 3H15C14.45 3 14 3.45 14 4Z\" fill=\"black\"/>\n</mask>\n<g mask=\"url(#mask0_1191_12637)\">\n<rect width=\"24\" height=\"24\" fill=\"#086DD7\"/>\n</g>\n</svg>\n"
        },
        {
          "name": "pihole-cloudflared-DoH",
          "type": "tree",
          "content": null
        },
        {
          "name": "plex",
          "type": "tree",
          "content": null
        },
        {
          "name": "portainer",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgresql-pgadmin",
          "type": "tree",
          "content": null
        },
        {
          "name": "prometheus-grafana",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-express-mongodb",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-express-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-java-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-rust-postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "sparkjava-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "sparkjava",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-postgres",
          "type": "tree",
          "content": null
        },
        {
          "name": "traefik-golang",
          "type": "tree",
          "content": null
        },
        {
          "name": "vuejs",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasmedge-kafka-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasmedge-mysql-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "wireguard",
          "type": "tree",
          "content": null
        },
        {
          "name": "wordpress-mysql",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}