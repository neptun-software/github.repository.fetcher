{
  "metadata": {
    "timestamp": 1736712381841,
    "page": 7,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjc=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fzaninotto/Faker",
      "stars": 26790,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.19921875,
          "content": "/test/              export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/CONTRIBUTING.md    export-ignore\n/Makefile           export-ignore\n/phpunit.xml.dist   export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": ".build/\nvendor\ncomposer.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 87.951171875,
          "content": "# CHANGELOG\n\n## 2019-12-03, v1.9.1\n\n- Add link to PHPStan extension to readme [\\#1834](https://github.com/fzaninotto/Faker/pull/1834) ([finwe](https://github.com/finwe))\n- Enhancement: Collect code coverage [\\#1824](https://github.com/fzaninotto/Faker/pull/1824) ([localheinz](https://github.com/localheinz))\n- Enhancement: Use all columns when running tests [\\#1823](https://github.com/fzaninotto/Faker/pull/1823) ([localheinz](https://github.com/localheinz))\n- Enhancement: Configure verbose output via phpunit.xml.dist [\\#1822](https://github.com/fzaninotto/Faker/pull/1822) ([localheinz](https://github.com/localheinz))\n- Curly braces for arrays is deprecated in PHP 7.4 [\\#1843](https://github.com/fzaninotto/Faker/pull/1843) ([wimg](https://github.com/wimg))\n- Fix: Reduce visibility of setUp\\(\\) and tearDown\\(\\) [\\#1821](https://github.com/fzaninotto/Faker/pull/1821) ([localheinz](https://github.com/localheinz))\n- Fix: Mark test classes as final [\\#1820](https://github.com/fzaninotto/Faker/pull/1820) ([localheinz](https://github.com/localheinz))\n- Fix: Remove unnecessary class-level DocBlocks [\\#1819](https://github.com/fzaninotto/Faker/pull/1819) ([localheinz](https://github.com/localheinz))\n\n## 2019-11-10, v1.9.0\n\nThis will the last minor release in the `1.x` cycle.  \n\n- Add all Iran's provinces land lines numbers [\\#1806](https://github.com/fzaninotto/Faker/pull/1806) ([kingofnull](https://github.com/kingofnull))\n- replace latin \"B\" to cyrillic \"B\" for uk\\_UA locale [\\#1800](https://github.com/fzaninotto/Faker/pull/1800) ([FI-LIFE](https://github.com/FI-LIFE))\n- Add elgentos/masquerade to third-party library list [\\#1798](https://github.com/fzaninotto/Faker/pull/1798) ([erikhansen](https://github.com/erikhansen))\n- Add link to Gravatar provider repository [\\#1796](https://github.com/fzaninotto/Faker/pull/1796) ([ottaviano](https://github.com/ottaviano))\n- Add mobileNumber\\(\\) method for nb\\_NO [\\#1788](https://github.com/fzaninotto/Faker/pull/1788) ([carestad](https://github.com/carestad))\n- Enhancement: Slightly clean up Company provider [\\#1783](https://github.com/fzaninotto/Faker/pull/1783) ([localheinz](https://github.com/localheinz))\n- Added some more information for autoloading in the readme [\\#1780](https://github.com/fzaninotto/Faker/pull/1780) ([pimjansen](https://github.com/pimjansen))\n- Enhancement: Add issue template for bug report [\\#1779](https://github.com/fzaninotto/Faker/pull/1779) ([localheinz](https://github.com/localheinz))\n- Add hslColor to ColorProvider [\\#1776](https://github.com/fzaninotto/Faker/pull/1776) ([icanhazstring](https://github.com/icanhazstring))\n- Enhancement: Consistently use composer package name for link content [\\#1770](https://github.com/fzaninotto/Faker/pull/1770) ([localheinz](https://github.com/localheinz))\n- Add Correct Thai words for streets,soi etc names and add Thai First a… [\\#1769](https://github.com/fzaninotto/Faker/pull/1769) ([pierrejoye](https://github.com/pierrejoye))\n- Enhancement: Assert that postcode generated by Austrian Address provider matches format [\\#1766](https://github.com/fzaninotto/Faker/pull/1766) ([localheinz](https://github.com/localheinz))\n- Enhancement: Update squizlabs/php\\_codesniffer [\\#1763](https://github.com/fzaninotto/Faker/pull/1763) ([localheinz](https://github.com/localheinz))\n- Enhancement: Assert that imageUrl can be used with gray flag [\\#1762](https://github.com/fzaninotto/Faker/pull/1762) ([localheinz](https://github.com/localheinz))\n- Enhancement: Introduce build and help targets [\\#1761](https://github.com/fzaninotto/Faker/pull/1761) ([localheinz](https://github.com/localheinz))\n- Enhancement: Disable Xdebug as early as possible [\\#1758](https://github.com/fzaninotto/Faker/pull/1758) ([localheinz](https://github.com/localheinz))\n- Enhancement: Clean up .gitattributes [\\#1756](https://github.com/fzaninotto/Faker/pull/1756) ([localheinz](https://github.com/localheinz))\n- Enhancement: Reference phpunit.xsd as installed with composer [\\#1755](https://github.com/fzaninotto/Faker/pull/1755) ([localheinz](https://github.com/localheinz))\n- add id\\_ID Color [\\#1754](https://github.com/fzaninotto/Faker/pull/1754) ([cacing69](https://github.com/cacing69))\n- PHP 7.4 compatibility [\\#1748](https://github.com/fzaninotto/Faker/pull/1748) ([pimjansen](https://github.com/pimjansen))\n- Add lastName gender specific on ru\\_RU locale [\\#1747](https://github.com/fzaninotto/Faker/pull/1747) ([aanfarhan](https://github.com/aanfarhan))\n- Update README - Add a new faker. [\\#1731](https://github.com/fzaninotto/Faker/pull/1731) ([drupol](https://github.com/drupol))\n- Add faker-eddy-malou third-party library [\\#1717](https://github.com/fzaninotto/Faker/pull/1717) ([Metrakit](https://github.com/Metrakit))\n- \\[de\\_DE\\] Company\\JobTitle: list of common german job titles [\\#1716](https://github.com/fzaninotto/Faker/pull/1716) ([amacado](https://github.com/amacado))\n- Added 'red' to $safeColorNames [\\#1701](https://github.com/fzaninotto/Faker/pull/1701) ([xfudox](https://github.com/xfudox))\n- \\[pt\\_PT/Address\\] Add abbreviature to 'travessa' and 'largo' [\\#1606](https://github.com/fzaninotto/Faker/pull/1606) ([simaolemos](https://github.com/simaolemos))\n- Fix method name for en\\_NZ provider in readme [\\#1595](https://github.com/fzaninotto/Faker/pull/1595) ([gdhnz](https://github.com/gdhnz))\n- Refactoring of the TextTest class [\\#1590](https://github.com/fzaninotto/Faker/pull/1590) ([stevegrunwell](https://github.com/stevegrunwell))\n- add gender variants for last name \\[lt\\_LT\\] [\\#1586](https://github.com/fzaninotto/Faker/pull/1586) ([ikerasLT](https://github.com/ikerasLT))\n- add .id TLD [\\#1566](https://github.com/fzaninotto/Faker/pull/1566) ([ad3n](https://github.com/ad3n))\n- Add Color provider to es\\_ES locale [\\#1559](https://github.com/fzaninotto/Faker/pull/1559) ([juananruiz](https://github.com/juananruiz))\n- Enhancement: Keep packages sorted in composer.json [\\#1551](https://github.com/fzaninotto/Faker/pull/1551) ([localheinz](https://github.com/localheinz))\n- Portuguese providers for Companies and Internet [\\#1537](https://github.com/fzaninotto/Faker/pull/1537) ([promatik](https://github.com/promatik))\n- Improve Dutch company names [\\#1529](https://github.com/fzaninotto/Faker/pull/1529) ([koole](https://github.com/koole))\n- Document randomDigitNot base formatter. [\\#1514](https://github.com/fzaninotto/Faker/pull/1514) ([shawnlindstrom](https://github.com/shawnlindstrom))\n- Estonian names [\\#1461](https://github.com/fzaninotto/Faker/pull/1461) ([much-rebel](https://github.com/much-rebel))\n- add birthplace support for ID nik generator [\\#1451](https://github.com/fzaninotto/Faker/pull/1451) ([mikk150](https://github.com/mikk150))\n- List of banks in Brazil added [\\#1427](https://github.com/fzaninotto/Faker/pull/1427) ([diegohenicka](https://github.com/diegohenicka))\n- Remove last names from the male first names array \\(et\\_EE\\) [\\#1799](https://github.com/fzaninotto/Faker/pull/1799) ([Mihkel100](https://github.com/Mihkel100))\n- Update out-of-date currency codes [\\#1795](https://github.com/fzaninotto/Faker/pull/1795) ([Brindster](https://github.com/Brindster))\n- Floor is not always returning an int [\\#1790](https://github.com/fzaninotto/Faker/pull/1790) ([pimjansen](https://github.com/pimjansen))\n- typo [\\#1789](https://github.com/fzaninotto/Faker/pull/1789) ([enumag](https://github.com/enumag))\n- Added batch inserts for doctrine orm populate [\\#1781](https://github.com/fzaninotto/Faker/pull/1781) ([pimjansen](https://github.com/pimjansen))\n- FIx: Avoid deprecation warning in newer CakePHP version [\\#1777](https://github.com/fzaninotto/Faker/pull/1777) ([icanhazstring](https://github.com/icanhazstring))\n- Fix: Consistently link to GitHub repositories [\\#1774](https://github.com/fzaninotto/Faker/pull/1774) ([localheinz](https://github.com/localheinz))\n- Fix: Name of package [\\#1772](https://github.com/fzaninotto/Faker/pull/1772) ([localheinz](https://github.com/localheinz))\n- Remove BV and HM country codes. [\\#1767](https://github.com/fzaninotto/Faker/pull/1767) ([oliverpool](https://github.com/oliverpool))\n- Fix: Remove sudo configuration [\\#1760](https://github.com/fzaninotto/Faker/pull/1760) ([localheinz](https://github.com/localheinz))\n- Fix: Allow nightly builds to fail [\\#1759](https://github.com/fzaninotto/Faker/pull/1759) ([localheinz](https://github.com/localheinz))\n- Fix: No need to update composer itself [\\#1757](https://github.com/fzaninotto/Faker/pull/1757) ([localheinz](https://github.com/localheinz))\n- duplicate first name and last name removal [\\#1729](https://github.com/fzaninotto/Faker/pull/1729) ([sagautam5](https://github.com/sagautam5))\n- Fix-Isreal--Israel [\\#1724](https://github.com/fzaninotto/Faker/pull/1724) ([GitEvil](https://github.com/GitEvil))\n- fix\\(issue-1721\\): add phpdoc method and properties annotations for php… [\\#1722](https://github.com/fzaninotto/Faker/pull/1722) ([lugus](https://github.com/lugus))\n- Typo in function PHPDoc [\\#1711](https://github.com/fzaninotto/Faker/pull/1711) ([Dzhuneyt](https://github.com/Dzhuneyt))\n- Fix: Add allowed type DateTime to param annotation [\\#1697](https://github.com/fzaninotto/Faker/pull/1697) ([localheinz](https://github.com/localheinz))\n- Calling a non static method as static not allowed. [\\#1696](https://github.com/fzaninotto/Faker/pull/1696) ([wilco-1985](https://github.com/wilco-1985))\n- Bug Fix en\\_SG mobile number generation [\\#1658](https://github.com/fzaninotto/Faker/pull/1658) ([ziming](https://github.com/ziming))\n- Update ja\\_JP Address Provider [\\#1649](https://github.com/fzaninotto/Faker/pull/1649) ([atmngw](https://github.com/atmngw))\n- Fixed realText on ja\\_JP locale broken, /u missing [\\#1634](https://github.com/fzaninotto/Faker/pull/1634) ([mihit](https://github.com/mihit))\n- Removed comma and space from $firstNameMale for en\\_IN [\\#1608](https://github.com/fzaninotto/Faker/pull/1608) ([phpspider](https://github.com/phpspider))\n- Prevent Transliterator class autoloading [\\#1575](https://github.com/fzaninotto/Faker/pull/1575) ([MontealegreLuis](https://github.com/MontealegreLuis))\n- building numbers in Germany never start with a zero or are zero [\\#1530](https://github.com/fzaninotto/Faker/pull/1530) ([fostam](https://github.com/fostam))\n- Fixing sk\\_SK men last names set [\\#1459](https://github.com/fzaninotto/Faker/pull/1459) ([pavoltanuska](https://github.com/pavoltanuska))\n- Taiwan ID. The initial letter must be a capital letter. p-\\>P [\\#1434](https://github.com/fzaninotto/Faker/pull/1434) ([slawa-dev](https://github.com/slawa-dev))\n- Revert \"Added 'red' to $safeColorNames\" [\\#1778](https://github.com/fzaninotto/Faker/pull/1778) ([fzaninotto](https://github.com/fzaninotto))\n- Added realText capability for fr\\_CA [\\#1686](https://github.com/fzaninotto/Faker/pull/1686) ([bobanum](https://github.com/bobanum))\n- Add loremflickr.com Provider to the thrid parties [\\#1683](https://github.com/fzaninotto/Faker/pull/1683) ([xvladxtremal](https://github.com/xvladxtremal))\n- Add Undeclared Faker Instance to PhoneNumber Test in en\\_NG [\\#1682](https://github.com/fzaninotto/Faker/pull/1682) ([thearsalan](https://github.com/thearsalan))\n- PSR-2 updates to readme [\\#1679](https://github.com/fzaninotto/Faker/pull/1679) ([b3none](https://github.com/b3none))\n- PHPDoc for `passthrough` function on Generator [\\#1678](https://github.com/fzaninotto/Faker/pull/1678) ([tabakhase](https://github.com/tabakhase))\n- Make en\\_CA Phone Provider Extend the en\\_US One [\\#1676](https://github.com/fzaninotto/Faker/pull/1676) ([darrylhein](https://github.com/darrylhein))\n- Add Valid National Code Generator to fa\\_IR Person [\\#1675](https://github.com/fzaninotto/Faker/pull/1675) ([thearsalan](https://github.com/thearsalan))\n- Updated readme.md: added a missing backslash [\\#1673](https://github.com/fzaninotto/Faker/pull/1673) ([aubryfr](https://github.com/aubryfr))\n- Add 'Faker\\Provider\\en\\_US\\Company::catchPhrase' to ru\\_RU locale [\\#1668](https://github.com/fzaninotto/Faker/pull/1668) ([axklim](https://github.com/axklim))\n- Update deprecated \\PHPUnit\\_Framework\\_TestCase with PHPUnit\\Framework\\TestCase [\\#1664](https://github.com/fzaninotto/Faker/pull/1664) ([thewhit](https://github.com/thewhit))\n- Support populating Doctrine's immutable date types [\\#1639](https://github.com/fzaninotto/Faker/pull/1639) ([voronkovich](https://github.com/voronkovich))\n- add titleMale and titleFemale method to all Person classes [\\#1635](https://github.com/fzaninotto/Faker/pull/1635) ([RiverDanceGit](https://github.com/RiverDanceGit))\n- Minor typo fix [\\#1631](https://github.com/fzaninotto/Faker/pull/1631) ([nhedger](https://github.com/nhedger))\n- Add link to er1z/fakemock [\\#1622](https://github.com/fzaninotto/Faker/pull/1622) ([er1z](https://github.com/er1z))\n- Add Dutch \\(nl\\_NL\\) job titles [\\#1618](https://github.com/fzaninotto/Faker/pull/1618) ([SjorsO](https://github.com/SjorsO))\n- Exclude files and folder from release archive [\\#1617](https://github.com/fzaninotto/Faker/pull/1617) ([ankurk91](https://github.com/ankurk91))\n- Update doc block [\\#1615](https://github.com/fzaninotto/Faker/pull/1615) ([ankurk91](https://github.com/ankurk91))\n- Suggest PSR-4 compliant autoloader in comment [\\#1614](https://github.com/fzaninotto/Faker/pull/1614) ([samnela](https://github.com/samnela))\n- Fix dateTimeBetween\\(\\) Argument on Generator phpdoc [\\#1583](https://github.com/fzaninotto/Faker/pull/1583) ([hisomura](https://github.com/hisomura))\n- Fix Dutch typo [\\#1580](https://github.com/fzaninotto/Faker/pull/1580) ([gizburdt](https://github.com/gizburdt))\n- Old city names changed to new ones [\\#1578](https://github.com/fzaninotto/Faker/pull/1578) ([goszowski](https://github.com/goszowski))\n- Correct documentation [\\#1571](https://github.com/fzaninotto/Faker/pull/1571) ([rquadling](https://github.com/rquadling))\n- Make $suffix protected not private in nl\\_NL\\Person provider [\\#1561](https://github.com/fzaninotto/Faker/pull/1561) ([SpadXIII](https://github.com/SpadXIII))\n- Add PicsumPhotos Provider to the thrid parties [\\#1560](https://github.com/fzaninotto/Faker/pull/1560) ([bluemmb](https://github.com/bluemmb))\n- fix austrian postal codes starting with invalid 0 [\\#1545](https://github.com/fzaninotto/Faker/pull/1545) ([mpge](https://github.com/mpge))\n- Restore a random seed when the Generator is destroyed [\\#1534](https://github.com/fzaninotto/Faker/pull/1534) ([lyrixx](https://github.com/lyrixx))\n- Add a swiss social security number \\(AVS13\\) generator [\\#1533](https://github.com/fzaninotto/Faker/pull/1533) ([nhedger](https://github.com/nhedger))\n- Small tweaks [\\#1526](https://github.com/fzaninotto/Faker/pull/1526) ([carusogabriel](https://github.com/carusogabriel))\n- fix ukraine first name person, delete space [\\#1525](https://github.com/fzaninotto/Faker/pull/1525) ([Yasuslik](https://github.com/Yasuslik))\n- Removed unknown postcode [\\#1440](https://github.com/fzaninotto/Faker/pull/1440) ([ayanozturk](https://github.com/ayanozturk))\n- Add more PhoneNumber options for es\\_ES [\\#1219](https://github.com/fzaninotto/Faker/pull/1219) ([driade](https://github.com/driade))\n- Fix duplication in uk\\_UA male first names [\\#1214](https://github.com/fzaninotto/Faker/pull/1214) ([fre5h](https://github.com/fre5h))\n- Added missing grayscale option/flag to Image provider [\\#928](https://github.com/fzaninotto/Faker/pull/928) ([sebastianvilla](https://github.com/sebastianvilla))\n\n## 2018-07-12, v1.8.0\n\n- Typo in readme [\\#1521](https://github.com/fzaninotto/Faker/pull/1521) ([jmhobbs](https://github.com/jmhobbs))\n- Replaced Hilll with Hill [\\#1516](https://github.com/fzaninotto/Faker/pull/1516) ([MarkVaughn](https://github.com/MarkVaughn))\n- \\[it\\_IT\\] Improve vat ID generated using official rules [\\#1508](https://github.com/fzaninotto/Faker/pull/1508) ([mavimo](https://github.com/mavimo))\n- \\[hu\\_HU\\] Address: Fix unnecessary new line in string [\\#1507](https://github.com/fzaninotto/Faker/pull/1507) ([ntomka](https://github.com/ntomka))\n- add phone numer format [\\#1506](https://github.com/fzaninotto/Faker/pull/1506) ([Enosh-Yu](https://github.com/Enosh-Yu))\n- Fix typo in fr\\_CA Provider [\\#1505](https://github.com/fzaninotto/Faker/pull/1505) ([ultreson](https://github.com/ultreson))\n- Add fake-car provider link [\\#1497](https://github.com/fzaninotto/Faker/pull/1497) ([pelmered](https://github.com/pelmered))\n- create `passthrough` function [\\#1493](https://github.com/fzaninotto/Faker/pull/1493) ([browner12](https://github.com/browner12))\n- update Polish bank list [\\#1482](https://github.com/fzaninotto/Faker/pull/1482) ([IonBazan](https://github.com/IonBazan))\n- Update the parameters to check if the setter is callable [\\#1470](https://github.com/fzaninotto/Faker/pull/1470) ([rossmitchell](https://github.com/rossmitchell))\n- Push the max date far into the future so the test can pass [\\#1469](https://github.com/fzaninotto/Faker/pull/1469) ([rossmitchell](https://github.com/rossmitchell))\n- Update Address.php [\\#1465](https://github.com/fzaninotto/Faker/pull/1465) ([Saibamen](https://github.com/Saibamen))\n- Turkish identity number for tr\\_TR [\\#1462](https://github.com/fzaninotto/Faker/pull/1462) ([aykutaras](https://github.com/aykutaras))\n- Fixing rare iin with 13-digits. [\\#1450](https://github.com/fzaninotto/Faker/pull/1450) ([vadimonus](https://github.com/vadimonus))\n- Fix Polish PESEL faker [\\#1449](https://github.com/fzaninotto/Faker/pull/1449) ([Dartui](https://github.com/Dartui))\n- Adds valid 08 number formats for fr\\_FR [\\#1439](https://github.com/fzaninotto/Faker/pull/1439) ([ppelgrims](https://github.com/ppelgrims))\n- Add YouTube provider link [\\#1422](https://github.com/fzaninotto/Faker/pull/1422) ([aalaap](https://github.com/aalaap))\n- Update PHPDoc of the DateTime provider. [\\#1419](https://github.com/fzaninotto/Faker/pull/1419) ([tomzx](https://github.com/tomzx))\n- Normalize name of variable [\\#1412](https://github.com/fzaninotto/Faker/pull/1412) ([eaglewu](https://github.com/eaglewu))\n- Added \"blockchain\" to en-us company provider catchPhrase method [\\#1411](https://github.com/fzaninotto/Faker/pull/1411) ([samoldenburg](https://github.com/samoldenburg))\n- Fix for Spot2 ORM EntityPopulator [\\#1408](https://github.com/fzaninotto/Faker/pull/1408) ([michal-borek](https://github.com/michal-borek))\n- TH color name [\\#1404](https://github.com/fzaninotto/Faker/pull/1404) ([Naruedom](https://github.com/Naruedom))\n- added Malaysia \\[ms\\_MY\\] locale [\\#1403](https://github.com/fzaninotto/Faker/pull/1403) ([kenfai](https://github.com/kenfai))\n- Implementation of the function that generates Brazilian area codes fixed. [\\#1401](https://github.com/fzaninotto/Faker/pull/1401) ([jackmiras](https://github.com/jackmiras))\n- VISA retired the 13 digit PAN moved to new cardParams [\\#1400](https://github.com/fzaninotto/Faker/pull/1400) ([hppycoder](https://github.com/hppycoder))\n- Remove unused variable inside closure [\\#1395](https://github.com/fzaninotto/Faker/pull/1395) ([carusogabriel](https://github.com/carusogabriel))\n- .nz domain updates [\\#1393](https://github.com/fzaninotto/Faker/pull/1393) ([xurizaemon](https://github.com/xurizaemon))\n- Add licenceCode method in the to es\\_ES person provider [\\#1392](https://github.com/fzaninotto/Faker/pull/1392) ([ffiguereo](https://github.com/ffiguereo))\n- allow `randomElements` to accept a Traversable object [\\#1389](https://github.com/fzaninotto/Faker/pull/1389) ([browner12](https://github.com/browner12))\n- Doc: rg remove formatting [\\#1387](https://github.com/fzaninotto/Faker/pull/1387) ([emtudo](https://github.com/emtudo))\n- Add numbers with start 4 [\\#1386](https://github.com/fzaninotto/Faker/pull/1386) ([emtudo](https://github.com/emtudo))\n- update th\\_TH mobile number format [\\#1385](https://github.com/fzaninotto/Faker/pull/1385) ([earthpyy](https://github.com/earthpyy))\n- Translate country names for lv\\_LV provider. [\\#1383](https://github.com/fzaninotto/Faker/pull/1383) ([ronaldsgailis](https://github.com/ronaldsgailis))\n- Clean elses [\\#1382](https://github.com/fzaninotto/Faker/pull/1382) ([carusogabriel](https://github.com/carusogabriel))\n- French vat formatter [\\#1381](https://github.com/fzaninotto/Faker/pull/1381) ([ppelgrims](https://github.com/ppelgrims))\n- Replaces rtrim with preg\\_replace [\\#1380](https://github.com/fzaninotto/Faker/pull/1380) ([ppelgrims](https://github.com/ppelgrims))\n- Refactoring tests [\\#1375](https://github.com/fzaninotto/Faker/pull/1375) ([carusogabriel](https://github.com/carusogabriel))\n- Added link in readme to provider FakerRestaurant [\\#1374](https://github.com/fzaninotto/Faker/pull/1374) ([jzonta](https://github.com/jzonta))\n- Remove obsolete currency codes [\\#1373](https://github.com/fzaninotto/Faker/pull/1373) ([tpraxl](https://github.com/tpraxl))\n- \\[ru\\_RU\\] Updated countries and added source link [\\#1372](https://github.com/fzaninotto/Faker/pull/1372) ([ilyahoilik](https://github.com/ilyahoilik))\n- Test against PHP 7.2 [\\#1371](https://github.com/fzaninotto/Faker/pull/1371) ([carusogabriel](https://github.com/carusogabriel))\n- Feature: nl\\_BE text provider [\\#1370](https://github.com/fzaninotto/Faker/pull/1370) ([rauwebieten](https://github.com/rauwebieten))\n- default value for Payment::iban\\(\\) country code [\\#1369](https://github.com/fzaninotto/Faker/pull/1369) ([madmanmax](https://github.com/madmanmax))\n- skip test failing on bigendian [\\#1365](https://github.com/fzaninotto/Faker/pull/1365) ([remicollet](https://github.com/remicollet))\n- Update Person.php [\\#1364](https://github.com/fzaninotto/Faker/pull/1364) ([majamusan](https://github.com/majamusan))\n- Prevent errors on private methods [\\#1363](https://github.com/fzaninotto/Faker/pull/1363) ([petecoop](https://github.com/petecoop))\n- adds rijksregisternummer [\\#1361](https://github.com/fzaninotto/Faker/pull/1361) ([ppelgrims](https://github.com/ppelgrims))\n- Add secondary address to fr\\_FR provider [\\#1356](https://github.com/fzaninotto/Faker/pull/1356) ([nicodmf](https://github.com/nicodmf))\n- Add company provider for tr\\_TR [\\#1355](https://github.com/fzaninotto/Faker/pull/1355) ([yuks](https://github.com/yuks))\n- nb\\_NO provider updates [\\#1350](https://github.com/fzaninotto/Faker/pull/1350) ([alexqhj](https://github.com/alexqhj))\n- only test available date range on 32-bit [\\#1348](https://github.com/fzaninotto/Faker/pull/1348) ([remicollet](https://github.com/remicollet))\n- Bump PHPUnit version for namespace compatibility [\\#1345](https://github.com/fzaninotto/Faker/pull/1345) ([carusogabriel](https://github.com/carusogabriel))\n- Use PSR-1 for PHPUnit TestCase [\\#1344](https://github.com/fzaninotto/Faker/pull/1344) ([carusogabriel](https://github.com/carusogabriel))\n- Fix FR\\_fr 07 prefix mobile number generation [\\#1343](https://github.com/fzaninotto/Faker/pull/1343) ([svanpoeck](https://github.com/svanpoeck))\n- Update Text.php [\\#1339](https://github.com/fzaninotto/Faker/pull/1339) ([gulaandrij](https://github.com/gulaandrij))\n- Add two new company type in the Swiss Provider [\\#1336](https://github.com/fzaninotto/Faker/pull/1336) ([pvullioud](https://github.com/pvullioud))\n- Change symbol 'minus' with code 226 to 'minus' with code 45 [\\#1333](https://github.com/fzaninotto/Faker/pull/1333) ([Negasus](https://github.com/Negasus))\n- \\[sl\\_SI\\] Created provider for Company [\\#1331](https://github.com/fzaninotto/Faker/pull/1331) ([alesvaupotic](https://github.com/alesvaupotic))\n- Update city name [\\#1328](https://github.com/fzaninotto/Faker/pull/1328) ([s9801077](https://github.com/s9801077))\n- Fix \\#1305 realText in some cases breaks last character [\\#1326](https://github.com/fzaninotto/Faker/pull/1326) ([iamraccoon](https://github.com/iamraccoon))\n- Real Dutch postal codes [\\#1323](https://github.com/fzaninotto/Faker/pull/1323) ([ametad](https://github.com/ametad))\n- Added male and female titles for the en\\_ZA locale [\\#1321](https://github.com/fzaninotto/Faker/pull/1321) ([ViGouRCanberra](https://github.com/ViGouRCanberra))\n- Add German Email Providers [\\#1320](https://github.com/fzaninotto/Faker/pull/1320) ([Stoffo](https://github.com/Stoffo))\n- Fix \"Resource temporarily unavailable\" [\\#1319](https://github.com/fzaninotto/Faker/pull/1319) ([eberkund](https://github.com/eberkund))\n- Introduced the ability to specify a default timezone... [\\#1316](https://github.com/fzaninotto/Faker/pull/1316) ([telkins](https://github.com/telkins))\n- South African licence codes [\\#1315](https://github.com/fzaninotto/Faker/pull/1315) ([royalmitten](https://github.com/royalmitten))\n- Fix with incorrect name city. [\\#1309](https://github.com/fzaninotto/Faker/pull/1309) ([zzenmate](https://github.com/zzenmate))\n- Fixed type-o in readme under section about Language specific formatters [\\#1302](https://github.com/fzaninotto/Faker/pull/1302) ([espenkn](https://github.com/espenkn))\n- Update Person.php [\\#1298](https://github.com/fzaninotto/Faker/pull/1298) ([yappkahowe](https://github.com/yappkahowe))\n- Allow children classes to access self::$suffix [\\#1296](https://github.com/fzaninotto/Faker/pull/1296) ([greg0ire](https://github.com/greg0ire))\n- Fix with namespace payment provider for uk\\_UA [\\#1293](https://github.com/fzaninotto/Faker/pull/1293) ([zzenmate](https://github.com/zzenmate))\n- Update zh\\_TW text provider [\\#1292](https://github.com/fzaninotto/Faker/pull/1292) ([s9801077](https://github.com/s9801077))\n- Fix CURL status code in ImageTest.php [\\#1290](https://github.com/fzaninotto/Faker/pull/1290) ([Sanfra1407](https://github.com/Sanfra1407))\n- Tax Id for companies and new formats for es\\_VE [\\#1287](https://github.com/fzaninotto/Faker/pull/1287) ([DIOHz0r](https://github.com/DIOHz0r))\n- Added idNumber for nl\\_NL [\\#1283](https://github.com/fzaninotto/Faker/pull/1283) ([artorozenga](https://github.com/artorozenga))\n- Feature/en us company ein [\\#1273](https://github.com/fzaninotto/Faker/pull/1273) ([zachflower](https://github.com/zachflower))\n\n## 2017-08-15, v1.7.0\n\n- Added more Ukrainian banks [\\#1271](https://github.com/fzaninotto/Faker/pull/1271) ([iamraccoon](https://github.com/iamraccoon))\n- Hotfix/failing unit tests [\\#1269](https://github.com/fzaninotto/Faker/pull/1269) ([zachflower](https://github.com/zachflower))\n- Lock Travis-CI environment to Ubuntu Precise [\\#1268](https://github.com/fzaninotto/Faker/pull/1268) ([zachflower](https://github.com/zachflower))\n- Added Ukrainian job title [\\#1267](https://github.com/fzaninotto/Faker/pull/1267) ([iamraccoon](https://github.com/iamraccoon))\n- Add compliant en\\_US SSN generator [\\#1266](https://github.com/fzaninotto/Faker/pull/1266) ([zachflower](https://github.com/zachflower))\n- Added more Ukrainian streets and removed irrelevant names. Added more Ukrainian mobile formats [\\#1265](https://github.com/fzaninotto/Faker/pull/1265) ([iamraccoon](https://github.com/iamraccoon))\n- Add Internet Format for ja\\_JP. [\\#1260](https://github.com/fzaninotto/Faker/pull/1260) ([itigoppo](https://github.com/itigoppo))\n- rectify ISO 4217 codes [\\#1258](https://github.com/fzaninotto/Faker/pull/1258) ([eidng8](https://github.com/eidng8))\n- Corrected of grammar of Ukrainian middlenames and test added [\\#1257](https://github.com/fzaninotto/Faker/pull/1257) ([vladbuk](https://github.com/vladbuk))\n- Update ISO 4217 active codes [\\#1251](https://github.com/fzaninotto/Faker/pull/1251) ([eidng8](https://github.com/eidng8))\n- Update Composer File [\\#1248](https://github.com/fzaninotto/Faker/pull/1248) ([vinkla](https://github.com/vinkla))\n- Set capitals to false [\\#1243](https://github.com/fzaninotto/Faker/pull/1243) ([Stichoza](https://github.com/Stichoza))\n- Use static instead of self [\\#1242](https://github.com/fzaninotto/Faker/pull/1242) ([Stichoza](https://github.com/Stichoza))\n- Add VAT french format [\\#1241](https://github.com/fzaninotto/Faker/pull/1241) ([baptistedonaux](https://github.com/baptistedonaux))\n- Add swedish job titles [\\#1234](https://github.com/fzaninotto/Faker/pull/1234) ([vinkla](https://github.com/vinkla))\n- Name Simo shouldn't have comma in it [\\#1230](https://github.com/fzaninotto/Faker/pull/1230) ([simoheinonen](https://github.com/simoheinonen))\n- Fix: Add method annotation for ValidGenerator [\\#1223](https://github.com/fzaninotto/Faker/pull/1223) ([localheinz](https://github.com/localheinz))\n- Add real text for es\\_ES [\\#1220](https://github.com/fzaninotto/Faker/pull/1220) ([driade](https://github.com/driade))\n- Fix spelling errors [\\#1218](https://github.com/fzaninotto/Faker/pull/1218) ([driade](https://github.com/driade))\n- Fix spelling errors [\\#1217](https://github.com/fzaninotto/Faker/pull/1217) ([driade](https://github.com/driade))\n- Fixes typo [\\#1212](https://github.com/fzaninotto/Faker/pull/1212) ([skullboner](https://github.com/skullboner))\n- Add Person::middleName for ru\\_RU provider [\\#1209](https://github.com/fzaninotto/Faker/pull/1209) ([JustBlackBird](https://github.com/JustBlackBird))\n- Fix creditCardDetails type hint [\\#1208](https://github.com/fzaninotto/Faker/pull/1208) ([jejung](https://github.com/jejung))\n- Expand dictionaries for ru\\_RU locale [\\#1206](https://github.com/fzaninotto/Faker/pull/1206) ([pwsdotru](https://github.com/pwsdotru))\n- Fix ng\\_NG to en\\_NG [\\#1205](https://github.com/fzaninotto/Faker/pull/1205) ([raphaeldealmeida](https://github.com/raphaeldealmeida))\n- Add INN and KPP support for ru\\_RU locale [\\#1204](https://github.com/fzaninotto/Faker/pull/1204) ([pwsdotru](https://github.com/pwsdotru))\n- Remove break line on pt\\_PT Address format [\\#1203](https://github.com/fzaninotto/Faker/pull/1203) ([raphaeldealmeida](https://github.com/raphaeldealmeida))\n- Fix syntax of phpdoc boolean property [\\#1198](https://github.com/fzaninotto/Faker/pull/1198) ([pavelkovar](https://github.com/pavelkovar))\n- add en\\_HK provider [\\#1196](https://github.com/fzaninotto/Faker/pull/1196) ([miklcct](https://github.com/miklcct))\n- use secure https [\\#1186](https://github.com/fzaninotto/Faker/pull/1186) ([jpuck](https://github.com/jpuck))\n- Add PhoneNumberFormat for ja\\_JP. [\\#1185](https://github.com/fzaninotto/Faker/pull/1185) ([itigoppo](https://github.com/itigoppo))\n- Fix: Add class-level method annotations for DateTime provider [\\#1183](https://github.com/fzaninotto/Faker/pull/1183) ([localheinz](https://github.com/localheinz))\n- Add ar\\_SA Color Provider [\\#1182](https://github.com/fzaninotto/Faker/pull/1182) ([alhoqbani](https://github.com/alhoqbani))\n- Added uk\\_UA Payment provider with bank  name generator [\\#1181](https://github.com/fzaninotto/Faker/pull/1181) ([spaghettimaster](https://github.com/spaghettimaster))\n- Typos [\\#1177](https://github.com/fzaninotto/Faker/pull/1177) ([ankitpokhrel](https://github.com/ankitpokhrel))\n- Fix XML document example [\\#1176](https://github.com/fzaninotto/Faker/pull/1176) ([ankitpokhrel](https://github.com/ankitpokhrel))\n- Added Emoji to Miscellaneous [\\#1175](https://github.com/fzaninotto/Faker/pull/1175) ([thomasfdm](https://github.com/thomasfdm))\n- Typos and doc block fixes [\\#1170](https://github.com/fzaninotto/Faker/pull/1170) ([ankitpokhrel](https://github.com/ankitpokhrel))\n- Rewrote deprecated `each\\(\\)` usage [\\#1168](https://github.com/fzaninotto/Faker/pull/1168) ([hboomsma](https://github.com/hboomsma))\n- Refactor text method to remove duplication [\\#1163](https://github.com/fzaninotto/Faker/pull/1163) ([ankitpokhrel](https://github.com/ankitpokhrel))\n- Generate valid individual identification numbers kk\\_KZ [\\#1161](https://github.com/fzaninotto/Faker/pull/1161) ([YerlenZhubangaliyev](https://github.com/YerlenZhubangaliyev))\n- Added Address and Company \\[fa\\_IR\\] [\\#1160](https://github.com/fzaninotto/Faker/pull/1160) ([thisissorna](https://github.com/thisissorna))\n- Add Peruvian DNI generator [\\#1158](https://github.com/fzaninotto/Faker/pull/1158) ([jgwong](https://github.com/jgwong))\n- Removed double semicolon [\\#1154](https://github.com/fzaninotto/Faker/pull/1154) ([pjona](https://github.com/pjona))\n- Add prefixes for nl\\_NL [\\#1151](https://github.com/fzaninotto/Faker/pull/1151) ([hyperized](https://github.com/hyperized))\n- Separated male and female names for sr\\_RS locale. [\\#1144](https://github.com/fzaninotto/Faker/pull/1144) ([bogdanpet](https://github.com/bogdanpet))\n- Add personal ID, VAT for zh\\_TW [\\#1135](https://github.com/fzaninotto/Faker/pull/1135) ([Dagolin](https://github.com/Dagolin))\n- Updating ninth digit on whole country [\\#1132](https://github.com/fzaninotto/Faker/pull/1132) ([gpressutto5](https://github.com/gpressutto5))\n- Indian states added to en\\_IN locale [\\#1131](https://github.com/fzaninotto/Faker/pull/1131) ([jiveshsg](https://github.com/jiveshsg))\n- Add Text provider for ro\\_MD [\\#1129](https://github.com/fzaninotto/Faker/pull/1129) ([wecerny](https://github.com/wecerny))\n- Add strict to randomNumber example [\\#1124](https://github.com/fzaninotto/Faker/pull/1124) ([leepownall](https://github.com/leepownall))\n- Say Eloquent is supported [\\#1123](https://github.com/fzaninotto/Faker/pull/1123) ([guidocella](https://github.com/guidocella))\n- Link Eloquent Populator [\\#1120](https://github.com/fzaninotto/Faker/pull/1120) ([guidocella](https://github.com/guidocella))\n- Removed dead code from Luhn.php [\\#1118](https://github.com/fzaninotto/Faker/pull/1118) ([Newman101](https://github.com/Newman101))\n- Improve Internet::transliterate performance [\\#1112](https://github.com/fzaninotto/Faker/pull/1112) ([dunglas](https://github.com/dunglas))\n- fix typo [\\#1109](https://github.com/fzaninotto/Faker/pull/1109) ([johannesnagl](https://github.com/johannesnagl))\n- \\[cs\\_CZ\\] Fixed Czech phone numbers [\\#1108](https://github.com/fzaninotto/Faker/pull/1108) ([tomasbedrich](https://github.com/tomasbedrich))\n- Update MasterCard BIN Range [\\#1103](https://github.com/fzaninotto/Faker/pull/1103) ([andysnell](https://github.com/andysnell))\n- Add biggest german cities [\\#1102](https://github.com/fzaninotto/Faker/pull/1102) ([Konafets](https://github.com/Konafets))\n- Change postal code format for ko\\_KR [\\#1094](https://github.com/fzaninotto/Faker/pull/1094) ([coozplz](https://github.com/coozplz))\n- Introduced the ability to specify the timezone for dateTimeThis\\*\\(\\) methods [\\#1090](https://github.com/fzaninotto/Faker/pull/1090) ([telkins](https://github.com/telkins))\n- Fixed Issue \\#1086 [\\#1088](https://github.com/fzaninotto/Faker/pull/1088) ([Newman101](https://github.com/Newman101))\n- \\[ja\\_JP\\]kana of Japanese name by gender. [\\#1087](https://github.com/fzaninotto/Faker/pull/1087) ([itigoppo](https://github.com/itigoppo))\n- Fix unused code [\\#1083](https://github.com/fzaninotto/Faker/pull/1083) ([borgogelli](https://github.com/borgogelli))\n- Amended permissions for en\\_GB AddressTest.php [\\#1071](https://github.com/fzaninotto/Faker/pull/1071) ([Newman101](https://github.com/Newman101))\n- Ensure unique IDs in randomHtml [\\#1068](https://github.com/fzaninotto/Faker/pull/1068) ([vlakoff](https://github.com/vlakoff))\n- Updated \\[de\\_DE\\] city names [\\#1067](https://github.com/fzaninotto/Faker/pull/1067) ([plxx](https://github.com/plxx))\n- Update method signature in Generator phpdoc [\\#1066](https://github.com/fzaninotto/Faker/pull/1066) ([vlakoff](https://github.com/vlakoff))\n- Add Thai providers [\\#1065](https://github.com/fzaninotto/Faker/pull/1065) ([tuwannu](https://github.com/tuwannu))\n- \\(Minor\\) Fixed the default locale stated in the readme [\\#1064](https://github.com/fzaninotto/Faker/pull/1064) ([taylankasap](https://github.com/taylankasap))\n- \\[nl\\_NL\\] Make person provider behave more realistically [\\#1061](https://github.com/fzaninotto/Faker/pull/1061) ([curry684](https://github.com/curry684))\n- Add allowDuplicates option to randomElements\\(\\) [\\#1060](https://github.com/fzaninotto/Faker/pull/1060) ([vlakoff](https://github.com/vlakoff))\n- Docblocks: Add some missing @method tags [\\#1059](https://github.com/fzaninotto/Faker/pull/1059) ([Kurre](https://github.com/Kurre))\n- \\[fi\\_FI\\] Improve phone number generator [\\#1054](https://github.com/fzaninotto/Faker/pull/1054) ([Kurre](https://github.com/Kurre))\n- Add personalIdentityNumber\\(\\) to fi\\_FI/Person.php [\\#1053](https://github.com/fzaninotto/Faker/pull/1053) ([oittaa](https://github.com/oittaa))\n- Issue \\#1041 [\\#1052](https://github.com/fzaninotto/Faker/pull/1052) ([daleattree](https://github.com/daleattree))\n- Update Text.php [\\#1051](https://github.com/fzaninotto/Faker/pull/1051) ([gulaandrij](https://github.com/gulaandrij))\n- Fix French phone numbers with 07 prefix [\\#1046](https://github.com/fzaninotto/Faker/pull/1046) ([fzaninotto](https://github.com/fzaninotto))\n- \\[Generator.php\\] mt\\_rand\\(\\) changed in PHP 7.1 [\\#1045](https://github.com/fzaninotto/Faker/pull/1045) ([oittaa](https://github.com/oittaa))\n- Add 'FI' to Payment Provider [\\#1044](https://github.com/fzaninotto/Faker/pull/1044) ([oittaa](https://github.com/oittaa))\n- Added id number generator to Person Provider for the en\\_ZA locale [\\#1039](https://github.com/fzaninotto/Faker/pull/1039) ([smithandre](https://github.com/smithandre))\n- \\[Feature\\] Add nigerian provider [\\#1030](https://github.com/fzaninotto/Faker/pull/1030) ([elchroy](https://github.com/elchroy))\n- \\[pl\\_PL\\] Handle state. [\\#1029](https://github.com/fzaninotto/Faker/pull/1029) ([piotrooo](https://github.com/piotrooo))\n- Fixed polish text - change '--' into '-'. [\\#1027](https://github.com/fzaninotto/Faker/pull/1027) ([piotrooo](https://github.com/piotrooo))\n- Update Text.php [\\#1025](https://github.com/fzaninotto/Faker/pull/1025) ([gulaandrij](https://github.com/gulaandrij))\n- Adding Nationalized Citizens to DNI in Person.php [\\#1021](https://github.com/fzaninotto/Faker/pull/1021) ([celisflen-bers](https://github.com/celisflen-bers))\n- Add nik to indonesia [\\#1019](https://github.com/fzaninotto/Faker/pull/1019) ([Nuffic](https://github.com/Nuffic))\n- fix mb\\_substr missing parameter error when generating japanese string with realText method [\\#1018](https://github.com/fzaninotto/Faker/pull/1018) ([horan-geeker](https://github.com/horan-geeker))\n- IBAN Formatters for New Locales [\\#1015](https://github.com/fzaninotto/Faker/pull/1015) ([okj579](https://github.com/okj579))\n- German Bank Names [\\#1014](https://github.com/fzaninotto/Faker/pull/1014) ([okj579](https://github.com/okj579))\n- Adding countries for pl\\_PL provider [\\#1009](https://github.com/fzaninotto/Faker/pull/1009) ([mertcanesen](https://github.com/mertcanesen))\n- Adding Pattern Lab plugin to list of 3rd party libraries [\\#1008](https://github.com/fzaninotto/Faker/pull/1008) ([EvanLovely](https://github.com/EvanLovely))\n- Korea top 100 lastName [\\#1006](https://github.com/fzaninotto/Faker/pull/1006) ([tael](https://github.com/tael))\n- Use real Belgian postcodes instead of random number [\\#1004](https://github.com/fzaninotto/Faker/pull/1004) ([toonevdb](https://github.com/toonevdb))\n- Add bankAccountNumber implementations [\\#1000](https://github.com/fzaninotto/Faker/pull/1000) ([akramfares](https://github.com/akramfares))\n- Generates a random NIR number \\(fr\\_FR\\) [\\#997](https://github.com/fzaninotto/Faker/pull/997) ([Ultim4T0m](https://github.com/Ultim4T0m))\n- \\#989 Fix country typo [\\#996](https://github.com/fzaninotto/Faker/pull/996) ([adriantombu](https://github.com/adriantombu))\n- adding back CNP [\\#988](https://github.com/fzaninotto/Faker/pull/988) ([the-noob](https://github.com/the-noob))\n- Fix phpunit tests fail on 64-bit systems \\#982 [\\#983](https://github.com/fzaninotto/Faker/pull/983) ([Powerhead13](https://github.com/Powerhead13))\n- Remove trailing dot in username if any [\\#975](https://github.com/fzaninotto/Faker/pull/975) ([vlakoff](https://github.com/vlakoff))\n- HTML Lorem [\\#971](https://github.com/fzaninotto/Faker/pull/971) ([rudkjobing](https://github.com/rudkjobing))\n- Fix a mixup between male and female last names in Icelandic. [\\#970](https://github.com/fzaninotto/Faker/pull/970) ([arthur-olafsson](https://github.com/arthur-olafsson))\n- Remove duplicate [\\#969](https://github.com/fzaninotto/Faker/pull/969) ([mijgame](https://github.com/mijgame))\n- fix \\[zh\\_CN\\]PhoneNumber illegal operator prefix [\\#966](https://github.com/fzaninotto/Faker/pull/966) ([zhwei](https://github.com/zhwei))\n- es\\_ES: Generate VAT Number [\\#964](https://github.com/fzaninotto/Faker/pull/964) ([miguelgf](https://github.com/miguelgf))\n- Update Image.php [\\#963](https://github.com/fzaninotto/Faker/pull/963) ([gulaandrij](https://github.com/gulaandrij))\n- Remove cnp formatter from RO\\_ro locale \\(fails tests\\) [\\#962](https://github.com/fzaninotto/Faker/pull/962) ([fzaninotto](https://github.com/fzaninotto))\n- Adding valid en\\_GB postcodes [\\#961](https://github.com/fzaninotto/Faker/pull/961) ([the-noob](https://github.com/the-noob))\n- Adding Text for ro\\_RO [\\#959](https://github.com/fzaninotto/Faker/pull/959) ([the-noob](https://github.com/the-noob))\n- Minor: Fixed trailing space in DateTime provider [\\#956](https://github.com/fzaninotto/Faker/pull/956) ([tifabien](https://github.com/tifabien))\n- Remove 'Stripper' from en\\_US job titles [\\#954](https://github.com/fzaninotto/Faker/pull/954) ([amcsi](https://github.com/amcsi))\n- fix 32bits issue [\\#953](https://github.com/fzaninotto/Faker/pull/953) ([remicollet](https://github.com/remicollet))\n- Fix EAN8 checkSum generator [\\#951](https://github.com/fzaninotto/Faker/pull/951) ([MatthieuMota](https://github.com/MatthieuMota))\n- Fixed description and the use of early undocumented parameters. [\\#949](https://github.com/fzaninotto/Faker/pull/949) ([andrey-helldar](https://github.com/andrey-helldar))\n- Pushing new mobile prefixes in philippines [\\#944](https://github.com/fzaninotto/Faker/pull/944) ([napoleon101392](https://github.com/napoleon101392))\n- Update Company.php [\\#943](https://github.com/fzaninotto/Faker/pull/943) ([thiagotalma](https://github.com/thiagotalma))\n- Fix to Issue \\#935 - German Locale [\\#936](https://github.com/fzaninotto/Faker/pull/936) ([Newman101](https://github.com/Newman101))\n- el\\_CY Locale [\\#930](https://github.com/fzaninotto/Faker/pull/930) ([softius](https://github.com/softius))\n- Add phpdoc method dateTimeInInterval in Generator.php [\\#926](https://github.com/fzaninotto/Faker/pull/926) ([KeithYeh](https://github.com/KeithYeh))\n- Harmonize fr\\_\\*\\Company [\\#918](https://github.com/fzaninotto/Faker/pull/918) ([Max13](https://github.com/Max13))\n- Fix: fix invalid parameter of mb\\_substr\\(\\) [\\#917](https://github.com/fzaninotto/Faker/pull/917) ([tkawaji](https://github.com/tkawaji))\n- kk\\_KZ Company/person identification numbers unit tests [\\#916](https://github.com/fzaninotto/Faker/pull/916) ([YerlenZhubangaliyev](https://github.com/YerlenZhubangaliyev))\n- ka\\_GE: overall improvements to ka\\_GE locale [\\#913](https://github.com/fzaninotto/Faker/pull/913) ([hertzg](https://github.com/hertzg))\n- Fix: Do not pick a random float less than minimum [\\#909](https://github.com/fzaninotto/Faker/pull/909) ([localheinz](https://github.com/localheinz))\n- Fix: Prefer dependencies installed from dist [\\#908](https://github.com/fzaninotto/Faker/pull/908) ([localheinz](https://github.com/localheinz))\n- Add a building number with letter to German speaking locales. [\\#903](https://github.com/fzaninotto/Faker/pull/903) ([markuspoerschke](https://github.com/markuspoerschke))\n- \\[RFR\\] Remove parts of the hu\\_HU address formatters [\\#902](https://github.com/fzaninotto/Faker/pull/902) ([fzaninotto](https://github.com/fzaninotto))\n- use Luhn to calculate ar\\_SA id numbers. [\\#875](https://github.com/fzaninotto/Faker/pull/875) ([FooBarQuaxx](https://github.com/FooBarQuaxx))\n- Fix Doctrine ODM Support [\\#489](https://github.com/fzaninotto/Faker/pull/489) ([cbourgois](https://github.com/cbourgois))\n\n\n## 2016-04-29, v1.6.0\n\n- Remove parts of the Hungarian (hu\\_HU) address formatters [\\#902](https://github.com/fzaninotto/Faker/pull/902) ([fzaninotto](https://github.com/fzaninotto))\n- Renamed norwegian (nb\\_NO) locale [\\#901](https://github.com/fzaninotto/Faker/pull/901) ([fzaninotto](https://github.com/fzaninotto))\n- Improveed German (de\\_DE) titles [\\#897](https://github.com/fzaninotto/Faker/pull/897) ([christianbartels](https://github.com/christianbartels))\n- Added VAT formatter to nl\\_BE and fr\\_BE providers [\\#896](https://github.com/fzaninotto/Faker/pull/896) ([anvanza](https://github.com/anvanza))\n- Fixed provider namespace for Lithuanian (lt\\_LT) [\\#894](https://github.com/fzaninotto/Faker/pull/894) ([sanis](https://github.com/sanis))\n- Removed unnecessary (and incompatible) license from Russian and Ukrainian (uk\\_UA & ru\\_RU) Text providers [\\#892](https://github.com/fzaninotto/Faker/pull/892) ([Newman101](https://github.com/Newman101))\n- Improved `languageCode` formatted to include all ISO-639-1 standard codes [\\#889](https://github.com/fzaninotto/Faker/pull/889) ([andrewnicols](https://github.com/andrewnicols))\n- Improved Hungarian provider [\\#883](https://github.com/fzaninotto/Faker/pull/883) ([balping](https://github.com/balping))\n- Fixed typo in Austrian Person provider [\\#880](https://github.com/fzaninotto/Faker/pull/880) ([xelan](https://github.com/xelan))\n- Added Chines (zh\\_CN) `catchPhrase` formatter [\\#878](https://github.com/fzaninotto/Faker/pull/878) ([z-song](https://github.com/z-song))\n- Added mention of Brazilian (pt\\_BR) providers in readme [\\#877](https://github.com/fzaninotto/Faker/pull/877) ([iget-master](https://github.com/iget-master))\n- Updated composer `require` section to allow PHP 7 in safer way [\\#874](https://github.com/fzaninotto/Faker/pull/874) ([TomasVotruba](https://github.com/TomasVotruba))\n- Added Greek (el\\_GR) `mobilePhoneNumber` and `tollFreeNumber` formatters [\\#869](https://github.com/fzaninotto/Faker/pull/869) ([sebdesign](https://github.com/sebdesign))\n- Added Lorempixel check for `ImageTest.php` to avoid test fails when the service is offline [\\#866](https://github.com/fzaninotto/Faker/pull/866) ([Newman101](https://github.com/Newman101))\n- Added Chinese (zh\\_CN) Providers [\\#864](https://github.com/fzaninotto/Faker/pull/864) ([z-song](https://github.com/z-song))\n- Added unit tests for Canadian (en\\_CA) provider [\\#862](https://github.com/fzaninotto/Faker/pull/862) ([Newman101](https://github.com/Newman101))\n- Added Dutch BTW \\(vat\\) Number [\\#861](https://github.com/fzaninotto/Faker/pull/861) ([LauLaman](https://github.com/LauLaman))\n- Improved Australian (en\\_AU) provider [\\#858](https://github.com/fzaninotto/Faker/pull/858) ([Newman101](https://github.com/Newman101))\n- Added Propel2 ORM support [\\#852](https://github.com/fzaninotto/Faker/pull/852) ([iTechDhaval](https://github.com/iTechDhaval))\n- Added en\\_IN unit test for `Address.php` [\\#849](https://github.com/fzaninotto/Faker/pull/849) ([Newman101](https://github.com/Newman101))\n- Updated docs to clarify that `randomElements` does not repeat input elements [\\#848](https://github.com/fzaninotto/Faker/pull/848) ([sustmi](https://github.com/sustmi))\n- Optimized Taiwanese (zh\\_TW) `realText` provider [\\#844](https://github.com/fzaninotto/Faker/pull/844) ([Newman101](https://github.com/Newman101))\n- Added more Iranian (fa\\_IR) TLDs [\\#843](https://github.com/fzaninotto/Faker/pull/843) ([VagrantStory](https://github.com/VagrantStory))\n- Added Hebrew (he\\_IL) `country` formatter [\\#841](https://github.com/fzaninotto/Faker/pull/841) ([yonirom](https://github.com/yonirom))\n- Documented `boolean` formatter [\\#840](https://github.com/fzaninotto/Faker/pull/840) ([danieliancu](https://github.com/danieliancu))\n- Fixed modifiers anchor readme [\\#838](https://github.com/fzaninotto/Faker/pull/838) ([danieliancu](https://github.com/danieliancu))\n- Added Dutch (nl\\_NL) real text provider [\\#837](https://github.com/fzaninotto/Faker/pull/837) ([endroid](https://github.com/endroid))\n- Added `valid` modifier [\\#836](https://github.com/fzaninotto/Faker/pull/836) ([fzaninotto](https://github.com/fzaninotto))\n- Added Iranian (fa\\_IR) `PhoneNumber` provider [\\#833](https://github.com/fzaninotto/Faker/pull/833) ([ghost](https://github.com/ghost))\n- Add Brazilian (pt\\_BR) `region` and `regionAbbr` formatters [\\#828](https://github.com/fzaninotto/Faker/pull/828) ([francinaldo](https://github.com/francinaldo))\n- Improved Austrian (de\\_AT) names, states, and realtext [\\#826](https://github.com/fzaninotto/Faker/pull/826) ([Findus23](https://github.com/Findus23))\n- Improved German (de\\_DE) names [\\#825](https://github.com/fzaninotto/Faker/pull/825) ([Findus23](https://github.com/Findus23))\n- Improved Latvian (lv\\_LV) first names [\\#823](https://github.com/fzaninotto/Faker/pull/823) ([veisis](https://github.com/veisis))\n- Improved Latvian (lv\\_LV) `phoneNumber` formatter [\\#822](https://github.com/fzaninotto/Faker/pull/822) ([veisis](https://github.com/veisis))\n- Updated phpDoc link to IBAN format reference in `Payment` provider [\\#821](https://github.com/fzaninotto/Faker/pull/821) ([god107](https://github.com/god107))\n- Updated Sport ORM populator to populate values for numeric fields [\\#820](https://github.com/fzaninotto/Faker/pull/820) ([urisavka](https://github.com/urisavka))\n- Updated Chinese (zh\\_CN) operators' phone number prefix. [\\#819](https://github.com/fzaninotto/Faker/pull/819) ([vistart](https://github.com/vistart))\n- Optimized Spot ORM `EntityPopulator` [\\#817](https://github.com/fzaninotto/Faker/pull/817) ([Newman101](https://github.com/Newman101))\n- Added Korean (ko\\_KR) `realText` formatter [\\#815](https://github.com/fzaninotto/Faker/pull/815) ([jdssem](https://github.com/jdssem))\n- Updated `imageUrl` formatter phpDoc [\\#814](https://github.com/fzaninotto/Faker/pull/814) ([jonwurtzler](https://github.com/jonwurtzler))\n- Optimized Taiwanese (zh\\_TW) text provider [\\#809](https://github.com/fzaninotto/Faker/pull/809) ([BePsvPT](https://github.com/BePsvPT))\n- Added strict comparison to Czech (cs\\_CS) `birthNumber` formatter [\\#807](https://github.com/fzaninotto/Faker/pull/807) ([Newman101](https://github.com/Newman101))\n- Added Greek (el\\_GR) `realText` formatter [\\#805](https://github.com/fzaninotto/Faker/pull/805) ([hootlex](https://github.com/hootlex))\n- Added Simplified Chinese \\(zh\\_CN\\) `state` and `stateAbbr` formatters [\\#804](https://github.com/fzaninotto/Faker/pull/804) ([zhanghuanchong](https://github.com/zhanghuanchong))\n- Update `Image` provider to allow generation of grayscale images [\\#801](https://github.com/fzaninotto/Faker/pull/801) ([neutralrockets](https://github.com/neutralrockets))\n- Fixed Taiwanese (zh_TW) incorrect `mb_substr()` arguments [\\#799](https://github.com/fzaninotto/Faker/pull/799) ([BePsvPT](https://github.com/BePsvPT))\n- Added Spot ORM populator [\\#796](https://github.com/fzaninotto/Faker/pull/796) ([urisavka](https://github.com/urisavka))\n- Added Italian (it\\_IT) `vatId` and `taxId` formatters [\\#790](https://github.com/fzaninotto/Faker/pull/790) ([brainrepo](https://github.com/brainrepo))\n- Added some fixes to Armenian (hy\\_AM) locale [\\#788](https://github.com/fzaninotto/Faker/pull/788) ([mhamlet](https://github.com/mhamlet))\n- Removed duplicate entries in `toAscii()` transliteration table, used in `Internet` provider [\\#787](https://github.com/fzaninotto/Faker/pull/787) ([vlakoff](https://github.com/vlakoff))\n- Added Indian (en\\_IN) providers [\\#785](https://github.com/fzaninotto/Faker/pull/785) ([kartiksomani](https://github.com/kartiksomani))\n- Removed duplicate country names in various locales, removed non-random country arrays [\\#784](https://github.com/fzaninotto/Faker/pull/784) ([fzaninotto](https://github.com/fzaninotto))\n- Improved Swiss (de\\_CH) phone numbers [\\#782](https://github.com/fzaninotto/Faker/pull/782) ([z38](https://github.com/z38))\n- Added Swiss (de\\_CH) names [\\#781](https://github.com/fzaninotto/Faker/pull/781) ([z38](https://github.com/z38))\n- Make capitalization of first word optional in Text Provider [\\#778](https://github.com/fzaninotto/Faker/pull/778) ([LagunaJavier](https://github.com/LagunaJavier))\n- Added Georgian (ka\\_GE) providers [\\#777](https://github.com/fzaninotto/Faker/pull/777) ([akalongman](https://github.com/akalongman))\n- Fix CakePHP populator [\\#776](https://github.com/fzaninotto/Faker/pull/776) ([daniel-mueller](https://github.com/daniel-mueller))\n- Added unit tests for `Address` provider in many locales [\\#775](https://github.com/fzaninotto/Faker/pull/775) [\\#773](https://github.com/fzaninotto/Faker/pull/773) [\\#772](https://github.com/fzaninotto/Faker/pull/772) [\\#767](https://github.com/fzaninotto/Faker/pull/767) [\\#765](https://github.com/fzaninotto/Faker/pull/765) [\\#764](https://github.com/fzaninotto/Faker/pull/764) [\\#758](https://github.com/fzaninotto/Faker/pull/758) [\\#756](https://github.com/fzaninotto/Faker/pull/756) [\\#747](https://github.com/fzaninotto/Faker/pull/747) [\\#741](https://github.com/fzaninotto/Faker/pull/741) ([Newman101](https://github.com/Newman101))\n- Added `dbi` formatter to Spanish (es\\_ES) Person provider [\\#763](https://github.com/fzaninotto/Faker/pull/763) ([mikk150](https://github.com/mikk150))\n- Added South Africa (en\\_ZA) locale [\\#761](https://github.com/fzaninotto/Faker/pull/761) ([smithandre](https://github.com/smithandre)) [\\#760](https://github.com/fzaninotto/Faker/pull/760) ([smithandre](https://github.com/smithandre)) [\\#759](https://github.com/fzaninotto/Faker/pull/759) ([smithandre](https://github.com/smithandre))\n- Added E.164 phone number generator [\\#753](https://github.com/fzaninotto/Faker/pull/753) ([daleattree](https://github.com/daleattree))\n- Fixed serialization issue in `unique` modifier [\\#749](https://github.com/fzaninotto/Faker/pull/749) ([EmanueleMinotto](https://github.com/EmanueleMinotto))\n- Added Switzerland (de\\_CH, fr\\_CH, it\\_CH) providers [\\#739](https://github.com/fzaninotto/Faker/pull/739) ([r3h6](https://github.com/r3h6))\n- Added PHPDocs, removed unused variable [\\#738](https://github.com/fzaninotto/Faker/pull/738) ([daniel-mueller](https://github.com/daniel-mueller))\n- Fixed building numbers to have non-zero first bumber [\\#737](https://github.com/fzaninotto/Faker/pull/737) ([jmauerhan](https://github.com/jmauerhan))\n- Updated ninth digit for Brazilian cell phone numbers [\\#734](https://github.com/fzaninotto/Faker/pull/734) ([igorsantos07](https://github.com/igorsantos07))\n- Simplified Factory code [\\#732](https://github.com/fzaninotto/Faker/pull/732) ([vlakoff](https://github.com/vlakoff))\n- Added mention of [images-generator](https://github.com/bruceheller/images-generator) in readme [\\#731](https://github.com/fzaninotto/Faker/pull/731) ([bruceheller](https://github.com/bruceheller))\n- Optimize Internet::toAscii\\(\\) by using a static cache and translitteration [\\#730](https://github.com/fzaninotto/Faker/pull/730) [\\#729](https://github.com/fzaninotto/Faker/pull/729)\n[\\#725](https://github.com/fzaninotto/Faker/pull/725) [\\#724](https://github.com/fzaninotto/Faker/pull/724) ([vlakoff](https://github.com/vlakoff))\n- Added more English (en\\_GB) Phone Number formats [\\#721](https://github.com/fzaninotto/Faker/pull/721) ([nickwebcouk](https://github.com/nickwebcouk))\n- Cleaned up `use` statements across the code [\\#719](https://github.com/fzaninotto/Faker/pull/719) ([pomaxa](https://github.com/pomaxa))\n- Fixed CackePHP populator [\\#718](https://github.com/fzaninotto/Faker/pull/718) ([sdustinh](https://github.com/sdustinh))\n- Cleaned up various phpmd notices [\\#715](https://github.com/fzaninotto/Faker/pull/715) ([pomaxa](https://github.com/pomaxa))\n- Added `Color` provider to Latvian (lv_LV) locale [\\#714](https://github.com/fzaninotto/Faker/pull/714) ([pomaxa](https://github.com/pomaxa))\n- Fixed bad randomization in Doctrine populator [\\#713](https://github.com/fzaninotto/Faker/pull/713) ([pomaxa](https://github.com/pomaxa))\n- Added Mongolian (mn\\_MN) providers [\\#709](https://github.com/fzaninotto/Faker/pull/709) ([selmonal](https://github.com/selmonal))\n- Improved Australian (en\\_AU) `postcode` formatter [\\#703](https://github.com/fzaninotto/Faker/pull/703) ([xfxf](https://github.com/xfxf))\n- Added support for asterisks in `bothify` and `optimize` [\\#701](https://github.com/fzaninotto/Faker/pull/701) ([nineinchnick](https://github.com/nineinchnick))\n- Fixed important distinction between ORM and database framework in README’s reference to an external Faker provider for POMM that I have never even tested. Anyway, POMM is highly recommended if you are a Postgres fan, or if you want to please Grégoire and help him finish his lifelong project of listening to music on a hi-fi audio equipment he built from his own hands [\\#696](https://github.com/fzaninotto/Faker/pull/696) ([chanmix51](https://github.com/chanmix51))\n- Fixed example `text()` output in README [\\#694](https://github.com/fzaninotto/Faker/pull/694) ([vlakoff](https://github.com/vlakoff))\n- Added mention of CakePHP 2.x Seeder Plugin to readme [\\#691](https://github.com/fzaninotto/Faker/pull/691) ([ravage84](https://github.com/ravage84))\n- Fixed invalid email bug for Korean (ko\\_KR) [\\#690](https://github.com/fzaninotto/Faker/pull/690) ([pearlc](https://github.com/pearlc))\n- Removed an invalid Dutch (nl\\_NL) lastname that breaks email generator [\\#689](https://github.com/fzaninotto/Faker/pull/689) ([SpaceK33z](https://github.com/SpaceK33z))\n- Updated `numberBetween()` to be order agnostic [\\#683](https://github.com/fzaninotto/Faker/pull/683) ([xfxf](https://github.com/xfxf))\n- Added several English (en\\_US) bank-related formatters [\\#682](https://github.com/fzaninotto/Faker/pull/682) ([okj579](https://github.com/okj579))\n- Fixed `ipv4` formatter to avoid generating special purpose addresses [\\#681](https://github.com/fzaninotto/Faker/pull/681) ([ravage84](https://github.com/ravage84))\n- Moved `intl` extension to `require-dev` in `composer.json` file [\\#680](https://github.com/fzaninotto/Faker/pull/680) ([jaschweder](https://github.com/jaschweder))\n- Added more Turkish (tr\\_TR) phones number formats [\\#678](https://github.com/fzaninotto/Faker/pull/678) ([Quanthir](https://github.com/Quanthir))\n- Fixed primary Key warning in CakePHP ORM populator [\\#677](https://github.com/fzaninotto/Faker/pull/677) ([davidyell](https://github.com/davidyell))\n- Added time zone support for provider methods returning DateTime instance [\\#675](https://github.com/fzaninotto/Faker/pull/675) ([bishopb](https://github.com/bishopb))\n- Removed trailing spaces from some Argentinian (es\\_AR) female first names [\\#674](https://github.com/fzaninotto/Faker/pull/674) ([ivanmirson](https://github.com/ivanmirson))\n- Added Lithuanian (lt\\_LT) locale [\\#673](https://github.com/fzaninotto/Faker/pull/673) ([ekateiva](https://github.com/ekateiva))\n- Added mention of Alice to readme [\\#665](https://github.com/fzaninotto/Faker/pull/665) ([Seldaek](https://github.com/Seldaek))\n- Fixed namespace in tests [\\#663](https://github.com/fzaninotto/Faker/pull/663) ([localheinz](https://github.com/localheinz))\n- Fixed trailing spaces in `Color` provider [\\#662](https://github.com/fzaninotto/Faker/pull/662) ([apsylone](https://github.com/apsylone))\n- Removed duplicate country names in Russian (ru\\_RU) `Address` provider [\\#659](https://github.com/fzaninotto/Faker/pull/659) ([nurolopher](https://github.com/nurolopher))\n- Added `rgba` formatter to `Color` provider [\\#653](https://github.com/fzaninotto/Faker/pull/653) ([apsylone](https://github.com/apsylone))\n- Fixed bad randomization in CakePHP populator [\\#648](https://github.com/fzaninotto/Faker/pull/648) ([jadb](https://github.com/jadb))\n- Updated phpunit configuration to better use colors [\\#643](https://github.com/fzaninotto/Faker/pull/643) ([localheinz](https://github.com/localheinz))\n- Updated `makefile` to install dev dependencies by default [\\#642](https://github.com/fzaninotto/Faker/pull/642) ([localheinz](https://github.com/localheinz))\n- Updated Travis configuration to cache dependencies between builds [\\#641](https://github.com/fzaninotto/Faker/pull/641) ([localheinz](https://github.com/localheinz))\n- Added SVG badge to readme for displaying Travis build status [\\#640](https://github.com/fzaninotto/Faker/pull/640) ([localheinz](https://github.com/localheinz))\n- Added Croatian (hr\\_HR) locale [\\#638](https://github.com/fzaninotto/Faker/pull/638) ([toniperic](https://github.com/toniperic))\n- Updated `dateTimeBetween` PHPDoc [\\#635](https://github.com/fzaninotto/Faker/pull/635) ([theofidry](https://github.com/theofidry))\n- Add mention of Symfony2 bundles in readme [\\#634](https://github.com/fzaninotto/Faker/pull/634) ([theofidry](https://github.com/theofidry))\n- Added Hebrew (he\\_IL) locale [\\#633](https://github.com/fzaninotto/Faker/pull/633) ([yonirom](https://github.com/yonirom))\n- Updated `seed` to accept non-integer seeds [\\#632](https://github.com/fzaninotto/Faker/pull/632) ([theofidry](https://github.com/theofidry))\n- Added DocBlock to `Factory::create()` [\\#631](https://github.com/fzaninotto/Faker/pull/631) ([tonynelson19](https://github.com/tonynelson19))\n- Added `jobTitle` generator [\\#630](https://github.com/fzaninotto/Faker/pull/630) ([gregoryduckworth](https://github.com/gregoryduckworth))\n- Updated Chinese (zh\\_CN) `Person` provider to generate more correct names [\\#628](https://github.com/fzaninotto/Faker/pull/628) ([phoenixgao](https://github.com/phoenixgao))\n- Updated Brazilian (pt\\_BR) `cellphone` formatter to make it more flexible [\\#623](https://github.com/fzaninotto/Faker/pull/623) ([igorsantos07](https://github.com/igorsantos07))\n- Add Arabic for Saudi Arabia (ar\\_SA) locale [\\#618](https://github.com/fzaninotto/Faker/pull/618) ([ibrasho](https://github.com/ibrasho))\n- Updated en\\_US phone numbers [\\#615](https://github.com/fzaninotto/Faker/pull/615) ([okj579](https://github.com/okj579))\n- Fixed typos in variable names and exceptions [\\#614](https://github.com/fzaninotto/Faker/pull/614) ([pborreli](https://github.com/pborreli))\n- Added a table of contents to the readme file. [\\#613](https://github.com/fzaninotto/Faker/pull/613) ([camilopayan](https://github.com/camilopayan))\n- Added Brazilian (es_BR) credit card formatters [\\#608](https://github.com/fzaninotto/Faker/pull/608) ([igorsantos07](https://github.com/igorsantos07))\n- Updated `iban` formatter to be cross-locale [\\#607](https://github.com/fzaninotto/Faker/pull/607) ([okj579](https://github.com/okj579))\n- Improved ORM name guesser logic [\\#606](https://github.com/fzaninotto/Faker/pull/606) ([watermanio](https://github.com/watermanio))\n- Fixed doc typo [\\#605](https://github.com/fzaninotto/Faker/pull/605) ([igorsantos07](https://github.com/igorsantos07))\n- Removed executable bits [\\#593](https://github.com/fzaninotto/Faker/pull/593) ([siwinski](https://github.com/siwinski))\n- Fixed `iban` generator [\\#590](https://github.com/fzaninotto/Faker/pull/590) ([okj579](https://github.com/okj579))\n- Added Philippines (en\\_PH) `mobileNumber` formatter [\\#589](https://github.com/fzaninotto/Faker/pull/589) ([lozadaOmr](https://github.com/lozadaOmr))\n- Added support for min / max params in `latitude` and `longitude` formatters [\\#570](https://github.com/fzaninotto/Faker/pull/570) ([actuallymab](https://github.com/actuallymab))\n- Added Czech (cs_CZ) `birthNumber` formatter [\\#535](https://github.com/fzaninotto/Faker/pull/535) ([tomasbedrich](https://github.com/tomasbedrich))\n- Added `dateTimeInInterval` formatter [\\#526](https://github.com/fzaninotto/Faker/pull/526) ([nicodmf](https://github.com/nicodmf))\n- Updated `optional` and `boolean` apis to be more consistent [\\#513](https://github.com/fzaninotto/Faker/pull/513) ([EmanueleMinotto](https://github.com/EmanueleMinotto))\n- Added Greek (el\\_GR) `Address` provider [\\#504](https://github.com/fzaninotto/Faker/pull/504) ([drakakisgeo](https://github.com/drakakisgeo))\n\n## 2015-05-29, v1.5.0\n\n* Added ability to print custom text on the images fetched by the Image provider [\\#583](https://github.com/fzaninotto/Faker/pull/583) ([fzaninotto](https://github.com/fzaninotto))\n* Fixed typos in Peruvian (es\\_PE) Person provider [\\#581](https://github.com/fzaninotto/Faker/pull/581) [\\#580](https://github.com/fzaninotto/Faker/pull/580) ([ysramirez](https://github.com/ysramirez))\n* Added instructions for installing with composer to readme.md [\\#572](https://github.com/fzaninotto/Faker/pull/572) ([totophe](https://github.com/totophe))\n* Added Kazakh (kk\\_KZ) locale [\\#569](https://github.com/fzaninotto/Faker/pull/569) ([YerlenZhubangaliyev](https://github.com/YerlenZhubangaliyev))\n* Added Korean (ko\\_KR) locale [\\#566](https://github.com/fzaninotto/Faker/pull/566) ([pearlc](https://github.com/pearlc))\n* Fixed file provider to ignore unreadable and special files [\\#565](https://github.com/fzaninotto/Faker/pull/565) ([svrnm](https://github.com/svrnm))\n* Fixed Dutch (nl\\_NL) Address and Person providers [\\#560](https://github.com/fzaninotto/Faker/pull/560) ([killerog](https://github.com/killerog))\n* Fixed Dutch (nl\\_NL) Person provider [\\#559](https://github.com/fzaninotto/Faker/pull/559) ([pauledenburg](https://github.com/pauledenburg))\n* Added Russian (ru\\_RU) Bank names provider [\\#553](https://github.com/fzaninotto/Faker/pull/553) ([wizardjedi](https://github.com/wizardjedi))\n* Added mobile phone function in French (fr\\_FR) provider [\\#552](https://github.com/fzaninotto/Faker/pull/552) ([kletellier](https://github.com/kletellier))\n* Added phpdoc for new magic methods in Generator to help IntelliSense completion [\\#550](https://github.com/fzaninotto/Faker/pull/550) ([stof](https://github.com/stof))\n* Fixed File provider bug 'The first argument to copy() function cannot be a directory' [\\#547](https://github.com/fzaninotto/Faker/pull/547) ([svrnm](https://github.com/svrnm))\n* Added new Brazilian (pt\\_BR) Providers [\\#545](https://github.com/fzaninotto/Faker/pull/545) ([igorsantos07](https://github.com/igorsantos07))\n* Fixed ability to seed the generator [\\#543](https://github.com/fzaninotto/Faker/pull/543) ([schmengler](https://github.com/schmengler))\n* Added streetAddress formatter to Russian (ru\\_RU) provider [\\#542](https://github.com/fzaninotto/Faker/pull/542) ([ZAYEC77](https://github.com/ZAYEC77))\n* Fixed Internet provider warning \"Could not create transliterator\"* [\\#541](https://github.com/fzaninotto/Faker/pull/541) ([fonsecas72](https://github.com/fonsecas72))\n* Fixed Spanish for Argentina (es\\_AR) Address provider [\\#540](https://github.com/fzaninotto/Faker/pull/540) ([ivanmirson](https://github.com/ivanmirson))\n* Fixed region names in French for Belgium (fr\\_BE) address provider [\\#536](https://github.com/fzaninotto/Faker/pull/536) ([miclf](https://github.com/miclf))\n* Fixed broken Doctrine2 link in README [\\#534](https://github.com/fzaninotto/Faker/pull/534) ([JonathanKryza](https://github.com/JonathanKryza))\n* Added link to faker-context Behat extension in readme [\\#532](https://github.com/fzaninotto/Faker/pull/532) ([denheck](https://github.com/denheck))\n* Added PHP 7.0 nightly to Travis build targets [\\#525](https://github.com/fzaninotto/Faker/pull/525) ([TomasVotruba](https://github.com/TomasVotruba))\n* Added Dutch (nl\\_NL) color names [\\#523](https://github.com/fzaninotto/Faker/pull/523) ([belendel](https://github.com/belendel))\n* Fixed Chinese (zh\\_CN) Address provider (remove Taipei) [\\#522](https://github.com/fzaninotto/Faker/pull/522) ([asika32764](https://github.com/asika32764))\n* Fixed phonenumber formats in Dutch (nl\\_NL) PhoneNumber provider [\\#521](https://github.com/fzaninotto/Faker/pull/521) ([SpaceK33z](https://github.com/SpaceK33z))\n* Fixed Russian (ru\\_RU) Address provider [\\#518](https://github.com/fzaninotto/Faker/pull/518) ([glagola](https://github.com/glagola))\n* Added Italian (it\\_IT) Text provider [\\#517](https://github.com/fzaninotto/Faker/pull/517) ([endelwar](https://github.com/endelwar))\n* Added Norwegian (no\\_NO) locale [\\#515](https://github.com/fzaninotto/Faker/pull/515) ([phaza](https://github.com/phaza))\n* Added VAT number to Bulgarian (bg\\_BG) Payment provider [\\#512](https://github.com/fzaninotto/Faker/pull/512) ([ronanguilloux](https://github.com/ronanguilloux))\n* Fixed UserAgent provider outdated user agents [\\#511](https://github.com/fzaninotto/Faker/pull/511) ([ajbdev](https://github.com/ajbdev))\n* Fixed `image()` formatter to make it work with temp dir of any (decent) OS [\\#507](https://github.com/fzaninotto/Faker/pull/507) ([ronanguilloux](https://github.com/ronanguilloux))\n* Added Persian (fa\\_IR) locale [\\#500](https://github.com/fzaninotto/Faker/pull/500) ([zoli](https://github.com/zoli))\n* Added Currency Code formatter [\\#497](https://github.com/fzaninotto/Faker/pull/497) ([stelgenhof](https://github.com/stelgenhof))\n* Added VAT number to Belgium (be_BE) Payment provider [\\#495](https://github.com/fzaninotto/Faker/pull/495) ([ronanguilloux](https://github.com/ronanguilloux))\n* Fixed `imageUrl` formatter bug where it would always return the same image [\\#494](https://github.com/fzaninotto/Faker/pull/494) ([fzaninotto](https://github.com/fzaninotto))\n* Added more Indonesian (id\\_ID) providers [\\#493](https://github.com/fzaninotto/Faker/pull/493) ([deerawan](https://github.com/deerawan))\n* Added Indonesian (id\\_ID) locale [\\#492](https://github.com/fzaninotto/Faker/pull/492) ([stoutZero](https://github.com/stoutZero))\n* Fixed unique generator performance [\\#491](https://github.com/fzaninotto/Faker/pull/491) ([ikwattro](https://github.com/ikwattro))\n* Added transliterator to `email` and `username` [\\#490](https://github.com/fzaninotto/Faker/pull/490) ([fzaninotto](https://github.com/fzaninotto))\n* Added Hungarian (hu\\_HU) Text provider [\\#486](https://github.com/fzaninotto/Faker/pull/486) ([lintaba](https://github.com/lintaba))\n* Fixed CakePHP Entity Popolator (some cases where no entities prev. inserted) [\\#483](https://github.com/fzaninotto/Faker/pull/483) ([jadb](https://github.com/jadb))\n* Added Color and DateTime Turkish (tr\\_TR) Providers [\\#481](https://github.com/fzaninotto/Faker/pull/481) ([behramcelen](https://github.com/behramcelen))\n* Added Latvian (lv\\_LV) `personalIdentityNumber` formatter [\\#472](https://github.com/fzaninotto/Faker/pull/472) ([MatissJanis](https://github.com/MatissJanis))\n* Added VAT number to Austrian (at_AT) Payment provider [\\#470](https://github.com/fzaninotto/Faker/pull/470) ([ronanguilloux](https://github.com/ronanguilloux))\n* Fixed missing @return phpDoc in Payment provider [\\#469](https://github.com/fzaninotto/Faker/pull/469) ([ronanguilloux](https://github.com/ronanguilloux))\n* Added SWIFT/BIC payment type formatter to the Payment provider [\\#465](https://github.com/fzaninotto/Faker/pull/465) ([ronanguilloux](https://github.com/ronanguilloux))\n* Fixed small typo in Base provider exception [\\#460](https://github.com/fzaninotto/Faker/pull/460) ([miclf](https://github.com/miclf))\n* Added Georgian (ka\\_Ge) locale [\\#457](https://github.com/fzaninotto/Faker/pull/457) ([lperto](https://github.com/lperto))\n* Added PSR-4 Autoloading [\\#455](https://github.com/fzaninotto/Faker/pull/455) ([GrahamCampbell](https://github.com/GrahamCampbell))\n* Added Uganda (en_UG) locale [\\#454](https://github.com/fzaninotto/Faker/pull/454) ([tharoldD](https://github.com/tharoldD))\n* Added `regexify` formatter, generating a random string based on a regular expression [\\#453](https://github.com/fzaninotto/Faker/pull/453) ([fzaninotto](https://github.com/fzaninotto))\n* Added shuffle formatter, to shuffle an array or a string [\\#452](https://github.com/fzaninotto/Faker/pull/452) ([fzaninotto](https://github.com/fzaninotto))\n* Added ISBN-10 & ISBN-13 codes formatters to Barcode provider [\\#451](https://github.com/fzaninotto/Faker/pull/451) ([gietos](https://github.com/gietos))\n* Fixed Russian (ru\\_RU) middle names (different for different genders) [\\#450](https://github.com/fzaninotto/Faker/pull/450) ([gietos](https://github.com/gietos))\n* Fixed Ukranian (uk\\_UA) Person provider [\\#448](https://github.com/fzaninotto/Faker/pull/448) ([aivus](https://github.com/aivus))\n* Added Vietnamese (vi\\_VN) locale [\\#447](https://github.com/fzaninotto/Faker/pull/447) ([huy95](https://github.com/huy95))\n* Added type hint to the Documentor constructor [\\#446](https://github.com/fzaninotto/Faker/pull/446) ([JeroenDeDauw](https://github.com/JeroenDeDauw))\n* Fixed Russian (ru\\_RU) Person provider (joined names) [\\#445](https://github.com/fzaninotto/Faker/pull/445) ([aivus](https://github.com/aivus))\n* Added English (en\\_GB) `mobileNumber` methods [\\#438](https://github.com/fzaninotto/Faker/pull/438) ([daveblake](https://github.com/daveblake))\n* Added Traditional Chinese (zh\\_TW) Realtext provider [\\#434](https://github.com/fzaninotto/Faker/pull/434) ([tzhuan](https://github.com/tzhuan))\n* Fixed first name in Spanish for Argentina (es\\_AR) Person provider [\\#433](https://github.com/fzaninotto/Faker/pull/433) ([fzaninotto](https://github.com/fzaninotto))\n* Fixed Canadian (en_CA) state abbreviation for Nunavut [\\#430](https://github.com/fzaninotto/Faker/pull/430) ([julien-c](https://github.com/julien-c))\n* Added CakePHP ORM entity populator [\\#428](https://github.com/fzaninotto/Faker/pull/428) ([jadb](https://github.com/jadb))\n* Added Traditional Chinese (zh\\_TW) locale [\\#427](https://github.com/fzaninotto/Faker/pull/427) ([tzhuan](https://github.com/tzhuan))\n* Fixed typo in Doctrine Populator phpDoc [\\#425](https://github.com/fzaninotto/Faker/pull/425) ([ihsanudin](https://github.com/ihsanudin))\n* Added Chinese (zh_CN) Internet provider [\\#424](https://github.com/fzaninotto/Faker/pull/424) ([Lisso-Me](https://github.com/Lisso-Me))\n* Added Country ISO 3166-1 alpha-3 code to the Miscellaneous provider[\\#422](https://github.com/fzaninotto/Faker/pull/422) ([gido](https://github.com/gido))\n* Added English (en\\_GB) Person provider [\\#421](https://github.com/fzaninotto/Faker/pull/421) ([AlexCutts](https://github.com/AlexCutts))\n* Added missing tests for the Color Provider [\\#420](https://github.com/fzaninotto/Faker/pull/420) ([bessl](https://github.com/bessl))\n* Added Nepali (ne\\_NP) locale [\\#419](https://github.com/fzaninotto/Faker/pull/419) ([ankitpokhrel](https://github.com/ankitpokhrel))\n* Fixed latitude and longitude formatters bug (numeric value out of range for 32bits) [\\#416](https://github.com/fzaninotto/Faker/pull/416) ([fzaninotto](https://github.com/fzaninotto))\n* Added a dedicated calculator Luhn calculator service [\\#414](https://github.com/fzaninotto/Faker/pull/414) ([fzaninotto](https://github.com/fzaninotto))\n* Fixed Russian (ru_RU) Person provider (removed lowercase duplications) [\\#413](https://github.com/fzaninotto/Faker/pull/413) ([Ragazzo](https://github.com/Ragazzo))\n* Fixed barcode formatter (improved speed, added tests) [\\#412](https://github.com/fzaninotto/Faker/pull/412) ([fzaninotto](https://github.com/fzaninotto))\n* Added ipv4 and barcode formatters tests [\\#410](https://github.com/fzaninotto/Faker/pull/410) ([bessl](https://github.com/bessl))\n* Fixed typos in various comments blocks [\\#409](https://github.com/fzaninotto/Faker/pull/409) ([bessl](https://github.com/bessl))\n* Fixed InternetTest (replaced regex with PHP filter) [\\#406](https://github.com/fzaninotto/Faker/pull/406) ([bessl](https://github.com/bessl))\n* Added password formatter to the Internet provider[\\#402](https://github.com/fzaninotto/Faker/pull/402) ([fzaninotto](https://github.com/fzaninotto))\n* Added Company and Internet Austrian (de\\_AT) Providers [\\#400](https://github.com/fzaninotto/Faker/pull/400) ([bessl](https://github.com/bessl))\n* Added third-party libraries section in README [\\#399](https://github.com/fzaninotto/Faker/pull/399) ([fzaninotto](https://github.com/fzaninotto))\n* Added Spanish for Venezuela (es\\_VE) locale [\\#398](https://github.com/fzaninotto/Faker/pull/398) ([DIOHz0r](https://github.com/DIOHz0r))\n* Added PhoneNumber Autrian (de\\_AT) Provider, and missing test for the 'locale' method. [\\#395](https://github.com/fzaninotto/Faker/pull/395) ([bessl](https://github.com/bessl))\n* Removed wrongly localized Lorem provider [\\#394](https://github.com/fzaninotto/Faker/pull/394) ([fzaninotto](https://github.com/fzaninotto))\n* Fixed Miscellaneous provider (made the `locale` formatter static) [\\#390](https://github.com/fzaninotto/Faker/pull/390) ([bessl](https://github.com/bessl))\n* Added a unit test file for the Miscellaneous Provider [\\#389](https://github.com/fzaninotto/Faker/pull/389) ([bessl](https://github.com/bessl))\n* Added warning in README about using `rand()`` and the seed functions [\\#386](https://github.com/fzaninotto/Faker/pull/386) ([paulvalla](https://github.com/paulvalla))\n* Fixed French (fr\\_FR) Person provider (Uppercased a first name) [\\#385](https://github.com/fzaninotto/Faker/pull/385) ([netcarver](https://github.com/netcarver))\n* Added Russian (ru\\_RU) and Ukrainian (uk\\_UA) Text providers [\\#383](https://github.com/fzaninotto/Faker/pull/383) ([terion-name](https://github.com/terion-name))\n* Added more street prefixes to French (fr\\_FR) Address provider [\\#381](https://github.com/fzaninotto/Faker/pull/381) ([ronanguilloux](https://github.com/ronanguilloux))\n* Added PHP 5.6 to CI targets [\\#378](https://github.com/fzaninotto/Faker/pull/378) ([GrahamCampbell](https://github.com/GrahamCampbell))\n* Fixed spaces remaining at the end of liine in various files [\\#377](https://github.com/fzaninotto/Faker/pull/377) ([GrahamCampbell](https://github.com/GrahamCampbell))\n* Fixed UserAgent provider (added space before processor on linux platform) [\\#374](https://github.com/fzaninotto/Faker/pull/374) ([TomK](https://github.com/TomK))\n* Added Company generator for Russian (ru\\_RU) locale [\\#371](https://github.com/fzaninotto/Faker/pull/371) ([kix](https://github.com/kix))\n* Fixed Russian (ru\\_RU) Color provider (uppercase letters) [\\#370](https://github.com/fzaninotto/Faker/pull/370) ([semanser](https://github.com/semanser))\n* Added more Polish (pl\\_PL) phone numbers [\\#369](https://github.com/fzaninotto/Faker/pull/369) ([piotrantosik](https://github.com/piotrantosik))\n* Fixed Ruby Faker link in readme [\\#368](https://github.com/fzaninotto/Faker/pull/368) ([philsturgeon](https://github.com/philsturgeon))\n* Added more Japanese (ja\\_JP) names in Person provider [\\#366](https://github.com/fzaninotto/Faker/pull/366) ([kumamidori](https://github.com/kumamidori))\n* Added Slovenian (sl\\_SL) locale [\\#363](https://github.com/fzaninotto/Faker/pull/363) ([alesf](https://github.com/alesf))\n* Fixed German (de\\_DE) Person provider (first names) [\\#362](https://github.com/fzaninotto/Faker/pull/362) ([mikehaertl](https://github.com/mikehaertl))\n* Fixed Ukrainian (uk\\_UA) Person providr (there is no such letter \"ы\" in  Ukrainian) [\\#359](https://github.com/fzaninotto/Faker/pull/359) ([nazar-pc](https://github.com/nazar-pc))\n* Fixed Chinese (zh\\_CN) PhoneNumber provider (the length of mobile phone number is 11) [\\#358](https://github.com/fzaninotto/Faker/pull/358) ([byan](https://github.com/byan))\n* Added Arabic (ar_\\JO) Locale [\\#357](https://github.com/fzaninotto/Faker/pull/357) ([zrashwani](https://github.com/zrashwani))\n* Fixed Czech (cs\\_CZ) Person provider (missing lowercase in last name) [\\#355](https://github.com/fzaninotto/Faker/pull/355) ([halaxa](https://github.com/halaxa))\n* Fixed French for Belgium (fr\\_BE) Address Provider (doubled city names) [\\#354](https://github.com/fzaninotto/Faker/pull/354) ([miclf](https://github.com/miclf))\n* Added Biased Integer Provider [\\#332](https://github.com/fzaninotto/Faker/pull/332) ([TimWolla](https://github.com/TimWolla))\n* Added Swedish (sv\\_SE) locale [\\#316](https://github.com/fzaninotto/Faker/pull/316) ([ulrikjohansson](https://github.com/ulrikjohansson))\n* Added English for New Zealand (en\\_NZ) locale [\\#283](https://github.com/fzaninotto/Faker/pull/283) ([JasonMortonNZ](https://github.com/JasonMortonNZ))\n* Added mention of external Provider for cron expressions to readme[\\#498](https://github.com/fzaninotto/Faker/pull/498) ([swekaj](https://github.com/swekaj))\n\n## 2014-06-04, v1.4.0\n\n* Fixed typo in Slovak person names (cinan)\n* Added tests for uk_UA providers (serge-kuharev)\n* Fixed numerify() performance by making it 30% faster (fzaninotto)\n* Added strict option to randomNumber to force number of digits (fzaninotto)\n* Fixed randomNumber usage duplicating numberBetween (fzaninotto)\n* Fixed address provider for latvian language (MatissJA)\n* Added Czech Republic (cs_CZ) address, company, datetime and text providers (Mikulas)\n* Fixed da_DK Person provider data containing an 'unnamed' person (tolnem)\n* Added slug provider (fzaninotto)\n* Fixed IDE insights for new local IP and MAC address providers (hugofonseca)\n* Added firstname gender method to all Person providers (csanquer)\n* Fixed tr_TR email service, city name, person, and phone number formats (ogunkarakus)\n* Fixed US_en state list (fzaninotto)\n* Fixed en_US address provider so state abbr are ISO 3166 codes (Garbee)\n* Added local IP and MAC address providers (kielabokkie)\n* Fixed typo in century list affecting the century provider (fzaninotto)\n* Added default value to optional modifier (joshuajabbour)\n* Fixed Portuguese phonenumbers have 9 digits (hugofonseca)\n* Added fileCopy to File provider to simulate file upload (stefanosala)\n* Added pt_PT providers (hugofonseca)\n* Fixed dead code in text provider (hugofonseca)\n* Fixed IDE insights for magic properties (hugofonseca)\n* Added tin (NIF) generator for pt_PT provider (hugofonseca)\n* Fixed numberBetween max default value handling (fzaninotto)\n* Added pt_PT phone number provider (hugofonseca)\n* Fixed PSR-2 standards and add make task to force it on Travis (terite)\n* Added new ro_RO Personal Numerical Code (CNP) and phone number providers (avataru)\n* Fixed Internet provider for sk_SK locale (cinan)\n* Fixed typo in en_ZA Internet provider (bjorntheart)\n* Fixed phpdoc for DateTime magic methods (stof)\n* Added doc about seeding with maximum timestamp using dateTime formatters (fzaninotto)\n* Added Maximum Timestamp option to get always same unix timestamp when using a fixed seed (csanquer)\n* Added Montenegrian (me_ME) providers (ognjenm)\n* Added ean barcode provider (nineinchnick)\n* Added fullPath parameter to Image provider (stefanosala)\n* Added more Polish company formats (nineinchnick)\n* Added Polish realText provider (nineinchnick)\n* Fixed remaining non-seedable random generators (terite)\n* Added randomElements provider (terite)\n* Added French realText provider (fzaninotto)\n* Fixed realText provider bootstrap slowness (fzaninotto)\n* Added realText provider for English and German, based on Markov Chains Generator (TimWolla)\n* Fixed address format in nl_NL provider (doenietzomoeilijk)\n* Fixed potentially offensive word from last name list (joshuajabbour)\n* Fixed reamde documentation about the optional modifier (cryode)\n* Fixed Image provider and documentor routine (fzaninotto)\n* Fixed IDE insights for methods (PedroTroller)\n* Fixed missing data in en_US Address provider (Garbee)\n* Added Bengali (bn_BD) providers (masnun)\n* Fixed warning on test file when short tags are on (bateller)\n* Fixed Doctrine populator undefined index warning (dbojdo)\n* Added French Canadian (fr_CA) Address and Person providers (marcaube)\n* Fixed typo in NullGenerator (mhanson01)\n* Fixed Doctrine populator issue with one-to-one nullable relationship (jpetitcolas)\n* Added Canadian English (en_CA) address and phone number providers (cviebrock)\n* Fixed duplicated Payment example in readme (Garbee)\n* Fixed Polish (pl_PL) Person provider data (czogori)\n* Added Hungarian (hu_HU) providers (sagikazarmark)\n* Added 'kana' (ja_JP) name formatters (kzykhys)\n* Added allow_failure for hhvm to travis-ci and test against php 5.5 (toin0u)\n\n## 2013-12-16, v1.3.0\n\n* Fixed state generator in Australian (en_AU) provider (sebklaus)\n* Fixed IDE insights for locale specific providers (ulrikjohansson)\n* Added English (South Africa) (en_ZA) person, address, Internet and phone number providers (dmfaux)\n* Fixed integer values overflowing on signed INTEGER columns on Doctrine populator (Thinkscape)\n* Fixed spelling error in French (fr_FR) address provider (leihog)\n* Added improvements based on SensioLabsInsights analysis\n* Fixed Italian (it_IT) email provider (garak)\n* Added Spanish (es_ES) Internet provider (eusonlito)\n* Added English Philippines (en_PH) address provider (kamote)\n* Added Brazilian (pt_BR) email provider data (KennedyTedesco)\n* Fixed UK country code (pgscandeias)\n* Added Peruvian (es_PE) person, address, phone number, and company providers (cslucano)\n* Added Ukrainian (uk_UA) color provider (ruden)\n* Fixed Ukrainian (uk_UA) namespace and email translitteration (ruden)\n* Added Romanian (Moldova) (ro_MD) person, address, and phone number providers (AlexanderC)\n* Added IBAN generator for every currently known locale that uses it (nineinchnick)\n* Added Image generation powered by LoremPixel (weotch)\n* Fixed missing timezone with dateTimeBetween (baldurrensch)\n* Fixed call to undefined method cardType in Payment (WMeldon)\n* Added Romanian (ro_RO) address and person providers (calina-c)\n* Fixed Doctrine populator to use ObjectManager instead of EntityManagerInterface (mgiustiniani)\n* Fixed docblock for Provider\\Base::unique() (pschultz)\n* Added Payment providers (creditCardType, creditCardNumber, creditCardExpirationDate, creditCardExpirationDateString) (pomaxa)\n* Added unique() modifier\n* Added IDE insights to allow better intellisense/phpStorm autocompletion (thallisphp)\n* Added Polish (pl_PL) address provider, personal identity number and pesel number generator (nineinchnick)\n* Added Turkish (tr_TR) address provider, and improved internet provider (hasandz)\n* Fixed Propel column number guesser to use signed range of values (gunnarlium)\n* Added Greek (el_GR) person, address, and phone number providers (georgeharito)\n* Added Austrian (en_AU) address, Internet, and phone number providers (rcuddy)\n* Fixed phpDoc in Doctrine Entity populator (rogamoore)\n* Added French (fr_FR) phone number formats (vchabot)\n* Added optional() modifier (weotch)\n* Fixed typo in the Person provider documentation (jtreminio)\n* Fixed Russian (ru_RU) person format (alexshadow007)\n* Added Japanese (ja_JP) person, address, Internet, phone number, and company providers (kumamidori)\n* Added color providers, driver license and passport number formats for the ru_RU locale (pomaxa)\n* Added Latvian (lv_LV) person, address, Internet, and phone number providers (pomaxa)\n* Added Brazilian (pt_BR) Internet provider (vjnrv)\n* Added more Czech (cs_CZ) lastnames (petrkle)\n* Added Chinese Simplified (zh_CN) person, address, Internet, and phone number providers (tlikai)\n* Fixed Typos (pborelli)\n* Added Color provider with hexColor, rgbColor, rgbColorAsArray, rgbCssColor, safeColorName, and colorName formatters (lsv)\n* Added support for associative arrays in `randomElement` (aRn0D)\n\n## 2013-06-09, v1.2.0\n\n* Added new provider for fr_BE locale (jflefebvre)\n* Updated locale provider to use a static locale list (spawn-guy)\n* Fixed invalid UTF-8 sequence in domain provider with the Bulgarian provider (Dynom)\n* Fixed the nl_NL Person provider (Dynom)\n* Removed all requires and added the autoload definition to composer (Dynom)\n* Fixed encoding problems in nl_NL Address provider (Dynom)\n* Added icelandic provider (is_IS) (birkir)\n* Added en_CA address and phone numbers (cviebrock)\n* Updated safeEmail provider to be really safe (TimWolla)\n* Documented alternative randomNumber usage (Seldaek)\n* Added basic file provider (anroots)\n* Fixed use of fourth argument on Doctrine addEntity (ecentinela)\n* Added nl_BE provider (wimvds)\n* Added Random Float provider (csanquer)\n* Fixed bug in Faker\\ORM\\Doctrine\\Populator (mmf-amarcos)\n* Updated ru_RU provider (rmrevin)\n* Added safe email domain provider (csanquer)\n* Fixed latitude provider (rumpl)\n* Fixed unpredictability of fake data generated by Faker\\Provider\\Base::numberBetween() (goatherd)\n* Added uuid provider (goatherd)\n* Added possibility to call methods on Doctrine entities, possibility to generate unique id (nenadalm)\n* Fixed prefixes typos in 'pl_PL' Person provider (krymen)\n* Added more fake data to the Ukraininan providers (lysenkobv)\n* Added more fake data to the Italian providers (EmanueleMinotto)\n* Fixed spaces appearing in generated emails (alchy58)\n* Added Armenian (hy_AM) provider (artash)\n* Added Generation of valid SIREN & SIRET codes to French providers (alexsegura)\n* Added Dutch (nl_NL) provider (WouterJ)\n* Fixed missing typehint in Base::__construct() (benja-M-1)\n* Fixed typo in README (benja-M-1)\n* Added Ukrainian (ua_UA) provider (rsvasilyev)\n* Added Turkish (tr_TR) Provider (faridmovsumov)\n* Fixed executable bit in some PHP files (siwinski)\n* Added Brazilian Portuguese (pt_BR) provider (oliveiraev)\n* Added Spanish (es_ES) provider (ivannis)\n* Fixed Doctrine populator to allow for the population of entity data that has associations to other entities (afishnamedsquish)\n* Added Danish (da_DK) providers (toin0u)\n* Cleaned up whitespaces (toin0u)\n* Fixed utf-8 bug with lowercase generators (toin0u)\n* Fixed composer.json (Seldaek)\n* Fixed bug in Doctrine EntityPopulator (beberlei)\n* Added Finnish (fi_FI) provider (drodil)\n\n## 2012-10-29, v1.1.0\n\n* Updated text provider to return paragraphs as a string instead of array. Great for populating markdown textarea fields (Seldaek)\n* Updated dateTimeBetween to accept DateTime instances (Seldaek)\n* Added random number generator between a and b, simply like rand() (Seldaek)\n* Fixed spaces in generated emails (blaugueux)\n* Fixed Person provider in Russian locale (Isamashii)\n* Added new UserAgent provider (blaugueux)\n* Added locale generator to Miscellaneous provider (blaugueux)\n* Added timezone generator to DateTime provider (blaugueux)\n* Added new generators to French Address providers (departments, regions) (geoffrey-brier)\n* Added new generators to French Company provider (catch phrase, SIREN, and SIRET numbers) (geoffrey-brier)\n* Added state generator to German Address provider (Powerhamster)\n* Added Slovak provider (bazo)\n* Added latitude and longitude formatters to Address provider (fixe)\n* Added Serbian provider (umpirsky)\n\n## 2012-07-10, v1.0.0\n\n* Initial Version\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.6220703125,
          "content": "Contributing\n============\n\nIf you've written a new formatter, adapted Faker to a new locale, or fixed a bug, your contribution is welcome!\n\nBefore proposing a pull request, check the following:\n\n* Your code should follow the [PSR-2 coding standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md). Run `make sniff` to check that the coding standards are followed, and run `make fix` to fix inconsistencies.\n* Unit tests should still pass after your patch. Run the tests on your dev server (with `make test`) or check the continuous integration status for your pull request.\n* As much as possible, add unit tests for your code\n* Never use `rand()` in your providers. Faker uses the Mersenne Twister Randomizer, so use `mt_rand()` or any of the base generators (`randomNumber`, `randomElement`, etc.) instead.\n* If you add new providers (or new locales) and that they embed a lot of data for random generation (e.g. first names in a new language), please add a `@link` to the reference you used for this list (example [in the ru_RU locale](https://github.com/fzaninotto/Faker/blob/master/src/Faker/Provider/ru_RU/Person.php#L13)). This will ease future updates of the list and debates about the most relevant data for this provider.\n* If you add long list of random data, please split the list into several lines. This makes diffs easier to read, and facilitates core review.\n* If you add new formatters, please include documentation for it in the README. Don't forget to add a line about new formatters in the `@property` or `@method` phpDoc entries in [Generator.php](https://github.com/fzaninotto/Faker/blob/master/src/Faker/Generator.php#L6-L118) to help IDEs auto-complete your formatters.\n* If your new formatters are specific to a certain locale, document them in the [Language-specific formatters](https://github.com/fzaninotto/Faker#language-specific-formatters) list instead.\n* Avoid changing existing sets of data. Some developers use Faker with seeding for unit tests ; changing the data makes their tests fail.\n* Speed is important in all Faker usages. Make sure your code is optimized to generate thousands of fake items in no time, without consuming too much memory or CPU.\n* If you commit a new feature, be prepared to help maintaining it. Watch the project on GitHub, and please comment on issues or PRs regarding the feature you contributed.\n\nOnce your code is merged, it is available for free to everybody under the MIT License. Publishing your Pull Request on the Faker GitHub repository means that you agree with this license for your contribution.\n\nThank you for your contribution! Faker wouldn't be so great without you.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.158203125,
          "content": "Copyright (c) 2011 François Zaninotto\nPortions Copyright (c) 2008 Caius Durling\nPortions Copyright (c) 2008 Adam Royle\nPortions Copyright (c) 2008 Fiona Burrows\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.720703125,
          "content": ".PHONY: build coverage fix help sniff test\n\nhelp:\n\t@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\nbuild: fix test ## Runs fix and test targets\n\ncoverage: vendor/autoload.php ## Collects coverage with phpunit\n\tvendor/bin/phpunit --coverage-text --coverage-clover=.build/logs/clover.xml\n\nfix: vendor/autoload.php ## Fixes code style issues with phpcbf\n\tvendor/bin/phpcbf --standard=PSR2 src\n\nsniff: vendor/autoload.php ## Detects code style issues with phpcs\n\tvendor/bin/phpcs --standard=PSR2 src -n\n\ntest: vendor/autoload.php ## Runs tests with phpunit\n\tvendor/bin/phpunit\n\nvendor/autoload.php:\n\tcomposer install --no-interaction --prefer-dist\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.8486328125,
          "content": "{\n    \"name\": \"fzaninotto/faker\",\n    \"type\": \"library\",\n    \"description\": \"Faker is a PHP library that generates fake data for you.\",\n    \"keywords\": [\n        \"faker\",\n        \"fixtures\",\n        \"data\"\n    ],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"François Zaninotto\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^5.3.3 || ^7.0 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"ext-intl\": \"*\",\n        \"phpunit/phpunit\": \"^4.8.35 || ^5.7\",\n        \"squizlabs/php_codesniffer\": \"^2.9.2\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Faker\\\\\": \"src/Faker/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Faker\\\\Test\\\\\": \"test/Faker/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.9-dev\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.619140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n    bootstrap=\"vendor/autoload.php\"\n    colors=\"true\"\n    columns=\"max\"\n    verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Faker Test Suite\">\n            <directory>./test/Faker/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist addUncoveredFilesFromWhitelist=\"true\" processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 60.28515625,
          "content": "# Faker\n\n[![Monthly Downloads](https://poser.pugx.org/fzaninotto/faker/d/monthly.png)](https://packagist.org/packages/fzaninotto/faker)\n[![Continuous Integration](https://github.com/fzaninotto/Faker/workflows/Continuous%20Integration/badge.svg?branch=master)](https://github.com/fzaninotto/Faker/actions)\n[![codecov](https://codecov.io/gh/fzaninotto/Faker/branch/master/graph/badge.svg)](https://codecov.io/gh/fzaninotto/Faker)\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/eceb78a9-38d4-4ad5-8b6b-b52f323e3549/mini.png)](https://insight.sensiolabs.com/projects/eceb78a9-38d4-4ad5-8b6b-b52f323e3549)\n\nFaker is a PHP library that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.\n\nFaker is heavily inspired by Perl's [Data::Faker](http://search.cpan.org/~jasonk/Data-Faker-0.07/), and by ruby's [Faker](https://rubygems.org/gems/faker).\n\nFaker requires PHP >= 5.3.3.\n\n**Faker is archived**. Read the reasons behind this decision here: [https://marmelab.com/blog/2020/10/21/sunsetting-faker.html](https://marmelab.com/blog/2020/10/21/sunsetting-faker.html) \n\n# Table of Contents\n\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n- [Formatters](#formatters)\n\t- [Base](#fakerproviderbase)\n\t- [Lorem Ipsum Text](#fakerproviderlorem)\n\t- [Person](#fakerprovideren_usperson)\n\t- [Address](#fakerprovideren_usaddress)\n\t- [Phone Number](#fakerprovideren_usphonenumber)\n\t- [Company](#fakerprovideren_uscompany)\n\t- [Real Text](#fakerprovideren_ustext)\n\t- [Date and Time](#fakerproviderdatetime)\n\t- [Internet](#fakerproviderinternet)\n\t- [User Agent](#fakerprovideruseragent)\n\t- [Payment](#fakerproviderpayment)\n\t- [Color](#fakerprovidercolor)\n\t- [File](#fakerproviderfile)\n\t- [Image](#fakerproviderimage)\n\t- [Uuid](#fakerprovideruuid)\n\t- [Barcode](#fakerproviderbarcode)\n\t- [Miscellaneous](#fakerprovidermiscellaneous)\n\t- [Biased](#fakerproviderbiased)\n\t- [Html Lorem](#fakerproviderhtmllorem)\n- [Modifiers](#modifiers)\n- [Localization](#localization)\n- [Populating Entities Using an ORM or an ODM](#populating-entities-using-an-orm-or-an-odm)\n- [Seeding the Generator](#seeding-the-generator)\n- [Faker Internals: Understanding Providers](#faker-internals-understanding-providers)\n- [Real Life Usage](#real-life-usage)\n- [Language specific formatters](#language-specific-formatters)\n- [Third-Party Libraries Extending/Based On Faker](#third-party-libraries-extendingbased-on-faker)\n- [License](#license)\n\n\n## Installation\n\n```sh\ncomposer require fzaninotto/faker\n```\n\n## Basic Usage\n\n### Autoloading\n\nFaker supports both `PSR-0` as `PSR-4` autoloaders.\n```php\n<?php\n# When installed via composer\nrequire_once 'vendor/autoload.php';\n```\n\nYou can also load `Fakers` shipped `PSR-0` autoloader\n```php\n<?php\n# Load Fakers own autoloader\nrequire_once '/path/to/Faker/src/autoload.php';\n```\n\n*alternatively, you can use any another PSR-4 compliant autoloader*\n\n### Create fake data\nUse `Faker\\Factory::create()` to create and initialize a faker generator, which can generate data by accessing properties named after the type of data you want.\n\n```php\n<?php\n// use the factory to create a Faker\\Generator instance\n$faker = Faker\\Factory::create();\n\n// generate data by accessing properties\necho $faker->name;\n  // 'Lucy Cechtelar';\necho $faker->address;\n  // \"426 Jordy Lodge\n  // Cartwrightshire, SC 88120-6700\"\necho $faker->text;\n  // Dolores sit sint laboriosam dolorem culpa et autem. Beatae nam sunt fugit\n  // et sit et mollitia sed.\n  // Fuga deserunt tempora facere magni omnis. Omnis quia temporibus laudantium\n  // sit minima sint.\n```\n\nEven if this example shows a property access, each call to `$faker->name` yields a different (random) result. This is because Faker uses `__get()` magic, and forwards `Faker\\Generator->$property` calls to `Faker\\Generator->format($property)`.\n\n```php\n<?php\nfor ($i = 0; $i < 10; $i++) {\n  echo $faker->name, \"\\n\";\n}\n  // Adaline Reichel\n  // Dr. Santa Prosacco DVM\n  // Noemy Vandervort V\n  // Lexi O'Conner\n  // Gracie Weber\n  // Roscoe Johns\n  // Emmett Lebsack\n  // Keegan Thiel\n  // Wellington Koelpin II\n  // Ms. Karley Kiehn V\n```\n\n**Tip**: For a quick generation of fake data, you can also use Faker as a command line tool thanks to [faker-cli](https://github.com/bit3/faker-cli).\n\n## Formatters\n\nEach of the generator properties (like `name`, `address`, and `lorem`) are called \"formatters\". A faker generator has many of them, packaged in \"providers\". Here is a list of the bundled formatters in the default locale.\n\n### `Faker\\Provider\\Base`\n\n    randomDigit             // 7\n    randomDigitNot(5)       // 0, 1, 2, 3, 4, 6, 7, 8, or 9\n    randomDigitNotNull      // 5\n    randomNumber($nbDigits = NULL, $strict = false) // 79907610\n    randomFloat($nbMaxDecimals = NULL, $min = 0, $max = NULL) // 48.8932\n    numberBetween($min = 1000, $max = 9000) // 8567\n    randomLetter            // 'b'\n    // returns randomly ordered subsequence of a provided array\n    randomElements($array = array ('a','b','c'), $count = 1) // array('c')\n    randomElement($array = array ('a','b','c')) // 'b'\n    shuffle('hello, world') // 'rlo,h eoldlw'\n    shuffle(array(1, 2, 3)) // array(2, 1, 3)\n    numerify('Hello ###') // 'Hello 609'\n    lexify('Hello ???') // 'Hello wgt'\n    bothify('Hello ##??') // 'Hello 42jz'\n    asciify('Hello ***') // 'Hello R6+'\n    regexify('[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}'); // sm0@y8k96a.ej\n\n### `Faker\\Provider\\Lorem`\n\n    word                                             // 'aut'\n    words($nb = 3, $asText = false)                  // array('porro', 'sed', 'magni')\n    sentence($nbWords = 6, $variableNbWords = true)  // 'Sit vitae voluptas sint non voluptates.'\n    sentences($nb = 3, $asText = false)              // array('Optio quos qui illo error.', 'Laborum vero a officia id corporis.', 'Saepe provident esse hic eligendi.')\n    paragraph($nbSentences = 3, $variableNbSentences = true) // 'Ut ab voluptas sed a nam. Sint autem inventore aut officia aut aut blanditiis. Ducimus eos odit amet et est ut eum.'\n    paragraphs($nb = 3, $asText = false)             // array('Quidem ut sunt et quidem est accusamus aut. Fuga est placeat rerum ut. Enim ex eveniet facere sunt.', 'Aut nam et eum architecto fugit repellendus illo. Qui ex esse veritatis.', 'Possimus omnis aut incidunt sunt. Asperiores incidunt iure sequi cum culpa rem. Rerum exercitationem est rem.')\n    text($maxNbChars = 200)                          // 'Fuga totam reiciendis qui architecto fugiat nemo. Consequatur recusandae qui cupiditate eos quod.'\n\n### `Faker\\Provider\\en_US\\Person`\n\n    title($gender = null|'male'|'female')     // 'Ms.'\n    titleMale                                 // 'Mr.'\n    titleFemale                               // 'Ms.'\n    suffix                                    // 'Jr.'\n    name($gender = null|'male'|'female')      // 'Dr. Zane Stroman'\n    firstName($gender = null|'male'|'female') // 'Maynard'\n    firstNameMale                             // 'Maynard'\n    firstNameFemale                           // 'Rachel'\n    lastName                                  // 'Zulauf'\n\n### `Faker\\Provider\\en_US\\Address`\n\n    cityPrefix                          // 'Lake'\n    secondaryAddress                    // 'Suite 961'\n    state                               // 'NewMexico'\n    stateAbbr                           // 'OH'\n    citySuffix                          // 'borough'\n    streetSuffix                        // 'Keys'\n    buildingNumber                      // '484'\n    city                                // 'West Judge'\n    streetName                          // 'Keegan Trail'\n    streetAddress                       // '439 Karley Loaf Suite 897'\n    postcode                            // '17916'\n    address                             // '8888 Cummings Vista Apt. 101, Susanbury, NY 95473'\n    country                             // 'Falkland Islands (Malvinas)'\n    latitude($min = -90, $max = 90)     // 77.147489\n    longitude($min = -180, $max = 180)  // 86.211205\n\n### `Faker\\Provider\\en_US\\PhoneNumber`\n\n    phoneNumber             // '201-886-0269 x3767'\n    tollFreePhoneNumber     // '(888) 937-7238'\n    e164PhoneNumber     // '+27113456789'\n\n### `Faker\\Provider\\en_US\\Company`\n\n    catchPhrase             // 'Monitored regional contingency'\n    bs                      // 'e-enable robust architectures'\n    company                 // 'Bogan-Treutel'\n    companySuffix           // 'and Sons'\n    jobTitle                // 'Cashier'\n\n### `Faker\\Provider\\en_US\\Text`\n\n    realText($maxNbChars = 200, $indexSize = 2) // \"And yet I wish you could manage it?) 'And what are they made of?' Alice asked in a shrill, passionate voice. 'Would YOU like cats if you were never even spoke to Time!' 'Perhaps not,' Alice replied.\"\n\n### `Faker\\Provider\\DateTime`\n\n    unixTime($max = 'now')                // 58781813\n    dateTime($max = 'now', $timezone = null) // DateTime('2008-04-25 08:37:17', 'UTC')\n    dateTimeAD($max = 'now', $timezone = null) // DateTime('1800-04-29 20:38:49', 'Europe/Paris')\n    iso8601($max = 'now')                 // '1978-12-09T10:10:29+0000'\n    date($format = 'Y-m-d', $max = 'now') // '1979-06-09'\n    time($format = 'H:i:s', $max = 'now') // '20:49:42'\n    dateTimeBetween($startDate = '-30 years', $endDate = 'now', $timezone = null) // DateTime('2003-03-15 02:00:49', 'Africa/Lagos')\n    dateTimeInInterval($startDate = '-30 years', $interval = '+ 5 days', $timezone = null) // DateTime('2003-03-15 02:00:49', 'Antartica/Vostok')\n    dateTimeThisCentury($max = 'now', $timezone = null)     // DateTime('1915-05-30 19:28:21', 'UTC')\n    dateTimeThisDecade($max = 'now', $timezone = null)      // DateTime('2007-05-29 22:30:48', 'Europe/Paris')\n    dateTimeThisYear($max = 'now', $timezone = null)        // DateTime('2011-02-27 20:52:14', 'Africa/Lagos')\n    dateTimeThisMonth($max = 'now', $timezone = null)       // DateTime('2011-10-23 13:46:23', 'Antarctica/Vostok')\n    amPm($max = 'now')                    // 'pm'\n    dayOfMonth($max = 'now')              // '04'\n    dayOfWeek($max = 'now')               // 'Friday'\n    month($max = 'now')                   // '06'\n    monthName($max = 'now')               // 'January'\n    year($max = 'now')                    // '1993'\n    century                               // 'VI'\n    timezone                              // 'Europe/Paris'\n\nMethods accepting a `$timezone` argument default to `date_default_timezone_get()`. You can pass a custom timezone string to each method, or define a custom timezone for all time methods at once using `$faker::setDefaultTimezone($timezone)`.\n\n### `Faker\\Provider\\Internet`\n\n    email                   // 'tkshlerin@collins.com'\n    safeEmail               // 'king.alford@example.org'\n    freeEmail               // 'bradley72@gmail.com'\n    companyEmail            // 'russel.durward@mcdermott.org'\n    freeEmailDomain         // 'yahoo.com'\n    safeEmailDomain         // 'example.org'\n    userName                // 'wade55'\n    password                // 'k&|X+a45*2['\n    domainName              // 'wolffdeckow.net'\n    domainWord              // 'feeney'\n    tld                     // 'biz'\n    url                     // 'http://www.skilesdonnelly.biz/aut-accusantium-ut-architecto-sit-et.html'\n    slug                    // 'aut-repellat-commodi-vel-itaque-nihil-id-saepe-nostrum'\n    ipv4                    // '109.133.32.252'\n    localIpv4               // '10.242.58.8'\n    ipv6                    // '8e65:933d:22ee:a232:f1c1:2741:1f10:117c'\n    macAddress              // '43:85:B7:08:10:CA'\n\n### `Faker\\Provider\\UserAgent`\n\n    userAgent              // 'Mozilla/5.0 (Windows CE) AppleWebKit/5350 (KHTML, like Gecko) Chrome/13.0.888.0 Safari/5350'\n    chrome                 // 'Mozilla/5.0 (Macintosh; PPC Mac OS X 10_6_5) AppleWebKit/5312 (KHTML, like Gecko) Chrome/14.0.894.0 Safari/5312'\n    firefox                // 'Mozilla/5.0 (X11; Linuxi686; rv:7.0) Gecko/20101231 Firefox/3.6'\n    safari                 // 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_1 rv:3.0; en-US) AppleWebKit/534.11.3 (KHTML, like Gecko) Version/4.0 Safari/534.11.3'\n    opera                  // 'Opera/8.25 (Windows NT 5.1; en-US) Presto/2.9.188 Version/10.00'\n    internetExplorer       // 'Mozilla/5.0 (compatible; MSIE 7.0; Windows 98; Win 9x 4.90; Trident/3.0)'\n\n### `Faker\\Provider\\Payment`\n\n    creditCardType          // 'MasterCard'\n    creditCardNumber        // '4485480221084675'\n    creditCardExpirationDate // 04/13\n    creditCardExpirationDateString // '04/13'\n    creditCardDetails       // array('MasterCard', '4485480221084675', 'Aleksander Nowak', '04/13')\n    // Generates a random IBAN. Set $countryCode to null for a random country\n    iban($countryCode)      // 'IT31A8497112740YZ575DJ28BP4'\n    swiftBicNumber          // 'RZTIAT22263'\n\n### `Faker\\Provider\\Color`\n\n    hexcolor               // '#fa3cc2'\n    rgbcolor               // '0,255,122'\n    rgbColorAsArray        // array(0,255,122)\n    rgbCssColor            // 'rgb(0,255,122)'\n    safeColorName          // 'fuchsia'\n    colorName              // 'Gainsbor'\n    hslColor               // '340,50,20'\n    hslColorAsArray        // array(340,50,20)\n\n### `Faker\\Provider\\File`\n\n    fileExtension          // 'avi'\n    mimeType               // 'video/x-msvideo'\n    // Copy a random file from the source to the target directory and returns the fullpath or filename\n    file($sourceDir = '/tmp', $targetDir = '/tmp') // '/path/to/targetDir/13b73edae8443990be1aa8f1a483bc27.jpg'\n    file($sourceDir, $targetDir, false) // '13b73edae8443990be1aa8f1a483bc27.jpg'\n\n### `Faker\\Provider\\Image`\n\n    // Image generation provided by LoremPixel (http://lorempixel.com/)\n    imageUrl($width = 640, $height = 480) // 'http://lorempixel.com/640/480/'\n    imageUrl($width, $height, 'cats')     // 'http://lorempixel.com/800/600/cats/'\n    imageUrl($width, $height, 'cats', true, 'Faker') // 'http://lorempixel.com/800/400/cats/Faker'\n    imageUrl($width, $height, 'cats', true, 'Faker', true) // 'http://lorempixel.com/gray/800/400/cats/Faker/' Monochrome image\n    image($dir = '/tmp', $width = 640, $height = 480) // '/tmp/13b73edae8443990be1aa8f1a483bc27.jpg'\n    image($dir, $width, $height, 'cats')  // 'tmp/13b73edae8443990be1aa8f1a483bc27.jpg' it's a cat!\n    image($dir, $width, $height, 'cats', false) // '13b73edae8443990be1aa8f1a483bc27.jpg' it's a filename without path\n    image($dir, $width, $height, 'cats', true, false) // it's a no randomize images (default: `true`)\n    image($dir, $width, $height, 'cats', true, true, 'Faker') // 'tmp/13b73edae8443990be1aa8f1a483bc27.jpg' it's a cat with 'Faker' text. Default, `null`.\n\n### `Faker\\Provider\\Uuid`\n\n    uuid                   // '7e57d004-2b97-0e7a-b45f-5387367791cd'\n\n### `Faker\\Provider\\Barcode`\n\n    ean13          // '4006381333931'\n    ean8           // '73513537'\n    isbn13         // '9790404436093'\n    isbn10         // '4881416324'\n\n### `Faker\\Provider\\Miscellaneous`\n\n    boolean // false\n    boolean($chanceOfGettingTrue = 50) // true\n    md5           // 'de99a620c50f2990e87144735cd357e7'\n    sha1          // 'f08e7f04ca1a413807ebc47551a40a20a0b4de5c'\n    sha256        // '0061e4c60dac5c1d82db0135a42e00c89ae3a333e7c26485321f24348c7e98a5'\n    locale        // en_UK\n    countryCode   // UK\n    languageCode  // en\n    currencyCode  // EUR\n    emoji         // 😁\n\n### `Faker\\Provider\\Biased`\n\n    // get a random number between 10 and 20,\n    // with more chances to be close to 20\n    biasedNumberBetween($min = 10, $max = 20, $function = 'sqrt')\n\n### `Faker\\Provider\\HtmlLorem`\n\n    //Generate HTML document which is no more than 2 levels deep, and no more than 3 elements wide at any level.\n    randomHtml(2,3)   // <html><head><title>Aut illo dolorem et accusantium eum.</title></head><body><form action=\"example.com\" method=\"POST\"><label for=\"username\">sequi</label><input type=\"text\" id=\"username\"><label for=\"password\">et</label><input type=\"password\" id=\"password\"></form><b>Id aut saepe non mollitia voluptas voluptas.</b><table><thead><tr><tr>Non consequatur.</tr><tr>Incidunt est.</tr><tr>Aut voluptatem.</tr><tr>Officia voluptas rerum quo.</tr><tr>Asperiores similique.</tr></tr></thead><tbody><tr><td>Sapiente dolorum dolorem sint laboriosam commodi qui.</td><td>Commodi nihil nesciunt eveniet quo repudiandae.</td><td>Voluptates explicabo numquam distinctio necessitatibus repellat.</td><td>Provident ut doloremque nam eum modi aspernatur.</td><td>Iusto inventore.</td></tr><tr><td>Animi nihil ratione id mollitia libero ipsa quia tempore.</td><td>Velit est officia et aut tenetur dolorem sed mollitia expedita.</td><td>Modi modi repudiandae pariatur voluptas rerum ea incidunt non molestiae eligendi eos deleniti.</td><td>Exercitationem voluptatibus dolor est iste quod molestiae.</td><td>Quia reiciendis.</td></tr><tr><td>Inventore impedit exercitationem voluptatibus rerum cupiditate.</td><td>Qui.</td><td>Aliquam.</td><td>Autem nihil aut et.</td><td>Dolor ut quia error.</td></tr><tr><td>Enim facilis iusto earum et minus rerum assumenda quis quia.</td><td>Reprehenderit ut sapiente occaecati voluptatum dolor voluptatem vitae qui velit.</td><td>Quod fugiat non.</td><td>Sunt nobis totam mollitia sed nesciunt est deleniti cumque.</td><td>Repudiandae quo.</td></tr><tr><td>Modi dicta libero quisquam doloremque qui autem.</td><td>Voluptatem aliquid saepe laudantium facere eos sunt dolor.</td><td>Est eos quis laboriosam officia expedita repellendus quia natus.</td><td>Et neque delectus quod fugit enim repudiandae qui.</td><td>Fugit soluta sit facilis facere repellat culpa magni voluptatem maiores tempora.</td></tr><tr><td>Enim dolores doloremque.</td><td>Assumenda voluptatem eum perferendis exercitationem.</td><td>Quasi in fugit deserunt ea perferendis sunt nemo consequatur dolorum soluta.</td><td>Maxime repellat qui numquam voluptatem est modi.</td><td>Alias rerum rerum hic hic eveniet.</td></tr><tr><td>Tempore voluptatem.</td><td>Eaque.</td><td>Et sit quas fugit iusto.</td><td>Nemo nihil rerum dignissimos et esse.</td><td>Repudiandae ipsum numquam.</td></tr><tr><td>Nemo sunt quia.</td><td>Sint tempore est neque ducimus harum sed.</td><td>Dicta placeat atque libero nihil.</td><td>Et qui aperiam temporibus facilis eum.</td><td>Ut dolores qui enim et maiores nesciunt.</td></tr><tr><td>Dolorum totam sint debitis saepe laborum.</td><td>Quidem corrupti ea.</td><td>Cum voluptas quod.</td><td>Possimus consequatur quasi dolorem ut et.</td><td>Et velit non hic labore repudiandae quis.</td></tr></tbody></table></body></html>\n\n## Modifiers\n\nFaker provides three special providers, `unique()`, `optional()`, and `valid()`, to be called before any provider.\n\n```php\n// unique() forces providers to return unique values\n$values = array();\nfor ($i = 0; $i < 10; $i++) {\n  // get a random digit, but always a new one, to avoid duplicates\n  $values []= $faker->unique()->randomDigit;\n}\nprint_r($values); // [4, 1, 8, 5, 0, 2, 6, 9, 7, 3]\n\n// providers with a limited range will throw an exception when no new unique value can be generated\n$values = array();\ntry {\n  for ($i = 0; $i < 10; $i++) {\n    $values []= $faker->unique()->randomDigitNotNull;\n  }\n} catch (\\OverflowException $e) {\n  echo \"There are only 9 unique digits not null, Faker can't generate 10 of them!\";\n}\n\n// you can reset the unique modifier for all providers by passing true as first argument\n$faker->unique($reset = true)->randomDigitNotNull; // will not throw OverflowException since unique() was reset\n// tip: unique() keeps one array of values per provider\n\n// optional() sometimes bypasses the provider to return a default value instead (which defaults to NULL)\n$values = array();\nfor ($i = 0; $i < 10; $i++) {\n  // get a random digit, but also null sometimes\n  $values []= $faker->optional()->randomDigit;\n}\nprint_r($values); // [1, 4, null, 9, 5, null, null, 4, 6, null]\n\n// optional() accepts a weight argument to specify the probability of receiving the default value.\n// 0 will always return the default value; 1 will always return the provider. Default weight is 0.5 (50% chance).\n$faker->optional($weight = 0.1)->randomDigit; // 90% chance of NULL\n$faker->optional($weight = 0.9)->randomDigit; // 10% chance of NULL\n\n// optional() accepts a default argument to specify the default value to return.\n// Defaults to NULL.\n$faker->optional($weight = 0.5, $default = false)->randomDigit; // 50% chance of FALSE\n$faker->optional($weight = 0.9, $default = 'abc')->word; // 10% chance of 'abc'\n\n// valid() only accepts valid values according to the passed validator functions\n$values = array();\n$evenValidator = function($digit) {\n\treturn $digit % 2 === 0;\n};\nfor ($i = 0; $i < 10; $i++) {\n\t$values []= $faker->valid($evenValidator)->randomDigit;\n}\nprint_r($values); // [0, 4, 8, 4, 2, 6, 0, 8, 8, 6]\n\n// just like unique(), valid() throws an overflow exception when it can't generate a valid value\n$values = array();\ntry {\n  $faker->valid($evenValidator)->randomElement([1, 3, 5, 7, 9]);\n} catch (\\OverflowException $e) {\n  echo \"Can't pick an even number in that set!\";\n}\n```\n\nIf you would like to use a modifier with a value not generated by Faker, use the `passthrough()` method. `passthrough()` simply returns whatever value it was given.\n\n```php\n$faker->optional()->passthrough(mt_rand(5, 15));\n```\n\n## Localization\n\n`Faker\\Factory` can take a locale as an argument, to return localized data. If no localized provider is found, the factory fallbacks to the default locale (en_US).\n\n```php\n<?php\n$faker = Faker\\Factory::create('fr_FR'); // create a French faker\nfor ($i = 0; $i < 10; $i++) {\n  echo $faker->name, \"\\n\";\n}\n  // Luce du Coulon\n  // Auguste Dupont\n  // Roger Le Voisin\n  // Alexandre Lacroix\n  // Jacques Humbert-Roy\n  // Thérèse Guillet-Andre\n  // Gilles Gros-Bodin\n  // Amélie Pires\n  // Marcel Laporte\n  // Geneviève Marchal\n```\n\nYou can check available Faker locales in the source code, [under the `Provider` directory](https://github.com/fzaninotto/Faker/tree/master/src/Faker/Provider). The localization of Faker is an ongoing process, for which we need your help. Don't hesitate to create localized providers to your own locale and submit a PR!\n\n## Populating Entities Using an ORM or an ODM\n\nFaker provides adapters for Object-Relational and Object-Document Mappers (currently, [Propel](http://www.propelorm.org), [Doctrine2](http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/), [CakePHP](http://cakephp.org), [Spot2](https://github.com/vlucas/spot2), [Mandango](https://github.com/mandango/mandango) and [Eloquent](https://laravel.com/docs/master/eloquent) are supported). These adapters ease the population of databases through the Entity classes provided by an ORM library (or the population of document stores using Document classes provided by an ODM library).\n\nTo populate entities, create a new populator class (using a generator instance as parameter), then list the class and number of all the entities that must be generated. To launch the actual data population, call the `execute()` method.\n\nNote that some of the `populators` could require additional parameters. As example the `doctrine` populator has an option to specify\nits batchSize on how often it will flush the UnitOfWork to the database.\n\nHere is an example showing how to populate 5 `Author` and 10 `Book` objects:\n\n```php\n<?php\n$generator = \\Faker\\Factory::create();\n$populator = new \\Faker\\ORM\\Propel\\Populator($generator);\n$populator->addEntity('Author', 5);\n$populator->addEntity('Book', 10);\n$insertedPKs = $populator->execute();\n```\n\nThe populator uses name and column type guessers to populate each column with relevant data. For instance, Faker populates a column named `first_name` using the `firstName` formatter, and a column with a `TIMESTAMP` type using the `dateTime` formatter. The resulting entities are therefore coherent. If Faker misinterprets a column name, you can still specify a custom closure to be used for populating a particular column, using the third argument to `addEntity()`:\n\n```php\n<?php\n$populator->addEntity('Book', 5, array(\n  'ISBN' => function() use ($generator) { return $generator->ean13(); }\n));\n```\n\nIn this example, Faker will guess a formatter for all columns except `ISBN`, for which the given anonymous function will be used.\n\n**Tip**: To ignore some columns, specify `null` for the column names in the third argument of `addEntity()`. This is usually necessary for columns added by a behavior:\n\n```php\n<?php\n$populator->addEntity('Book', 5, array(\n  'CreatedAt' => null,\n  'UpdatedAt' => null,\n));\n```\n\nOf course, Faker does not populate autoincremented primary keys. In addition, `Faker\\ORM\\Propel\\Populator::execute()` returns the list of inserted PKs, indexed by class:\n\n```php\n<?php\nprint_r($insertedPKs);\n// array(\n//   'Author' => (34, 35, 36, 37, 38),\n//   'Book'   => (456, 457, 458, 459, 470, 471, 472, 473, 474, 475)\n// )\n```\n\n**Note:** Due to the fact that `Faker` returns all the primary keys inserted, the memory consumption will go up drastically when you do batch inserts due to the big list of data.\n\nIn the previous example, the `Book` and `Author` models share a relationship. Since `Author` entities are populated first, Faker is smart enough to relate the populated `Book` entities to one of the populated `Author` entities.\n\nLastly, if you want to execute an arbitrary function on an entity before insertion, use the fourth argument of the `addEntity()` method:\n\n```php\n<?php\n$populator->addEntity('Book', 5, array(), array(\n  function($book) { $book->publish(); },\n));\n```\n\n## Seeding the Generator\n\nYou may want to get always the same generated data - for instance when using Faker for unit testing purposes. The generator offers a `seed()` method, which seeds the random number generator. Calling the same script twice with the same seed produces the same results.\n\n```php\n<?php\n$faker = Faker\\Factory::create();\n$faker->seed(1234);\n\necho $faker->name; // 'Jess Mraz I';\n```\n\n> **Tip**: DateTime formatters won't reproduce the same fake data if you don't fix the `$max` value:\n>\n> ```php\n> <?php\n> // even when seeded, this line will return different results because $max varies\n> $faker->dateTime(); // equivalent to $faker->dateTime($max = 'now')\n> // make sure you fix the $max parameter\n> $faker->dateTime('2014-02-25 08:37:17'); // will return always the same date when seeded\n> ```\n>\n> **Tip**: Formatters won't reproduce the same fake data if you use the `rand()` php function. Use `$faker` or `mt_rand()` instead:\n>\n> ```php\n> <?php\n> // bad\n> $faker->realText(rand(10,20));\n> // good\n> $faker->realText($faker->numberBetween(10,20));\n> ```\n\n\n\n## Faker Internals: Understanding Providers\n\nA `Faker\\Generator` alone can't do much generation. It needs `Faker\\Provider` objects to delegate the data generation to them. `Faker\\Factory::create()` actually creates a `Faker\\Generator` bundled with the default providers. Here is what happens under the hood:\n\n```php\n<?php\n$faker = new Faker\\Generator();\n$faker->addProvider(new Faker\\Provider\\en_US\\Person($faker));\n$faker->addProvider(new Faker\\Provider\\en_US\\Address($faker));\n$faker->addProvider(new Faker\\Provider\\en_US\\PhoneNumber($faker));\n$faker->addProvider(new Faker\\Provider\\en_US\\Company($faker));\n$faker->addProvider(new Faker\\Provider\\Lorem($faker));\n$faker->addProvider(new Faker\\Provider\\Internet($faker));\n````\n\nWhenever you try to access a property on the `$faker` object, the generator looks for a method with the same name in all the providers attached to it. For instance, calling `$faker->name` triggers a call to `Faker\\Provider\\Person::name()`. And since Faker starts with the last provider, you can easily override existing formatters: just add a provider containing methods named after the formatters you want to override.\n\nThat means that you can easily add your own providers to a `Faker\\Generator` instance. A provider is usually a class extending `\\Faker\\Provider\\Base`. This parent class allows you to use methods like `lexify()` or `randomNumber()`; it also gives you access to formatters of other providers, through the protected `$generator` property. The new formatters are the public methods of the provider class.\n\nHere is an example provider for populating Book data:\n\n```php\n<?php\n\nnamespace Faker\\Provider;\n\nclass Book extends \\Faker\\Provider\\Base\n{\n  public function title($nbWords = 5)\n  {\n    $sentence = $this->generator->sentence($nbWords);\n    return substr($sentence, 0, strlen($sentence) - 1);\n  }\n\n  public function ISBN()\n  {\n    return $this->generator->ean13();\n  }\n}\n```\n\nTo register this provider, just add a new instance of `\\Faker\\Provider\\Book` to an existing generator:\n\n```php\n<?php\n$faker->addProvider(new \\Faker\\Provider\\Book($faker));\n```\n\nNow you can use the two new formatters like any other Faker formatter:\n\n```php\n<?php\n$book = new Book();\n$book->setTitle($faker->title);\n$book->setISBN($faker->ISBN);\n$book->setSummary($faker->text);\n$book->setPrice($faker->randomNumber(2));\n```\n\n**Tip**: A provider can also be a Plain Old PHP Object. In that case, all the public methods of the provider become available to the generator.\n\n## Real Life Usage\n\nThe following script generates a valid XML document:\n\n```php\n<?php\nrequire_once '/path/to/Faker/src/autoload.php';\n$faker = Faker\\Factory::create();\n?>\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<contacts>\n<?php for ($i = 0; $i < 10; $i++): ?>\n  <contact firstName=\"<?php echo $faker->firstName ?>\" lastName=\"<?php echo $faker->lastName ?>\" email=\"<?php echo $faker->email ?>\">\n    <phone number=\"<?php echo $faker->phoneNumber ?>\"/>\n<?php if ($faker->boolean(25)): ?>\n    <birth date=\"<?php echo $faker->dateTimeThisCentury->format('Y-m-d') ?>\" place=\"<?php echo $faker->city ?>\"/>\n<?php endif; ?>\n    <address>\n      <street><?php echo $faker->streetAddress ?></street>\n      <city><?php echo $faker->city ?></city>\n      <postcode><?php echo $faker->postcode ?></postcode>\n      <state><?php echo $faker->state ?></state>\n    </address>\n    <company name=\"<?php echo $faker->company ?>\" catchPhrase=\"<?php echo $faker->catchPhrase ?>\">\n<?php if ($faker->boolean(33)): ?>\n      <offer><?php echo $faker->bs ?></offer>\n<?php endif; ?>\n<?php if ($faker->boolean(33)): ?>\n      <director name=\"<?php echo $faker->name ?>\" />\n<?php endif; ?>\n    </company>\n<?php if ($faker->boolean(15)): ?>\n    <details>\n<![CDATA[\n<?php echo $faker->text(400) ?>\n]]>\n    </details>\n<?php endif; ?>\n  </contact>\n<?php endfor; ?>\n</contacts>\n```\n\nRunning this script produces a document looking like:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<contacts>\n  <contact firstName=\"Ona\" lastName=\"Bednar\" email=\"schamberger.frank@wuckert.com\">\n    <phone number=\"1-265-479-1196x714\"/>\n    <address>\n      <street>182 Harrison Cove</street>\n      <city>North Lloyd</city>\n      <postcode>45577</postcode>\n      <state>Alabama</state>\n    </address>\n    <company name=\"Veum, Funk and Shanahan\" catchPhrase=\"Function-based stable solution\">\n      <offer>orchestrate compelling web-readiness</offer>\n    </company>\n    <details>\n<![CDATA[\nAlias accusantium voluptatum autem nobis cumque neque modi. Voluptatem error molestiae consequatur alias.\nIllum commodi molestiae aut repellat id. Et sit consequuntur aut et ullam asperiores. Cupiditate culpa voluptatem et mollitia dolor. Nisi praesentium qui ut.\n]]>\n    </details>\n  </contact>\n  <contact firstName=\"Aurelie\" lastName=\"Paucek\" email=\"alfonzo55@durgan.com\">\n    <phone number=\"863.712.1363x9425\"/>\n    <address>\n      <street>90111 Hegmann Inlet</street>\n      <city>South Geovanymouth</city>\n      <postcode>69961-9311</postcode>\n      <state>Colorado</state>\n    </address>\n    <company name=\"Krajcik-Grimes\" catchPhrase=\"Switchable cohesive instructionset\">\n    </company>\n  </contact>\n  <contact firstName=\"Clifton\" lastName=\"Kshlerin\" email=\"kianna.wiegand@framiwyman.info\">\n    <phone number=\"692-194-4746\"/>\n    <address>\n      <street>9791 Nona Corner</street>\n      <city>Harberhaven</city>\n      <postcode>74062-8191</postcode>\n      <state>RhodeIsland</state>\n    </address>\n    <company name=\"Rosenbaum-Aufderhar\" catchPhrase=\"Realigned asynchronous encryption\">\n    </company>\n  </contact>\n  <contact firstName=\"Alexandre\" lastName=\"Orn\" email=\"thelma37@erdmancorwin.biz\">\n    <phone number=\"189.655.8677x027\"/>\n    <address>\n      <street>11161 Schultz Via</street>\n      <city>Feilstad</city>\n      <postcode>98019</postcode>\n      <state>NewJersey</state>\n    </address>\n    <company name=\"O'Hara-Prosacco\" catchPhrase=\"Re-engineered solution-oriented algorithm\">\n      <director name=\"Dr. Berenice Auer V\" />\n    </company>\n    <details>\n<![CDATA[\nUt itaque et quaerat doloremque eum praesentium. Rerum in saepe dolorem. Explicabo qui consequuntur commodi minima rem.\nHarum temporibus rerum dolores. Non molestiae id dolorem placeat.\nAut asperiores nihil eius repellendus. Vero nihil corporis voluptatem explicabo commodi. Occaecati omnis blanditiis beatae quod aspernatur eos.\n]]>\n    </details>\n  </contact>\n  <contact firstName=\"Katelynn\" lastName=\"Kohler\" email=\"reinger.trudie@stiedemannjakubowski.com\">\n    <phone number=\"(665)713-1657\"/>\n    <address>\n      <street>6106 Nader Village Suite 753</street>\n      <city>McLaughlinstad</city>\n      <postcode>43189-8621</postcode>\n      <state>Missouri</state>\n    </address>\n    <company name=\"Herman-Tremblay\" catchPhrase=\"Object-based explicit service-desk\">\n      <offer>expedite viral synergies</offer>\n      <director name=\"Arden Deckow\" />\n    </company>\n  </contact>\n  <contact firstName=\"Blanca\" lastName=\"Stark\" email=\"tad27@feest.net\">\n    <phone number=\"168.719.4692x87177\"/>\n    <address>\n      <street>7546 Kuvalis Plaza</street>\n      <city>South Wilfrid</city>\n      <postcode>77069</postcode>\n      <state>Georgia</state>\n    </address>\n    <company name=\"Upton, Braun and Rowe\" catchPhrase=\"Visionary leadingedge pricingstructure\">\n    </company>\n  </contact>\n  <contact firstName=\"Rene\" lastName=\"Spencer\" email=\"anibal28@armstrong.info\">\n    <phone number=\"715.222.0095x175\"/>\n    <birth date=\"2008-08-07\" place=\"Zulaufborough\"/>\n    <address>\n      <street>478 Daisha Landing Apt. 510</street>\n      <city>West Lizethhaven</city>\n      <postcode>30566-5362</postcode>\n      <state>WestVirginia</state>\n    </address>\n    <company name=\"Wiza Inc\" catchPhrase=\"Persevering reciprocal approach\">\n      <offer>orchestrate dynamic networks</offer>\n      <director name=\"Erwin Nienow\" />\n    </company>\n    <details>\n<![CDATA[\nDolorem consequatur voluptates unde optio unde. Accusantium dolorem est est architecto impedit. Corrupti et provident quo.\nReprehenderit dolores aut quidem suscipit repudiandae corporis error. Molestiae enim aperiam illo.\nEt similique qui non expedita quia dolorum. Ex rem incidunt ea accusantium temporibus minus non.\n]]>\n    </details>\n  </contact>\n  <contact firstName=\"Alessandro\" lastName=\"Hagenes\" email=\"tbreitenberg@oharagorczany.com\">\n    <phone number=\"1-284-958-6768\"/>\n    <address>\n      <street>1251 Koelpin Mission</street>\n      <city>North Revastad</city>\n      <postcode>81620</postcode>\n      <state>Maryland</state>\n    </address>\n    <company name=\"Stiedemann-Bruen\" catchPhrase=\"Re-engineered 24/7 success\">\n    </company>\n  </contact>\n  <contact firstName=\"Novella\" lastName=\"Rutherford\" email=\"claud65@bogisich.biz\">\n    <phone number=\"(091)825-7971\"/>\n    <address>\n      <street>6396 Langworth Hills Apt. 446</street>\n      <city>New Carlos</city>\n      <postcode>89399-0268</postcode>\n      <state>Wyoming</state>\n    </address>\n    <company name=\"Stroman-Legros\" catchPhrase=\"Expanded 4thgeneration moratorium\">\n      <director name=\"Earlene Bayer\" />\n    </company>\n  </contact>\n  <contact firstName=\"Andreane\" lastName=\"Mann\" email=\"meggie17@ornbaumbach.com\">\n    <phone number=\"941-659-9982x5689\"/>\n    <birth date=\"1934-02-21\" place=\"Stantonborough\"/>\n    <address>\n      <street>2246 Kreiger Station Apt. 291</street>\n      <city>Kaydenmouth</city>\n      <postcode>11397-1072</postcode>\n      <state>Wyoming</state>\n    </address>\n    <company name=\"Lebsack, Bernhard and Kiehn\" catchPhrase=\"Persevering actuating framework\">\n      <offer>grow sticky portals</offer>\n    </company>\n    <details>\n<![CDATA[\nQuia dolor ut quia error libero. Enim facilis iusto earum et minus rerum assumenda. Quia doloribus et reprehenderit ut. Occaecati voluptatum dolor voluptatem vitae qui velit quia.\nFugiat non in itaque sunt nobis totam. Sed nesciunt est deleniti cumque alias. Repudiandae quo aut numquam modi dicta libero.\n]]>\n    </details>\n  </contact>\n</contacts>\n```\n\n## Language specific formatters\n\n### `Faker\\Provider\\ar_SA\\Person`\n\n```php\n<?php\n\necho $faker->idNumber;      // ID number\necho $faker->nationalIdNumber // Citizen ID number\necho $faker->foreignerIdNumber // Foreigner ID number\necho $faker->companyIdNumber // Company ID number\n```\n\n### `Faker\\Provider\\ar_SA\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber // \"SA0218IBYZVZJSEC8536V4XC\"\n```\n\n### `Faker\\Provider\\at_AT\\Payment`\n\n```php\n<?php\n\necho $faker->vat;           // \"AT U12345678\" - Austrian Value Added Tax number\necho $faker->vat(false);    // \"ATU12345678\" - unspaced Austrian Value Added Tax number\n```\n\n### `Faker\\Provider\\bg_BG\\Payment`\n\n```php\n<?php\n\necho $faker->vat;           // \"BG 0123456789\" - Bulgarian Value Added Tax number\necho $faker->vat(false);    // \"BG0123456789\" - unspaced Bulgarian Value Added Tax number\n```\n\n### `Faker\\Provider\\cs_CZ\\Address`\n\n```php\n<?php\n\necho $faker->region; // \"Liberecký kraj\"\n```\n\n### `Faker\\Provider\\cs_CZ\\Company`\n\n```php\n<?php\n\n// Generates a valid IČO\necho $faker->ico; // \"69663963\"\n```\n\n### `Faker\\Provider\\cs_CZ\\DateTime`\n\n```php\n<?php\n\necho $faker->monthNameGenitive; // \"prosince\"\necho $faker->formattedDate; // \"12. listopadu 2015\"\n```\n\n### `Faker\\Provider\\cs_CZ\\Person`\n\n```php\n<?php\n\necho $faker->birthNumber; // \"7304243452\"\n```\n\n### `Faker\\Provider\\da_DK\\Person`\n\n```php\n<?php\n\n// Generates a random CPR number\necho $faker->cpr; // \"051280-2387\"\n```\n\n### `Faker\\Provider\\da_DK\\Address`\n\n```php\n<?php\n\n// Generates a random 'kommune' name\necho $faker->kommune; // \"Frederiksberg\"\n\n// Generates a random region name\necho $faker->region; // \"Region Sjælland\"\n```\n\n### `Faker\\Provider\\da_DK\\Company`\n\n```php\n<?php\n\n// Generates a random CVR number\necho $faker->cvr; // \"32458723\"\n\n// Generates a random P number\necho $faker->p; // \"5398237590\"\n```\n\n### `Faker\\Provider\\de_CH\\Person`\n```php\n<?php\n\n// Generates a random AVS13/AHV13 social security number\necho $faker->avs13; // \"756.1234.5678.97\" OR\necho $faker->ahv13; // \"756.1234.5678.97\"\n```\n\n### `Faker\\Provider\\de_DE\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber; // \"DE41849025553661169313\"\necho $faker->bank; // \"Volksbank Stuttgart\"\n\n```\n\n### `Faker\\Provider\\en_HK\\Address`\n\n```php\n<?php\n\n// Generates a fake town name based on the words commonly found in Hong Kong\necho $faker->town; // \"Yuen Long\"\n\n// Generates a fake village name based on the words commonly found in Hong Kong\necho $faker->village; // \"O Tau\"\n\n// Generates a fake estate name based on the words commonly found in Hong Kong\necho $faker->estate; // \"Ching Lai Court\"\n\n```\n\n### `Faker\\Provider\\en_HK\\Phone`\n\n```php\n<?php\n\n// Generates a Hong Kong mobile number (starting with 5, 6 or 9)\necho $faker->mobileNumber; // \"92150087\"\n\n// Generates a Hong Kong landline number (starting with 2 or 3)\necho $faker->landlineNumber; // \"32750132\"\n\n// Generates a Hong Kong fax number (starting with 7)\necho $faker->faxNumber; // \"71937729\"\n\n```\n\n### `Faker\\Provider\\en_NG\\Address`\n\n```php\n<?php\n\n// Generates a random region name\necho $faker->region; // 'Katsina'\n```\n\n### `Faker\\Provider\\en_NG\\Person`\n\n```php\n<?php\n\n// Generates a random person name\necho $faker->name; // 'Oluwunmi Mayowa'\n```\n\n### `Faker\\Provider\\en_NZ\\Phone`\n\n```php\n<?php\n\n// Generates a cell (mobile) phone number\necho $faker->mobileNumber; // \"021 123 4567\"\n\n// Generates a toll free number\necho $faker->tollFreeNumber; // \"0800 123 456\"\n\n// Area Code\necho $faker->areaCode; // \"03\"\n```\n\n### `Faker\\Provider\\en_US\\Company`\n\n```php\n<?php\n\n// Generate a random Employer Identification Number\necho $faker->ein; // '12-3456789'\n```\n\n### `Faker\\Provider\\en_US\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber;  // '51915734310'\necho $faker->bankRoutingNumber;  // '212240302'\n```\n\n### `Faker\\Provider\\en_US\\Person`\n\n```php\n<?php\n\n// Generates a random Social Security Number\necho $faker->ssn; // '123-45-6789'\n```\n\n### `Faker\\Provider\\en_ZA\\Company`\n\n```php\n<?php\n\n// Generates a random company registration number\necho $faker->companyNumber; // 1999/789634/01\n```\n\n### `Faker\\Provider\\en_ZA\\Person`\n\n```php\n<?php\n\n// Generates a random national identification number\necho $faker->idNumber; // 6606192211041\n\n// Generates a random valid licence code\necho $faker->licenceCode; // EB\n```\n\n### `Faker\\Provider\\en_ZA\\PhoneNumber`\n\n```php\n<?php\n\n// Generates a special rate toll free phone number\necho $faker->tollFreeNumber; // 0800 555 5555\n\n// Generates a mobile phone number\necho $faker->mobileNumber; // 082 123 5555\n```\n\n### `Faker\\Provider\\es_ES\\Person`\n\n```php\n<?php\n\n// Generates a Documento Nacional de Identidad (DNI) number\necho $faker->dni; // '77446565E'\n\n// Generates a random valid licence code\necho $faker->licenceCode; // B\n```\n\n### `Faker\\Provider\\es_ES\\Payment`\n\n```php\n<?php\n// Generates a Código de identificación Fiscal (CIF) number\necho $faker->vat;           // \"A35864370\"\n```\n\n### `Faker\\Provider\\es_ES\\PhoneNumber`\n\n```php\n<?php\n\n// Generates a special rate toll free phone number\necho $faker->tollFreeNumber; // 900 123 456\n\n// Generates a mobile phone number\necho $faker->mobileNumber; // +34 612 12 24\n```\n\n### `Faker\\Provider\\es_PE\\Person`\n\n```php\n<?php\n\n// Generates a Peruvian Documento Nacional de Identidad (DNI) number\necho $faker->dni; // '83367512'\n```\n\n### `Faker\\Provider\\fa_IR\\Person`\n\n```php\n<?php\n\n// Generates a valid nationalCode\necho $faker->nationalCode; // \"0078475759\"\n```\n\n### `Faker\\Provider\\fa_IR\\Address`\n\n```php\n<?php\n\n// Generates a random building name\necho $faker->building; // \"ساختمان آفتاب\"\n\n// Returns a random city name\necho $faker->city // \"استان زنجان\"\n```\n\n### `Faker\\Provider\\fa_IR\\Company`\n\n```php\n<?php\n\n// Generates a random contract type\necho $faker->contract; // \"رسمی\"\n```\n\n### `Faker\\Provider\\fi_FI\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"FI8350799879879616\"\n```\n\n### `Faker\\Provider\\fi_FI\\Person`\n\n```php\n<?php\n\n//Generates a valid Finnish personal identity number (in Finnish - Henkilötunnus)\necho $faker->personalIdentityNumber() // '170974-007J'\n\n//Since the numbers are different for male and female persons, optionally you can specify gender.\necho $faker->personalIdentityNumber(\\DateTime::createFromFormat('Y-m-d', '2015-12-14'), 'female') // '141215A520B'\n```\n\n### `Faker\\Provider\\fr_BE\\Payment`\n\n```php\n<?php\n\necho $faker->vat;           // \"BE 0123456789\" - Belgian Value Added Tax number\necho $faker->vat(false);    // \"BE0123456789\" - unspaced Belgian Value Added Tax number\n```\n\n### `Faker\\Provider\\es_VE\\Person`\n\n```php\n<?php\n\n// Generate a Cédula de identidad number, you can pass one argument to add separator\necho $faker->nationalId; // 'V11223344'\n```\n\n### `Faker\\Provider\\es_VE\\Company`\n\n```php\n<?php\n\n// Generates a R.I.F. number, you can pass one argument to add separators\necho $faker->taxpayerIdentificationNumber; // 'J1234567891'\n```\n\n### `Faker\\Provider\\fr_CH\\Person`\n```php\n<?php\n\n// Generates a random AVS13/AHV13 social security number\necho $faker->avs13; // \"756.1234.5678.97\"\n```\n\n### `Faker\\Provider\\fr_FR\\Address`\n\n```php\n<?php\n\n// Generates a random department name\necho $faker->departmentName; // \"Haut-Rhin\"\n\n// Generates a random department number\necho $faker->departmentNumber; // \"2B\"\n\n// Generates a random department info (department number => department name)\n$faker->department; // array('18' => 'Cher');\n\n// Generates a random region\necho $faker->region; // \"Saint-Pierre-et-Miquelon\"\n\n// Generates a random appartement,stair\necho $faker->secondaryAddress; // \"Bat. 961\"\n```\n\n### `Faker\\Provider\\fr_FR\\Company`\n\n```php\n<?php\n\n// Generates a random SIREN number\necho $faker->siren; // 082 250 104\n\n// Generates a random SIRET number\necho $faker->siret; // 347 355 708 00224\n```\n\n### `Faker\\Provider\\fr_FR\\Payment`\n\n```php\n<?php\n\n// Generates a random VAT\necho $faker->vat; // FR 12 123 456 789\n```\n\n### `Faker\\Provider\\fr_FR\\Person`\n\n```php\n<?php\n\n// Generates a random NIR / Sécurité Sociale number\necho $faker->nir; // 1 88 07 35 127 571 - 19\n```\n\n### `Faker\\Provider\\fr_FR\\PhoneNumber`\n\n```php\n<?php\n\n// Generates phone numbers\necho $faker->phoneNumber; // +33 (0)1 67 97 01 31\necho $faker->mobileNumber; // +33 6 21 12 72 84\necho $faker->serviceNumber // 08 98 04 84 46\n```\n\n\n### `Faker\\Provider\\he_IL\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber // \"IL392237392219429527697\"\n```\n\n### `Faker\\Provider\\hr_HR\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber // \"HR3789114847226078672\"\n```\n\n### `Faker\\Provider\\hu_HU\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"HU09904437680048220079300783\"\n```\n\n### `Faker\\Provider\\id_ID\\Person`\n\n```php\n<?php\n\n// Generates a random Nomor Induk Kependudukan (NIK)\n\n// first argument is gender, either Person::GENDER_MALE or Person::GENDER_FEMALE, if none specified random gender is used\n// second argument is birth date (DateTime object), if none specified, random birth date is used\necho $faker->nik(); // \"8522246001570940\"\n```\n\n### `Faker\\Provider\\it_CH\\Person`\n```php\n<?php\n\n// Generates a random AVS13/AHV13 social security number\necho $faker->avs13; // \"756.1234.5678.97\"\n```\n\n### `Faker\\Provider\\it_IT\\Company`\n\n```php\n<?php\n\n// Generates a random Vat Id\necho $faker->vatId(); // \"IT98746784967\"\n```\n\n### `Faker\\Provider\\it_IT\\Person`\n\n```php\n<?php\n\n// Generates a random Tax Id code (Codice fiscale)\necho $faker->taxId(); // \"DIXDPZ44E08F367A\"\n```\n\n### `Faker\\Provider\\ja_JP\\Person`\n\n```php\n<?php\n\n// Generates a 'kana' name\necho $faker->kanaName($gender = null|'male'|'female') // \"アオタ ミノル\"\n\n// Generates a 'kana' first name\necho $faker->firstKanaName($gender = null|'male'|'female') // \"ヒデキ\"\n\n// Generates a 'kana' first name on the male\necho $faker->firstKanaNameMale // \"ヒデキ\"\n\n// Generates a 'kana' first name on the female\necho $faker->firstKanaNameFemale // \"マアヤ\"\n\n// Generates a 'kana' last name\necho $faker->lastKanaName; // \"ナカジマ\"\n```\n\n### `Faker\\Provider\\ka_GE\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"GE33ZV9773853617253389\"\n```\n\n### `Faker\\Provider\\kk_KZ\\Company`\n\n```php\n<?php\n\n// Generates an business identification number\necho $faker->businessIdentificationNumber; // \"150140000019\"\n```\n\n### `Faker\\Provider\\kk_KZ\\Payment`\n\n```php\n<?php\n\n// Generates a random bank name\necho $faker->bank; // \"Қазкоммерцбанк\"\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"KZ1076321LO4H6X41I37\"\n```\n\n### `Faker\\Provider\\kk_KZ\\Person`\n\n```php\n<?php\n\n// Generates an individual identification number\necho $faker->individualIdentificationNumber; // \"780322300455\"\n\n// Generates an individual identification number based on his/her birth date\necho $faker->individualIdentificationNumber(new \\DateTime('1999-03-01')); // \"990301300455\"\n```\n\n### `Faker\\Provider\\ko_KR\\Address`\n\n```php\n<?php\n\n// Generates a metropolitan city\necho $faker->metropolitanCity; // \"서울특별시\"\n\n// Generates a borough\necho $faker->borough; // \"강남구\"\n```\n\n### `Faker\\Provider\\ko_KR\\PhoneNumber`\n\n```php\n<?php\n\n// Generates a local area phone numer\necho $faker->localAreaPhoneNumber; // \"02-1234-4567\"\n\n// Generates a cell phone number\necho $faker->cellPhoneNumber; // \"010-9876-5432\"\n```\n\n### `Faker\\Provider\\lt_LT\\Payment`\n\n```php\n<?php\n\necho $faker->bankAccountNumber // \"LT300848876740317118\"\n```\n\n### `Faker\\Provider\\lv_LV\\Person`\n\n```php\n<?php\n\n// Generates a random personal identity card number\necho $faker->personalIdentityNumber; // \"140190-12301\"\n```\n\n### `Faker\\Provider\\ms_MY\\Address`\n\n```php\n<?php\n\n// Generates a random Malaysian township\necho $faker->township; // \"Taman Bahagia\"\n\n// Generates a random Malaysian town address with matching postcode and state\necho $faker->townState; // \"55100 Bukit Bintang, Kuala Lumpur\"\n```\n\n### `Faker\\Provider\\ms_MY\\Miscellaneous`\n\n```php\n<?php\n\n// Generates a random vehicle license plate number\necho $faker->jpjNumberPlate; // \"WPL 5169\"\n```\n\n### `Faker\\Provider\\ms_MY\\Payment`\n\n```php\n<?php\n\n// Generates a random Malaysian bank\necho $faker->bank; // \"Maybank\"\n\n// Generates a random Malaysian bank account number (10-16 digits)\necho $faker->bankAccountNumber; // \"1234567890123456\"\n\n// Generates a random Malaysian insurance company\necho $faker->insurance; // \"AIA Malaysia\"\n\n// Generates a random Malaysian bank SWIFT Code\necho $faker->swiftCode; // \"MBBEMYKLXXX\"\n```\n\n### `Faker\\Provider\\ms_MY\\Person`\n\n```php\n<?php\n\n// Generates a random personal identity card (myKad) number\necho $faker->myKadNumber($gender = null|'male'|'female', $hyphen = null|true|false); // \"710703471796\"\n```\n\n### `Faker\\Provider\\ms_MY\\PhoneNumber`\n\n```php\n<?php\n\n// Generates a random Malaysian mobile number\necho $faker->mobileNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // \"+6012-705 3767\"\n\n// Generates a random Malaysian landline number\necho $faker->fixedLineNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // \"03-7112 0455\"\n\n// Generates a random Malaysian voip number\necho $faker->voipNumber($countryCodePrefix = null|true|false, $formatting = null|true|false); // \"015-458 7099\"\n```\n\n### `Faker\\Provider\\ne_NP\\Address`\n\n```php\n<?php\n\n//Generates a Nepali district name\necho $faker->district;\n\n//Generates a Nepali city name\necho $faker->cityName;\n```\n\n### `Faker\\Provider\\nl_BE\\Payment`\n\n```php\n<?php\n\necho $faker->vat;           // \"BE 0123456789\" - Belgian Value Added Tax number\necho $faker->vat(false);    // \"BE0123456789\" - unspaced Belgian Value Added Tax number\n```\n\n### `Faker\\Provider\\nl_BE\\Person`\n\n```php\n<?php\n\necho $faker->rrn();         // \"83051711784\" - Belgian Rijksregisternummer\necho $faker->rrn('female'); // \"50032089858\" - Belgian Rijksregisternummer for a female\n```\n\n### `Faker\\Provider\\nl_NL\\Company`\n\n```php\n<?php\n\necho $faker->jobTitle; // \"Houtbewerker\"\necho $faker->vat; // \"NL123456789B01\" - Dutch Value Added Tax number\necho $faker->btw; // \"NL123456789B01\" - Dutch Value Added Tax number (alias)\n```\n\n### `Faker\\Provider\\nl_NL\\Person`\n\n```php\n<?php\n\necho $faker->idNumber; // \"111222333\" - Dutch Personal identification number (BSN)\n```\n\n### `Faker\\Provider\\nb_NO\\MobileNumber`\n\n```php\n<?php\n\n// Generates a random Norwegian mobile phone number\necho $faker->mobileNumber; // \"+4799988777\"\necho $faker->mobileNumber; // \"999 88 777\"\necho $faker->mobileNumber; // \"99988777\"\n```\n\n### `Faker\\Provider\\nb_NO\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"NO3246764709816\"\n```\n\n### `Faker\\Provider\\pl_PL\\Person`\n\n```php\n<?php\n\n// Generates a random PESEL number\necho $faker->pesel; // \"40061451555\"\n// Generates a random personal identity card number\necho $faker->personalIdentityNumber; // \"AKX383360\"\n// Generates a random taxpayer identification number (NIP)\necho $faker->taxpayerIdentificationNumber; // '8211575109'\n```\n\n### `Faker\\Provider\\pl_PL\\Company`\n\n```php\n<?php\n\n// Generates a random REGON number\necho $faker->regon; // \"714676680\"\n// Generates a random local REGON number\necho $faker->regonLocal; // \"15346111382836\"\n```\n\n### `Faker\\Provider\\pl_PL\\Payment`\n\n```php\n<?php\n\n// Generates a random bank name\necho $faker->bank; // \"Narodowy Bank Polski\"\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"PL14968907563953822118075816\"\n```\n\n### `Faker\\Provider\\pt_PT\\Person`\n\n```php\n<?php\n\n// Generates a random taxpayer identification number (in portuguese - Número de Identificação Fiscal NIF)\necho $faker->taxpayerIdentificationNumber; // '165249277'\n```\n\n### `Faker\\Provider\\pt_BR\\Address`\n\n```php\n<?php\n\n// Generates a random region name\necho $faker->region; // 'Nordeste'\n\n// Generates a random region abbreviation\necho $faker->regionAbbr; // 'NE'\n```\n\n### `Faker\\Provider\\pt_BR\\PhoneNumber`\n\n```php\n<?php\n\necho $faker->areaCode;  // 21\necho $faker->cellphone; // 9432-5656\necho $faker->landline;  // 2654-3445\necho $faker->phone;     // random landline, 8-digit or 9-digit cellphone number\n\n// Using the phone functions with a false argument returns unformatted numbers\necho $faker->cellphone(false); // 74336667\n\n// cellphone() has a special second argument to add the 9th digit. Ignored if generated a Radio number\necho $faker->cellphone(true, true); // 98983-3945 or 7343-1290\n\n// Using the \"Number\" suffix adds area code to the phone\necho $faker->cellphoneNumber;       // (11) 98309-2935\necho $faker->landlineNumber(false); // 3522835934\necho $faker->phoneNumber;           // formatted, random landline or cellphone (obeying the 9th digit rule)\necho $faker->phoneNumberCleared;    // not formatted, random landline or cellphone (obeying the 9th digit rule)\n```\n\n### `Faker\\Provider\\pt_BR\\Person`\n\n```php\n<?php\n\n// The name generator may include double first or double last names, plus title and suffix\necho $faker->name; // 'Sr. Luis Adriano Sepúlveda Filho'\n\n// Valid document generators have a boolean argument to remove formatting\necho $faker->cpf;        // '145.343.345-76'\necho $faker->cpf(false); // '45623467866'\necho $faker->rg;         // '84.405.736-3'\necho $faker->rg(false);  // '844057363'\n```\n\n### `Faker\\Provider\\pt_BR\\Company`\n\n```php\n<?php\n\n// Generates a Brazilian formatted and valid CNPJ\necho $faker->cnpj;        // '23.663.478/0001-24'\necho $faker->cnpj(false); // '23663478000124'\n```\n\n### `Faker\\Provider\\ro_MD\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"MD83BQW1CKMUW34HBESDP3A8\"\n```\n\n### `Faker\\Provider\\ro_RO\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"RO55WRJE3OE8X3YQI7J26U1E\"\n```\n\n### `Faker\\Provider\\ro_RO\\Person`\n\n```php\n<?php\n\n// Generates a random male name prefix/title\necho $faker->prefixMale; // \"ing.\"\n// Generates a random female name prefix/title\necho $faker->prefixFemale; // \"d-na.\"\n// Generates a random male first name\necho $faker->firstNameMale; // \"Adrian\"\n// Generates a random female first name\necho $faker->firstNameFemale; // \"Miruna\"\n\n\n// Generates a random Personal Numerical Code (CNP)\necho $faker->cnp; // \"2800523081231\"\n// Valid option values:\n//    $gender: null (random), male, female\n//    $dateOfBirth (1800+): null (random), Y-m-d, Y-m (random day), Y (random month and day)\n//          i.e. '1981-06-16', '2015-03', '1900'\n//    $county: 2 letter ISO 3166-2:RO county codes and B1, B2, B3, B4, B5, B6 for Bucharest's 6 sectors\n//    $isResident true/false flag if the person resides in Romania\necho $faker->cnp($gender = null, $dateOfBirth = null, $county = null, $isResident = true);\n\n```\n\n### `Faker\\Provider\\ro_RO\\PhoneNumber`\n\n```php\n<?php\n\n// Generates a random toll-free phone number\necho $faker->tollFreePhoneNumber; // \"0800123456\"\n// Generates a random premium-rate phone number\necho $faker->premiumRatePhoneNumber; // \"0900123456\"\n```\n\n### `Faker\\Provider\\ru_RU\\Payment`\n\n```php\n<?php\n\n// Generates a Russian bank name (based on list of real russian banks)\necho $faker->bank; // \"ОТП Банк\"\n\n//Generate a Russian Tax Payment Number for Company\necho $faker->inn; //  7813540735\n\n//Generate a Russian Tax Code for Company\necho $faker->kpp; // 781301001\n```\n\n### `Faker\\Provider\\sv_SE\\Payment`\n\n```php\n<?php\n\n// Generates a random bank account number\necho $faker->bankAccountNumber; // \"SE5018548608468284909192\"\n```\n\n### `Faker\\Provider\\sv_SE\\Person`\n\n```php\n<?php\n\n//Generates a valid Swedish personal identity number (in Swedish - Personnummer)\necho $faker->personalIdentityNumber() // '950910-0799'\n\n//Since the numbers are different for male and female persons, optionally you can specify gender.\necho $faker->personalIdentityNumber('female') // '950910-0781'\n```\n### `Faker\\Provider\\tr_TR\\Person`\n\n```php\n<?php\n\n//Generates a valid Turkish identity number (in Turkish - T.C. Kimlik No)\necho $faker->tcNo // '55300634882'\n\n```\n\n\n### `Faker\\Provider\\zh_CN\\Payment`\n\n```php\n<?php\n\n// Generates a random bank name (based on list of real chinese banks)\necho $faker->bank; // '中国建设银行'\n```\n\n### `Faker\\Provider\\uk_UA\\Payment`\n\n```php\n<?php\n\n// Generates an Ukraine bank name (based on list of real Ukraine banks)\necho $faker->bank; // \"Ощадбанк\"\n```\n\n### `Faker\\Provider\\zh_TW\\Person`\n\n```php\n<?php\n\n// Generates a random personal identify number\necho $faker->personalIdentityNumber; // A223456789\n```\n\n### `Faker\\Provider\\zh_TW\\Company`\n\n```php\n<?php\n\n// Generates a random VAT / Company Tax number\necho $faker->VAT; //23456789\n```\n\n\n## Third-Party Libraries Extending/Based On Faker\n\n* Symfony bundles:\n  * [`willdurand/faker-bundle`](https://github.com/willdurand/BazingaFakerBundle): Put the awesome Faker library into the Symfony2 DIC and populate your database with fake data.\n  * [`hautelook/alice-bundle`](https://github.com/hautelook/AliceBundle), [`h4cc/alice-fixtures-bundle`](https://github.com/h4cc/AliceFixturesBundle): Bundles for using [`nelmio/alice`](https://packagist.org/packages/nelmio/alice) and Faker with data fixtures. Able to use Doctrine ORM as well as Doctrine MongoDB ODM.\n* [`emanueleminotto/faker-service-provider`](https://github.com/EmanueleMinotto/FakerServiceProvider): Faker Service Provider for Silex\n* [`bit3/faker-cli`](https://github.com/bit3/faker-cli): Command Line Tool for the Faker PHP library\n* [`league/factory-muffin`](https://github.com/thephpleague/factory-muffin): enable the rapid creation of objects (PHP port of factory-girl)\n* [`fzaninotto/company-name-generator`](https://github.com/fzaninotto/CompanyNameGenerator): Generate names for English tech companies with class\n* [`emanueleminotto/faker-placehold-it-provider`](https://github.com/EmanueleMinotto/PlaceholdItProvider): Generate images using placehold.it\n* [`spyrit/datalea`](https://github.com/spyrit/datalea) A highly customizable random test data generator web app\n* [`frequenc1/newage-ipsum`](https://github.com/frequenc1/newage-ipsum): A new aged ipsum provider for the faker library inspired by http://sebpearce.com/bullshit/\n* [`prewk/xml-faker`](https://github.com/prewk/xml-faker): Create fake XML with Faker\n* [`denheck/faker-context`](https://github.com/denheck/faker-context): Behat context using Faker to generate testdata\n* [`swekaj/cron-expression-generator`](https://github.com/swekaj/CronExpressionGenerator): Faker provider for generating random, valid cron expressions.\n* [`pragmafabrik/pomm-faker`](https://github.com/pragmafabrik/Pomm2Faker): Faker client for Pomm database framework (PostgreSQL)\n* [`nelmio/alice`](https://github.com/nelmio/alice): Fixtures/object generator with a yaml DSL that can use Faker as data generator.\n* [`ravage84/cakephp-fake-seeder`](https://github.com/ravage84/cakephp-fake-seeder) A CakePHP 2.x shell to seed your database with fake and/or fixed data.\n* [`bheller/images-generator`](https://github.com/bruceheller/images-generator): An image generator provider using GD for placeholder type pictures\n* [`pattern-lab/plugin-faker`](https://github.com/pattern-lab/plugin-php-faker): Pattern Lab is a Styleguide, Component Library, and Prototyping tool. This creates unique content each time Pattern Lab is generated.\n* [`guidocella/eloquent-populator`](https://github.com/guidocella/eloquent-populator): Adapter for Laravel's Eloquent ORM.\n* [`tamperdata/exiges`](https://github.com/tamperdata/exiges): Faker provider for generating random temperatures\n* [`jzonta/faker-restaurant`](https://github.com/jzonta/FakerRestaurant): Faker for Food and Beverage names generate\n* [`aalaap/faker-youtube`](https://github.com/aalaap/faker-youtube): Faker for YouTube URLs in various formats\n* [`pelmered/fake-car`](https://github.com/pelmered/fake-car): Faker for cars and car data\n* [`bluemmb/faker-picsum-photos-provider`](https://github.com/bluemmb/Faker-PicsumPhotos): Generate images using [picsum.photos](http://picsum.photos/)\n* [`er1z/fakemock`](https://github.com/er1z/fakemock): Generate mocks using class-configuration and detection via Faker's guesser and Symfony asserts\n* [`xvladqt/faker-lorem-flickr`](https://github.com/xvladxtremal/Faker-LoremFlickr): Generate images using [loremflickr.com](http://loremflickr.com/)\n* [`metrakit/faker-eddy-malou`](https://github.com/Metrakit/faker-eddy-malou): Generate French Eddy Malou sentences & paragraphs\n* [`drupol/belgian-national-number-faker`](https://github.com/drupol/belgian-national-number-faker): Generate fake Belgian national numbers\n* [`elgentos/masquerade`](https://github.com/elgentos/masquerade): Configuration-based, platform-agnostic, locale-compatible data faker tool (out-of-the-box support for Magento 2)\n* [`ottaviano/faker-gravatar`](https://github.com/ottaviano/faker-gravatar): Generate avatars using [Gravatar](https://en.gravatar.com/site/implement/images/)\n* [`finwe/phpstan-faker`](https://github.com/finwe/phpstan-faker): PHPStan extension for Faker methods\n\n## License\n\nFaker is released under the MIT License. See the bundled LICENSE file for details.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}