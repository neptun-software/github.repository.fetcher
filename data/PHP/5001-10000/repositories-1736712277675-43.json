{
  "metadata": {
    "timestamp": 1736712277675,
    "page": 43,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine/cache",
      "stars": 7860,
      "defaultBranch": "2.2.x",
      "files": [
        {
          "name": ".doctrine-project.json",
          "type": "blob",
          "size": 1.3759765625,
          "content": "{\n    \"active\": false,\n    \"name\": \"Cache\",\n    \"slug\": \"cache\",\n    \"docsSlug\": \"doctrine-cache\",\n    \"versions\": [\n        {\n            \"name\": \"2.2\",\n            \"branchName\": \"2.2.x\",\n            \"slug\": \"2.2\",\n            \"current\": true\n        },\n        {\n            \"name\": \"2.1\",\n            \"branchName\": \"2.1.x\",\n            \"slug\": \"2.1\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"2.0\",\n            \"branchName\": \"2.0.x\",\n            \"slug\": \"2.0\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.13\",\n            \"branchName\": \"1.13.x\",\n            \"slug\": \"1.13\",\n            \"maintained\": true\n        },\n        {\n            \"name\": \"1.12\",\n            \"branchName\": \"1.12.x\",\n            \"slug\": \"1.12\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.11\",\n            \"branchName\": \"1.11.x\",\n            \"slug\": \"1.11\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.10\",\n            \"branchName\": \"1.10.x\",\n            \"slug\": \"1.10\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.9\",\n            \"branchName\": \"1.9.x\",\n            \"slug\": \"1.9\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.8\",\n            \"branchName\": \"1.8.x\",\n            \"slug\": \"1.8\",\n            \"maintained\": false\n        }\n    ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2939453125,
          "content": "/docs export-ignore\n/.github export-ignore\n/tests export-ignore\n.doctrine-project.json export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.scrutinizer.yml export-ignore\nbuild.properties export-ignore\nbuild.xml export-ignore\nphpcs.xml.dist export-ignore\nphpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "vendor/\n/composer.lock\nbuild/\nphpunit.xml\n/.phpunit.result.cache\nclover.xml\n.phpcs-cache\nphpcs.xml\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "Copyright (c) 2006-2015 Doctrine Project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.8896484375,
          "content": "# Doctrine Cache\n\n[![Build Status](https://github.com/doctrine/cache/workflows/Continuous%20Integration/badge.svg)](https://github.com/doctrine/cache/actions)\n[![Code Coverage](https://codecov.io/gh/doctrine/cache/branch/1.10.x/graph/badge.svg)](https://codecov.io/gh/doctrine/cache/branch/1.10.x)\n\n[![Latest Stable Version](https://img.shields.io/packagist/v/doctrine/cache.svg?style=flat-square)](https://packagist.org/packages/doctrine/cache)\n[![Total Downloads](https://img.shields.io/packagist/dt/doctrine/cache.svg?style=flat-square)](https://packagist.org/packages/doctrine/cache)\n\nCache component extracted from the Doctrine Common project. [Documentation](https://www.doctrine-project.org/projects/doctrine-cache/en/current/index.html)\n\nThis library is deprecated and will no longer receive bug fixes from the\nDoctrine Project. Please use a different cache library, preferably PSR-6 or\nPSR-16 instead.\n"
        },
        {
          "name": "UPGRADE-1.11.md",
          "type": "blob",
          "size": 1.236328125,
          "content": "# Upgrade to 1.11\n\ndoctrine/cache will no longer be maintained and all cache implementations have\nbeen marked as deprecated. These implementations will be removed in 2.0, which\nwill only contain interfaces to provide a lightweight package for backward\ncompatibility.\n\nThere are two new classes to use in the `Doctrine\\Common\\Cache\\Psr6` namespace:\n* The `CacheAdapter` class allows using any Doctrine Cache as PSR-6 cache. This\n  is useful to provide a forward compatibility layer in libraries that accept\n  Doctrine cache implementations and switch to PSR-6.\n* The `DoctrineProvider` class allows using any PSR-6 cache as Doctrine cache.\n  This implementation is designed for libraries that leak the cache and want to\n  switch to allowing PSR-6 implementations. This class is design to be used\n  during the transition phase of sunsetting doctrine/cache support.\n\nA full example to setup a filesystem based PSR-6 cache with symfony/cache\nusing the `DoctrineProvider` to convert back to Doctrine's `Cache` interface:\n\n```php\nuse Doctrine\\Common\\Cache\\Psr6\\DoctrineProvider;\nuse Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter;\n\n$cachePool = new FilesystemAdapter();\n$cache = DoctrineProvider::wrap($cachePool);\n// $cache instanceof \\Doctrine\\Common\\Cache\\Cache\n```\n"
        },
        {
          "name": "UPGRADE-1.4.md",
          "type": "blob",
          "size": 0.708984375,
          "content": "# Upgrade to 1.4\n\n## Minor BC Break: `Doctrine\\Common\\Cache\\FileCache#$extension` is now `private`.\n\nIf you need to override the value of `Doctrine\\Common\\Cache\\FileCache#$extension`, then use the\nsecond parameter of `Doctrine\\Common\\Cache\\FileCache#__construct()` instead of overriding\nthe property in your own implementation.\n\n## Minor BC Break: file based caches paths changed\n\n`Doctrine\\Common\\Cache\\FileCache`, `Doctrine\\Common\\Cache\\PhpFileCache` and\n`Doctrine\\Common\\Cache\\FilesystemCache` are using a different cache paths structure.\n\nIf you rely on warmed up caches for deployments, consider that caches generated\nwith `doctrine/cache` `<1.4` are not compatible with the new directory structure,\nand will be ignored.\n"
        },
        {
          "name": "build.properties",
          "type": "blob",
          "size": 0.1396484375,
          "content": "# Version class and file\nproject.version_class = Doctrine\\\\Common\\\\Cache\\\\Version\nproject.version_file = lib/Doctrine/Common/Cache/Version.php\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 3.8984375,
          "content": "<?xml version=\"1.0\"?>\n<project name=\"DoctrineCommonCache\" default=\"build\" basedir=\".\">\n    <property file=\"build.properties\" />\n\n    <target name=\"php\">\n        <exec executable=\"which\" outputproperty=\"php_executable\">\n            <arg value=\"php\" />\n        </exec>\n    </target>\n\n    <target name=\"prepare\">\n        <mkdir dir=\"build\" />\n    </target>\n\n    <target name=\"build\" depends=\"check-git-checkout-clean,prepare,php,composer\">\n        <exec executable=\"${php_executable}\">\n            <arg value=\"build/composer.phar\" />\n            <arg value=\"archive\" />\n            <arg value=\"--dir=build\" />\n        </exec>\n    </target>\n\n    <target name=\"composer\" depends=\"php,composer-check,composer-download\">\n        <exec executable=\"${php_executable}\">\n            <arg value=\"build/composer.phar\" />\n            <arg value=\"install\" />\n        </exec>\n    </target>\n\n    <target name=\"composer-check\" depends=\"prepare\">\n        <available file=\"build/composer.phar\" property=\"composer.present\"/>\n    </target>\n\n    <target name=\"composer-download\" unless=\"composer.present\">\n        <exec executable=\"wget\">\n            <arg value=\"-Obuild/composer.phar\" />\n            <arg value=\"http://getcomposer.org/composer.phar\" />\n        </exec>\n    </target>\n\n    <target name=\"make-release\" depends=\"check-git-checkout-clean,prepare,php\">\n        <replace file=\"${project.version_file}\" token=\"-DEV\" value=\"\" failOnNoReplacements=\"true\" />\n        <exec executable=\"git\" failonerror=\"true\" outputproperty=\"current_git_branch\">\n            <arg value=\"rev-parse\" />\n            <arg value=\"--abbrev-ref\" />\n            <arg value=\"HEAD\" />\n        </exec>\n        <exec executable=\"${php_executable}\" outputproperty=\"doctrine.current_version\" failonerror=\"true\">\n            <arg value=\"-r\" />\n            <arg value=\"require_once '${project.version_file}';echo ${project.version_class}::VERSION;\" />\n        </exec>\n        <exec executable=\"${php_executable}\" outputproperty=\"doctrine.next_version\" failonerror=\"true\">\n            <arg value=\"-r\" />\n            <arg value=\"$parts = explode('.', str_ireplace(array('-DEV', '-ALPHA', '-BETA'), '', '${doctrine.current_version}'));\n                if (count($parts) != 3) {\n                    throw new \\InvalidArgumentException('Version is assumed in format x.y.z, ${doctrine.current_version} given');\n                }\n                $parts[2]++;\n                echo implode('.', $parts);\n            \" />\n        </exec>\n\n        <git-commit file=\"${project.version_file}\" message=\"Release ${doctrine.current_version}\" />\n        <git-tag version=\"${doctrine.current_version}\" />\n        <replace file=\"${project.version_file}\" token=\"${doctrine.current_version}\" value=\"${doctrine.next_version}-DEV\" />\n        <git-commit file=\"${project.version_file}\" message=\"Bump version to ${doctrine.next_version}\" />\n    </target>\n\n    <target name=\"check-git-checkout-clean\">\n        <exec executable=\"git\" failonerror=\"true\">\n            <arg value=\"diff-index\" />\n            <arg value=\"--quiet\" />\n            <arg value=\"HEAD\" />\n        </exec>\n    </target>\n\n    <macrodef name=\"git-commit\">\n        <attribute name=\"file\" default=\"NOT SET\"/>\n        <attribute name=\"message\" default=\"NOT SET\"/>\n\n        <sequential>\n            <exec executable=\"git\">\n                <arg value=\"add\" />\n                <arg value=\"@{file}\" />\n            </exec>\n            <exec executable=\"git\">\n                <arg value=\"commit\" />\n                <arg value=\"-m\" />\n                <arg value=\"@{message}\" />\n            </exec>\n        </sequential>\n    </macrodef>\n\n    <macrodef name=\"git-tag\">\n        <attribute name=\"version\" default=\"NOT SET\" />\n\n        <sequential>\n            <exec executable=\"git\">\n                <arg value=\"tag\" />\n                <arg value=\"-m\" />\n                <arg value=\"v@{version}\" />\n                <arg value=\"v@{version}\" />\n            </exec>\n        </sequential>\n    </macrodef>\n</project>\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.603515625,
          "content": "{\n    \"name\": \"doctrine/cache\",\n    \"type\": \"library\",\n    \"description\": \"PHP Doctrine Cache library is a popular cache implementation that supports many different drivers such as redis, memcache, apc, mongodb and others.\",\n    \"keywords\": [\n        \"php\",\n        \"cache\",\n        \"caching\",\n        \"abstraction\",\n        \"redis\",\n        \"memcached\",\n        \"couchdb\",\n        \"xcache\",\n        \"apcu\"\n    ],\n    \"homepage\": \"https://www.doctrine-project.org/projects/cache.html\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\"name\": \"Guilherme Blanco\", \"email\": \"guilhermeblanco@gmail.com\"},\n        {\"name\": \"Roman Borschel\", \"email\": \"roman@code-factory.org\"},\n        {\"name\": \"Benjamin Eberlei\", \"email\": \"kontakt@beberlei.de\"},\n        {\"name\": \"Jonathan Wage\", \"email\": \"jonwage@gmail.com\"},\n        {\"name\": \"Johannes Schmitt\", \"email\": \"schmittjoh@gmail.com\"}\n    ],\n    \"require\": {\n        \"php\": \"~7.1 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n        \"doctrine/coding-standard\": \"^9\",\n        \"psr/cache\": \"^1.0 || ^2.0 || ^3.0\",\n        \"cache/integration-tests\": \"dev-master\",\n        \"symfony/cache\": \"^4.4 || ^5.4 || ^6\",\n        \"symfony/var-exporter\": \"^4.4 || ^5.4 || ^6\"\n    },\n    \"conflict\": {\n        \"doctrine/common\": \">2.2,<2.4\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Doctrine\\\\Common\\\\Cache\\\\\": \"lib/Doctrine/Common/Cache\" }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \"Doctrine\\\\Tests\\\\\": \"tests/Doctrine/Tests\" }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.33984375,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Coding Standards for doctrine\">\n    <description>Coding Standards for doctrine.</description>\n\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\" />\n\n    <config name=\"php_version\" value=\"70100\"/>\n\n    <!-- Ignore warnings and show progress of the run -->\n    <arg value=\"np\"/>\n\n    <file>lib</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\">\n        <exclude name=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.Operators.DisallowEqualOperators\"/>\n        <exclude name=\"SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants\" />\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>tests/Doctrine/Tests/Common/Cache/PhpFileCacheTest.php</exclude-pattern>\n    </rule>\n\n    <!-- Multiple classes confuse this rule -->\n    <rule ref=\"Squiz.Classes.ClassFileName\">\n        <exclude-pattern>tests/Doctrine/Tests/Common/Cache/PhpFileCacheTest.php</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.982421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n     backupGlobals=\"false\"\n     colors=\"true\"\n     verbose=\"true\"\n     beStrictAboutOutputDuringTests=\"true\"\n     beStrictAboutTestsThatDoNotTestAnything=\"true\"\n     beStrictAboutChangesToGlobalState=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Doctrine Cache Test Suite\">\n            <directory>./tests/Doctrine/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./lib/Doctrine/</directory>\n            <exclude>\n                <file>lib/Doctrine/Common/Cache/ApcCache.php</file>\n                <file>lib/Doctrine/Common/Cache/CouchbaseCache.php</file>\n                <file>lib/Doctrine/Common/Cache/XcacheCache.php</file>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}