{
  "metadata": {
    "timestamp": 1736712256595,
    "page": 4,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pestphp/pest",
      "stars": 9830,
      "defaultBranch": "3.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3359375,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6484375,
          "content": "/docker                  export-ignore\n/docs                    export-ignore\n/tests                   export-ignore\n/scripts                 export-ignore\n/.github                 export-ignore\n.editorconfig            export-ignore\n.gitattributes           export-ignore\n.gitignore               export-ignore\n/phpstan.neon            export-ignore\n/phpunit.xml             export-ignore\n/CHANGELOG.md            export-ignore\n/CONTRIBUTING.md         export-ignore\n/docker-compose.yml      export-ignore\n/Makefile                export-ignore\n/rector.php              export-ignore\n/README.md               export-ignore\n/RELEASE.md              export-ignore\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.203125,
          "content": ".idea/*\n.idea/codeStyleSettings.xml\n.temp/*\ncomposer.lock\n/vendor/\ncoverage.xml\n.phpunit.result.cache\n.phpunit.cache\n/.php-cs-fixer.php\n.php-cs-fixer.cache\n.temp/coverage.php\n*.swp\n*.swo\n.vscode/\n.STREAM.md\n\n"
        },
        {
          "name": ".temp",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7109375,
          "content": "# CONTRIBUTING\n\nContributions are welcome, and are accepted via pull requests.\nPlease review these guidelines before submitting any pull requests.\n\n## Process\n\n1. Fork the project\n1. Create a new branch\n1. Code, test, commit and push\n1. Open a pull request detailing your changes. Make sure to follow the [template](.github/PULL_REQUEST_TEMPLATE.md)\n\n## Guidelines\n\n* Please ensure the coding style running `composer lint`.\n* Send a coherent commit history, making sure each individual commit in your pull request is meaningful.\n* You may need to [rebase](https://git-scm.com/book/en/v2/Git-Branching-Rebasing) to avoid merge conflicts.\n* Please remember that we follow [SemVer](http://semver.org/).\n\n## Setup\n\nClone your fork, then install the dev dependencies:\n```bash\ncomposer install\n```\n## Lint\n\nLint your code:\n```bash\ncomposer lint\n```\n## Tests\n\nUpdate the snapshots:\n```bash\ncomposer update:snapshots\n```\nRun all tests:\n```bash\ncomposer test\n```\n\nCheck types:\n```bash\ncomposer test:type:check\n```\n\nUnit tests:\n```bash\ncomposer test:unit\n```\n\nIntegration tests:\n```bash\ncomposer test:integration\n```\n\n## Simplified setup using Docker\n\nIf you have Docker installed, you can quickly get all dependencies for Pest in place using\nour Docker files. Assuming you have the repository cloned, you may run the following\ncommands:\n\n1. `make build` to build the Docker image\n2. `make install` to install Composer dependencies\n3. `make test` to run the project tests and analysis tools\n\nIf you want to check things work against a specific version of PHP, you may include\nthe `PHP` build argument when building the image:\n\n```bash\nmake build ARGS=\"--build-arg PHP=8.3\"\n```\n\nThe default PHP version will always be the lowest version of PHP supported by Pest.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0712890625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Nuno Maduro <enunomaduro@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.576171875,
          "content": "# Well documented Makefiles\nDEFAULT_GOAL := help\nhelp:\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\nUsage:\\n  make \\033[36m<target>\\033[0m\\n\"} /^[a-zA-Z0-9_-]+:.*?##/ { printf \"  \\033[36m%-40s\\033[0m %s\\n\", $$1, $$2 } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\nbuild: ## Build all docker images. Specify the command e.g. via make build ARGS=\"--build-arg PHP=8.2\"\n\tdocker compose build $(ARGS)\n\n##@ [Application]\ninstall: ## Install the composer dependencies\n\tdocker compose run --rm composer install\n\ntest: ## Run the tests\n\tdocker compose run --rm composer test\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5029296875,
          "content": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/pestphp/art/master/v3/banner.png\" width=\"600\" alt=\"PEST\">\n    <p align=\"center\">\n        <a href=\"https://github.com/pestphp/pest/actions\"><img alt=\"GitHub Workflow Status (master)\" src=\"https://img.shields.io/github/actions/workflow/status/pestphp/pest/tests.yml?branch=3.x&label=Tests%203.x\"></a>\n        <a href=\"https://packagist.org/packages/pestphp/pest\"><img alt=\"Total Downloads\" src=\"https://img.shields.io/packagist/dt/pestphp/pest\"></a>\n        <a href=\"https://packagist.org/packages/pestphp/pest\"><img alt=\"Latest Version\" src=\"https://img.shields.io/packagist/v/pestphp/pest\"></a>\n        <a href=\"https://packagist.org/packages/pestphp/pest\"><img alt=\"License\" src=\"https://img.shields.io/packagist/l/pestphp/pest\"></a>\n    </p>\n</p>\n\n------\n\n> Pest v3 Now Available: **[Read the announcement »](https://pestphp.com/docs/pest3-now-available)**.\n\n**Pest** is an elegant PHP testing Framework with a focus on simplicity, meticulously designed to bring back the joy of testing in PHP.\n\n- Explore our docs at **[pestphp.com »](https://pestphp.com)**\n- Follow us on Twitter at **[@pestphp »](https://twitter.com/pestphp)**\n- Join us at **[discord.gg/kaHY6p54JH »](https://discord.gg/kaHY6p54JH)** or **[t.me/+kYH5G4d5MV83ODk0 »](https://t.me/+kYH5G4d5MV83ODk0)**\n\n## Sponsors\n\nWe cannot thank our sponsors enough for their incredible support in funding Pest's development. Their contributions have been instrumental in making Pest the best it can be. For those who are interested in becoming a sponsor, please visit Nuno Maduro's Sponsor page at **[github.com/sponsors/nunomaduro](https://github.com/sponsors/nunomaduro)**.\n\n\n### Platinum Sponsors\n\n- **[Laracasts](https://laracasts.com/?ref=pestphp)**\n\n### Gold Sponsors\n\n- **[CodeRabbit](https://coderabbit.ai/?ref=pestphp)**\n- **[LaraJobs](https://larajobs.com/?ref=pestphp)**\n- **[Brokerchooser](https://brokerchooser.com/?ref=pestphp)**\n- **[Forge](https://forge.laravel.com/?ref=pestphp)**\n\n### Premium Sponsors\n\n- [Akaunting](https://akaunting.com/?ref=pestphp)\n- [Codecourse](https://codecourse.com/?ref=pestphp)\n- [DocuWriter.ai](https://www.docuwriter.ai/?ref=pestphp)\n- [Localazy](https://localazy.com/?ref=pestphp)\n- [Route4Me](https://www.route4me.com/?ref=pestphp)\n- [Spatie](https://spatie.be/?ref=pestphp)\n- [Worksome](https://www.worksome.com/?ref=pestphp)\n- [Zapiet](https://www.zapiet.com/?ref=pestphp)\n\nPest is an open-sourced software licensed under the **[MIT license](https://opensource.org/licenses/MIT)**.\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 1.0263671875,
          "content": "# Release process\n\nWhen releasing a new version of Pest there are some checks and updates that need to be done:\n\n> **For Pest v2 you should use the `2.x` branch instead.**\n\n- Clear your local repository with: `git add . && git reset --hard && git checkout 3.x`\n- On the GitHub repository, check the contents of [github.com/pestphp/pest/compare/{latest_version}...3.x](https://github.com/pestphp/pest/compare/{latest_version}...3.x)\n- Update the version number in [src/Pest.php](src/Pest.php)\n- Run the tests locally using: `composer test`\n- Commit the Pest file with the message: `git commit -m \"release: vX.X.X\"`\n- Push the changes to GitHub\n- Check that the CI is passing as expected: [github.com/pestphp/pest/actions](https://github.com/pestphp/pest/actions)\n- Tag and push the tag with `git tag vX.X.X && git push --tags`\n- Publish release here: [github.com/pestphp/pest/releases/new](https://github.com/pestphp/pest/releases/new).\n\n### Plugins\n\nPlugins should be versioned using the same major (or minor for `0.x` releases) version as Pest core.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.7587890625,
          "content": "{\n    \"name\": \"pestphp/pest\",\n    \"description\": \"The elegant PHP Testing Framework.\",\n    \"keywords\": [\n        \"php\",\n        \"framework\",\n        \"pest\",\n        \"unit\",\n        \"test\",\n        \"testing\"\n    ],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Nuno Maduro\",\n            \"email\": \"enunomaduro@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.2.0\",\n        \"brianium/paratest\": \"^7.7.0\",\n        \"nunomaduro/collision\": \"^8.5.0\",\n        \"nunomaduro/termwind\": \"^2.3.0\",\n        \"pestphp/pest-plugin\": \"^3.0.0\",\n        \"pestphp/pest-plugin-arch\": \"^3.0.0\",\n        \"pestphp/pest-plugin-mutate\": \"^3.0.5\",\n        \"phpunit/phpunit\": \"^11.5.1\"\n    },\n    \"conflict\": {\n        \"filp/whoops\": \"<2.16.0\",\n        \"phpunit/phpunit\": \">11.5.1\",\n        \"sebastian/exporter\": \"<6.0.0\",\n        \"webmozart/assert\": \"<1.11.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Pest\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/Functions.php\",\n            \"src/Pest.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\Fixtures\\\\Covers\\\\\": \"tests/Fixtures/Covers\",\n            \"Tests\\\\Fixtures\\\\Inheritance\\\\\": \"tests/Fixtures/Inheritance\",\n            \"Tests\\\\Fixtures\\\\Arch\\\\\": \"tests/Fixtures/Arch\",\n            \"Tests\\\\\": \"tests/PHPUnit/\"\n        },\n        \"files\": [\n            \"tests/Autoload.php\"\n        ]\n    },\n    \"require-dev\": {\n        \"pestphp/pest-dev-tools\": \"^3.3.0\",\n        \"pestphp/pest-plugin-type-coverage\": \"^3.2.0\",\n        \"symfony/process\": \"^7.2.0\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"config\": {\n        \"sort-packages\": true,\n        \"preferred-install\": \"dist\",\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    },\n    \"bin\": [\n        \"bin/pest\"\n    ],\n    \"scripts\": {\n        \"refacto\": \"rector\",\n        \"lint\": \"pint\",\n        \"test:refacto\": \"rector --dry-run\",\n        \"test:lint\": \"pint --test\",\n        \"test:type:check\": \"phpstan analyse --ansi --memory-limit=-1 --debug\",\n        \"test:type:coverage\": \"php -d memory_limit=-1  bin/pest --type-coverage --min=100\",\n        \"test:unit\": \"php bin/pest --colors=always --exclude-group=integration --compact\",\n        \"test:inline\": \"php bin/pest --colors=always --configuration=phpunit.inline.xml\",\n        \"test:parallel\": \"php bin/pest --colors=always --exclude-group=integration --parallel --processes=3\",\n        \"test:integration\": \"php bin/pest --colors=always --group=integration -v\",\n        \"update:snapshots\": \"REBUILD_SNAPSHOTS=true php bin/pest --colors=always --update-snapshots\",\n        \"test\": [\n            \"@test:refacto\",\n            \"@test:lint\",\n            \"@test:type:check\",\n            \"@test:type:coverage\",\n            \"@test:unit\",\n            \"@test:parallel\",\n            \"@test:integration\"\n        ]\n    },\n    \"extra\": {\n        \"pest\": {\n            \"plugins\": [\n                \"Pest\\\\Mutate\\\\Plugins\\\\Mutate\",\n                \"Pest\\\\Plugins\\\\Configuration\",\n                \"Pest\\\\Plugins\\\\Bail\",\n                \"Pest\\\\Plugins\\\\Cache\",\n                \"Pest\\\\Plugins\\\\Coverage\",\n                \"Pest\\\\Plugins\\\\Init\",\n                \"Pest\\\\Plugins\\\\Environment\",\n                \"Pest\\\\Plugins\\\\Help\",\n                \"Pest\\\\Plugins\\\\Memory\",\n                \"Pest\\\\Plugins\\\\Only\",\n                \"Pest\\\\Plugins\\\\Printer\",\n                \"Pest\\\\Plugins\\\\ProcessIsolation\",\n                \"Pest\\\\Plugins\\\\Profile\",\n                \"Pest\\\\Plugins\\\\Retry\",\n                \"Pest\\\\Plugins\\\\Snapshot\",\n                \"Pest\\\\Plugins\\\\Verbose\",\n                \"Pest\\\\Plugins\\\\Version\",\n                \"Pest\\\\Plugins\\\\Parallel\"\n            ]\n        },\n        \"phpstan\": {\n            \"includes\": [\n                \"extension.neon\"\n            ]\n        }\n    }\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.212890625,
          "content": "version: \"3.8\"\n\nservices:\n  php:\n    build:\n      context: ./docker\n    volumes:\n      - .:/var/www/html\n  composer:\n    build:\n      context: ./docker\n    volumes:\n      - .:/var/www/html\n    entrypoint: [\"composer\"]\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension.neon",
          "type": "blob",
          "size": 0.11328125,
          "content": "parameters:\n    universalObjectCratesClasses:\n        - Pest\\Support\\HigherOrderTapProxy\n        - Pest\\Expectation\n"
        },
        {
          "name": "overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.333984375,
          "content": "includes:\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n    - vendor/thecodingmachine/phpstan-strict-rules/phpstan-strict-rules.neon\n\nparameters:\n    level: max\n    paths:\n        - src\n\n    checkMissingIterableValueType: true\n    reportUnmatchedIgnoredErrors: true\n\n    ignoreErrors:\n        - \"#type mixed is not subtype of native#\"\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9365234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.0/phpunit.xsd\"\n         backupGlobals=\"false\"\n         beStrictAboutTestsThatDoNotTestAnything=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"false\"\n         processIsolation=\"false\"\n         stopOnError=\"false\"\n         stopOnFailure=\"false\"\n         backupStaticProperties=\"false\"\n>\n  <testsuites>\n    <testsuite name=\"default\">\n      <directory suffix=\".php\">./tests</directory>\n      <exclude>./tests/.snapshots</exclude>\n      <exclude>./tests/.tests</exclude>\n      <exclude>./tests/Fixtures/Inheritance</exclude>\n    </testsuite>\n  </testsuites>\n  <source>\n    <include>\n      <directory suffix=\".php\">./src</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "rector.php",
          "type": "blob",
          "size": 0.5244140625,
          "content": "<?php\n\ndeclare(strict_types=1);\n\nuse Rector\\Config\\RectorConfig;\nuse Rector\\TypeDeclaration\\Rector\\ClassMethod\\ReturnNeverTypeRector;\n\nreturn RectorConfig::configure()\n    ->withPaths([\n        __DIR__.'/src',\n    ])\n    ->withSkip([\n        __DIR__.'/src/Plugins/Parallel/Paratest/WrapperRunner.php',\n        ReturnNeverTypeRector::class,\n    ])\n    ->withPreparedSets(\n        deadCode: true,\n        codeQuality: true,\n        typeDeclarations: true,\n        privatization: true,\n        earlyReturn: true,\n    )\n    ->withPhpSets();\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stubs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}