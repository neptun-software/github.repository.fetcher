{
  "metadata": {
    "timestamp": 1736712288427,
    "page": 65,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phar-io/version",
      "stars": 7415,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.271484375,
          "content": "/tests           export-ignore\n/.gitattributes  export-ignore\n/.gitignore      export-ignore\n/.php_cs.dist    export-ignore\n/.travis.yml     export-ignore\n/build.xml       export-ignore\n/phive.xml       export-ignore\n/phpunit.xml     export-ignore\n/psalm.xml       export-ignore"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "/.github/\n/.idea\n/.php_cs.cache\n/composer.lock\n/tools\n/vendor\nbuild/coverage\n.phpunit.result.cache\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 11.1513671875,
          "content": "<?php\n\nreturn PhpCsFixer\\Config::create()\n    ->setRiskyAllowed(true)\n    ->setRules(\n        [\n            'align_multiline_comment'                       => true,\n            'array_indentation'                             => true,\n            'array_syntax'                                  => ['syntax' => 'short'],\n            'binary_operator_spaces'                        => [\n                'operators' => [\n                    '='  => 'align',\n                    '=>' => 'align',\n                ],\n            ],\n            'blank_line_after_namespace'                    => true,\n            'blank_line_after_opening_tag'                  => false,\n            'blank_line_before_statement'                   => [\n                'statements' => [\n                    'break',\n                    'continue',\n                    'declare',\n                    'do',\n                    'for',\n                    'foreach',\n                    'if',\n                    'include',\n                    'include_once',\n                    'require',\n                    'require_once',\n                    'return',\n                    'switch',\n                    'throw',\n                    'try',\n                    'while',\n                    'yield',\n                ],\n            ],\n            'braces'                                        => [\n                'allow_single_line_closure'                   => false,\n                'position_after_anonymous_constructs'         => 'same',\n                'position_after_control_structures'           => 'same',\n                'position_after_functions_and_oop_constructs' => 'same'\n            ],\n            'cast_spaces'                                   => ['space' => 'none'],\n\n            // This fixer removes the blank line at class start, no way to disable that, so we disable the fixer :(\n            //'class_attributes_separation'                   => ['elements' => ['const', 'method', 'property']],\n\n            'combine_consecutive_issets'                    => true,\n            'combine_consecutive_unsets'                    => true,\n            'compact_nullable_typehint'                     => true,\n            'concat_space'                                  => ['spacing' => 'one'],\n            'date_time_immutable'                           => true,\n            'declare_equal_normalize'                       => ['space' => 'single'],\n            'declare_strict_types'                          => true,\n            'dir_constant'                                  => true,\n            'elseif'                                        => true,\n            'encoding'                                      => true,\n            'full_opening_tag'                              => true,\n            'fully_qualified_strict_types'                  => true,\n            'function_declaration'                          => [\n                'closure_function_spacing' => 'one'\n            ],\n            'header_comment'                                => false,\n            'indentation_type'                              => true,\n            'is_null'                                       => true,\n            'line_ending'                                   => true,\n            'list_syntax'                                   => ['syntax' => 'short'],\n            'logical_operators'                             => true,\n            'lowercase_cast'                                => true,\n            'lowercase_constants'                           => true,\n            'lowercase_keywords'                            => true,\n            'lowercase_static_reference'                    => true,\n            'magic_constant_casing'                         => true,\n            'method_argument_space'                         => ['ensure_fully_multiline' => true],\n            'modernize_types_casting'                       => true,\n            'multiline_comment_opening_closing'             => true,\n            'multiline_whitespace_before_semicolons'        => true,\n            'native_constant_invocation'                    => true,\n            'native_function_casing'                        => true,\n            'native_function_invocation'                    => true,\n            'new_with_braces'                               => false,\n            'no_alias_functions'                            => true,\n            'no_alternative_syntax'                         => true,\n            'no_blank_lines_after_class_opening'            => false,\n            'no_blank_lines_after_phpdoc'                   => true,\n            'no_blank_lines_before_namespace'               => true,\n            'no_closing_tag'                                => true,\n            'no_empty_comment'                              => true,\n            'no_empty_phpdoc'                               => true,\n            'no_empty_statement'                            => true,\n            'no_extra_blank_lines'                          => true,\n            'no_homoglyph_names'                            => true,\n            'no_leading_import_slash'                       => true,\n            'no_leading_namespace_whitespace'               => true,\n            'no_mixed_echo_print'                           => ['use' => 'print'],\n            'no_multiline_whitespace_around_double_arrow'   => true,\n            'no_null_property_initialization'               => true,\n            'no_php4_constructor'                           => true,\n            'no_short_bool_cast'                            => true,\n            'no_short_echo_tag'                             => true,\n            'no_singleline_whitespace_before_semicolons'    => true,\n            'no_spaces_after_function_name'                 => true,\n            'no_spaces_inside_parenthesis'                  => true,\n            'no_superfluous_elseif'                         => true,\n            'no_superfluous_phpdoc_tags'                    => true,\n            'no_trailing_comma_in_list_call'                => true,\n            'no_trailing_comma_in_singleline_array'         => true,\n            'no_trailing_whitespace'                        => true,\n            'no_trailing_whitespace_in_comment'             => true,\n            'no_unneeded_control_parentheses'               => false,\n            'no_unneeded_curly_braces'                      => false,\n            'no_unneeded_final_method'                      => true,\n            'no_unreachable_default_argument_value'         => true,\n            'no_unset_on_property'                          => true,\n            'no_unused_imports'                             => true,\n            'no_useless_else'                               => true,\n            'no_useless_return'                             => true,\n            'no_whitespace_before_comma_in_array'           => true,\n            'no_whitespace_in_blank_line'                   => true,\n            'non_printable_character'                       => true,\n            'normalize_index_brace'                         => true,\n            'object_operator_without_whitespace'            => true,\n            'ordered_class_elements'                        => [\n                'order' => [\n                    'use_trait',\n                    'constant_public',\n                    'constant_protected',\n                    'constant_private',\n                    'property_public_static',\n                    'property_protected_static',\n                    'property_private_static',\n                    'property_public',\n                    'property_protected',\n                    'property_private',\n                    'method_public_static',\n                    'construct',\n                    'destruct',\n                    'magic',\n                    'phpunit',\n                    'method_public',\n                    'method_protected',\n                    'method_private',\n                    'method_protected_static',\n                    'method_private_static',\n                ],\n            ],\n            'ordered_imports'                               => true,\n            'phpdoc_add_missing_param_annotation'           => true,\n            'phpdoc_align'                                  => true,\n            'phpdoc_annotation_without_dot'                 => true,\n            'phpdoc_indent'                                 => true,\n            'phpdoc_no_access'                              => true,\n            'phpdoc_no_empty_return'                        => true,\n            'phpdoc_no_package'                             => true,\n            'phpdoc_order'                                  => true,\n            'phpdoc_return_self_reference'                  => true,\n            'phpdoc_scalar'                                 => true,\n            'phpdoc_separation'                             => true,\n            'phpdoc_single_line_var_spacing'                => true,\n            'phpdoc_to_comment'                             => true,\n            'phpdoc_trim'                                   => true,\n            'phpdoc_trim_consecutive_blank_line_separation' => true,\n            'phpdoc_types'                                  => ['groups' => ['simple', 'meta']],\n            'phpdoc_types_order'                            => true,\n            'phpdoc_to_return_type'                         => true,\n            'phpdoc_var_without_name'                       => true,\n            'pow_to_exponentiation'                         => true,\n            'protected_to_private'                          => true,\n            'return_assignment'                             => true,\n            'return_type_declaration'                       => ['space_before' => 'none'],\n            'self_accessor'                                 => false,\n            'semicolon_after_instruction'                   => true,\n            'set_type_to_cast'                              => true,\n            'short_scalar_cast'                             => true,\n            'simplified_null_return'                        => true,\n            'single_blank_line_at_eof'                      => true,\n            'single_import_per_statement'                   => true,\n            'single_line_after_imports'                     => true,\n            'single_quote'                                  => true,\n            'standardize_not_equals'                        => true,\n            'ternary_to_null_coalescing'                    => true,\n            'trailing_comma_in_multiline_array'             => false,\n            'trim_array_spaces'                             => true,\n            'unary_operator_spaces'                         => true,\n            'visibility_required'                           => [\n                'elements' => [\n                    'const',\n                    'method',\n                    'property',\n                ],\n            ],\n            'void_return'                                   => true,\n            'whitespace_after_comma_in_array'               => true,\n            'yoda_style'                                    => false\n        ]\n    )\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->files()\n            ->in(__DIR__ . '/src')\n            ->in(__DIR__ . '/tests')\n            ->notName('*.phpt')\n    );\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.03515625,
          "content": "# Changelog\n\nAll notable changes to phar-io/version are documented in this file using the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [3.3.0] - 2024-??-??\n\n### Fixed\n\n- [#35](https://github.com/phar-io/version/issues/35): major version only not supported, e.g. ^6\n\n\n## [3.2.1] - 2022-02-21\n\n### Fixed\n\n- Have ExactVersionConstraint honor build metadata (added in 3.2.0)\n\n\n## [3.2.0] - 2022-02-21\n\n### Added\n\n- Build metadata is now supported and considered for equality checks only\n\n\n## [3.1.1] - 2022-02-07\n\n### Fixed\n\n- [#28](https://github.com/phar-io/version/issues/28): `VersionConstraintParser` does not support logical OR represented by single pipe (|) (Thanks @llaville)\n\n\n## [3.1.0] - 2021-02-23\n\n### Changed\n\n- Internal Refactoring\n- More scalar types\n\n### Added\n\n- [#24](https://github.com/phar-io/version/issues/24): `Version::getOriginalString()` added (Thanks @addshore)\n- Version constraints using the caret operator (`^`) now honor pre-1.0 releases, e.g. `^0.3` translates to `0.3.*`)\n- Various integration tests for version constraint processing\n\n### Fixed\n\n- [#23](https://github.com/phar-io/version/pull/23): Tilde operator without patch level\n\n\n\n## [3.0.4] - 14.12.2020\n\n### Fixed \n\n- [#22](https://github.com/phar-io/version/pull/22): make dev suffix rank works for uppercase too\n\n## [3.0.3] - 30.11.2020\n\n### Added\n\n- Comparator method `Version::equals()` added\n\n\n## [3.0.2] - 27.06.2020\n\nThis release now supports PHP 7.2+ and PHP ^8.0. No other changes included.\n\n\n## [3.0.1] - 09.05.2020\n\n__Potential BC Break Notice:__\n`Version::getVersionString()` no longer returns `v` prefixes in case the \"input\"\nstring contained one. These are not part of the semver specs\n(see https://semver.org/#is-v123-a-semantic-version) and get stripped out.\nAs of Version 3.1.0 `Version::getOriginalString()` can be used to still\nretrieve it as given.\n\n### Changed\n\n- Internal Refactoring\n- More scalar types\n\n### Fixed\n\n- Fixed Constraint processing Regression for ^1.2  and ~1.2\n\n\n## [3.0.0] - 05.05.2020\n\n### Changed\n\n- Require PHP 7.2+\n- All code now uses strict mode\n- Scalar types have been added as needed\n\n### Added\n\n- The technically invalid format using 'v' prefix (\"v1.2.3\") is now properly supported \n\n\n## [2.0.1] - 08.07.2018\n\n### Fixed\n\n- Versions without a pre-release suffix are now always considered greater \nthan versions with a pre-release suffix. Example: `3.0.0 > 3.0.0-alpha.1`  \n\n\n## [2.0.0] - 23.06.2018\n\nChanges to public API:\n\n- `PreReleaseSuffix::construct()`: optional parameter `$number` removed\n- `PreReleaseSuffix::isGreaterThan()`: introduced\n- `Version::hasPreReleaseSuffix()`: introduced\n\n### Added\n\n- [#11](https://github.com/phar-io/version/issues/11): Added support for pre-release version suffixes. Supported values are:\n  - `dev`\n  - `beta` (also abbreviated form `b`)\n  - `rc`\n  - `alpha` (also abbreviated form `a`)\n  - `patch` (also abbreviated form `p`)\n\n  All values can be followed by a number, e.g. `beta3`. \n\n  When comparing versions, the pre-release suffix is taken into account. Example:\n`1.5.0 > 1.5.0-beta1 > 1.5.0-alpha3 > 1.5.0-alpha2 > 1.5.0-dev11`\n\n### Changed\n\n- reorganized the source directories\n\n### Fixed\n\n- [#10](https://github.com/phar-io/version/issues/10): Version numbers containing \na numeric suffix as seen in Debian packages are now supported.  \n\n\n[3.3.0]: https://github.com/phar-io/version/compare/3.2.1...3.3.0\n[3.2.1]: https://github.com/phar-io/version/compare/3.2.1...3.2.1\n[3.2.0]: https://github.com/phar-io/version/compare/3.1.1...3.2.0\n[3.1.1]: https://github.com/phar-io/version/compare/3.1.0...3.1.1\n[3.1.0]: https://github.com/phar-io/version/compare/3.0.4...3.1.0\n[3.0.4]: https://github.com/phar-io/version/compare/3.0.3...3.0.4\n[3.0.3]: https://github.com/phar-io/version/compare/3.0.2...3.0.3\n[3.0.2]: https://github.com/phar-io/version/compare/3.0.1...3.0.2\n[3.0.1]: https://github.com/phar-io/version/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/phar-io/version/compare/2.0.1...3.0.0\n[2.0.1]: https://github.com/phar-io/version/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/phar-io/version/compare/1.0.1...2.0.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.537109375,
          "content": "Copyright (c) 2016-2017 Arne Blankerts <arne@blankerts.de>, Sebastian Heuer <sebastian@phpeople.de> and contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT  * NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3310546875,
          "content": "# Version\n\nLibrary for handling version information and constraints\n\n[![CI](https://github.com/phar-io/version/actions/workflows/ci.yml/badge.svg)](https://github.com/phar-io/version/actions/workflows/ci.yml)\n\n## Installation\n\nYou can add this library as a local, per-project dependency to your project using [Composer](https://getcomposer.org/):\n\n    composer require phar-io/version\n\nIf you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:\n\n    composer require --dev phar-io/version\n\n## Version constraints\n\nA Version constraint describes a range of versions or a discrete version number. The format of version numbers follows the schema of [semantic versioning](http://semver.org): `<major>.<minor>.<patch>`. A constraint might contain an operator that describes the range.\n\nBeside the typical mathematical operators like `<=`, `>=`, there are two special operators:\n\n*Caret operator*: `^1.0`\ncan be written as `>=1.0.0 <2.0.0` and read as »every Version within major version `1`«.\n\n*Tilde operator*: `~1.0.0`\ncan be written as `>=1.0.0 <1.1.0` and read as »every version within minor version `1.1`. The behavior of tilde operator depends on whether a patch level version is provided or not. If no patch level is provided, tilde operator behaves like the caret operator: `~1.0` is identical to `^1.0`.\n\n## Usage examples\n\nParsing version constraints and check discrete versions for compliance:\n\n```php\n\nuse PharIo\\Version\\Version;\nuse PharIo\\Version\\VersionConstraintParser;\n\n$parser = new VersionConstraintParser();\n$caret_constraint = $parser->parse( '^7.0' );\n\n$caret_constraint->complies( new Version( '7.0.17' ) ); // true\n$caret_constraint->complies( new Version( '7.1.0' ) ); // true\n$caret_constraint->complies( new Version( '6.4.34' ) ); // false\n\n$tilde_constraint = $parser->parse( '~1.1.0' );\n\n$tilde_constraint->complies( new Version( '1.1.4' ) ); // true\n$tilde_constraint->complies( new Version( '1.2.0' ) ); // false\n```\n\nAs of version 2.0.0, pre-release labels are supported and taken into account when comparing versions:\n\n```php\n\n$leftVersion = new PharIo\\Version\\Version('3.0.0-alpha.1');\n$rightVersion = new PharIo\\Version\\Version('3.0.0-alpha.2');\n\n$leftVersion->isGreaterThan($rightVersion); // false\n$rightVersion->isGreaterThan($leftVersion); // true\n\n``` \n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 3.5361328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"version\" default=\"setup\">\n    <property name=\"phive.bin\" value=\"phive\"/>\n\n    <target name=\"setup\" depends=\"clean,install-tools,install-dependencies\"/>\n\n    <target name=\"clean\" unless=\"clean.done\" description=\"Cleanup build artifacts\">\n        <delete dir=\"${basedir}/tools\"/>\n        <delete dir=\"${basedir}/vendor\"/>\n        <delete file=\"${basedir}/src/autoload.php\"/>\n\n        <property name=\"clean.done\" value=\"true\"/>\n    </target>\n\n    <target name=\"prepare\" unless=\"prepare.done\" depends=\"clean\" description=\"Prepare for build\">\n        <property name=\"prepare.done\" value=\"true\"/>\n    </target>\n\n    <target name=\"install-tools\" unless=\"tools-installed\" depends=\"-tools-installed\" description=\"Install tools with Phive\">\n        <exec executable=\"${phive.bin}\" taskname=\"phive\" failonerror=\"true\">\n            <arg value=\"install\"/>\n            <arg value=\"--copy\" />\n            <arg value=\"--trust-gpg-keys\" />\n            <!--        php-cs-fixer      ,psalm             ,phpunit           -->\n            <arg value=\"0xE82B2FB314E9906E,0x12CE0F1D262429A5,0x4AA394086372C20A\" />\n        </exec>\n    </target>\n\n    <target name=\"install-dependencies\" description=\"Install dependencies with Composer\">\n        <exec executable=\"composer\" taskname=\"composer\">\n            <env key=\"COMPOSER_DISABLE_XDEBUG_WARN\" value=\"1\"/>\n            <arg value=\"install\"/>\n            <arg value=\"--no-ansi\"/>\n            <arg value=\"--no-interaction\"/>\n            <arg value=\"--no-progress\"/>\n            <arg value=\"--optimize-autoloader\"/>\n        </exec>\n    </target>\n\n    <target name=\"php-cs-fixer\" depends=\"install-tools\" description=\"Dry run php-cs-fixer\">\n        <exec executable=\"${basedir}/tools/php-cs-fixer\" failonerror=\"true\">\n            <arg value=\"fix\" />\n            <arg value=\"--dry-run\" />\n        </exec>\n    </target>\n\n    <target name=\"psalm\" depends=\"install-tools,install-dependencies\" description=\"Run psalm\">\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-cache-clear\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--clear-cache\" />\n        </exec>\n\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm\" failonerror=\"true\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--show-info=true\" />\n            <arg value=\"--stats\" />\n        </exec>\n    </target>\n\n    <target name=\"psalm-baseline\" depends=\"install-tools,install-dependencies\" description=\"Run psalm\">\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-cache-clear\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--clear-cache\" />\n        </exec>\n\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-baseline\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--set-baseline=build/psalm-baseline.xml\" />\n            <arg value=\"--show-info=false\" />\n        </exec>\n    </target>\n\n    <target name=\"test\" depends=\"install-tools,install-dependencies\" description=\"Run tests\">\n        <exec executable=\"${basedir}/tools/phpunit\" taskname=\"phpunit\"/>\n    </target>\n\n    <target name=\"test-with-code-coverage\" depends=\"install-tools,install-dependencies\" description=\"Run tests with code coverage\">\n        <exec executable=\"${basedir}/tools/phpunit\" taskname=\"phpunit\">\n            <arg value=\"--coverage-clover build/logs/clover.xml\" />\n        </exec>\n    </target>\n\n    <target name=\"-tools-installed\">\n        <available file=\"${basedir}/tools/phpunit\" property=\"tools-installed\" type=\"file\"/>\n    </target>\n</project>\n\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.6572265625,
          "content": "{\n  \"name\": \"phar-io/version\",\n  \"description\": \"Library for handling version information and constraints\",\n  \"license\": \"BSD-3-Clause\",\n  \"authors\": [\n    {\n      \"name\": \"Arne Blankerts\",\n      \"email\": \"arne@blankerts.de\",\n      \"role\": \"Developer\"\n    },\n    {\n      \"name\": \"Sebastian Heuer\",\n      \"email\": \"sebastian@phpeople.de\",\n      \"role\": \"Developer\"\n    },\n    {\n      \"name\": \"Sebastian Bergmann\",\n      \"email\": \"sebastian@phpunit.de\",\n      \"role\": \"Developer\"\n    }\n  ],\n  \"support\": {\n    \"issues\": \"https://github.com/phar-io/version/issues\"\n  },\n  \"require\": {\n    \"php\": \"^7.2 || ^8.0\"\n  },\n  \"autoload\": {\n    \"classmap\": [\n      \"src/\"\n    ]\n  }\n}\n\n"
        },
        {
          "name": "phive.xml",
          "type": "blob",
          "size": 0.3818359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phive xmlns=\"https://phar.io/phive\">\n  <phar name=\"php-cs-fixer\" version=\"^2.15.1\" installed=\"2.19.3\" location=\"./tools/php-cs-fixer\" copy=\"true\"/>\n  <phar name=\"psalm\" version=\"^4.0\" installed=\"4.21.0\" location=\"./tools/psalm\" copy=\"true\"/>\n  <phar name=\"phpunit\" version=\"^8.5.3\" installed=\"8.5.23\" location=\"./tools/phpunit\" copy=\"true\"/>\n</phive>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.6923828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/5.7/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         beStrictAboutOutputDuringTests=\"true\"\n         beStrictAboutTestsThatDoNotTestAnything=\"true\"\n         beStrictAboutTodoAnnotatedTests=\"true\"\n         verbose=\"true\">\n    <testsuite name='tests'>\n        <directory suffix=\"Test.php\">tests</directory>\n    </testsuite>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">src</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.38671875,
          "content": "<?xml version=\"1.0\"?>\n<psalm xmlns=\"https://getpsalm.org/schema/config\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\">\n\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor/\" />\n        </ignoreFiles>\n    </projectFiles>\n\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}