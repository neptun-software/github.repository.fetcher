{
  "metadata": {
    "timestamp": 1736712303831,
    "page": 96,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "paragonie/awesome-appsec",
      "stars": 6395,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.87109375,
          "content": "# Contributing to this List\n\nThis README file is dynamically generated from the `data/` directory.\n\nTo add to this list, please clone the repository then follow the following steps:\n\n1. Create a new JSON file with the desired information. Feel free to refer to \n   the [template](template/full.json).\n   \n   The following fields are required:\n    * `name`\n    * `remark`\n    * `url`\n   \n   Any directories you create will be used to define the structure of your new\n   links.\n   \n   Please try not to make things too messy. We will clean up the list from time\n   to time.\n   \n2. Commit your changes, send a pull request.\n\nWe will recompile the `README.md` file from all of the JSON files in the `data/` directory\nfor you. Feel free to run `src/compiler.php` on your own machine to test how the changes\nlook, but this is not required. It only takes a second of our time to build a new README.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Paragon Initiative Enterprises\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 33.0595703125,
          "content": "# Awesome AppSec [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nA curated list of resources for learning about application security. Contains books,\nwebsites, blog posts, and self-assessment quizzes.\n\nMaintained by [Paragon Initiative Enterprises](https://paragonie.com) with\ncontributions from the application security and developer communities. We also\nhave [other community projects](https://paragonie.com/projects) which might be\nuseful for tomorrow's application security experts.\n\nIf you are an absolute beginner to the topic of software security, you may benefit\nfrom reading [A Gentle Introduction to Application Security](https://paragonie.com/blog/2015/08/gentle-introduction-application-security).\n\n# Contributing\n\n[Please refer to the contributing guide for details](CONTRIBUTING.md).\n\n# Application Security Learning Resources\n\n\n  * [General](#general)\n    * [Articles](#articles)\n      * [How to Safely Generate a Random Number](#how-to-safely-generate-a-random-number-2014) (2014)\n      * [Salted Password Hashing - Doing it Right](#salted-password-hashing-doing-it-right-2014) (2014)\n      * [A good idea with bad usage: /dev/urandom](#a-good-idea-with-bad-usage-devurandom-2014) (2014)\n      * [Why Invest in Application Security?](#why-invest-in-application-security-2015) (2015)\n      * [Be wary of one-time pads and other crypto unicorns](#be-wary-of-one-time-pads-and-other-crypto-unicorns-2015) (2015)\n    * [Books](#books)\n      * [Web Application Hacker's Handbook](#-web-application-hackers-handbook-2011) (2011) ![nonfree](img/nonfree.png)\n      * [Cryptography Engineering](#-cryptography-engineering-2010) (2010) ![nonfree](img/nonfree.png)\n      * [Securing DevOps](#-securing-devops-2018) (2018) ![nonfree](img/nonfree.png)\n      * [Gray Hat Python: Programming for Hackers and Reverse Engineers](#-gray-hat-python-programming-for-hackers-and-reverse-engineers-2009) (2009) ![nonfree](img/nonfree.png)\n      * [The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities](#-the-art-of-software-security-assessment-identifying-and-preventing-software-vulnerabilities-2006) (2006) ![nonfree](img/nonfree.png)\n      * [C Interfaces and Implementations: Techniques for Creating Reusable Software](#-c-interfaces-and-implementations-techniques-for-creating-reusable-software-1996) (1996) ![nonfree](img/nonfree.png)\n      * [Reversing: Secrets of Reverse Engineering](#-reversing-secrets-of-reverse-engineering-2005) (2005) ![nonfree](img/nonfree.png)\n      * [JavaScript: The Good parts](#-javascript-the-good-parts-2008) (2008) ![nonfree](img/nonfree.png)\n      * [Windows Internals: Including Windows Server 2008 and Windows Vista, Fifth Edition ](#-windows-internals-including-windows-server-2008-and-windows-vista-fifth-edition-2007) (2007) ![nonfree](img/nonfree.png)\n      * [The Mac Hacker's Handbook](#-the-mac-hackers-handbook-2009) (2009) ![nonfree](img/nonfree.png)\n      * [The IDA Pro Book: The Unofficial Guide to the World's Most Popular Disassembler](#-the-ida-pro-book-the-unofficial-guide-to-the-worlds-most-popular-disassembler-2008) (2008) ![nonfree](img/nonfree.png)\n      * [Internetworking with TCP/IP Vol. II: ANSI C Version: Design, Implementation, and Internals (3rd Edition)](#-internetworking-with-tcpip-vol-ii-ansi-c-version-design-implementation-and-internals-3rd-edition-1998) (1998) ![nonfree](img/nonfree.png)\n      * [Network Algorithmics,: An Interdisciplinary Approach to Designing Fast Networked Devices](#-network-algorithmics-an-interdisciplinary-approach-to-designing-fast-networked-devices-2004) (2004) ![nonfree](img/nonfree.png)\n      * [Computation Structures (MIT Electrical Engineering and Computer Science)](#-computation-structures-mit-electrical-engineering-and-computer-science-1989) (1989) ![nonfree](img/nonfree.png)\n      * [Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection](#-surreptitious-software-obfuscation-watermarking-and-tamperproofing-for-software-protection-2009) (2009) ![nonfree](img/nonfree.png)\n      * [Secure Programming HOWTO](#secure-programming-howto-2015) (2015)\n      * [Security Engineering - Second Edition](#security-engineering-second-edition-2008) (2008)\n      * [Bulletproof SSL and TLS](#-bulletproof-ssl-and-tls-2014) (2014) ![nonfree](img/nonfree.png)\n      * [Holistic Info-Sec for Web Developers (Fascicle 0)](#holistic-info-sec-for-web-developers-fascicle-0-2016) (2016)\n      * [Holistic Info-Sec for Web Developers (Fascicle 1)](#holistic-info-sec-for-web-developers-fascicle-1)\n    * [Classes](#classes)\n      * [Offensive Computer Security (CIS 4930) FSU](#offensive-computer-security-cis-4930-fsu)\n      * [Hack Night](#hack-night)\n    * [Websites](#websites)\n      * [Hack This Site!](#hack-this-site)\n      * [Enigma Group](#enigma-group)\n      * [Web App Sec Quiz](#web-app-sec-quiz)\n      * [SecurePasswords.info](#securepasswords-info)\n      * [Security News Feeds Cheat-Sheet](#security-news-feeds-cheat-sheet)\n      * [Open Security Training](#open-security-training)\n      * [MicroCorruption](#microcorruption)\n      * [The Matasano Crypto Challenges](#the-matasano-crypto-challenges)\n      * [PentesterLab](#pentesterlab)\n      * [Juice Shop](#juice-shop)\n      * [Supercar Showdown](#supercar-showdown)\n      * [OWASP NodeGoat](#owasp-nodegoat)\n      * [Securing The Stack](#securing-the-stack)\n      * [OWASP ServerlessGoat](#owasp-serverlessgoat)\n      * [Blogs](#blogs)\n        * [Crypto Fails](#crypto-fails)\n        * [NCC Group - Blog](#ncc-group-blog)\n        * [Scott Helme](#scott-helme)\n        * [Cossack Labs blog](#cossack-labs-blog-2018) (2018)\n      * [Wiki pages](#wiki-pages)\n        * [OWASP Top Ten Project](#owasp-top-ten-project)\n      * [Tools](#tools)\n        * [Qualys SSL Labs](#qualys-ssl-labs)\n        * [securityheaders.io](#securityheaders-io)\n        * [report-uri.io](#report-uri-io)\n        * [clickjacker.io](#clickjacker-io)\n  * [AWS Lambda](#aws-lambda)\n    * [Tools](#tools-1)\n      * [PureSec FunctionShield](#puresec-functionshield)\n  * [Android](#android)\n    * [Books and ebooks](#books-and-ebooks)\n      * [SEI CERT Android Secure Coding Standard](#sei-cert-android-secure-coding-standard-2015) (2015)\n  * [C](#c)\n    * [Books and ebooks](#books-and-ebooks-1)\n      * [SEI CERT C Coding Standard](#sei-cert-c-coding-standard-2006) (2006)\n      * [Defensive Coding: A Guide to Improving Software Security by the Fedora Security Team](#defensive-coding-a-guide-to-improving-software-security-by-the-fedora-security-team-2022) (2022)\n  * [C++](#c-1)\n    * [Books and ebooks](#books-and-ebooks-2)\n      * [SEI CERT C++ Coding Standard](#sei-cert-c-coding-standard-2006-1) (2006)\n  * [C Sharp](#c-sharp)\n    * [Books and ebooks](#books-and-ebooks-3)\n      * [Security Driven .NET](#-security-driven-net-2015) (2015) ![nonfree](img/nonfree.png)\n  * [Clojure](#clojure)\n    * [Repositories](#repositories)\n      * [Clojure OWASP](#clojure-owasp-2020) (2020)\n  * [Go](#go)\n    * [Articles](#articles-1)\n      * [Memory Security in Go - spacetime.dev](#memory-security-in-go-spacetime-dev-2017) (2017)\n  * [Java](#java)\n    * [Books and ebooks](#books-and-ebooks-4)\n      * [SEI CERT Java Coding Standard](#sei-cert-java-coding-standard-2007) (2007)\n      * [Secure Coding Guidelines for Java SE](#secure-coding-guidelines-for-java-se-2014) (2014)\n  * [Node.js](#node-js)\n    * [Articles](#articles-2)\n      * [Node.js Security Checklist - Rising Stack Blog](#node-js-security-checklist-rising-stack-blog-2015) (2015)\n      * [Awesome Electron.js hacking & pentesting resources](#awesome-electron-js-hacking-pentesting-resources-2020) (2020)\n    * [Books and ebooks](#books-and-ebooks-5)\n      * [Essential Node.js Security](#-essential-node-js-security-2017) (2017) ![nonfree](img/nonfree.png)\n    * [Training](#training)\n      * [Security Training by ^Lift Security](#-security-training-by-lift-security) ![nonfree](img/nonfree.png)\n      * [Security Training from BinaryMist](#-security-training-from-binarymist) ![nonfree](img/nonfree.png)\n  * [PHP](#php)\n    * [Articles](#articles-3)\n      * [It's All About Time](#its-all-about-time-2014) (2014)\n      * [Secure Authentication in PHP with Long-Term Persistence](#secure-authentication-in-php-with-long-term-persistence-2015) (2015)\n      * [20 Point List For Preventing Cross-Site Scripting In PHP](#20-point-list-for-preventing-cross-site-scripting-in-php-2013) (2013)\n      * [25 PHP Security Best Practices For Sys Admins](#25-php-security-best-practices-for-sys-admins-2011) (2011)\n      * [PHP data encryption primer](#php-data-encryption-primer-2014) (2014)\n      * [Preventing SQL Injection in PHP Applications - the Easy and Definitive Guide](#preventing-sql-injection-in-php-applications-the-easy-and-definitive-guide-2014) (2014)\n      * [You Wouldn't Base64 a Password - Cryptography Decoded](#you-wouldnt-base64-a-password-cryptography-decoded-2015) (2015)\n      * [A Guide to Secure Data Encryption in PHP Applications](#a-guide-to-secure-data-encryption-in-php-applications-2015) (2015)\n      * [The 2018 Guide to Building Secure PHP Software](#the-2018-guide-to-building-secure-php-software-2017) (2017)\n    * [Books and ebooks](#books-and-ebooks-6)\n      * [Securing PHP: Core Concepts](#-securing-php-core-concepts) ![nonfree](img/nonfree.png)\n      * [Using Libsodium in PHP Projects](#using-libsodium-in-php-projects)\n    * [Useful libraries](#useful-libraries)\n      * [defuse/php-encryption](#defusephp-encryption)\n      * [ircmaxell/password_compat](#ircmaxellpassword-compat)\n      * [ircmaxell/RandomLib](#ircmaxellrandomlib)\n      * [thephpleague/oauth2-server](#thephpleagueoauth2-server)\n      * [paragonie/random_compat](#paragonierandom-compat)\n      * [psecio/gatekeeper](#pseciogatekeeper)\n      * [openwall/phpass](#openwallphpass)\n    * [Websites](#websites-1)\n      * [websec.io](#websec-io)\n      * [Blogs](#blogs-1)\n        * [Paragon Initiative Enterprises Blog](#paragon-initiative-enterprises-blog)\n        * [ircmaxell's blog](#ircmaxells-blog)\n        * [Pádraic Brady's Blog](#p%C3%A1draic-bradys-blog)\n      * [Mailing lists](#mailing-lists)\n        * [Securing PHP Weekly](#securing-php-weekly)\n  * [Perl](#perl)\n    * [Books and ebooks](#books-and-ebooks-7)\n      * [SEI CERT Perl Coding Standard](#sei-cert-perl-coding-standard-2011) (2011)\n  * [Python](#python)\n    * [Books and ebooks](#books-and-ebooks-8)\n      * [Python chapter of Fedora Defensive Coding Guide](#python-chapter-of-fedora-defensive-coding-guide)\n      * [Black Hat Python: Python Programming for Hackers and Pentesters](#-black-hat-python-python-programming-for-hackers-and-pentesters) ![nonfree](img/nonfree.png)\n      * [Violent Python](#-violent-python) ![nonfree](img/nonfree.png)\n    * [Websites](#websites-2)\n      * [OWASP Python Security Wiki](#owasp-python-security-wiki-2014) (2014)\n  * [Ruby](#ruby)\n    * [Books and ebooks](#books-and-ebooks-9)\n      * [Secure Ruby Development Guide](#secure-ruby-development-guide-2014) (2014)\n\n\n# General\n\n## Articles\n\n### [How to Safely Generate a Random Number](http://sockpuppet.org/blog/2014/02/25/safely-generate-random-numbers/) (2014)\n\n**Released**: February 25, 2014\n\nAdvice on cryptographically secure pseudo-random number generators.\n\n### [Salted Password Hashing - Doing it Right](https://crackstation.net/hashing-security.htm) (2014)\n\n**Released**: August 6, 2014\n\nA post on [Crackstation](https://crackstation.net), a project by [Defuse Security](https://defuse.ca)\n\n### [A good idea with bad usage: /dev/urandom](http://insanecoding.blogspot.co.uk/2014/05/a-good-idea-with-bad-usage-devurandom.html) (2014)\n\n**Released**: May 3, 2014\n\nMentions many ways to make `/dev/urandom` fail on Linux/BSD.\n\n### [Why Invest in Application Security?](https://paragonie.com/white-paper/2015-why-invest-application-security) (2015)\n\n**Released**: June 21, 2015\n\nRunning a business requires being cost-conscious and minimizing unnecessary spending. The benefits of ensuring in the security of your application are invisible to most companies, so often times they neglect to invest in secure software development as a cost-saving measure. What these companies don't realize is the potential cost (both financial and to brand reputation) a preventable data compromise can incur.\n\n**The average data breach costs millions of dollars in damage.**\n\nInvesting more time and personnel to develop secure software is, for most companies, worth it to minimize this unnecessary risk to their bottom line.\n\n### [Be wary of one-time pads and other crypto unicorns](https://freedom-to-tinker.com/blog/jbonneau/be-wary-of-one-time-pads-and-other-crypto-unicorns/) (2015)\n\n**Released**: March 25, 2015\n\nA **must-read** for anyone looking to build their own cryptography features.\n\n## Books\n\n### ![nonfree](img/nonfree.png) [Web Application Hacker's Handbook](http://mdsec.net/wahh) (2011)\n\n**Released**: September 27, 2011\n\nGreat introduction to Web Application Security; though slightly dated.\n\n### ![nonfree](img/nonfree.png) [Cryptography Engineering](http://www.amazon.com/Cryptography-Engineering-Principles-Practical-Applications/dp/0470474246) (2010)\n\n**Released**: March 15, 2010\n\nDevelops a sense of professional paranoia while presenting crypto design techniques.\n\n### ![nonfree](img/nonfree.png) [Securing DevOps](https://www.manning.com/books/securing-devops?a_aid=securingdevops&a_bid=1353bcd8) (2018)\n\n**Released**: March 1, 2018\n\nSecuring DevOps explores how the techniques of DevOps and Security should be applied together to make cloud services safer. This introductory book reviews state of the art practices used in securing web applications and their infrastructure, and teaches you techniques to integrate security directly into your product.\n\n### ![nonfree](img/nonfree.png) [Gray Hat Python: Programming for Hackers and Reverse Engineers](http://www.amazon.com/Gray-Hat-Python-Programming-Engineers/dp/1593271921) (2009)\n\n**Released**: May 3, 2009\n\n\n\n### ![nonfree](img/nonfree.png) [The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities](http://www.amazon.com/The-Software-Security-Assessment-Vulnerabilities/dp/0321444426/) (2006)\n\n**Released**: November 30, 2006\n\n\n\n### ![nonfree](img/nonfree.png) [C Interfaces and Implementations: Techniques for Creating Reusable Software](http://www.amazon.com/Interfaces-Implementations-Techniques-Creating-Reusable/dp/0201498413/) (1996)\n\n**Released**: August 30, 1996\n\n\n\n### ![nonfree](img/nonfree.png) [Reversing: Secrets of Reverse Engineering](http://www.amazon.com/Reversing-Secrets-Engineering-Eldad-Eilam/dp/0764574817) (2005)\n\n**Released**: April 15, 2005\n\n\n\n### ![nonfree](img/nonfree.png) [JavaScript: The Good parts](http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742) (2008)\n\n**Released**: May 1, 2008\n\n\n\n### ![nonfree](img/nonfree.png) [Windows Internals: Including Windows Server 2008 and Windows Vista, Fifth Edition ](http://www.amazon.com/Windows%C2%AE-Internals-Including-Developer-Reference/dp/0735625301) (2007)\n\n**Released**: June 17, 2007\n\n\n\n### ![nonfree](img/nonfree.png) [The Mac Hacker's Handbook](http://www.amazon.com/The-Hackers-Handbook-Charlie-Miller/dp/0470395362) (2009)\n\n**Released**: March 3, 2009\n\n\n\n### ![nonfree](img/nonfree.png) [The IDA Pro Book: The Unofficial Guide to the World's Most Popular Disassembler](http://www.amazon.com/The-IDA-Pro-Book-Disassembler/dp/1593271786) (2008)\n\n**Released**: August 22, 2008\n\n\n\n### ![nonfree](img/nonfree.png) [Internetworking with TCP/IP Vol. II: ANSI C Version: Design, Implementation, and Internals (3rd Edition)](http://www.amazon.com/Internetworking-TCP-Vol-Implementation-Internals/dp/0139738436) (1998)\n\n**Released**: June 25, 1998\n\n\n\n### ![nonfree](img/nonfree.png) [Network Algorithmics,: An Interdisciplinary Approach to Designing Fast Networked Devices](http://www.amazon.com/Network-Algorithmics-Interdisciplinary-Designing-Networking/dp/0120884771) (2004)\n\n**Released**: December 29, 2004\n\n\n\n### ![nonfree](img/nonfree.png) [Computation Structures (MIT Electrical Engineering and Computer Science)](http://www.amazon.com/Computation-Structures-Electrical-Engineering-Computer/dp/0262231395) (1989)\n\n**Released**: December 13, 1989\n\n\n\n### ![nonfree](img/nonfree.png) [Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection](http://www.amazon.com/Surreptitious-Software-Obfuscation-Watermarking-Tamperproofing/dp/0321549252) (2009)\n\n**Released**: August 3, 2009\n\n\n\n### [Secure Programming HOWTO](http://www.dwheeler.com/secure-programs/) (2015)\n\n**Released**: March 1, 2015\n\n\n\n### [Security Engineering - Second Edition](https://www.cl.cam.ac.uk/~rja14/book.html) (2008)\n\n**Released**: April 14, 2008\n\n\n\n### ![nonfree](img/nonfree.png) [Bulletproof SSL and TLS](https://www.feistyduck.com/books/bulletproof-ssl-and-tls/) (2014)\n\n**Released**: August 1, 2014\n\n\n\n### [Holistic Info-Sec for Web Developers (Fascicle 0)](https://leanpub.com/holistic-infosec-for-web-developers) (2016)\n\n**Released**: September 17, 2016\n\nThe first part of a three part book series providing broad and in-depth coverage on what web developers and architects need to know in order to create robust, reliable, maintainable and secure software, networks and other, that are delivered continuously, on time, with no nasty surprises.\n\n### [Holistic Info-Sec for Web Developers (Fascicle 1)](https://leanpub.com/holistic-infosec-for-web-developers-fascicle1-vps-network-cloud-webapplications)\n\nThe second part of a three part book series providing broad and in-depth coverage on what web developers and architects need to know in order to create robust, reliable, maintainable and secure software, VPS, networks, cloud and web applications, that are delivered continuously, on time, with no nasty surprises.\n\n## Classes\n\n### [Offensive Computer Security (CIS 4930) FSU](https://www.cs.fsu.edu/~redwood/OffensiveComputerSecurity/)\n\nA vulnerability research and exploit development class by Owen Redwood of Florida State University. \n\n**Be sure to check out the [lectures](https://www.cs.fsu.edu/~redwood/OffensiveComputerSecurity/lectures.html)!**\n\n### [Hack Night](https://github.com/isislab/Hack-Night)\n\nDeveloped from the materials of NYU Poly's old Penetration Testing and Vulnerability Analysis course, Hack Night is a sobering introduction to offensive security. A lot of complex technical content is covered very quickly as students are introduced to a wide variety of complex and immersive topics over thirteen weeks.\n\n## Websites\n\n### [Hack This Site!](http://www.hackthissite.org)\n\nLearn about application security by attempting to hack this website.\n\n### [Enigma Group](http://www.enigmagroup.org)\n\nWhere hackers and security experts come to train.\n\n### [Web App Sec Quiz](https://timoh6.github.io/WebAppSecQuiz/)\n\nSelf-assessment quiz for web application security\n\n### [SecurePasswords.info](https://securepasswords.info)\n\nSecure passwords in several languages/frameworks.\n\n### [Security News Feeds Cheat-Sheet](http://lzone.de/cheat-sheet/Security-News-Feeds)\n\nA list of security news sources.\n\n### [Open Security Training](http://opensecuritytraining.info/)\n\nVideo courses on low-level x86 programming, hacking, and forensics.\n\n### [MicroCorruption](https://microcorruption.com/login)\n\nCapture The Flag - Learn Assembly and Embedded Device Security\n\n### [The Matasano Crypto Challenges](http://cryptopals.com)\n\nA series of programming exercises for teaching oneself cryptography by [Matasano Security](http://matasano.com). [The introduction](https://blog.pinboard.in/2013/04/the_matasano_crypto_challenges) by Maciej Ceglowski explains it well.\n\n### [PentesterLab](https://pentesterlab.com)\n\nPentesterLab provides [free Hands-On exercises](https://pentesterlab.com/exercises/) and a [bootcamp](https://pentesterlab.com/bootcamp/) to get started.\n\n### [Juice Shop](https://bkimminich.github.io/juice-shop)\n\nAn intentionally insecure Javascript Web Application.\n\n### [Supercar Showdown](http://hackyourselffirst.troyhunt.com/)\n\nHow to go on the offence before online attackers do.\n\n### [OWASP NodeGoat](https://github.com/owasp/nodegoat)\n\nPurposly vulnerable to the OWASP Top 10 Node.JS web application, with [tutorials](https://nodegoat.herokuapp.com/tutorial), [security regression testing with the OWASP Zap API](https://github.com/OWASP/NodeGoat/wiki/NodeGoat-Security-Regression-tests-with-ZAP-API), [docker image](https://github.com/owasp/nodegoat#option-3---run-nodegoat-on-docker). With several options to get up and running fast.\n\n### [Securing The Stack](https://securingthestack.com)\n\nBi-Weekly Appsec Tutorials\n\n### [OWASP ServerlessGoat](https://www.owasp.org/index.php/OWASP_Serverless_Goat)\n\nOWASP ServerlessGoat is a deliberately insecure realistic AWS Lambda serverless application, maintained by OWASP and created by [PureSec](https://www.puresec.io/). You can install WebGoat, learn about the vulnerabilities, how to exploit them, and how to remediate each issue. The project also includes documentation explaining the issues and how they should be remediated with best-practices.\n\n### Blogs\n\n#### [Crypto Fails](http://cryptofails.com)\n\nShowcasing bad cryptography\n\n#### [NCC Group - Blog](https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/)\n\nThe blog of NCC Group, formerly Matasano, iSEC Partners, and NGS Secure.\n\n#### [Scott Helme](https://scotthelme.co.uk)\n\nLearn about security and performance.\n\n#### [Cossack Labs blog](https://www.cossacklabs.com/blog-archive/) (2018)\n\n**Released**: July 30, 2018\n\nBlog of cryptographic company that makes open-source libraries and tools, and describes practical data security approaches for applications and infrastructures.\n\n### Wiki pages\n\n#### [OWASP Top Ten Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)\n\nThe top ten most common and critical security vulnerabilities found in web applications.\n\n### Tools\n\n#### [Qualys SSL Labs](https://www.ssllabs.com/)\n\nThe infamous suite of SSL and TLS tools.\n\n#### [securityheaders.io](https://securityheaders.io/)\n\nQuickly and easily assess the security of your HTTP response headers.\n\n#### [report-uri.io](https://report-uri.io)\n\nA free CSP and HPKP reporting service.\n\n#### [clickjacker.io](https://clickjacker.io)\n\nTest and learn Clickjacking. Make clickjacking PoC, take screenshot and share link. You can test HTTPS, HTTP, intranet & internal sites.\n\n# AWS Lambda\n\n## Tools\n\n### [PureSec FunctionShield](https://www.puresec.io/function-shield)\n\nFunctionShield is a 100% free AWS Lambda security and Google Cloud Functions security library that equips developers with the ability to easily enforce strict security controls on serverless runtimes.\n\n# Android\n\n## Books and ebooks\n\n### [SEI CERT Android Secure Coding Standard](https://www.securecoding.cert.org/confluence/display/android/Android+Secure+Coding+Standard) (2015)\n\n**Released**: February 24, 2015\n\nA community-maintained Wiki detailing secure coding standards for Android development.\n\n# C\n\n## Books and ebooks\n\n### [SEI CERT C Coding Standard](https://www.securecoding.cert.org/confluence/display/c/SEI+CERT+C+Coding+Standard) (2006)\n\n**Released**: May 24, 2006\n\nA community-maintained Wiki detailing secure coding standards for C programming.\n\n### [Defensive Coding: A Guide to Improving Software Security by the Fedora Security Team](https://docs.fedoraproject.org/en-US/Fedora_Security_Team/1/html/Defensive_Coding/index.html) (2022)\n\n**Released**: May 23, 2022\n\nProvides guidelines for improving software security through secure coding. Covers common programming languages and libraries, and focuses on concrete recommendations.\n\n# C++\n\n## Books and ebooks\n\n### [SEI CERT C++ Coding Standard](https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=637) (2006)\n\n**Released**: July 18, 2006\n\nA community-maintained Wiki detailing secure coding standards for C++ programming.\n\n# C Sharp\n\n## Books and ebooks\n\n### ![nonfree](img/nonfree.png) [Security Driven .NET](http://securitydriven.net/) (2015)\n\n**Released**: July 14, 2015\n\nAn introduction to developing secure applications targeting version 4.5 of the .NET Framework, specifically covering cryptography and security engineering topics.\n\n# Clojure\n\n## Repositories\n\n### [Clojure OWASP](https://github.com/nubank/clj-owasp) (2020)\n\n**Released**: May 5, 2020\n\nRepository with Clojure examples of OWASP top 10 vulnerabilities.\n\n# Go\n\n## Articles\n\n### [Memory Security in Go - spacetime.dev](https://spacetime.dev/memory-security-go) (2017)\n\n**Released**: August 3, 2017\n\nA guide to managing sensitive data in memory.\n\n# Java\n\n## Books and ebooks\n\n### [SEI CERT Java Coding Standard](https://www.securecoding.cert.org/confluence/display/java/SEI+CERT+Oracle+Coding+Standard+for+Java) (2007)\n\n**Released**: January 12, 2007\n\nA community-maintained Wiki detailing secure coding standards for Java programming.\n\n### [Secure Coding Guidelines for Java SE](http://www.oracle.com/technetwork/java/seccodeguide-139067.html) (2014)\n\n**Released**: April 2, 2014\n\nSecure Java programming guidelines straight from Oracle.\n\n# Node.js\n\n## Articles\n\n### [Node.js Security Checklist - Rising Stack Blog](https://blog.risingstack.com/node-js-security-checklist/) (2015)\n\n**Released**: October 13, 2015\n\nCovers a lot of useful information for developing secure Node.js applications.\n\n### [Awesome Electron.js hacking & pentesting resources](https://github.com/doyensec/awesome-electronjs-hacking) (2020)\n\n**Released**: June 17, 2020\n\nA curated list of resources to secure Electron.js-based applications.\n\n## Books and ebooks\n\n### ![nonfree](img/nonfree.png) [Essential Node.js Security](https://leanpub.com/nodejssecurity) (2017)\n\n**Released**: July 19, 2017\n\nHands-on and abundant with source code for a practical guide to Securing Node.js web applications.\n\n## Training\n\n### ![nonfree](img/nonfree.png) [Security Training by ^Lift Security](https://liftsecurity.io/training)\n\nLearn from the team that spearheaded the [Node Security Project](https://nodesecurity.io)\n\n### ![nonfree](img/nonfree.png) [Security Training from BinaryMist](https://blog.binarymist.net/presentations-publications/)\n\nWe run many types of info-sec security training, covering Physical, People, VPS, Networs, Cloud, Web Applications. Most of the content is sourced from the [book series](https://leanpub.com/b/holisticinfosecforwebdevelopers) Kim has been working on for several years. More info can be found [here](https://binarymist.io/#services)\n\n# PHP\n\n## Articles\n\n### [It's All About Time](http://blog.ircmaxell.com/2014/11/its-all-about-time.html) (2014)\n\n**Released**: November 28, 2014\n\nA gentle introduction to timing attacks in PHP applications\n\n### [Secure Authentication in PHP with Long-Term Persistence](https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence) (2015)\n\n**Released**: April 21, 2015\n\nDiscusses password policies, password storage, \"remember me\" cookies, and account recovery.\n\n### [20 Point List For Preventing Cross-Site Scripting In PHP](http://blog.astrumfutura.com/2013/04/20-point-list-for-preventing-cross-site-scripting-in-php) (2013)\n\n**Released**: April 22, 2013\n\nPadriac Brady's advice on building software that isn't vulnerable to XSS\n\n### [25 PHP Security Best Practices For Sys Admins](http://www.cyberciti.biz/tips/php-security-best-practices-tutorial.html) (2011)\n\n**Released**: November 23, 2011\n\nThough this article is a few years old, much of its advice is still relevant as we veer around the corner towards PHP 7.\n\n### [PHP data encryption primer](https://timoh6.github.io/2014/06/16/PHP-data-encryption-cheatsheet.html) (2014)\n\n**Released**: June 16, 2014\n\n@timoh6 explains implementing data encryption in PHP\n\n### [Preventing SQL Injection in PHP Applications - the Easy and Definitive Guide](https://paragonie.com/blog/2015/05/preventing-sql-injection-in-php-applications-easy-and-definitive-guide) (2014)\n\n**Released**: May 26, 2014\n\n**TL;DR** - don't escape, use prepared statements instead!\n\n### [You Wouldn't Base64 a Password - Cryptography Decoded](https://paragonie.com/blog/2015/08/you-wouldnt-base64-a-password-cryptography-decoded) (2015)\n\n**Released**: August 7, 2015\n\nA human-readable overview of commonly misused cryptography terms and fundamental concepts, with example code in PHP.\n\nIf you're confused about cryptography terms, start here.\n\n### [A Guide to Secure Data Encryption in PHP Applications](https://paragonie.com/white-paper/2015-secure-php-data-encryption) (2015)\n\n**Released**: August 2, 2015\n\nDiscusses the importance of end-to-end network-layer encryption (HTTPS) as well as secure encryption for data at rest, then introduces the specific cryptography tools that developers should use for specific use cases, whether they use [libsodium](https://pecl.php.net/package/libsodium), [Defuse Security's secure PHP encryption library](https://github.com/defuse/php-encryption), or OpenSSL.\n\n### [The 2018 Guide to Building Secure PHP Software](https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software) (2017)\n\n**Released**: December 12, 2017\n\nThis guide should serve as a complement to the e-book, [PHP: The Right Way](http://www.phptherightway.com), with a strong emphasis on security and not general PHP programmer topics (e.g. code style).\n\n## Books and ebooks\n\n### ![nonfree](img/nonfree.png) [Securing PHP: Core Concepts](https://leanpub.com/securingphp-coreconcepts)\n\n*Securing PHP: Core Concepts* acts as a guide to some of the most common security terms and provides some examples of them in every day PHP.\n\n### [Using Libsodium in PHP Projects](https://paragonie.com/book/pecl-libsodium)\n\nYou shouldn't need a Ph.D in Applied Cryptography to build a secure web application. Enter libsodium, which allows developers to develop fast, secure, and reliable applications without needing to know what a stream cipher even is.\n\n## Useful libraries\n\n### [defuse/php-encryption](https://github.com/defuse/php-encryption)\n\nSymmetric-key encryption library for PHP applications. (**Recommended** over rolling your own!)\n\n### [ircmaxell/password_compat](https://github.com/ircmaxell/password_compat)\n\nIf you're using PHP 5.3.7+ or 5.4, use this to hash passwords\n\n### [ircmaxell/RandomLib](https://github.com/ircmaxell/RandomLib)\n\nUseful for generating random strings or numbers\n\n### [thephpleague/oauth2-server](https://github.com/thephpleague/oauth2-server)\n\nA secure OAuth2 server implementation\n\n### [paragonie/random_compat](https://github.com/paragonie/random_compat)\n\nPHP 7 offers a new set of CSPRNG functions: `random_bytes()` and `random_int()`. This is a community effort to expose the same API in PHP 5 projects (forward compatibility layer). Permissively MIT licensed.\n\n### [psecio/gatekeeper](https://github.com/psecio/gatekeeper)\n\nA secure authentication and authorization library that implements Role-Based Access Controls and Paragon Initiative Enterprises' recommendaitons for [secure \"remember me\" checkboxes](https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence#title.2).\n\n### [openwall/phpass](http://www.openwall.com/phpass/)\n\nA portable public domain password hashing framework for use in PHP applications.\n\n## Websites\n\n### [websec.io](http://websec.io)\n\n**websec.io** is dedicated to educating developers about security with topics relating to general security fundamentals, emerging technologies and PHP-specific information\n\n### Blogs\n\n#### [Paragon Initiative Enterprises Blog](https://paragonie.com/blog/)\n\nThe blog of our technology and security consulting firm based in Orlando, FL\n\n#### [ircmaxell's blog](http://blog.ircmaxell.com)\n\nA blog about PHP, Security, Performance and general web application development.\n\n#### [Pádraic Brady's Blog](http://blog.astrumfutura.com)\n\nPádraic Brady is a Zend Framework security expert\n\n### Mailing lists\n\n#### [Securing PHP Weekly](http://securingphp.com)\n\nA weekly newsletter about PHP, security, and the community.\n\n# Perl\n\n## Books and ebooks\n\n### [SEI CERT Perl Coding Standard](https://www.securecoding.cert.org/confluence/display/perl/SEI+CERT+Perl+Coding+Standard) (2011)\n\n**Released**: January 10, 2011\n\nA community-maintained Wiki detailing secure coding standards for Perl programming.\n\n# Python\n\n## Books and ebooks\n\n### [Python chapter of Fedora Defensive Coding Guide](https://docs.fedoraproject.org/en-US/Fedora_Security_Team/1/html/Defensive_Coding/chap-Defensive_Coding-Python.html)\n\nLists standard library features that should be avoided, and references sections of other chapters that are Python-specific.\n\n### ![nonfree](img/nonfree.png) [Black Hat Python: Python Programming for Hackers and Pentesters](https://www.nostarch.com/blackhatpython)\n\nBlack Hat Python by Justin Seitz from NoStarch Press is a great book for the offensive security minds\n\n### ![nonfree](img/nonfree.png) [Violent Python](http://www.amazon.com/Violent-Python-Cookbook-Penetration-Engineers/dp/1597499579)\n\nViolent Python shows you how to move from a theoretical understanding of offensive computing concepts to a practical implementation.\n\n## Websites\n\n### [OWASP Python Security Wiki](https://github.com/ebranca/owasp-pysec/wiki) (2014)\n\n**Released**: June 21, 2014\n\nA wiki maintained by the OWASP Python Security project.\n\n# Ruby\n\n## Books and ebooks\n\n### [Secure Ruby Development Guide](https://docs.fedoraproject.org/en-US/Fedora_Security_Team/1/html/Secure_Ruby_Development_Guide/index.html) (2014)\n\n**Released**: March 10, 2014\n\nA guide to secure Ruby development by the Fedora Security Team. Also available on [Github](https://github.com/jrusnack/secure-ruby-development-guide).\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}