{
  "metadata": {
    "timestamp": 1736712286313,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "collabnix/dockerlabs",
      "stars": 7448,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bundle",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21875,
          "content": "# https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ntrim_trailing_whitespace = true\n\n[*.js]\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".forestry",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.02734375,
          "content": ".vscode/\n**/.DS_Store\n.idea\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1103515625,
          "content": "[submodule \"hugo-theme-learn\"]\n\tpath = hugo-theme-learn\n\turl = https://github.com/matcornic/hugo-theme-learn.git\n"
        },
        {
          "name": ".image-config.json",
          "type": "blob",
          "size": 0.2373046875,
          "content": "{\n  \"storePath\": \"/images\",\n  \"wwwRoot\": \"/\",\n  \"grammars\": {\n    \"Markdown\": {\n      \"url\": \"![](${url})\"\n    },\n    \"GitHub Markdown\": {\n      \"url\": \"![](${url})\"\n    },\n    \"HTML\": {\n      \"url\": \"<img src=\\\"${url}\\\" alt=\\\"\\\">\"\n    }\n  }\n}"
        },
        {
          "name": ".jekyll-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": ".sass-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": ".server_client.md.swp",
          "type": "blob",
          "size": 12,
          "content": null
        },
        {
          "name": "Beginners-Track.md",
          "type": "blob",
          "size": 6.2060546875,
          "content": "---\nlayout: default\ntitle: Beginners Track\ndescription: collabnix | DockerLab | Docker - Beginners Track\n---\n\n# Beginners Track\n\n# Introduction to Docker \n\n- [What is Docker?](./beginners/docker/what-is-docker.md)\n- [Difference between Docker & Container](./beginners/docker/docker-vs-container.md)\n- [What are Containers? What are they used for?](./beginners/linux-containers.md)\n- [Difference between VM and Docker](./beginners/difference-docker-vm.md)\n- [Similarity between VM and Docker](./beginners/similarity-vm-docker.md)\n- [How is Container different from Virtual Machine?](./beginners/difference-vm-containers.md)\n- [Top Reasons why to & why not to run Docker containers directly on Bare Metal System](./beginners/docker-on-bare-metal.md)\n- [How is Docker Networking different from VM Networking](./beginners/difference-vmnetwork-docker-networking.md)\n- [Understanding Docker Underlying Technologies](./beginners/understanding-docker-underlying-technology)\n- [What happen when Containers are Launched?](./intermediate/contaner-runtimes/README.md)\n- [Can container communication cross over to noncontainerized apps?](./beginners/linux-comm-containers.md)\n- [Architecture of Docker](./beginners/architecture-of-a-docker.md)\n   - [Docker Enterprise Edition](./beginners/architecture-dockeree.md)\n- [Docker Engine Release Features](./beginners/evolution-of-docker-platform.md)\n   - [18.09](./beginners/1809.md)\n   - [19.03 Community Edition](./beginners/install/from-source/README.md#how-to-install-latest-docker-19030-beta-1-test-build)\n     - [How to install latest Docker 19.03.0 Test Build](./beginners/install/from-source/README.md#how-to-install-latest-docker-19030-beta-1-test-build)<br>\n     - [Support for ```docker context```](./beginners/install/from-source/README.md#support-for-docker-context)<br>\n     - [Support for rootless Docker](./beginners/install/from-source/README.md#testing-rootless-docker-under-docker-19030-beta-1)<br>\n     - [Context Switching Made Simple for Swarm & Kubernetes in Docker 19.03.0](./beginners/install/from-source/README.md#support-for-docker-context)<br>\n     - [Test Drive --gpu option during docker CLI runtime on Docker 19.03.0 Beta 3](./beginners/install/from-source/README.md#support-for---gpu-runtime-option-in-docker-19030-beta3)\n    - [19.03 Enterprise Edition](./beginners/install/from-source/README.md#how-to-install-latest-docker-19030-enterprise-beta-4-test-build)\n   \n             \n# Installing, Upgrading & Maintaining Docker \n\n- Installing Docker on \n   - [Linux](./beginners/install)\n   - [Windows](./install/windows/docker-desktop-for-windows/README.md)\n   - [IoT Platform](./raspberrypi3)\n     - [How to install Docker 18.09.0 on Raspberry Pi 3?](./beginners/install/raspberrypi3/README.md)\n     - [How to setup Docker Swarm Cluster on Raspberry Pi](./beginners/install/raspberrypi3/setting-up-swarm-cluster.md)\n     - [Building up K3s Cluster on Raspberry Pi 3 Nodes](./beginners/install/raspberrypi3/setting-up-k3s-cluster.md)\n     - [How to monitor a Docker Swarm with Blinkt! LED using Raspberry Pi 3](./beginners/install/raspberrypi3/monitor-docker-swarm-using-blinkt.md)\n     - [Docker on Arduino Uno & Johnny Five](.beginners/install/raspberrypi3/Docker-IOT_Using_Arduino_Uno_and_Johnny-Five.md)\n- [Compiling Your Own Docker Binary from Source](./beginners/compiling-docker-from-source.md)\n- [Upgrading Docker from CE to EE](./beginners/upgrade-1809ce-1809ee/README.md)\n\n\n# Docker Components\n\n- [Docker Client-Server Architecture](./beginners/components/server_client.md)\n- [Docker Daemon](./beginners/components/daemon/README.md)\n  - [How to open Docker Daemon to External world?](./beginners/components/daemon/access-daemon-externally.md)\n- What is a Docker Image?\n  - [Building Your own Docker Image from Scratch](./beginners/building-docker-image-from-scratch.md)\n- [What is Docker Container?](./beginners/components/what-is-container.md)\n- [Difference between Docker Image Vs Docker Container?](./beginners/components/container-vs-image.md)\n- What is Docker registry?\n  - [Building a Private Docker Registry](./beginners/build-private-docker-registry.md)\n  - [Building a Private Docker Registry using Portus](./beginners/portus/README.md)\n\n  \n# Working with Docker Image & Container\n\n- [Running Hello World Example](./beginners/helloworld/README.md)\n- [Working with Docker Image](./beginners/workingwithdockerimage.md) \n  - [Saving Images and Containers as Tar Files for Sharing](./beginners/saving-images-as-tar/README.md) \n  - [Versioning an Image with Tags](./beginners/versioning-an-image-with-tags/README.md)\n- [Building Your First Alpine Docker Image and Push it to DockerHub](./beginners/building-your-first-alpine-container.md)\n- [Building Docker Image from Scratch](./beginners/building-docker-image-from-scratch.md)\n- [Creating Docker Base Image](./beginners/create-base-image.md)\n- [Using ONBUILD Images](./beginners/using-onbuild-images/README.md)\n\n\n  \n # Working with Dockerfile\n \n- Building Docker Image from Dockerfile\n  - [Writing Your First DockerFile](./beginners/dockerfile/Writing-dockerfile.md)\n  - [Injecting files into your image using ADD](./beginners/dockerfile/ADD-command.md)\n  - [Rebuilding without Cache](./beginners/dockerfile/Rebuild-without-cache.md)\n  \n- [How is ENTRYPOINT instruction under Dockerfile different from RUN instruction?](./beginners/dockerfile/entrypoint-vs-run.md)\n- [Difference between Docker Compose Vs Dockerfile](./beginners/difference-compose-dockerfile.md)\n- [How to use ARG to pass enviornmental variable at runtime](./beginners/dockerfile/arg-dockerfile-runtime.md)\n\n# Getting Started with Docker Volume\n\n[Creating Volume Mount from Dockerfile](./beginners/volume/create-a-volume-mount-from-dockerfile.md)<br>\n[Managing volumes through Docker CLI](./beginners/volume/managing-volumes-via-docker-cli.md)<br>\n[Creating Volume Mount from **docker run** command & sharing same Volume Mounts among multiple containers](./beginners/volume/creating-volume-mount-from-dockercli.md)<br>\n[Mounting host directory into container](./beginners/volume/bind-mounts.md)<br>\n[Creating Volume with Alpine OS](./beginners/volume/Creating%20Volume%20with%20alphine.md)<br>\n\n# FAQs\n\n[How to Run Multiple Python Versions on a Docker Host System]()\n  \n\n\n\n\n [Proceed >> What is Docker?](./beginners/docker/what-is-docker.md)\n\n\n\n\n\n\n\n[back](./)\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0234375,
          "content": "dockerlabs.collabnix.com"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.4853515625,
          "content": "\n## Guidelines for Contributing\n\n### How can I get involved?\n\nThere are 5 golden steps to get involved - \n\n- [Slack](https://collabnix.slack.com) is the best place to keep up to date with the project and to get help contributing. Here we exchange ideas, ask questions and chat about Dockerlabs.\n\n- Ping [Ajeet S Raina](https://github.com/ajeetraina) with your email address so that an invite can be sent out. Once invite is received via email, click on the link to get connected to contributors, enthusiast and active community members.\n\n- Introduce yourself to the Slack Group as soon as you join the Slack Channel.\n\n- Search for channels(like #docker-networking, #docker-volumes, #docker101 etc.) and join the channel.\n\n- Show your interest by choosing the topic of your interest and start contributing.\n\n## How can I contribute?\n\nContributing towards DockerLabs is simple and all you need is follow the below golden rules -\n\n* Say \"Hi\" to all Slack members with your short introduction\n* Search for your favourite Slack Channel and join accordingly.\n* Fork this Repository - https://github.com/collabnix/dockerlabs\n* Find your area of interest.\n\n* Submit your tutorial for DockerLabs(preferrably on Play with Docker Platform)\n  - [Example](https://github.com/collabnix/dockerlabs/blob/master/play-with-docker/wordpress/example1/README.md)\n*  Create Pull Request\n* Using Play with Docker Platform to build Docker Ready Solution\n* Fork the Repository and Create pull requests\n* Test and verify tutorials submitted by community users\n* Get involved in design reviews and technical proof-of-concepts (PoCs)\n* Manage, triage and research Issues and Pull Requests\n* Engage with the growing community by providing technical support on Slack/GitHub\n* Create docs, guides and write blogs to share\n* In case you find any technical issues or need help from fellow contributor, feel free to post your query under #issues channel under Slack.\n\n#### Wait..I have a question, a suggestion or need help\n\nIf you have a simple question you can [join the Slack community](https://collabnix.slack.com) and ask there. \n\n### I am new to GitHub. Is it possible for me to contribute?\n\nYes, you can still submit your tutorial to us. One of us will review and add it on behalf of you.\nBut it is highly recommended to learn [GitHub](https://guides.github.com/activities/hello-world/) so that it saves lot of time in uploading your tutorial.\n\n## License\n\nThis project is licensed under the [MIT](https://github.com/collabnix/dockerlabs/blob/master/LICENSE.md) License.\n\n"
        },
        {
          "name": "Creating 2 Node GKE Cluster",
          "type": "blob",
          "size": 2.240234375,
          "content": "Open https://console.cloud.google.com and login with your Admin account.\nActivate Google Cloud Shell from the top right corner of your screen. [To know more about Google Cloud Shell visit:- https://cloud.google.com/shell/]\n\nRun the following command to create a Gcloud Project:-\ndivyajeet@cloudshell:~$ gcloud projects create --name=My-GKE-Project\nPress Y to accept the randomly generate project id from GCP and let the Gcloud do its magic.\n\nNext associate your project to a billing account and to do that run the following command:-\ngcloud beta billing projects link my-gke-project-XXXXXX --billing-account=0180C0-XXXXXX-XXXXXX [To know more about how to associate Project to billing account visit:- https://cloud.google.com/sdk/gcloud/reference/beta/billing/projects/link]\n\nNow you are ready to deploy 2 node GKE cluster on GCP.\nDisclaimer:- Following deployment  is not recommended to be used in the Production environment, if you want to use do it on your own risk.\n\nRun following command to create your 2 Node cluster [Note:- Change XXXXXX to the value visible in your GCP console]:-\ngcloud beta container --project \"main-project-XXXXXX\" clusters create \"my-gke-cluster\" --zone \"us-central1-a\" --no-enable-basic-auth --cluster-version \"1.13.10-gke.0\" --machine-type \"n1-standard-1\" --image-type \"COS\" --disk-type \"pd-standard\" --disk-size \"100\" --scopes \"https://www.googleapis.com/auth/devstorage.read_only\",\"https://www.googleapis.com/auth/logging.write\",\"https://www.googleapis.com/auth/monitoring\",\"https://www.googleapis.com/auth/servicecontrol\",\"https://www.googleapis.com/auth/service.management.readonly\",\"https://www.googleapis.com/auth/trace.append\" --num-nodes \"2\" --enable-cloud-logging --enable-cloud-monitoring --enable-ip-alias --network \"projects/main-project-XXXXXX/global/networks/default\" --subnetwork \"projects/main-project-XXXXXX/regions/us-central1/subnetworks/default\" --default-max-pods-per-node \"20\" --addons HorizontalPodAutoscaling,HttpLoadBalancing --enable-autoupgrade --enable-autorepair --no-shielded-integrity-monitoring\n\nNext you should connect your to GKE cluster to cloud shell by using following command:-\ngcloud container clusters get-credentials my-gke-cluster --zone us-central1-a\n\nNow you are ready to deploy your workload to newly created cluster.\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.2138671875,
          "content": "source 'https://rubygems.org'\n\n# Specify your gem's dependencies in jekyll-admin.gemspec\ngemspec\n\n# Site dependencies\ngem 'jekyll-seo-tag'\ngem 'jekyll-theme-cayman'\ngem 'jekyll-sitemap'\ngem 'webrick'\ngem 'github-pages'\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 8.8876953125,
          "content": "PATH\n  remote: .\n  specs:\n    jekyll-theme-hacker (0.1.1)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n\nGEM\n  remote: https://rubygems.org/\n  specs:\n    activesupport (6.0.6.1)\n      concurrent-ruby (~> 1.0, >= 1.0.2)\n      i18n (>= 0.7, < 2)\n      minitest (~> 5.1)\n      tzinfo (~> 1.1)\n      zeitwerk (~> 2.2, >= 2.2.2)\n    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    coffee-script (2.4.1)\n      coffee-script-source\n      execjs\n    coffee-script-source (1.11.1)\n    colorator (1.1.0)\n    commonmarker (0.23.7)\n    concurrent-ruby (1.1.10)\n    dnsruby (1.61.9)\n      simpleidn (~> 0.1)\n    em-websocket (0.5.3)\n      eventmachine (>= 0.12.9)\n      http_parser.rb (~> 0)\n    ethon (0.15.0)\n      ffi (>= 1.15.0)\n    eventmachine (1.2.7)\n    execjs (2.8.1)\n    faraday (1.10.0)\n      faraday-em_http (~> 1.0)\n      faraday-em_synchrony (~> 1.0)\n      faraday-excon (~> 1.1)\n      faraday-httpclient (~> 1.0)\n      faraday-multipart (~> 1.0)\n      faraday-net_http (~> 1.0)\n      faraday-net_http_persistent (~> 1.0)\n      faraday-patron (~> 1.0)\n      faraday-rack (~> 1.0)\n      faraday-retry (~> 1.0)\n      ruby2_keywords (>= 0.0.4)\n    faraday-em_http (1.0.0)\n    faraday-em_synchrony (1.0.0)\n    faraday-excon (1.1.0)\n    faraday-httpclient (1.0.1)\n    faraday-multipart (1.0.3)\n      multipart-post (>= 1.2, < 3)\n    faraday-net_http (1.0.1)\n    faraday-net_http_persistent (1.2.0)\n    faraday-patron (1.0.0)\n    faraday-rack (1.0.0)\n    faraday-retry (1.0.3)\n    ffi (1.15.5)\n    forwardable-extended (2.6.0)\n    gemoji (3.0.1)\n    github-pages (226)\n      github-pages-health-check (= 1.17.9)\n      jekyll (= 3.9.2)\n      jekyll-avatar (= 0.7.0)\n      jekyll-coffeescript (= 1.1.1)\n      jekyll-commonmark-ghpages (= 0.2.0)\n      jekyll-default-layout (= 0.1.4)\n      jekyll-feed (= 0.15.1)\n      jekyll-gist (= 1.5.0)\n      jekyll-github-metadata (= 2.13.0)\n      jekyll-include-cache (= 0.2.1)\n      jekyll-mentions (= 1.6.0)\n      jekyll-optional-front-matter (= 0.3.2)\n      jekyll-paginate (= 1.1.0)\n      jekyll-readme-index (= 0.3.0)\n      jekyll-redirect-from (= 0.16.0)\n      jekyll-relative-links (= 0.6.1)\n      jekyll-remote-theme (= 0.4.3)\n      jekyll-sass-converter (= 1.5.2)\n      jekyll-seo-tag (= 2.8.0)\n      jekyll-sitemap (= 1.4.0)\n      jekyll-swiss (= 1.0.0)\n      jekyll-theme-architect (= 0.2.0)\n      jekyll-theme-cayman (= 0.2.0)\n      jekyll-theme-dinky (= 0.2.0)\n      jekyll-theme-hacker (= 0.2.0)\n      jekyll-theme-leap-day (= 0.2.0)\n      jekyll-theme-merlot (= 0.2.0)\n      jekyll-theme-midnight (= 0.2.0)\n      jekyll-theme-minimal (= 0.2.0)\n      jekyll-theme-modernist (= 0.2.0)\n      jekyll-theme-primer (= 0.6.0)\n      jekyll-theme-slate (= 0.2.0)\n      jekyll-theme-tactile (= 0.2.0)\n      jekyll-theme-time-machine (= 0.2.0)\n      jekyll-titles-from-headings (= 0.5.3)\n      jemoji (= 0.12.0)\n      kramdown (= 2.3.2)\n      kramdown-parser-gfm (= 1.1.0)\n      liquid (= 4.0.3)\n      mercenary (~> 0.3)\n      minima (= 2.5.1)\n      nokogiri (>= 1.13.4, < 2.0)\n      rouge (= 3.26.0)\n      terminal-table (~> 1.4)\n    github-pages-health-check (1.17.9)\n      addressable (~> 2.3)\n      dnsruby (~> 1.60)\n      octokit (~> 4.0)\n      public_suffix (>= 3.0, < 5.0)\n      typhoeus (~> 1.3)\n    html-pipeline (2.14.1)\n      activesupport (>= 2)\n      nokogiri (>= 1.4)\n    html-proofer (3.19.4)\n      addressable (~> 2.3)\n      mercenary (~> 0.3)\n      nokogiri (~> 1.13)\n      parallel (~> 1.10)\n      rainbow (~> 3.0)\n      typhoeus (~> 1.3)\n      yell (~> 2.0)\n    http_parser.rb (0.8.0)\n    i18n (0.9.5)\n      concurrent-ruby (~> 1.0)\n    jekyll (3.9.2)\n      addressable (~> 2.4)\n      colorator (~> 1.0)\n      em-websocket (~> 0.5)\n      i18n (~> 0.7)\n      jekyll-sass-converter (~> 1.0)\n      jekyll-watch (~> 2.0)\n      kramdown (>= 1.17, < 3)\n      liquid (~> 4.0)\n      mercenary (~> 0.3.3)\n      pathutil (~> 0.9)\n      rouge (>= 1.7, < 4)\n      safe_yaml (~> 1.0)\n    jekyll-avatar (0.7.0)\n      jekyll (>= 3.0, < 5.0)\n    jekyll-coffeescript (1.1.1)\n      coffee-script (~> 2.2)\n      coffee-script-source (~> 1.11.1)\n    jekyll-commonmark (1.4.0)\n      commonmarker (~> 0.22)\n    jekyll-commonmark-ghpages (0.2.0)\n      commonmarker (~> 0.23.4)\n      jekyll (~> 3.9.0)\n      jekyll-commonmark (~> 1.4.0)\n      rouge (>= 2.0, < 4.0)\n    jekyll-default-layout (0.1.4)\n      jekyll (~> 3.0)\n    jekyll-feed (0.15.1)\n      jekyll (>= 3.7, < 5.0)\n    jekyll-gist (1.5.0)\n      octokit (~> 4.2)\n    jekyll-github-metadata (2.13.0)\n      jekyll (>= 3.4, < 5.0)\n      octokit (~> 4.0, != 4.4.0)\n    jekyll-include-cache (0.2.1)\n      jekyll (>= 3.7, < 5.0)\n    jekyll-mentions (1.6.0)\n      html-pipeline (~> 2.3)\n      jekyll (>= 3.7, < 5.0)\n    jekyll-optional-front-matter (0.3.2)\n      jekyll (>= 3.0, < 5.0)\n    jekyll-paginate (1.1.0)\n    jekyll-readme-index (0.3.0)\n      jekyll (>= 3.0, < 5.0)\n    jekyll-redirect-from (0.16.0)\n      jekyll (>= 3.3, < 5.0)\n    jekyll-relative-links (0.6.1)\n      jekyll (>= 3.3, < 5.0)\n    jekyll-remote-theme (0.4.3)\n      addressable (~> 2.0)\n      jekyll (>= 3.5, < 5.0)\n      jekyll-sass-converter (>= 1.0, <= 3.0.0, != 2.0.0)\n      rubyzip (>= 1.3.0, < 3.0)\n    jekyll-sass-converter (1.5.2)\n      sass (~> 3.4)\n    jekyll-seo-tag (2.8.0)\n      jekyll (>= 3.8, < 5.0)\n    jekyll-sitemap (1.4.0)\n      jekyll (>= 3.7, < 5.0)\n    jekyll-swiss (1.0.0)\n    jekyll-theme-architect (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-cayman (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-dinky (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-leap-day (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-merlot (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-midnight (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-minimal (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-modernist (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-primer (0.6.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-github-metadata (~> 2.9)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-slate (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-tactile (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-theme-time-machine (0.2.0)\n      jekyll (> 3.5, < 5.0)\n      jekyll-seo-tag (~> 2.0)\n    jekyll-titles-from-headings (0.5.3)\n      jekyll (>= 3.3, < 5.0)\n    jekyll-watch (2.2.1)\n      listen (~> 3.0)\n    jemoji (0.12.0)\n      gemoji (~> 3.0)\n      html-pipeline (~> 2.2)\n      jekyll (>= 3.0, < 5.0)\n    json (2.6.2)\n    kramdown (2.3.2)\n      rexml\n    kramdown-parser-gfm (1.1.0)\n      kramdown (~> 2.0)\n    liquid (4.0.3)\n    listen (3.7.1)\n      rb-fsevent (~> 0.10, >= 0.10.3)\n      rb-inotify (~> 0.9, >= 0.9.10)\n    mercenary (0.3.6)\n    minima (2.5.1)\n      jekyll (>= 3.5, < 5.0)\n      jekyll-feed (~> 0.9)\n      jekyll-seo-tag (~> 2.1)\n    minitest (5.17.0)\n    multipart-post (2.1.1)\n    nokogiri (1.15.4-arm64-darwin)\n      racc (~> 1.4)\n    nokogiri (1.15.4-x86_64-darwin)\n      racc (~> 1.4)\n    nokogiri (1.15.4-x86_64-linux)\n      racc (~> 1.4)\n    nokogiri (1.13.6-x86_64-linux)\n      racc (~> 1.4)\n    octokit (4.22.0)\n      faraday (>= 0.9)\n      sawyer (~> 0.8.0, >= 0.5.3)\n    parallel (1.22.1)\n    parser (3.1.2.0)\n      ast (~> 2.4.1)\n    pathutil (0.16.2)\n      forwardable-extended (~> 2.6)\n    public_suffix (4.0.7)\n    racc (1.7.1)\n    rainbow (3.1.1)\n    rb-fsevent (0.11.1)\n    rb-inotify (0.10.1)\n      ffi (~> 1.0)\n    regexp_parser (2.4.0)\n    rexml (3.2.5)\n    rouge (3.26.0)\n    rubocop (0.93.1)\n      parallel (~> 1.10)\n      parser (>= 2.7.1.5)\n      rainbow (>= 2.2.2, < 4.0)\n      regexp_parser (>= 1.8)\n      rexml\n      rubocop-ast (>= 0.6.0)\n      ruby-progressbar (~> 1.7)\n      unicode-display_width (>= 1.4.0, < 2.0)\n    rubocop-ast (1.18.0)\n      parser (>= 3.1.1.0)\n    ruby-progressbar (1.11.0)\n    ruby2_keywords (0.0.5)\n    rubyzip (2.3.2)\n    safe_yaml (1.0.5)\n    sass (3.7.4)\n      sass-listen (~> 4.0.0)\n    sass-listen (4.0.0)\n      rb-fsevent (~> 0.9, >= 0.9.4)\n      rb-inotify (~> 0.9, >= 0.9.7)\n    sawyer (0.8.2)\n      addressable (>= 2.3.5)\n      faraday (> 0.8, < 2.0)\n    simpleidn (0.2.1)\n      unf (~> 0.1.4)\n    terminal-table (1.8.0)\n      unicode-display_width (~> 1.1, >= 1.1.1)\n    thread_safe (0.3.6)\n    typhoeus (1.4.0)\n      ethon (>= 0.9.0)\n    tzinfo (1.2.11)\n      thread_safe (~> 0.1)\n    unf (0.1.4)\n      unf_ext\n    unf_ext (0.0.8.1)\n    unicode-display_width (1.8.0)\n    w3c_validators (1.3.7)\n      json (>= 1.8)\n      nokogiri (~> 1.6)\n      rexml (~> 3.2)\n    webrick (1.7.0)\n    yell (2.2.2)\n    zeitwerk (2.6.6)\n\nPLATFORMS\n  universal-darwin-21\n  x86_64-linux\n\nDEPENDENCIES\n  github-pages\n  html-proofer (~> 3.0)\n  jekyll-seo-tag\n  jekyll-sitemap\n  jekyll-theme-cayman\n  jekyll-theme-hacker!\n  rubocop (~> 0.50)\n  w3c_validators (~> 1.3)\n  webrick\n\nBUNDLED WITH\n   2.3.7\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0771484375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2018] [collabnix]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 34.3857421875,
          "content": "# 🏗️ Getting Started with Docker \n\n![stars](https://img.shields.io/github/stars/collabnix/dockerlabs)\n![Discord](https://img.shields.io/discord/1020180904129335379)\n![GitHub contributors](https://img.shields.io/github/contributors/collabnix/dockerlabs)\n![Twitter](https://img.shields.io/twitter/follow/collabnix?style=social)\n\n\n![My image](https://raw.githubusercontent.com/collabnix/dockerlabs/master/images/dockerlabs.jpeg)\n\n- A $0 Learning Platform for All Levels - from the ground Up\n- Over 500+ Highly Interactive Docker Tutorials and Guides\n- Well tested on Docker Desktop  and can be run on Browser (no Infrastructure required)\n\n# 📝 Join our Community\n\n- Join 9000+ DevOps Engineers today via [Community Slack](https://launchpass.com/collabnix)\n- Join 2300+ [Discord members](https://discord.gg/QEkCXAXYSe)\n- Fork, Contribute & Share via [DockerLabs GITHUB Repository](https://github.com/collabnix/dockerlabs)\n-  Click and Follow us over Twitter [![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/fold_left.svg?style=social&label=Follow%20%40collabnix)](https://twitter.com/collabnix)\n\n# Featured Blog Posts and Articles\n\n- [Docker GenAI Stack on Windows using Docker Desktop](https://collabnix.com/docker-genai-stack-on-windows-using-docker-desktop/)\n- [A First Look at Docker Scout – A Software Supply Chain Security for Developers](https://collabnix.com/a-first-look-at-docker-scout-a-software-supply-chain-security-for-developers/)\n- [Getting Started with GenAI Stack powered with Docker, LangChain, Neo4j and Ollama](https://collabnix.com/getting-started-with-genai-stack-powered-with-docker-langchain-neo4j-and-ollama/)\n- [Docker Init for Go Developers](https://collabnix.com/docker-init-for-go-developers/)\n- [What is Docker Compose Include and What problem does it solve?](https://collabnix.com/what-is-docker-compose-include-and-what-problem-does-it-solve/)\n- [Leveraging Compose Profiles for Dev, Prod, Test, and Staging Environments](https://collabnix.com/leveraging-compose-profiles-for-dev-prod-test-and-staging-environments/)\n- [What is Docker Compose Watch and what problem does it solve?](https://collabnix.com/what-is-docker-compose-watch-and-what-problem-does-it-solve/)\n- [What is Resource Saver Mode in Docker Desktop and what problem does it solve?](https://collabnix.com/what-is-resource-saver-mode-in-docker-desktop-and-what-problem-does-it-solve/)\n- [🐳 Boost Your Docker Workflow: Introducing Docker Init for Python Developers 🚀](https://collabnix.com/%f0%9f%90%b3-boost-your-docker-workflow-introducing-docker-init-for-python-developers-%f0%9f%9a%80/)\n- [How to Integrate Docker Scout with GitHub Actions](https://collabnix.com/how-to-integrate-docker-scout-with-github-actions/)\n\n\n# 📌 Workshop/Labs (Hands-On Practical Labs)\n\n\n| Title       | Topics Covered         | Labs |\n|:-------------|:------------------|:------|\n| [Getting Started](http://dockerlabs.collabnix.com/docker/Docker_VIT_Intro/Docker_VIT_Intro.html) | Why, What & How about Docker?(slides) | - |\n| [Docker Core Concepts](https://github.com/collabnix/dockerlabs/tree/master/beginners/README.md) | Concepts of Docker Image, Containers, Multi-container apps | - | \n| [Docker for Beginner](./workshop/docker/README.md)  | Docker Image, Container, Dockerfile, Volumes, Networking | 40  |\n| [Docker for Intermediate](./intermediate/workshop/README.md) | Docker Compose, Swarm, Advanced Networking | 50 |\n| [Docker for Advanced](./advanced/workshop/README.md) | Docker Security, Content Trust, Image Scanning, Swarm Mode Security | 31 |\n| [Docker Desktop](./workshop/dockerdesktop/README.md) | Docker Dashboard, Dev Environments, Extensions | 5 |\n\n\n\n# Latest Docker Desktop Features and Demos\n\n| Title       | Topics Covered         | Category | Labs |\n|:-------------|:------------------|:------|:------|\n| [Docker Scout](https://github.com/collabnix/docker-scout-community) | Scout CLI, Scout Sample Demo| Security | 2 |\n| [Docker Extensions](https://github.com/collabnix/docker-community-extensions) | Docker Extensions | Development Tools | 1 |\n| [Docker init](https://github.com/dockersamples/docker-init-demos) | Dockerfile, Compose, Python, Go, Rust, Node | Developer Tools | 5|\n| [Docker init for Python](https://github.com/dockersamples/docker-init-demos/tree/main/python) | Dockerfile, Compose, Python | Developer Tools| 1|\n| [Docker init for Go](https://github.com/dockersamples/docker-init-demos/tree/main/go) |Dockerfile, Compose, Go | Developer Tools | 1|\n| [Docker init for Rust](https://github.com/dockersamples/docker-init-demos/tree/main/rust) |Dockerfile, Compose, Rust | Developer Tools | 1|\n| [Docker init for ASP.NET](https://github.com/dockersamples/docker-init-demos/tree/main/dotnet) | Dockerfile, Compose, .NET | Developer Tools | 1|\n| [Docker init for PHP](https://github.com/dockersamples/docker-init-demos/tree/main/php/app) | Dockerfile, Compose, PHP | Developer Tools | 1|\n| [Compose Watch](https://github.com/dockersamples/docker-init-demos/tree/main/python/compose-watch)| Compose, Sync, Rebuild| Developer Tools | 1 |\n| [Compose Include](https://github.com/ajeetraina/compose-include) | Compose, Include | Developer Tools | 1 |\n| [Compose Profile](https://github.com/ajeetraina/compose-demos/blob/main/wordpress/profile/README.md) | Compose, Profile, Staging, Prod | Developer Tools | 1 |\n\n\n## Industry Use cases\n\n| Title       | Topics Covered         | Labs |\n|:-------------|:------------------|:------|\n| [Docker for AI](https://www.docker.com/products/ai-ml-development/) | [Docker for Data Scientist](https://docker.devpost.com/project-gallery) | 1 |\n| [Docker for Leading IDEs](https://www.docker.com/products/ide/) | Developer IDEs | Not Started|\n| [Docker for Financial Service](https://collabnix.com/5-benefits-of-docker-for-the-finance-and-operations/) | - | Not Started|\n| [Docker for Healthcare](https://collabnix.com/5-benefits-of-docker-for-the-healthcare-industry/) | - | Not Started|\n\n## Containerd Blogs & Resources\n\n\n| Title       | Topics Covered         | Labs |\n|:-------------|:------------------|:------|\n| [What is Containerd and what problems does it solve](https://collabnix.com/what-is-containerd-and-what-does-it-solve/)| - | Not Started|\n| [Containerd and Kubernetes](https://collabnix.com/containerd-and-kubernetes-how-are-they-related/) | - | Not Started|\n| [How To Run Containerd On Docker Desktop](https://collabnix.com/how-to-run-containerd-in-docker-desktop/) | - | Not Started|\n| [Getting Started With Containerd 2.0](https://collabnix.com/getting-started-with-containerd-2-0/) | - | Not Started|\n| [Containerd Vs Docker: What’s the difference?](https://collabnix.com/containerd-vs-docker-whats-the-difference/) | - | Not Started|\n\n\n\n## Docker WorkShop for Beginners \n\n\n\n### Pre-requisite:\n\n- [Creating Your DockerHub Account](https://dockerlabs.collabnix.com/workshop/docker/dockerhub)\n\n### Getting Started with Docker Image\n\n\n- [Running Hello World Example](https://collabnix.github.io/dockerlabs/beginners/helloworld/) \n- [Working with Docker Image](https://collabnix.github.io/dockerlabs/beginners/workingwithdockerimage.html)\n- [Saving Images and Containers as Tar Files for Sharing](http://dockerlabs.collabnix.com/beginners/saving-images-as-tar/)\n- [Building Your First Alpine Docker Image and Push it to DockerHub](https://collabnix.github.io/dockerlabs/beginners/building-your-first-alpine-container.html)\n\n\n## Accessing & Managing Docker Container\n\n- [Accessing the Container Shell](http://dockerlabs.collabnix.com/beginners/accessing-the-container.html)<br>\n- [Running a Command inside running Container](http://dockerlabs.collabnix.com/beginners/running-command-inside-running-container.html)<br>\n- [Managing Docker Containers](http://dockerlabs.collabnix.com/beginners/managing-containers.html)<br>\n\n## Getting Started with Dockerfile\n\n- [What is Dockerfile](https://dockerlabs.collabnix.com/beginners/dockerfile/Writing-dockerfile.html#what-is-a-dockerfile)<br>\n- [Understanding Layering Concept with Dockerfile](https://dockerlabs.collabnix.com/beginners/dockerfile/Layering-Dockerfile.html)\n- Creating Docker Image with\n   - [Lab #1: Installing GIT](https://dockerlabs.collabnix.com/beginners/dockerfile/lab1_dockerfile_git.html)<br>\n   - [Lab #2: ADD instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab-2-Create-an-image-with-ADD-instruction.html)<br>\n   - [Lab #3: COPY instruction](https://dockerlabs.collabnix.com//beginners/dockerfile/lab4_dockerfile_copy.html)<br>\n   - [Lab #4: CMD instruction](https://dockerlabs.collabnix.com//beginners/dockerfile/lab4_cmd.html)<br>\n   - [Lab #5: ENTRYPOINT instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Dockerfile-ENTRYPOINT.html)<br>\n   - [Lab #6: WORKDIR instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/WORKDIR_instruction.html)<br>\n   - [Lab #7: RUN instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab%237_RUN_instruction.html)<br>\n   - [Lab #8: ARG instruction](https://dockerlabs.collabnix.com//beginners/dockerfile/arg.html)<br>\n   - [Lab #9: ENV instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab_%239_ENV_instruction.html)<br>\n   - [Lab #10: VOLUME instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab%2310_VOLUME_instruction.html)<br>\n   - [Lab #11: EXPOSE instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab%2311_EXPOSE_instruction.html)<br>\n   - [Lab #12: LABEL instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Label_instruction.html)<br>\n   - [Lab #13: ONBUILD instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/onbuild.html)<br>\n   - [Lab #14: HEALTHCHECK instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/healthcheck.html)<br>\n   - [Lab #15: SHELL instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/Lab-14-Create-an-image-with-SHELL-instruction.html)<br>\n   - [Lab #16: Entrypoint Vs RUN](https://dockerlabs.collabnix.com/beginners/dockerfile/entrypoint-vs-run.html)<br>\n   - [Lab #17: USER instruction](https://dockerlabs.collabnix.com/beginners/dockerfile/user.html)\n- [Writing Dockerfile with Hello Python Script Added](https://dockerlabs.collabnix.com/beginners/dockerfile/lab_dockerfile_python.html)<br>\n\n\n## Creating Private Docker Registry\n\n- [Building a Private Docker Registry](https://dockerlabs.collabnix.com/beginners/build-private-docker-registry.html)\n- [Building a Private Docker Registry with UI](https://dockerlabs.collabnix.com/beginners/portus/)\n\n\n### Docker Volumes\n\n- [Managing volumes through Docker CLI](https://collabnix.github.io/dockerlabs/beginners/volume/managing-volumes-via-docker-cli.html)<br>\n- [Creating Volume Mount from **docker run** command & sharing same Volume Mounts among multiple containers](https://collabnix.github.io/dockerlabs/beginners/volume/creating-volume-mount-from-dockercli.html)<br>\n\n## Docker Networking\n\n - [The docker network Command](http://dockerlabs.collabnix.com/beginners/using-docker-network.html)<br>\n - [Lab #1: Listing the Networks](http://dockerlabs.collabnix.com/networking/A1-network-basics.html#step-2-list-networks)\n - [Lab #2: Inspecting a Network](http://dockerlabs.collabnix.com/networking/A1-network-basics.html#step-3-inspect-a-network)\n - [Lab #3: List network driver plugins](http://dockerlabs.collabnix.com/networking/A1-network-basics.html#step-4-list-network-driver-plugins)\n - [Lab #4: Docker Bridge Networking](http://dockerlabs.collabnix.com/networking/A2-bridge-networking.html)\n   - [Lab #5: Basics of Docker Bridge Networking](http://dockerlabs.collabnix.com/networking/A2-bridge-networking.html#step-1-the-default-bridge-network)\n   - [Lab #6: Connect a Docker container to bridge network](http://dockerlabs.collabnix.com/networking/A2-bridge-networking.html#step-2-connect-a-container)\n   - [Lab #7: Test Network Connectivity](http://dockerlabs.collabnix.com/networking/A2-bridge-networking.html#step-3-test-network-connectivity)\n   - [Lab #8: Configure NAT for external connectivity](http://dockerlabs.collabnix.com/networking/A2-bridge-networking.html#step-4-configure-nat-for-external-connectivity)\n \n\n## Docker Workshop for Intermediate Users\n\n\n### Docker Compose\n\n- [Compose101 Slides](https://www.slideshare.net/ajeetraina/introduction-to-docker-compose-docker-intermediate-workshop)\n- [Introduction to Docker Compose](http://dockerlabs.collabnix.com/intermediate/docker-compose/)\n- [Dockerfile Vs Docker compose ](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Difference_between_dockerfile_and_docker_compose.html)\n- [How to Install Docker Compose? ](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/How_to_Install_Docker_Compose.html)\n\n     - [Lab #1: `version` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/version_Command.html)<br>\n     - [Lab #2: `help` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/help_command.html)<br>\n     - [Lab #3: `Config` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/config_command.html)<br>\n     - [Lab #4: `Build` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Lab_%231_Build_Command.html)<br>\n     - [Lab #5: `Pull` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/pull_command.html)<br>\n     - [Lab #6: `Push` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/push_command.html)<br>\n     - [Lab #7: `up` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/up_command.html)<br>\n     - [Lab #8: `Images` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/images_command.html)<br>\n     - [Lab #9: `ps` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/ps_command.html)<br>\n     - [Lab #10: `Stop` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/stop_command.html)<br>\n     - [Lab #11: `Start` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/start_command.html)<br>\n     - [Lab #12: `Restart` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/restart_command.html)<br>\n     - [Lab #13: `pause` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/pause_command.html)<br>\n     - [Lab #14: `Unpause` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/unpause_command.html)<br>\n     - [Lab #15: `Logs` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/logs_command.html)<br>\n     - [Lab #16: `Port` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/port_command.html)<br>\n     - [Lab #17: `Run` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/run_command.html)<br>\n     - [Lab #18: `Scale` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/scale_command.html)<br>\n     - [Lab #19: `Exec` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Lab_%234_Exec_Command.html)<br>\n     - [Lab #20: `Kill` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Lab_%237_Kill_Command.html)<br>\n     - [Lab #21: `Rm` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/rm_command.html)<br>\n     - [Lab #22: `Down` Command](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/down_command.html)<br>\n- [Create first docker compose file with ngnix and mysql](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Create_first_docker-compose_file_with_ngnix_and_mysql.html)<br>\n- [Use JSON instead of YAML compose file in Docker?](http://dockerlabs.collabnix.com/intermediate/workshop/DockerCompose/Lab_%2324_Use_JSON_instead_of_YAML_compose_file_in_Docker.html)<br>\n- [A Simple Wordpress Application running on Single Node using Docker Compose](https://github.com/collabnix/dockerlabs/blob/master/intermediate/workshop/DockerCompose/single-node-wordpress.md)\n\n\n# Docker Swarm\n\n### Introduction to Docker Swarm\n\n- [What is Docker Swarm](http://dockerlabs.collabnix.com/intermediate/workshop/what-is-docker-swarm.html)<br>\n- [Docker Swarm : Terminology](http://dockerlabs.collabnix.com/intermediate/workshop/Docker-Swarm-Terminology.html)\n\n### Docker Services | Scaling | Draining Node | Rescheduling Containers\n\n- [Creating 5-Node Docker Swarm Cluster](http://dockerlabs.collabnix.com/intermediate/workshop/getting-started-with-swarm.html)<br>\n- [Lab #1: Creating Overlay Network](http://dockerlabs.collabnix.com/intermediate/workshop/lab1-docker-network-overlay.html)<br>\n- [Lab #2: Deploy Services ](http://dockerlabs.collabnix.com/intermediate/workshop/lab2-deploy-services.html)<br>\n- [Lab #3: Inspecting Docker Swarm Service States](http://dockerlabs.collabnix.com/intermediate/workshop/lab3-inspect-services.html)<br>\n- [Lab #4: Scaling Docker Swarm Services](http://dockerlabs.collabnix.com/intermediate/workshop/lab4-scaling-services.html)<br>\n- [Lab #5: Deploy the application components as Docker services ](http://dockerlabs.collabnix.com/intermediate/workshop/lab5-deploy-app-component-as-docker-services.html)<br>\n- [Lab #6: Drain a node and reschedule the containers](http://dockerlabs.collabnix.com/intermediate/workshop/lab6-drain-a-node-reschedule.html)<br>\n- [Lab #7: Cleaning Up ](http://dockerlabs.collabnix.com/intermediate/workshop/lab7-cleaning-up.html)<br>\n\n# Docker Networking - II\n\n### Overlay Networking\n\n   - [Lab #1: Docker Overlay Networking](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab%231:Docker_Overlay_Networking.html)<br>\n   - [Lab #2: Create an overlay network](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab_%232_Create_an_overlay_network.html)<br>\n   - [Lab #3: Create a service](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab_%233_Create_a_service.html)<br>\n   - [Lab #4: Test Service Discovery](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab%20%235_Test_Service_Discovery.html)\n   - [Lab #5: Test Routing Mesh](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab%236:Test_Routing_Mesh.html)<br>\n   - [Lab #6: Test standalone containersinOverlayNetwork](http://dockerlabs.collabnix.com/intermediate/workshop/networking/Lab%20%238_%20Test_standalone_containers_in_OverlayNetwork.html)\n\n### Implementing MacVLAN\n\n- [Lab #7: Getting Started with MacVLAN](http://dockerlabs.collabnix.com/intermediate/workshop/networking/lab7-macvlan.html)<br>\n\n\n# Docker Workshop for Advance Users\n\n# Docker Security101\n\n## Docker Content Trust\n\n- [Lab01 - Pulling images by tag](http://dockerlabs.collabnix.com/advanced/security/trust/README.html#tag)\n- [Lab02 - Pulling images by digest](http://dockerlabs.collabnix.com/advanced/security/trust/README.html#digest)\n- [Lab03 - Docker Content Trust](http://dockerlabs.collabnix.com/advanced/security/trust/README.html#trust)\n- [Lab04 - Official Images](http://dockerlabs.collabnix.com/advanced/security/trust/README.html#official)\n- [Lab05 - Extra for experts](http://dockerlabs.collabnix.com/advanced/security/trust/README.html#extra)\n- [Lab06 - Enable Docker Content Trust](http://dockerlabs.collabnix.com/advanced/security/trust-basics/#enable_dct)\n- [Lab07 - Push & Sign an Image](http://dockerlabs.collabnix.com/advanced/security/trust-basics/#push)\n- [Lab08 - Cleaning Up](http://dockerlabs.collabnix.com/advanced/security/trust-basics/#clean)\n\n\n## Docker Secrets Management\n\n- [Lab01- Create a Secret](http://dockerlabs.collabnix.com/advanced/security/secrets/#create)\n- [Lab02 - Manage Secrets](http://dockerlabs.collabnix.com/advanced/security/secrets/#manage)\n- [Lab03 - Access the secret within an app](http://dockerlabs.collabnix.com/advanced/security/secrets/#use)\n- [Lab04 - Clean-up](http://dockerlabs.collabnix.com/advanced/security/secrets/#clean)\n\n\n\n## Docker Secret Management with UCP\n\n- [Lab01 - Create a Secret](http://dockerlabs.collabnix.com/advanced/security/secrets-ddc/#secret)\n- [Lab02 - Deploy an App](http://dockerlabs.collabnix.com/advanced/security/secrets-ddc/#deploy)\n- [Lab03 - Test the App](http://dockerlabs.collabnix.com/advanced/security/secrets-ddc/#test)\n- [Lab04 - View the Secret](http://dockerlabs.collabnix.com/advanced/security/secrets-ddc/#view)\n\n\n## Docker Network Security \n\n- [Lab01 - Create an encrypted overlay network](http://dockerlabs.collabnix.com/advanced/security/networking/#network_create)\n- [Lab02 - List networks](http://dockerlabs.collabnix.com/advanced/security/networking/#list_networks)\n- [Lab03 - Deploy a service](http://dockerlabs.collabnix.com/advanced/security/networking/#deploy_service)\n- [Lab04 - Clean-up](http://dockerlabs.collabnix.com/advanced/security/networking/#clean)\n\n\n## Security Scanning\n\n- [Lab01 - Create a private Hub repo](http://dockerlabs.collabnix.com/advanced/security/scanning/#repo)\n- [Lab02 - Pull an image](http://dockerlabs.collabnix.com/advanced/security/scanning/#pull)\n- [Lab03 - Tag and push an image](http://dockerlabs.collabnix.com/advanced/security/scanning/#tag_push)\n- [Lab04 - View scan results](http://dockerlabs.collabnix.com/advanced/security/scanning/#results)\n- [Lab05 - Clean-up](http://dockerlabs.collabnix.com/advanced/security/scanning/#clean)\n\n## Swarm Mode Security\n\n- [Lab01- Create a new Swarm](http://dockerlabs.collabnix.com/advanced/security/swarm/#swarm_init)\n- [Lab02 - Add a new Manager](http://dockerlabs.collabnix.com/advanced/security/swarm/#add_mgr)\n- [Lab03 - Add a new Worker](http://dockerlabs.collabnix.com/advanced/security/swarm/#add_wrkr)\n- [Lab04 - Rotate Join Keys](http://dockerlabs.collabnix.com/advanced/security/swarm/#rotate_join)\n- [Lab05 - View certificates](http://dockerlabs.collabnix.com/advanced/security/swarm/#certs)\n- [Lab06 - Rotate certificates](http://dockerlabs.collabnix.com/advanced/security/swarm/#rotate_certs)\n\n# 🔥 Concepts and Terminologies (Beginners to Advance)\n\n- [Docker for Beginners](./beginners/README.md)\n- [Docker for Intermediate](./intermediate/README.md)\n- [Docker for Advanced](./advanced/README.md)\n- [Docker Cheatsheet](./docker/cheatsheet/README.md)\n- [Docker Certificate Associate Exam Preparation](./docker/dca.md)\n- [Docker Interview Questions](./docker/docker-interview-questions.md)\n\n\n# 🗃️ Sample App\n\nWe recommend you to visit [Docker Awesome Compose Repository](https://github.com/docker/awesome-compose) in order to find the Compose files for running sample apps\n\n \n#  Web Framework\n\n\n| Python/Django  | \n|:-------------|\n| [Docker + Django + PostgreSQL](./solution/django-postgres/readme.md) | \n| [Python + Flask + Redis](https://github.com/docker/awesome-compose/tree/master/flask-redis) |\n\n<br>\n\n| Reactjs  | \n|:-------------|\n| [React + Spring + MySQL](https://github.com/docker/awesome-compose/tree/master/react-java-mysql) |\n| [React + Express + MySQL](https://github.com/docker/awesome-compose/tree/master/react-express-mysql) | \n| [React + Express + MongoDB](https://github.com/docker/awesome-compose/tree/master/react-express-mongodb) | \n| [React + Rust + PostgreSQL](https://github.com/docker/awesome-compose/tree/master/react-rust-postgres)  |\n| [React + Nginx](https://github.com/docker/awesome-compose/tree/master/react-nginx) |\n\n<br>\n\n| Golang     | \n|:-------------|\n| [Go + NGINX + MySQL](https://github.com/docker/awesome-compose/tree/master/nginx-golang-mysql)  | \n| [Go + NGINX + PostgreSQL](https://github.com/docker/awesome-compose/tree/master/nginx-golang-postgres)  |\n| [Docker + Gomodule](./beginners/httpserver_go_module_and_docker.md) |\n\n<br>\n\n\n| Java / Spring Boot   | \n|:-------------|\n| [Spring + PostgreSQL](https://github.com/docker/awesome-compose/tree/master/spring-postgres)  |\n| [Java Spark + MySQL](https://github.com/docker/awesome-compose/tree/master/sparkjava-mysql) | \n\n<br>\n\n\n# Database\n\n\n| PostgreSQL |\n|:-------------|\n| [Docker + Django + PostgreSQL](./solution/django-postgres/readme.md) |  \n\n<br>\n\n\n| MongoDB|\n|:-------------|\n| [NGINX + Flask + MongoDB](https://github.com/docker/awesome-compose/tree/master/nginx-flask-mongo) |  \n| [NodeJS + MongoDB](https://github.com/collabnix/dockerlabs/tree/master/solution/node-mongo-docker) |\n\n<br>\n\n| MySQL |\n|:-------------|\n| [NGINX + ASP.NET + MySQL`](https://github.com/docker/awesome-compose/tree/master/nginx-aspnet-mysql) | \n\n\n\n# Monitoring\n\n\n| Prometheus |\n|:-------------|\n| [Docker + Prometheus Stack + Docker Swarm](./play-with-docker/docker-prometheus-swarm/README.md) | \n\n# Logging\n\n| Elastic |\n|:-------------|\n| [Docker + Elasticsearch + Logstash + Kibana + Docker Swarm](./play-with-docker/ELK/README.md) |\n| [Elasticsearch + Logstash + Kibana](https://github.com/docker/awesome-compose/tree/master/elasticsearch-logstash-kibana) | \n\n# Testing Tools\n\n| Apache JMeter |\n|:-------------|\n| [Docker + Apache Jmeter + Docker Swarm Mode](./play-with-docker/jmeter-docker/README.md) | \n\n\n# Networking\n\n| MacVLAN |\n|:-------------|\n| [Docker + MacVLAN](./play-with-docker/macvlan/README.md) |\n| [Docker + Docker Compose & IPv6](./play-with-docker/ipv6/README.md) | \n\n\n# Security\n\n| Docker Security |\n|:-------------|\n| [Introduction to Docker Security](./advanced/workshop/README.md)|\n| [Running Containers as ROOT](./security/Running-Containers-as-ROOT.md) | \n\n## Docker Scout Resources and Links\n\nThis is a curated list of Docker Scout related resources. It is not an official list, but a community effort to help people find the best stuff for Docker Scout in 2023 and beyond. \n\n\n### [Download Docker Scout Cheatsheet Now!!](https://www.docker.com/resources/scout-cheat-sheet/) ![badge](https://img.shields.io/badge/-new-green) \n\n\n# Scout Blogs\n\n- [Skout - Docker Scout for Your Kubernetes](https://collabnix.com/docker-scout-for-your-kubernetes-cluster/)\n- [Enhancing Your GitHub Workflow with Docker Scout](https://www.felipecruz.es/enhancing-your-github-workflow-with-docker-scout/)  ![badge](https://img.shields.io/badge/-new-green) \n- [Achieve Security and Compliance Goals with Policy Guardrails in Docker Scout](https://www.docker.com/blog/achieve-security-and-compliance-goals-with-policy-guardrails-in-docker-scout/)  ![badge](https://img.shields.io/badge/-new-green) \n- [A First Look at Docker Scout – A Software Supply Chain Security for Developers](https://collabnix.com/a-first-look-at-docker-scout-a-software-supply-chain-security-for-developers/)\n- [Docker Scout vs Scan](https://itnext.io/docker-scout-vs-scan-90ce6d6fd04c)\n- [How to scan container images with Docker Scout](https://www.techrepublic.com/article/how-to-scan-container-images-docker-scout/)\n- [Mastering Docker Scout through Docker Desktop GUI and CLI](https://www.heyvaldemar.com/mastering-docker-scout-through-docker-desktop-gui-and-cli/)\n- [Vulnerability and Dependency Scanning with Docker Scout](https://www.c-sharpcorner.com/article/vulnerability-and-dependency-scanning-with-docker-scout/)\n- [Docker 4.18 Extends Scout, Adds Container File Explorer, Docker Init, and More](https://www.infoq.com/news/2023/04/docker-4-18-released/)\n- [Using Docker Scout to Scan Container Images](https://www.fosslife.org/using-docker-scout-scan-container-images)\n- [Understanding Docker: part 42 – Docker Scout](https://dev.to/aurelievache/understanding-docker-part-42-docker-scout-o2a)\n- [How to Integrate Docker Scout with GitHub Actions](https://collabnix.com/how-to-integrate-docker-scout-with-github-actions/)\n- [Scan Container Images for Vulnerabilities with Docker Scout](https://thenewstack.io/scan-container-images-for-vulnerabilities-with-docker-scout/)\n- [Docker Scout by Fsegredo](https://link.medium.com/U7exfMopKCb) ![badge](https://img.shields.io/badge/-new-green) \n- [How to Integrate Docker Scout with GitLab](https://collabnix.com/how-to-integrate-docker-scout-with-gitlab/) ![badge](https://img.shields.io/badge/-new-green) \n- [Docker Scout Unveils Advanced Features to Bolster Software Supply Chain Integrity](https://opensourcewatch.beehiiv.com/p/docker-scout-unveils-advanced-features-bolster-software-supply-chain-integrity) ![badge](https://img.shields.io/badge/-new-green)\n- [How to integrate Docker Scout with Azure Container Registry](https://hugs4bugs.me/how-to-integrate-docker-scout-with-azure-container-registry/) ![badge](https://img.shields.io/badge/-new-green)\n- [CI pipeline with Docker Scout and SAST scanning for an OWASP-based Python app](https://github.com/nadyinky/devsecops-docker-flow)\n\n\n\n# Scout Tutorials\n\n- [Docker Scout quickstart](https://docs.docker.com/scout/quickstart/)\n- [Docker Scout Advanced image analysis](https://docs.docker.com/scout/advanced-image-analysis/)\n- [Integrate Docker Scout with GitHub Actions](https://docs.docker.com/scout/integrations/ci/gha/)\n- [Integrate Docker Scout with GitLab CI](https://docs.docker.com/scout/integrations/ci/gitlab/)\n- [Integrate Docker Scout with Microsoft Azure DevOps Pipelines](https://docs.docker.com/scout/integrations/ci/azure/)\n- [Integrate Docker Scout with Circle CI](https://docs.docker.com/scout/integrations/ci/circle-ci/)\n- [Integrate Docker Scout with Jenkins](https://docs.docker.com/scout/integrations/ci/jenkins/) ![badge](https://img.shields.io/badge/-new-green) \n- [Advisory Database sources and matching service](https://docs.docker.com/scout/advisory-db-sources/) ![badge](https://img.shields.io/badge/-new-green)\n- [Docker Scout Integration with SonarQube](https://docs.docker.com/scout/integrations/code-quality/sonarqube/) ![badge](https://img.shields.io/badge/-new-green) \n\n\n## GitHub Sample projects for Scout\n\n- [Scout Action](https://github.com/docker/scout-action) ![badge](https://img.shields.io/badge/-new-green) \n- [Scout CLI](https://github.com/docker/scout-cli)\n\n\n## Scout Case Studies\n\n- [How JW Player Secured 300 Repos in an Hour with Docker Scout](https://www.docker.com/blog/how-jw-player-secured-300-repos-in-an-hour-with-docker-scout/) ![badge](https://img.shields.io/badge/-new-green)\n- [Sysdig and Docker Forge Alliance to Accelerate Cloud-Native Security](https://medium.com/@seifeddinerajhi/sysdig-and-docker-forge-alliance-to-accelerate-cloud-native-security-16f6fec74327)\n\n\n# Scout Featured Videos\n\n| Docker Scout: Securing The Complete Software Supply Chain (DockerCon 2023) | Cut Through Vulnerability Noise with Runtime Insights (DockerCon 2023)   |\n| ------------------------------------------------ | ---------------------------------------------------- |\n| [![Docker Scout](https://img.youtube.com/vi/4iJ7yw-Oe4I/sddefault.jpg)](https://www.youtube.com/watch?v=4iJ7yw-Oe4I) | [![Docker Scout](https://img.youtube.com/vi/y9XssbBRIi4/sddefault.jpg)](https://www.youtube.com/watch?v=pb7ydpJq-D8) |\n\n| Docker Scout: Live Demo, Insights, and Q&A       | Vulnerability Scanning and Reporting         |\n| ------------------------------------------------ | -------------------------------------------- |\n| [![Docker Scout](https://img.youtube.com/vi/Ibt6o8M2IHw/sddefault.jpg)](https://www.youtube.com/watch?v=Ibt6o8M2IHw) | [![Vulnerability Scanning and Reporting](https://img.youtube.com/vi/2sY7z2yv_5Y/sddefault.jpg)](https://www.youtube.com/watch?v=2sY7z2yv_5Y&t=39s) |\n\n| Find Vulnerabilities Fast! New Docker CLI Command| Adding the docker scout feature to the Docker CLI    |\n| ------------------------------------------------ | ---------------------------------------------------- |\n| [![Docker Scout](https://img.youtube.com/vi/0Wc4-_DownU/sddefault.jpg)](https://www.youtube.com/watch?v=0Wc4-_DownU) | [![Docker Scout](https://img.youtube.com/vi/pb7ydpJq-D8/sddefault.jpg)](https://www.youtube.com/watch?v=pb7ydpJq-D8) |\n\n\n| How to scan Container image using Docker Scout | Docker Scout Tutorial: Docker scanning               |\n| ---------------------------------------------- | -------------------------------------------------- |\n| [![Docker Scout](https://img.youtube.com/vi/SlUqxSUvv3o/sddefault.jpg)](https://www.youtube.com/watch?v=SlUqxSUvv3o&t=5s) | [![Docker Scout](https://img.youtube.com/vi/4oVg662aMbc/sddefault.jpg)](https://www.youtube.com/watch?v=pb7ydpJq-D8) |\n\n\n| TECHarlas #3 - Supply chain, Docker Scout y seguridad en contenedores con Felipe Cruz de @DockerIo |  \n| ---------------------------------------------- | \n| [![Docker Scout](https://img.youtube.com/vi/csNytM7XFz4/sddefault.jpg)](https://www.youtube.com/watch?v=csNytM7XFz4) | \n\n\n# 👥 Governance\n\nDockerlabs is an independent community project founded by [Ajeet Singh Raina](https://github.com/ajeetraina), a [Docker Captain from India](https://www.docker.com/captains/ajeet-singh-raina) & Docker Community Leader which is now being built & shaped by a growing community of contributors across the globe.\n\n# Core Contributors\n\n| [<img src=\"https://avatars1.githubusercontent.com/u/313480?s=400&v=4\" width=\"48px;\" alt=\"Ajeet Singh Raina\"/><br /><sub><b> Ajeet Singh Raina</b></sub>](https://github.com/ajeetraina)<br /> | [<img src=\"https://avatars1.githubusercontent.com/u/21982562?s=460&v=4\" width=\"48px;\" alt=\"Sangam Biradar\"/><br /><sub><b>Sangam Biradar</b></sub>](https://github.com/sangam14)<br /> | [<img src=\"https://avatars0.githubusercontent.com/u/7204666?s=400&v=4\" width=\"48px;\" alt=\"Savio Mathew\"/><br /><sub><b>Savio Mathew</b></sub>](https://github.com/saviovettoor)<br /> | [<img src=\"https://avatars1.githubusercontent.com/u/8190114?s=400&v=4\" width=\"48px;\" alt=\"Saiyam Pathak\"/><br /><sub><b>Saiyam Pathak</b></sub>](https://github.com/saiyam1814)<br /> | [<img src=\"https://avatars2.githubusercontent.com/u/38501348?s=400&v=4\" width=\"48px;\" alt=\"Apurva Bhandari\"/><br /><sub><b>Apurva Bhandari</b></sub>](https://github.com/apurvabhandari)<br /> | [<img src=\"https://avatars2.githubusercontent.com/u/25828217?s=400&v=4\" width=\"48px;\" alt=\"Sarkar Tathagata\"/><br /><sub><b>Sarkar Tathagata</b></sub>](https://github.com/amitatha82)<br /> | [<img src=\"https://avatars2.githubusercontent.com/u/33524591?s=400&v=4\" width=\"48px;\" alt=\"Prashansa K\"/><br /><sub><b>Prashansa K</b></sub>](https://github.com/Prashansa-K)<br /> |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| [<img src=\"https://avatars1.githubusercontent.com/u/34628205?s=400&v=4\" width=\"48px;\" alt=\"Wikitops\"/><br /><sub><b>Wikitops</b></sub>](https://github.com/wikitops)<br /> | [<img src=\"https://avatars0.githubusercontent.com/u/20920080?s=400&v=4\" width=\"48px;\" alt=\"Akshit Grover\"/><br /><sub><b>Akshit Grover</b></sub>](https://github.com/akshitgrover)<br /> | [<img src=\"https://avatars3.githubusercontent.com/u/18344557?s=400&v=4\" width=\"48px;\" alt=\"Ameya Agashe\"/><br /><sub><b>Ameya Agashe</b></sub>](https://github.com/ameyaagashe)<br /> | [<img src=\"https://avatars1.githubusercontent.com/u/39425180?s=400&v=4\" width=\"48px;\" alt=\"Bala\"/><br /><sub><b>Bala</b></sub>](https://github.com/balasu)<br /> | \n\n\n\n# 🚀 How to Contribute\n\nThank you so much for showing your interest in contributing to [Dockerlabs](https://github.com/collabnix/dockerlabs) tutorials.\n\n[Guide to submitting your own tutorial](./CONTRIBUTING.md)<br>\n[Template for writing Tutorial Page](./template/EXAMPLE.md)\n\n\n\n# License\n\n[Apache License 2.0](./LICENSE.md)\n\n[Proceed to Beginners Track >>](./beginners/README.md)\n"
        },
        {
          "name": "Tutorials",
          "type": "tree",
          "content": null
        },
        {
          "name": "Weave-UI.png",
          "type": "blob",
          "size": 652.6875,
          "content": null
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.064453125,
          "content": "show_downloads: true\ngoogle_analytics:\ntheme: jekyll-theme-cayman\n"
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "_site",
          "type": "tree",
          "content": null
        },
        {
          "name": "advanced",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "beginners",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 1.6591796875,
          "content": "#!/bin/bash\n\n## This is a master script for all Linux & Windows Operating System which will install Docker and Docker Compose on various distros like Ubuntu, Debian,\n## Scientific Linux, FreeBSD, Asianux, Alpine and many more\n\nprepare_ubuntu() {\n  sudo apt-get update\n  sudo apt-get dist-upgrade -y\n  sudo apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    curl \\\n    gnupg-curl \\\n    htop \\\n    lsof \\\n    tree \\\n    tzdata \\\n    lsb-release \\\n    bzip2 \\\n    unzip \\\n    xz-utils\n}\n\ninstall_docker() {\n  # Docker\n  export CHANNEL=stable\n  curl -fsSL https://get.docker.com/ | sh\n  ## Add Docker daemon configuration\n  cat <<EOF | sudo tee /etc/docker/daemon.json\n{\n  \"icc\": false,\n  \"disable-legacy-registry\": true,\n  \"userland-proxy\": false,\n  \"live-restore\": true\n}\nEOF\n  ## Start docker service\n  sudo systemctl enable docker\n  sudo systemctl start docker\n  ## Add current user to docker group\n  sudo usermod -aG docker $USER\n\n  ## show information\n  docker version\n  docker info\n  \n  }\n  \n  prepare_compose(){\n\n  # Docker Compose\n  sudo curl -L https://github.com/docker/compose/releases/download/1.21.0-rc1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n  sudo chmod +x /usr/local/bin/docker-compose\n  ## show docker-compose version\n  docker-compose version\n}\n\nprovision_docker() {\n  echo \"Provisioning ...\"\n  prepare_ubuntu\n  install_docker\n  # Downlaod the Dockerfile and docker-compose.yml\n\n}\n\nprovision_compose(){\n   echo \"Provisioning Docker Compose  ..\"\n   prepare_compose\n \n}\n\ncommand=$1\nshift\ncase \"$command\" in\n  provision_docker)      provision_docker $@ ;;\n   *)        echo \"Usage: <logs|provision_docker|provision_compose>\" ;;\nesac\n"
        },
        {
          "name": "cheatsheet",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "cookbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "desktop",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockerhub",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockerlabs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "eXoPlateform!.md",
          "type": "blob",
          "size": 5.5966796875,
          "content": "# eXo Platform in a Docker Container!\r\n\r\nIn this article, we will see just how easy it is to execute the eXo Platform in a Docker container, to make your data persist across container restarts and to plug your eXo Platform deployment into a MySQL database.\r\n\r\n\r\nTo be able to test the content of this article, you need to have the following:\r\n\r\n- Docker 1.11 and above (use Docker4Mac or Docker4Windows if you are on one of these two environments, which do not natively support Docker)\r\n- Docker Compose 1.7 and above\r\n- Internet access (for downloading Docker images)\r\n- Coffee (because downloading Docker images can take longer than actually doing a build with Maven 😉 )\r\n\r\n\r\nFirst of all, let’s make it simple and start the Community edition of the eXo Platform in a Docker container. For this, we will use the Docker image called exoplatform/exo-community with its default settings (the first run will of course take the longest because it involves downloading the container):\r\n\r\n\r\n```sh\r\n$ docker run -ti --rm --name exo \\\r\n$ -p 8080:8080 \\\r\n$ exoplatform/exo-community:4.3\r\n```\r\n\r\n\r\nAfter some time, you will see this message appear in the logs: Server startup in 58220 ms . This indicates that the eXo Platform is initialized and you can start testing your installation by pointing your browser to http://localhost:8080/.\r\n\r\n\r\nWhat would happen now if you stop and recreate your container? The answer is your data will disappear because it has been stored directly within the container itself. To overcome this issue, we will use Docker volumes in order to maintain data outside the container. Let’s start by creating two volumes:\r\n```sh\r\n$ docker volume create --name=data\r\n$ docker volume create --name=logs\r\n```\r\n\r\n```sh\r\n$ docker run -ti --rm --name exo \\\r\n$  -p 8080:8080 \\\r\n$  -v data:/srv/exo \\\r\n$  -v logs:/var/log/exo \\\r\n$  exoplatform/exo-community:4.3\r\n```\r\nFrom now on, persistent eXo Platform data (including JCR indexes, Values Storage, etc.) will be stored in the data volume, while logs will go in the logs volume. So you can now stop and delete your container and, when starting a new one, find all of your data available. Is that it? Does this mean I can now move to production since my data can now survive container restarts? Certainly not yet as we still don’t have a database suitable for use in production. In fact, unless configured otherwise, our eXo Platform Docker image uses an HSQLDB database that works great for tests but should not be used in production. We will therefore use MySQL 5.5 as our production database. (Note that the eXo Platform does support other database solutions. See here.) Let’s first start our MySQL server in a Docker container:\r\n# MySQL data volume creation\r\n```sh\r\n$ docker volume create --name=mysql_data\r\n``` \r\n# MySQL server start with an exo schema\r\n```sh\r\ndocker run -d --name mysql \\\r\n  -v mysql_data:/var/lib/mysql \\\r\n  -e MYSQL_ROOT_PASSWORD=my-secret-pw \\\r\n  -e MYSQL_DATABASE=exo \\\r\n  -e MYSQL_USER=exo \\\r\n  -e MYSQL_PASSWORD=exo \\\r\n  mysql:5.5\r\n``` \r\n# Check MySQL logs\r\n```sh\r\ndocker logs mysql\r\n```\r\nNow that the database is ready, we can start the eXo Platform while configuring the image so that it uses MySQL. This image, provided by eXo, provides a set of parameters allowing us to adapt the behavior of the image at the time the container is created. (For a detailed list of these parameters, you may refer to this online documentation.)\r\n``` sh\r\n# creating new clean volumes for eXo Platform persistent data\r\ndocker volume create --name=exo_data\r\ndocker volume create --name=exo_logs\r\n \r\n# starting eXo Platform configured with MySQL\r\ndocker run -ti --rm --name exo \\\r\n  -p 8080:8080 \\\r\n  -v exo_data:/srv/exo \\\r\n  -v exo_logs:/var/log/exo \\\r\n  --link mysql:mysql \\\r\n  -e EXO_DB_TYPE=mysql \\\r\n  -e EXO_DB_NAME=exo \\\r\n  -e EXO_DB_USER=exo \\\r\n  -e EXO_DB_PASSWORD=exo \\\r\n  -e EXO_DB_HOST=mysql \\\r\n  -e EXO_ADDONS_LIST=exo-jdbc-driver-mysql \\\r\n  exoplatform/exo-community:4.3\r\n``` \r\nThere it is! A new instance of the eXo Platform now connected to a MySQL database. All your user data will of course survive any recreation of your container. Simply login to your new social intranet, invite other people and start collaborating.\r\nSo you’re running the eXo Platform in production and all is great. But let’s face it: startup is still a tad complicated. To further simplify this, we will use Docker Compose in order to be able to control our complete environment with one simple command.\r\n\r\n``` sh\r\n# stop eXo Platform running container\r\ndocker stop exo\r\n \r\n# stop MySQL running container\r\ndocker stop mysql\r\ndocker rm mysql\r\n``` \r\nTo that end, let us first stop and delete all previously started containers:\r\n\r\n``` sh\r\nversion: '2'\r\nservices:\r\n  exo:\r\n    image: exoplatform/exo-community:4.3\r\n    environment:\r\n      EXO_DB_TYPE: mysql\r\n      EXO_DB_NAME: exo\r\n      EXO_DB_USER: exo\r\n      EXO_DB_PASSWORD: exo\r\n      EXO_DB_HOST: mysql\r\n      EXO_ADDONS_LIST: exo-jdbc-driver-mysql\r\n    expose:\r\n      - \"8080\"\r\n    ports:\r\n      - \"8080:8080\"\r\n    volumes:\r\n      - exo_data:/srv/exo\r\n      - exo_logs:/var/log/exo\r\n    links:\r\n      - mysql\r\n    depends_on:\r\n      - mysql\r\n  mysql:\r\n    image: mysql:5.5\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: my-secret-pw\r\n      MYSQL_DATABASE: exo\r\n      MYSQL_USER: exo\r\n      MYSQL_PASSWORD: exo\r\n    volumes:\r\n      - mysql_data:/var/lib/mysql\r\nvolumes:\r\n  exo_data:\r\n    external:\r\n      name: exo_data\r\n  exo_logs:\r\n    external:\r\n      name: exo_logs\r\n  mysql_data:\r\n    external:\r\n      name: mysql_data\r\n```\r\nWe can now start our whole setup (i.e., the MySQL database and the eXo Platform) with the following simple command:\r\n``` sh\r\ndocker-compose -f ./docker-compose.yml up\r\n```\r\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.rst",
          "type": "blob",
          "size": 7.21484375,
          "content": "# Welcome to Docker Labs\n\n![My image](https://github.com/collabnix/dockerlabs/blob/master/images/dockerlabs.jpeg)\n\nAre you new to Docker? Want to build your career in Container Technology?\n\nThen Welcome ! You are at the right place.\n\nDockerLabs brings you tutorials that help you get hands-on experience using Docker & Kubernetes. Here you will find complete documentation of labs and tutorials that will help you, no matter if you are a beginner, SysAdmin, IT Pro or Developer. Yes, you read it right ! Its $0 learning platform. You don't need any infrastructure. Most of the tutorials runs on [Play with Docker Platform](https://labs.play-with-docker.com/) & [Play with Kubernetes Platform](https://play-with-k8s.com). This is a free browser based learning platform for you. Docker tools like Docker Engine, Docker Compose & Docker Machine are already installed. Hence, we have everything ready for you to get started with.\n\n## Getting Started in 3 Simple Steps\n\n- Join 200+ DockerLabs Contributors in 2 mins via [DockerLabs Slack Channel](https://tinyurl.com/y973wcq8)\n\n- Fork, Contribute & Share via [DockerLabs GITHUB Repository](https://github.com/collabnix/dockerlabs)\n\n-  [![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/fold_left.svg?style=social&label=Follow%20%40collabnix)](https://twitter.com/collabnix)\n\n\n\n# Categories\n\nDockerLabs is a tutorials authored by members of the open community.\nBelow are the list of categories:\n\n## Docker\n\n- [Docker for Beginners](https://github.com/collabnix/dockerlabs/tree/master/beginners/README.md)\n\n- [Docker for Intermediate](https://github.com/collabnix/dockerlabs/tree/master/intermediate/README.md)\n\n- [Docker for Advanced](https://github.com/collabnix/dockerlabs/tree/master/advanced/README.md)\n\n- [Docker for CIOs/CEOs](https://github.com/collabnix/dockerlabs/tree/master/docker/leadership/README.md)\n\n- [Docker Cheatsheet](https://github.com/collabnix/dockerlabs/tree/master/docker/cheatsheet/README.md)\n\n- [Docker Interview Questions]()\n\n\n## Kubernetes\n\n- [Kubernetes for Beginners](https://github.com/collabnix/dockerlabs/tree/master/kubernetes/README.md)\n\n- [Kubernetes for Intermediate](https://github.com/collabnix/dockerlabs/tree/master/kubernetes/README.md)\n\n- [Kubernetes for Advanced](https://github.com/collabnix/dockerlabs/tree/master/kubernetes/README.md)\n\n- [Kubernetes for CIOs/CEOs](https://github.com/collabnix/dockerlabs/tree/master/kubernetes/leadership/README.md)\n\n- [Kubernetes Cheatsheets](https://github.com/wikitops/dockerlabs/tree/master/kubernetes/cheatsheets)\n\n- [Kubernetes Interview Questions]()\n\n# A Quick Reference\n\n## Getting Started with Docker\n\nInterestingly, you don't need to do any investment. Throughout the tutorial, you will be using Play with Docker (PWD in short) Playground. Cool....Isn't it?\n\nPWD is a Docker playground which allows users to run Docker commands in a matter of seconds. It gives the experience of having a free Alpine Linux Virtual Machine in browser, where you can build and run Docker containers and even create clusters in Docker Swarm Mode. Under the hood Docker-in-Docker (DinD) is used to give the effect of multiple VMs/PCs.\n\nTo get started with Docker, follow the below steps:\n\n- Create Dockerhub Account\n\n- Open [Play with Docker Platform](https://labs.play-with-docker.com/)\n\n- Click on \"Start\"\n\n- This will open up an easy to understand PWD(Play with Docker) tool which displays instances on the left hand side while terminal at the right hand side\n\n- Click on \"Create Instance\" to create your first Linux instance\n\n## Getting Started with Docker Swarm\n\nTo get started with Docker Swarm, you can use \"Play with Docker\", aka PWD.\nIt's free of cost and open for all.\nYou get maximum of 5 instances of Linux system to play around with Docker.\n\n- Open [Play with Docker labs](https://labs.play-with-docker.com) on your browser\n\n- Click on Icon near to Instance to choose 3 Managers & 2 Worker Nodes\n\n![My image](https://github.com/collabnix/dockerlabs/blob/master/images/pwd_1.png)\n\n- Wait for few seconds to bring up 5-Node Swarm Cluster\n\nWe recommend you start with one of our Beginners Guides, and then move to intermediate and expert level tutorials that cover most of the features of Docker. For a comprehensive approach to understanding Docker, I have categorized it as shown below:\n\n# A Bonus... Docker Swarm Visualizer\n\nSwarm Visualizer is a fancy tool which visualized the Swarm Cluster setup. It displays containers running on each node in the form of visuals. If you are conducting Docker workshop, it's a perfect way to show your audience how the containers are placed under each node. Go..try it out..\n\n## Clone the Repository\n\n```docker\ngit clone https://github.com/dockersamples/docker-swarm-visualizer\n```\n\n```docker\ncd docker-swarm-visualizer\ndocker-compose up -d\n```\n\n![My image](https://github.com/collabnix/dockerlabs/blob/master/images/visualizer.png)\n\nTo run in a docker swarm:\n\n```docker\n$ docker service create \\\n  --name=viz \\\n  --publish=8080:8080/tcp \\\n  --constraint=node.role==manager \\\n  --mount=type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n  dockersamples/visualizer\n```\n\n## How to Contribute\n\nThank you so much for showing your interest in contributing to [Dockerlabs](https://github.com/collabnix/dockerlabs) tutorials.\n\n[Guide to submitting your own tutorial](https://github.com/collabnix/dockerlabs/tree/master/CONTRIBUTING.md)<br>\n[Template for writing Tutorial Page](https://github.com/collabnix/dockerlabs/tree/master/template/EXAMPLE.md)\n\n## Docker-Ready Stack for You\n\nIn case you're looking out to conduct workshop or demo, you can refer these below links to bring up Application Stack in no time.\n\n- [Docker + WordPress + Docker Swarm](https://github.com/collabnix/dockerlabs/tree/master/solution/wordpress/README.md)\n\n- [Docker + Elasticsearch + Logstash + Kibana + Docker Swarm](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/ELK/README.md)\n\n- [Docker, Prometheus Stack + Docker Swarm](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/docker-prometheus-swarm/README.md)\n\n- [Docker + Apache Jmeter + Docker Swarm Mode](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/jmeter-docker/README.md)\n\n- [Docker + Voting App Example](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/example-voting-app/README.md)\n\n- [Docker + Photon OS](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/vmware/powercli/README.md)\n\n- [Docker + MacVLAN](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/macvlan/README.md)\n\n- [Docker, Docker Compose & IPv6](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/ipv6/README.md)\n\n- [Docker + GitLab](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/gitlab/README.md)\n\n- [Docker + Nginx ](https://github.com/collabnix/dockerlabs/tree/master/play-with-docker/nginx/README.md)\n\n- [Docker + Django + PostgreSQL](https://github.com/collabnix/dockerlabs/blob/master/solution/django-postgres/readme.md)\n\n- [Docker + Gomodule](https://github.com/collabnix/dockerlabs/blob/master/beginners/httpserver_go_module_and_docker.md)\n## License\n\n[MIT](https://github.com/collabnix/dockerlabs/blob/master/LICENSE.md)\n\n   [Proceed to Beginners Track >>](https://github.com/collabnix/dockerlabs/blob/master/beginners/README.md)\n"
        },
        {
          "name": "intermediate",
          "type": "tree",
          "content": null
        },
        {
          "name": "interview",
          "type": "tree",
          "content": null
        },
        {
          "name": "jekyll-theme-hacker.gemspec",
          "type": "blob",
          "size": 0.8173828125,
          "content": "# frozen_string_literal: true\n\nGem::Specification.new do |s|\n  s.name          = 'jekyll-theme-hacker'\n  s.version       = '0.1.1'\n  s.license       = 'CC0-1.0'\n  s.authors       = ['Ajeet Raina', 'GitHub, Inc.']\n  s.email         = ['ajeetraina@gmail.com']\n  s.homepage      = 'https://collabnix.github.io/dockerlabs/'\n  s.summary       = 'DockerLabs'\n\n  s.files         = `git ls-files -z`.split(\"\\x0\").select do |f|\n    f.match(%r{^((_includes|_layouts|_sass|assets)/|(LICENSE|README)((\\.(txt|md|markdown)|$)))}i)\n  end\n\n  s.platform = Gem::Platform::RUBY\n  s.add_runtime_dependency 'jekyll', '> 3.5', '< 5.0'\n  s.add_runtime_dependency 'jekyll-seo-tag', '~> 2.0'\n  s.add_development_dependency 'html-proofer', '~> 3.0'\n  s.add_development_dependency 'rubocop', '~> 0.50'\n  s.add_development_dependency 'w3c_validators', '~> 1.3'\nend\n"
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "networking",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginxdeploy.yaml",
          "type": "blob",
          "size": 0.626953125,
          "content": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    run: nginx\n  name: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      run: nginx\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        run: nginx\n    spec:\n      containers:\n      - image: nginx\n        name: nginx\n        ports:\n        - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    run: nginx\n  name: nginx\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    run: nginx\n  type: NodePort\n\n## Contributor - [Saiyam Pathak](https://www.linkedin.com/in/saiyam-pathak-97685a64/)\n"
        },
        {
          "name": "os",
          "type": "tree",
          "content": null
        },
        {
          "name": "play-with-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "play-with-kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "portal",
          "type": "tree",
          "content": null
        },
        {
          "name": "presentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "readings",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "solution",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "troubleshooting",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "workshop",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}