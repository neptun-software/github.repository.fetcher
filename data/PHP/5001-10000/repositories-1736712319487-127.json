{
  "metadata": {
    "timestamp": 1736712319487,
    "page": 127,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "itsgoingd/clockwork",
      "stars": 5741,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.103515625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = tab\n\n[*.php]\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.021484375,
          "content": ".github/ export-ignore"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 38.9404296875,
          "content": "5.3.3\n\n- fixed collecting HTTP requests consuming the response body (reported by mikethea1, thanks!)\n- fixed PHP 8.4 incompatibility in vanilla integration (implemented by txdFabio, thanks!)\n- updated Clockwork App (5.3.2)\n\n5.3.2\n\n- fixed crash collecting Laravel on-demand notifications with database or broadcast channels (reported by michaelthedev, thanks!) \n\n5.3.1\n\n- fixed storing HTTP requests in SQL and Redis storage (reported by andrew-bannister, thanks!)\n- updated Clockwork App (5.3.1)\n\n5.3\n\n- added support for collecting HTTP requests, with seamless Laravel and generic Guzzle implementation\n- added generic PSR-compatible middleware to the Vanilla integration (partially implemented by UlrichEckhardt, thanks!)\n- added support for Symfony 6+\n- added support for Doctrine 3+ (idea by DominicDetta, thanks!)\n- added support for Monolog 3 (implemented by Fedorov.Sergey, thanks!)\n- improved collecting database queries in Laravel to include transaction queries (implemented by congnv0330, thanks!)\n- improved collecting notifications in Laravel to include \"To\" field for database and broadcast notifications and improved email recipient formatting\n- improved Vanilla integration to support serving the Web UI without copying the assets (implemented by UlrichEckhardt, thanks!)\n- improved Request apis to automatically compute number of database queries, cache queries and model actions (idea by MarkusJLechner, thanks!)\n- improved Artisan clockwork:clean to include clockwork:clear alias (implemented by wilsenhc, thanks!)\n- improved Vanilla integration config to use getenv() instead of $_ENV (implemented by UlrichEckhardt and Fedorov.Sergey, thanks!)\n- improved Symfony integration to disable profiler for Clockwork Web UI requests\n- improved Monolog data source to automatically use correct handler (implemented by DominicDetta and Fedorov.Sergey, thanks!)\n- improved Laravel and Vanilla integration to clean up the x-clockwork cookie when it's no longer needed (idea by ssnepenthe, thanks!)\n- improved collecting models in Laravel to avoid crash when model's primary key is not set to string\n- changed file_exists call to is_dir/is_file (idea by staabm, thanks!)\n- fixed PHP 8.4 deprecation notices (reported by gharlan, thanks!)\n- fixed not being able to read first collected request in files storage (reported by UlrichEckhardt, thanks!)\n- fixed connecting to Redis without login or database set in Redit storage (reported by reeslo, thanks!)\n- updated Clockwork App (5.3)\n- BREAKING dropped PHP <7.1 support\n- BREAKING Vanilla integration default value for web.path has changed to false\n\n5.2.2\n\n- fixed collecting Laravel artisan command output on Laravel 11 (reported by uderline, thanks!)\n\n5.2.1\n\n- fixed collecting Laravel database notifications using toDatabase and broadcast notifications using toArray (implemented by ryzr, thanks!)\n- fixed serialization of incomplete PHP classes (implemented by hamedghaderi, thanks!)\n\n5.2\n\n- added new security protection - running Clockwork is now restricted to local domains unless explicitly enabled\n- added Redis storage implementation (implemented by christopherh0rn, thanks!)\n- added support for collecting tests with Pest 2 and PHPUnit 10 (reported by CadenP, idea by kdevan, thanks!)\n- added support for all Twig versions in the Twig profiler integration (idea by ericktucto, thanks!)\n- improved collecting of notifications in Laravel to support latest version of laravel/slack-notification-channel (implemented by maximepvrt, thanks!)\n- improved Laravel installation process to be able to use \"clockwork\" tag for publishing the config file\n- improved default Laravel config to ignore Telescope Toolbar requests by default (implemented by lloricode, thanks!)\n- improved Eloquent data source to support Crate PDO (implemented by JulianMar, thanks!)\n- improved Slim integration to support retrieving latest requests in the rest api (implemented by UlrichEckhardt, thanks!)\n- fixed compatibility with Laravel <5.5 when collecting database queries (reported by sbahr001, thanks!)\n- fixed compatibility with Laravel 5.6 when client-metrics or toolbar is enabled (reported by Smolinsky, thanks!)\n- fixed checking of notification type when collecting Laravel notifications (reported by faraweilyas, idea by jameshulse, thanks!)\n- fixed collecting of Slack notifications content in Laravel (implemented by maximepvrt, thanks!)\n- fixed collecting of Laravel cache expiration times (implemented by FeBe95, thanks!)\n- fixed ability to use custom should-collect and should-record callbacks (implemented by thattomperson, thanks!)\n- fixed a possible crash with SQL storage when creating backup table or inserting duplicate ids (reported by davidp-celtra, thanks!)\n- fixed an exception being thrown when Clockwork metadata path is not writable even when Clockwork was disabled (reported by joelharkes, thanks!)\n- fixed an issue with file storage causing some non-http requests might not be shown in the app (reported by mattvb91, thanks!)\n- fixed compatibility with using Filebeat to collect Clockwork metadata (implemented by JConseil, thanks!)\n- fixed Request::addModelAction method not storing the action properly (reported by UlrichEckhardt, thanks!)\n\n*BREAKING*\n\n- Running Clockwork is now restricted to local domains - localhost, local, test, wip and 127.0.0.1 - unless explicitly enabled.\n  If you want to use Clockwork on a different domain, please explicitly enable it by setting CLOCKWORK_ENABLE to true. \n\n5.1.12\n\n- improved Timeline event run method to stop the event in case of an exception (implemented by UlrichEckhardt, thanks!)\n- fixed some deprecation warnings on PHP 8.2 (implemented by faytekin, thanks!)\n- fixed some deprecation warnings on PHP 8.1 (implemented by villermen, thanks!)\n\n5.1.11\n\n- fixed crash when resolving authenticated user in Laravel without using Eloquent (reported by m-thalmann-athesia, thanks!)\n\n5.1.10\n\n- fixed crash when resolving authenticated user in Laravel (reported by LucaRed, thanks!)\n\n5.1.9\n\n- added support for Eloquent strict mode (reported by Sergiobop, thanks!)\n\n5.1.8\n\n- updated list of built-in Laravel commands to ignore when collecting commands and included Horizon commands\n- fixed collecting of Laravel queue jobs when used with Horizon\n- fixed collecting of authanticated user name when the User model includes name() method (implemented by devfrey, thanks!)\n\n5.1.7\n\n- added support for authentiaction in the Vanilla integration\n- added support for compressed Xdebug profiles\n- improved collecting of Laravel Artisan commands to support abbreviated commands (implemented by mike-peters90, thanks!)\n- fixed doubled backslashes in collected Laravel database query bindings (reported by pys1992, thanks!)\n- fixed compatibility with PostgreSQL in SQL storage (implemented by screw, thanks!)\n- fixed possible crash during file storage cleanup when used with Laravel Octane (reported by flexchar, thanks!)\n- fixed infinite loop when collecting queries in Doctrine 3.x (reported by N-M, thanks!)\n\n5.1.6\n\n- added Monolog 2.x compatible handler (idea by mahagr, thanks!)\n- improved log to handle all Throwable classes as exceptions (idea by EdmondDantes, thanks!)\n- fixed support for capturing console output in Laravel 9 (reported by mikerockett, thanks!)\n\n5.1.5\n\n- removed support for psr/log\n- fixed some typos (implemented by fridzema, thanks!)\n\n*BREAKING*\n\n- `Clockwork\\Request\\Log` no longer implements the PSR log interface, it is unlikely you are using this class directly\n\n5.1.4\n\n- added Laravel 9 support\n- added support for manually registering Clockwork middleware in Laravel\n- fixed some failing tests might not been collected in Laravel (reported by ajcastro, thanks!)\n- fixed not respecting the collect tests setting in Laravel (reported by SimBig, thanks!)\n- fixed some deprecation warnings on PHP 8.1 (implemented by usernotnull, thanks!)\n\n5.1.3\n\n- added PSR to the default filtered namespaces from stack traces in the Laravel integration\n- fixed not being able to log non-string values when using psr/log >=2.0 (reported by Wit3, thanks!)\n- fixed some deprecation warnings on PHP 8.1 (reported by Pinnokkio, thanks!)\n- fixed wrong redirect when accessing web ui with an url including a trailing slash (implemented by ssnepenthe, thanks!)\n- fixed update-token could be leaked via the Clockwork rest api (implemented by ssnepenthe, thanks!)\n\n5.1.2\n\n- fixed some deprecation warnings on PHP 8.1 (reported by Codomic, thanks!)\n\n5.1.1\n\n- added support for psr/log 2.0 (used in recent Laravel versions) (implemented by byGits, thanks!)\n- improved timeline api event run method to return the return value of passed closure\n- improved collecting Laravel database queries to not quote integers (implemented by thisiskj, thanks!)\n- improved toolbar details link to always be absolute and work with subdirectories (reported by superDuperCyberTechno, thanks!)\n- fixed some deprecation warnings on PHP 8.1 (implemented by gharlan, thanks!)\n- fixed collecting Laravel database queries to produce correct queries when bindings contain question marks (reported by woshixiaobai, thanks!)\n- fixed filtering collected and recorded requests by closure (implemented by ssnepenthe, thanks!)\n- fixed some inconsistencies in the Clockwork metadata api\n- fixed some web UI assets being server with wrong mime-types (implemented by ssnepenthe, thanks!)\n- fixed missing method on storage interface and missing default parameter value in sql storage (implemented by ssnepenthe, thanks!)\n\n*BREAKING*\n\n- timeline api event run method now returns the return value of passed closure instead of the event instance\n\n5.1\n\n- added initial support for Laravel Octane\n- added support for Web UI in the vanilla integration\n- added support for collecting Laravel cache queries without values (implemented by akalongman, thanks!)\n- added ability to filter Laravel routes from particular namespaces (idea by hailwood, thanks!)\n- improved collecting of request URL to include full URL including the query string\n- improved Clockwork Browser payload to include Web UI path\n- updated Clockwork App (5.1)\n- fixed logging falsy values via Clockwork::log (reported by Karmalakas, thanks!)\n- fixed PHP 8 incompatibility when processing some Laravel notifications (implemented by nanaya, thanks!)\n- fixed request body being collected even when already parsed into POST data\n- fixed collecting request URLs with non-standard ports\n\n5.0.8\n\n- fixed crash when collecting Laravel mailables built via MailMessage (implemented by cbl, thanks!)\n- fixed crash when collecting artisan command in Lumen (reported by 2Attack, thanks!)\n- fixed crash when collecting database queries in Laravel with connection implementation not using PDO (implemented by lenssoft, thanks!)\n- fixed crash when HTTP request body contains valid json which does not contain array (eg. a number) (reported by Mradxz, thanks!)\n- fixed collected jobs dispatched from other jobs not having a correct parent job set (implemented by josvar, thanks!)\n\n5.0.7\n\n- changed delay listening to events until the app is booted (improves comatibility with some other packages)\n- changed default settings to enable toolbar (separately installed component)\n- changed default except requests filter to include debugbar api (implemented by edgardmessias, thanks!)\n- fixed wrong type-hint for the timeline event run method (reported by hferradj, thanks!)\n- fixed on-demand mode not working in Laravel (reported by yemenifree, thanks!)\n- fixed crash when collecting Laravel notifications with recipient names (reported by iainheng, thanks!)\n- fixed possible crashes and other issues when collecting Laravel notifications (reported by beekmanbv, thanks!)\n- fixed crash when creating runnable queries in DBAL data source (implemented by N-M, thanks!)\n\n5.0.6\n\n- fixed vanilla integration overriding other cookies when used with a PSR-7 response (reported by leemason, thanks!)\n\n5.0.5\n\n- added support for toolbar in the vanilla integration (idea by reeslo, thanks!)\n- added support for client metrics in the vanilla integration\n- improved PSR-7 support in the vanilla integration\n- fixed toolbar might not work when not collecting database models\n- fixed crash collecting Slack and Nexmo notifications (reported by abalozz, thanks!)\n- fixed timeline api usage not being updated in the Slim integration leading to crash (reported by jiaojie1989, implemented by seanhamlin, thanks!)\n- fixed api path being interpreted as regex in the vanilla integration (implemented by pqr, thanks!)\n- fixed Symfony storage not being updated for latest storage api (implemented by auchanhub, thanks!)\n\n5.0.4\n\n- fixed Lumen integration crash (implemented by alexbegoon, thanks!)\n- fixed PHP 5.6 incompatibility (implemented by sanis, thanks!)\n\n5.0.3\n\n- fixed PHP 8.0 incompatibility in log (implemented by mtorromeo, thanks!)\n\n5.0.2\n\n- fixed data sources not being initialized for extended data requests (reported by tmishutin, thanks!)\n- fixed inconsistent handling of time and duration arguments in various Request::add* methods (reported by mahagr, thanks!)\n- updated Clockwork App (5.0.2)\n\n5.0.1\n\n- fixed performance issues related to collecting stack traces for Eloquent models actions (reported by mstaack, thanks!)\n- fixed collecting database and unsupported Laravel notifications (implemented by YannikFirre, thanks!)\n- fixed log and timeline sorting leading to invalid metadata format\n- updated Clockwork App (5.0.1)\n\n5.0\n\n- added collecting of client-metrics and web-vitals\n- added collecting of Eloquent models actions and retrieved, created, updated and deleted models counts\n- added collecting of Laravel notifications\n- added reworked timeline api\n- added configurable web ui path (default changed to /clockwork)\n- added toolbar support\n- added on-demand mode (with optional secret)\n- added option to collect error requests only (requests with 4xx and 5xx responses)\n- added option to specify slow threshold and collect slow requests only\n- added option to sample collected requests (collect only 1 in x requests)\n- added option to collect only specified urls\n- added option to not collect pre-flight requests (enabled by default)\n- added option to filter collected and recorded requests by closure\n- added Laravel controller timeline event\n- added support for updating existing requests\n- added Slim 4 support\n- updated to Clockwork App 5.0\n- improved reworked the central Clockwork class api\n- improved requests recording to use a terminate callback\n- improved global log instance to live on the request instance\n- improved global timeline instance to live on the request instance\n- improved Symfony routes registration to register web ui paths only when enabled\n- improved SQL storage to be more compatible with different PDO error modes\n- improved Clockwork rest api with only/except filters\n- improved handling of corrupted index records in file storage\n- improved cleaned up the code-base, added and improved comments, use modern php features\n- removed Laravel total, initialization, boot and run timeline events\n- removed legacy clockwork.controller events\n- removed duplicate file/line information from collected metadata\n- fixed authentication route not being registered when web ui is disabled\n- fixed database queries not being collected for queue jobs\n- fixed multi-line database queries not being counted properly (implemented by edgardmessias, thanks!)\n- fixed StackFrame not processing Windows paths correctly\n\n*BREAKING*\n\n- multiple changes to the Laravel config file, please review and re-publish\n- minimal required PHP version is now 5.6 (previously 5.5)\n- the timeline api was reworked, please see documentation for details\n- the global log instance was moved to request instance, please see documentation for details\n- the central Clockwork class api was reworked, old api is available but deprecated\n- changed Slim middleware namespaces\n\n4.1.8\n\n- fixed handling of index file locking failures in file storage (reported by mahagr, thanks!)\n\n4.1.7\n\n- fixed a rare crash in Eloquent duplicate queries detection (reported by mstaack, thanks!)\n- fixed code-style in the Laravel config (implemented by fgilio, thanks!)\n\n4.1.6\n\n- added support for filtering collected requests by method to Laravel integration (options requests filtered by default) (idea by mortenscheel, thanks!)\n- added support for filtering collected requests by uri and method to vanilla integration\n- fixed handling of failed file operations on index file in file storage (reported by staabm, thanks!)\n\n4.1.5\n\n- fixed crash on initialization in Lumen apps using queue (reported by gramparallelo, thanks!)\n\n4.1.4\n\n- added support for a time property to the Request:add* apis, defaults to \"current time - duration\"\n- fixed crash when collecting console commands with array arguments or options in the Laravel integration (implemented by mortenscheel, thanks!)\n- fixed default storage directory being one level too deep in vanilla integration\n\n4.1.3\n\n- fixed file storage not unlocking index when cleanup has nothing to clean (implemented by Nacoma, thanks!)\n\n4.1.2\n\n- fixed interaction when making HTTP requests in feature tests when collecting tests in Laravel\n- updated to Clockwork App 4.1.1\n\n4.1.1\n\n- added ext-json to composer.json require section (idea by staabm, thanks!)\n- fixed Clockwork being initialized too soon in Laravel integration leading to possible crashes (reported by tminich, thanks!)\n\n4.1\n\n- added support for command type requests with command specific metadata (commandName, commandArguments, commandArgumentsDefaults, commandOptions, commandOptionsDefaults, commandExitCode, commandOutput)\n- added support for collecting executed artisan commands in Laravel integration\n- added support for queue-job type requests with queue-job specific metadata (jobName, jobDescription, jobStatus, jobPayload, jobQueue, jobConnection, jobOptions)\n- added support for collecting executed queue-jobs in Laravel integration (also supports Laravel Horizon)\n- added support for test type requests with test specific metadata (testName, testStatus, testStatusMessage, testAsserts)\n- added support for collecting test runs in Laravel integration using PHPunit\n- added support for disabling collection of view data when collecting rendered views (new default is to collect views without data)\n- added Twig data source using the built-in Twig profiler to collect more precise Twig profiling data\n- added support for setting parent requests on requests\n- improved collecting of database queries, cache queries, dispatched queue jobs and redis commands to also collect time\n- improved the data sources filters api to allow multiple filter types\n- improved collecting of Laravel views to use a separate data source\n- improved Eloquent data source to have an additional \"early\" filter applied before the query is added to query counts\n- improved Eloquent data source now passes raw stack trace as second argument to filters\n- improved Laravel data source to work when response is not provided\n- improved Laravel events data source to include Laravel namespace in the default ignored events\n- improved Laravel views data source to strip view data prefixed with __\n- improved PHP data source to not set request time for cli commands\n- improved serializer to omit data below depth limit, support debugInfo, jsonSerialize and toArray methods (partially implemented by mahagr, thanks!)\n- improved log to allow overriding serializer settings via context, no longer enabled toString by default\n- improved Request class now has pre-populated request time on creation\n- improved StackTrace helper with limit option, last method, fixed filter output keys\n- improved Lumen queue and redis feature detection\n- improved vanilla integration to allow manually sending the headers early (implemented by tminich, thanks!)\n- fixed Symfony support, added support for latest Symfony 5.x and 4.x (reported by llaville, thanks!)\n- removed dark theme for the web UI setting (now configurable in the Clockwork app itself)\n- updated to Clockwork App 4.1\n\n*BREAKING*\n\n- multiple new settings were added to the Laravel config file\n- DataSourceInterface::reset method was added, default empty implementation is provided in the base DataSource class\n- LaravelDataSource constructor arguments changed to reflect removing the views collecting support\n\n4.0.17\n\n- improved performance and memory usage when doing file storage cleanup (reported by ikkez, thanks!)\n- fixed crash after running file storage cleanup\n- fixed typo in clockwork:clean argument description\n\n4.0.16\n\n- fixed Laravel middleware being registered too late, causing \"collect data always\" setting to not work (reported by Youniteus, thanks!)\n\n4.0.15\n\n- fixed cleanup not working with file storage (implemented by LucidTaZ, thanks!)\n\n4.0.14\n\n- fixed compatibility with Laravel 5.4 and earlier when resolving authenticated user\n\n4.0.13\n\n- fixed stack traces processing not handling call_user_func frames properly leading to wrong traces (reported by marcus-at-localhost, thanks!)\n- fixed wrong stack traces skip namespaces defaults leading to wrong traces\n- fixed vanilla integration config file missing and no longer used settings\n\n4.0.12\n\n- added a simple index file locking to the file storage\n- improved handling of invalid index data in the file storage (reported by nsbucky and tkaven, thanks!)\n- fixed Laravel data source crash when running without auth service (implemented by DrBenton, thanks!)\n\n4.0.11\n\n- updated web UI (Clockwork App 4.0.6)\n\n4.0.10\n\n- fixed wrong file:line for log messages (requires enabled stack traces atm)\n\n4.0.9\n\n- fixed duplicate queries detection reporting all relationship queries instead of only duplicates (reported by robclancy, thanks!)\n- improved the default .gitignore for metadata storage to ignore compressed metadata as well (implemented by clugg, thanks!)\n\n4.0.8\n\n- updated web UI (Clockwork App 4.0.5)\n\n4.0.7\n\n- updated web UI (Clockwork App 4.0.4)\n\n4.0.6\n\n- fixed possible crash in LaravelDataSource when resolving authenticated user in non-standard auth implementations (4.0 regression) (implemented by zarunet, thanks!)\n- fixed StackTrace::filter calling array_filter with swapped arguments (implemented by villermen, thanks!)\n- fixed PHP 5.x incompatibility tenaming the Storage\\Search empty and notEmpty methods to isEmpty and isNotEmpty (reported by eduardodgarciac, thanks!)\n- updated web UI (Clockwork App 4.0.3)\n\n4.0.5\n\n- fixed multiple issues causing FileStorage cleanup to not delete old metadata or crash (partially implemented by jaumesala, reported by SerafimArts, thanks!)\n- updated web UI (Clockwork App 4.0.2)\n\n4.0.4\n\n- fixed web UI not working (4.0.2 regression) (reported by williamqian and lachlankrautz, thanks!)\n\n4.0.3\n\n- fixed crash when using SQL storage (reported by sebastiaanluca, thanks!)\n\n4.0.2\n\n- updated web UI (Clockwork App 4.0.1)\n\n4.0.1\n\n- fixed Lumen support (reported by Owlnofeathers, thanks!)\n\n4.0\n\n- added \"features\" configuration\n- added requests search (extended storage api)\n- added collecting request body data (idea by lkloon123, thanks!)\n- added collecting of dispatched queue jobs\n- added collecting Redis commands (idea by tillkruss, thanks!)\n- added collecting of database query stats separate from queries\n- added collecting of executed middleware\n- added ability to specify slow database query threshold\n- added ability to collect only slow database queries\n- added ability to disable collecting of database queries keeping database stats\n- added ability to disable collecting of cache queries keeping cache stats\n- added duplicate (N+1) database query detection (inspired by beyondcode/laravel-query-detector, thanks!)\n- added configuration to limit number of collected frames for stack traces (defaults to 10)\n- added configuration to specify skipped vendors, namespaces and files for stack traces\n- added index file to file storage\n- added support for compression in file storage\n- added new filters api to data sources\n- improved file and sql storage to support search api\n- improved symfony storage to work with file storage changes\n- improved log api to allow passing custom stack traces in context\n- improved refactored and cleaned up Laravel service provider\n- improved Lumen integration to share more code with Laravel integration\n- improved refactored sql storage a bit\n- improved timeline api, description is now optional and defaults to event name when calling startEvent (idea by robclancy, thanks!)\n- updated web UI\n- fixed regexp in vanilla integration Clockwork REST api processing\n- removed storage filter support (replaced by features configuration)\n- BREAKING configuration format changes, please re-deploy if using customized Clockwork config\n- NOTE metadata files from previous versions will need to be manually removed on upgrade\n\n3.1.4\n\n- improved DBALDataSource to work with custom types (thanks villermen)\n\n3.1.3\n\n- updated LaravelCacheDataSource to support Laravel 5.8\n\n3.1.2\n\n- fixed missing use statement in vanilla integration (thanks micc83)\n\n3.1.1\n\n- exposed the Request::setAuthenticatedUser method on the main Clockwork class\n- fixed possible crash in LaravelDataSource when resolving authenticated user in non-standard auth implementations (thanks freshleafmedia, motia)\n\n3.1\n\n- added new integration for vanilla PHP (thanks martbean)\n- added support for collecting authenticated user info\n- added bunch of helper methods for adding data like database queries or events to Clockwork\n- added serializer options to the config files\n- updated web UI to match latest Chrome version\n- improved collecting of exceptions\n- improved filtered uris implementation in Laravel to no longer have any performance overhead (thanks marcusbetts)\n- improved compatibility with Laravel Telescope\n- fixed numeric keys being lost on serialization of arrays (thanks ametad)\n- fixed serialization of parent class private properties\n- fixed a possible crash when resolving stack traces (thanks mbardelmeijer)\n- deprecated Clockwork::subrequest method in favor of Clockwork::addSubrequest\n\n3.0.2\n\n- fixed infinite redirect if dark web theme is enabled on Laravel or Lumen <5.5 (thanks pixelskribe)\n\n3.0.1\n\n- improved LaravelDataSource to not collect views data if it is filtered (by default)\n\n3.0\n\n- updated web UI to match latest Chrome version\n- added new api for user-data (custom tabs in Clockwork app)\n- added support for authentication (thanks xiaohuilam)\n- added support for collecting stack traces for log messages, queries, etc. (thanks sisve)\n- added new api for recording subrequests (thanks L3o-pold)\n- added Symfony integration beta\n- added Xdebug profiler support\n- added collecting of full URLs for requests\n- added collecting of peak memory usage\n- added ability to use dark theme for the web UI\n- added new extend-api to data soruces for extending data when it's being sent to the application\n- improved data serialization implementation - handles recursion, unlimited depth, type metadata, clear marking for protected and private properties\n- improved data serialization with configurable defaults, limit and blackboxing of classes\n- improved handling of binary bindings in EloquentDataSource (thanks sergio91pt and coderNeos)\n- improved stack traces collection to resolve original view names\n- BREAKING improved Laravel integration to type-hint contracts instead of concrete implementations (thanks robclancy)\n- improved default configuration to not collect data for Laravel Horizon requests (thanks fgilio)\n- improved LaravelDataSource view data collecting to remove Laravel Twigbridge metadata\n- changed Laravel integration to register middleware in the boot method instead of register (thanks dionysiosarvanitis)\n- changed Laravel and Lumen integrations to use a single shared Log instance\n- fixed Clockwork HTTP API returning empty object instead of null if request was not found\n- fixed Clockwork routes not returning 404 when disabled on runtime with route cache enabled (thanks joskfg)\n- BREAKING dropped Laravel 4 support\n- BREAKING dropped PHP 5.4 support, requires PHP 5.5\n\n2.2.5\n\n- changed SQL storage schema URI column type from VARCHAR to TEXT (thanks sumidatx)\n- fixed possible crash in file storage cleanup if the file was already deleted (thanks bcalik)\n- fixed event handling in Eloquent data source compatibility with some 3rd party packages (thanks erikgaal)\n\n2.2.4\n\n- drop support for collecting Laravel controller middleware (as this can have unexpected side-effects) (thanks phh)\n\n2.2.3\n\n- improved Server-Timing now uses the new header format (thanks kohenkatz)\n- fixed Laravel crash when gathering middleware if the controller class doesn't exist\n\n2.2.2\n\n- fixed compatibility with Laravel 5.2 (thanks peppeocchi)\n\n2.2.1\n\n- fixed Laravel 4.x support once again (thanks bcalik)\n\n2.2\n\n- added support for collecting route middleware (thanks Vercoutere)\n- added support for collecting routes and middleware in newer Lumen versions\n- updated Web UI to match Clockwork Chrome 2.2\n- improved Laravel support to register most event handlers only when collecting data\n- fixed Lumen middleware not being registered automatically (thanks lucian-dragomir)\n- fixed published Lumen config not being loaded\n\n2.1.1\n\n- fixed Laravel 4.x support (added legacy version of the config file) (thanks bcalik)\n\n2.1\n\n- updated Web UI to match Clockwork Chrome 2.1\n- improved Laravel support to load the default config and use env variables in the default config\n- improved Lumen support to use the standard config subsystem instead of directly accessing env variables (thanks davoaust, SunMar)\n- improved reliability of storing metadata in some cases (by using JSON_PARTIAL_OUTPUT_ON_ERROR when supported)\n- fixed wrong mime-type for javascript assets in Web UI causing it to not work in some browsers (thanks sleavitt)\n- fixed path checking in Web UI causing it to not work on Windows (thanks Malezha)\n- fixed parameters conversion in DBALDataSource (thanks andrzejenne)\n\n2.0.4\n\n- improved mkdir error handling in FileStorage (thanks FBnil)\n- fixed crash in LaravelEventsDataSource when firing events with associative array as payload\n\n2.0.3\n\n- fixed Clockwork now working when used with Laravel route cache\n\n2.0.2\n\n- fixed crash on attempt to clean up file storage if the project contains Clockwork 1.x metadata\n\n2.0.1\n\n- fixed Web UI not working in Firefox\n\n2.0\n\n- added Web UI\n- added new Laravel cache data source\n- added new Laravel events data source\n- added new more robust metadata storage API\n- added automatic metadata cleanup (defaults to 1 week)\n- added better metadata serialization including class names for objects\n- added PostgreSQL compatibility for the SQL storage (thanks oldskool73)\n- added Slim 3 middleware (thanks sperrichon)\n- added PSR message data source (thanks sperrichon)\n- added Doctrine DBAL data source (thanks sperrichon)\n- changed Clockwork request ids now use dashes instead of dots (thanks Tibbelit)\n- changed Laravel and Lumen integrations to no longer log data for console commands\n- changed simplified the clock Laravel helper (thanks Jergus Lejko)\n- fixed wrong version data logged in SQL storage\n- removed PHP 5.3 support, code style changes\n- removed CodeIgniter support\n- removed ability to register additional data sources via Clockwork config\n\nUPGRADING\n\n- update the required Clockwork version to ^2.0 in your composer.json\n- PHP 5.3 - no longer supported, you can continue using the latest 1.x version\n- CodeIgniter - no longer supported, you can continue using the latest 1.x version\n- Slim 2 - update the imported namespace from Clockwork\\Support\\Slim to Clockwork\\Support\\Slim\\Legacy\n- ability to register additional data sources via Clockwork config was removed, please call app('clockwork')->addDataSource(...) in your own service provider\n\n1.14.5\n\n- fixed incompatibility with Laravel 4.1 an 4.2 (introduced in 1.14.3)\n\n1.14.4\n\n- added support for Lumen 5.5 (thanks nebez)\n\n1.14.3\n\n- added support for Laravel 5.5 package auto-discovery (thanks Omranic)\n- added automatic registration of the Laravel middleware (no need to edit your Http/Kernel.php anymore, existing installations don't need to be changed)\n- updated Laravel artisan clockwork:clean command for Laravel 5.5 (thanks rosswilson252)\n- fixed crash when retrieving all requests from Sql storage (thanks pies)\n\n1.14.2\n\n- fixed missing imports in Doctrine data source (thanks jenssegers)\n\n1.14.1\n- fixed collecting Eloquent queries when using PDO_ODBC driver for real (thanks abhimanyu003)\n\n1.14\n- added support for Server-Timing headers (thanks Garbee)\n- fixed compatibility with Lumen 5.4 (thanks Dimasdanz)\n- fixed collecting Eloquent queries with bindings containing backslashes (thanks fitztrev)\n- fixed collecting Eloquent queries when using PDO_ODBC driver (thanks abhimanyu003)\n- fixed collecting Doctrine queries with array bindings (thanks RolfJanssen)\n- replaced Doctrine bindings preparation code with more complete version from laravel-doctrine\n- fixed PHP 5.3 compatibility\n\n1.13.1\n- fixed compatibility with Lumen 5.4 (thanks meanevo)\n\n1.13\n- added support for Laravel 5.4 (thanks KKSzymanowski)\n- improved Laravel \"clock\" helper function now takes multiple arguments to be logged at once (eg. `clock($foo, $bar, $baz)`)\n\n1.12\n- added collecting of caller file name and line number for queries and model name (Laravel 4.2+) for ORM queries to the Eloquent data source (thanks OmarMakled and fitztrev for the idea)\n- added collecting of context, caller file name and line number to the logger (thanks crissi for the idea)\n- fixed crash in Lumen data source when running unit tests with simulated requests on Lumen\n- fixed compatibility with Laravel 4.0\n\n1.11.2\n- switched to PSR-4 autoloading\n- fixed Swift data source crash when sending email with no from/to address specified (thanks marksecurelogin)\n\n1.11.1\n- added support for DateTimeImmutable in Doctrine data source (thanks morfin)\n- fixed not being able to log null values via the \"clock\" helper function\n- fixed Laravel 4.2-dev not being properly detected as 4.2 release (thanks DemianD)\n\n1.11\n- added support for Lumen 5.2 (thanks lukeed)\n- added \"clock\" helper function\n- fixed data sources being initialized too late (thanks morfin)\n- fixed code style in Doctrine data source\n- removed Laravel log dependency from Doctrine data source\n- NOTE laravel-doctrine provides ootb support for Clockwork, you should use this instead of included Doctrine data source with Laravel\n\n1.10.1\n- fixed collecting of database queries in Laravel 5.2 (thanks sebastiandedeyne)\n\n1.10\n- added Laravel 5.2 support (thanks jonphipps)\n- improved file storage to allow configuring directory permissions (thanks patrick-radius)\n- fixed interaction with PHPUnit in Lumen (thanks troyharvey)\n- removed \"router dispatch\" timeline event for now (due to Laravel 5.2 changes)\n\n1.9\n- added Lumen support (thanks dawiyo)\n- added aliases for all Clockwork parts so they can be resolved by the IoC container in Laravel and Lumen\n- fixed Laravel framework initialisation, booting and running timeline events not being recorded properly (thanks HipsterJazzbo, sisve)\n- fixed how Laravel clockwork:clean artisan command is registered (thanks freekmurze)\n- removed Lumen framework initialisation, booting and running timeline events as they are not supported by Lumen\n\n1.8.1\n- fixed SQL data storage initialization if PDO is set to throw exception on error (thanks YOzaz)\n\n1.8\n- added SQL data storage implementation\n- added new config options for data storage for Laravel (please re-publish the config file)\n- fixed not being able to use the Larvel route caching when using Clockwork (thanks Garbee, kylestev, cbakker86)\n\n1.7\n- added support for Laravel 5 (thanks Garbee, slovenianGooner)\n- improved support for Laravel 4.1 and 4.2, Clockwork data is now available for error responses\n- added Doctrine data source (thanks matiux)\n- fixed compatibility with some old PHP 5.3 versions (thanks hailwood)\n- updated Laravel data source to capture the context for log messages (thanks hermanzhu)\n\n1.6\n- improved Eloquent data source to support multiple databases (thanks ingro)\n- improved compatibility with Laravel apps not using database\n- improved compatibility with various CodeIngiter installations\n- fixed a bug where log messages and timeline data might not be sorted correctly\n- fixed missing static keyword in CodeIgniter hook (thanks noevidenz)\n- changed Timeline::endEvent behavior to return false instead of throwing exception when called for non-existing event\n\n1.5\n- improved Slim support to use DI container to share Clockwork instance instead of config\n- improved Slim support now adds all messages logged via Slim's log interface to Clockwork log as well\n- improved CodeIgniter support to make Clockwork available through the CI app (tnx BradEstey)\n- fixed Laravel support breaking flash messages (tnx hannesvdvreken)\n- fixed CodeIgniter support PSR-0 autoloading and other improvements (tnx pwhelan)\n- fixed file storage warning when recursive data is collected\n\n1.4.4\n- changed Laravel support to disable permanent data collection by default (tnx jenssegers)\n- improved Laravel support to return Clockwork data with proper Content-Type (tnx maximebeaudoin)\n- fixed CodeIgniter support compatibility with PHP 5.3 (tnx BradEstey)\n\n1.4.3\n- fixed incorrect requests ids being generated depending on set locale\n\n1.4.2\n- fixed Laravel support compatibility with PHP 5.3\n\n1.4.1\n- fixed Laravel support compatibility with PHP 5.3\n\n1.4\n- added support for collecting emails and views data\n- added support for CodeIgniter 2.1 (tnx pwhelan)\n- added data source and plugin for collecting emails data from Swift mailer\n- added support for collecting emails and views data from Laravel\n- added --age argument to Laravel artisan clockwork::clean command, specifies how old the request data must be to be deleted (in hours)\n- improved Laravel service provider\n- fixed compatibility with latest Laravel 4.1\n\n1.3\nNOTE: Clockwork\\Request\\Log::log method arguments have been changed from log($message, $level) to log($level, $message), levels are now specified via Psr\\Log\\LogLevel class, it's recommended to use shortcut methods for various levels (emergency, alert, critical,  error, warning, notice, info and debug($message))\n- clockwork log class now implements PSR logger interface, updated Laravel and Monolog support to use all available log levels\n- clockwork log now accepts objects and arrays as input and logs their json representation\n- added support for specifying additional headers on metadata requests (Laravel) (tnx philsturgeon)\n\n1.2\n- added support for Laravel 4.1\n- added facade for Laravel\n- added ability to disable collecting data about requests to specified URIs in Laravel\n- added clockwork:clean artisan command for cleaning request metadata for Laravel\n- added an easy way to add timeline events and log records via main Clockwork class\n- added support for Slim apps running in subdirs (requires Clockwork Chrome 1.1+)\n- file storage now creates default gitignore file for the request data when creating the storage dir\n- fixed a few bugs which might cause request data to not appear in Chrome extension\n- fixed a few bugs that could lead to PHP errors/exceptions\n\n1.1\n- added support for Laravel 4 apps running in subdirs (requires Clockwork Chrome 1.1+)\n- added data-protocol version to the request data\n- updated Laravel 4 service provider to work with Clockwork Web\n- fixed a bug where Clockwork would break Laravel 4 apps not using database\n- fixed a bug where calling Timeline::endEvent after Timeline::finalize caused exception to be thrown\n- fixed a bug where using certain filters would store incorrect data\n\n0.9.1\n- added support for application routes (ootb support for Laravel 4 only atm)\n- added configuration file for Laravel 4\n- added support for filtering stored data in Storage\n- added library version constant Clockwork::VERSION\n"
        },
        {
          "name": "Clockwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2013 Miroslav Rigler\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4375,
          "content": "<p align=\"center\">\n\t<img width=\"300px\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/title.png\">\n\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/screenshot.png\">\n</p>\n\n> Clockwork is a development tool for PHP available right in your browser. Clockwork gives you an insight into your application runtime - including request data, performance metrics, log entries, database queries, cache queries, redis commands, dispatched events, queued jobs, rendered views and more - for HTTP requests, commands, queue jobs and tests.\n\n> *This repository contains the server-side component of Clockwork.*\n\n> Check out on the [Clockwork website](https://underground.works/clockwork) for details.\n\n<p align=\"center\">\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-1.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-2.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-3.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-4.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-5.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-6.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-7.png\">\n\t</a>\n\t<a href=\"https://underground.works/clockwork\">\n\t\t<img width=\"100%\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/features-8.png\">\n\t</a>\n</p>\n\n### Installation\n\nInstall the Clockwork library via [Composer](https://getcomposer.org/).\n\n```\ncomposer require itsgoingd/clockwork\n```\n\nCongratulations, you are done! To enable more features like commands or queue jobs profiling, publish the configuration file via the `vendor:publish` Artisan command.\n\n**Note:** If you are using the Laravel route cache, you will need to refresh it using the route:cache Artisan command.\n\nRead [full installation instructions](https://underground.works/clockwork/#docs-installation) on the Clockwork website.\n\n### Features\n\n#### Collecting data\n\nThe Clockwork server-side component collects and stores data about your application.\n\nClockwork is only active when your app is in debug mode by default. You can choose to explicitly enable or disable Clockwork, or even set Clockwork to always collect data without exposing them for further analysis.\n\nWe collect a whole bunch of useful data by default, but you can enable more features or disable features you don't need in the config file.\n\nSome features might allow for advanced options, eg. for database queries you can set a slow query threshold or enable detecting of duplicate (N+1) queries. Check out the config file to see all what Clockwork can do.\n\nThere are several options that allow you to choose for which requests Clockwork is active.\n\nOn-demand mode will collect data only when Clockwork app is open. You can even specify a secret to be set in the app settings to collect request. Errors only will record only requests ending with 4xx and 5xx responses. Slow only will collect only requests with responses above the set slow threshold. You can also filter the collected and recorded requests by a custom closure. CORS pre-flight requests will not be collected by default.\n\nNew in Clockwork 4.1, artisan commands, queue jobs and tests can now also be collected, you need to enable this in the config file.\n\nClockwork also collects stack traces for data like log messages or database queries. Last 10 frames of the trace are collected by default. You can change the frames limit or disable this feature in the configuration file.\n\n#### Viewing data\n\n##### Web interface\n\nVisit `/clockwork` route to view and interact with the collected data.\n\nThe app will show all executed requests, which is useful when the request is not made by browser, but for example a mobile application you are developing an API for.\n\n##### Browser extension\n\nA browser dev tools extension is also available for Chrome and Firefox:\n\n- [Chrome Web Store](https://chrome.google.com/webstore/detail/clockwork/dmggabnehkmmfmdffgajcflpdjlnoemp)\n- [Firefox Addons](https://addons.mozilla.org/en-US/firefox/addon/clockwork-dev-tools/)\n\n##### Toolbar\n\nClockwork now gives you an option to show basic request information in the form of a toolbar in your app.\n\nThe toolbar is fully rendered client-side and requires installing a tiny javascript library.\n\n[Learn more](https://underground.works/clockwork/#docs-viewing-data) on the Clockwork website.\n\n#### Logging\n\nYou can log any variable via the clock() helper, from a simple string to an array or object, even multiple values:\n\n```php\nclock(User::first(), auth()->user(), $username)\n```\n\nThe `clock()` helper function returns it's first argument, so you can easily add inline debugging statements to your code:\n\n```php\nUser::create(clock($request->all()))\n```\n\nIf you want to specify a log level, you can use the long-form call:\n\n```php\nclock()->info(\"User {$username} logged in!\")\n```\n\n#### Timeline\n\nTimeline gives you a visual representation of your application runtime.\n\nTo add an event to the timeline - start it with a description, execute the tracked code and finish the event. A fluent api is available to further configure the event.\n\n```php\n// using timeline api with begin/end and fluent configuration\nclock()->event('Importing tweets')->color('purple')->begin();\n    ...\nclock()->event('Importing tweets')->end();\n```\n\nAlternatively you can execute the tracked code block as a closure. You can also choose to use an array based configuration instead of the fluent api.\n\n```php\n// using timeline api with run and array-based configuration\nclock()->event('Updating cache', [ 'color' => 'green' ])->run(function () {\n    ...\n});\n```\n\nRead more about available features on the [Clockwork website](https://underground.works/clockwork).\n\n<p align=\"center\">\n\t<a href=\"https://underground.works\">\n\t\t<img width=\"150px\" src=\"https://github.com/itsgoingd/clockwork/raw/master/.github/assets/footer.png\">\n\t</a>\n</p>\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3388671875,
          "content": "{\n    \"name\": \"itsgoingd/clockwork\",\n    \"description\": \"php dev tools in your browser\",\n    \"keywords\": [\"debugging\", \"profiling\", \"logging\", \"laravel\", \"lumen\", \"slim\", \"devtools\"],\n    \"homepage\": \"https://underground.works/clockwork\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"itsgoingd\",\n            \"email\": \"itsgoingd@luzer.sk\",\n            \"homepage\": \"https://twitter.com/itsgoingd\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.1\",\n        \"ext-json\": \"*\"\n    },\n    \"suggest\": {\n\t\t\"ext-pdo\": \"Needed in order to use a SQL database for metadata storage\",\n\t\t\"ext-pdo_sqlite\": \"Needed in order to use a SQLite for metadata storage\",\n\t\t\"ext-pdo_mysql\": \"Needed in order to use MySQL for metadata storage\",\n\t\t\"ext-pdo_postgres\": \"Needed in order to use Postgres for metadata storage\",\n\t\t\"ext-redis\": \"Needed in order to use Redis for metadata storage\",\n\t\t\"php-http/discovery\": \"Vanilla integration - required for the middleware zero-configuration setup\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Clockwork\\\\\": \"Clockwork/\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Clockwork\\\\Support\\\\Laravel\\\\ClockworkServiceProvider\"\n            ],\n            \"aliases\": {\n                \"Clockwork\": \"Clockwork\\\\Support\\\\Laravel\\\\Facade\"\n            }\n        }\n    }\n}\n"
        }
      ]
    }
  ]
}