{
  "metadata": {
    "timestamp": 1736712335507,
    "page": 153,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "php-webdriver/php-webdriver",
      "stars": 5157,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0732421875,
          "content": "coverage_clover: ./logs/clover.xml\njson_path: ./logs/coveralls-upload.json\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.32421875,
          "content": "* text=auto\n\n/scripts export-ignore\n/tests export-ignore\n/tools export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/example.php export-ignore\n/phpunit.xml.dist export-ignore\n/.github export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/phpstan.neon export-ignore\n/.coveralls.yml export-ignore\n/logs export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.205078125,
          "content": "composer.phar\ncomposer.lock\nvendor\ntools/php-cs-fixer/vendor\n.php_cs.cache\n.php-cs-fixer.cache\n.phpunit.result.cache\nphpunit.xml\nlogs/\nbuild/\n\n# generic files to ignore\n*.lock\n*.DS_Store\n*~\n*.swp\n.idea\n.vscode\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 6.1025390625,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->notPath('Firefox/FirefoxProfile.php') // need to use str_* instead of mb_str_* methods\n    ->in([__DIR__ . '/lib', __DIR__ . '/tests']);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR2' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => ['statements' => ['return', 'try']],\n        'braces' => ['allow_single_line_anonymous_class_with_empty_body' => true, 'allow_single_line_closure' => true],\n        'cast_spaces' => true,\n        'class_attributes_separation' => ['elements' => ['method' => 'one', 'trait_import' => 'none']],\n        'clean_namespace' => true,\n        'combine_nested_dirname' => true,\n        'compact_nullable_typehint' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'declare_equal_normalize' => true,\n        //'declare_strict_types' => true, // TODO: used only in tests, use in lib in next major version\n        'fopen_flag_order' => true,\n        'fopen_flags' => true,\n        'full_opening_tag' => true,\n        'function_typehint_space' => true,\n        'heredoc_indentation' => ['indentation' => 'same_as_start'],\n        'implode_call' => true,\n        'is_null' => true,\n        'lambda_not_used_import' => true,\n        'list_syntax' => true,\n        'lowercase_cast' => true,\n        'lowercase_static_reference' => true,\n        'magic_constant_casing' => true,\n        'magic_method_casing' => true,\n        'mb_str_functions' => true,\n        'method_argument_space' => ['after_heredoc' => true],\n        'native_function_casing' => true,\n        'native_function_type_declaration_casing' => true,\n        'new_with_braces' => true,\n        'no_alias_functions' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_statement' => true,\n        'normalize_index_brace' => true,\n        'no_extra_blank_lines' => [\n            'tokens' => [\n                'break',\n                'case',\n                'continue',\n                'curly_brace_block',\n                'default',\n                'extra',\n                'parenthesis_brace_block',\n                'return',\n                'square_brace_block',\n                'switch',\n                'throw',\n                'use',\n            ],\n        ],\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_singleline_whitespace_before_semicolons' => true,\n        'no_superfluous_phpdoc_tags' => [\n            'allow_mixed' => true,\n            'remove_inheritdoc' => true,\n            'allow_unused_params' => true, // Used in RemoteWebDriver::createBySessionID to maintain BC\n        ],\n        'no_trailing_comma_in_singleline' => true,\n        'no_unreachable_default_argument_value' => true,\n        'no_unused_imports' => true,\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'no_useless_sprintf' => true,\n        'no_whitespace_before_comma_in_array' => ['after_heredoc' => true],\n        'no_whitespace_in_blank_line' => true,\n        'non_printable_character' => true,\n        'nullable_type_declaration' => [\n            'syntax' => 'question_mark',\n        ],\n        'nullable_type_declaration_for_default_null_value' => true,\n        'object_operator_without_whitespace' => true,\n        'ordered_class_elements' => true,\n        'ordered_imports' => true,\n        'php_unit_construct' => true,\n        'php_unit_dedicate_assert' => true,\n        'php_unit_dedicate_assert_internal_type' => true,\n        'php_unit_expectation' => ['target' => '8.4'],\n        'php_unit_method_casing' => ['case' => 'camel_case'],\n        'php_unit_mock_short_will_return' => true,\n        'php_unit_mock' => true,\n        'php_unit_namespaced' => ['target' => '6.0'],\n        'php_unit_no_expectation_annotation' => true,\n        'php_unit_set_up_tear_down_visibility' => true,\n        'php_unit_test_case_static_method_calls' => ['call_type' => 'this'],\n        'phpdoc_add_missing_param_annotation' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_no_access' => true,\n        // 'phpdoc_no_empty_return' => true, // disabled to allow forward compatibility with PHP 8.1\n        'phpdoc_no_package' => true,\n        'phpdoc_order_by_value' => ['annotations' => ['covers', 'group', 'throws']],\n        'phpdoc_order' => true,\n        'phpdoc_return_self_reference' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_trim' => true,\n        //'phpdoc_to_param_type' => true, // TODO: used only in tests, use in lib in next major version\n        //'phpdoc_to_return_type' => true, // TODO: used only in tests, use in lib in next major version\n        'phpdoc_types' => true,\n        'phpdoc_var_annotation_correct_order' => true,\n        'pow_to_exponentiation' => true,\n        'psr_autoloading' => true,\n        'random_api_migration' => true,\n        'self_accessor' => true,\n        'set_type_to_cast' => true,\n        'short_scalar_cast' => true,\n        'single_blank_line_before_namespace' => true,\n        'single_quote' => true,\n        'single_space_after_construct' => true,\n        'single_trait_insert_per_statement' => true,\n        'space_after_semicolon' => true,\n        'standardize_not_equals' => true,\n        'strict_param' => true,\n        'switch_continue_to_break' => true,\n        'ternary_operator_spaces' => true,\n        'ternary_to_elvis_operator' => true,\n        'ternary_to_null_coalescing' => true,\n        'trailing_comma_in_multiline' => ['elements' => ['arrays'], 'after_heredoc' => true],\n        'trim_array_spaces' => true,\n        'unary_operator_spaces' => true,\n        'visibility_required' => ['elements' => ['method', 'property', 'const']],\n        //'void_return' => true, // TODO: used only in tests, use in lib in next major version\n        'whitespace_after_comma_in_array' => true,\n        'yoda_style' => ['equal' => false, 'identical' => false, 'less_and_greater' => false],\n    ])\n    ->setRiskyAllowed(true)\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.34375,
          "content": "# Changelog\nThis project versioning adheres to [Semantic Versioning](http://semver.org/).\n\n## Unreleased\n\n## 1.15.2 - 2024-11-21\n### Fixed\n- PHP 8.4 deprecation notices, especially in nullable type-hints.\n- Docs: Fix static return types in RemoteWebElement phpDoc.\n- Tests: Disable chrome 127+ search engine pop-up in tests\n- Tests: Enable Shadow DOM tests in Geckodriver\n\n### Added\n- Tests: Allow running tests in headfull (not headless) mode using `DISABLE_HEADLESS` environment variable.\n\n### Changed\n- Docs: Update selenium server host URL in example.\n\n## 1.15.1 - 2023-10-20\n- Update `symfony/process` dependency to support upcoming Symfony 7.\n\n## 1.15.0 - 2023-08-29\n### Changed\n- Capability key `ChromeOptions::CAPABILITY_W3C` used to set ChromeOptions is now deprecated in favor of `ChromeOptions::CAPABILITY`, which now also contains the W3C compatible value (`goog:chromeOptions`).\n- ChromeOptions are now passed to the driver always as a W3C compatible key `goog:chromeOptions`, even in the deprecated OSS JsonWire payload (as ChromeDriver [supports](https://bugs.chromium.org/p/chromedriver/issues/detail?id=1786) this since 2017).\n- Improve Safari compatibility for `<select multilpe>` element.\n- Remove no longer needed compatibility layer with old Symfony.\n- Docs: Document exception throwing in findElement.\n\n### Fixed\n- Handle unexpected response when getting element(s) by throwing an exception, not triggering fatal error.\n\n## 1.14.0 - 2023-02-09\n### Added\n- `PhpWebDriverExceptionInterface` as a common interface to identify all exceptions thrown in php-webdriver.\n\n### Changed\n- Require PHP ^7.3.\n- Capabilities must be either explicitly provided or retrievable from Selenium Grid when resuing session with `createBySessionID()`.\n- Throw `UnexpectedResponseException` instead of `UnknownErrorException` in `findElement()` and `findElements()` methods.\n- Throw custom php-webdriver exceptions instead of native PHP SPL exceptions.\n- Do not mix internal non-W3C WebDriver exceptions, separate them into own namespaces.\n\n## 1.13.1 - 2022-10-11\n### Fixed\n- Do not fail when using `isDisplayed()` and capabilities are missing in WebDriver instance. (Happens when driver instance was created using `RemoteWebDriver::createBySessionID()`.)\n\n## 1.13.0 - 2022-10-03\n### Added\n- Support for current Firefox XPI extension format. Extensions could now be loaded into `FirefoxProfile` using `addExtension()` method.\n- `setProfile()` method to `FirefoxOptions`, which is now a preferred way to set Firefox Profile.\n- Element `isDisplayed()` can now be used even for browsers not supporting native API endpoint (like Safari), thanks to javascript atom workaround.\n\n### Changed\n- Handle errors when taking screenshots. `WebDriverException` is thrown if WebDriver returns empty or invalid screenshot data.\n- Deprecate `FirefoxDriver::PROFILE` constant. Instead, use `setProfile()` method of `FirefoxOptions` to set Firefox Profile.\n- Deprecate `getAllSessions()` method of `RemoteWebDriver` (which is not part of W3C WebDriver).\n- Increase default request timeout to 3 minutes (instead of 30 seconds).\n\n### Fixed\n- Throw `UnknownErrorException` instead of fatal error if remote end returns invalid response for `findElement()`/`findElements()` commands.\n\n## 1.12.1 - 2022-05-03\n### Fixed\n- Improper PHP documentation for `getAttribute()` and `getDomProperty()`.\n- Unsafe use of `static::` when accessing private property in `DesiredCapabilities`.\n- PHP 8.1 deprecations in the `Cookie` class.\n\n### Changed\n- Docs: Extend `findElement()`/`findElements()` method documentation to better explain XPath behavior.\n- Add `@return` and `@param` type annotations to Cookie class to avoid deprecations in PHP 8.1.\n\n## 1.12.0 - 2021-10-14\n### Added\n- `RemoteWebElement::getDomProperty()` method to read JavaScript properties of an element (like the value of `innerHTML` etc.) in W3C mode.\n- `WebDriverCommand::newSession()` constructor to create new session command without violating typehints.\n\n### Changed\n- Allow installation of Symfony 6 components.\n\n### Fixed\n- PHP 8.1 compatibility.\n\n## 1.11.1 - 2021-05-21\n### Fixed\n- `RemoteWebElement::getLocationOnScreenOnceScrolledIntoView()` was missing polyfill implementation for W3C mode and not working in eg. Safari.\n\n## 1.11.0 - 2021-05-03\n### Added\n- `FirefoxOptions` class to simplify passing Firefox capabilities. Usage is covered [in our wiki](https://github.com/php-webdriver/php-webdriver/wiki/Firefox#firefoxoptions).\n- `FirefoxDriver` to easy local start of Firefox instance without a need to start the `geckodriver` process manually. [See wiki](https://github.com/php-webdriver/php-webdriver/wiki/Firefox#start-directly-using-firefoxdriver-class) for usage examples.\n- Method `ChromeDriver::startUsingDriverService()` to be used for creating ChromeDriver instance with custom service.\n\n### Fixed\n- Driver capabilities received from the browser when creating now session were not set to the instance of ChromeDriver (when ChromeDriver::start() was used).\n\n### Changed\n- Deprecate `ChromeDriver::startSession`. However, the method was supposed to be used only internally.\n- KeyDown and KeyUp actions will throw an exception when not used with modifier keys.\n\n## 1.10.0 - 2021-02-25\n### Added\n- Support for sending Chrome DevTools Protocol commands (see details in [wiki](https://github.com/php-webdriver/php-webdriver/wiki/Chrome#chrome-devtools-protocol-cdp)).\n- Option to specify type of new window (window or tab) when using `$driver->switchTo()->newWindow()`.\n\n### Fixed\n- Actually start ChromeDriver in W3C mode if it is supported by the browser driver. Until now, when it was initialized using `ChromeDriver::start()`, it has always been unintentionally started in OSS mode.\n- ChromeOptions were ignored when passed to DesiredCapabilities as `ChromeOptions::CAPABILITY_W3C`.\n- Clicking a block element inside `<a>` element in Firefox (workaround for GeckoDriver bug [1374283](https://bugzilla.mozilla.org/show_bug.cgi?id=1374283)).\n\n### Changed\n- Throw `DriverServerDiedException` on local driver process terminating unexpectedly and provide full details of original exception to improve debugging.\n- Do not require `WEBDRIVER_CHROME_DRIVER` environment variable to be set if `chromedriver` binary is already available via system PATH.\n- Mark PhantomJS deprecated, as it is no longer developed and maintained.\n- Deprecate `RemoteWebDriver::newWindow()` in favor of `$driver->switchTo()->newWindow()`.\n- Don't escape slashes in CURL exception message to improve readability.\n\n## 1.9.0 - 2020-11-19\n### Added\n- Support of SameSite cookie property.\n- Command `RemoteWebDriver::newWindow()` for W3C mode to open new top-level browsing context (aka window).\n- PHP 8.0 support.\n\n## 1.8.3 - 2020-10-06\n### Fixed\n- Make `alertIsPresent()` condition working in W3C mode.\n- `RemoteWebDriver::create()` cannot be used without providing the second parameter (which is in fact optional).\n- `ChromeDriver::start()` starts in inconsistent state mixing W3C/OSS mode.\n- Modifier keys are not released when sending NULL key in GeckoDriver (workaround for GeckoDriver bug [1494661](https://bugzilla.mozilla.org/show_bug.cgi?id=1494661)).\n- Do not set unnecessary `binary` value of `goog:chromeOptions` while keep the object in proper data type required by ChromeDriver.\n\n## 1.8.2 - 2020-03-04\n### Changed\n- Reimplement element `equals()` method to be working in W3C mode.\n- New instance of `RemoteWebDriver` created via `createBySessionID()` by default expects W3C mode. This could be disabled using fifth parameter of `createBySessionID()`.\n- Disable JSON viewer in Firefox to let JSON response be rendered as-is.\n\n### Fixed\n- Properly read fifth parameter whether W3C compliant instance should be created when using `createBySessionID()`.\n- Creating of Firefox profile with libzip 1.6+ (eg. on Mac OS Catalina).\n\n## 1.8.1 - 2020-02-17\n### Fixed\n- Accept array as possible input to `sendKeys()` method. (Unintentional BC break in 1.8.0.)\n- Use relative offset when moving mouse pointer in W3C WebDriver mode.\n\n## 1.8.0 - 2020-02-10\n### Added\n- Experimental W3C WebDriver protocol support. The protocol will be used automatically when remote end (like Geckodriver, newer Chromedriver etc.) supports it.\n- `getStatus()` method of `RemoteWebDriver` to get information about remote-end readiness to create new sessions.\n- `takeElementScreenshot()` method of `RemoteWebElement` to do the obvious - take screenshot of the particular element.\n- Support for sending custom commands via `executeCustomCommand()`. See [wiki](https://github.com/php-webdriver/php-webdriver/wiki/Custom-commands) for more information.\n\n### Changed\n- The repository was migrated to [`php-webdriver/php-webdriver`](https://github.com/php-webdriver/php-webdriver/).\n- The Packagist package was renamed to [`php-webdriver/webdriver`](https://packagist.org/packages/php-webdriver/webdriver) and the original [`facebook/webdriver`](https://packagist.org/packages/facebook/webdriver) was marked as abandoned.\n- Revert no longer needed workaround for Chromedriver bug [2943](https://bugs.chromium.org/p/chromedriver/issues/detail?id=2943).\n- Allow installation of Symfony 5 components.\n- Rename environment variable used to pass path to ChromeDriver executable from `webdriver.chrome.driver` to `WEBDRIVER_CHROME_DRIVER`. However the old one also still works to keep backward compatibility\n- If subdirectories in a path to screenshot destination does not exists (using `takeScreenshot()` or `takeElementScreenshot()` methods), they are automatically created.\n- When zip archive cannot be created during file upload, throw an exception instead of silently returning false.\n- `WebDriverNavigation` and `EventFiringWebDriverNavigation` now both implement new `WebDriverNavigationInterface`.\n\n### Fixed\n- `WebDriverExpectedCondition::presenceOfElementLocated()` works correctly when used within `WebDriverExpectedCondition::not()`.\n- Improper behavior of Microsoft Edge when retrieving all cookies via `getCookies()` (it was causing fatal error  when there were no cookies).\n- Avoid \"path is not canonical\" error when uploading file to Chromedriver.\n\n## 1.7.1 - 2019-06-13\n### Fixed\n- Error `Call to a member function toArray()` if capabilities were already converted to an array.\n- Temporarily do not send capabilities to disable W3C WebDriver protocol when BrowserStack hub is used.\n\n## 1.7.0 - 2019-06-10\n### Added\n- `WebDriverCheckboxes` and `WebDriverRadios` helper classes to simplify interaction with checkboxes and radio buttons.\n\n### Fixed\n- Stop sending null values in Cookie object, which is against the protocol and may cause request to remote ends to fail.\n\n### Changed\n- Force Chrome to not use W3C WebDriver protocol.\n- Add workaround for Chromedriver bug [2943](https://bugs.chromium.org/p/chromedriver/issues/detail?id=2943) which breaks the protocol in Chromedriver 75.\n\n## 1.6.0 - 2018-05-16\n### Added\n- Connection and request timeouts could be specified also when creating RemoteWebDriver from existing session ID.\n- Update PHPDoc for functions that return static instances of a class.\n\n### Changed\n- Disable sending 'Expect: 100-Continue' header with POST requests, as they may more easily fail when sending via eg. squid proxy.\n\n## 1.5.0 - 2017-11-15\n### Changed\n- Drop PHP 5.5 support, the minimal required version of PHP is now PHP 5.6.\n- Allow installation of Symfony 4 components.\n\n### Added\n- Add a `visibilityOfAnyElementsLocated()` method to `WebDriverExpectedCondition`.\n\n## 1.4.1 - 2017-04-28\n### Fixed\n- Do not throw notice `Constant CURLOPT_CONNECTTIMEOUT_MS already defined`.\n\n## 1.4.0 - 2017-03-22\n### Changed\n- Cookies should now be set using `Cookie` value object instead of an array when passed to to `addCookie()` method of `WebDriverOptions`.\n- Cookies retrieved using `getCookieNamed()` and `getCookies()` methods of `WebDriverOptions` are now encapsulated in `Cookie` object instead of an plain array. The object implements `ArrayAccess` interface to provide backward compatibility.\n- `ext-zip` is now specified as required dependency in composer.json (but the extension was already required by the code, though).\n- Deprecate `WebDriverCapabilities::isJavascriptEnabled()` method.\n- Deprecate `textToBePresentInElementValue` expected condition in favor of `elementValueContains`.\n\n### Fixed\n- Do not throw fatal error when `null` is passed to `sendKeys()`.\n\n## 1.3.0 - 2017-01-13\n### Added\n- Added `getCapabilities()` method of `RemoteWebDriver`, to retrieve actual capabilities acknowledged by the remote driver on startup.\n- Added option to pass required capabilities when creating `RemoteWebDriver`. (So far only desired capabilities were supported.)\n- Added new expected conditions:\n    - `urlIs` - current URL exactly equals given value\n    - `urlContains` - current URL contains given text\n    - `urlMatches` - current URL matches regular expression\n    - `titleMatches` - current page title matches regular expression\n    - `elementTextIs` - text in element exactly equals given text\n    - `elementTextContains` (as an alias for `textToBePresentInElement`) - text in element contains given text\n    - `elementTextMatches` - text in element matches regular expression\n    - `numberOfWindowsToBe` - number of opened windows equals given number\n- Possibility to select option of `<select>` by its partial text (using `selectByVisiblePartialText()`).\n- `XPathEscaper` helper class to quote XPaths containing both single and double quotes.\n- `WebDriverSelectInterface`, to allow implementation of custom select-like components, eg. those not built around and actual select tag.\n\n### Changed\n- `Symfony\\Process` is used to start local WebDriver processes (when browsers are run directly, without Selenium server) to workaround some PHP bugs and improve portability.\n- Clarified meaning of selenium server URL variable in methods of `RemoteWebDriver` class.\n- Deprecated `setSessionID()` and `setCommandExecutor()` methods of `RemoteWebDriver` class; these values should be immutable and thus passed only via constructor.\n- Deprecated `WebDriverExpectedCondition::textToBePresentInElement()` in favor of `elementTextContains()`.\n- Throw an exception when attempting to deselect options of non-multiselect (it already didn't have any effect, but was silently ignored).\n- Optimize performance of `(de)selectByIndex()` and `getAllSelectedOptions()` methods of `WebDriverSelect` when used with non-multiple select element.\n\n### Fixed\n- XPath escaping in `select*()` and `deselect*()` methods of `WebDriverSelect`.\n\n## 1.2.0 - 2016-10-14\n- Added initial support of remote Microsoft Edge browser (but starting local EdgeDriver is still not supported).\n- Utilize late static binding to make eg. `WebDriverBy` and `DesiredCapabilities` classes easily extensible.\n- PHP version at least 5.5 is required.\n- Fixed incompatibility with Appium, caused by redundant params present in requests to Selenium server.\n\n## 1.1.3 - 2016-08-10\n- Fixed FirefoxProfile to support installation of extensions with custom namespace prefix in their manifest file.\n- Comply codestyle with [PSR-2](http://www.php-fig.org/psr/psr-2/).\n\n## 1.1.2 - 2016-06-04\n- Added ext-curl to composer.json.\n- Added CHANGELOG.md.\n- Added CONTRIBUTING.md with information and rules for contributors.\n\n## 1.1.1 - 2015-12-31\n- Fixed strict standards error in `ChromeDriver`.\n- Added unit tests for `WebDriverCommand` and `DesiredCapabilities`.\n- Fixed retrieving temporary path name in `FirefoxDriver` when `open_basedir` restriction is in effect.\n\n## 1.1.0 - 2015-12-08\n- FirefoxProfile improved - added possibility to set RDF file and to add datas for extensions.\n- Fixed setting 0 second timeout of `WebDriverWait`.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.1640625,
          "content": "MIT License\n\nCopyright (c) 2004-2020 Facebook\nCopyright (c) 2020-present [open-source contributors](https://github.com/php-webdriver/php-webdriver/graphs/contributors)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.39453125,
          "content": "# php-webdriver – Selenium WebDriver bindings for PHP\n\n[![Latest stable version](https://img.shields.io/packagist/v/php-webdriver/webdriver.svg?style=flat-square&label=Packagist)](https://packagist.org/packages/php-webdriver/webdriver)\n[![GitHub Actions build status](https://img.shields.io/github/actions/workflow/status/php-webdriver/php-webdriver/tests.yaml?style=flat-square&label=GitHub%20Actions)](https://github.com/php-webdriver/php-webdriver/actions)\n[![SauceLabs test status](https://img.shields.io/github/actions/workflow/status/php-webdriver/php-webdriver/sauce-labs.yaml?style=flat-square&label=SauceLabs)](https://saucelabs.com/u/php-webdriver)\n[![Total downloads](https://img.shields.io/packagist/dd/php-webdriver/webdriver.svg?style=flat-square&label=Downloads)](https://packagist.org/packages/php-webdriver/webdriver)\n\n## Description\nPhp-webdriver library is PHP language binding for Selenium WebDriver, which allows you to control web browsers from PHP.\n\nThis library is compatible with Selenium server version 2.x, 3.x and 4.x.\n\nThe library supports modern [W3C WebDriver](https://w3c.github.io/webdriver/) protocol, as well\nas legacy [JsonWireProtocol](https://www.selenium.dev/documentation/legacy/json_wire_protocol/).\n\nThe concepts of this library are very similar to the \"official\" Java, JavaScript, .NET, Python and Ruby libraries\nwhich are developed as part of the [Selenium project](https://github.com/SeleniumHQ/selenium/).\n\n## Installation\n\nInstallation is possible using [Composer](https://getcomposer.org/).\n\nIf you don't already use Composer, you can download the `composer.phar` binary:\n\n    curl -sS https://getcomposer.org/installer | php\n\nThen install the library:\n\n    php composer.phar require php-webdriver/webdriver\n\n## Upgrade from version <1.8.0\n\nStarting from version 1.8.0, the project has been renamed from `facebook/php-webdriver` to `php-webdriver/webdriver`.\n\nIn order to receive the new version and future updates, **you need to rename it in your composer.json**:\n\n```diff\n\"require\": {\n-    \"facebook/webdriver\": \"(version you use)\",\n+    \"php-webdriver/webdriver\": \"(version you use)\",\n}\n```\n\nand run `composer update`.\n\n## Getting started\n\n### 1. Start server (aka. remote end)\n\nTo control a browser, you need to start a *remote end* (server), which will listen to the commands sent\nfrom this library and will execute them in the respective browser.\n\nThis could be Selenium standalone server, but for local development, you can send them directly to so-called \"browser driver\" like Chromedriver or Geckodriver.\n\n#### a) Chromedriver\n\n📙 Below you will find a simple example. Make sure to read our wiki for [more information on Chrome/Chromedriver](https://github.com/php-webdriver/php-webdriver/wiki/Chrome).\n\nInstall the latest Chrome and [Chromedriver](https://sites.google.com/chromium.org/driver/downloads).\nMake sure to have a compatible version of Chromedriver and Chrome!\n\nRun `chromedriver` binary, you can pass `port` argument, so that it listens on port 4444:\n\n```sh\nchromedriver --port=4444\n```\n\n#### b) Geckodriver\n\n📙 Below you will find a simple example. Make sure to read our wiki for [more information on Firefox/Geckodriver](https://github.com/php-webdriver/php-webdriver/wiki/Firefox).\n\nInstall the latest Firefox and [Geckodriver](https://github.com/mozilla/geckodriver/releases).\nMake sure to have a compatible version of Geckodriver and Firefox!\n\nRun `geckodriver` binary (it start to listen on port 4444 by default):\n\n```sh\ngeckodriver\n```\n\n#### c) Selenium standalone server\n\nSelenium server can be useful when you need to execute multiple tests at once,\nwhen you run tests in several different browsers (like on your CI server), or when you need to distribute tests amongst\nseveral machines in grid mode (where one Selenium server acts as a hub, and others connect to it as nodes).\n\nSelenium server then act like a proxy and takes care of distributing commands to the respective nodes.\n\nThe latest version can be found on the [Selenium download page](https://www.selenium.dev/downloads/).\n\n📙 You can find [further Selenium server information](https://github.com/php-webdriver/php-webdriver/wiki/Selenium-server)\nin our wiki.\n\n#### d) Docker\n\nSelenium server could also be started inside Docker container - see [docker-selenium project](https://github.com/SeleniumHQ/docker-selenium).\n\n### 2. Create a Browser Session\n\nWhen creating a browser session, be sure to pass the url of your running server.\n\nFor example:\n\n```php\n// Chromedriver (if started using --port=4444 as above)\n$serverUrl = 'http://localhost:4444';\n// Geckodriver\n$serverUrl = 'http://localhost:4444';\n// selenium-server-standalone-#.jar (version 2.x or 3.x)\n$serverUrl = 'http://localhost:4444/wd/hub';\n// selenium-server-standalone-#.jar (version 4.x)\n$serverUrl = 'http://localhost:4444';\n```\n\nNow you can start browser of your choice:\n\n```php\nuse Facebook\\WebDriver\\Remote\\RemoteWebDriver;\n\n// Chrome\n$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::chrome());\n// Firefox\n$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::firefox());\n// Microsoft Edge\n$driver = RemoteWebDriver::create($serverUrl, DesiredCapabilities::microsoftEdge());\n```\n\n### 3. Customize Desired Capabilities\n\nDesired capabilities define properties of the browser you are about to start.\n\nThey can be customized:\n\n```php\nuse Facebook\\WebDriver\\Firefox\\FirefoxOptions;\nuse Facebook\\WebDriver\\Remote\\DesiredCapabilities;\n\n$desiredCapabilities = DesiredCapabilities::firefox();\n\n// Disable accepting SSL certificates\n$desiredCapabilities->setCapability('acceptSslCerts', false);\n\n// Add arguments via FirefoxOptions to start headless firefox\n$firefoxOptions = new FirefoxOptions();\n$firefoxOptions->addArguments(['-headless']);\n$desiredCapabilities->setCapability(FirefoxOptions::CAPABILITY, $firefoxOptions);\n\n$driver = RemoteWebDriver::create($serverUrl, $desiredCapabilities);\n```\n\nCapabilities can also be used to [📙 configure a proxy server](https://github.com/php-webdriver/php-webdriver/wiki/HowTo-Work-with-proxy) which the browser should use.\n\nTo configure browser-specific capabilities, you may use [📙 ChromeOptions](https://github.com/php-webdriver/php-webdriver/wiki/Chrome#chromeoptions)\nor [📙 FirefoxOptions](https://github.com/php-webdriver/php-webdriver/wiki/Firefox#firefoxoptions).\n\n* See [legacy JsonWire protocol](https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities) documentation or [W3C WebDriver specification](https://w3c.github.io/webdriver/#capabilities) for more details.\n\n### 4. Control your browser\n\n```php\n// Go to URL\n$driver->get('https://en.wikipedia.org/wiki/Selenium_(software)');\n\n// Find search element by its id, write 'PHP' inside and submit\n$driver->findElement(WebDriverBy::id('searchInput')) // find search input element\n    ->sendKeys('PHP') // fill the search box\n    ->submit(); // submit the whole form\n\n// Find element of 'History' item in menu by its css selector\n$historyButton = $driver->findElement(\n    WebDriverBy::cssSelector('#ca-history a')\n);\n// Read text of the element and print it to output\necho 'About to click to a button with text: ' . $historyButton->getText();\n\n// Click the element to navigate to revision history page\n$historyButton->click();\n\n// Make sure to always call quit() at the end to terminate the browser session\n$driver->quit();\n```\n\nSee [example.php](example.php) for full example scenario.\nVisit our GitHub wiki for [📙 php-webdriver command reference](https://github.com/php-webdriver/php-webdriver/wiki/Example-command-reference) and further examples.\n\n**NOTE:** Above snippets are not intended to be a working example by simply copy-pasting. See [example.php](example.php) for a working example.\n\n## Changelog\nFor latest changes see [CHANGELOG.md](CHANGELOG.md) file.\n\n## More information\n\nSome basic usage example is provided in [example.php](example.php) file.\n\nHow-tos are provided right here in [📙 our GitHub wiki](https://github.com/php-webdriver/php-webdriver/wiki).\n\nIf you don't use IDE, you may use [API documentation of php-webdriver](https://php-webdriver.github.io/php-webdriver/latest/).\n\nYou may also want to check out the Selenium project [docs](https://selenium.dev/documentation/en/) and [wiki](https://github.com/SeleniumHQ/selenium/wiki).\n\n## Testing framework integration\n\nTo take advantage of automatized testing you may want to integrate php-webdriver to your testing framework.\nThere are some projects already providing this:\n\n- [Symfony Panther](https://github.com/symfony/panther) uses php-webdriver and integrates with PHPUnit using `PantherTestCase`\n- [Laravel Dusk](https://laravel.com/docs/dusk) is another project using php-webdriver, could be used for testing via `DuskTestCase`\n- [Steward](https://github.com/lmc-eu/steward) integrates php-webdriver directly to [PHPUnit](https://phpunit.de/), and provides parallelization\n- [Codeception](https://codeception.com/) testing framework provides BDD-layer on top of php-webdriver in its [WebDriver module](https://codeception.com/docs/modules/WebDriver)\n- You can also check out this [blogpost](https://codeception.com/11-12-2013/working-with-phpunit-and-selenium-webdriver.html) + [demo project](https://github.com/DavertMik/php-webdriver-demo), describing simple [PHPUnit](https://phpunit.de/) integration\n\n## Support\n\nWe have a great community willing to help you!\n\n❓ Do you have a **question, idea or some general feedback**? Visit our [Discussions](https://github.com/php-webdriver/php-webdriver/discussions) page.\n(Alternatively, you can [look for many answered questions also on StackOverflow](https://stackoverflow.com/questions/tagged/php+selenium-webdriver)).\n\n🐛 Something isn't working, and you want to **report a bug**? [Submit it here](https://github.com/php-webdriver/php-webdriver/issues/new) as a new issue.\n\n📙 Looking for a **how-to** or **reference documentation**? See [our wiki](https://github.com/php-webdriver/php-webdriver/wiki).\n\n## Contributing ❤️\n\nWe love to have your help to make php-webdriver better. See [CONTRIBUTING.md](.github/CONTRIBUTING.md) for more information about contributing and developing php-webdriver.\n\nPhp-webdriver is community project - if you want to join the effort with maintaining and developing this library, the best is to look on [issues marked with \"help wanted\"](https://github.com/php-webdriver/php-webdriver/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\nlabel. Let us know in the issue comments if you want to contribute and if you want any guidance, and we will be delighted to help you to prepare your pull request.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.6357421875,
          "content": "{\n  \"name\": \"php-webdriver/webdriver\",\n  \"description\": \"A PHP client for Selenium WebDriver. Previously facebook/webdriver.\",\n  \"license\": \"MIT\",\n  \"type\": \"library\",\n  \"keywords\": [\n    \"webdriver\",\n    \"selenium\",\n    \"php\",\n    \"geckodriver\",\n    \"chromedriver\"\n  ],\n  \"homepage\": \"https://github.com/php-webdriver/php-webdriver\",\n  \"require\": {\n    \"php\": \"^7.3 || ^8.0\",\n    \"ext-curl\": \"*\",\n    \"ext-json\": \"*\",\n    \"ext-zip\": \"*\",\n    \"symfony/polyfill-mbstring\": \"^1.12\",\n    \"symfony/process\": \"^5.0 || ^6.0 || ^7.0\"\n  },\n  \"require-dev\": {\n    \"ergebnis/composer-normalize\": \"^2.20.0\",\n    \"ondram/ci-detector\": \"^4.0\",\n    \"php-coveralls/php-coveralls\": \"^2.4\",\n    \"php-mock/php-mock-phpunit\": \"^2.0\",\n    \"php-parallel-lint/php-parallel-lint\": \"^1.2\",\n    \"phpunit/phpunit\": \"^9.3\",\n    \"squizlabs/php_codesniffer\": \"^3.5\",\n    \"symfony/var-dumper\": \"^5.0 || ^6.0 || ^7.0\"\n  },\n  \"replace\": {\n    \"facebook/webdriver\": \"*\"\n  },\n  \"suggest\": {\n    \"ext-SimpleXML\": \"For Firefox profile creation\"\n  },\n  \"minimum-stability\": \"dev\",\n  \"autoload\": {\n    \"psr-4\": {\n      \"Facebook\\\\WebDriver\\\\\": \"lib/\"\n    },\n    \"files\": [\n      \"lib/Exception/TimeoutException.php\"\n    ]\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Facebook\\\\WebDriver\\\\\": [\n        \"tests/unit\",\n        \"tests/functional\"\n      ]\n    },\n    \"classmap\": [\n      \"tests/functional/\"\n    ]\n  },\n  \"config\": {\n    \"allow-plugins\": {\n      \"ergebnis/composer-normalize\": true\n    },\n    \"sort-packages\": true\n  },\n  \"scripts\": {\n    \"post-install-cmd\": [\n      \"@composer install --working-dir=tools/php-cs-fixer --no-progress --no-interaction\",\n      \"@composer install --working-dir=tools/phpstan --no-progress --no-interaction\"\n    ],\n    \"post-update-cmd\": [\n      \"@composer update --working-dir=tools/php-cs-fixer --no-progress --no-interaction\",\n      \"@composer update --working-dir=tools/phpstan --no-progress --no-interaction\"\n    ],\n    \"all\": [\n      \"@lint\",\n      \"@analyze\",\n      \"@test\"\n    ],\n    \"analyze\": [\n      \"@php tools/phpstan/vendor/bin/phpstan analyze -c phpstan.neon --ansi\",\n      \"@php tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --diff --dry-run -vvv --ansi\",\n      \"@php vendor/bin/phpcs --standard=PSR2 --ignore=*.js ./lib/ ./tests/\"\n    ],\n    \"fix\": [\n      \"@composer normalize\",\n      \"@php tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --diff -vvv || exit 0\",\n      \"@php vendor/bin/phpcbf --standard=PSR2 --ignore=*.js ./lib/ ./tests/\"\n    ],\n    \"lint\": [\n      \"@php vendor/bin/parallel-lint -j 10 ./lib ./tests example.php\",\n      \"@composer validate\",\n      \"@composer normalize --dry-run\"\n    ],\n    \"test\": [\n      \"@php vendor/bin/phpunit --colors=always\"\n    ]\n  }\n}\n"
        },
        {
          "name": "example.php",
          "type": "blob",
          "size": 2.2666015625,
          "content": "<?php\n\n// An example of using php-webdriver.\n// Do not forget to run composer install before. You must also have Selenium server started and listening on port 4444.\n\nnamespace Facebook\\WebDriver;\n\nuse Facebook\\WebDriver\\Remote\\DesiredCapabilities;\nuse Facebook\\WebDriver\\Remote\\RemoteWebDriver;\n\nrequire_once('vendor/autoload.php');\n\n// This is where Selenium, Chromedriver and Geckodriver 4 listens by default. For Selenium 2/3, use http://localhost:4444/wd/hub\n$host = 'http://localhost:4444/';\n\n$capabilities = DesiredCapabilities::chrome();\n\n$driver = RemoteWebDriver::create($host, $capabilities);\n\n// navigate to Selenium page on Wikipedia\n$driver->get('https://en.wikipedia.org/wiki/Selenium_(software)');\n\n// write 'PHP' in the search box\n$driver->findElement(WebDriverBy::id('searchInput')) // find search input element\n    ->sendKeys('PHP') // fill the search box\n    ->submit(); // submit the whole form\n\n// wait until 'PHP' is shown in the page heading element\n$driver->wait()->until(\n    WebDriverExpectedCondition::elementTextContains(WebDriverBy::id('firstHeading'), 'PHP')\n);\n\n// print title of the current page to output\necho \"The title is '\" . $driver->getTitle() . \"'\\n\";\n\n// print URL of current page to output\necho \"The current URL is '\" . $driver->getCurrentURL() . \"'\\n\";\n\n// find element of 'History' item in menu\n$historyButton = $driver->findElement(\n    WebDriverBy::cssSelector('#ca-history a')\n);\n\n// read text of the element and print it to output\necho \"About to click to button with text: '\" . $historyButton->getText() . \"'\\n\";\n\n// click the element to navigate to revision history page\n$historyButton->click();\n\n// wait until the target page is loaded\n$driver->wait()->until(\n    WebDriverExpectedCondition::titleContains('Revision history')\n);\n\n// print the title of the current page\necho \"The title is '\" . $driver->getTitle() . \"'\\n\";\n\n// print the URI of the current page\n\necho \"The current URI is '\" . $driver->getCurrentURL() . \"'\\n\";\n\n// delete all cookies\n$driver->manage()->deleteAllCookies();\n\n// add new cookie\n$cookie = new Cookie('cookie_set_by_selenium', 'cookie_value');\n$driver->manage()->addCookie($cookie);\n\n// dump current cookies to output\n$cookies = $driver->manage()->getCookies();\nprint_r($cookies);\n\n// terminate the session and close the browser\n$driver->quit();\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 1.5498046875,
          "content": "parameters:\n    level: 2\n    paths:\n        - lib/\n        - tests/\n\n    ignoreErrors:\n        # To be fixed in next major version:\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriver::getTouch\\(\\)#'\n          path: 'lib/Interactions/WebDriverTouchActions.php'\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriver::getTouch\\(\\)#'\n          path: 'lib/Support/Events/EventFiringWebDriver.php'\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriverElement::getCoordinates\\(\\)#'\n          path: 'lib/Support/Events/EventFiringWebElement.php'\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriverElement::equals\\(\\)#'\n          path: 'lib/Support/Events/EventFiringWebElement.php'\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriverElement::takeElementScreenshot\\(\\)#'\n          path: 'lib/Support/Events/EventFiringWebElement.php'\n        - message: '#Call to an undefined method Facebook\\\\WebDriver\\\\WebDriverElement::getShadowRoot\\(\\)#'\n          path: 'lib/Support/Events/EventFiringWebElement.php'\n        - '#Unsafe usage of new static\\(\\)#'\n\n        # Parameter is intentionally not part of signature to not break BC\n        - message: '#PHPDoc tag \\@param references unknown parameter: \\$isW3cCompliant#'\n          path: 'lib/Remote/RemoteWebDriver.php'\n        - message: '#PHPDoc tag \\@param references unknown parameter: \\$existingCapabilities#'\n          path: 'lib/Remote/RemoteWebDriver.php'\n\n    inferPrivatePropertyTypeFromConstructor: true\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.7177734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         colors=\"true\"\n         bootstrap=\"tests/bootstrap.php\"\n>\n    <testsuites>\n        <testsuite name=\"unit\">\n            <directory>tests/unit</directory>\n        </testsuite>\n        <testsuite name=\"functional\">\n            <directory>tests/functional</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory suffix=\".php\">./lib</directory>\n        </include>\n    </coverage>\n\n    <listeners>\n        <listener class=\"Facebook\\WebDriver\\ReportSauceLabsStatusListener\"/>\n    </listeners>\n</phpunit>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}