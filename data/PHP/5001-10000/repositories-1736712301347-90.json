{
  "metadata": {
    "timestamp": 1736712301347,
    "page": 90,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/oauth2-server",
      "stars": 6555,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3662109375,
          "content": "* text=auto\n\n/examples export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/.scrutinizer.yml export-ignore\n/.styleci.yml export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml.dist export-ignore\n/CHANGELOG.md export-ignore\n/CONTRIBUTING.md export-ignore\n/README.md export-ignore\n/CODE_OF_CONDUCT.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.130859375,
          "content": "/vendor\n/composer.lock\nphpunit.xml\n.phpunit.result.cache\n.idea\n/examples/vendor\nexamples/public.key\nexamples/private.key\nbuild\n*.orig\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 1.07421875,
          "content": "build:\n    environment:\n        php:\n            version: 8.3.3\n    nodes:\n        analysis:\n            tests:\n                override:\n                    - php-scrutinizer-run\nfilter:\n    excluded_paths:\n        - tests/*\n        - vendor/*\nchecks:\n    php:\n        code_rating: true\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\ntools:\n    external_code_coverage:\n        timeout: 1800\n    php_code_coverage: false\n    php_code_sniffer:\n        config:\n            standard: PSR2\n        filter:\n            paths: ['src']\n    php_loc:\n        enabled: true\n        excluded_dirs: [vendor, tests, examples]\n    php_cpd:\n        enabled: true\n        excluded_dirs: [vendor, tests, examples]\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.9638671875,
          "content": "preset: psr12\n\nrisky: true\n\nenabled:\n  - blank_line_before_return\n  - fully_qualified_strict_types\n  - hash_to_slash_comment\n  - include\n  - method_separation\n  - native_function_casing\n  - no_blank_lines_between_uses\n  - no_duplicate_semicolons\n  - no_multiline_whitespace_before_semicolons\n  - no_php4_constructor\n  - no_short_bool_cast\n  - no_singleline_whitespace_before_semicolons\n  - no_trailing_comma_in_singleline_array\n  - no_unused_imports\n  - no_whitespace_before_comma_in_array\n  - ordered_imports\n  - phpdoc_align\n  - phpdoc_indent\n  - phpdoc_inline_tag\n  - phpdoc_no_access\n  - phpdoc_no_simplified_null_return\n  - phpdoc_property\n  - phpdoc_scalar\n  - phpdoc_separation\n  - phpdoc_to_comment\n  - phpdoc_trim\n  - phpdoc_type_to_var\n  - phpdoc_types\n  - phpdoc_var_without_name\n  - print_to_echo\n  - short_array_syntax\n  - single_quote\n  - spaces_cast\n  - standardize_not_equal\n  - trailing_comma_in_multiline_array\n  - trim_array_spaces\n  - whitespace_after_comma_in_array\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 36.236328125,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n### Changed\n- Key permission checks ignored on Windows regardless of userland choice as cannot be run successfully on this OS (PR #1447)\n\n## [9.1.0] - released 2024-11-21\n### Added\n- Support for PHP 8.4 (PR #1454)\n\n### Fixed\n- In the Auth Code grant, when requesting an access token with an invalid auth code, we now respond with an invalid_grant error instead of invalid_request (PR #1433)\n- Fixed spec compliance issue where device access token request was mistakenly expecting to receive scopes in the request (PR #1412)\n- Refresh tokens pre version 9 might have had user IDs set as ints which meant they were incorrectly rejected. We now cast these values to strings to allow old refresh tokens (PR #1436)\n- Fixed bug on setting interval visibility of device authorization grant (PR #1410)\n- Fix a bug where the new poll date were not persisted when `slow_down` error happens, because the exception is thrown before calling `persistDeviceCode`. (PR #1410)\n- Fix a bug where `slow_down` error response may have been returned even after the user has completed the auth flow (already approved / denied the request). (PR #1410)\n\n## [9.0.1] - released 2024-10-14\n### Fixed\n- Auto-generated event emitter is now persisted. Previously, a new emitter was generated every time (PR #1428)\n- Fixed bug where you could not omit a redirect uri even if one had not been specified during the auth request (PR #1428)\n- Fixed bug where \"state\" parameter wasn't present on `invalid_scope` error response and wasn't on fragment part of `access_denied` redirect URI on Implicit grant (PR #1298)\n- Fixed bug where disabling refresh token revocation via `revokeRefreshTokens(false)` unintentionally disables issuing new refresh token (PR #1449)\n\n## [9.0.0] - released 2024-05-13\n### Added\n- Device Authorization Grant added (PR #1074)\n- GrantTypeInterface has a new function, `revokeRefreshTokens()` for enabling or disabling refresh tokens after use (PR #1375)\n- A CryptKeyInterface to allow developers to change the CryptKey implementation with greater ease (PR #1044)\n- The authorization server can now finalize scopes when a client uses a refresh token (PR #1094)\n- An AuthorizationRequestInterface to make it easier to extend the AuthorizationRequest (PR #1110)\n- Added function `getKeyContents()` to the `CryptKeyInterface` (PR #1375)\n\n### Fixed\n- Basic authorization is now case insensitive (PR #1403)\n- If a refresh token has expired, been revoked, cannot be decrypted, or does not belong to the correct client, the server will now issue an `invalid_grant` error and a HTTP 400 response. In previous versions the server incorrectly issued an `invalid_request` and HTTP 401 response (PR #1042) (PR #1082)\n\n### Changed\n- All interfaces now specify types for all params and return values. Strict typing enforced (PR #1074)\n- Request parameters are now parsed into strings to use internally in the library (PR #1402)\n- Authorization Request objects are now created through the factory method, `createAuthorizationRequest()` (PR #1111)\n- Changed parameters for `finalizeScopes()` to allow a reference to an auth code ID (PR #1112)\n- AccessTokenEntityInterface now requires the implementation of `toString()` instead of the magic method `__toString()` (PR #1395)\n\n### Removed\n- Removed message property from OAuthException HTTP response. Now just use error_description as per the OAuth 2 spec (PR #1375)\n\n## [9.0.0-RC1] - released 2024-03-27\n### Added\n- Device Authorization Grant added (PR #1074)\n- GrantTypeInterface has a new function, `revokeRefreshTokens()` for enabling or disabling refresh tokens after use (PR #1375)\n- A CryptKeyInterface to allow developers to change the CryptKey implementation with greater ease (PR #1044)\n- The authorization server can now finalize scopes when a client uses a refresh token (PR #1094)\n- An AuthorizationRequestInterface to make it easier to extend the AuthorizationRequest (PR #1110)\n- Added function `getKeyContents()` to the `CryptKeyInterface` (PR #1375)\n\n### Fixed\n- If a refresh token has expired, been revoked, cannot be decrypted, or does not belong to the correct client, the server will now issue an `invalid_grant` error and a HTTP 400 response. In previous versions the server incorrectly issued an `invalid_request` and HTTP 401 response (PR #1042) (PR #1082)\n\n### Changed\n- Authorization Request objects are now created through the factory method, `createAuthorizationRequest()` (PR #1111)\n- Changed parameters for `finalizeScopes()` to allow a reference to an auth code ID (PR #1112)\n- AccessTokenEntityInterface now requires the implementation of `toString()` instead of the magic method `__toString()` (PR #1395)\n\n### Removed\n- Removed message property from OAuthException HTTP response. Now just use error_description as per the OAuth 2 spec (PR #1375)\n\n## [8.5.4] - released 2023-08-25\n### Added\n- Support for league/uri ^7.0 (PR #1367)\n\n## [8.5.3] - released 2023-07-06\n### Security\n- If a key string is provided to the CryptKey constructor with an invalid\npassphrase, the LogicException message generated will expose the given key.\nThe key is no longer leaked via this exception (PR #1353)\n\n## [8.5.2] - released 2023-06-16\n### Changed\n- Bumped the versions for laminas/diactoros and psr/http-message to support\nPSR-7 v2.0 (PR #1339)\n\n## [8.5.1] - released 2023-04-04\n### Fixed\n- Fixed PHP version constraints and lcobucci/clock version constraint to support PHP 8.1 (PR #1336)\n\n## [8.5.0] - released 2023-04-03\n### Added\n- Support for PHP 8.1 and 8.2 (PR #1333)\n\n### Removed\n- Support PHP 7.2, 7.3, and 7.4 (PR #1333)\n\n## [8.4.1] - released 2023-03-22\n### Fixed\n- Fix deprecation notices for PHP 8.x (PR #1329)\n\n## [8.4.0] - released 2023-02-15\n### Added\n- You can now set a leeway for time drift between servers when validating a JWT (PR #1304)\n\n### Security\n- Access token requests that contain a code_verifier but are not bound to a code_challenge will be rejected to prevent\na PKCE downgrade attack (PR #1326)\n\n## [8.3.6] - released 2022-11-14\n### Fixed\n- Use LooseValidAt instead of StrictValidAt so that users aren't forced to use claims such as NBF in their JWT tokens (PR #1312)\n\n## [8.3.5] - released 2022-05-12\n### Fixed\n- Use InMemory::plainText('empty', 'empty') instead of InMemory::plainText('') to avoid [new empty string exception](https://github.com/lcobucci/jwt/pull/833) thrown by lcobucci/jwt (PR #1282)\n\n## [8.3.4] - released 2022-04-07\n### Fixed\n- Server previously rejected valid uris with custom schemes. Now use league/uri for parsing to accept all valid uris (PR #1274)\n\n## [8.3.3] - released 2021-10-11\n### Security\n- Removed the use of `LocalFileReference()` in lcobucci/jwt. Function deprecated as per [GHSA-7322-jrq4-x5hf](https://github.com/lcobucci/jwt/security/advisories/GHSA-7322-jrq4-x5hf) (PR #1249)\n\n## [8.3.2] - released 2021-07-27\n### Changed\n- Conditionally support the `StrictValidAt()` method in lcobucci/jwt so we can use version 4.1.x or greater of the library (PR #1236)\n- When providing invalid credentials, the library now responds with the error message _The user credentials were incorrect_ (PR #1230)\n- Keys are always stored in memory now and are not written to a file in the /tmp directory (PR #1180)\n- The regex for matching the bearer token has been simplified (PR #1238)\n\n## [8.3.1] - released 2021-06-04\n### Fixed\n- Revert check on clientID. We will no longer require this to be a string (PR #1233)\n\n## [8.3.0] - released 2021-06-03\n### Added\n- The server will now validate redirect uris according to rfc8252 (PR #1203)\n- Events emitted now include the refresh token and access token payloads (PR #1211)\n- Use the `revokeRefreshTokens()` function to decide whether refresh tokens are revoked or not upon use (PR #1189)\n\n### Changed\n- Keys are now validated using `openssl_pkey_get_private()` and `openssl_pkey_get_public()` instead of regex matching (PR #1215)\n\n### Fixed\n- The server will now only recognise and handle an authorization header if the value of the header is non-empty. This is to circumvent issues where some common frameworks set this header even if no value is present (PR #1170)\n- Added type validation for redirect uri, client ID, client secret, scopes, auth code, state, username, and password inputs (PR #1210)\n- Allow scope \"0\" to be used. Previously this was removed from a request because it failed an `empty()` check (PR #1181)\n\n## [8.2.4] - released 2020-12-10\n### Fixed\n- Reverted the enforcement of at least one redirect_uri for a client. This change has instead been moved to version 9 (PR #1169)\n\n## [8.2.3] - released 2020-12-02\n### Added\n- Re-added support for PHP 7.2 (PR #1165, #1167)\n\n## [8.2.2] - released 2020-11-30\n### Fixed\n- Fix issue where the private key passphrase isn't correctly passed to JWT library (PR #1164)\n\n## [8.2.1] - released 2020-11-26\n### Fixed\n- If you have a password on your private key, it is now passed correctly to the JWT configuration object. (PR #1159)\n\n## [8.2.0] - released 2020-11-25\n### Added\n- Add a `getRedirectUri` function to the `OAuthServerException` class (PR #1123)\n- Support for PHP 8.0 (PR #1146)\n\n### Removed\n- Removed support for PHP 7.2 (PR #1146)\n\n### Fixed\n- Fix typo in parameter hint. `code_challenged` changed to `code_challenge`. Thrown by Auth Code Grant when the code challenge does not match the regex. (PR #1130)\n- Undefined offset was returned when no client redirect URI was set. Now throw an invalidClient exception if no redirect URI is set against a client (PR #1140)\n\n## [8.1.1] - released 2020-07-01\n\n### Fixed\n- If you provide a valid redirect_uri with the auth code grant and an invalid scope, the server will use the given\nredirect_uri instead of the default client redirect uri (PR #1126)\n\n## [8.1.0] - released 2020-04-29\n\n### Added\n- Added support for PHP 7.4 (PR #1075)\n\n### Changed\n- If an error is encountered when running `preg_match()` to validate an RSA key, the server will now throw a RuntimeException (PR #1047)\n- Replaced deprecated methods with recommended ones when using `Lcobucci\\JWT\\Builder` to build a JWT token. (PR #1060)\n- When storing a key, we no longer touch the file before writing it as this is an unnecessary step (PR #1064)\n- Prefix native PHP functions in namespaces with backslashes for micro-optimisations (PR #1071)\n\n### Removed\n- Support for PHP 7.1 (PR #1075)\n\n### Fixed\n- Clients are now explicitly prevented from using the Client Credentials grant unless they are confidential to conform\n with the OAuth2 spec (PR #1035)\n- Abstract method `getIdentifier()` added to AccessTokenTrait. The trait cannot be used without the `getIdentifier()`\nmethod being defined (PR #1051)\n- An exception is now thrown if a refresh token is accidentally sent in place of an authorization code when using the\nAuth Code Grant (PR #1057)\n- Can now send access token request without being forced to specify a redirect URI (PR #1096)\n- In the BearerTokenValidator, if an implementation is using PDO, there is a possibility that a RuntimeException will be thrown when checking if an access token is revoked. This scenario no longer incorrectly issues an exception with a hint mentioning an issue with JSON decoding. (PR #1107)\n\n## [8.0.0] - released 2019-07-13\n\n### Added\n- Flag, `requireCodeChallengeForPublicClients`, used to reject public clients that do not provide a code challenge for the Auth Code Grant; use AuthCodeGrant::disableRequireCodeCallengeForPublicClients() to turn off this requirement (PR #938)\n- Public clients can now use the Auth Code Grant (PR #938)\n- `isConfidential` getter added to `ClientEntity` to identify type of client (PR #938)\n- Function `validateClient()` added to validate clients which was previously performed by the `getClientEntity()` function (PR #938)\n- Add a new function to the AbstractGrant class called `getClientEntityOrFail()`. This is a wrapper around the `getClientEntity()` function that ensures we emit and throw an exception if the repo doesn't return a client entity. (PR #1010)\n\n### Changed\n- Replace `convertToJWT()` interface with a more generic `__toString()` to improve extensibility; AccessTokenEntityInterface now requires `setPrivateKey(CryptKey $privateKey)` so `__toString()` has everything it needs to work (PR #874)\n- The `invalidClient()` function accepts a PSR-7 compliant `$serverRequest` argument to avoid accessing the `$_SERVER` global variable and improve testing (PR #899)\n- `issueAccessToken()` in the Abstract Grant no longer sets access token client, user ID or scopes. These values should already have been set when calling `getNewToken()` (PR #919)\n- No longer need to enable PKCE with `enableCodeExchangeProof` flag. Any client sending a code challenge will initiate PKCE checks. (PR #938)\n- Function `getClientEntity()` no longer performs client validation (PR #938)\n- Password Grant now returns an invalid_grant error instead of invalid_credentials if a user cannot be validated (PR #967)\n- Use `DateTimeImmutable()` instead of `DateTime()`, `time()` instead of `(new DateTime())->getTimeStamp()`, and `DateTime::getTimeStamp()` instead of `DateTime::format('U')` (PR #963)\n\n### Removed\n- `enableCodeExchangeProof` flag (PR #938)\n- Support for PHP 7.0 (PR #1014)\n- Remove JTI claim from JWT header (PR #1031)\n\n## [7.4.0] - released 2019-05-05\n\n### Changed\n- RefreshTokenRepository can now return null, allowing refresh tokens to be optional. (PR #649)\n\n## [7.3.3] - released 2019-03-29\n\n### Added\n- Added `error_description` to the error payload to improve standards compliance. The contents of this are copied from the existing `message` value. (PR #1006)\n\n### Deprecated\n- Error payload will not issue `message` value in the next major release (PR #1006)\n\n## [7.3.2] - released 2018-11-21\n\n### Fixed\n- Revert setting keys on response type to be inside `getResponseType()` function instead of AuthorizationServer constructor (PR #969)\n\n## [7.3.1] - released 2018-11-15\n\n### Fixed\n- Fix issue with previous release where interface had changed for the AuthorizationServer. Reverted to the previous interface while maintaining functionality changes (PR #970)\n\n## [7.3.0] - released 2018-11-13\n\n### Changed\n- Moved the `finalizeScopes()` call from `validateAuthorizationRequest` method to the `completeAuthorizationRequest` method so it is called just before the access token is issued (PR #923)\n\n### Added\n- Added a ScopeTrait to provide an implementation for jsonSerialize (PR #952)\n- Ability to nest exceptions (PR #965)\n\n### Fixed\n- Fix issue where AuthorizationServer is not stateless as ResponseType could store state of a previous request (PR #960)\n\n## [7.2.0] - released 2018-06-23\n\n### Changed\n- Added new`validateRedirectUri` method AbstractGrant to remove three instances of code duplication (PR #912)\n- Allow 640 as a crypt key file permission (PR #917)\n\n### Added\n- Function `hasRedirect()` added to `OAuthServerException` (PR #703)\n\n### Fixed\n- Catch and handle `BadMethodCallException` from the `verify()` method of the JWT token in the `validateAuthorization` method (PR #904)\n\n## [4.1.7] - released 2018-06-23\n\n### Fixed\n- Ensure `empty()` function call only contains variable to be compatible with PHP 5.4 (PR #918)\n\n## [7.1.1] - released 2018-05-21\n\n### Fixed\n- No longer set a WWW-Authenticate header for invalid clients if the client did not send an Authorization header in the original request (PR #902)\n\n## [7.1.0] - released 2018-04-22\n\n### Changed\n- Changed hint for unsupportedGrantType exception so it no longer references the grant type parameter which isn't always expected (PR #893)\n- Upgrade PHPStan checks to level 7 (PR #856)\n\n### Added\n- Added event emitters for issued access and refresh tokens (PR #860)\n- Can now use Defuse\\Crypto\\Key for encryption/decryption of keys which is faster than the Cryto class (PR #812)\n\n### Removed\n- Remove paragone/random_compat from dependencies\n\n## [7.0.0] - released 2018-02-18\n\n### Added\n- Use PHPStan for static analysis of code (PR #848)\n- Enforce stricter static analysis checks and upgrade library dependencies (PR #852)\n- Provide PHPStan coverage for tests and update PHPUnit (PR #849)\n- Get and set methods for OAuth Server Exception payloads. Allow implementer to specify the JSON encode options (PR #719)\n\n### Changed\n- ClientRepository interface will now accept null for the Grant type to improve extensibility options (PR #607)\n- Do not issue an error if key file permissions are 400 or 440 (PR #839)\n- Skip key file creation if the file already exists (PR #845)\n- Change changelog format and update readme\n\n### Removed\n- Support for PHP 5.6\n- Support for version 5.x and 6.x of the library\n\n### Fixed\n- PKCE implementation (PR #744)\n- Set correct redirect URI when validating scopes (PR #840)\n- S256 code challenege method (PR #842)\n- Accept RSA key with CRLF line endings (PR #805)\n\n## [6.1.1] - 2017-12-23\n\n- Removed check on empty scopes\n\n## [6.1.0] - 2017-12-23\n\n- Changed the token type issued by the Implicit Grant to be Bearer instead of bearer. (PR #724)\n- Replaced call to array_key_exists() with the faster isset() on the Implicit Grant. (PR #749)\n- Allow specification of query delimiter character in the Password Grant (PR #801)\n- Add Zend Diactoros library dependency to examples (PR #678)\n- Can set default scope for the authorization endpoint. If no scope is passed during an authorization request, the default scope will be used if set. If not, the server will issue an invalid scope exception (PR #811)\n- Added validation for redirect URIs on the authorization end point to ensure exactly one redirection URI has been passed (PR #573)\n\n## [6.0.2] - 2017-08-03\n\n- An invalid refresh token that can't be decrypted now returns a HTTP 401 error instead of HTTP 400 (Issue #759)\n- Removed chmod from CryptKey and add toggle to disable checking (Issue #776)\n- Fixes invalid code challenge method payload key name (Issue #777)\n\n## [6.0.1] - 2017-07-19\n\nTo address feedback from the security release the following change has been made:\n\n- If an RSA key cannot be chmod'ed to 600 then it will now throw a E_USER_NOTICE instead of an exception.\n\n## [6.0.0] - 2017-07-01\n\n- Breaking change: The `AuthorizationServer` constructor now expects an encryption key string instead of a public key\n- Remove support for HHVM\n- Remove support for PHP 5.5\n\n## [5.1.4] - 2017-07-01\n\n- Fixed multiple security vulnerabilities as a result of a security audit paid for by the [Mozilla Secure Open Source Fund](https://wiki.mozilla.org/MOSS/Secure_Open_Source). All users of this library are encouraged to update as soon as possible to this version or version 6.0 or greater.\n- It is recommended on each `AuthorizationServer` instance you set the `setEncryptionKey()`. This will result in stronger encryption being used. If this method is not set messages will be sent to the defined error handling routines (using `error_log`). Please see the examples and documentation for examples.\n- TravisCI now tests PHP 7.1 (Issue #671)\n- Fix middleware example fatal error (Issue #682)\n- Fix typo in the first README sentence (Issue #690)\n- Corrected DateInterval from 1 min to 1 month (Issue #709)\n\n## [5.1.3] - 2016-10-12\n\n- Fixed WWW-Authenticate header (Issue #669)\n- Increase the recommended RSA key length from 1024 to 2048 bits (Issue #668)\n\n## [5.1.2] - 2016-09-19\n\n- Fixed `finalizeScopes` call (Issue #650)\n\n## [4.1.6] - 2016-09-13\n\n- Less restrictive on Authorization header check (Issue #652)\n\n## [5.1.1] - 2016-07-26\n\n- Improved test suite (Issue #614)\n- Updated docblocks (Issue #616)\n- Replace `array_shift` with `foreach` loop (Issue #621)\n- Allow easy addition of custom fields to Bearer token response (Issue #624)\n- Key file auto-generation from string (Issue #625)\n\n## [5.1.0] - 2016-06-28\n\n- Implemented RFC7636 (Issue #574)\n- Unify middleware exception responses (Issue #578)\n- Updated examples (Issue #589)\n- Ensure state is in access denied redirect (Issue #597)\n- Remove redundant `isExpired()` method from entity interfaces and traits (Issue #600)\n- Added a check for unique access token constraint violation (Issue #601)\n- Look at Authorization header directly for HTTP Basic auth checks (Issue #604)\n- Added catch Runtime exception when parsing JWT string (Issue #605)\n- Allow `paragonie/random_compat` 2.x (Issue #606)\n- Added `indigophp/hash-compat` to Composer suggestions and `require-dev` for PHP 5.5 support\n\n## [5.0.3] - 2016-05-04\n\n- Fix hints in PasswordGrant (Issue #560)\n- Add meaning of `Resource owner` to terminology.md (Issue #561)\n- Use constant for event name instead of explicit string (Issue #563)\n- Remove unused request property (Issue #564)\n- Correct wrong phpdoc (Issue #569)\n- Fixed typo in exception string (Issue #570)\n\n## [5.0.2] - 2016-04-18\n\n- `state` parameter is now correctly returned after implicit grant authorization\n- Small code and docblock improvements\n\n## [5.0.1] - 2016-04-18\n\n- Fixes an issue (#550) whereby it was unclear whether or not to validate a client's secret during a request.\n\n## [5.0.0] - 2016-04-17\n\nVersion 5 is a complete code rewrite.\n\n- Renamed Server class to AuthorizationServer\n- Added ResourceServer class\n- Run unit tests again PHP 5.5.9 as it's the minimum supported version\n- Enable PHPUnit 5.0 support\n- Improved examples and documentation\n- Make it clearer that the implicit grant doesn't support refresh tokens\n- Improved refresh token validation errors\n- Fixed refresh token expiry date\n\n## [5.0.0-RC2] - 2016-04-10\n\n- Allow multiple client redirect URIs (Issue #511)\n- Remove unused mac token interface (Issue #503)\n- Handle RSA key passphrase (Issue #502)\n- Remove access token repository from response types (Issue #501)\n- Remove unnecessary methods from entity interfaces (Issue #490)\n- Ensure incoming JWT hasn't expired (Issue #509)\n- Fix client identifier passed where user identifier is expected (Issue #498)\n- Removed built-in entities; added traits to for quick re-use (Issue #504)\n- Redirect uri is required only if the \"redirect_uri\" parameter was included in the authorization request (Issue #514)\n- Removed templating for auth code and implicit grants (Issue #499)\n\n## [5.0.0-RC1] - 2016-03-24\n\nVersion 5 is a complete code rewrite.\n\n- JWT support\n- PSR-7 support\n- Improved exception errors\n- Replace all occurrences of the term \"Storage\" with \"Repository\"\n- Simplify repositories\n- Entities conform to interfaces and use traits\n- Auth code grant updated\n  - Allow support for public clients\n  - Add support for #439\n- Client credentials grant updated\n- Password grant updated\n  - Allow support for public clients\n- Refresh token grant updated\n- Implement Implicit grant\n- Bearer token output type\n- Remove MAC token output type\n- Authorization server rewrite\n- Resource server class moved to PSR-7 middleware\n- Tests\n- Much much better documentation\n\n## [4.1.5] - 2016-01-04\n\n- Enable Symfony 3.0 support (#412)\n\n## [4.1.4] - 2015-11-13\n\n- Fix for determining access token in header (Issue #328)\n- Refresh tokens are now returned for MAC responses (Issue #356)\n- Added integration list to readme (Issue #341)\n- Expose parameter passed to exceptions (Issue #345)\n- Removed duplicate routing setup code (Issue #346)\n- Docs fix (Issues #347, #360, #380)\n- Examples fix (Issues #348, #358)\n- Fix typo in docblock (Issue #352)\n- Improved timeouts for MAC tokens (Issue #364)\n- `hash_hmac()` should output raw binary data, not hexits (Issue #370)\n- Improved regex for matching all Base64 characters (Issue #371)\n- Fix incorrect signature parameter (Issue #372)\n- AuthCodeGrant and RefreshTokenGrant don't require client_secret (Issue #377)\n- Added priority argument to event listener (Issue #388)\n\n## [4.1.3] - 2015-03-22\n\n- Docblock, namespace and inconsistency fixes (Issue #303)\n- Docblock type fix (Issue #310)\n- Example bug fix (Issue #300)\n- Updated league/event to ~2.1 (Issue #311)\n- Fixed missing session scope (Issue #319)\n- Updated interface docs (Issue #323)\n- `.travis.yml` updates\n\n## [4.1.2] - 2015-01-01\n\n- Remove side-effects in hash_equals() implementation (Issue #290)\n\n## [4.1.1] - 2014-12-31\n\n- Changed `symfony/http-foundation` dependency version to `~2.4` so package can be installed in Laravel `4.1.*`\n\n## [4.1.0] - 2014-12-27\n\n- Added MAC token support (Issue #158)\n- Fixed example init code (Issue #280)\n- Toggle refresh token rotation (Issue #286)\n- Docblock fixes\n\n## [4.0.5] - 2014-12-15\n\n- Prevent duplicate session in auth code grant (Issue #282)\n\n## [4.0.4] - 2014-12-03\n\n- Ensure refresh token hasn't expired (Issue #270)\n\n## [4.0.3] - 2014-12-02\n\n- Fix bad type hintings (Issue #267)\n- Do not forget to set the expire time (Issue #268)\n\n## [4.0.2] - 2014-11-21\n\n- Improved interfaces (Issue #255)\n- Learnt how to spell delimiter and so `getScopeDelimiter()` and `setScopeDelimiter()` methods have been renamed\n- Docblock improvements (Issue #254)\n\n## [4.0.1] - 2014-11-09\n\n- Alias the master branch in composer.json (Issue #243)\n- Numerous PHP CodeSniffer fixes (Issue #244)\n- .travis.yml update (Issue #245)\n- The getAccessToken method should return an AccessTokenEntity object instead of a string in ResourceServer.php (#246)\n\n## [4.0.0] - 2014-11-08\n\n- Complete rewrite\n- Check out the documentation - [http://oauth2.thephpleague.com](http://oauth2.thephpleague.com)\n\n## [3.2.0] - 2014-04-16\n\n- Added the ability to change the algorithm that is used to generate the token strings (Issue #151)\n\n## [3.1.2] - 2014-02-26\n\n- Support Authorization being an environment variable. [See more](http://fortrabbit.com/docs/essentials/quirks-and-constraints#authorization-header)\n\n## [3.1.1] - 2013-12-05\n\n- Normalize headers when `getallheaders()` is available (Issues #108 and #114)\n\n## [3.1.0] - 2013-12-05\n\n- No longer necessary to inject the authorisation server into a grant, the server will inject itself\n- Added test for 1419ba8cdcf18dd034c8db9f7de86a2594b68605\n\n## [3.0.1] - 2013-12-02\n\n- Forgot to tell TravisCI from testing PHP 5.3\n\n## [3.0.0] - 2013-12-02\n\n- Fixed spelling of Implicit grant class (Issue #84)\n- Travis CI now tests for PHP 5.5\n- Fixes for checking headers for resource server (Issues #79 and #)\n- The word \"bearer\" now has a capital \"B\" in JSON output to match OAuth 2.0 spec\n- All grants no longer remove old sessions by default\n- All grants now support custom access token TTL (Issue #92)\n- All methods which didn't before return a value now return `$this` to support method chaining\n- Removed the build in DB providers - these will be put in their own repos to remove baggage in the main repository\n- Removed support for PHP 5.3 because this library now uses traits and will use other modern PHP features going forward\n- Moved some grant related functions into a trait to reduce duplicate code\n\n## [2.1.1] - 2013-06-02\n\n- Added conditional `isValid()` flag to check for Authorization header only (thanks @alexmcroberts)\n- Fixed semantic meaning of `requireScopeParam()` and `requireStateParam()` by changing their default value to true\n- Updated some duff docblocks\n- Corrected array key call in Resource.php (Issue #63)\n\n## [2.1.0] - 2013-05-10\n\n- Moved zetacomponents/database to \"suggest\" in composer.json. If you rely on this feature you now need to include \" zetacomponents/database\" into \"require\" key in your own composer.json. (Issue #51)\n- New method in Refresh grant called `rotateRefreshTokens()`. Pass in `true` to issue a new refresh token each time an access token is refreshed. This parameter needs to be set to true in order to request reduced scopes with the new access token. (Issue #47)\n- Rename `key` column in oauth_scopes table to `scope` as `key` is a reserved SQL word. (Issue #45)\n- The `scope` parameter is no longer required by default as per the RFC. (Issue #43)\n- You can now set multiple default scopes by passing an array into `setDefaultScope()`. (Issue #42)\n- The password and client credentials grants now allow for multiple sessions per user. (Issue #32)\n- Scopes associated to authorization codes are not held in their own table (Issue #44)\n- Database schema updates.\n\n## [2.0.5] - 2013-05-09\n\n- Fixed `oauth_session_token_scopes` table primary key\n- Removed `DEFAULT ''` that has slipped into some tables\n- Fixed docblock for `SessionInterface::associateRefreshToken()`\n\n## [2.0.4] - 2013-05-09\n\n- Renamed primary key in oauth_client_endpoints table\n- Adding missing column to oauth_session_authcodes\n\n### Security\n- A refresh token should be bound to a client ID\n\n## [2.0.3] - 2013-05-08\n\n- Fixed a link to code in composer.json\n\n## [2.0.2] - 2013-05-08\n\n- Updated README with wiki guides\n- Removed `null` as default parameters in some methods in the storage interfaces\n- Fixed license copyright\n\n## [2.0.0] - 2013-05-08\n\n**If you're upgrading from v1.0.8 there are lots of breaking changes**\n\n- Rewrote the session storage interface from scratch so methods are more obvious\n- Included a PDO driver which implements the storage interfaces so the library is more \"get up and go\"\n- Further normalised the database structure so all sessions no longer contain infomation related to authorization grant (which may or may not be enabled)\n- A session can have multiple associated access tokens\n- Individual grants can have custom expire times for access tokens\n- Authorization codes now have a TTL of 10 minutes by default (can be manually set)\n- Refresh tokens now have a TTL of one week by default (can be manually set)\n- The client credentials grant will no longer gives out refresh tokens as per the specification\n\n## [1.0.8] - 2013-03-18\n\n- Fixed check for required state parameter\n- Fixed check that user's credentials are correct in Password grant\n\n## [1.0.7] - 2013-03-04\n\n- Added method `requireStateParam()`\n- Added method `requireScopeParam()`\n\n## [1.0.6] - 2013-02-22\n\n- Added links to tutorials in the README\n- Added missing `state` parameter request to the `checkAuthoriseParams()` method.\n\n## [1.0.5] - 2013-02-21\n\n- Fixed the SQL example for SessionInterface::getScopes()\n\n## [1.0.3] - 2013-02-20\n\n- Changed all instances of the \"authentication server\" to \"authorization server\"\n\n## [1.0.2] - 2013-02-20\n\n- Fixed MySQL create table order\n- Fixed version number in composer.json\n\n## [1.0.1] - 2013-02-19\n\n- Updated AuthServer.php to use `self::getParam()`\n\n## 1.0.0 - 2013-02-15\n\n- First major release\n\n[Unreleased]: https://github.com/thephpleague/oauth2-server/compare/9.1.0...HEAD\n[9.1.0]: https://github.com/thephpleague/oauth2-server/compare/9.0.1...9.1.0\n[9.0.1]: https://github.com/thephpleague/oauth2-server/compare/9.0.0...9.0.1\n[9.0.0]: https://github.com/thephpleague/oauth2-server/compare/9.0.0-RC1...9.0.0\n[9.0.0-RC1]: https://github.com/thephpleague/oauth2-server/compare/8.5.4...9.0.0-RC1\n[8.5.4]: https://github.com/thephpleague/oauth2-server/compare/8.5.3...8.5.4\n[8.5.3]: https://github.com/thephpleague/oauth2-server/compare/8.5.2...8.5.3\n[8.5.2]: https://github.com/thephpleague/oauth2-server/compare/8.5.1...8.5.2\n[8.5.1]: https://github.com/thephpleague/oauth2-server/compare/8.5.0...8.5.1\n[8.5.0]: https://github.com/thephpleague/oauth2-server/compare/8.4.1...8.5.0\n[8.4.1]: https://github.com/thephpleague/oauth2-server/compare/8.4.0...8.4.1\n[8.4.0]: https://github.com/thephpleague/oauth2-server/compare/8.3.6...8.4.0\n[8.3.6]: https://github.com/thephpleague/oauth2-server/compare/8.3.5...8.3.6\n[8.3.5]: https://github.com/thephpleague/oauth2-server/compare/8.3.4...8.3.5\n[8.3.4]: https://github.com/thephpleague/oauth2-server/compare/8.3.3...8.3.4\n[8.3.3]: https://github.com/thephpleague/oauth2-server/compare/8.3.2...8.3.3\n[8.3.2]: https://github.com/thephpleague/oauth2-server/compare/8.3.1...8.3.2\n[8.3.1]: https://github.com/thephpleague/oauth2-server/compare/8.3.0...8.3.1\n[8.3.0]: https://github.com/thephpleague/oauth2-server/compare/8.2.4...8.3.0\n[8.2.4]: https://github.com/thephpleague/oauth2-server/compare/8.2.3...8.2.4\n[8.2.3]: https://github.com/thephpleague/oauth2-server/compare/8.2.2...8.2.3\n[8.2.2]: https://github.com/thephpleague/oauth2-server/compare/8.2.1...8.2.2\n[8.2.1]: https://github.com/thephpleague/oauth2-server/compare/8.2.0...8.2.1\n[8.2.0]: https://github.com/thephpleague/oauth2-server/compare/8.1.1...8.2.0\n[8.1.1]: https://github.com/thephpleague/oauth2-server/compare/8.1.0...8.1.1\n[8.1.0]: https://github.com/thephpleague/oauth2-server/compare/8.0.0...8.1.0\n[8.0.0]: https://github.com/thephpleague/oauth2-server/compare/7.4.0...8.0.0\n[7.4.0]: https://github.com/thephpleague/oauth2-server/compare/7.3.3...7.4.0\n[7.3.3]: https://github.com/thephpleague/oauth2-server/compare/7.3.2...7.3.3\n[7.3.2]: https://github.com/thephpleague/oauth2-server/compare/7.3.1...7.3.2\n[7.3.1]: https://github.com/thephpleague/oauth2-server/compare/7.3.0...7.3.1\n[7.3.0]: https://github.com/thephpleague/oauth2-server/compare/7.2.0...7.3.0\n[7.2.0]: https://github.com/thephpleague/oauth2-server/compare/7.1.1...7.2.0\n[7.1.1]: https://github.com/thephpleague/oauth2-server/compare/7.1.0...7.1.1\n[7.1.0]: https://github.com/thephpleague/oauth2-server/compare/7.0.0...7.1.0\n[7.0.0]: https://github.com/thephpleague/oauth2-server/compare/6.1.1...7.0.0\n[6.1.1]: https://github.com/thephpleague/oauth2-server/compare/6.0.0...6.1.1\n[6.1.0]: https://github.com/thephpleague/oauth2-server/compare/6.0.2...6.1.0\n[6.0.2]: https://github.com/thephpleague/oauth2-server/compare/6.0.1...6.0.2\n[6.0.1]: https://github.com/thephpleague/oauth2-server/compare/6.0.0...6.0.1\n[6.0.0]: https://github.com/thephpleague/oauth2-server/compare/5.1.4...6.0.0\n[5.1.4]: https://github.com/thephpleague/oauth2-server/compare/5.1.3...5.1.4\n[5.1.3]: https://github.com/thephpleague/oauth2-server/compare/5.1.2...5.1.3\n[5.1.2]: https://github.com/thephpleague/oauth2-server/compare/5.1.1...5.1.2\n[5.1.1]: https://github.com/thephpleague/oauth2-server/compare/5.1.0...5.1.1\n[5.1.0]: https://github.com/thephpleague/oauth2-server/compare/5.0.2...5.1.0\n[5.0.3]: https://github.com/thephpleague/oauth2-server/compare/5.0.3...5.0.2\n[5.0.2]: https://github.com/thephpleague/oauth2-server/compare/5.0.1...5.0.2\n[5.0.1]: https://github.com/thephpleague/oauth2-server/compare/5.0.0...5.0.1\n[5.0.0]: https://github.com/thephpleague/oauth2-server/compare/5.0.0-RC2...5.0.0\n[5.0.0-RC2]: https://github.com/thephpleague/oauth2-server/compare/5.0.0-RC1...5.0.0-RC2\n[5.0.0-RC1]: https://github.com/thephpleague/oauth2-server/compare/4.1.5...5.0.0-RC1\n[4.1.7]: https://github.com/thephpleague/oauth2-server/compare/4.1.6...4.1.7\n[4.1.6]: https://github.com/thephpleague/oauth2-server/compare/4.1.5...4.1.6\n[4.1.5]: https://github.com/thephpleague/oauth2-server/compare/4.1.4...4.1.5\n[4.1.4]: https://github.com/thephpleague/oauth2-server/compare/4.1.3...4.1.4\n[4.1.3]: https://github.com/thephpleague/oauth2-server/compare/4.1.2...4.1.3\n[4.1.2]: https://github.com/thephpleague/oauth2-server/compare/4.1.1...4.1.2\n[4.1.1]: https://github.com/thephpleague/oauth2-server/compare/4.0.0...4.1.1\n[4.1.0]: https://github.com/thephpleague/oauth2-server/compare/4.0.5...4.1.0\n[4.0.5]: https://github.com/thephpleague/oauth2-server/compare/4.0.4...4.0.5\n[4.0.4]: https://github.com/thephpleague/oauth2-server/compare/4.0.3...4.0.4\n[4.0.3]: https://github.com/thephpleague/oauth2-server/compare/4.0.2...4.0.3\n[4.0.2]: https://github.com/thephpleague/oauth2-server/compare/4.0.1...4.0.2\n[4.0.1]: https://github.com/thephpleague/oauth2-server/compare/4.0.0...4.0.1\n[4.0.0]: https://github.com/thephpleague/oauth2-server/compare/3.2.0...4.0.0\n[3.2.0]: https://github.com/thephpleague/oauth2-server/compare/3.1.2...3.2.0\n[3.1.2]: https://github.com/thephpleague/oauth2-server/compare/3.1.1...3.1.2\n[3.1.1]: https://github.com/thephpleague/oauth2-server/compare/3.1.0...3.1.1\n[3.1.0]: https://github.com/thephpleague/oauth2-server/compare/3.0.1...3.1.0\n[3.0.1]: https://github.com/thephpleague/oauth2-server/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/thephpleague/oauth2-server/compare/2.1.1...3.0.0\n[2.1.1]: https://github.com/thephpleague/oauth2-server/compare/2.1.0...2.1.1\n[2.1.0]: https://github.com/thephpleague/oauth2-server/compare/2.0.5...2.1.0\n[2.0.5]: https://github.com/thephpleague/oauth2-server/compare/2.0.4...2.0.5\n[2.0.4]: https://github.com/thephpleague/oauth2-server/compare/2.0.3...2.0.4\n[2.0.3]: https://github.com/thephpleague/oauth2-server/compare/2.0.2...2.0.3\n[2.0.2]: https://github.com/thephpleague/oauth2-server/compare/2.0.0...2.0.2\n[2.0.0]: https://github.com/thephpleague/oauth2-server/compare/1.0.8...2.0.0\n[1.0.8]: https://github.com/thephpleague/oauth2-server/compare/1.0.7...1.0.8\n[1.0.7]: https://github.com/thephpleague/oauth2-server/compare/1.0.6...1.0.7\n[1.0.6]: https://github.com/thephpleague/oauth2-server/compare/1.0.5...1.0.6\n[1.0.5]: https://github.com/thephpleague/oauth2-server/compare/1.0.3...1.0.5\n[1.0.3]: https://github.com/thephpleague/oauth2-server/compare/1.0.2...1.0.3\n[1.0.2]: https://github.com/thephpleague/oauth2-server/compare/1.0.1...1.0.2\n[1.0.1]: https://github.com/thephpleague/oauth2-server/compare/1.0.0...1.0.1\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.154296875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at andrew@noexceptions.io. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.5263671875,
          "content": "Thanks for contributing to this project.\n\n\n**Please submit your pull request against the `master` branch only.**\n\n\nPlease ensure that you run `phpunit` from the project root after you've made any changes.\n\nIf you've added something new please create a new unit test, if you've changed something please update any unit tests as appropritate.\n\nWe're trying to ensure there is **100%** test code coverage (including testing PHP errors and exceptions) so please ensure any new/updated tests cover all of your changes.\n\nThank you,\n\n@alexbilbie\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.037109375,
          "content": "MIT License\n\nCopyright (C) Alex Bilbie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4619140625,
          "content": "# PHP OAuth 2.0 Server\n\n[![Latest Version](http://img.shields.io/packagist/v/league/oauth2-server.svg?style=flat-square)](https://github.com/thephpleague/oauth2-server/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![Build Status](https://github.com/thephpleague/oauth2-server/workflows/tests/badge.svg)](https://github.com/thephpleague/oauth2-server/actions)\n[![Coverage Status](https://img.shields.io/scrutinizer/coverage/g/thephpleague/oauth2-server.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/oauth2-server/code-structure)\n[![Quality Score](https://img.shields.io/scrutinizer/g/thephpleague/oauth2-server.svg?style=flat-square)](https://scrutinizer-ci.com/g/thephpleague/oauth2-server)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/oauth2-server.svg?style=flat-square)](https://packagist.org/packages/league/oauth2-server)\n\n`league/oauth2-server` is a standards compliant implementation of an [OAuth 2.0](https://tools.ietf.org/html/rfc6749) authorization server written in PHP which makes working with OAuth 2.0 trivial. You can easily configure an OAuth 2.0 server to protect your API with access tokens, or allow clients to request new access tokens and refresh them.\n\nOut of the box it supports the following grants:\n\n* Authorization code grant\n* Client credentials grant\n* Device authorization grant\n* Implicit grant\n* Refresh grant\n* Resource owner password credentials grant\n\nThe following RFCs are implemented:\n\n* [RFC6749 \"OAuth 2.0\"](https://tools.ietf.org/html/rfc6749)\n* [RFC6750 \"The OAuth 2.0 Authorization Framework: Bearer Token Usage\"](https://tools.ietf.org/html/rfc6750)\n* [RFC7519 \"JSON Web Token (JWT)\"](https://tools.ietf.org/html/rfc7519)\n* [RFC7636 \"Proof Key for Code Exchange by OAuth Public Clients\"](https://tools.ietf.org/html/rfc7636)\n* [RFC8628 \"OAuth 2.0 Device Authorization Grant](https://tools.ietf.org/html/rfc8628)\n\nThis library was created by Alex Bilbie. Find him on Twitter at [@alexbilbie](https://twitter.com/alexbilbie).\n\n## Requirements\n\nThe latest version of this package supports the following versions of PHP:\n\n* PHP 8.1\n* PHP 8.2\n* PHP 8.3\n* PHP 8.4\n\nThe `openssl` and `json` extensions are also required.\n\nAll HTTP messages passed to the server should be [PSR-7 compliant](https://www.php-fig.org/psr/psr-7/). This ensures interoperability with other packages and frameworks.\n\n## Installation\n\n```\ncomposer require league/oauth2-server\n```\n\n## Documentation\n\nThe library documentation can be found at [https://oauth2.thephpleague.com](https://oauth2.thephpleague.com).\nYou can contribute to the documentation in the [gh-pages branch](https://github.com/thephpleague/oauth2-server/tree/gh-pages/).\n\n## Testing\n\nThe library uses [PHPUnit](https://phpunit.de/) for unit tests.\n\n```\nvendor/bin/phpunit\n```\n\n## Continuous Integration\n\nWe use [Github Actions](https://github.com/features/actions), [Scrutinizer](https://scrutinizer-ci.com/), and [StyleCI](https://styleci.io/) for continuous integration. Check out [our](https://github.com/thephpleague/oauth2-server/blob/master/.github/workflows/tests.yml) [configuration](https://github.com/thephpleague/oauth2-server/blob/master/.scrutinizer.yml) [files](https://github.com/thephpleague/oauth2-server/blob/master/.styleci.yml) if you'd like to know more.\n\n## Community Integrations\n\n* [Drupal](https://www.drupal.org/project/simple_oauth)\n* [Laravel Passport](https://github.com/laravel/passport)\n* [OAuth 2 Server for CakePHP 3](https://github.com/uafrica/oauth-server)\n* [OAuth 2 Server for Mezzio](https://github.com/mezzio/mezzio-authentication-oauth2)\n* [OAuth 2 Server Bundle (Symfony)](https://github.com/thephpleague/oauth2-server-bundle)\n* [Heimdall for CodeIgniter 4](https://github.com/ezralazuardy/heimdall)\n\n## Changelog\n\nSee the [project changelog](https://github.com/thephpleague/oauth2-server/blob/master/CHANGELOG.md)\n\n## Contributing\n\nContributions are always welcome. Please see [CONTRIBUTING.md](https://github.com/thephpleague/oauth2-server/blob/master/CONTRIBUTING.md) and [CODE_OF_CONDUCT.md](https://github.com/thephpleague/oauth2-server/blob/master/CODE_OF_CONDUCT.md) for details.\n\n## Support\n\nBugs and feature request are tracked on [GitHub](https://github.com/thephpleague/oauth2-server/issues).\n\nIf you have any questions about OAuth _please_ open a ticket here; please **don't** email the address below.\n\n## Security\n\nIf you discover any security related issues, please email `andrew@noexceptions.io` instead of using the issue tracker.\n\n## License\n\nThis package is released under the MIT License. See the bundled [LICENSE](https://github.com/thephpleague/oauth2-server/blob/master/LICENSE) file for details.\n\n## Credits\n\nThis code is principally developed and maintained by [Andy Millington](https://twitter.com/Sephster).\n\nBetween 2012 and 2017 this library was developed and maintained by [Alex Bilbie](https://alexbilbie.com/).\n\nPHP OAuth 2.0 Server is one of many packages provided by The PHP League. To find out more, please visit [our website](https://thephpleague.com).\n\nSpecial thanks to [all of these awesome contributors](https://github.com/thephpleague/oauth2-server/contributors).\n\nAdditional thanks go to the [Mozilla Secure Open Source Fund](https://wiki.mozilla.org/MOSS/Secure_Open_Source) for funding a security audit of this library.\n\nThe initial code was developed as part of the [Linkey](http://linkey.blogs.lincoln.ac.uk) project which was funded by [JISC](http://jisc.ac.uk) under the Access and Identity Management programme.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.6474609375,
          "content": "{\n    \"name\": \"league/oauth2-server\",\n    \"description\": \"A lightweight and powerful OAuth 2.0 authorization and resource server library with support for all the core specification grants. This library will allow you to secure your API with OAuth and allow your applications users to approve apps that want to access their data from your API.\",\n    \"homepage\": \"https://oauth2.thephpleague.com/\",\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \"~8.1.0 || ~8.2.0 || ~8.3.0 || ~8.4.0\",\n        \"ext-openssl\": \"*\",\n        \"league/event\": \"^3.0\",\n        \"league/uri\": \"^7.0\",\n        \"lcobucci/jwt\": \"^5.0\",\n        \"psr/http-message\": \"^2.0\",\n        \"defuse/php-encryption\": \"^2.4\",\n        \"ext-json\": \"*\",\n        \"lcobucci/clock\": \"^2.3 || ^3.0\",\n        \"psr/http-server-middleware\": \"^1.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^9.6.21\",\n        \"laminas/laminas-diactoros\": \"^3.5\",\n        \"phpstan/phpstan\": \"^1.12\",\n        \"phpstan/phpstan-phpunit\": \"^1.3.15\",\n        \"roave/security-advisories\": \"dev-master\",\n        \"phpstan/extension-installer\": \"^1.3.1\",\n        \"phpstan/phpstan-deprecation-rules\": \"^1.1.4\",\n        \"phpstan/phpstan-strict-rules\": \"^1.5.2\",\n        \"slevomat/coding-standard\": \"^8.14.1\",\n        \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n        \"squizlabs/php_codesniffer\": \"^3.8\"\n    },\n    \"repositories\": [\n        {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/thephpleague/oauth2-server.git\"\n        }\n    ],\n    \"keywords\": [\n        \"oauth\",\n        \"oauth2\",\n        \"oauth 2\",\n        \"oauth 2.0\",\n        \"server\",\n        \"auth\",\n        \"authorization\",\n        \"authorisation\",\n        \"authentication\",\n        \"resource\",\n        \"api\",\n        \"auth\",\n        \"protect\",\n        \"secure\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Alex Bilbie\",\n            \"email\": \"hello@alexbilbie.com\",\n            \"homepage\": \"http://www.alexbilbie.com\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Andy Millington\",\n            \"email\": \"andrew@noexceptions.io\",\n            \"homepage\": \"https://www.noexceptions.io\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"replace\": {\n        \"lncd/oauth2\": \"*\",\n        \"league/oauth2server\": \"*\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\OAuth2\\\\Server\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"LeagueTests\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"ocramius/package-versions\": true,\n            \"phpstan/extension-installer\": true,\n            \"dealerdirect/phpcodesniffer-composer-installer\": false\n        }\n    }\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.462890625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\"\n>\n    <arg name=\"basepath\" value=\".\" />\n    <arg name=\"extensions\" value=\"php\" />\n    <arg name=\"parallel\" value=\"80\" />\n    <arg name=\"colors\" />\n    <arg name=\"cache\" value=\".phpcs.cache\" />\n    <arg value=\"p\" />\n\n    <file>src</file>\n    <file>tests</file>\n    <file>examples</file>\n\n    <exclude-pattern>examples/vendor/*</exclude-pattern>\n\n    <rule ref=\"PSR12\">\n        <exclude name=\"Generic.Files.LineLength.TooLong\" />\n    </rule>\n\n    <config name=\"installed_paths\" value=\"../../slevomat/coding-standard\" />\n    <rule ref=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\">\n        <properties>\n            <property name=\"spacesCountAroundEqualsSign\" type=\"int\" value=\"0\" />\n        </properties>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly\" />\n    <rule ref=\"SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses\" />\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint\" />\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint\" />\n    <rule ref=\"SlevomatCodingStandard.TypeHints.PropertyTypeHint\" />\n    <rule ref=\"SlevomatCodingStandard.Commenting.EmptyComment\" />\n    <rule ref=\"SlevomatCodingStandard.Classes.RequireConstructorPropertyPromotion\" />\n    <rule ref=\"SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue\" />\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0634765625,
          "content": "parameters:\n    level: 8\n    paths:\n        - src\n        - tests"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n         colors=\"true\"\n         stopOnError=\"true\"\n         stopOnFailure=\"true\"\n         stopOnIncomplete=\"false\"\n         stopOnSkipped=\"false\"\n         bootstrap=\"tests/Bootstrap.php\"\n>\n  <coverage includeUncoveredFiles=\"true\">\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"Tests\">\n      <directory>./tests/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}