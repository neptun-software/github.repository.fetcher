{
  "metadata": {
    "timestamp": 1736712307483,
    "page": 104,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fruitcake/laravel-cors",
      "stars": 6275,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.384765625,
          "content": "# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.github            export-ignore\n/.travis.yml        export-ignore\n/grumphp.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/tests              export-ignore\n/changelog.md       export-ignore\n/.editorconfig      export-ignore\n\ntests/js/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.080078125,
          "content": "/vendor\ncomposer.phar\ncomposer.lock\n.DS_Store\n.phpunit.result.cache\n/tests/Browser"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1455078125,
          "content": "Copyright (c) 2013-2016 Barry vd. Heuvel\n\nCopyright for portions of this project are held by [asm89 (Alexander)] as part of project asm89/stack-cors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 2.0615234375,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/)\nand this project adheres to [Semantic Versioning](http://semver.org/).\n\n## v2.0 (2020-05-11)\n \n[asm89/stack-cors 2.x](https://github.com/asm89/stack-cors/releases/tag/2.0.0) is now used, with these notable changes:\n\n### Added\n- CORS headers are better cachable now, with correct Vary headers (#https://github.com/asm89/stack-cors/pull/70, #https://github.com/asm89/stack-cors/pull/74)\n\n### Changed\n- CORS headers are added to non-Origin requests when possible (#https://github.com/asm89/stack-cors/pull/73)\n- Requests are no longer blocked by the server, only by the browser (#https://github.com/asm89/stack-cors/pull/70)\n \n## v1.0 (2019-12-27)\n\n### Breaking changes\n - Adding the middleware on Route groups is no longer supported. You can use the new `paths` option to match your routes\n - The config file has been changed from `camelCase` to `snake_case`, please update your own config.\n - The deprecated Lumen ServiceProvider has been removed.\n - There is no need to manually configure the `cors` config in Lumen.\n \n### Added\n - The `paths` option is added to match certain routes only, while still using global middleware. This allows for better error handling.\n\n## v0.11.0 (2017-12-xx)\n### Breaking changes\n - The wildcard matcher is changed. You can use `allowedOriginPatterns` for your own patterns, \n or simple wildcards in the normal origins. Eg. `*.laravel.com` should still work.\n\n## v0.9.0 (2016-03-2017)\n### Breaking changes\n - The `cors` alias is no longer added by default. Use the full class or add the alias yourself.\n - The Lumen ServiceProvider has been removed. Both Laravel and Lumen should use `Barryvdh\\Cors\\ServiceProvider::class`.\n - `Barryvdh\\Cors\\Stack\\CorsService` moves to `\\Barryvdh\\Cors\\CorsService` (namespace changed).\n - `Barryvdh\\Cors@addActualRequestHeaders` will automatically attached when Exception occured.\n \n### Added\n - Better error-handling when exceptions occur.\n - A lot of tests, also on older Laravel versions.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.419921875,
          "content": "{\n    \"name\": \"fruitcake/laravel-cors\",\n    \"description\": \"Adds CORS (Cross-Origin Resource Sharing) headers support in your Laravel application\",\n    \"keywords\": [\"laravel\", \"cors\", \"crossdomain\", \"api\"],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fruitcake\",\n            \"homepage\": \"https://fruitcake.nl\"\n        },\n        {\n            \"name\": \"Barry vd. Heuvel\",\n            \"email\": \"barryvdh@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.4|^8.0\",\n        \"illuminate/support\": \"^6|^7|^8|^9\",\n        \"illuminate/contracts\": \"^6|^7|^8|^9\",\n        \"fruitcake/php-cors\": \"^1.2\"\n    },\n    \"require-dev\": {\n        \"laravel/framework\": \"^6|^7.24|^8\",\n        \"phpunit/phpunit\": \"^9\",\n        \"squizlabs/php_codesniffer\": \"^3.5\",\n        \"orchestra/testbench-dusk\": \"^4|^5|^6|^7\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Fruitcake\\\\Cors\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Fruitcake\\\\Cors\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.0-dev\"\n        },\n        \"laravel\": {\n            \"providers\": [\n              \"Fruitcake\\\\Cors\\\\CorsServiceProvider\"\n            ]\n        }\n    },\n    \"scripts\": {\n        \"test\": \"phpunit\",\n        \"check-style\": \"phpcs -p --standard=psr12 src/\",\n        \"fix-style\": \"phpcbf -p --standard=psr12 src/\"\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "grumphp.yml",
          "type": "blob",
          "size": 0.2685546875,
          "content": "parameters:\n  git_dir: .\n  bin_dir: vendor/bin\n  tasks:\n    phpunit:\n      config_file: ~\n      testsuite: ~\n      group: []\n      always_execute: false\n    phpcs:\n      standard: PSR12\n      warning_severity: ~\n      ignore_patterns:\n      - tests/\n      triggered_by: [php]"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6689453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnError=\"false\"\n         stopOnFailure=\"false\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Cors Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory>./src</directory>\n        </whitelist>\n    </filter>\n</phpunit>"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 9.572265625,
          "content": "# CORS Middleware for Laravel\n\n[![Build Status][ico-actions]][link-actions]\n[![Latest Stable Version](https://poser.pugx.org/fruitcake/laravel-cors/version.png)](https://packagist.org/packages/fruitcake/laravel-cors)\n[![Software License][ico-license]](LICENSE.md)\n[![Total Downloads][ico-downloads]][link-downloads]\n[![Fruitcake](https://img.shields.io/badge/Powered%20By-Fruitcake-b2bc35.svg)](https://fruitcake.nl/)\n\nImplements https://github.com/fruitcake/php-cors for Laravel\n\n## Note for users upgrading to Laravel 9, 10 or higher\n### This package is deprecated because all supported Laravel versions now include the CORS middleware in the core.\n\nSince Laravel 9.2, this Middleware is included in laravel/framework. You can use the provided middleware, which should be compatible with the Middleware and config provided in this package. See https://github.com/laravel/laravel/pull/5825/files for the changes.\n\nSteps to upgrade:\n 1. Remove `\"fruitcake/laravel-cors\"` from your composer.json\n 2. Replace `\\Fruitcake\\Cors\\HandleCors::class,` with `\\Illuminate\\Http\\Middleware\\HandleCors::class,` in `app/Http/Kernel.php`\n\nSee `https://github.com/fruitcake/php-cors` for advanced usage. The config stays the same.\n\n## About\n\nThe `laravel-cors` package allows you to send [Cross-Origin Resource Sharing](http://enable-cors.org/)\nheaders with Laravel middleware configuration.\n\nIf you want to have a global overview of CORS workflow, you can  browse\nthis [image](http://www.html5rocks.com/static/images/cors_server_flowchart.png).\n\n## Upgrading from 0.x (barryvdh/laravel-cors)\nWhen upgrading from 0.x versions, there are some breaking changes:\n - **A new 'paths' property is used to enable/disable CORS on certain routes. This is empty by default, so fill it correctly!**\n - **Group middleware is no longer supported, use the global middleware**\n - The vendor name has changed (see installation/usage)\n - The casing on the props in `cors.php` has changed from camelCase to snake_case, so if you already have a `cors.php` file you will need to update the props in there to match the new casing.\n\n## Features\n\n* Handles CORS pre-flight OPTIONS requests\n* Adds CORS headers to your responses\n* Match routes to only add CORS to certain Requests\n\n## Installation\n\nRequire the `fruitcake/laravel-cors` package in your `composer.json` and update your dependencies:\n```sh\ncomposer require fruitcake/laravel-cors\n```\n\nIf you get a conflict, this could be because an older version of barryvdh/laravel-cors or fruitcake/laravel-cors is installed. Remove the conflicting package first, then try install again:\n\n```sh\ncomposer remove barryvdh/laravel-cors fruitcake/laravel-cors\ncomposer require fruitcake/laravel-cors\n```\n\n## Global usage\n\nTo allow CORS for all your routes, add the `HandleCors` middleware at the top of the `$middleware` property of  `app/Http/Kernel.php` class:\n\n```php\nprotected $middleware = [\n  \\Fruitcake\\Cors\\HandleCors::class,\n    // ...\n];\n```\n\nNow update the config to define the paths you want to run the CORS service on, (see Configuration below):\n\n```php\n'paths' => ['api/*'],\n```\n\n## Configuration\n\nThe defaults are set in `config/cors.php`. Publish the config to copy the file to your own config:\n```sh\nphp artisan vendor:publish --tag=\"cors\"\n```\n> **Note:** When using custom headers, like `X-Auth-Token` or `X-Requested-With`, you must set the `allowed_headers` to include those headers. You can also set it to `['*']` to allow all custom headers.\n\n> **Note:** If you are explicitly whitelisting headers, you must include `Origin` or requests will fail to be recognized as CORS.\n\n\n### Options\n\n| Option                   | Description                                                              | Default value |\n|--------------------------|--------------------------------------------------------------------------|---------------|\n| paths                    | You can enable CORS for 1 or multiple paths, eg. `['api/*'] `            | `[]`          |\n| allowed_methods          | Matches the request method.                                              | `['*']`       |\n| allowed_origins          | Matches the request origin. Wildcards can be used, eg. `*.mydomain.com` or `mydomain.com:*`  | `['*']`       |\n| allowed_origins_patterns | Matches the request origin with `preg_match`.                            | `[]`          |\n| allowed_headers          | Sets the Access-Control-Allow-Headers response header.                   | `['*']`       |\n| exposed_headers          | Sets the Access-Control-Expose-Headers response header.                  | `[]`       |\n| max_age                  | Sets the Access-Control-Max-Age response header.                         | `0`           |\n| supports_credentials     | Sets the Access-Control-Allow-Credentials header.                        | `false`       |\n\n\n`allowed_origins`, `allowed_headers` and `allowed_methods` can be set to `['*']` to accept any value.\n\n> **Note:** For `allowed_origins` you must include the scheme when not using a wildcard, eg. `['http://example.com', 'https://example.com']`. You must also take into account that the scheme will be present when using `allowed_origins_patterns`.\n\n> **Note:** Try to be as specific as possible. You can start developing with loose constraints, but it's better to be as strict as possible!\n\n> **Note:** Because of [http method overriding](http://symfony.com/doc/current/reference/configuration/framework.html#http-method-override) in Laravel, allowing POST methods will also enable the API users to perform PUT and DELETE requests as well.\n\n> **Note:** Sometimes it's necessary to specify the port _(when you're coding your app in a local environment for example)_. You can specify the port or using a wildcard here too, eg. `localhost:3000`, `localhost:*` or even using a FQDN `app.mydomain.com:8080`\n\n### Lumen\n\nOn Lumen, just register the ServiceProvider manually in your `bootstrap/app.php` file:\n\n```php\n$app->register(Fruitcake\\Cors\\CorsServiceProvider::class);\n```\n\nAlso copy the [cors.php](https://github.com/fruitcake/laravel-cors/blob/master/config/cors.php) config file to `config/cors.php` and put it into action:\n\n```php\n$app->configure('cors');\n```\n\n## Global usage for Lumen\n\nTo allow CORS for all your routes, add the `HandleCors` middleware to the global middleware and set the `paths` property in the config.\n\n```php\n$app->middleware([\n    // ...\n    Fruitcake\\Cors\\HandleCors::class,\n]);\n```\n\n## Common problems\n\n### Wrong config\n\nMake sure the `path` option in the config is correct and actually matches the route you are using. Remember to clear the config cache as well.\n\n### Error handling, Middleware order\n\nSometimes errors/middleware that return own responses can prevent the CORS Middleware from being run. Try changing the order of the Middleware and make sure it's the first entry in the global middleware, not a route group. Also check your logs for actual errors, because without CORS, the errors will be swallowed by the browser, only showing CORS errors. Also try running it without CORS to make sure it actually works.\n\n### Authorization headers / Credentials\n\nIf your Request includes an Authorization header or uses Credentials mode, set the `supports_credentials` value in the config to true. This will set the [Access-Control-Allow-Credentials](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) Header to `true`.\n\n### Echo/die\n\nIf you use `echo()`, `dd()`, `die()`, `exit()`, `dump()` etc in your code, you will break the Middleware flow. When output is sent before headers, CORS cannot be added. When the script exits before the CORS middleware finishes, CORS headers will not be added. Always return a proper response or throw an Exception.\n\n### Disabling CSRF protection for your API\n\nIf possible, use a route group with CSRF protection disabled.\nOtherwise you can disable CSRF for certain requests in `App\\Http\\Middleware\\VerifyCsrfToken`:\n\n```php\nprotected $except = [\n    'api/*',\n    'sub.domain.zone' => [\n      'prefix/*'\n    ],\n];\n```\n\n### Duplicate headers\nThe CORS Middleware should be the only place you add these headers. If you also add headers in .htaccess, nginx or your index.php file, you will get duplicate headers and unexpected results.\n\n### No Cross-Site requests\nIf you are not doing Cross-Site requests, meaning if you are not requesting site-a.com/api from site-b.com, your browser will not send the `Origin: https://site-b.com` request header, CORS will be \"disabled\" as the `Access-Control-Allow-Origin` header will be also missing. This happens because requests are being dispatched from the same and no protection is needed in this case.\n\n## License\n\nReleased under the MIT License, see [LICENSE](LICENSE).\n\n[ico-version]: https://img.shields.io/packagist/v/fruitcake/laravel-cors.svg?style=flat-square\n[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\n[ico-actions]: https://github.com/fruitcake/laravel-cors/actions/workflows/run-tests.yml/badge.svg\n[ico-scrutinizer]: https://img.shields.io/scrutinizer/coverage/g/fruitcake/laravel-cors.svg?style=flat-square\n[ico-code-quality]: https://img.shields.io/scrutinizer/g/fruitcake/laravel-cors.svg?style=flat-square\n[ico-downloads]: https://img.shields.io/packagist/dt/fruitcake/laravel-cors.svg?style=flat-square\n\n[link-packagist]: https://packagist.org/packages/fruitcake/laravel-cors\n[link-actions]: https://github.com/fruitcake/laravel-cors/actions\n[link-scrutinizer]: https://scrutinizer-ci.com/g/fruitcake/laravel-cors/code-structure\n[link-code-quality]: https://scrutinizer-ci.com/g/fruitcake/laravel-cors\n[link-downloads]: https://packagist.org/packages/fruitcake/laravel-cors\n[link-author]: https://github.com/fruitcake\n[link-contributors]: ../../contributors\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}