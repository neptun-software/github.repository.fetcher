{
  "metadata": {
    "timestamp": 1736712306473,
    "page": 101,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ratchetphp/Ratchet",
      "stars": 6306,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05078125,
          "content": "phpunit.xml\r\nreports\r\nsandbox\r\nvendor\r\ncomposer.lock"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.5908203125,
          "content": "CHANGELOG\n=========\n\n### Legend\n\n* \"BC\": Backwards compatibility break (from public component APIs)\n* \"BF\": Bug fix\n\n---\n\n* 0.4.4 (2021-12-11)\n  * Correct and update dependencies for forward compatibility\n  * Added context for React Socket server to App\n  * Use non-deprecated Guzzle API calls\n\n* 0.4.3 (2020-06-04)\n  * BF: Fixed interface acceptable regression in `App`\n  * Update RFC6455 library with latest fixes\n\n* 0.4.2 (2020-01-27)\n  * Support Symfony 5\n  * BF: Use phpunit from vendor directory\n  * Allow disabling of xdebug warning by defining `RATCHET_DISABLE_XDEBUG_WARN`\n  * Stop using `LoopInterface::tick()` for testing\n\n* 0.4.1 (2017-12-11)\n  * Only enableKeepAlive in App if no WsServer passed allowing user to set their own timeout duration\n  * Support Symfony 4\n  * BF: Plug NOOP controller in connection from router in case of misbehaving client\n  * BF: Raise error from invalid WAMP payload\n\n* 0.4 (2017-09-14)\n  * BC: $conn->WebSocket->request replaced with $conn->httpRequest which is a PSR-7 object\n  * Binary messages now supported via Ratchet\\WebSocket\\MessageComponentInterface\n  * Added heartbeat support via ping/pong in WsServer\n  * BC: No longer support old (and insecure) Hixie76 and Hybi protocols\n  * BC: No longer support disabling UTF-8 checks\n  * BC: The Session component implements HttpServerInterface instead of WsServerInterface\n  * BC: PHP 5.3 no longer supported\n  * BC: Update to newer version of react/socket dependency\n  * BC: WAMP topics reduced to 0 subscriptions are deleted, new subs to same name will result in new Topic instance\n  * Significant performance enhancements\n\n* 0.3.6 (2017-01-06)\n  * BF: Keep host and scheme in HTTP request object attatched to connection\n  * BF: Return correct HTTP response (405) when non-GET request made\n\n* 0.3.5 (2016-05-25)\n  * BF: Unmask responding close frame\n  * Added write handler for PHP session serializer\n\n* 0.3.4 (2015-12-23)\n  * BF: Edge case where version check wasn't run on message coalesce\n  * BF: Session didn't start when using pdo_sqlite\n  * BF: WAMP currie prefix check when using '#'\n  * Compatibility with Symfony 3\n\n* 0.3.3 (2015-05-26)\n  * BF: Framing bug on large messages upon TCP fragmentation\n  * BF: Symfony Router query parameter defaults applied to Request\n  * BF: WAMP CURIE on all URIs\n  * OriginCheck rules applied to FlashPolicy\n  * Switched from PSR-0 to PSR-4\n\n* 0.3.2 (2014-06-08)\n  * BF: No messages after closing handshake (fixed rare race condition causing 100% CPU)\n  * BF: Fixed accidental BC break from v0.3.1\n  * Added autoDelete parameter to Topic to destroy when empty of connections\n  * Exposed React Socket on IoServer (allowing FlashPolicy shutdown in App)\n  * Normalized Exceptions in WAMP\n\n* 0.3.1 (2014-05-26)\n  * Added query parameter support to Router, set in HTTP request (ws://server?hello=world)\n  * HHVM compatibility\n  * BF: React/0.4 support; CPU starvation bug fixes\n  * BF: Allow App::route to ignore Host header\n  * Added expected filters to WAMP Topic broadcast method\n  * Resource cleanup in WAMP TopicManager\n\n* 0.3.0 (2013-10-14)\n  * Added the `App` class to help making Ratchet so easy to use it's silly\n  * BC: Require hostname to do HTTP Host header match and do Origin HTTP header check, verify same name by default, helping prevent CSRF attacks\n  * Added Symfony/2.2 based HTTP Router component to allowing for a single Ratchet server to handle multiple apps -> Ratchet\\Http\\Router\n  * BC: Decoupled HTTP from WebSocket component -> Ratchet\\Http\\HttpServer\n  * BF: Single sub-protocol selection to conform with RFC6455\n  * BF: Sanity checks on WAMP protocol to prevent errors\n\n* 0.2.8 (2013-09-19)\n  * React 0.3 support\n\n* 0.2.7 (2013-06-09)\n  * BF: Sub-protocol negotation with Guzzle 3.6\n\n* 0.2.6 (2013-06-01)\n  * Guzzle 3.6 support\n\n* 0.2.5 (2013-04-01)\n  * Fixed Hixie-76 handshake bug\n\n* 0.2.4 (2013-03-09)\n  * Support for Symfony 2.2 and Guzzle 2.3\n  * Minor bug fixes when handling errors\n\n* 0.2.3 (2012-11-21)\n  * Bumped dep: Guzzle to v3, React to v0.2.4\n  * More tests\n\n* 0.2.2 (2012-10-20)\n  * Bumped deps to use React v0.2\n\n* 0.2.1 (2012-10-13)\n  * BF: No more UTF-8 warnings in browsers (no longer sending empty sub-protocol string)\n  * Documentation corrections\n  * Using new composer structure\n\n* 0.2 (2012-09-07)\n  * Ratchet passes every non-binary-frame test from the Autobahn Testsuite\n  * Major performance improvements\n  * BC: Renamed \"WampServer\" to \"ServerProtocol\"\n  * BC: New \"WampServer\" component passes Topic container objects of subscribed Connections\n  * Option to turn off UTF-8 checks in order to increase performance\n  * Switched dependency guzzle/guzzle to guzzle/http (no API changes)\n  * mbstring no longer required\n\n* 0.1.5 (2012-07-12)\n  * BF: Error where service wouldn't run on PHP <= 5.3.8\n  * Dependency library updates\n\n* 0.1.4 (2012-06-17)\n  * Fixed dozens of failing AB tests\n  * BF: Proper socket buffer handling\n\n* 0.1.3 (2012-06-15)\n  * Major refactor inside WebSocket protocol handling, more loosley coupled\n  * BF: Proper error handling on failed WebSocket connections\n  * BF: Handle TCP message concatenation\n  * Inclusion of the AutobahnTestSuite checking WebSocket protocol compliance\n  * mb_string now a requirement\n\n* 0.1.2 (2012-05-19)\n  * BC/BF: Updated WAMP API to coincide with the official spec\n  * Tweaks to improve running as a long lived process\n\n* 0.1.1 (2012-05-14)\n  * Separated interfaces allowing WebSockets to support multiple sub protocols\n  * BF: remoteAddress variable on connections returns proper value\n\n* 0.1 (2012-05-11)\n  * First release with components: IoServer, WsServer, SessionProvider, WampServer, FlashPolicy, IpBlackList\n  * I/O now handled by React, making Ratchet fully asynchronous\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (c) 2011 Chris Boden\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.3681640625,
          "content": "# This file is intended to ease the author's development and testing process\n# Users do not need to use `make`; Ratchet does not need to be compiled\n\ntest:\n\tvendor/bin/phpunit\n\ncover:\n\tvendor/bin/phpunit --coverage-text --coverage-html=reports/coverage\n\nabtests:\n\tulimit -n 2048 && php tests/autobahn/bin/fuzzingserver.php 8001 LibEvent &\n\tulimit -n 2048 && php tests/autobahn/bin/fuzzingserver.php 8002 StreamSelect &\n\tulimit -n 2048 && php tests/autobahn/bin/fuzzingserver.php 8004 LibEv &\n\twstest -m testeeserver -w ws://localhost:8000 &\n\tsleep 1\n\twstest -m fuzzingclient -s tests/autobahn/fuzzingclient-all.json\n\tkillall php wstest\n\nabtest:\n\tulimit -n 2048 && php tests/autobahn/bin/fuzzingserver.php 8000 StreamSelect &\n\tsleep 1\n\twstest -m fuzzingclient -s tests/autobahn/fuzzingclient-quick.json\n\tkillall php\n\nprofile:\n\tphp -d 'xdebug.profiler_enable=1' tests/autobahn/bin/fuzzingserver.php 8000 LibEvent &\n\tsleep 1\n\twstest -m fuzzingclient -s tests/autobahn/fuzzingclient-profile.json\n\tkillall php\n\napidocs:\n\tapigen --title Ratchet -d reports/api \\\n\t\t-s src/ \\\n\t\t-s vendor/ratchet/rfc6455/src \\\n\t\t-s vendor/react/event-loop/src \\\n\t\t-s vendor/react/socket/src \\\n\t\t-s vendor/react/stream/src \\\n\t\t-s vendor/psr/http-message/src \\\n\t\t-s vendor/symfony/http-foundation/Session \\\n\t\t-s vendor/symfony/routing \\\n\t\t-s vendor/evenement/evenement/src/Evenement \\\n\t\t--exclude=vendor/symfony/routing/Tests \\\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.2314453125,
          "content": "# Ratchet\n\n[![GitHub Actions][GA Image]][GA Link]\n[![Autobahn Testsuite](https://img.shields.io/badge/Autobahn-passing-brightgreen.svg)](http://socketo.me/reports/ab/index.html)\n[![Latest Stable Version](https://poser.pugx.org/cboden/ratchet/v/stable.png)](https://packagist.org/packages/cboden/ratchet)\n\nA PHP library for asynchronously serving WebSockets.\nBuild up your application through simple interfaces and re-use your application without changing any of its code just by combining different components.\n\n## Reviving Ratchet!\n\nWe're currently aiming to revive Ratchet to get it up to date with the latest versions and use this as a starting point for bigger updates to come.\nWe need your help to achieve this goal, see [ticket #1054](https://github.com/ratchetphp/Ratchet/issues/1054) for ways to help out. ❤️\n\n## Requirements\n\nShell access is required and root access is recommended.\nTo avoid proxy/firewall blockage it's recommended WebSockets are requested on port 80 or 443 (SSL), which requires root access.\nIn order to do this, along with your sync web stack, you can either use a reverse proxy or two separate machines.\nYou can find more details in the [server conf docs](http://socketo.me/docs/deploy#server_configuration).\n\n### Documentation\n\nUser and API documentation is available on Ratchet's website: http://socketo.me\n\nSee https://github.com/cboden/Ratchet-examples for some out-of-the-box working demos using Ratchet.\n\nNeed help?  Have a question?  Want to provide feedback?  Write a message on the [Google Groups Mailing List](https://groups.google.com/forum/#!forum/ratchet-php).\n\n---\n\n### A quick example\n\n```php\n<?php\nuse Ratchet\\MessageComponentInterface;\nuse Ratchet\\ConnectionInterface;\n\n    // Make sure composer dependencies have been installed\n    require __DIR__ . '/vendor/autoload.php';\n\n/**\n * chat.php\n * Send any incoming messages to all connected clients (except sender)\n */\nclass MyChat implements MessageComponentInterface {\n    protected $clients;\n\n    public function __construct() {\n        $this->clients = new \\SplObjectStorage;\n    }\n\n    public function onOpen(ConnectionInterface $conn) {\n        $this->clients->attach($conn);\n    }\n\n    public function onMessage(ConnectionInterface $from, $msg) {\n        foreach ($this->clients as $client) {\n            if ($from != $client) {\n                $client->send($msg);\n            }\n        }\n    }\n\n    public function onClose(ConnectionInterface $conn) {\n        $this->clients->detach($conn);\n    }\n\n    public function onError(ConnectionInterface $conn, \\Exception $e) {\n        $conn->close();\n    }\n}\n\n    // Run the server application through the WebSocket protocol on port 8080\n    $app = new Ratchet\\App('localhost', 8080);\n    $app->route('/chat', new MyChat, array('*'));\n    $app->route('/echo', new Ratchet\\Server\\EchoServer, array('*'));\n    $app->run();\n```\n\n    $ php chat.php\n\n```javascript\n    // Then some JavaScript in the browser:\n    var conn = new WebSocket('ws://localhost:8080/echo');\n    conn.onmessage = function(e) { console.log(e.data); };\n    conn.onopen = function(e) { conn.send('Hello Me!'); };\n```\n\n[GA Image]: https://github.com/ratchetphp/Ratchet/workflows/CI/badge.svg\n\n[GA Link]: https://github.com/ratchetphp/Ratchet/actions?query=workflow%3A%22CI%22+branch%3Amaster\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1865234375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report security issues to:\n    \n* Chris Boden [cboden@gmail.com](cboden@gmail.com)\n* Matt Bonneau [matt@bonneau.net](matt@bonneau.net)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.0771484375,
          "content": "{\n    \"name\": \"cboden/ratchet\"\n  , \"type\": \"library\"\n  , \"description\": \"PHP WebSocket library\"\n  , \"keywords\": [\"WebSockets\", \"Server\", \"Ratchet\", \"Sockets\", \"WebSocket\"]\n  , \"homepage\": \"http://socketo.me\"\n  , \"license\": \"MIT\"\n  , \"authors\": [\n        {\n            \"name\": \"Chris Boden\"\n          , \"email\": \"cboden@gmail.com\"\n          , \"role\": \"Developer\"\n        }\n      , {\n            \"name\": \"Matt Bonneau\"\n          , \"role\": \"Developer\"\n        }\n    ]\n  , \"support\": {\n        \"issues\": \"https://github.com/ratchetphp/Ratchet/issues\"\n      , \"chat\":    \"https://gitter.im/reactphp/reactphp\"\n    }\n  , \"autoload\": {\n        \"psr-4\": {\n            \"Ratchet\\\\\": \"src/Ratchet\"\n        }\n    }\n  , \"require\": {\n        \"php\": \">=5.4.2\"\n      , \"ratchet/rfc6455\": \"^0.3.1\"\n      , \"react/socket\": \"^1.0 || ^0.8 || ^0.7 || ^0.6 || ^0.5\"\n      , \"react/event-loop\": \">=0.4\"\n      , \"guzzlehttp/psr7\": \"^1.7|^2.0\"\n      , \"symfony/http-foundation\": \"^2.6|^3.0|^4.0|^5.0|^6.0\"\n      , \"symfony/routing\": \"^2.6|^3.0|^4.0|^5.0|^6.0\"\n    }\n  , \"require-dev\": {\n        \"phpunit/phpunit\": \"~4.8\"\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6865234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    forceCoversAnnotation=\"true\"\n    mapTestClassNameToCoveredClassName=\"true\"\n    bootstrap=\"tests/bootstrap.php\"\n    colors=\"true\"\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    syntaxCheck=\"false\"\n    stopOnError=\"false\"\n>\n\n    <testsuites>\n        <testsuite name=\"unit\">\n            <directory>./tests/unit/</directory>\n        </testsuite>\n    </testsuites>\n\n    <testsuites>\n        <testsuite name=\"integration\">\n            <directory>./tests/integration/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}