{
  "metadata": {
    "timestamp": 1736712287727,
    "page": 63,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/css-selector",
      "stars": 7431,
      "defaultBranch": "7.2",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "/Tests export-ignore\n/phpunit.xml.dist export-ignore\n/.git* export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "vendor/\ncomposer.lock\nphpunit.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.3466796875,
          "content": "CHANGELOG\n=========\n\n7.1\n---\n\n * Add support for `:is()`\n * Add support for `:where()`\n\n6.3\n---\n\n * Add support for `:scope`\n\n4.4.0\n-----\n\n * Added support for `*:only-of-type`\n\n2.8.0\n-----\n\n * Added the `CssSelectorConverter` class as a non-static API for the component.\n * Deprecated the `CssSelector` static API of the component.\n\n2.1.0\n-----\n\n * none\n"
        },
        {
          "name": "CssSelectorConverter.php",
          "type": "blob",
          "size": 2.078125,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Component\\CssSelector;\n\nuse Symfony\\Component\\CssSelector\\Parser\\Shortcut\\ClassParser;\nuse Symfony\\Component\\CssSelector\\Parser\\Shortcut\\ElementParser;\nuse Symfony\\Component\\CssSelector\\Parser\\Shortcut\\EmptyStringParser;\nuse Symfony\\Component\\CssSelector\\Parser\\Shortcut\\HashParser;\nuse Symfony\\Component\\CssSelector\\XPath\\Extension\\HtmlExtension;\nuse Symfony\\Component\\CssSelector\\XPath\\Translator;\n\n/**\n * CssSelectorConverter is the main entry point of the component and can convert CSS\n * selectors to XPath expressions.\n *\n * @author Christophe Coevoet <stof@notk.org>\n */\nclass CssSelectorConverter\n{\n    private Translator $translator;\n    private array $cache;\n\n    private static array $xmlCache = [];\n    private static array $htmlCache = [];\n\n    /**\n     * @param bool $html Whether HTML support should be enabled. Disable it for XML documents\n     */\n    public function __construct(bool $html = true)\n    {\n        $this->translator = new Translator();\n\n        if ($html) {\n            $this->translator->registerExtension(new HtmlExtension($this->translator));\n            $this->cache = &self::$htmlCache;\n        } else {\n            $this->cache = &self::$xmlCache;\n        }\n\n        $this->translator\n            ->registerParserShortcut(new EmptyStringParser())\n            ->registerParserShortcut(new ElementParser())\n            ->registerParserShortcut(new ClassParser())\n            ->registerParserShortcut(new HashParser())\n        ;\n    }\n\n    /**\n     * Translates a CSS expression to its XPath equivalent.\n     *\n     * Optionally, a prefix can be added to the resulting XPath\n     * expression with the $prefix parameter.\n     */\n    public function toXPath(string $cssExpr, string $prefix = 'descendant-or-self::'): string\n    {\n        return $this->cache[$prefix][$cssExpr] ??= $this->translator->cssToXPath($cssExpr, $prefix);\n    }\n}\n"
        },
        {
          "name": "Exception",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2004-present Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Node",
          "type": "tree",
          "content": null
        },
        {
          "name": "Parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.671875,
          "content": "CssSelector Component\n=====================\n\nThe CssSelector component converts CSS selectors to XPath expressions.\n\nResources\n---------\n\n * [Documentation](https://symfony.com/doc/current/components/css_selector.html)\n * [Contributing](https://symfony.com/doc/current/contributing/index.html)\n * [Report issues](https://github.com/symfony/symfony/issues) and\n   [send Pull Requests](https://github.com/symfony/symfony/pulls)\n   in the [main Symfony repository](https://github.com/symfony/symfony)\n\nCredits\n-------\n\nThis component is a port of the Python cssselect library\n[v0.7.1](https://github.com/SimonSapin/cssselect/releases/tag/v0.7.1),\nwhich is distributed under the BSD license.\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "XPath",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7919921875,
          "content": "{\n    \"name\": \"symfony/css-selector\",\n    \"type\": \"library\",\n    \"description\": \"Converts CSS selectors to XPath expressions\",\n    \"keywords\": [],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Jean-FranÃ§ois Simon\",\n            \"email\": \"jeanfrancois.simon@sensiolabs.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.2\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Component\\\\CssSelector\\\\\": \"\" },\n        \"exclude-from-classmap\": [\n            \"/Tests/\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8486328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/9.3/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony CssSelector Component Test Suite\">\n            <directory>./Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./</directory>\n        </include>\n        <exclude>\n            <directory>./Resources</directory>\n            <directory>./Tests</directory>\n            <directory>./vendor</directory>\n        </exclude>\n    </coverage>\n</phpunit>\n"
        }
      ]
    }
  ]
}