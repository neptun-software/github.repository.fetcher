{
  "metadata": {
    "timestamp": 1736712297918,
    "page": 84,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doctrine/annotations",
      "stars": 6744,
      "defaultBranch": "2.0.x",
      "files": [
        {
          "name": ".doctrine-project.json",
          "type": "blob",
          "size": 1.59765625,
          "content": "{\n    \"active\": false,\n    \"name\": \"Annotations\",\n    \"slug\": \"annotations\",\n    \"docsSlug\": \"doctrine-annotations\",\n    \"versions\": [\n        {\n            \"name\": \"2.0\",\n            \"branchName\": \"2.0.x\",\n            \"aliases\": [\n                \"current\",\n                \"stable\"\n            ],\n            \"current\": true,\n            \"maintained\": true\n        },\n        {\n            \"name\": \"1.14\",\n            \"branchName\": \"1.14.x\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.13\",\n            \"branchName\": \"1.13.x\",\n            \"slug\": \"1.13\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.12\",\n            \"branchName\": \"1.12.x\",\n            \"slug\": \"1.12\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.11\",\n            \"branchName\": \"1.11.x\",\n            \"slug\": \"1.11\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.10\",\n            \"branchName\": \"1.10.x\",\n            \"slug\": \"1.10\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.9\",\n            \"branchName\": \"1.9.x\",\n            \"slug\": \"1.9\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.8\",\n            \"branchName\": \"1.8\",\n            \"slug\": \"1.8\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.7\",\n            \"branchName\": \"1.7\",\n            \"slug\": \"1.7\",\n            \"maintained\": false\n        },\n        {\n            \"name\": \"1.6\",\n            \"branchName\": \"1.6\",\n            \"slug\": \"1.6\",\n            \"maintained\": false\n        }\n    ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.18359375,
          "content": "/.* export-ignore\n/tests export-ignore\n/phpbench.json.dist export-ignore\n/phpcs.xml.dist export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml.dist export-ignore\n/psalm.xml export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1015625,
          "content": "/vendor/\n/composer.lock\n/composer.phar\n/phpbench.json\n/phpunit.xml\n/.phpcs-cache\n/.phpunit.result.cache\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "Copyright (c) 2006-2013 Doctrine Project\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.783203125,
          "content": "⚠️ PHP 8 introduced\n[attributes](https://www.php.net/manual/en/language.attributes.overview.php),\nwhich are a native replacement for annotations. As such, this library is\nconsidered feature complete, and should receive exclusively bugfixes and\nsecurity fixes.\n\nWe do not recommend using this library in new projects and encourage authors\nof downstream libraries to offer support for attributes as an alternative to\nDoctrine Annotations.\n\nHave a look at [our blog](https://www.doctrine-project.org/2022/11/04/annotations-to-attributes.html)\nto learn more.\n\n# Doctrine Annotations\n\n[![Build Status](https://github.com/doctrine/annotations/workflows/Continuous%20Integration/badge.svg?label=build)](https://github.com/doctrine/persistence/actions)\n[![Dependency Status](https://www.versioneye.com/package/php--doctrine--annotations/badge.png)](https://www.versioneye.com/package/php--doctrine--annotations)\n[![Reference Status](https://www.versioneye.com/php/doctrine:annotations/reference_badge.svg)](https://www.versioneye.com/php/doctrine:annotations/references)\n[![Total Downloads](https://poser.pugx.org/doctrine/annotations/downloads.png)](https://packagist.org/packages/doctrine/annotations)\n[![Latest Stable Version](https://img.shields.io/packagist/v/doctrine/annotations.svg?label=stable)](https://packagist.org/packages/doctrine/annotations)\n\nDocblock Annotations Parser library (extracted from [Doctrine Common](https://github.com/doctrine/common)).\n\n## Documentation\n\nSee the [doctrine-project website](https://www.doctrine-project.org/projects/doctrine-annotations/en/stable/index.html).\n\n## Contributing\n\nWhen making a pull request, make sure your changes follow the\n[Coding Standard Guidelines](https://www.doctrine-project.org/projects/doctrine-coding-standard/en/current/reference/index.html#introduction).\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 0.9375,
          "content": "# Upgrade from 1.0.x to 2.0.x\n\n- The `NamedArgumentConstructorAnnotation` has been removed. Use the `@NamedArgumentConstructor`\n  annotation instead.\n- `SimpleAnnotationReader` has been removed.\n- `DocLexer::peek()` and `DocLexer::glimpse` now return\n`Doctrine\\Common\\Lexer\\Token` objects. When using `doctrine/lexer` 2, these\nimplement `ArrayAccess` as a way for you to still be able to treat them as\narrays in some ways.\n- `CachedReader` and `FileCacheReader` have been removed use `PsrCachedReader` instead.\n- `AnnotationRegistry` methods related to registering annotations instead of\n  using autoloading have been removed.\n- Parameter type declarations have been added to all methods of all classes. If\nyou have classes inheriting from classes inside this package, you should add\nparameter and return type declarations.\n- Support for PHP < 7.2 has been removed\n- `PhpParser::parseClass()` has been removed. Use\n  `PhpParser::parseUseStatements()` instead.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.1044921875,
          "content": "{\n    \"name\": \"doctrine/annotations\",\n    \"description\": \"Docblock Annotations Parser\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"annotations\",\n        \"docblock\",\n        \"parser\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Guilherme Blanco\",\n            \"email\": \"guilhermeblanco@gmail.com\"\n        },\n        {\n            \"name\": \"Roman Borschel\",\n            \"email\": \"roman@code-factory.org\"\n        },\n        {\n            \"name\": \"Benjamin Eberlei\",\n            \"email\": \"kontakt@beberlei.de\"\n        },\n        {\n            \"name\": \"Jonathan Wage\",\n            \"email\": \"jonwage@gmail.com\"\n        },\n        {\n            \"name\": \"Johannes Schmitt\",\n            \"email\": \"schmittjoh@gmail.com\"\n        }\n    ],\n    \"homepage\": \"https://www.doctrine-project.org/projects/annotations.html\",\n    \"require\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"ext-tokenizer\": \"*\",\n        \"doctrine/lexer\": \"^2 || ^3\",\n        \"psr/cache\": \"^1 || ^2 || ^3\"\n    },\n    \"require-dev\": {\n        \"doctrine/cache\": \"^2.0\",\n        \"doctrine/coding-standard\": \"^10\",\n        \"phpstan/phpstan\": \"^1.10.28\",\n        \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.5\",\n        \"symfony/cache\": \"^5.4 || ^6.4 || ^7\",\n        \"vimeo/psalm\": \"^4.30 || ^5.14\"\n    },\n    \"suggest\": {\n        \"php\": \"PHP 8.0 or higher comes with attributes, a native replacement for annotations\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Common\\\\Annotations\\\\\": \"lib/Doctrine/Common/Annotations\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Doctrine\\\\Performance\\\\Common\\\\Annotations\\\\\": \"tests/Doctrine/Performance/Common/Annotations\",\n            \"Doctrine\\\\Tests\\\\Common\\\\Annotations\\\\\": \"tests/Doctrine/Tests/Common/Annotations\"\n        },\n        \"files\": [\n            \"tests/Doctrine/Tests/Common/Annotations/Fixtures/functions.php\",\n            \"tests/Doctrine/Tests/Common/Annotations/Fixtures/SingleClassLOC1000.php\"\n        ]\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true\n        },\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpbench.json.dist",
          "type": "blob",
          "size": 0.12890625,
          "content": "{\n    \"bootstrap\": \"tests/Doctrine/Performance/Common/bootstrap.php\",\n    \"path\": \"tests/Doctrine/Performance/Common/Annotations\"\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 9.4970703125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\"\n>\n    <arg name=\"basepath\" value=\".\"/>\n    <arg name=\"extensions\" value=\"php\"/>\n    <arg name=\"parallel\" value=\"80\"/>\n    <arg name=\"cache\" value=\".phpcs-cache\"/>\n    <arg name=\"colors\"/>\n\n    <!-- Show progress of the run and show sniff names -->\n    <arg value=\"ps\"/>\n\n    <config name=\"php_version\" value=\"70100\"/>\n\n    <file>lib</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\">\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint\"/>\n        <exclude name=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\"/>\n        <exclude name=\"SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming\"/>\n        <exclude name=\"SlevomatCodingStandard.Classes.SuperfluousExceptionNaming\"/>\n        <exclude name=\"SlevomatCodingStandard.Classes.SuperfluousTraitNaming.SuperfluousSuffix\"/>\n        <exclude name=\"SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants.DisallowedLateStaticBindingForConstant\"/>\n        <exclude name=\"SlevomatCodingStandard.ControlStructures.ControlStructureSpacing.IncorrectLinesCountAfterLastControlStructure\"/>\n\n        <exclude name=\"PSR2.Methods.MethodDeclaration.Underscore\"/>\n        <!-- https://github.com/slevomat/coding-standard/issues/867 -->\n        <exclude name=\"SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountAfterLastControlStructure\"/>\n        <!-- See https://github.com/squizlabs/PHP_CodeSniffer/issues/2937 -->\n        <exclude name=\"Squiz.Arrays.ArrayDeclaration.ValueNoNewline\"/>\n        <exclude name=\"Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore\"/>\n    </rule>\n\n    <!-- Disable the rules that will require PHP 7.4 -->\n    <rule ref=\"SlevomatCodingStandard.TypeHints.PropertyTypeHint\">\n        <properties>\n            <property name=\"enableNativeTypeHint\" value=\"false\"/>\n        </properties>\n    </rule>\n\n    <rule ref=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\">\n        <exclude-pattern>*/lib/Doctrine/Common/Annotations/DocParser.php</exclude-pattern>\n    </rule>\n    <rule ref=\"Squiz.Classes.ValidClassName.NotCamelCaps\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/ClassNoNamespaceNoComment.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Commenting.ForbiddenAnnotations.AnnotationForbidden\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/AbstractReaderTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Commenting.DocCommentSpacing\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/AbstractReaderTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/SimpleAnnotationReaderTest.php</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash.UseStartsWithBackslash\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"PSR12.Files.ImportStatement.LeadingSlash\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.TypeHints.LongTypeHints.UsedLongTypeHint\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UseFromSameNamespace.UseFromSameNamespace\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash.UseStartsWithBackslash\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UnusedUses.UnusedUse\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.UseSpacing.IncorrectLinesCountBetweenSameTypeOfUse\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.MultipleUsesPerLine.MultipleUsesPerLine\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/*</exclude-pattern>\n    </rule>\n\n    <!-- https://github.com/slevomat/coding-standard/issues/1066 -->\n    <rule ref=\"SlevomatCodingStandard.PHP.UselessParentheses\">\n        <exclude-pattern>*/lib/Doctrine/Common/Annotations/DocParser.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/PhpParserTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM141Test.php</exclude-pattern>\n    </rule>\n\n    <!-- It is easier to understand tests that involve annotations if you can\n        declare several dummy classes with annotations in the same file -->\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n    <rule ref=\"Squiz.Classes.ClassFileName.NoMatch\">\n        <exclude-pattern>*/tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR1.Files.SideEffects.FoundWithSymbols\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM58Test.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/AbstractReaderTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/PhpParserTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/NamespaceWithClosureDeclaration.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/ClassWithRequire.php</exclude-pattern>\n    </rule>\n\n    <!-- these classes do not have a namespace on purpose -->\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MissingNamespace\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/SingleClassLOC1000.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/NonNamespacedClass.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM58Entity.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/ClassNoNamespaceNoComment.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/TopLevelAnnotation.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint\">\n        <!-- there is a class property with an empty var annotation on purpose -->\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/AbstractReaderTest.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/DummyClass.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/ClassWithValidAnnotationTarget.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Namespaces.DisallowGroupUse.DisallowedGroupUse\">\n        <!-- The name of the file alone explains this -->\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/GroupUseStatement.php</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/AnnotationWithVarType.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousSuffix\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/EmptyInterface.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/InterfaceThatExtendsAnInterface.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming.SuperfluousPrefix\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/InterfaceThatExtendsAnInterface.php</exclude-pattern>\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/InterfaceWithConstants.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase\">\n        <!-- Usage of mixed case constants seems pretty deliberate here -->\n        <exclude-pattern>*/lib/Doctrine/Common/Annotations/ImplicitlyIgnoredAnnotationNames.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Squiz.Functions.GlobalFunction.Found\">\n        <exclude-pattern>*/tests/Doctrine/Tests/Common/Annotations/Fixtures/functions.php</exclude-pattern>\n    </rule>\n\n    <!-- Single-line PHPDoc blocks will confuse PHPUnit 7.5 -->\n    <rule ref=\"SlevomatCodingStandard.Commenting.RequireOneLineDocComment.MultiLineDocComment\">\n        <exclude-pattern>*/tests</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 1.3076171875,
          "content": "parameters:\n    level: 3\n    phpVersion: 80200\n    paths:\n        - lib\n        - tests\n    scanFiles:\n        - tests/Doctrine/Tests/Common/Annotations/Fixtures/GlobalNamespacesPerFileWithClassAsFirst.php\n        - tests/Doctrine/Tests/Common/Annotations/Fixtures/GlobalNamespacesPerFileWithClassAsLast.php\n        - tests/Doctrine/Tests/Common/Annotations/Fixtures/NonNamespacedClass.php\n        - tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM58Entity.php\n    excludePaths:\n        - tests/*/Fixtures/*\n        - tests/Doctrine/Tests/Common/Annotations/ReservedKeywordsClasses.php\n        - tests/Doctrine/Tests/Common/Annotations/Ticket/DCOM58Entity.php\n        - tests/Doctrine/Tests/DoctrineTestCase.php\n        - tests/Doctrine/Tests/Common/Annotations/CachedReaderTest.php\n    polluteScopeWithLoopInitialAssignments: true\n    ignoreErrors:\n        - '#Instantiated class Doctrine_Tests_Common_Annotations_Fixtures_ClassNoNamespaceNoComment not found#'\n        - '#Property Doctrine\\\\Tests\\\\Common\\\\Annotations\\\\DummyClassNonAnnotationProblem::\\$foo has unknown class#'\n        - '#Call to an undefined static method PHPUnit\\\\Framework\\\\TestCase::expectExceptionMessageRegExp\\(\\)#'\n\n        # That tag is empty on purpose\n        - '#PHPDoc tag @var has invalid value \\(\\)\\: Unexpected token \"\\*/\", expected type at offset 9#'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.779296875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         colors=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         beStrictAboutTodoAnnotatedTests=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n         bootstrap=\"./tests/Doctrine/Tests/TestInit.php\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Doctrine Annotations Test Suite\">\n            <directory>./tests/Doctrine/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">./lib/Doctrine/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.849609375,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"7\"\n    phpVersion=\"8.2\"\n    resolveFromConfigFile=\"true\"\n    findUnusedBaselineEntry=\"true\"\n    findUnusedCode=\"false\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n>\n    <projectFiles>\n        <directory name=\"lib/Doctrine/Common/Annotations\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n    <issueHandlers>\n        <NoValue>\n            <errorLevel type=\"suppress\">\n                <file name=\"lib/Doctrine/Common/Annotations/Annotation/Enum.php\" />\n                <file name=\"lib/Doctrine/Common/Annotations/Annotation/Target.php\" />\n            </errorLevel>\n        </NoValue>\n    </issueHandlers>\n</psalm>\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}