{
  "metadata": {
    "timestamp": 1736712288095,
    "page": 64,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phar-io/manifest",
      "stars": 7427,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.302734375,
          "content": "/build           export-ignore\n/examples        export-ignore\n/tests           export-ignore\n/.gitattributes  export-ignore\n/.gitignore      export-ignore\n/.php_cs.dist    export-ignore\n/build.xml       export-ignore\n/phive.xml       export-ignore\n/phpunit.xml     export-ignore\n/psalm.xml       export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1025390625,
          "content": "/.idea\n/.php_cs.cache\n/src/autoload.php\n/tools\n/vendor\n\n/build\n.phpunit.result.cache\n.php-cs-fixer.cache\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 11.8603515625,
          "content": "<?php\n\nrequire __DIR__ . '/tools/php-cs-fixer.d/PhpdocSingleLineVarFixer.php';\n\n$header = file_get_contents(__DIR__ . '/tools/php-cs-fixer.d/header.txt');\n\nreturn (new PhpCsFixer\\Config())\n    ->registerCustomFixers([\n        new \\PharIo\\CSFixer\\PhpdocSingleLineVarFixer()\n    ])\n    ->setRiskyAllowed(true)\n    ->setRules(\n        [\n            'PharIo/phpdoc_single_line_var_fixer'           => true,\n\n            'align_multiline_comment'                       => true,\n            'array_indentation'                             => true,\n            'array_syntax'                                  => ['syntax' => 'short'],\n            'binary_operator_spaces'                        => [\n                'operators' => [\n                    '='  => 'align',\n                    '=>' => 'align',\n                ],\n            ],\n            'blank_line_after_namespace'                    => true,\n            'blank_line_after_opening_tag'                  => false,\n            'blank_line_before_statement'                   => [\n                'statements' => [\n                    'break',\n                    'continue',\n                    'declare',\n                    'do',\n                    'for',\n                    'foreach',\n                    'if',\n                    'include',\n                    'include_once',\n                    'require',\n                    'require_once',\n                    'return',\n                    'switch',\n                    'throw',\n                    'try',\n                    'while',\n                    'yield',\n                ],\n            ],\n            'braces'                                        => [\n                'allow_single_line_closure'                   => false,\n                'position_after_anonymous_constructs'         => 'same',\n                'position_after_control_structures'           => 'same',\n                'position_after_functions_and_oop_constructs' => 'same'\n            ],\n            'cast_spaces'                                   => ['space' => 'none'],\n\n            // This fixer removes the blank line at class start, no way to disable that, so we disable the fixer :(\n            //'class_attributes_separation'                   => ['elements' => ['const', 'method', 'property']],\n\n            'combine_consecutive_issets'                    => true,\n            'combine_consecutive_unsets'                    => true,\n            'compact_nullable_typehint'                     => true,\n            'concat_space'                                  => ['spacing' => 'one'],\n            'date_time_immutable'                           => true,\n            'declare_equal_normalize'                       => ['space' => 'single'],\n            'declare_strict_types'                          => true,\n            'dir_constant'                                  => true,\n            'elseif'                                        => true,\n            'encoding'                                      => true,\n            'full_opening_tag'                              => true,\n            'fully_qualified_strict_types'                  => true,\n            'function_declaration'                          => [\n                'closure_function_spacing' => 'one'\n            ],\n            'global_namespace_import'                       => [\n                'import_classes'   => true,\n                'import_constants' => true,\n                'import_functions' => true,\n            ],\n            'header_comment'                                => ['header' => $header, 'separate' => 'none'],\n            'indentation_type'                              => true,\n            'is_null'                                       => true,\n            'line_ending'                                   => true,\n            'list_syntax'                                   => ['syntax' => 'short'],\n            'logical_operators'                             => true,\n            'lowercase_cast'                                => true,\n            'constant_case'                                 => ['case' => 'lower'],\n            'lowercase_keywords'                            => true,\n            'lowercase_static_reference'                    => true,\n            'magic_constant_casing'                         => true,\n            'method_argument_space'                         => ['on_multiline' => 'ensure_fully_multiline'],\n            'modernize_types_casting'                       => true,\n            'multiline_comment_opening_closing'             => true,\n            'multiline_whitespace_before_semicolons'        => true,\n            'new_with_braces'                               => false,\n            'no_alias_functions'                            => true,\n            'no_alternative_syntax'                         => true,\n            'no_blank_lines_after_class_opening'            => false,\n            'no_blank_lines_after_phpdoc'                   => true,\n            'no_blank_lines_before_namespace'               => true,\n            'no_closing_tag'                                => true,\n            'no_empty_comment'                              => true,\n            'no_empty_phpdoc'                               => true,\n            'no_empty_statement'                            => true,\n            'no_extra_blank_lines'                          => true,\n            'no_homoglyph_names'                            => true,\n            'no_leading_import_slash'                       => true,\n            'no_leading_namespace_whitespace'               => true,\n            'no_mixed_echo_print'                           => ['use' => 'print'],\n            'no_multiline_whitespace_around_double_arrow'   => true,\n            'no_null_property_initialization'               => true,\n            'no_php4_constructor'                           => true,\n            'no_short_bool_cast'                            => true,\n            'echo_tag_syntax'                               => ['format' => 'long'],\n            'no_singleline_whitespace_before_semicolons'    => true,\n            'no_spaces_after_function_name'                 => true,\n            'no_spaces_inside_parenthesis'                  => true,\n            'no_superfluous_elseif'                         => true,\n            'no_superfluous_phpdoc_tags'                    => true,\n            'no_trailing_comma_in_list_call'                => true,\n            'no_trailing_comma_in_singleline_array'         => true,\n            'no_trailing_whitespace'                        => true,\n            'no_trailing_whitespace_in_comment'             => true,\n            'no_unneeded_control_parentheses'               => false,\n            'no_unneeded_curly_braces'                      => false,\n            'no_unneeded_final_method'                      => true,\n            'no_unreachable_default_argument_value'         => true,\n            'no_unset_on_property'                          => true,\n            'no_unused_imports'                             => true,\n            'no_useless_else'                               => true,\n            'no_useless_return'                             => true,\n            'no_whitespace_before_comma_in_array'           => true,\n            'no_whitespace_in_blank_line'                   => true,\n            'non_printable_character'                       => true,\n            'normalize_index_brace'                         => true,\n            'object_operator_without_whitespace'            => true,\n            'ordered_class_elements'                        => [\n                'order' => [\n                    'use_trait',\n                    'constant_public',\n                    'constant_protected',\n                    'constant_private',\n                    'property_public_static',\n                    'property_protected_static',\n                    'property_private_static',\n                    'property_public',\n                    'property_protected',\n                    'property_private',\n                    'method_public_static',\n                    'construct',\n                    'destruct',\n                    'magic',\n                    'phpunit',\n                    'method_public',\n                    'method_protected',\n                    'method_private',\n                    'method_protected_static',\n                    'method_private_static',\n                ],\n            ],\n            'ordered_imports' => [\n                'imports_order' => [\n                    PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_CLASS,\n                    PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_CONST,\n                    PhpCsFixer\\Fixer\\Import\\OrderedImportsFixer::IMPORT_TYPE_FUNCTION,\n                ]\n            ],\n            'phpdoc_add_missing_param_annotation'           => true,\n            'phpdoc_align'                                  => true,\n            'phpdoc_annotation_without_dot'                 => true,\n            'phpdoc_indent'                                 => true,\n            'phpdoc_no_access'                              => true,\n            'phpdoc_no_empty_return'                        => true,\n            'phpdoc_no_package'                             => true,\n            'phpdoc_order'                                  => true,\n            'phpdoc_return_self_reference'                  => true,\n            'phpdoc_scalar'                                 => true,\n            'phpdoc_separation'                             => true,\n            'phpdoc_single_line_var_spacing'                => true,\n            'phpdoc_to_comment'                             => true,\n            'phpdoc_trim'                                   => true,\n            'phpdoc_trim_consecutive_blank_line_separation' => true,\n            'phpdoc_types'                                  => ['groups' => ['simple', 'meta']],\n            'phpdoc_types_order'                            => true,\n            'phpdoc_to_return_type'                         => true,\n            'phpdoc_var_without_name'                       => true,\n            'pow_to_exponentiation'                         => true,\n            'protected_to_private'                          => true,\n            'return_assignment'                             => true,\n            'return_type_declaration'                       => ['space_before' => 'none'],\n            'self_accessor'                                 => false,\n            'semicolon_after_instruction'                   => true,\n            'set_type_to_cast'                              => true,\n            'short_scalar_cast'                             => true,\n            'simplified_null_return'                        => true,\n            'single_blank_line_at_eof'                      => true,\n            'single_import_per_statement'                   => true,\n            'single_line_after_imports'                     => true,\n            'single_quote'                                  => true,\n            'standardize_not_equals'                        => true,\n            'ternary_to_null_coalescing'                    => true,\n            'trailing_comma_in_multiline'                   => false,\n            'trim_array_spaces'                             => true,\n            'unary_operator_spaces'                         => true,\n            'visibility_required'                           => [\n                'elements' => [\n                    'const',\n                    'method',\n                    'property',\n                ],\n            ],\n            'void_return'                                   => true,\n            'whitespace_after_comma_in_array'               => true,\n            'yoda_style'                                    => false\n        ]\n    )\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->files()\n            ->in(__DIR__ . '/build')\n            ->in(__DIR__ . '/src')\n            ->in(__DIR__ . '/tests')\n            ->notName('autoload.php')\n    );\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.4775390625,
          "content": "# Changelog\n\nAll notable changes to phar-io/manifest are documented in this file using the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [2.0.4] - 03-03-2024\n\n### Changed\n\n- Make `EMail` an optional attribute for author\n- Stick with PHP 7.2 compatibilty \n- Do not use implict nullable type (thanks @sebastianbergmann), this should make things work on PHP 8.4\n\n## [2.0.3] - 20.07.2021\n\n- Fixed PHP 7.2 / PHP 7.3 incompatibility introduced in previous release\n\n## [2.0.2] - 20.07.2021\n\n- Fixed PHP 8.1 deprecation notice\n\n## [2.0.1] - 27.06.2020\n\nThis release now supports the use of PHP 7.2+ and ^8.0\n\n## [2.0.0] - 10.05.2020\n\nThis release now requires PHP 7.2+\n\n### Changed\n\n- Upgraded to phar-io/version 3.0\n    - Version strings `v1.2.3` will now be converted to valid semantic version strings `1.2.3`\n    - Abreviated strings like `1.0` will get expaneded to `1.0.0`  \n\n### Unreleased\n\n[Unreleased]: https://github.com/phar-io/manifest/compare/2.1.0...HEAD\n[2.1.0]: https://github.com/phar-io/manifest/compare/2.0.3...2.1.0\n[2.0.3]: https://github.com/phar-io/manifest/compare/2.0.2...2.0.3\n[2.0.2]: https://github.com/phar-io/manifest/compare/2.0.1...2.0.2\n[2.0.1]: https://github.com/phar-io/manifest/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/phar-io/manifest/compare/1.0.1...2.0.0\n[1.0.3]: https://github.com/phar-io/manifest/compare/1.0.2...1.0.3\n[1.0.2]: https://github.com/phar-io/manifest/compare/1.0.1...1.0.2\n[1.0.1]: https://github.com/phar-io/manifest/compare/1.0.0...1.0.1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.59375,
          "content": "Phar.io - Manifest\n\nCopyright (c) 2016-2019 Arne Blankerts <arne@blankerts.de>, Sebastian Heuer <sebastian@phpeople.de>, Sebastian Bergmann <sebastian@phpunit.de>, and contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of Arne Blankerts nor the names of contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT  * NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6240234375,
          "content": "# Manifest\n\nComponent for reading [phar.io](https://phar.io/) manifest information from a [PHP Archive (PHAR)](http://php.net/phar).\n\n## Installation\n\nYou can add this library as a local, per-project dependency to your project using [Composer](https://getcomposer.org/):\n\n    composer require phar-io/manifest\n\nIf you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:\n\n    composer require --dev phar-io/manifest\n\n## Usage Examples\n\n### Read from `manifest.xml`\n```php\nuse PharIo\\Manifest\\ManifestLoader;\nuse PharIo\\Manifest\\ManifestSerializer;\n\n$manifest = ManifestLoader::fromFile('manifest.xml');\n\nvar_dump($manifest);\n\necho (new ManifestSerializer)->serializeToString($manifest);\n```\n\n<details>\n  <summary>Output</summary>\n    \n```shell\nobject(PharIo\\Manifest\\Manifest)#14 (6) {\n  [\"name\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Manifest\\ApplicationName)#10 (1) {\n    [\"name\":\"PharIo\\Manifest\\ApplicationName\":private]=>\n    string(12) \"some/library\"\n  }\n  [\"version\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Version\\Version)#12 (5) {\n    [\"originalVersionString\":\"PharIo\\Version\\Version\":private]=>\n    string(5) \"1.0.0\"\n    [\"major\":\"PharIo\\Version\\Version\":private]=>\n    object(PharIo\\Version\\VersionNumber)#13 (1) {\n      [\"value\":\"PharIo\\Version\\VersionNumber\":private]=>\n      int(1)\n    }\n    [\"minor\":\"PharIo\\Version\\Version\":private]=>\n    object(PharIo\\Version\\VersionNumber)#23 (1) {\n      [\"value\":\"PharIo\\Version\\VersionNumber\":private]=>\n      int(0)\n    }\n    [\"patch\":\"PharIo\\Version\\Version\":private]=>\n    object(PharIo\\Version\\VersionNumber)#22 (1) {\n      [\"value\":\"PharIo\\Version\\VersionNumber\":private]=>\n      int(0)\n    }\n    [\"preReleaseSuffix\":\"PharIo\\Version\\Version\":private]=>\n    NULL\n  }\n  [\"type\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Manifest\\Library)#6 (0) {\n  }\n  [\"copyrightInformation\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Manifest\\CopyrightInformation)#19 (2) {\n    [\"authors\":\"PharIo\\Manifest\\CopyrightInformation\":private]=>\n    object(PharIo\\Manifest\\AuthorCollection)#9 (1) {\n      [\"authors\":\"PharIo\\Manifest\\AuthorCollection\":private]=>\n      array(1) {\n        [0]=>\n        object(PharIo\\Manifest\\Author)#15 (2) {\n          [\"name\":\"PharIo\\Manifest\\Author\":private]=>\n          string(13) \"Reiner Zufall\"\n          [\"email\":\"PharIo\\Manifest\\Author\":private]=>\n          object(PharIo\\Manifest\\Email)#16 (1) {\n            [\"email\":\"PharIo\\Manifest\\Email\":private]=>\n            string(16) \"reiner@zufall.de\"\n          }\n        }\n      }\n    }\n    [\"license\":\"PharIo\\Manifest\\CopyrightInformation\":private]=>\n    object(PharIo\\Manifest\\License)#11 (2) {\n      [\"name\":\"PharIo\\Manifest\\License\":private]=>\n      string(12) \"BSD-3-Clause\"\n      [\"url\":\"PharIo\\Manifest\\License\":private]=>\n      object(PharIo\\Manifest\\Url)#18 (1) {\n        [\"url\":\"PharIo\\Manifest\\Url\":private]=>\n        string(26) \"https://domain.tld/LICENSE\"\n      }\n    }\n  }\n  [\"requirements\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Manifest\\RequirementCollection)#17 (1) {\n    [\"requirements\":\"PharIo\\Manifest\\RequirementCollection\":private]=>\n    array(1) {\n      [0]=>\n      object(PharIo\\Manifest\\PhpVersionRequirement)#20 (1) {\n        [\"versionConstraint\":\"PharIo\\Manifest\\PhpVersionRequirement\":private]=>\n        object(PharIo\\Version\\SpecificMajorAndMinorVersionConstraint)#24 (3) {\n          [\"originalValue\":\"PharIo\\Version\\AbstractVersionConstraint\":private]=>\n          string(3) \"7.0\"\n          [\"major\":\"PharIo\\Version\\SpecificMajorAndMinorVersionConstraint\":private]=>\n          int(7)\n          [\"minor\":\"PharIo\\Version\\SpecificMajorAndMinorVersionConstraint\":private]=>\n          int(0)\n        }\n      }\n    }\n  }\n  [\"bundledComponents\":\"PharIo\\Manifest\\Manifest\":private]=>\n  object(PharIo\\Manifest\\BundledComponentCollection)#8 (1) {\n    [\"bundledComponents\":\"PharIo\\Manifest\\BundledComponentCollection\":private]=>\n    array(0) {\n    }\n  }\n}\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phar xmlns=\"https://phar.io/xml/manifest/1.0\">\n    <contains name=\"some/library\" version=\"1.0.0\" type=\"library\"/>\n    <copyright>\n        <author name=\"Reiner Zufall\" email=\"reiner@zufall.de\"/>\n        <license type=\"BSD-3-Clause\" url=\"https://domain.tld/LICENSE\"/>\n    </copyright>\n    <requires>\n        <php version=\"7.0\"/>\n    </requires>\n</phar>\n```\n</details>\n\n### Create via API\n```php\n$bundled = new \\PharIo\\Manifest\\BundledComponentCollection();\n$bundled->add(\n    new \\PharIo\\Manifest\\BundledComponent('vendor/packageA', new \\PharIo\\Version\\Version('1.2.3-dev')\n    )\n);\n\n$manifest = new PharIo\\Manifest\\Manifest(\n    new \\PharIo\\Manifest\\ApplicationName('vendor/package'),\n    new \\PharIo\\Version\\Version('1.0.0'),\n    new \\PharIo\\Manifest\\Library(),\n    new \\PharIo\\Manifest\\CopyrightInformation(\n        new \\PharIo\\Manifest\\AuthorCollection(),\n        new \\PharIo\\Manifest\\License(\n            'BSD-3-Clause',\n            new \\PharIo\\Manifest\\Url('https://spdx.org/licenses/BSD-3-Clause.html')\n        )\n    ),\n    new \\PharIo\\Manifest\\RequirementCollection(),\n    $bundled\n);\n\necho (new ManifestSerializer)->serializeToString($manifest);\n```\n\n<details>\n  <summary>Output</summary>\n    \n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phar xmlns=\"https://phar.io/xml/manifest/1.0\">\n    <contains name=\"vendor/package\" version=\"1.0.0\" type=\"library\"/>\n    <copyright>\n        <license type=\"BSD-3-Clause\" url=\"https://spdx.org/licenses/BSD-3-Clause.html\"/>\n    </copyright>\n    <requires>\n        <php version=\"*\"/>\n    </requires>\n    <bundles>\n        <component name=\"vendor/packageA\" version=\"1.2.3-dev\"/>\n    </bundles>\n</phar>\n```\n    \n</details>\n\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 3.7119140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"manifest\" default=\"setup\">\n    <property name=\"phive.bin\" value=\"phive\" />\n\n    <target name=\"setup\" depends=\"clean,install-tools,install-dependencies\"/>\n\n    <target name=\"clean\" unless=\"clean.done\" description=\"Cleanup build artifacts\">\n        <delete dir=\"${basedir}/tools\"/>\n        <delete dir=\"${basedir}/vendor\"/>\n        <delete file=\"${basedir}/src/autoload.php\"/>\n\n        <property name=\"clean.done\" value=\"true\"/>\n    </target>\n\n    <target name=\"prepare\" unless=\"prepare.done\" depends=\"clean\" description=\"Prepare for build\">\n        <property name=\"prepare.done\" value=\"true\"/>\n    </target>\n\n    <target name=\"install-dependencies\" description=\"Install dependencies with Composer\">\n        <exec executable=\"${basedir}/tools/composer\" taskname=\"composer\">\n            <env key=\"COMPOSER_DISABLE_XDEBUG_WARN\" value=\"1\"/>\n            <arg value=\"install\"/>\n            <arg value=\"--no-interaction\"/>\n            <arg value=\"--no-progress\"/>\n            <arg value=\"--no-ansi\"/>\n            <arg value=\"--optimize-autoloader\"/>\n        </exec>\n    </target>\n\n    <target name=\"install-tools\" unless=\"tools-installed\" depends=\"-tools-installed\" description=\"Install tools with Phive\">\n        <exec executable=\"${phive.bin}\" taskname=\"phive\" failonerror=\"true\">\n            <arg value=\"--no-progress\" />\n            <arg value=\"install\"/>\n            <arg value=\"--copy\" />\n            <arg value=\"--trust-gpg-keys\" />\n            <!--        phpab,           phpunit,         phpstan,         psaml,           php-cs-fixer,    composer     -->\n            <arg value=\"4AA394086372C20A,2A8299CE842DD38C,CF1A108D0E7AE720,12CE0F1D262429A5,E82B2FB314E9906E,CBB3D576F2A0946F\" />\n        </exec>\n    </target>\n\n    <target name=\"php-cs-fixer\" depends=\"install-tools\" description=\"Dry run php csfixer\">\n        <exec executable=\"${basedir}/tools/php-cs-fixer\" failonerror=\"true\">\n            <arg value=\"fix\" />\n            <arg value=\"--dry-run\" />\n        </exec>\n    </target>\n\n    <target name=\"psalm\" depends=\"install-tools,install-dependencies\" description=\"Run psalm\">\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-cache-clear\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--clear-cache\" />\n        </exec>\n\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm\" failonerror=\"true\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--show-info=true\" />\n            <arg value=\"--stats\" />\n        </exec>\n    </target>\n\n    <target name=\"psalm-baseline\" depends=\"install-tools,install-dependencies\" description=\"Run psalm\">\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-cache-clear\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--clear-cache\" />\n        </exec>\n\n        <exec executable=\"${basedir}/tools/psalm\" taskname=\"psalm-baseline\">\n            <arg value=\"--config=psalm.xml\" />\n            <arg value=\"--set-baseline=build/psalm-baseline.xml\" />\n            <arg value=\"--show-info=false\" />\n        </exec>\n    </target>\n\n    <target name=\"test\" depends=\"install-tools,install-dependencies\" description=\"Run tests\">\n        <exec executable=\"${basedir}/tools/phpunit\" taskname=\"phpunit\"/>\n    </target>\n\n    <target name=\"phpunit-ci\">\n        <condition property=\"phpunit\" value=\"phpunit.bat\" else=\"phpunit\">\n            <os family=\"windows\" />\n        </condition>\n        <exec executable=\"${basedir}/tools/${phpunit}\" taskname=\"phpunit\">\n            <arg value=\"--coverage-clover build/logs/clover.xml\" />\n        </exec>\n    </target>\n\n    <target name=\"-tools-installed\">\n        <available file=\"${basedir}/tools/phpunit\" property=\"tools-installed\" type=\"file\"/>\n    </target>\n</project>\n\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.8759765625,
          "content": "{\n  \"name\": \"phar-io/manifest\",\n  \"description\": \"Component for reading phar.io manifest information from a PHP Archive (PHAR)\",\n  \"license\": \"BSD-3-Clause\",\n  \"authors\": [\n    {\n      \"name\": \"Arne Blankerts\",\n      \"email\": \"arne@blankerts.de\",\n      \"role\": \"Developer\"\n    },\n    {\n      \"name\": \"Sebastian Heuer\",\n      \"email\": \"sebastian@phpeople.de\",\n      \"role\": \"Developer\"\n    },\n    {\n      \"name\": \"Sebastian Bergmann\",\n      \"email\": \"sebastian@phpunit.de\",\n      \"role\": \"Developer\"\n    }\n  ],\n  \"support\": {\n    \"issues\": \"https://github.com/phar-io/manifest/issues\"\n  },\n  \"require\": {\n    \"php\": \"^7.2 || ^8.0\",\n    \"ext-dom\": \"*\",\n    \"ext-phar\": \"*\",\n    \"ext-libxml\": \"*\",\n    \"ext-xmlwriter\": \"*\",\n    \"phar-io/version\": \"^3.0.1\"\n  },\n  \"autoload\": {\n    \"classmap\": [\n      \"src/\"\n    ]\n  },\n  \"extra\": {\n    \"branch-alias\": {\n        \"dev-master\": \"2.0.x-dev\"\n    }\n  }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 2.4990234375,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"279b3c4fe44357abd924fdcc0cfa5664\",\n    \"packages\": [\n        {\n            \"name\": \"phar-io/version\",\n            \"version\": \"3.2.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/phar-io/version.git\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"reference\": \"4f7fd7836c6f332bb2933569e566a0d6c4cbed74\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Arne Blankerts\",\n                    \"email\": \"arne@blankerts.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Heuer\",\n                    \"email\": \"sebastian@phpeople.de\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Sebastian Bergmann\",\n                    \"email\": \"sebastian@phpunit.de\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Library for handling version information and constraints\",\n            \"support\": {\n                \"issues\": \"https://github.com/phar-io/version/issues\",\n                \"source\": \"https://github.com/phar-io/version/tree/3.2.1\"\n            },\n            \"time\": \"2022-02-21T01:04:05+00:00\"\n        }\n    ],\n    \"packages-dev\": [],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"ext-dom\": \"*\",\n        \"ext-phar\": \"*\",\n        \"ext-libxml\": \"*\",\n        \"ext-xmlwriter\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.3.0\"\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest.xsd",
          "type": "blob",
          "size": 3.62109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\" targetNamespace=\"https://phar.io/xml/manifest/1.0\"\n           xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ns=\"https://phar.io/xml/manifest/1.0\">\n\n  <xs:element name=\"phar\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element ref=\"ns:contains\" maxOccurs=\"1\" />\n        <xs:element ref=\"ns:copyright\" maxOccurs=\"1\" />\n        <xs:element ref=\"ns:requires\" maxOccurs=\"1\" />\n        <xs:element ref=\"ns:bundles\" minOccurs=\"0\" maxOccurs=\"1\" />\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"contains\">\n    <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:string\">\n          <xs:attribute type=\"xs:string\" use=\"required\" name=\"name\"/>\n          <xs:attribute type=\"xs:string\" use=\"required\" name=\"version\"/>\n          <xs:attribute use=\"required\" name=\"type\">\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:enumeration value=\"application\"/>\n                <xs:enumeration value=\"extension\"/>\n                <xs:enumeration value=\"library\"/>\n                <xs:enumeration value=\"stub\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:attribute>\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"copyright\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:choice maxOccurs=\"unbounded\">\n          <xs:element ref=\"ns:author\" minOccurs=\"1\" maxOccurs=\"unbounded\" />\n        </xs:choice>\n        <xs:element ref=\"ns:license\" minOccurs=\"1\" maxOccurs=\"1\" />\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"author\">\n    <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:string\">\n          <xs:attribute type=\"xs:string\" use=\"required\" name=\"name\"/>\n          <xs:attribute type=\"xs:string\" use=\"optional\" name=\"email\"/>\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"license\">\n    <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:string\">\n          <xs:attribute type=\"xs:string\" use=\"required\" name=\"type\"/>\n          <xs:attribute type=\"xs:string\" use=\"required\" name=\"url\"/>\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"requires\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element ref=\"ns:php\" />\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"php\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element ref=\"ns:ext\" maxOccurs=\"unbounded\" minOccurs=\"0\"  />\n      </xs:sequence>\n      <xs:attribute type=\"xs:string\" use=\"required\" name=\"version\"/>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"ext\">\n    <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:string\">\n          <xs:attribute type=\"xs:string\" name=\"name\" use=\"required\" />\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"bundles\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element ref=\"ns:component\" maxOccurs=\"unbounded\" minOccurs=\"0\" />\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n\n  <xs:element name=\"component\">\n    <xs:complexType>\n      <xs:simpleContent>\n        <xs:extension base=\"xs:string\">\n          <xs:attribute type=\"xs:string\" name=\"name\" use=\"required\"/>\n          <xs:attribute type=\"xs:string\" name=\"version\" use=\"required\"/>\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n  </xs:element>\n\n</xs:schema>\n"
        },
        {
          "name": "phive.xml",
          "type": "blob",
          "size": 0.4775390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phive xmlns=\"https://phar.io/phive\">\n  <phar name=\"php-cs-fixer\" version=\"^3.17.0\" installed=\"3.17.0\" location=\"./tools/php-cs-fixer\" copy=\"true\"/>\n  <phar name=\"psalm\" version=\"^5.0\" installed=\"5.12.0\" location=\"./tools/psalm\" copy=\"true\"/>\n  <phar name=\"phpunit\" version=\"^9.6\" installed=\"9.6.8\" location=\"./tools/phpunit\" copy=\"true\"/>\n  <phar name=\"composer\" version=\"^2.5.5\" installed=\"2.5.7\" location=\"./tools/composer\" copy=\"true\"/>\n</phive>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.638671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" beStrictAboutCoversAnnotation=\"true\" beStrictAboutOutputDuringTests=\"true\" beStrictAboutTestsThatDoNotTestAnything=\"true\" beStrictAboutTodoAnnotatedTests=\"true\" verbose=\"true\">\n  <coverage processUncoveredFiles=\"true\">\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n  </coverage>\n  <testsuite name=\"phar.io manifest\">\n    <directory suffix=\"Test.php\">tests</directory>\n  </testsuite>\n</phpunit>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.599609375,
          "content": "<?xml version=\"1.0\"?>\n<psalm xmlns=\"https://getpsalm.org/schema/config\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    errorBaseline=\"build/psalm-baseline.xml\"\n    errorLevel=\"1\"\n    findUnusedVariablesAndParams=\"true\"\n    resolveFromConfigFile=\"true\"\n    strictBinaryOperands=\"true\"\n    findUnusedBaselineEntry=\"true\"\n    findUnusedCode=\"true\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}