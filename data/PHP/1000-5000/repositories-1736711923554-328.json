{
  "metadata": {
    "timestamp": 1736711923554,
    "page": 328,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/twig-bundle",
      "stars": 2492,
      "defaultBranch": "7.2",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "/Tests export-ignore\n/phpunit.xml.dist export-ignore\n/.git* export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "vendor/\ncomposer.lock\nphpunit.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.5146484375,
          "content": "CHANGELOG\n=========\n\n7.1\n---\n\n * Mark class `TemplateCacheWarmer` as `final`\n\n7.0\n---\n\n * Remove the `Twig_Environment` autowiring alias, use `Twig\\Environment` instead\n * Remove option `twig.autoescape`; create a class that implements your escaping strategy\n   (check `FileExtensionEscapingStrategy::guess()` for inspiration) and reference it using\n   the `twig.autoescape_service` option instead\n * Drop support for Twig 2\n\n6.4\n---\n\n * Allow omitting the `autoescape_service_method` option when `autoescape_service` is set to an invokable service id\n\n6.3\n---\n\n * Deprecate the `Twig_Environment` autowiring alias, use `Twig\\Environment` instead\n\n6.2\n---\n\n * Add the `twig.mailer.html_to_text_converter` option to allow configuring custom `HtmlToTextConverterInterface`\n   implementations to be used by the `twig.mime_body_renderer` service\n\n6.1\n---\n\n * Add option `twig.file_name_pattern` to restrict which files are compiled by cache warmer and linter\n * Deprecate option `twig.autoescape`, use `twig.autoescape_service[_method]` instead\n\n6.0\n---\n\n * The `twig` service is now private\n\n5.3\n---\n\n * Add support for the new `serialize` filter (from Twig Bridge)\n\n5.2.0\n-----\n\n * deprecated the public `twig` service to private\n\n5.0.0\n-----\n\n * updated default value for the `strict_variables` option to `%kernel.debug%` parameter\n * removed support to load templates from the legacy directories `src/Resources/views/` and `src/Resources/<BundleName>/views/`\n * removed `TwigEngine` class, use `Twig\\Environment` instead\n * removed `FilesystemLoader` and `NativeFilesystemLoader`, use Twig notation for templates instead\n * removed `twig.exception_controller` configuration option, use `framework.error_controller` option instead\n * removed `ExceptionController`, `PreviewErrorController` and all built-in error templates in favor of the new error renderer mechanism\n\n4.4.0\n-----\n\n * marked the `TemplateIterator` as `internal`\n * added HTML comment to beginning and end of `exception_full.html.twig`\n * deprecated `ExceptionController` and `PreviewErrorController` controllers, use `ErrorController` from the `HttpKernel` component instead\n * deprecated all built-in error templates in favor of the new error renderer mechanism\n * deprecated `twig.exception_controller` configuration option, set it to \"null\" and use `framework.error_controller` configuration instead\n\n4.2.0\n-----\n\n * deprecated support for legacy templates directories `src/Resources/views/` and `src/Resources/<BundleName>/views/`, use `templates/` and `templates/bundles/<BundleName>/` instead.\n\n4.1.0\n-----\n\n * added priority to Twig extensions\n * deprecated relying on the default value (`false`) of the `twig.strict_variables` configuration option. The `%kernel.debug%` parameter will be the new default in 5.0\n\n4.0.0\n-----\n\n * removed `ContainerAwareRuntimeLoader`\n\n3.4.0\n-----\n\n * added exclusive Twig namespace only for root bundles\n * deprecated `Symfony\\Bundle\\TwigBundle\\Command\\DebugCommand`, use `Symfony\\Bridge\\Twig\\Command\\DebugCommand` instead\n * deprecated relying on the `ContainerAwareInterface` implementation for `Symfony\\Bundle\\TwigBundle\\Command\\LintCommand`\n * added option to configure default path templates (via `default_path`)\n\n3.3.0\n-----\n\n * Deprecated `ContainerAwareRuntimeLoader`\n\n2.7.0\n-----\n\n * made it possible to configure the default formats for both the `date` and the `number_format` filter\n * added support for the new Asset component (from Twig bridge)\n * deprecated the assets extension (use the one from the Twig bridge instead)\n\n2.6.0\n-----\n\n * [BC BREAK] changed exception.json.twig to match same structure as error.json.twig making clients independent of runtime environment.\n\n2.3.0\n-----\n\n * added option to configure a custom template escaping guesser (via `autoescape_service` and `autoescape_service_method`)\n\n2.2.0\n-----\n\n * moved the exception controller to be a service (`twig.controller.exception:showAction` vs `Symfony\\\\Bundle\\\\TwigBundle\\\\Controller\\\\ExceptionController::showAction`)\n * added support for multiple loaders via the \"twig.loader\" tag.\n * added automatic registration of namespaced paths for registered bundles\n * added support for namespaced paths\n\n2.1.0\n-----\n\n * added a new setting (\"paths\") to configure more paths for the Twig filesystem loader\n * added contextual escaping based on the template file name (disabled if you explicitly pass an autoescape option)\n * added a command that extracts translation messages from templates\n * added the real template name when an error occurs in a Twig template\n * added the twig:lint command that will validate a Twig template syntax.\n"
        },
        {
          "name": "CacheWarmer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Command",
          "type": "tree",
          "content": null
        },
        {
          "name": "DependencyInjection",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2004-present Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.4013671875,
          "content": "TwigBundle\n==========\n\nTwigBundle provides a tight integration of Twig into the Symfony full-stack\nframework.\n\nResources\n---------\n\n * [Contributing](https://symfony.com/doc/current/contributing/index.html)\n * [Report issues](https://github.com/symfony/symfony/issues) and\n   [send Pull Requests](https://github.com/symfony/symfony/pulls)\n   in the [main Symfony repository](https://github.com/symfony/symfony)\n"
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "TemplateIterator.php",
          "type": "blob",
          "size": 2.8310546875,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Bundle\\TwigBundle;\n\nuse Symfony\\Component\\Finder\\Finder;\nuse Symfony\\Component\\HttpKernel\\KernelInterface;\n\n/**\n * Iterator for all templates in bundles and in the application Resources directory.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n *\n * @internal\n *\n * @implements \\IteratorAggregate<int, string>\n */\nclass TemplateIterator implements \\IteratorAggregate\n{\n    private \\Traversable $templates;\n\n    /**\n     * @param array       $paths        Additional Twig paths to warm\n     * @param string|null $defaultPath  The directory where global templates can be stored\n     * @param string[]    $namePatterns Pattern of file names\n     */\n    public function __construct(\n        private KernelInterface $kernel,\n        private array $paths = [],\n        private ?string $defaultPath = null,\n        private array $namePatterns = [],\n    ) {\n    }\n\n    public function getIterator(): \\Traversable\n    {\n        if (isset($this->templates)) {\n            return $this->templates;\n        }\n\n        $templates = null !== $this->defaultPath ? [$this->findTemplatesInDirectory($this->defaultPath, null, ['bundles'])] : [];\n\n        foreach ($this->kernel->getBundles() as $bundle) {\n            $name = $bundle->getName();\n            if (str_ends_with($name, 'Bundle')) {\n                $name = substr($name, 0, -6);\n            }\n\n            $bundleTemplatesDir = is_dir($bundle->getPath().'/Resources/views') ? $bundle->getPath().'/Resources/views' : $bundle->getPath().'/templates';\n\n            $templates[] = $this->findTemplatesInDirectory($bundleTemplatesDir, $name);\n            if (null !== $this->defaultPath) {\n                $templates[] = $this->findTemplatesInDirectory($this->defaultPath.'/bundles/'.$bundle->getName(), $name);\n            }\n        }\n\n        foreach ($this->paths as $dir => $namespace) {\n            $templates[] = $this->findTemplatesInDirectory($dir, $namespace);\n        }\n\n        return $this->templates = new \\ArrayIterator(array_unique(array_merge([], ...$templates)));\n    }\n\n    /**\n     * Find templates in the given directory.\n     *\n     * @return string[]\n     */\n    private function findTemplatesInDirectory(string $dir, ?string $namespace = null, array $excludeDirs = []): array\n    {\n        if (!is_dir($dir)) {\n            return [];\n        }\n\n        $templates = [];\n        foreach (Finder::create()->files()->followLinks()->in($dir)->exclude($excludeDirs)->name($this->namePatterns) as $file) {\n            $templates[] = (null !== $namespace ? '@'.$namespace.'/' : '').str_replace('\\\\', '/', $file->getRelativePathname());\n        }\n\n        return $templates;\n    }\n}\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TwigBundle.php",
          "type": "blob",
          "size": 1.5048828125,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Bundle\\TwigBundle;\n\nuse Symfony\\Bundle\\TwigBundle\\DependencyInjection\\Compiler\\ExtensionPass;\nuse Symfony\\Bundle\\TwigBundle\\DependencyInjection\\Compiler\\RuntimeLoaderPass;\nuse Symfony\\Bundle\\TwigBundle\\DependencyInjection\\Compiler\\TwigEnvironmentPass;\nuse Symfony\\Bundle\\TwigBundle\\DependencyInjection\\Compiler\\TwigLoaderPass;\nuse Symfony\\Component\\Console\\Application;\nuse Symfony\\Component\\DependencyInjection\\Compiler\\PassConfig;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/**\n * Bundle.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n */\nclass TwigBundle extends Bundle\n{\n    public function build(ContainerBuilder $container): void\n    {\n        parent::build($container);\n\n        // ExtensionPass must be run before the FragmentRendererPass as it adds tags that are processed later\n        $container->addCompilerPass(new ExtensionPass(), PassConfig::TYPE_BEFORE_OPTIMIZATION, 10);\n        $container->addCompilerPass(new TwigEnvironmentPass());\n        $container->addCompilerPass(new TwigLoaderPass());\n        $container->addCompilerPass(new RuntimeLoaderPass(), PassConfig::TYPE_BEFORE_REMOVING);\n    }\n\n    public function registerCommands(Application $application): void\n    {\n        // noop\n    }\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.537109375,
          "content": "{\n    \"name\": \"symfony/twig-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"Provides a tight integration of Twig into the Symfony full-stack framework\",\n    \"keywords\": [],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.2\",\n        \"composer-runtime-api\": \">=2.1\",\n        \"symfony/config\": \"^6.4|^7.0\",\n        \"symfony/dependency-injection\": \"^6.4|^7.0\",\n        \"symfony/twig-bridge\": \"^6.4|^7.0\",\n        \"symfony/http-foundation\": \"^6.4|^7.0\",\n        \"symfony/http-kernel\": \"^6.4|^7.0\",\n        \"twig/twig\": \"^3.12\"\n    },\n    \"require-dev\": {\n        \"symfony/asset\": \"^6.4|^7.0\",\n        \"symfony/stopwatch\": \"^6.4|^7.0\",\n        \"symfony/expression-language\": \"^6.4|^7.0\",\n        \"symfony/finder\": \"^6.4|^7.0\",\n        \"symfony/form\": \"^6.4|^7.0\",\n        \"symfony/routing\": \"^6.4|^7.0\",\n        \"symfony/translation\": \"^6.4|^7.0\",\n        \"symfony/yaml\": \"^6.4|^7.0\",\n        \"symfony/framework-bundle\": \"^6.4|^7.0\",\n        \"symfony/web-link\": \"^6.4|^7.0\"\n    },\n    \"conflict\": {\n        \"symfony/framework-bundle\": \"<6.4\",\n        \"symfony/translation\": \"<6.4\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Bundle\\\\TwigBundle\\\\\": \"\" },\n        \"exclude-from-classmap\": [\n            \"/Tests/\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.837890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/9.3/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony TwigBundle Test Suite\">\n            <directory>./Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./</directory>\n        </include>\n        <exclude>\n            <directory>./Resources</directory>\n            <directory>./Tests</directory>\n            <directory>./vendor</directory>\n        </exclude>\n    </coverage>\n</phpunit>\n"
        }
      ]
    }
  ]
}