{
  "metadata": {
    "timestamp": 1736711870712,
    "page": 216,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/panther",
      "stars": 2967,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.267578125,
          "content": "/examples/ export-ignore\n/appveyor.yml export-ignore\n/panther.png export-ignore\n/.php_cs.dist export-ignore\n/phpstan.neon export-ignore\n/phpunit.xml.dist export-ignore\n/tests/ export-ignore\n/.travis.yml export-ignore \n/.gitignore export-ignore\n/.gitattributes export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1630859375,
          "content": "/.php-cs-fixer.php\n/.php-cs-fixer.cache\n/.phpunit.cache\n/.phpunit.result.cache\n/composer.phar\n/composer.lock\n/phpunit.xml\n/screenshots/\n/vendor/\n/drivers/\n/screen.png\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.29296875,
          "content": "<?php\n\n$header = <<<'HEADER'\nThis file is part of the Panther project.\n\n(c) KÃ©vin Dunglas <dunglas@gmail.com>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nHEADER;\n\n$finder = PhpCsFixer\\Finder::create()->in(__DIR__);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        'array_syntax' => [\n            'syntax' => 'short',\n        ],\n        'braces' => [\n            'allow_single_line_closure' => true,\n        ],\n        'declare_strict_types' => true,\n        'header_comment' => [\n            'header' => $header,\n            'location' => 'after_open',\n        ],\n        'modernize_types_casting' => true,\n        'native_function_invocation' => ['include' => ['@compiler_optimized'], 'scope' => 'namespaced'],\n        'no_useless_else' => true,\n        'no_useless_return' => true,\n        'ordered_imports' => true,\n        'phpdoc_add_missing_param_annotation' => [\n            'only_untyped' => true,\n        ],\n        'phpdoc_order' => true,\n        'semicolon_after_instruction' => true,\n        'strict_comparison' => true,\n        'strict_param' => true,\n        'ternary_to_null_coalescing' => true,\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.3955078125,
          "content": "CHANGELOG\n=========\n\n2.2.0\n-----\n\n* Add a `PANTHER_NO_REDUCED_MOTION` environment variable to instruct the website to disable the reduction of non-essential movement\n\n2.1.2\n-----\n\n* Updated PHPDoc: getIterator method on Crawler returns an ArrayIterator of WebDriverElements\n\n2.1.1\n-----\n\n* Allow Symfony 7\n* Improve DX when using the Symfony binary\n* Fix screenshot on test failure\n* Add missing arguments when calling the legacy PHPUnit extension\n\n2.1.0\n-----\n\n* Add support for PHPUnit 10\n* Add support for `matches()` and `closest()` in `Crawler`\n\n2.0.1\n-----\n\n* Fix accessing `PantherTestCaseTrait::$webServerDir` before initialization\n\n2.0.0\n-----\n\n* Allow Symfony 6\n* Add type declarations everywhere possible\n* Remove Support for Symfony 4.4\n\n1.1.2\n-----\n\n* Allow deprecation-contracts 3\n* Fix `Form::offsetGet()` return type\n\n1.1.1\n-----\n\n* Fix a bug preventing to disable the headless mode\n\n1.1.0\n-----\n\n* Add a `PANTHER_DEVTOOLS` environment variable to disable the dev tools\n* Add a `PANTHER_ERROR_SCREENSHOT_ATTACH` environment variable to attach screenshots to PHPUnit reports in the JUnit format\n* Add a `chromedriver_arguments` option to pass custom arguments to Chromedriver\n* Add an `env` option to pass custom environment variables to the built-in web server from `PantherTestCase`\n* Add the possibility to pass options to `ChromeManager`\n* Automatically find the Chromedriver binary installed by `lanfest/binary-chromedriver`\n* Symfony 5.3 compatibility\n* Fix assertions that were not working with clients other than `PantherClient`\n* Fix the ability to keep the window of the browser open when a test fail by using the `--debug` option\n* Fix the `ServerExtension` when `registerClient()` is called multiple times\n* Fix `undefined constant` errors when using `PantherTestCaseTrait` directly\n\n1.0.1\n-----\n\n* Fix storing screenshots in the wrong directory when `PANTHER_ERROR_SCREENSHOT_DIR` is enabled\n\n1.0.0\n-----\n\n* Add `Client::waitForEnabled()`, `Client::waitForDisabled()`, `Client::waitForAttributeToContain()` and  `Client::waitForAttributeToNotContain()` methods\n* Add `PantherTestCase::assertSelectorAttributeContains()`, `PantherTestCase::assertSelectorAttributeNotContains()`, `PantherTestCase::assertSelectorWillExist()`,\n  `PantherTestCase::assertSelectorWillNotExist()`, `PantherTestCase::assertSelectorWillBeVisible()`, `PantherTestCase::assertSelectorWillNotBeVisible()`,\n  `PantherTestCase::assertSelectorWillContain()`, `PantherTestCase::assertSelectorWillNotContain()`, `PantherTestCase::assertSelectorWillBeEnabled()`,\n  `PantherTestCase::assertSelectorWillBeDisabled`, `PantherTestCase::assertSelectorAttributeWillContain()`, and `PantherTestCase::assertSelectorAttributeWillNotContain()`\n  assertions\n* Automatically take a screenshot when a test fail and if the `PANTHER_ERROR_SCREENSHOT_DIR` environment variable is set\n* Add missing return types\n* **Breaking Change**: Remove the deprecated PHPUnit listener, use the PHPUnit extension instead\n* **Breaking Change**: Remove deprecated support for Goutte, use `HttpBrowser` instead\n* **Breaking Change**: Remove deprecated support for `PANTHER_CHROME_DRIVER_BINARY` and `PANTHER_GECKO_DRIVER_BINARY` environment variables, add the binaries in your `PATH` instead\n* Don't allow unserializing classes with a destructor\n\n0.9.0\n-----\n\n* **Breaking Change**: ChromeDriver and geckodriver binaries are not included in the archive anymore and must be installed separately, [refer to the documentation](README.md#installing-chromedriver-and-geckodriver)\n* PHP 8 compatibility\n* Add `Client::waitForStaleness()` method to wait for an element to be removed from the DOM\n* Add `Client::waitForInvisibility()` method to wait for an element to be invisible\n* Add `Client::waitForElementToContain()` method to wait for an element containing the given parameter\n* Add `Client::waitForElementToNotContain()` method to wait for an element to not contain the given parameter\n* Add `PantherTestCase::assertSelectorIsVisible()`, `PantherTestCase::assertSelectorIsNotVisible()`, `PantherTestCase::assertSelectorIsEnabled()` and `PantherTestCase::assertSelectorIsDisabled()` assertions\n* Fix `baseUri` not taken into account when using Symfony HttpBrowser\n\n0.8.0\n-----\n\n* Upgrade ChromeDriver to version 85.0.4183.87\n* Upgrade geckodriver to version 0.27.0\n* Add a `Client::waitForVisibility()` method to wait for an element to appear\n* Allow passing options to the browser manager from `PantherTestCase::createPantherClient()`\n* Add a `Client::ping()` method to check if the WebDriver connection is still active\n* Fix setting a new value to an input field when there is an existing value\n* Improve the error message when the web server crashes\n* Throw an explanative `LogicException` when driver is not started yet\n* Prevent timeouts caused by the integrated web server\n* Fix the value of cookie secure flags\n* Throw an exception when getting history (unsupported feature)\n* Add docs to use Panther with GitHub Actions\n* Various bug fixes and documentation improvements\n\n0.7.1\n-----\n\n* Fix some inconsistencies between Chrome and Firefox \n\n0.7.0\n-----\n\n* Add built-in support for Firefox (using GeckoDriver)\n* Add support for Symfony HttpBrowser\n* Deprecate Goutte support (use HttpBrowser instead)\n* Allow configuring `RemoteWebDriver` timeouts when using Selenium\n* Allow passing custom environment variables to the built-in web server\n* Fix some compatibility issues with PHP WebDriver 1.8\n* Upgrade ChromeDriver to version 80.0.3987.106\n* Prevent access to fixture files even if the web server is misconfigured\n\n0.6.1\n-----\n\n* Upgrade ChromeDriver to version 79.0.3945.36\n* Allow passing custom timeouts as options of `ChromeManager` (`connection_timeout_in_ms` and `request_timeout_in_ms`)\n\n0.6.0\n-----\n\n* Add compatibility with Symfony 5\n* Allow using `Client::waitFor()` to wait for invisible elements\n* Add support to pass XPath expressions as parameters of `Client::waitFor()`\n* Fix `Crawler::attr()` signature (it can return `null`)\n* Deprecate `ServerListener` (use `ServerExtension` instead)\n* Upgrade ChromeDriver to version 78.0.3904.70\n* New logo\n* Various docs fixes and improvements\n\n0.5.2\n-----\n\n* Fix a bug occurring when using a non-fresh client\n\n0.5.1\n-----\n\n* Allow to override the `APP_ENV` environment variable passed to the web server by setting `PANTHER_APP_ENV`\n* Fix using assertions with a client created through `PantherTestCase::createClient()`\n* Don't call `PantherTestCase::getClient()` if this method isn't `static`\n* Fix remaining deprecations\n\n0.5.0\n-----\n\n* Add support for [Crawler test assertions](https://symfony.com/doc/current/testing/functional_tests_assertions.html#crawler)\n* Add the `PantherTestCase::createAdditionalPantherClient()` to retrieve additional isolated browsers, useful to test applications using [Mercure](https://mercure.rocks) or [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API)   \n* Improved support for non-standard web server directories\n* Allow the integrated web server to start even if the homepage doesn't return a 200 HTTP status code\n* Increase default timeouts from 5 seconds to 30 seconds\n* Improve error messages\n* Add compatibility with Symfony 4.3\n* Upgrade ChromeDriver to version 76.0.3809.68\n* Various quality improvements\n\n0.4.1\n-----\n\n* Remove the direct dependency to `symfony/contracts`\n\n0.4.0\n-----\n\n* Speed up the boot sequence\n* Add basic support for file uploads\n* Add a `readinessPath` option to use a custom path for server readiness detection\n* Fix the behavior of `ChoiceFormField::getValue()` to be consistent with other BrowserKit implementations\n* Ensure to clean the previous content of field when using `TextareaFormField::setValue()` and `InputFormField::setValue()`\n\n0.3.0\n-----\n\n* Add a new API to manipulate the mouse\n* Keep the browser window open on fail, when running in non-headless mode\n* Automatically open Chrome DevTools when running in non-headless mode\n* PHPUnit 8 compatibility\n* Add a PHPUnit extension to keep alive the web server, and the client between tests \n* Change the default port of the web server to `9080` to prevent a conflict with Xdebug\n* Allow to use an external web server instead of the built-in one for testing\n* Allow to use a custom router script\n* Allow to use a custom Chrome binary\n\n0.2.0\n-----\n\n* Add JS execution capabilities to `Client`\n* Allow keeping the web server and client active even after test teardown\n* Add a method to refresh the crawler (`Client::refreshCrawler()`)\n* Add options to configure the web server and ChromeDriver\n* PHP 7.1 compatibility\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT license\n\nCopyright (c) 2018-present KÃ©vin Dunglas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 28.65234375,
          "content": "<h1 align=\"center\"><img src=\"panther.svg\" alt=\"Panther\" width=\"250\" height=\"250\"></h1>\n\n**A browser testing and web scraping library for [PHP](https://php.net) and [Symfony](https://symfony.com)**\n\n![CI](https://github.com/symfony/panther/workflows/CI/badge.svg)\n\n*Panther* is a convenient standalone library to scrape websites and to run end-to-end tests **using real browsers**.\n\nPanther is super powerful. It leverages [the W3C's WebDriver protocol](https://www.w3.org/TR/webdriver/) to drive native web browsers such as Google Chrome and Firefox.\n\nPanther is very easy to use because it implements Symfony's popular [BrowserKit](https://symfony.com/doc/current/components/browser_kit.html) and\n[DomCrawler](https://symfony.com/doc/current/components/dom_crawler.html) APIs, and contains\nall the features you need to test your apps. It will sound familiar if you have ever created [a functional test for a Symfony app](https://symfony.com/doc/current/testing.html#functional-tests):\nas the API is exactly the same!\nKeep in mind that Panther can be used in every PHP project, as it is a standalone library.\n\nPanther automatically finds your local installation of Chrome or Firefox and launches them,\nso you don't need to install anything else on your computer, a Selenium server is not needed!\n\nIn test mode, Panther automatically starts your application using [the PHP built-in web server](http://php.net/manual/en/features.commandline.webserver.php).\nYou can focus on writing your tests or web-scraping scenario and Panther will take care of everything else.\n\n## Features\n\nUnlike testing and web scraping libraries you're used to, Panther:\n\n* executes the JavaScript code contained in web pages\n* supports everything that Chrome (or Firefox) implements\n* allows taking screenshots\n* can wait for asynchronously loaded elements to show up\n* lets you run your own JS code or XPath queries in the context of the loaded page\n* supports custom [Selenium server](https://www.seleniumhq.org) installations\n* supports remote browser testing services including [SauceLabs](https://saucelabs.com/), [BrowserStack](https://www.browserstack.com/) and [LambdaTest](https://www.lambdatest.com/)\n\n## Documentation\n\n### Installing Panther\n\nUse [Composer](https://getcomposer.org/) to install Panther in your project. You may want to use the `--dev` flag if you want to use Panther for testing only and not for web scraping in a production environment:\n\n    composer req symfony/panther\n\n    composer req --dev symfony/panther\n\n### Installing ChromeDriver and geckodriver\n\nPanther uses the WebDriver protocol to control the browser used to crawl websites.\n\nOn all systems, you can use [`dbrekelmans/browser-driver-installer`](https://github.com/dbrekelmans/browser-driver-installer)\nto install ChromeDriver and geckodriver locally:\n\n    composer require --dev dbrekelmans/bdi\n    vendor/bin/bdi detect drivers\n\nPanther will detect and use automatically drivers stored in the `drivers/` directory.\n\nAlternatively, you can use the package manager of your operating system to install them.\n\nOn Ubuntu, run:\n\n    apt-get install chromium-chromedriver firefox-geckodriver\n\nOn Mac, using [Homebrew](https://brew.sh):\n\n    brew install chromedriver geckodriver\n\nOn Windows, using [chocolatey](https://chocolatey.org):\n\n    choco install chromedriver selenium-gecko-driver\n\nFinally, you can download manually [ChromeDriver](https://sites.google.com/chromium.org/driver/) (for Chromium or Chrome)\nand [GeckoDriver](https://github.com/mozilla/geckodriver) (for Firefox) and put them anywhere in your `PATH`\nor in the `drivers/` directory of your project.\n\n#### Registering the PHPUnit Extension\n\nIf you intend to use Panther to test your application, we strongly recommend registering the Panther PHPUnit extension.\nWhile not strictly mandatory, this extension dramatically improves the testing experience by boosting the performance and\nallowing to use of the [interactive debugging mode](#interactive-mode).\n\nWhen using the extension in conjunction with the `PANTHER_ERROR_SCREENSHOT_DIR` environment variable, tests using the\nPanther client that fail or error (after the client is created) will automatically get a screenshot taken to help\ndebugging.\n\nTo register the Panther extension, add the following lines to `phpunit.xml.dist`:\n\n```xml\n<!-- phpunit.xml.dist -->\n<extensions>\n    <extension class=\"Symfony\\Component\\Panther\\ServerExtension\" />\n</extensions>\n```\n\nWithout the extension, the web server used by Panther to serve the application under test is started on demand and\nstopped when `tearDownAfterClass()` is called.\nOn the other hand, when the extension is registered, the web server will be stopped only after the very last test.\n\n### Basic Usage\n\n```php\n<?php\n\nuse Symfony\\Component\\Panther\\Client;\n\nrequire __DIR__.'/vendor/autoload.php'; // Composer's autoloader\n\n$client = Client::createChromeClient();\n// Or, if you care about the open web and prefer to use Firefox\n$client = Client::createFirefoxClient();\n\n$client->request('GET', 'https://api-platform.com'); // Yes, this website is 100% written in JavaScript\n$client->clickLink('Getting started');\n\n// Wait for an element to be present in the DOM (even if hidden)\n$crawler = $client->waitFor('#bootstrapping-the-core-library');\n// Alternatively, wait for an element to be visible\n$crawler = $client->waitForVisibility('#bootstrapping-the-core-library');\n\necho $crawler->filter('div:has(> #bootstrapping-the-core-library)')->text();\n$client->takeScreenshot('screen.png'); // Yeah, screenshot!\n```\n\n### Testing Usage\n\nThe `PantherTestCase` class allows you to easily write E2E tests. It automatically starts your app using the built-in PHP\nweb server and let you crawl it using Panther.\nTo provide all the testing tools you're used to, it extends [PHPUnit](https://phpunit.de/)'s `TestCase`.\n\nIf you are testing a Symfony application, `PantherTestCase` automatically extends [the `WebTestCase` class](https://symfony.com/doc/current/testing.html#functional-tests).\nIt means you can easily create functional tests, which can directly execute the kernel of your application and access all\nyour existing services. In this case, you can use [all crawler test assertions](https://symfony.com/doc/current/testing/functional_tests_assertions.html#crawler)\nprovided by Symfony with Panther.\n\n```php\n<?php\n\nnamespace App\\Tests;\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass E2eTest extends PantherTestCase\n{\n    public function testMyApp(): void\n    {\n        $client = static::createPantherClient(); // Your app is automatically started using the built-in web server\n        $client->request('GET', '/mypage');\n\n        // Use any PHPUnit assertion, including the ones provided by Symfony\n        $this->assertPageTitleContains('My Title');\n        $this->assertSelectorTextContains('#main', 'My body');\n        \n        // Or the one provided by Panther\n        $this->assertSelectorIsEnabled('.search');\n        $this->assertSelectorIsDisabled('[type=\"submit\"]');\n        $this->assertSelectorIsVisible('.errors');\n        $this->assertSelectorIsNotVisible('.loading');\n        $this->assertSelectorAttributeContains('.price', 'data-old-price', '42');\n        $this->assertSelectorAttributeNotContains('.price', 'data-old-price', '36');\n\n        // Use waitForX methods to wait until some asynchronous process finish\n        $client->waitFor('.popin'); // wait for element to be attached to the DOM\n        $client->waitForStaleness('.popin'); // wait for element to be removed from the DOM\n        $client->waitForVisibility('.loader'); // wait for element of the DOM to become visible\n        $client->waitForInvisibility('.loader'); // wait for element of the DOM to become hidden\n        $client->waitForElementToContain('.total', '25 â¬'); // wait for text to be inserted in the element content\n        $client->waitForElementToNotContain('.promotion', '5%'); // wait for text to be removed from the element content\n        $client->waitForEnabled('[type=\"submit\"]'); // wait for the button to become enabled \n        $client->waitForDisabled('[type=\"submit\"]'); // wait for  the button to become disabled \n        $client->waitForAttributeToContain('.price', 'data-old-price', '25 â¬'); // wait for the attribute to contain content\n        $client->waitForAttributeToNotContain('.price', 'data-old-price', '25 â¬'); // wait for the attribute to not contain content\n        \n        // Let's predict the future\n        $this->assertSelectorWillExist('.popin'); // element will be attached to the DOM\n        $this->assertSelectorWillNotExist('.popin'); // element will be removed from the DOM\n        $this->assertSelectorWillBeVisible('.loader'); // element will be visible\n        $this->assertSelectorWillNotBeVisible('.loader'); // element will not be visible\n        $this->assertSelectorWillContain('.total', 'â¬25'); // text will be inserted in the element content\n        $this->assertSelectorWillNotContain('.promotion', '5%'); // text will be removed from the element content\n        $this->assertSelectorWillBeEnabled('[type=\"submit\"]'); // button will be enabled \n        $this->assertSelectorWillBeDisabled('[type=\"submit\"]'); // button will be disabled \n        $this->assertSelectorAttributeWillContain('.price', 'data-old-price', 'â¬25'); // attribute will contain content\n        $this->assertSelectorAttributeWillNotContain('.price', 'data-old-price', 'â¬25'); // attribute will not contain content\n    }\n}\n```\n\nTo run this test:\n\n    bin/phpunit tests/E2eTest.php\n\n### A Polymorphic Feline\n\nPanther also gives you instant access to other BrowserKit-based implementations of `Client` and `Crawler`.\nUnlike Panther's native client, these alternative clients don't support JavaScript, CSS and screenshot capturing,\nbut they are **super-fast**!\n\nTwo alternative clients are available:\n\n* The first directly manipulates the Symfony kernel provided by `WebTestCase`. It is the fastest client available,\n  but it is only available for Symfony apps.\n* The second leverages Symfony's [HttpBrowser](https://symfony.com/doc/4.4/components/browser_kit.html#making-external-http-requests).\n  It is an intermediate between Symfony's kernel and Panther's test clients. HttpBrowser sends real HTTP requests using\n  Symfony's [HttpClient](https://symfony.com/doc/current/components/http_client.html) component.\n  It is fast and can browse any webpage, not only the ones of the application under test.\n  However, HttpBrowser doesn't support JavaScript and other advanced features because it is entirely written in PHP.\n  This one is available even for non-Symfony apps!\n\nThe fun part is that the 3 clients implement the same API, so you can switch from one to another just by calling\nthe appropriate factory method, resulting in a good trade-off for every single test case (Do I need JavaScript? Do I need\nto authenticate with an external SSO server? Do I want to access the kernel of the current request? ... etc).\n\nHere is how to retrieve instances of these clients:\n\n```php\n<?php\n\nnamespace App\\Tests;\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\nuse Symfony\\Component\\Panther\\Client;\n\nclass E2eTest extends PantherTestCase\n{\n    public function testMyApp(): void\n    {\n        $symfonyClient = static::createClient(); // A cute kitty: Symfony's functional test tool\n        $httpBrowserClient = static::createHttpBrowserClient(); // An agile lynx: HttpBrowser\n        $pantherClient = static::createPantherClient(); // A majestic Panther\n        $firefoxClient = static::createPantherClient(['browser' => static::FIREFOX]); // A splendid Firefox\n        // Both HttpBrowser and Panther benefits from the built-in HTTP server\n\n        $customChromeClient = Client::createChromeClient(null, null, [], 'https://example.com'); // Create a custom Chrome client\n        $customFirefoxClient = Client::createFirefoxClient(null, null, [], 'https://example.com'); // Create a custom Firefox client\n        $customSeleniumClient = Client::createSeleniumClient('http://127.0.0.1:4444/wd/hub', null, 'https://example.com'); // Create a custom Selenium client\n        // When initializing a custom client, the integrated web server IS NOT started automatically.\n        // Use PantherTestCase::startWebServer() or WebServerManager if you want to start it manually.\n\n        // Enjoy the same API for the 3 felines.\n        // $*client->request('GET', '...')\n\n        $kernel = static::createKernel(); // If you are testing a Symfony app, you also have access to the kernel\n\n        // ...\n    }\n}\n```\n\n### Creating Isolated Browsers to Test Apps Using [Mercure](https://mercure.rocks) or WebSocket\n\nPanther provides a convenient way to test applications with real-time capabilities that use [Mercure](https://symfony.com/doc/current/mercure.html), [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API)\nand similar technologies.\n\n`PantherTestCase::createAdditionalPantherClient()` creates additional, isolated browsers that can interact with each other.\nFor instance, this can be useful to test a chat application having several users connected simultaneously:\n\n```php\n<?php\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass ChatTest extends PantherTestCase\n{\n    public function testChat(): void\n    {\n        $client1 = self::createPantherClient();\n        $client1->request('GET', '/chat'); \n \n        // Connect a 2nd user using an isolated browser and say hi!\n        $client2 = self::createAdditionalPantherClient();\n        $client2->request('GET', '/chat');\n        $client2->submitForm('Post message', ['message' => 'Hi folks ðð»']);\n\n        // Wait for the message to be received by the first client\n        $client1->waitFor('.message');\n\n        // Symfony Assertions are always executed in the **primary** browser\n        $this->assertSelectorTextContains('.message', 'Hi folks ðð»');\n    }\n}\n```\n\n### Accessing Browser Console Logs\n\nIf needed, you can use Panther to access the content of the console:\n\n```php\n<?php\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass ConsoleTest extends PantherTestCase\n{\n    public function testConsole(): void\n    {\n        $client = self::createPantherClient(\n            [],\n            [],\n            [\n                'capabilities' => [\n                    'goog:loggingPrefs' => [\n                        'browser' => 'ALL', // calls to console.* methods\n                        'performance' => 'ALL', // performance data\n                    ],\n                ],\n            ]\n        );\n\n        $client->request('GET', '/');\n        $consoleLogs = $client->getWebDriver()->manage()->getLog('browser'); // console logs \n        $performanceLogs = $client->getWebDriver()->manage()->getLog('performance'); // performance logs\n    }\n}\n```\n\n### Passing Arguments to ChromeDriver\n\nIf needed, you can configure [the arguments to pass to the `chromedriver` binary](https://chromedriver.chromium.org/logging#TOC-All-languages):\n\n```php\n<?php\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass MyTest extends PantherTestCase\n{\n    public function testLogging(): void\n    {\n        $client = self::createPantherClient(\n            [],\n            [],\n            [\n                'chromedriver_arguments' => [\n                    '--log-path=myfile.log',\n                    '--log-level=DEBUG'\n                ],\n            ]\n        );\n\n        $client->request('GET', '/');\n    }\n}\n```\n\n### Checking the State of the WebDriver Connection\n\nUse the `Client::ping()` method to check if the WebDriver connection is still active (useful for long-running tasks).\n\n## Additional Documentation\n\nSince Panther implements the API of popular libraries, it already has extensive documentation:\n\n* For the `Client` class, read [the BrowserKit documentation](https://symfony.com/doc/current/components/browser_kit.html)\n* For the `Crawler` class, read [the DomCrawler documentation](https://symfony.com/doc/current/components/dom_crawler.html)\n* For WebDriver, read [the PHP WebDriver documentation](https://github.com/php-webdriver/php-webdriver)\n\n### Environment Variables\n\nThe following environment variables can be set to change some Panther's behavior:\n\n* `PANTHER_NO_HEADLESS`: set to `1` to disable Panther's use of headless mode and thus see what happens in a browser window\n* `PANTHER_WEB_SERVER_DIR`: to change the project's document root (default to `./public/`, relative paths **must start** by `./`)\n* `PANTHER_WEB_SERVER_PORT`: to change the web server's port (default to `9080`)\n* `PANTHER_WEB_SERVER_ROUTER`:  to use a web server router script which is run at the start of each HTTP request\n* `PANTHER_EXTERNAL_BASE_URI`: to use an external web server (the PHP built-in web server will not be started)\n* `PANTHER_APP_ENV`: to override the `APP_ENV` variable passed to the web server running the PHP app\n* `PANTHER_ERROR_SCREENSHOT_DIR`: to set a base directory for your failure/error screenshots (e.g. `./var/error-screenshots`)\n* `PANTHER_DEVTOOLS`: to toggle the browser's dev tools (default `enabled`, useful to debug)\n* `PANTHER_ERROR_SCREENSHOT_ATTACH`: to add screenshots mentioned above to test output in junit attachment format\n* `PANTHER_NO_REDUCED_MOTION`: to instruct the website to disable the reduction of non-essential movement\n\n### Changing the Hostname and Port of the Built-in Web Server\n\nIf you want to change the host and/or the port used by the built-in web server, pass the `hostname` and `port` to the `$options` parameter of the `createPantherClient()` method:\n```php\n// ...\n\n$client = self::createPantherClient([\n    'hostname' => 'example.com', // Defaults to 127.0.0.1\n    'port' => 8080, // Defaults to 9080\n]);\n```\n\n#### Chrome-specific Environment Variables\n\n* `PANTHER_NO_SANDBOX`: to disable [Chrome's sandboxing](https://chromium.googlesource.com/chromium/src/+/b4730a0c2773d8f6728946013eb812c6d3975bec/docs/design/sandbox.md) (unsafe, but allows to use Panther in containers)\n* `PANTHER_CHROME_ARGUMENTS`: to customize Chrome arguments. You need to set `PANTHER_NO_HEADLESS` to `1` to have full control over arguments.\n* `PANTHER_CHROME_BINARY`: to use another `google-chrome` binary\n\n#### Firefox-specific Environment Variables\n\n* `PANTHER_FIREFOX_ARGUMENTS`: to customize Firefox arguments. You need to set `PANTHER_NO_HEADLESS` to `1` value to have full control over arguments.\n* `PANTHER_FIREFOX_BINARY`: to use another `firefox` binary\n\n### Changing the Size of the Browser Window\n\nIt's possible to control the size of the browser window.\nThis also controls the size of the screenshots.\n\n\nChrome:\n\n```php\n$client = Client::createChromeClient(null, ['--window-size=1500,4000']);\n```\n\nOr using the `PANTHER_CHROME_ARGUMENTS` environment variable: `PANTHER_CHROME_ARGUMENTS='--window-size=1500,4000'`\n\nFirefox:\n\n```php\nuse Facebook\\WebDriver\\WebDriverDimension;\n\n$client = Client::createFirefoxClient();\n$size = new WebDriverDimension(1500, 4000);\n$client->manage()->window()->setSize($size);\n```\n\n### Accessing To Hidden Text\n\nAccording to the spec, WebDriver implementations return only the **displayed** text by default.\nWhen you filter on a `head` tag (like `title`), the method `text()` returns an empty string. Use the method `html()` to get\nthe complete contents of the tag, including the tag itself.\n\n### Interactive Mode\n\nPanther can make a pause in your test suites after a failure.\nIt is a break time really appreciated for investigating the problem through the web browser.\nTo enable this mode, you need the `--debug` PHPUnit option without the headless mode:\n\n    $ PANTHER_NO_HEADLESS=1 bin/phpunit --debug\n    \n    Test 'App\\AdminTest::testLogin' started\n    Error: something is wrong.\n    \n    Press enter to continue...\n\nTo use the interactive mode, the [PHPUnit extension](#registering-the-phpunit-extension) **must** be registered.\n\n### Using an External Web Server\n\nSometimes, it's convenient to reuse an existing web server configuration instead of starting the built-in PHP one.\nTo do so, set the `external_base_uri` option:\n\n```php\n<?php\n\nnamespace App\\Tests;\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass E2eTest extends PantherTestCase\n{\n    public function testMyApp(): void\n    {\n        $pantherClient = static::createPantherClient(['external_base_uri' => 'https://localhost']);\n        // The integrated web server will not be started\n    }\n}\n```\n\n### Having a Multi-domain Application\n\nIt happens that your PHP/Symfony application might serve several different domain names.\n\nAs Panther saves the Client in memory between tests to improve performances, you will have to run your tests in separate\nprocesses if you write several tests using Panther for different domain names.\n\nTo do so, you can use the native `@runInSeparateProcess` PHPUnit annotation.\n\n**â¹ Note:** It is really convenient to use the `external_base_uri` option and start your own webserver in the background\nbecause Panther will not have to start and stop your server on each test. [Symfony CLI](https://symfony.com/download) can\nbe a quick and easy way to do so. \n\nHere is an example using the `external_base_uri` option to determine the domain name used by the Client:\n\n```php\n<?php\n\nnamespace App\\Tests;\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass FirstDomainTest extends PantherTestCase\n{\n    /**\n     * @runInSeparateProcess\n     */\n    public function testMyApp(): void\n    {\n        $pantherClient = static::createPantherClient([\n            'external_base_uri' => 'http://mydomain.localhost:8000',\n        ]);\n        \n        // Your tests\n    }\n}\n```\n\n```php\n<?php\n\nnamespace App\\Tests;\n\nuse Symfony\\Component\\Panther\\PantherTestCase;\n\nclass SecondDomainTest extends PantherTestCase\n{\n    /**\n     * @runInSeparateProcess\n     */\n    public function testMyApp(): void\n    {\n        $pantherClient = static::createPantherClient([\n            'external_base_uri' => 'http://anotherdomain.localhost:8000',\n        ]);\n        \n        // Your tests\n    }\n}\n```\n\n### Using a Proxy\n\nTo use a proxy server, set the following environment variable: `PANTHER_CHROME_ARGUMENTS='--proxy-server=socks://127.0.0.1:9050'`\n\n### Using Selenium With the Built-In Web Server\n\nIf you want to use [Selenium Grid](https://www.selenium.dev/documentation/grid/) with the built-in web server, you need to configure the Panther client as follows:\n\n```php\n$client = Client::createPantherClient(\n    options: [\n        'browser' => PantherTestCase::SELENIUM,\n    ],\n    managerOptions: [\n        'host' => 'http://selenium-hub:4444', // the host of the Selenium Server (Grid)\n        'capabilities' => DesiredCapabilities::firefox(), // the capabilities of the browser\n    ],\n);\n```\n\n### Accepting Self-signed SSL Certificates\n\nTo force Chrome to accept invalid and self-signed certificates, set the following environment variable: `PANTHER_CHROME_ARGUMENTS='--ignore-certificate-errors'`\n**This option is insecure**, use it only for testing in development environments, never in production (e.g. for web crawlers).\n\nFor Firefox, instantiate the client like this:\n\n```php\n$client = Client::createFirefoxClient(null, null, ['capabilities' => ['acceptInsecureCerts' => true]]);\n```\n\n### Docker Integration\n\nHere is a minimal Docker image that can run Panther with both Chrome and Firefox:\n\n```Dockerfile\nFROM php:alpine\n\n# Chromium and ChromeDriver\nENV PANTHER_NO_SANDBOX 1\n# Not mandatory, but recommended\nENV PANTHER_CHROME_ARGUMENTS='--disable-dev-shm-usage'\nRUN apk add --no-cache chromium chromium-chromedriver\n\n# Firefox and GeckoDriver (optional)\nARG GECKODRIVER_VERSION=0.28.0\nRUN apk add --no-cache firefox libzip-dev; \\\n    docker-php-ext-install zip\nRUN wget -q https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz; \\\n    tar -zxf geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz -C /usr/bin; \\\n    rm geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz\n```\n\nBuild it with `docker build . -t myproject`\nRun it with `docker run -it -v \"$PWD\":/srv/myproject -w /srv/myproject myproject bin/phpunit`\n\n### GitHub Actions Integration\n\nPanther works out of the box with [GitHub Actions](https://help.github.com/en/actions).\nHere is a minimal `.github/workflows/panther.yml` file to run Panther tests:\n\n```yaml\nname: Run Panther tests\n\non: [ push, pull_request ]\n\njobs:\n  tests:\n\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v2\n\n      - name: Install dependencies\n        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist\n\n      - name: Run test suite\n        run: bin/phpunit\n```\n\n### Travis CI Integration\n\nPanther will work out of the box with [Travis CI](https://travis-ci.com/) if you add the Chrome addon.\nHere is a minimal `.travis.yml` file to run Panther tests:\n\n```yaml\nlanguage: php\naddons:\n  # If you don't use Chrome or Firefox, remove the corresponding line\n  chrome: stable\n  firefox: latest\n\nphp:\n  - 8.0\n\nscript:\n  - bin/phpunit\n```\n\n### Gitlab CI Integration\n\nHere is a minimal `.gitlab-ci.yml` file to run Panther tests with [Gitlab CI](https://docs.gitlab.com/ee/ci/):\n\n```yaml\nimage: ubuntu\n\nbefore_script:\n  - apt-get update\n  - apt-get install software-properties-common -y\n  - ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n  - apt-get install curl wget php php-cli php7.4 php7.4-common php7.4-curl php7.4-intl php7.4-xml php7.4-opcache php7.4-mbstring php7.4-zip libfontconfig1 fontconfig libxrender-dev libfreetype6 libxrender1 zlib1g-dev xvfb chromium-chromedriver firefox-geckodriver -y -qq\n  - export PANTHER_NO_SANDBOX=1\n  - export PANTHER_WEB_SERVER_PORT=9080\n  - php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n  - php composer-setup.php --install-dir=/usr/local/bin --filename=composer\n  - php -r \"unlink('composer-setup.php');\"\n  - composer install\n\ntest:\n  script:\n    - bin/phpunit\n```\n\n### AppVeyor Integration\n\nPanther will work out of the box with [AppVeyor](https://www.appveyor.com/) as long as Google Chrome is installed.\nHere is a minimal `appveyor.yml` file to run Panther tests:\n\n```yaml\nbuild: false\nplatform: x86\nclone_folder: c:\\projects\\myproject\n\ncache:\n  - '%LOCALAPPDATA%\\Composer\\files'\n\ninstall:\n  - ps: Set-Service wuauserv -StartupType Manual\n  - cinst -y php composer googlechrome chromedriver firfox selenium-gecko-driver\n  - refreshenv\n  - cd c:\\tools\\php80\n  - copy php.ini-production php.ini /Y\n  - echo date.timezone=\"UTC\" >> php.ini\n  - echo extension_dir=ext >> php.ini\n  - echo extension=php_openssl.dll >> php.ini\n  - echo extension=php_mbstring.dll >> php.ini\n  - echo extension=php_curl.dll >> php.ini\n  - echo memory_limit=3G >> php.ini\n  - cd %APPVEYOR_BUILD_FOLDER%\n  - composer install --no-interaction --no-progress\n\ntest_script:\n  - cd %APPVEYOR_BUILD_FOLDER%\n  - php bin\\phpunit\n```\n\n### Usage with Other Testing Tools\n\nIf you want to use Panther with other testing tools like [LiipFunctionalTestBundle](https://github.com/liip/LiipFunctionalTestBundle)\nor if you just need to use a different base class, Panther has got you covered.\nIt provides you with the `Symfony\\Component\\Panther\\PantherTestCaseTrait` and you can use it to enhance your existing\ntest infrastructure with some Panther awesomeness:\n\n```php\n<?php\n\nnamespace App\\Tests\\Controller;\n\nuse Liip\\FunctionalTestBundle\\Test\\WebTestCase;\nuse Symfony\\Component\\Panther\\PantherTestCaseTrait;\n\nclass DefaultControllerTest extends WebTestCase\n{\n    use PantherTestCaseTrait; // this is the magic. Panther is now available.\n\n    public function testWithFixtures(): void\n    {\n        $this->loadFixtures([]); // load your fixtures\n        $client = self::createPantherClient(); // create your panther client\n\n        $client->request('GET', '/');\n    }\n}\n```\n\n## Limitations\n\nThe following features are not currently supported:\n\n* Crawling XML documents (only HTML is supported)\n* Updating existing documents (browsers are mostly used to consume data, not to create webpages)\n* Setting form values using the multidimensional PHP array syntax\n* Methods returning an instance of `\\DOMElement` (because this library uses `WebDriverElement` internally)\n* Selecting invalid choices in the select\n\nPull Requests are welcome to fill the remaining gaps!\n\n## Troubleshooting\n\n### Run with Bootstrap 5\n\nIf you are using Bootstrap 5, then you may have a problem with testing. Bootstrap 5 implements a scrolling effect, which tends to mislead Panther.\n\nTo fix this, we advise you to deactivate this effect by setting the Bootstrap 5 **$enable-smooth-scroll** variable to **false** in your style file.\n\n```scss\n$enable-smooth-scroll: false;\n```\n\n## Save the Panthers\n\nMany of the wild cat species are highly threatened.\nIf you like this software, help save the (real) panthers by [donating to the Panthera organization](https://www.panthera.org/donate).\n\n## Credits\n\nCreated by [KÃ©vin Dunglas](https://dunglas.fr). Sponsored by [Les-Tilleuls.coop](https://les-tilleuls.coop).\n\nPanther is built on top of [PHP WebDriver](https://github.com/php-webdriver/php-webdriver) and [several other FOSS libraries](https://symfony.com/blog/introducing-symfony-panther-a-browser-testing-and-web-scrapping-library-for-php#thank-you-open-source).\nIt has been inspired by [Nightwatch.js](http://nightwatchjs.org/), a WebDriver-based testing tool for JavaScript.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.80078125,
          "content": "{\n    \"name\": \"symfony/panther\",\n    \"description\": \"A browser testing and web scraping library for PHP and Symfony.\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"scraping\",\n        \"E2E\",\n        \"testing\",\n        \"webdriver\",\n        \"selenium\",\n        \"symfony\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"KÃ©vin Dunglas\",\n            \"email\": \"dunglas@gmail.com\",\n            \"homepage\": \"https://dunglas.fr\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"homepage\": \"https://dunglas.fr\",\n    \"require\": {\n        \"php\": \">=8.0\",\n        \"ext-dom\": \"*\",\n        \"ext-libxml\": \"*\",\n        \"php-webdriver/webdriver\": \"^1.8.2\",\n        \"symfony/browser-kit\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/dependency-injection\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/deprecation-contracts\": \"^2.4 || ^3\",\n        \"symfony/dom-crawler\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/http-client\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/http-kernel\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/process\": \"^5.3 || ^6.0 || ^7.0\"\n    },\n    \"require-dev\": {\n        \"symfony/css-selector\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/framework-bundle\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/mime\": \"^5.3 || ^6.0 || ^7.0\",\n        \"symfony/phpunit-bridge\": \"^5.3 || ^6.0 || ^7.0\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"Symfony\\\\Component\\\\Panther\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Symfony\\\\Component\\\\Panther\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"2.0.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "panther.svg",
          "type": "blob",
          "size": 14.4453125,
          "content": "<svg id=\"Calque_1\" data-name=\"Calque 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 402.1 498.4\"><defs><style>.cls-1{fill:#fff;}.cls-2{fill:#f2b243;}.cls-3{fill:#fdfefe;}.cls-4{fill:#c6e5ef;}.cls-5{fill:#242122;}.cls-6{fill:#ed9d3f;}.cls-11,.cls-7{fill:none;}.cls-7{stroke:#2f2c2d;stroke-miterlimit:10;stroke-width:21px;}.cls-10,.cls-12,.cls-8,.cls-9{fill:#221f20;}.cls-8{opacity:0.3;}.cls-8,.cls-9{isolation:isolate;}.cls-9{opacity:0.2;}.cls-12{fill-rule:evenodd;}.cls-13{opacity:0.5;}</style></defs><path class=\"cls-1\" d=\"M261.6,372.91l37.1,6.6,37.1-6.6,42.1-46.7,66.5-83.6,2.9-115.8,22.6-77.9-6-4.7-45.4,29.7L298.7,43.21,178.9,73.91l-45.4-29.7-6,4.7,22.6,77.9,2.9,115.8,66.5,83.6Z\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-2\" points=\"367.1 14 318.1 46 201.1 16 84.1 46 35.1 14 12.1 32 37.1 118 40.1 237 110.1 325 156.1 376 201.1 384 246.1 376 292.1 325 362.1 237 365.1 118 390.1 32 367.1 14\"/><polygon class=\"cls-3\" points=\"35.1 93 26.1 50 43.1 49 80.1 72 41.1 115 35.1 93\"/><polygon class=\"cls-1\" points=\"367.1 93 376.1 50 359.1 49 322.1 72 361.1 115 367.1 93\"/><polygon class=\"cls-4\" points=\"103.9 135.8 131.7 123 185.3 163.3 138.2 177.6 103.9 135.8\"/><path class=\"cls-5\" d=\"M233.2,194l-39.8-48.6L229,129l62.7,47.2Zm-25.5-45.3,28.6,34.9,35.7-10.8-44.3-33.3Z\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-4\" points=\"298.02 136.8 272.96 124 224.9 164.3 267.21 178.6 298.02 136.8\"/><path class=\"cls-5\" d=\"M365.25,195l-52.55-17.8L369,130l32,16.4Zm-34.94-21.2,32.06,10.8,25.69-34.9L370,140.41Z\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-6\" points=\"240.1 201.5 200.1 197.5 160.1 201.5 112.1 262.5 116.1 327.5 157.1 370.5 200.1 379.5 243.1 370.5 284.1 327.5 288.1 262.5 240.1 201.5\"/><polygon class=\"cls-2\" points=\"230.1 187 200.1 189.2 170.1 187 158.1 281.5 200.1 309 242.1 281.5 230.1 187\"/><path class=\"cls-7\" d=\"M269.7,207.21\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-6\" points=\"133.1 349 194.1 338 264.1 354 246.1 376 201.1 384 156.1 376 133.1 349\"/><polygon class=\"cls-8\" points=\"161.6 263.5 199.6 273.5 238.6 264.5 251.6 289.5 200.6 302.5 153.6 289.5 161.6 263.5\"/><polygon class=\"cls-8\" points=\"120.1 313 194.2 331 284.1 314 285.1 337 265.3 355 198.4 340 132.6 350 120.1 313\"/><polygon class=\"cls-8\" points=\"153.1 360 198.1 365 248.1 362 231.1 379 185.1 379 153.1 360\"/><polygon class=\"cls-9\" points=\"125.1 129 166.1 167 185.1 163 134.1 124 125.1 129\"/><polygon class=\"cls-9\" points=\"279.1 129 238.1 167 219.1 163 270.1 124 279.1 129\"/><circle class=\"cls-10\" cx=\"255.1\" cy=\"147\" r=\"9\"/><circle class=\"cls-10\" cx=\"147.1\" cy=\"147\" r=\"9\"/><polygon class=\"cls-8\" points=\"285.1 285 358.1 214 365.1 238 288.1 323 285.1 285\"/><polygon class=\"cls-8\" points=\"119.1 285 46.1 214 39.1 238 116.1 323 119.1 285\"/><polygon class=\"cls-8\" points=\"28.1 50 43.1 49 80.1 72 71.1 82 39.1 56 26.1 58 28.1 50\"/><polygon class=\"cls-8\" points=\"374.1 50.1 359.1 49 322.1 71.9 331.1 82 363.1 56 376.1 58.1 374.1 50.1\"/><path class=\"cls-5\" d=\"M215.7,102.21a90.87,90.87,0,0,1,19.7,5.4,156,156,0,0,1,18.1,8.4,163.45,163.45,0,0,1,16.8,10.6,92.58,92.58,0,0,1,15.2,13.6,90.87,90.87,0,0,1-19.7-5.4,147.27,147.27,0,0,1-18-8.4,163.45,163.45,0,0,1-16.8-10.6A85.25,85.25,0,0,1,215.7,102.21Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-5\" d=\"M388.7,102.21a88.23,88.23,0,0,1-15.2,13.6,148,148,0,0,1-16.8,10.6,147.27,147.27,0,0,1-18,8.4,96.92,96.92,0,0,1-19.7,5.4,84.27,84.27,0,0,1,15.2-13.6A148,148,0,0,1,351,116a142,142,0,0,1,18.1-8.4A88.47,88.47,0,0,1,388.7,102.21Z\" transform=\"translate(-96.6 -11.21)\"/><line class=\"cls-11\" x1=\"200.6\" y1=\"312.5\" x2=\"200.6\" y2=\"338.5\"/><rect class=\"cls-5\" x=\"194.1\" y=\"312.5\" width=\"13\" height=\"26\"/><polygon class=\"cls-10\" points=\"159.1 283 244.8 283 200.2 323 159.1 283\"/><path class=\"cls-5\" d=\"M328.7,203.21c2.3,7.7,4.4,15.5,6.4,23.2s3.9,15.6,5.8,23.3l2.7,11.7,2.6,11.7c1.7,7.8,3.4,15.6,5,23.5l.8,3.8-3.5,2.2c-3.8,2.4-7.7,4.8-11.6,7.1s-7.7,4.7-11.6,7.1-7.8,4.7-11.7,7l-11.7,6.9-3.3,1.9-3.3-1.9-11.7-6.9c-3.9-2.3-7.8-4.6-11.7-7s-7.8-4.7-11.6-7.1-7.8-4.7-11.6-7.1l-3.6-2.2.8-3.8,2.5-11.8,2.6-11.7,2.7-11.7,2.7-11.7c1.9-7.8,3.8-15.6,5.8-23.3s4.1-15.5,6.4-23.2c-.5,8-1.3,16-2.1,24s-1.7,16-2.7,23.9L262.3,263l-1.6,11.9-1.7,11.9-1.8,11.9-2.8-6c4,2.2,7.9,4.4,11.9,6.6s7.9,4.4,11.9,6.7,7.9,4.5,11.8,6.8l11.8,6.8h-6.6l11.8-6.8c3.9-2.3,7.9-4.5,11.8-6.8s7.9-4.5,11.9-6.7,7.9-4.4,11.9-6.6l-2.8,6c-1.2-7.9-2.3-15.8-3.5-23.8L334.7,263l-1.5-11.9c-1-8-1.9-15.9-2.7-23.9C330,219.21,329.2,211.21,328.7,203.21Z\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-5\" points=\"289.6 327.7 280.6 327.3 284.2 261.3 293.6 243.4 301.6 247.6 293 263.7 289.6 327.7\"/><polygon class=\"cls-5\" points=\"114.1 327.7 110.7 263.7 102.1 247.6 110.1 243.4 119.5 261.3 123.1 327.3 114.1 327.7\"/><path class=\"cls-10\" d=\"M297.7,404.91l-50.4-9-48.8-54.2-72.2-90.8-3.1-121.2L96.6,38.21l34.5-27,51.4,33.6,115.2-29.4,115.1,29.5,51.4-33.6,34.5,27-26.6,91.5L469,251l-72.5,91.2-48.4,53.7Zm-39.6-28.4,39.6,7,39.6-7,43.4-48.1,67.6-85,2.9-116.8.4-1.3,23-79.2-11.5-9-46.6,30.4L297.7,37,178.8,67.51l-46.6-30.4-11.5,9,23.4,80.5,2.9,116.8,67.6,85Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-5\" d=\"M297.7,401.81l-48.4-8.6-31.8-37.4,73.4-13.2,81.5,18.6-26.2,32Zm-41.6-20.6,41.6,7.4,41.5-7.4,9.8-12-58.5-13.4-48.6,8.8Z\" transform=\"translate(-96.6 -11.21)\"/><polygon class=\"cls-5\" points=\"123.1 61.4 160.2 48.3 183.1 71.2 159.8 94.5 123.1 61.4\"/><polygon class=\"cls-5\" points=\"278.1 61.4 241 48.3 218.1 71.2 241.4 94.5 278.1 61.4\"/><polygon class=\"cls-5\" points=\"341.1 173.4 318.1 165.3 303.8 179.5 318.3 194 341.1 173.4\"/><polygon class=\"cls-5\" points=\"343.1 134.1 327.5 128.6 317.8 138.2 327.6 148 343.1 134.1\"/><polygon class=\"cls-5\" points=\"319.1 213.4 296.1 205.3 281.8 219.5 296.3 234 319.1 213.4\"/><polygon class=\"cls-5\" points=\"61.8 167.4 84.9 159.3 99.1 173.5 84.6 188 61.8 167.4\"/><polygon class=\"cls-5\" points=\"59.8 128.1 75.5 122.6 85.1 132.2 75.3 142 59.8 128.1\"/><polygon class=\"cls-5\" points=\"83.8 207.4 106.9 199.3 121.1 213.5 106.6 228 83.8 207.4\"/><polygon class=\"cls-10\" points=\"369.03 244.04 372.4 239.8 372.74 226.34 113.22 26.82 104.28 28.91 96.92 30.79 369.03 244.04\"/><path class=\"cls-12\" d=\"M353.37,120.65c25.4-1.31,55.26,10.63,57.22,29.53,2.15,19-28.82,58.64-56.59,60-27.77,1.52-56-41.66-55.79-60.72C298.21,130.41,327.91,122.18,353.37,120.65Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M355.68,135.85a27.78,27.78,0,1,0,27.78,27.77A27.77,27.77,0,0,0,355.68,135.85Zm15,16.07a1.94,1.94,0,0,1-2.21-1.89,1.91,1.91,0,0,1,.39-1.24c.28-.56.34-.62.34-.87,0-.73-1.14-.76-1.44-.75-4.17.14-5.27,5.77-6.16,10.35l-.44,2.41a7.47,7.47,0,0,0,5.06-.7c1.33-.87-.38-1.76-.16-2.75A2,2,0,0,1,367.9,155a1.92,1.92,0,0,1,1.73,2.1c0,1.78-2.4,4.21-7.1,4.12-.58,0-1.11-.06-1.6-.12L360,166c-.79,3.71-1.85,8.78-5.63,13.21-3.25,3.86-6.54,4.46-8,4.51-2.76.09-4.59-1.38-4.65-3.35a2.91,2.91,0,0,1,2.72-3,2.35,2.35,0,0,1,2.53,2.24,1.49,1.49,0,0,1-.86,1.57c-.24.19-.61.39-.59.82a.71.71,0,0,0,.82.58,4.32,4.32,0,0,0,2.48-1c2.69-2.24,3.72-6.15,5.08-13.26l.28-1.72c.47-2.31,1-4.89,1.76-7.46-1.9-1.43-3-3.2-5.58-3.89-1.75-.47-2.81-.07-3.56.88a2.58,2.58,0,0,0,.26,3.44l1.42,1.56c1.73,2,2.68,3.57,2.33,5.67-.57,3.35-4.57,5.92-9.29,4.47-4-1.24-4.78-4.09-4.3-5.67a1.89,1.89,0,0,1,2.6-1.31,2.25,2.25,0,0,1,1.28,2.83,5,5,0,0,1-.22.56,8.62,8.62,0,0,0-.49.91c-.26.84.9,1.44,1.71,1.69a3.16,3.16,0,0,0,4-1.85,2.62,2.62,0,0,0-.79-2.64L343.63,164c-.78-.87-2.5-3.29-1.66-6a5.84,5.84,0,0,1,2-2.9,7.19,7.19,0,0,1,6.51-1.19c2.8.81,4.14,2.66,5.88,4.08a24,24,0,0,1,4.36-8,10,10,0,0,1,7.11-3.81c2.83-.09,5,1.19,5,3.21A2.39,2.39,0,0,1,370.66,151.92Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M385,164.48a30.27,30.27,0,1,1-30.27-30.27A30.27,30.27,0,0,1,385,164.48Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M368,145.41a10.84,10.84,0,0,0-7.76,4.14,26.22,26.22,0,0,0-4.74,8.74c-1.9-1.56-3.36-3.57-6.41-4.45a7.82,7.82,0,0,0-7.09,1.3,6.27,6.27,0,0,0-2.17,3.16c-.92,3,1,5.61,1.81,6.56l1.86,2a2.81,2.81,0,0,1,.85,2.87,3.42,3.42,0,0,1-4.36,2c-.88-.27-2.14-.92-1.86-1.84a9,9,0,0,1,.53-1,4.77,4.77,0,0,0,.24-.62,2.46,2.46,0,0,0-1.39-3.08,2.06,2.06,0,0,0-2.83,1.43c-.53,1.72.29,4.83,4.68,6.18,5.15,1.58,9.5-1.22,10.11-4.87.39-2.29-.64-4-2.53-6.18l-1.55-1.7a2.82,2.82,0,0,1-.28-3.75c.81-1,2-1.47,3.88-1,2.78.76,4,2.69,6.08,4.24-.85,2.8-1.41,5.61-1.91,8.13l-.31,1.88c-1.48,7.74-2.61,12-5.54,14.44a4.7,4.7,0,0,1-2.7,1.09.79.79,0,0,1-.9-.64c0-.46.38-.68.64-.89a1.61,1.61,0,0,0,1-1.7,2.57,2.57,0,0,0-2.76-2.45,3.2,3.2,0,0,0-3,3.24c.07,2.14,2.07,3.75,5.08,3.65,1.6-.06,5.19-.71,8.73-4.92,4.12-4.82,5.27-10.35,6.14-14.39l1-5.34c.53.06,1.11.1,1.73.12,5.13.11,7.7-2.55,7.74-4.48a2.11,2.11,0,0,0-1.88-2.3,2.16,2.16,0,0,0-2,1.65c-.24,1.08,1.63,2.05.17,3a8.15,8.15,0,0,1-5.51.76l.48-2.63c1-5,2.17-11.12,6.71-11.27.33,0,1.54,0,1.57.82,0,.26-.06.33-.37.95a2.18,2.18,0,0,0-.43,1.35,2.14,2.14,0,0,0,2.42,2.06,2.61,2.61,0,0,0,2.38-2.83C373.38,146.7,371.06,145.31,368,145.41Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M263.9,508.31a8.92,8.92,0,0,1-9-9.1v-44.8H238.5v45a9,9,0,0,1-18,0v-54.1a9,9,0,1,1,18,0v3c0,.7.4.5.4.3,2.6-8.1,8.5-12,16.2-12,9.9,0,17.6,6.3,17.6,16.7v45.9A8.76,8.76,0,0,1,263.9,508.31Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M318.4,436.71c11.5,0,11.5,17.7,0,17.7h-7.7v45.2c0,12-17.9,12-17.9,0v-45.2h-7.7c-11.6,0-11.6-17.7,0-17.7Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M329.8,445.31c0-11.5,17.9-11.7,17.9-.1v22.4h16.8v-22.3c0-11.5,18-11.7,18-.1v54.7c0,11.6-18,11.6-18,0v-29.7l-16.8,15.2v14.5c0,11.6-17.9,11.6-17.9,0Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M404.2,454.51v9.4h19.9a9,9,0,0,1,0,17.9H404.2v8.6h21.6a8.94,8.94,0,0,1,8.9,9,9.19,9.19,0,0,1-8.9,8.9H401.2a15,15,0,0,1-14.9-15.1v-5.5c0-7,1-13.2,8.9-15.9-7.3-2.5-8.9-8.1-8.9-15.1v-4.8a15,15,0,0,1,14.9-15.1h24.6a8.9,8.9,0,0,1,8.9,8.8,9.16,9.16,0,0,1-8.9,9.1H404.2Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M155.6,450.61l-9.8-9.8a14.73,14.73,0,0,0-10.5-4.2H121.7a15.15,15.15,0,0,0-15.1,15.1v47.4a9.11,9.11,0,0,0,9,9.1,8.8,8.8,0,0,0,8.7-9.1v-8.6h11a14,14,0,0,0,10.5-4.3l8.9-8.5C160.9,471.81,162,456.71,155.6,450.61Zm-20.8,26.2-17.9-16.1,18.1-6.4,11.2,11.2Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M210.1,450.21l-13.4-11c-5.1-4.3-8.9-4.1-14.1,0l-13,11c-3.8,3.3-6.1,5.9-6.5,10.9v38.7a9,9,0,0,0,17.9,0v-25.1l17.7,16.4v8.7a8.86,8.86,0,0,0,9,8.8,8.75,8.75,0,0,0,8.8-8.8v-38.7C216.1,456.11,213.9,453.41,210.1,450.21Zm-15.3,26.6-17.9-16.1,18.1-6.4,11.2,11.2Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-10\" d=\"M490.8,464.41v-4a14.75,14.75,0,0,0-4.8-11l-8.7-8.4a15,15,0,0,0-10.7-4.4H446.7a9,9,0,0,0-9,9v53.8a8.94,8.94,0,0,0,9,8.9,8.83,8.83,0,0,0,8.8-8.9v-26.2l17.4,21.2v5a8.75,8.75,0,1,0,17.5,0v-5.2c0-6.4-2.2-11.3-8.6-15.2C487.5,476.21,490.8,471.51,490.8,464.41Zm-20,8.4-17.9-16.1,18.1-6.4,11.2,11.2Z\" transform=\"translate(-96.6 -11.21)\"/><g class=\"cls-13\"><path class=\"cls-1\" d=\"M229.4,436.31a9,9,0,0,1,9.1,9v3c0,.37.11.49.22.49a.2.2,0,0,0,.18-.19c2.6-8.1,8.5-12,16.2-12,9.9,0,17.6,6.3,17.6,16.7v45.9a8.76,8.76,0,0,1-8.8,9.1,8.92,8.92,0,0,1-9-9.1v-44.8H238.5v45a9,9,0,0,1-18,0v-54.1a9,9,0,0,1,8.9-9m0-1a10,10,0,0,0-9.9,10v54.1a9.91,9.91,0,0,0,9.9,9.9,10,10,0,0,0,10.1-9.9v-44h14.4v43.8a9.94,9.94,0,0,0,10,10.1,9.67,9.67,0,0,0,7-2.89,10,10,0,0,0,2.82-7.23V453.31c0-10.42-7.65-17.7-18.6-17.7-7.08,0-12.51,3.18-15.62,9a10.08,10.08,0,0,0-10.08-9.34Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M318.4,436.71c11.5,0,11.5,17.7,0,17.7h-7.7v45.2a9,9,0,1,1-17.9,0v-45.2h-7.7c-11.6,0-11.6-17.7,0-17.7h33.3m0-1H285.1c-6.37,0-9.7,5-9.7,9.85s3.33,9.85,9.7,9.85h6.7v44.2a9.73,9.73,0,0,0,3.13,7.5,10.55,10.55,0,0,0,13.64,0,9.73,9.73,0,0,0,3.13-7.5v-44.2h6.7c6.32,0,9.62-5,9.62-9.85s-3.3-9.85-9.62-9.85Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M338.84,436.6c4.44,0,8.86,2.85,8.86,8.61v22.4h16.8v-22.3c0-5.79,4.56-8.71,9.09-8.71s8.91,2.85,8.91,8.61v54.7c0,5.8-4.5,8.7-9,8.7s-9-2.9-9-8.7v-29.7l-16.8,15.2v14.5c0,5.8-4.47,8.7-8.95,8.7s-8.95-2.9-8.95-8.7v-54.6c0-5.79,4.53-8.71,9-8.71m0-1h0c-5,0-10,3.33-10,9.71v54.6c0,6.37,5,9.7,9.95,9.7s9.95-3.33,9.95-9.7V485.85l14.8-13.39v27.45c0,6.37,5,9.7,10,9.7s10-3.33,10-9.7v-54.7c0-4.63-3.1-9.61-9.91-9.61-5,0-10.09,3.33-10.09,9.71v21.3H348.7v-21.4c0-4.63-3.09-9.61-9.86-9.61Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M425.8,436.81a8.9,8.9,0,0,1,8.9,8.8,9.16,9.16,0,0,1-8.9,9.1H404.2v9.2h19.9a9,9,0,0,1,0,17.9H404.2v8.6h21.6a8.94,8.94,0,0,1,8.9,9,9.19,9.19,0,0,1-8.9,8.9H401.2a15,15,0,0,1-14.9-15.1v-5.5c0-7,1-13.2,8.9-15.9-7.3-2.5-8.9-8.1-8.9-15.1v-4.8a15,15,0,0,1,14.9-15.1h24.6m0-1H401.2a16,16,0,0,0-15.9,16.1v4.8c0,5.7.93,11.84,7.32,15.1-6.71,3.41-7.32,9.94-7.32,15.9v5.5a16,16,0,0,0,15.9,16.1h24.6a10.2,10.2,0,0,0,9.9-9.9,10,10,0,0,0-9.9-10H405.2v-6.6h18.9a10,10,0,0,0,0-19.9H405.2v-7.2h20.6a10.13,10.13,0,0,0,9.9-10.1,9.86,9.86,0,0,0-9.9-9.8Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M135.3,436.61a14.73,14.73,0,0,1,10.5,4.2l9.8,9.8c6.4,6.1,5.3,21.2-.9,27.1l-8.9,8.5a14,14,0,0,1-10.5,4.3h-11v8.6a8.8,8.8,0,0,1-8.7,9.1,9.11,9.11,0,0,1-9-9.1v-47.4a15.15,15.15,0,0,1,15.1-15.1h13.6m-.5,40.2,11.4-11.3L135,454.31l-18.1,6.4,17.9,16.1m.5-41.2H121.7a16.12,16.12,0,0,0-16.1,16.1v47.4a10.06,10.06,0,0,0,10,10.1,9.8,9.8,0,0,0,9.7-10.1v-7.6h10a15.12,15.12,0,0,0,11.21-4.59l8.88-8.49c3.4-3.23,5.51-9.14,5.51-15.43,0-5.54-1.68-10.32-4.61-13.11l-9.78-9.79a15.77,15.77,0,0,0-11.21-4.49Zm-16.48,25.48,15.92-5.63,10,10.05-10,9.93-16-14.35Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M189.77,436.06c2.21,0,4.41,1,6.93,3.15l13.4,11c3.8,3.2,6,5.9,6.4,10.9v38.7a8.75,8.75,0,0,1-8.8,8.8,8.86,8.86,0,0,1-9-8.8v-8.7L181,474.71v25.1a9,9,0,0,1-17.9,0v-38.7c.4-5,2.7-7.6,6.5-10.9l13-11c2.63-2.07,4.9-3.15,7.17-3.15m5,40.75,11.4-11.3L195,454.31l-18.1,6.4,17.9,16.1m-5-41.75c-2.4,0-4.88,1.07-7.79,3.37l-13,11c-3.61,3.13-6.4,6-6.85,11.58v38.78a10,10,0,0,0,19.9,0V477l15.7,14.55v8.26a9.92,9.92,0,0,0,10,9.8,9.69,9.69,0,0,0,9.8-9.8V461c-.43-5.29-2.8-8.25-6.76-11.58l-13.41-11c-2.73-2.3-5.13-3.38-7.56-3.38Zm-11,26,15.92-5.63,10,10.05-10,9.93-16-14.35Z\" transform=\"translate(-96.6 -11.21)\"/><path class=\"cls-1\" d=\"M466.6,436.61a15,15,0,0,1,10.7,4.4l8.7,8.4a14.75,14.75,0,0,1,4.8,11v4c0,7.1-3.3,11.8-9,14.6,6.4,3.9,8.6,8.8,8.6,15.2v5.2a8.75,8.75,0,1,1-17.5,0v-5l-17.4-21.2v26.2a8.83,8.83,0,0,1-8.8,8.9,8.94,8.94,0,0,1-9-8.9v-53.8a9,9,0,0,1,9-9h19.9m4.2,36.2,11.4-11.3L471,450.31l-18.1,6.4,17.9,16.1m-4.2-37.2H446.7a10,10,0,0,0-10,10v53.8a10,10,0,0,0,10,9.9,9.86,9.86,0,0,0,9.8-9.9V476l15.4,18.76v4.64a9.75,9.75,0,1,0,19.5,0v-5.2c0-6.7-2.37-11.43-7.65-15.12,5.34-3.17,8.05-8.11,8.05-14.68v-4a15.86,15.86,0,0,0-5.1-11.72l-8.71-8.4a15.84,15.84,0,0,0-11.39-4.68Zm-11.78,21.48,15.92-5.63,10,10.05-10,9.93-15.95-14.35Z\" transform=\"translate(-96.6 -11.21)\"/></g></svg>"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 2.03515625,
          "content": "parameters:\n\tlevel: 5\n\tpaths:\n\t\t- src\n\t\t- tests\n\tbootstrapFiles:\n\t\t- vendor/bin/.phpunit/phpunit/vendor/autoload.php\n\tinferPrivatePropertyTypeFromConstructor: true\n\texcludePaths:\n\t    - tests/DummyKernel.php\n\t    # There are lots of missing phpunit classes since we are supporting multiple versions\n\t    - src/ServerExtension.php\n\tignoreErrors:\n\t\t# False positive\n\t\t- '#Call to an undefined method ReflectionType::getName\\(\\)\\.#'\n\t\t# False positive : assertNotEmpty assert that count() !== 0 on Countable\n\t\t- '#Call to static method PHPUnit\\\\Framework\\\\Assert::assert(Not)?Empty\\(\\) with Symfony\\\\Component\\\\DomCrawler\\\\Crawler will always evaluate to (true|false)\\.#'\n\t\t# False positive : getStatus exists for PHPUnit < 10 only\n\t\t- '#Call to function method_exists\\(\\) with \\$this\\(Symfony\\\\Component\\\\Panther\\\\PantherTestCase\\) and ''getStatus'' will always evaluate to true\\.#'\n\t\t# False positive : PantherTestCase has no getClient method when symfony/framework-bundle (and WebTestCase) are not available\n\t\t- '#Call to function method_exists\\(\\) with ''Symfony\\\\\\\\Component\\\\\\\\Panther\\\\\\\\PantherTestCase'' and ''getClient'' will always evaluate to true\\.#'\n\t\t# To fix in PHP WebDriver\n\t\t- '#Parameter \\#2 \\$desired_capabilities of static method Facebook\\\\WebDriver\\\\Remote\\\\RemoteWebDriver::create\\(\\) expects array\\|Facebook\\\\WebDriver\\\\Remote\\\\DesiredCapabilities\\|null, Facebook\\\\WebDriver\\\\WebDriverCapabilities given\\.#'\n\t\t# Require a redesign of the underlying Symfony components\n\t\t- '#Call to an undefined method DOMNode::getTagName\\(\\)\\.#'\n\t\t- '#Return type \\(void\\) of method Symfony\\\\Component\\\\Panther\\\\DomCrawler\\\\Crawler::clear\\(\\) should be compatible with return type \\(Facebook\\\\WebDriver\\\\WebDriverElement\\) of method Facebook\\\\WebDriver\\\\WebDriverElement::clear\\(\\)#'\n\t\t- '#Return type \\(ArrayIterator<int, Facebook\\\\WebDriver\\\\WebDriverElement>\\) of method Symfony\\\\Component\\\\Panther\\\\DomCrawler\\\\Crawler::getIterator\\(\\) should be compatible with return type \\(ArrayIterator<int, DOMNode>\\) of method Symfony\\\\Component\\\\DomCrawler\\\\Crawler::getIterator\\(\\)#'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!-- http://phpunit.de/manual/4.1/en/appendixes.configuration.html -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/6.3/phpunit.xsd\"\n         backupGlobals=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n>\n\n    <php>\n        <env name=\"KERNEL_CLASS\" value=\"Symfony\\Component\\Panther\\Tests\\DummyKernel\" />\n        <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[direct]=0\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Project Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory>.</directory>\n            <exclude>\n                <directory>tests</directory>\n                <directory>vendor</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml.dist.10",
          "type": "blob",
          "size": 0.9267578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!-- http://phpunit.de/manual/4.1/en/appendixes.configuration.html -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.0/phpunit.xsd\"\n         backupGlobals=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         cacheDirectory=\".phpunit.cache\"\n>\n\n  <coverage>\n    <include>\n      <directory>.</directory>\n    </include>\n    <exclude>\n      <directory>tests</directory>\n      <directory>vendor</directory>\n    </exclude>\n  </coverage>\n\n  <php>\n    <env name=\"KERNEL_CLASS\" value=\"Symfony\\Component\\Panther\\Tests\\DummyKernel\"/>\n    <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[direct]=0\"/>\n    <server name=\"SYMFONY_PHPUNIT_VERSION\" value=\"10.0\"/>\n  </php>\n\n  <testsuites>\n    <testsuite name=\"Project Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}