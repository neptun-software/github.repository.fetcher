{
  "metadata": {
    "timestamp": 1736712194623,
    "page": 878,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "igorw/evenement",
      "stars": 1298,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2841796875,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text eol=lf\n\n/.github export-ignore\n/doc export-ignore\n/examples export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/CHANGELOG.md export-ignore\n/phpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.056640625,
          "content": "composer.lock\nvendor\n.phpunit.result.cache\n.phpunit.cache\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.46484375,
          "content": "CHANGELOG\n=========\n\n* v3.0.1 (2017-07-23)\n\n  * Resolved regression introduced in once listeners in v3.0.0 [#49](https://github.com/igorw/evenement/pull/49)\n\n* v3.0.0 (2017-07-23)\n\n  * Passing null as event name throw exception [#46](https://github.com/igorw/evenement/pull/46), and [#47](https://github.com/igorw/evenement/pull/47)\n  * Performance improvements [#39](https://github.com/igorw/evenement/pull/39), and [#45](https://github.com/igorw/evenement/pull/45)\n  * Remove once listeners [#44](https://github.com/igorw/evenement/pull/44), [#45](https://github.com/igorw/evenement/pull/45)\n\n* v2.1.0 (2017-07-17)\n\n  * Chaining for \"on\" method [#30](https://github.com/igorw/evenement/pull/30)\n  * Unit tests (on Travis) improvements [#33](https://github.com/igorw/evenement/pull/33), [#36](https://github.com/igorw/evenement/pull/36), and [#37](https://github.com/igorw/evenement/pull/37)\n  * Benchmarks added [#35](https://github.com/igorw/evenement/pull/35), and [#40](https://github.com/igorw/evenement/pull/40)\n  * Minor performance improvements [#42](https://github.com/igorw/evenement/pull/42), and [#38](https://github.com/igorw/evenement/pull/38)\n\n* v2.0.0 (2012-11-02)\n\n  * Require PHP >=5.4.0\n  * Added EventEmitterTrait\n  * Removed EventEmitter2\n\n* v1.1.0 (2017-07-17)\n\n  * Chaining for \"on\" method [#29](https://github.com/igorw/evenement/pull/29)\n  * Minor performance improvements [#43](https://github.com/igorw/evenement/pull/43)\n\n* v1.0.0 (2012-05-30)\n\n  * Initial stable release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "Copyright (c) 2011 Igor Wiedler\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.681640625,
          "content": "# Événement\n\nÉvénement is a very simple event dispatching library for PHP.\n\nIt has the same design goals as [Silex](https://silex.symfony.com/) and\n[Pimple](https://github.com/silexphp/Pimple), to empower the user while staying concise\nand simple.\n\nIt is very strongly inspired by the [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) API found in\n[node.js](http://nodejs.org).\n\n![Continuous Integration](https://github.com/igorw/evenement/workflows/CI/badge.svg)\n[![Latest Stable Version](https://poser.pugx.org/evenement/evenement/v)](https://packagist.org/packages/evenement/evenement)\n[![Total Downloads](https://poser.pugx.org/evenement/evenement/downloads)](https://packagist.org/packages/evenement/evenement)\n[![License](https://poser.pugx.org/evenement/evenement/license)](https://packagist.org/packages/evenement/evenement)\n\n## Fetch\n\nThe recommended way to install Événement is [through composer](http://getcomposer.org). By running the following command:\n\n```bash\n    $ composer require evenement/evenement\n```\n\n## Usage\n\n### Creating an Emitter\n\n```php\n<?php\n$emitter = new Evenement\\EventEmitter();\n```\n\n### Adding Listeners\n\n```php\n<?php\n$emitter->on('user.created', static function (User $user) use ($logger): void {\n    $logger->log(sprintf(\"User '%s' was created.\", $user->getLogin()));\n});\n```\n\n### Removing Listeners\n\n```php\n<?php\n$emitter->removeListener('user.created', static function (User $user) use ($logger): void {\n    $logger->log(sprintf(\"User '%s' was created.\", $user->getLogin()));\n});\n```\n\n### Emitting Events\n\n```php\n<?php\n$emitter->emit('user.created', [$user]);\n```\n\nTests\n-----\n```bash\n    $ ./vendor/bin/phpunit\n```\n\nLicense\n-------\nMIT, see LICENSE.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.6923828125,
          "content": "{\n    \"name\": \"evenement/evenement\",\n    \"description\": \"Événement is a very simple event dispatching library for PHP\",\n    \"license\": \"MIT\",\n    \"keywords\": [\n        \"event-dispatcher\",\n        \"event-emitter\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Igor Wiedler\",\n            \"email\": \"igor@wiedler.ch\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.1\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^10 || ^11\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Evenement\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Evenement\\\\Tests\\\\\": \"tests/\"\n        },\n        \"files\": [\n            \"tests/functions.php\"\n        ]\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.0341796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         cacheDirectory=\".phpunit.cache\"\n         executionOrder=\"depends,defects\"\n         requireCoverageMetadata=\"true\"\n         beStrictAboutCoverageMetadata=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         displayDetailsOnTestsThatTriggerDeprecations=\"true\"\n         displayDetailsOnTestsThatTriggerErrors=\"true\"\n         displayDetailsOnTestsThatTriggerNotices=\"true\"\n         displayDetailsOnTestsThatTriggerWarnings=\"true\"\n         colors=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\">\n    <testsuites>\n        <testsuite name=\"Evenement Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <source restrictNotices=\"true\" restrictWarnings=\"true\">\n        <include>\n            <directory>./src/</directory>\n        </include>\n    </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}