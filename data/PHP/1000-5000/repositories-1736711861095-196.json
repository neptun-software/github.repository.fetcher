{
  "metadata": {
    "timestamp": 1736711861095,
    "page": 196,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tuhinshubhra/RED_HAWK",
      "stars": 3137,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2919921875,
          "content": "FROM php:7.4-cli\nRUN apt-get update && apt-get install -y git\nRUN git clone https://github.com/Tuhinshubhra/RED_HAWK && cp -r RED_HAWK /usr/src/redhawk\nWORKDIR /usr/src/redhawk\nCMD [ \"php\", \"./rhawk.php\", \"<<<\",\"$'fix'\" ]\nCMD [ \"php\", \"./rhawk.php\", \"<<<\",\"$'update'\" ]\nCMD [ \"php\", \"./rhawk.php\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2017 R3D#@X0R_2H1N\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.1904296875,
          "content": "<p align=\"center\">\n\t<img src=\"https://i.imgur.com/GNWwMFb.png\" width=\"600px\">\n</p>\n\n#### Version 2.0.0\n#### By R3D#@0R_2H1N A.K.A Tuhinshubhra\nAll in one tool for **Information Gathering** and **Vulnerability Scanning**\n\n# Scans That You Can Perform Using RED HAWK :\n+ Basic Scan\n\t- Site Title **NEW**\n\t- IP Address\n\t- Web Server Detection `IMPROVED`\n\t- CMS Detection\n\t- Cloudflare Detection\n\t- robots.txt Scanner\n+ Whois Lookup `IMPROVED`\n+ Geo-IP Lookup\n+ Grab Banners `IMPROVED`\n+ DNS Lookup\n+ Subnet Calculator\n+ Nmap Port Scan\n+ Sub-Domain Scanner `IMPROVED`\n\t- Sub Domain\n\t- IP Address\n+ Reverse IP Lookup & CMS Detection `IMPROVED`\n\t- Hostname\n\t- IP Address\n\t- CMS\n+ Error Based SQLi Scanner\n+ Bloggers View **NEW**\n\t- HTTP Response Code\n\t- Site Title\n\t- Alexa Ranking\n\t- Domain Authority\n\t- Page Authority\n\t- Social Links Extractor\n\t- Link Grabber\n+ WordPress Scan **NEW**\n\t- Sensitive Files Crawling\n\t- Version Detection\n\t- Version Vulnerability Scanner\n+ Crawler\n+ MX Lookup **NEW**\n+ Scan For Everything - _The Old Lame Scanner_\n\n---\n# Released Versions:\n    - Version 1.0.0 [11-06-2017]\n    - Version 1.1.0 [15-06-2017]\n    - Version 2.0.0 [11-08-2017]\n\n# Changelog:\n- Version 1.0.0\n    - Initial Launch\n- Version 1.1.0\n    - Updated The `fix` command\n- Version 2.0.0\n\t- Separated all scans so that you are served the amount of information you need\n\t- `Sub-Domain Scanner` improved\n\t- `fix` command improved\n\t- `Web Server Detection` Improved\n\t- `CMS Detection` Improved\n\t- `Banner Grabbing` Improved\n\t- Added `WordPress Scanner`\n\t- Added `Bloggers View`\n\t- Added `MX Lookup`\n\t- Added `Update` option\n\t- RED HAWK Banner Updated\n\t- Many Other Internal Fixes\n\n# Installation:\n1. Run The Tool and Type `fix` This will Install All Required Modules.\n2. For The Bloggers View To Work Properly you have to configure RED HAWK with moz.com's api keys for that follow the following steps:\n\n**How To Configure RED HAWK with moz.com for Bloggers View Scan**\n+ Create an account in moz follow this link : https://moz.com/community/join\n+ After successful account creation and completing the verification you need to generate the API Keys\n+ You can get your API Keys here: https://moz.com/products/mozscape/access\n+ Get your AccessID and SecretKey and replace the `$accessID` and `$secretKey` variable's value in the `config.php` file\n+ All set, now you can enjoy the bloggers view.\n\n# Usage:\n- git clone `https://github.com/Tuhinshubhra/RED_HAWK`\n- cd RED_HAWK\n- php rhawk.php\n- Use the \"help\" command to see the command list or type in the domain name you want to scan (without Http:// OR Https://).\n- Select whether The Site Runs On HTTPS or not.\n- Select the type of scan you want to perform\n- Leave the rest to the scanner\n\n# List of CMS Supported\nRED HAWK's `CMS Detector` currently is able to detect the following CMSs (Content Management Systems) in case the website is using some other CMS, Detector will return _could not detect_.\n\n- WordPress\n- Joomla\n- Drupal\n- Magento\n# Known Issues\n**ISSUE:** Scanner Stops Working After Cloudflare Detection!\n\n**SOLUTION:** Use The `fix` Command OR Manually Install *php-curl* & *php-xml*\n\nWatch The Video TO See How To Solve This Isuue : https://www.youtube.com/watch?v=QuFPY9NFTM8\n\n# Video Demonstration\n<a href=\"https://www.youtube.com/watch?v=Jt9kBFiJDrE\" target=\"_blank\"><img src=\"https://i.imgur.com/SXDWohl.png\" \nalt=\"Video Thumbnail\" border=\"10\" /></a>\n\n# Suggestions And Feedbacks\nWant to contribute to RED HAWK or point out something wrong? Just create a new issue here: https://github.com/Tuhinshubhra/RED_HAWK/issues/new\nI'd love to hear from you.\n\n# Support and Donations\nFound RED HAWK cool? well you could buy me a cup of tea ;) (no alcohol plz xD) just send any amount of donations (in BTC) to this address : **1NbiQidWWVVhWknsfPSN1MuksF8cbXWCku**\n\nCan't donate? well that's no problem just drop a **THANK YOU** this will motivate me to create more exciting stuffs for you ;)\n\n# TODOs\n\n- Make a proper update option ( Installs current version automatically )\n- Add more CMS to the detector\n- Improve The WordPress Scanner ( Add User, Theme & Plugins Enumeration )\n- Create a web version of the scanner\n- Add XSS & LFI Scanner\n- Improve the Links grabber thingy under bloggers view\n- Add some other scans under the Bloggers View\n"
        },
        {
          "name": "config.php",
          "type": "blob",
          "size": 0.873046875,
          "content": "<?php\n/*\n This is the configuration file for the moz accessID and secretkey for RED HAWK's bloggers view scan.\n If you are not a blogger or in other words if you are not interested in some geeky bloggers info about the target site you can leave this file alone.\n\n - But I am interested and don't know where to get these keys from :'( ...\n -- Well in that case go and create a account in moz.com and generate your bunch of keys here: https://moz.com/products/mozscape/access\n\n PLEASE NOTE: free accounts have limitations of 27,000 calls per month which i belive is more then enough but if this falls short for you, just create a new account in moz and get a new bunch of keys and replace your old ones.\n*/\n\n$accessID = \"put your access id in between the quotes\"; // this is where you put your access ID\n$secretKey = \"paste your secretkey in between the quotes\"; // Your secret key goes here\n\n?>\n"
        },
        {
          "name": "crawl",
          "type": "tree",
          "content": null
        },
        {
          "name": "functions.php",
          "type": "blob",
          "size": 11.181640625,
          "content": "<?php\n//functions for RED HAWK\nfunction getTitle($url) {\n  $data = readcontents($url);\n  $title = preg_match('/<title[^>]*>(.*?)<\\/title>/ims', $data, $matches) ? $matches[1] : null;\n  return $title;\n  }\n  function userinput($message){\n    global $white, $bold, $greenbg, $redbg, $bluebg, $cln, $lblue, $fgreen;\n    $yellowbg = \"\\e[100m\";\n    $inputstyle = $cln . $bold . $lblue . \"[#] \" . $message . \": \" . $fgreen ;\n  echo $inputstyle;\n  }\nfunction WEBserver($urlws){\n  stream_context_set_default( [\n    'ssl' => [\n        'verify_peer' => false,\n        'verify_peer_name' => false,\n    ],\n]);\n  $wsheaders = get_headers($urlws, 1);\n  if (is_array($wsheaders['Server'])) { $ws = $wsheaders['Server'][0];}else{\n    $ws = $wsheaders['Server'];\n  }\n  if ($ws == \"\")\n    {\n      echo \"\\e[91mCould Not Detect\\e[0m\";\n    }\n  else\n    {\n      echo \"\\e[92m$ws \\e[0m\";\n    }\n}\n\n\nfunction cloudflaredetect($reallink){\n\n  $urlhh    = \"http://api.hackertarget.com/httpheaders/?q=\" . $reallink;\n  $resulthh = file_get_contents($urlhh);\n  if (strpos($resulthh, 'cloudflare') !== false)\n    {\n      echo \"\\e[91mDetected\\n\\e[0m\";\n    }\n  else\n    {\n      echo \"\\e[92mNot Detected\\n\\e[0m\";\n    }\n}\n\n\nfunction CMSdetect($reallink){\n  $cmssc  = readcontents($reallink);\n  if (strpos($cmssc, '/wp-content/') !== false)\n    {\n      $tcms = \"WordPress\";\n\n    }\n  else\n    {\n      if (strpos($cmssc, 'Joomla') !== false)\n        {\n          $tcms = \"Joomla\";\n        }\n      else\n        {\n          $drpurl = $reallink . \"/misc/drupal.js\";\n          $drpsc  = readcontents(\"$drpurl\");\n          if (strpos($drpsc, 'Drupal') !== false)\n            {\n              $tcms = \"Drupal\";\n            }\n          else\n            {\n              if (strpos($cmssc, '/skin/frontend/') !== false)\n                {\n                  $tcms = \"Magento\";\n                }\n              else\n                {\n                  if (strpos($cmssc, 'content=\"WordPress')!== false) {\n                    $tcms = \"WordPress\";\n                  }\n                  else {\n\n\n                  $tcms = \"\\e[91mCould Not Detect\";\n                }\n                }\n            }\n        }\n    }\n    return $tcms;\n}\nfunction robotsdottxt($reallink){\n  $rbturl    = $reallink . \"/robots.txt\";\n  $rbthandle = curl_init($rbturl);\n  curl_setopt($rbthandle, CURLOPT_SSL_VERIFYPEER, false);\n  curl_setopt($rbthandle, CURLOPT_RETURNTRANSFER, TRUE);\n  $rbtresponse = curl_exec($rbthandle);\n  $rbthttpCode = curl_getinfo($rbthandle, CURLINFO_HTTP_CODE);\n  if ($rbthttpCode == 200)\n    {\n      $rbtcontent = readcontents($rbturl);\n      if ($rbtcontent == \"\")\n        {\n          echo \"Found But Empty!\";\n        }\n      else\n        {\n          echo \"\\e[92mFound \\e[0m\\n\";\n          echo \"\\e[36m\\n-------------[ contents ]----------------  \\e[0m\\n\";\n          echo $rbtcontent;\n          echo \"\\e[36m\\n-----------[end of contents]-------------\\e[0m\";\n        }\n    }\n  else\n    {\n      echo \"\\e[91mCould NOT Find robots.txt! \\e[0m\\n\";\n    }\n}\nfunction gethttpheader($reallink){\n  $hdr = get_headers($reallink);\n  foreach ($hdr as $shdr) {\n    echo \"\\n\\e[92m\\e[1m[i]\\e[0m  $shdr\";\n  }\n  echo \"\\n\";\n\n}\nfunction extract_social_links($sourcecode){\n  /* This is really a simple code for now i will work around it on the upcoming version.\n     For now only these social media are supported:\n      - Facebook\n      - Twitter\n      - Instagram\n      - YouTube\n      - Google +\n      - Pinterest\n      - GitHUB\n  */\n  global $bold, $lblue, $fgreen, $red, $blue, $magenta, $orange, $white, $green, $grey, $cyan;\n  $fb_link_count = 0;\n  $twitter_link_count = 0;\n  $insta_link_count = 0;\n  $yt_link_count = 0;\n  $gp_link_count = 0;\n  $pint_link_count = 0;\n  $github_link_count = 0;\n  $total_social_link_count = 0;\n\n  $social_links_array = array (\n    'facebook' => array(),\n    'twitter' => array(),\n    'instagram' => array(),\n    'youtube' => array(),\n    'google_p' => array(),\n    'pinterest' => array(),\n    'github' => array()\n  );\n\n  $fb_links = $social_links_array['facebook'];\n  $twitter_links = $social_links_array['twitter'];\n  $insta_links = $social_links_array['instagram'];\n  $youtube_links = $social_links_array['youtube'];\n  $googlep_links = $social_links_array['google_p'];\n  $pinterest_links = $social_links_array['pinterest'];\n  $github_links = $social_links_array['github'];\n\n  $sm_dom = new DOMDocument;\n  @$sm_dom->loadHTML($sourcecode);\n  $links = $sm_dom->getElementsByTagName('a');\n  foreach ($links as $link) {\n    $link = $link->getAttribute('href');\n    if (strpos ($link, \"facebook.com/\") !== false){\n      $total_social_link_count++;\n      $fb_link_count++;\n      array_push($social_links_array['facebook'], $link);\n    }\n    elseif (strpos ($link, \"twitter.com/\") !== false) {\n      $total_social_link_count++;\n      $twitter_link_count++;\n      array_push($social_links_array['twitter'], $link);\n    }\n    elseif (strpos ($link, \"instagram.com/\") !== false) {\n      $total_social_link_count++;\n      $insta_link_count++;\n      array_push($social_links_array['instagram'], $link);\n    }\n    elseif (strpos ($link, \"youtube.com/\") !== false) {\n      $total_social_link_count++;\n      $yt_link_count++;\n      array_push($social_links_array['youtube'], $link);\n    }\n    elseif (strpos ($link, \"plus.google.com/\") !== false) {\n      $total_social_link_count++;\n      $gp_link_count++;\n      array_push($social_links_array['google_p'], $link);\n    }\n    elseif (strpos ($link, \"github.com/\") !== false) {\n      $total_social_link_count++;\n      $github_link_count++;\n      array_push($social_links_array['github'], $link);\n    }\n    elseif (strpos ($link, \"pinterest.com/\") !== false) {\n      $total_social_link_count++;\n      $pint_link_count++;\n      array_push($social_links_array['pinterest'], $link);\n    }\n    else {\n      // I know this has nothing to do with the code but again i love comments ;__; it's feels good to waste time :p\n    }\n  }\n  if ($total_social_link_count == 0){\n    echo $bold . $red . \"[!] No Social Link Found In Source Code. \\n\\e[0m\";\n  }\n  elseif ($total_social_link_count == \"1\") {\n    // As much as i hate to admit grammer is important :p\n    echo $bold . $lblue . \"[i] \" . $fgreen . $total_social_link_count . $lblue . \" Social Link Was Gathered From Source Code \\n\\n\";\n    foreach ($social_links_array['facebook'] as $link) {\n      echo $bold . $blue . \"[ facebook  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['twitter'] as $link) {\n      echo $bold . $cyan . \"[  twitter  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['instagram'] as $link) {\n      echo $bold . $magenta . \"[ instagram ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['youtube'] as $link) {\n      echo $bold . $red . \"[  youtube  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['google_p'] as $link) {\n      echo $bold . $orange . \"[  google+  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['pinterest'] as $link) {\n      echo $bold . $red . \"[ pinterest ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['github'] as $link) {\n      echo $bold . $grey . \"[  github   ] \" . $white . $link . \"\\n\";\n    }\n    echo \"\\n\";\n  } else {\n    echo $bold . $lblue . \"[i] \" . $fgreen . $total_social_link_count . $lblue . \" Social Links Were Gathered From Source Code \\n\\n\";\n    foreach ($social_links_array['facebook'] as $link) {\n      echo $bold . $blue . \"[ facebook  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['twitter'] as $link) {\n      echo $bold . $cyan . \"[  twitter  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['instagram'] as $link) {\n      echo $bold . $magenta . \"[ instagram ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['youtube'] as $link) {\n      echo $bold . $red . \"[  youtube  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['google_p'] as $link) {\n      echo $bold . $orange . \"[  google+  ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['pinterest'] as $link) {\n      echo $bold . $red . \"[ pinterest ] \" . $white . $link . \"\\n\";\n    }\n    foreach ($social_links_array['github'] as $link) {\n      echo $bold . $grey . \"[  github   ] \" . $white . $link . \"\\n\";\n    }\n    echo \"\\n\";\n  }\n}\nfunction extractLINKS($reallink){\n  global $bold, $lblue, $fgreen;\n  $arrContextOptions=array(\n      \"ssl\"=>array(\n            \"verify_peer\"=>false,\n            \"verify_peer_name\"=>false,\n        ),\n    );\n  $ip = str_replace(\"https://\",\"\",$reallink);\n  $lwwww = str_replace(\"www.\",\"\",$ip);\n  $elsc = file_get_contents($reallink, false, stream_context_create($arrContextOptions));\n  $eldom     = new DOMDocument;\n  @$eldom->loadHTML($elsc);\n  $elinks = $eldom->getElementsByTagName('a');\n  $elinks_count = 0;\n  foreach ($elinks as $ec) {\n    $elinks_count++;\n  }\n  echo $bold . $lblue . \"[i] Number Of Links Found In Source Code : \" . $fgreen . $elinks_count . \"\\n\";\n  userinput(\"Display Links ? (Y/N) \");\n  $bv_show_links = trim(fgets(STDIN, 1024));\n  if ($bv_show_links == \"y\" or $bv_show_links ==\"Y\"){\n    foreach ($elinks as $elink) {\n      $elhref = $elink->getAttribute('href');\n      if (strpos($elhref, $lwwww) !== false ) {\n        echo \"\\n\\e[92m\\e[1m*\\e[0m\\e[1m $elhref\";\n\n      }\n      else {\n        echo \"\\n\\e[38;5;208m\\e[1m*\\e[0m\\e[1m $elhref\";\n      }\n    }\n    echo \"\\n\";\n  }\n\nelse {\n  // not showing links.\n}\n}\nfunction readcontents($urltoread){\n  $arrContextOptions=array(\n      \"ssl\"=>array(\n            \"verify_peer\"=>false,\n            \"verify_peer_name\"=>false,\n        ),\n    );\n    $filecntns = file_get_contents($urltoread, false, stream_context_create($arrContextOptions));\n    return $filecntns;\n}\n\nfunction MXlookup ($site){\n  $Mxlkp = dns_get_record($site, DNS_MX);\n\t$mxrcrd = $Mxlkp[0]['target'];\n\t$mxip = gethostbyname($mxrcrd);\n\t$mx = gethostbyaddr($mxip);\n  $mxresult = \"\\e[1m\\e[36mIP      :\\e[32m \" . $mxip .\"\\n\\e[36mHOSTNAME:\\e[32m \" . $mx ;\n  return $mxresult;\n}\n\nfunction bv_get_alexa_rank($url){\n  $xml = simplexml_load_file(\"http://data.alexa.com/data?cli=10&url=\".$url);\n    if(isset($xml->SD)):\n        return $xml->SD->POPULARITY->attributes()->TEXT;\n    endif;\n}\nfunction bv_moz_info($url){\n  global $bold, $red, $fgreen, $lblue, $blue;\n  require (\"config.php\");\n  if (strpos($accessID, \" \") !== false OR strpos($secretKey, \" \") !== false){\n    echo $bold . $red . \"\\n[!] Some Results Will Be Omited (Please Put Valid MOZ API Keys in config.php file)\\n\\n\";\n  }\n  else {\n  \t$expires = time() + 300;\n  \t$SignInStr = $accessID. \"\\n\" .$expires;\n  \t$binarySignature = hash_hmac('sha1', $SignInStr, $secretKey, true);\n  \t$SafeSignature = urlencode(base64_encode($binarySignature));\n  \t$objURL = $url;\n    $flags = \"103079231492\";\n  \t$reqUrl = \"http://lsapi.seomoz.com/linkscape/url-metrics/\".urlencode($objURL).\"?Cols=\".$flags.\"&AccessID=\".$accessID.\"&Expires=\".$expires.\"&Signature=\".$SafeSignature;\n    $opts = array(\n  \t    CURLOPT_RETURNTRANSFER => true\n  \t    );\n   $curlhandle = curl_init($reqUrl);\n  \tcurl_setopt_array($curlhandle, $opts);\n  \t$content = curl_exec($curlhandle);\n  \tcurl_close($curlhandle);\n  \t$resObj = json_decode($content);\n    echo $bold . $lblue . \"[i] Moz Rank : \" . $fgreen . $resObj->{'umrp'} . \"\\n\";\n  \techo $bold . $lblue . \"[i] Domain Authority : \" . $fgreen . $resObj->{'pda'} . \"\\n\";\n  \techo $bold . $lblue . \"[i] Page Authority : \" . $fgreen . $resObj->{'upa'} . \"\\n\";\n  }\n}\n?>\n"
        },
        {
          "name": "rhawk.php",
          "type": "blob",
          "size": 55.3017578125,
          "content": "<?php\nerror_reporting(0);\nrequire 'functions.php';\nrequire 'var.php';\necho $cln;\nfunction update()\n    {\n        echo \"\\n\\e[91m\\e[1m[+] RED HAWK UPDATE UTILITY [+]\\nUpdate in progress, please wait...\\n\\n$cln\";\n        system(\"git fetch origin && git reset --hard origin/master && git clean -f -d\");\n        echo $bold . $fgreen . \"[i] Job finished successfully! Please Restart RED HAWK \\n\" . $cln;\n        exit;\n    }\n    \nsystem(\"clear\");\nredhawk_banner();\nif (extension_loaded('curl') || extension_loaded('dom'))\n  {\n  }\nelse\n  {\n    if (!extension_loaded('curl'))\n      {\n        echo $bold . $red . \"\\n[!] cURL Module Is Missing! Try 'fix' command OR Install php-curl\" . $cln;\n      }\n    if (!extension_loaded('dom'))\n      {\n        echo $bold . $red . \"\\n[!] DOM Module Is Missing! Try 'fix' command OR Install php-xml\\n\" . $cln;\n      }\n  }\nthephuckinstart:\necho \"\\n\";\nuserinput(\"Enter The Website You Want To Scan \");\n$ip = trim(fgets(STDIN, 1024));\nif ($ip == \"help\")\n  {\n    echo \"\\n\\n[+] RED HAWK Help Screen [+] \\n\\n\";\n    echo $bold . $lblue . \"Commands\\n\";\n    echo \"========\\n\";\n    echo $fgreen . \"[1] help:$cln View The Help Menu\\n\";\n    echo $bold . $fgreen . \"[2] fix:$cln Installs All Required Modules (Suggested If You Are Running The Tool For The First Time)\\n\";\n    echo $bold . $fgreen . \"[3] URL:$cln Enter The Domain Name Which You Want To Scan (Format:www.sample.com / sample.com)\\n\";\n    echo $bold . $fgreen . \"[4] update:$cln Updates The Script To The Newest Version Available.\\n\";\n    goto thephuckinstart;\n  }\nelseif ($ip == \"fix\")\n  {\n    echo \"\\n\\e[91m\\e[1m[+] RED HAWK FiX MENU [+]\\n\\n$cln\";\n    echo $bold . $blue . \"[+] Checking If cURL module is installed ...\\n\";\n    if (!extension_loaded('curl'))\n      {\n        echo $bold . $red . \"[!] cURL Module Not Installed ! \\n\";\n        echo $yellow . \"[*] Installing cURL. (Operation requires sudo permission so you might be asked for password) \\n\" . $cln;\n        system(\"sudo apt-get -qq --assume-yes install php-curl\");\n        echo $bold . $fgreen . \"[i] cURL Installed. \\n\";\n      }\n    else\n      {\n        echo $bold . $fgreen . \"[i] cURL is already installed, Skipping To Next \\n\";\n      }\n    echo $bold . $blue . \"[+] Checking If php-XML module is installed ...\\n\";\n    if (!extension_loaded('dom'))\n      {\n        echo $bold . $red . \"[!] php-XML Module Not Installed ! \\n\";\n        echo $yellow . \"[*] Installing php-XML. (Operation requires sudo permission so you might be asked for password) \\n\" . $cln;\n        system(\"sudo apt-get -qq --assume-yes install php-xml\");\n        echo $bold . $fgreen . \"[i] DOM Installed. \\n\";\n      }\n    else\n      {\n        echo $bold . $fgreen . \"[i] php-XML is already installed, You Are All SET ;) \\n\";\n      }\n    echo $bold . $fgreen . \"[i] Job finished successfully! Please Restart RED HAWK \\n\";\n    exit;\n  }\nelseif ($ip == \"update\")\n  {\n    update();\n  }\n\nelseif (strpos($ip, '://') !== false)\n  {\n    echo $bold . $red . \"\\n[!] (HTTP/HTTPS) Detected In Input! Enter URL Without Http/Https\\n\" . $CURLOPT_RETURNTRANSFER;\n    goto thephuckinstart;\n  }\nelseif (strpos($ip, '.') == false)\n  {\n    echo $bold . $red . \"\\n[!] Invalid URL Format! Enter A Valid URL\\n\" . $cln;\n    goto thephuckinstart;\n  }\nelseif (strpos($ip, ' ') !== false)\n  {\n    echo $bold . $red . \"\\n[!] Invalid URL Format! Enter A Valid URL\\n\" . $cln;\n    goto thephuckinstart;\n  }\nelse\n  {\n    echo \"\\n\";\n    userinput(\"Enter 1 For HTTP OR Enter 2 For HTTPS\");\n    echo $cln . $bold . $fgreen;\n    $ipsl = trim(fgets(STDIN, 1024));\n    if ($ipsl == \"2\")\n      {\n        $ipsl = \"https://\";\n      }\n    else\n      {\n        $ipsl = \"http://\";\n      }\nscanlist:\n\n    system(\"clear\");\n    echo $bold . $blue . \"\n      +--------------------------------------------------------------+\n      +                  List Of Scans Or Actions                    +\n      +--------------------------------------------------------------+\n\n            $lblue Scanning Site : \" . $fgreen . $ipsl . $ip . $blue . \"\n      \\n\\n\";\n    echo $yellow . \" [0]  Basic Recon$white (Site Title, IP Address, CMS, Cloudflare Detection, Robots.txt Scanner)$yellow \\n [1]  Whois Lookup \\n [2]  Geo-IP Lookup \\n [3]  Grab Banners \\n [4]  DNS Lookup \\n [5]  Subnet Calculator \\n [6]  NMAP Port Scan \\n [7]  Subdomain Scanner \\n [8]  Reverse IP Lookup & CMS Detection \\n [9]  SQLi Scanner$white (Finds Links With Parameter And Scans For Error Based SQLi)$yellow \\n [10] Bloggers View$white (Information That Bloggers Might Be Interested In)$yellow \\n [11] WordPress Scan$white (Only If The Target Site Runs On WP)$yellow \\n [12] Crawler \\n [13] MX Lookup \\n$magenta [A]  Scan For Everything - (The Old Lame Scanner) \\n$blue [F]  Fix (Checks For Required Modules and Installs Missing Ones) \\n$fgreen [U]  Check For Updates \\n$white [B]  Scan Another Website (Back To Site Selection) \\n$red [Q]  Quit! \\n\\n\" . $cln;\naskscan:\n    userinput(\"Choose Any Scan OR Action From The Above List\");\n    $scan = trim(fgets(STDIN, 1024));\n\n    if (!in_array($scan, array(\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n        '13',\n        'F',\n        'f',\n        'A',\n        'B',\n        'U',\n        'Q',\n        'a',\n        'b',\n        'q',\n        'u'\n    ), true))\n      {\n        echo $bold . $red . \"\\n[!] Invalid Input! Please Enter a Valid Option! \\n\\n\" . $cln;\n        goto askscan;\n      }\n    else\n      {\n        if ($scan == \"15\")\n          {\n            goto thephuckinstart;\n          }\n        elseif ($scan == 'q' | $scan == 'Q')\n          {\n            echo \"\\n\\n\\t Good Bye - Have a nice day :)\\n\\n\";\n            die();\n          }\n        elseif ($scan == 'b' || $scan == 'B')\n          {\n            system(\"clear\");\n            goto thephuckinstart;\n          }\n        elseif ($scan == \"0\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : BASIC SCAN\" . $cln;\n            echo \"\\n\\n\";\n            echo $bold . $lblue . \"[iNFO] Site Title: \" . $green;\n            echo getTitle($reallink);\n            echo $cln;\n            $wip = gethostbyname($ip);\n            echo $lblue . $bold . \"\\n[iNFO] IP address: \" . $green . $wip . \"\\n\" . $cln;\n            echo $bold . $lblue . \"[iNFO] Web Server: \";\n            WEBserver($reallink);\n            echo \"\\n\";\n            echo $bold . $lblue . \"[iNFO] CMS: \\e[92m\" . CMSdetect($reallink) . $cln;\n            echo $lblue . $bold . \"\\n[iNFO] Cloudflare: \";\n            cloudflaredetect($lwwww);\n            echo $lblue . $bold . \"[iNFO] Robots File:$cln \";\n            robotsdottxt($reallink);\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"1\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : WHOIS Lookup\" . $cln;\n            echo $bold . $lblue . \"\\n[~] Whois Lookup Result: \\n\\n\" . $cln;\n            $urlwhois    = \"http://api.hackertarget.com/whois/?q=\" . $lwwww;\n            $resultwhois = file_get_contents($urlwhois);\n            echo $bold . $fgreen . $resultwhois;\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"2\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : GEO-IP Lookup\" . $cln;\n            echo \"\\n\\n\";\n            $urlgip    = \"http://api.hackertarget.com/geoip/?q=\" . $lwwww;\n            $resultgip = readcontents($urlgip);\n            $geoips    = explode(\"\\n\", $resultgip);\n            foreach ($geoips as $geoip)\n              {\n                echo $bold . $lblue . \"[GEO-IP]$green $geoip \\n\";\n              }\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"3\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : Banner Grabbing\" . $cln;\n            echo \"\\n\\n\";\n            $hdr = get_headers($reallink);\n            foreach ($hdr as $shdr)\n              {\n                echo $bold . $lblue . \"\\n\" . $green . $shdr;\n              }\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"4\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : DNS Lookup\" . $cln;\n            echo \"\\n\\n\";\n            $urldlup    = \"http://api.hackertarget.com/dnslookup/?q=\" . $lwwww;\n            $resultdlup = readcontents($urldlup);\n            $dnslookups = trim($resultdlup, \"\\n\");\n            $dnslookups = explode(\"\\n\", $dnslookups);\n            foreach ($dnslookups as $dnslkup)\n              {\n                echo $bold . $lblue . \"\\n[DNS Lookup] \" . $green . $dnslkup;\n              }\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"5\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : SubNet Calculator\" . $cln;\n            echo \"\\n\\n\";\n            $urlscal    = \"http://api.hackertarget.com/subnetcalc/?q=\" . $lwwww;\n            $resultscal = readcontents($urlscal);\n            $subnetcalc = trim($resultscal, \"\\n\");\n            $subnetcalc = explode(\"\\n\", $subnetcalc);\n            foreach ($subnetcalc as $sc)\n              {\n                echo $bold . $lblue . \"\\n[SubNet Calc] \" . $green . $sc;\n              }\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"7\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : Subdomain Scanner\" . $cln;\n            $urlsd      = \"http://api.hackertarget.com/hostsearch/?q=\" . $lwwww;\n            $resultsd   = readcontents($urlsd);\n            $subdomains = trim($resultsd, \"\\n\");\n            $subdomains = explode(\"\\n\", $subdomains);\n            unset($subdomains['0']);\n            $sdcount = count($subdomains);\n            echo \"\\n\" . $blue . $bold . \"[i] Total Subdomains Found : \" . $green . $sdcount . \"\\n\\n\" . $cln;\n            foreach ($subdomains as $subdomain)\n              {\n                echo $bold . $lblue . \"[+] Subdomain: $fgreen\" . (str_replace(\",\", \"\\n\\e[36m[-] IP: $fgreen\", $subdomain));\n                echo \"\\n\\n\" . $cln;\n              }\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"6\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : Nmap Port Scan\" . $cln;\n            echo $bold . $lblue . \"\\n[~] Port Scan Result: \\n\\n\" . $cln;\n            $urlnmap    = \"http://api.hackertarget.com/nmap/?q=\" . $lwwww;\n            $resultnmap = readcontents($urlnmap);\n            echo $bold . $fgreen . $resultnmap;\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"8\")\n          {\n            $reallink  = $ipsl . $ip;\n            $lwwww     = str_replace(\"www.\", \"\", $ip);\n            $detectcms = \"yes\";\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : Reverse IP Lookup & CMS Detection\" . $cln;\n            echo \"\\n\";\n            $sth = 'http://domains.yougetsignal.com/domains.php';\n            $ch  = curl_init($sth);\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($ch, CURLOPT_POSTFIELDS, \"remoteAddress=$ip&ket=\");\n            curl_setopt($ch, CURLOPT_HEADER, 0);\n            curl_setopt($ch, CURLOPT_POST, 1);\n            $resp  = curl_exec($ch);\n            $resp  = str_replace(\"[\", \"\", str_replace(\"]\", \"\", str_replace(\"\\\"\\\"\", \"\", str_replace(\", ,\", \",\", str_replace(\"{\", \"\", str_replace(\"{\", \"\", str_replace(\"}\", \"\", str_replace(\", \", \",\", str_replace(\", \", \",\", str_replace(\"'\", \"\", str_replace(\"'\", \"\", str_replace(\":\", \",\", str_replace('\"', '', $resp)))))))))))));\n            $array = explode(\",,\", $resp);\n            unset($array[0]);\n\n            echo $bold . $lblue . \"[i] Total Sites Found On This Server :$cln \" . $green . count($array) . \"\\n\\n$cln\";\n            if (count($array) > 0)\n              {\n                userinput(\"Do You Want RED HAWK To Detect CMS Of The Sites? [Y/N]\");\n                $detectcmsui = trim(fgets(STDIN, 1024));\n                if ($detectcmsui == \"y\" | $detectcmsui == \"Y\")\n                  {\n                    $detectcms = \"yes\";\n                  }\n                else\n                  {\n                    $detectcms = \"no\";\n                  }\n              }\n            foreach ($array as $izox)\n              {\n                $izox   = str_replace(\",\", \"\", $izox);\n                $cmsurl = \"http://\" . $izox;\n                echo \"\\n\" . $bold . $lblue . \"HOSTNAME : \" . $fgreen . $izox . $cln;\n                echo \"\\n\" . $bold . $lblue . \"IP       : \" . $fgreen . gethostbyname($izox) . $cln . \"\\n\";\n                if ($detectcms == \"yes\")\n                  {\n                    echo $lblue . $bold . \"CMS      : \" . $green . CMSdetect($cmsurl) . $cln . \"\\n\\n\";\n                  }\n              }\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"9\")\n          {\n            $reallink = $ipsl . $ip;\n            $srccd    = file_get_contents($reallink);\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : SQL Vulnerability Scanner\" . $cln;\n            echo \"\\n\\n\";\n            $lulzurl = $reallink;\n            $html    = file_get_contents($lulzurl);\n            $dom     = new DOMDocument;\n            @$dom->loadHTML($html);\n            $links = $dom->getElementsByTagName('a');\n            $vlnk  = 0;\n            foreach ($links as $link)\n              {\n                $lol = $link->getAttribute('href');\n                if (strpos($lol, '?') !== false)\n                  {\n                    echo $lblue . $bold . \"\\n[ LINK ] \" . $fgreen . $lol . \"\\n\" . $cln;\n                    echo $blue . $bold . \"[ SQLi ] \";\n                    $sqllist = file_get_contents('sqlerrors.ini');\n                    $sqlist  = explode(',', $sqllist);\n                    if (strpos($lol, '://') !== false)\n                      {\n                        $sqlurl = $lol . \"'\";\n                      }\n                    else\n                      {\n                        $sqlurl = $ipsl . $ip . \"/\" . $lol . \"'\";\n                      }\n                    $sqlsc = file_get_contents($sqlurl);\n                    $sqlvn = $bold . $red . \"Not Vulnerable\";\n                    foreach ($sqlist as $sqli)\n                      {\n                        if (strpos($sqlsc, $sqli) !== false)\n                            $sqlvn = $green . $bold . \"Vulnerable!\";\n                      }\n                    echo $sqlvn;\n                    echo \"\\n$cln\";\n                    echo \"\\n\";\n                    $vlnk++;\n                  }\n              }\n            echo \"\\n\" . $blue . $bold . \"[+] URL(s) With Parameter(s): \" . $green . $vlnk;\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"10\")\n          {\n            $reallink = $ipsl . $ip;\n            $srccd    = readcontents($reallink);\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\\t\" . $lblue . $bold . \"[+] BLOGGERS ViEW [+] \\n\\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo \"\\n\\n\";\n            $test_url = $reallink;\n            $handle   = curl_init($test_url);\n            curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n            $tu_response        = curl_exec($handle);\n            $test_url_http_code = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n            echo $lblue . $bold . \"[i] HTTP Response Code : \" . $fgreen . $test_url_http_code . \"\\n\";\n            echo $lblue . \"[i] Site Title: \" . $fgreen . getTitle($reallink) . \"\\n\";\n            echo $lblue . \"[i] CMS (Content Management System) : \" . $fgreen . CMSdetect($reallink) . \"\\n\";\n            echo $lblue . $bold . \"[i] Alexa Global Rank : \" . $fgreen . bv_get_alexa_rank($lwwww) . \"\\n\";\n            bv_moz_info($lwwww);\n            extract_social_links($srccd);\n            extractLINKS($reallink);\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == \"11\")\n          {\n            userinput(\"Enter The Directory in which WordPress is installed (for example /blog) If it is running on \" . $ipsl . $ip . \" simply press ENTER\");\n            $wp_inst_loc = trim(fgets(STDIN, 1024));\n            if ($wp_inst_loc == \"\")\n              {\n                $reallink = $ipsl . $ip;\n              }\n            else\n              {\n                $reallink = $ipsl . $ip . $wp_inst_loc;\n              }\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $reallink \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : WordPress Scanner.\" . $cln;\n            echo \"\\n\\n\";\n            echo $bold . $blue . \"[+] Checking if the site is built on WordPress: \";\n            $srccd = readcontents($reallink);\n            if (strpos($srccd, \"wp-content\") !== false)\n              {\n                echo $fgreen . \"Determined !\" . $cln . \"\\n\";\n                echo $bold . $yellow . \"\\n\\t Basic Checks \\n\\t==============\\n\\n\";\n                $wp_rm_src = readcontents($reallink . \"/readme.html\");\n                if (strpos($wp_rm_src, \"Welcome. WordPress is a very special project to me.\") !== false)\n                  {\n                    echo $fgreen . \"[i] Readme File Found, Link: \" . $reallink . \"/readme.html\\n\";\n                  }\n                else\n                  {\n                    echo $red . \"[!] Readme File Not Found!\\n\";\n                  }\n                $wp_lic_src = readcontents($reallink . \"/license.txt\");\n                if (strpos($wp_lic_src, \"WordPress - Web publishing software\") !== false)\n                  {\n                    echo $fgreen . \"[i] License File Found, Link: \" . $reallink . \"/license.txt\\n\";\n                  }\n                else\n                  {\n                    echo $red . \"[!] License File Not Found!\\n\";\n                  }\n                $wp_updir_src = readcontents($reallink . \"/wp-content/uploads/\");\n                if (strpos($wp_updir_src, \"Index of /wp-content/uploads\") !== false)\n                  {\n                    echo $fgreen . $reallink . \"/wp-content/uploads Is Browseable\\n\";\n                  }\n                $wp_xmlrpc_src = readcontents($reallink . \"/xmlrpc.php\");\n                if (strpos($wp_xmlrpc_src, \"XML-RPC server accepts POST requests only.\") !== false)\n                  {\n                    echo $fgreen . \"[i] XML-RPC interface Available Under \" . $reallink . \"/xmlrpc.php\\n\";\n                  }\n                else\n                  {\n                    echo $red . \"[!] Could Not Find XML-RPC interface\\n\";\n                  }\n                echo $bold . $blue . \"[+] Finding WordPress Version: \";\n                $metaver = preg_match('/<meta name=\"generator\" content=\"WordPress (.*?)\\\"/ims', $srccd, $matches) ? $matches[1] : null;\n                if ($metaver != \"\")\n                  {\n                    echo $fgreen . \"Found [Using Method 1 of 3]\" . \"\\n\";\n                    echo $blue . \"[i] WordPress Version: \" . $fgreen . $metaver . $cln;\n                    $wp_version   = str_replace(\".\", \"\", $metaver);\n                    $wp_c_version = $metaver;\n                  }\n                else\n                  {\n                    $feedsrc = readcontents($reallink . \"/feed/\");\n                    $feedver = preg_match('#<generator>http://wordpress.org/\\?v=(.*?)</generator>#ims', $feedsrc, $matches) ? $matches[1] : null;\n                    if ($feedver != \"\")\n                      {\n                        echo $fgreen . \"Found [Using Method 2 of 3]\" . \"\\n\";\n                        echo $blue . \"[i] WordPress Version: \" . $fgreen . $feedver . $cln;\n                        $wp_version   = str_replace(\".\", \"\", $feedver);\n                        $wp_c_version = $feedver;\n                      }\n                    else\n                      {\n                        $lopmlsrc = readcontents($reallink . \"/wp-links-opml.php\");\n                        $lopmlver = preg_match('#generator=\"wordpress/(.*?)\"#ims', $feedsrc, $matches) ? $matches[1] : null;\n                        if ($lopmlver != \"\")\n                          {\n                            echo $fgreen . \"Found [Using Method 3 of 3]\" . \"\\n\";\n                            echo $blue . \"[i] WordPress Version: \" . $fgreen . $lopmlver . $cln;\n                            $wp_version   = str_replace(\".\", \"\", $lopmlver);\n                            $wp_c_version = $lopmlver;\n                          }\n                      }\n                  }\n                if ($wp_version != \"\")\n                  {\n                    echo \"\\n\" . $bold . $blue . \"[+] Collecting Version Details From WPVulnDB: \";\n                    $vuln_json = readcontents(\"https://wpvulndb.com/api/v2/wordpresses/\" . $wp_version);\n                    if (strpos($vuln_json, \"The page you were looking for doesn't exist (404)\") !== false)\n                      {\n                        echo $red . \"[!] Seems like the version detection messed up preety bad! Please report here: https://github.com/Tuhinshubhra/RED_HAWK/issues/new\\n\";\n                      }\n                    else\n                      {\n                        $vuln_array = json_decode($vuln_json, TRUE);\n                        echo $fgreen . \"Done\\n\\n\";\n                        echo $yellow . \"\\t WordPress Version Informations\\n\\t================================\\n\\n\";\n                        echo $lblue . \"[i] WordPress Version   : \" . $fgreen . $wp_c_version . \"\\n\";\n                        echo $lblue . \"[i] Release Date        : \" . $fgreen . $vuln_array[$wp_c_version][\"release_date\"] . \"\\n\";\n                        echo $lblue . \"[i] Changelog URL       : \" . $fgreen . $vuln_array[$wp_c_version][\"changelog_url\"] . \"\\n\";\n                        echo $lblue . \"[i] Vulnerability Count : \" . $fgreen . count($vuln_array[$wp_c_version][\"vulnerabilities\"]) . \"\\n\";\n                        if (count($vuln_array[$wp_c_version][\"vulnerabilities\"]) != \"0\")\n                          {\n                            echo $yellow . \"\\n\\t Version Vulnerabilities \\n\\t=========================\\n\\n\";\n                            $ver_vuln_array = $vuln_array[$wp_c_version]['vulnerabilities'];\n                            foreach ($ver_vuln_array as $vuln_s)\n                              {\n                                echo $lblue . \"[i] Vulnerability Title : \" . $fgreen . $vuln_s[\"title\"] . \"\\n\";\n                                echo $lblue . \"[i] Vulnerability Type  : \" . $fgreen . $vuln_s[\"vuln_type\"] . \"\\n\";\n                                echo $lblue . \"[i] Fixed In Version    : \" . $fgreen . $vuln_s[\"fixed_in\"] . \"\\n\";\n                                echo $lblue . \"[i] Vulnerability Link  : \" . $fgreen . \"http://wpvulndb.com/vulnerabilities/\" . $vuln_s['id'] . \"\\n\";\n                                foreach ($vuln_s['references'][\"cve\"] as $wp_cve)\n                                  {\n                                    echo $lblue . \"[i] Vuln CVE            : \" . $fgreen . \"http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-\" . $wp_cve . \"\\n\";\n                                  }\n                                foreach ($vuln_s['references']['exploitdb'] as $wp_edb)\n                                  {\n                                    echo $lblue . \"[i] ExploitDB Link      : \" . $fgreen . \"http://www.exploit-db.com/exploits/\" . $wp_edb . \"\\n\";\n                                  }\n                                foreach ($vuln_s['references']['metasploit'] as $wp_metas)\n                                  {\n                                    echo $lblue . \"[i] Metasploit Module   : \" . $fgreen . \"http://www.metasploit.com/modules/\" . $wp_metas . \"\\n\";\n                                  }\n                                foreach ($vuln_s['references']['osvdb'] as $wp_osvdb)\n                                  {\n                                    echo $lblue . \"[i] OSVDB Link          : \" . $fgreen . \"http://osvdb.org/\" . $wp_osvdb . \"\\n\";\n                                  }\n                                foreach ($vuln_s['references']['secunia'] as $wp_secu)\n                                  {\n                                    echo $lblue . \"[i] Secunia Link        : \" . $fgreen . \"http://secunia.com/advisories/\" . $wp_secu . \"\\n\";\n                                  }\n                                foreach ($vuln_s['references'][\"url\"] as $vuln_ref)\n                                  {\n                                    echo $lblue . \"[i] Vuln Reference      : \" . $fgreen . $vuln_ref . \"\\n\";\n                                  }\n                                echo \"\\n\\n\";\n                              }\n                          }\n                      }\n                    $reallink = $ipsl . $ip;\n                    echo \"\\n\\n\";\n                    echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n                    trim(fgets(STDIN, 1024));\n                    goto scanlist;\n                  }\n                else\n                  {\n                    $reallink = $ipsl . $ip;\n                    echo $red . \"Failed \\n\\n[!] RED HAWK could not determine the WordPress version of the target!\";\n                    echo \"\\n\\n\";\n                    echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n                    trim(fgets(STDIN, 1024));\n                    goto scanlist;\n                  }\n              }\n            else\n              {\n                $reallink = $ipsl . $ip;\n                echo $red . \"Failed \\n\\n[!] Wordpress installation could not be determined, Exiting Scan!\";\n                echo \"\\n\\n\";\n                echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n                trim(fgets(STDIN, 1024));\n                goto scanlist;\n              }\n          }\n        elseif ($scan == \"12\")\n          {\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : Crawling\" . $cln;\n            echo \"\\n\\n\";\n            echo $bold . $blue . \"\\n[i] Loading Crawler File ....\\n\" . $cln;\n            if (file_exists(\"crawl/admin.ini\"))\n              {\n                echo $bold . $fgreen . \"\\n[^_^] Admin Crawler File Found! Scanning For Admin Pannel [-]\\n\" . $cln;\n                $crawllnk = file_get_contents(\"crawl/admin.ini\");\n                $crawls   = explode(',', $crawllnk);\n                echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                foreach ($crawls as $crawl)\n                  {\n                    $url    = $ipsl . $ip . \"/\" . $crawl;\n                    $handle = curl_init($url);\n                    curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                    $response = curl_exec($handle);\n                    $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                    if ($httpCode == 200)\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $fgreen . \"Found!\" . $cln;\n                      }\n                    elseif ($httpCode == 404)\n                      {\n                      }\n                    else\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $yellow . \"HTTP Response: \" . $httpCode . $cln;\n                      }\n                    curl_close($handle);\n                  }\n              }\n            else\n              {\n                echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n              }\n            if (file_exists(\"crawl/backup.ini\"))\n              {\n                echo \"\\n[-] Backup Crawler File Found! Scanning For Site Backups [-]\\n\";\n                $crawllnk = file_get_contents(\"crawl/backup.ini\");\n                $crawls   = explode(',', $crawllnk);\n                echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                foreach ($crawls as $crawl)\n                  {\n                    $url    = $ipsl . $ip . \"/\" . $crawl;\n                    $handle = curl_init($url);\n                    curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                    $response = curl_exec($handle);\n                    $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                    if ($httpCode == 200)\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $fgreen . \"Found!\" . $cln;\n                      }\n                    elseif ($httpCode == 404)\n                      {\n                      }\n                    else\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $yellow . \"HTTP Response: \" . $httpCode . $cln;\n                      }\n                    curl_close($handle);\n                  }\n              }\n            else\n              {\n                echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n              }\n            if (file_exists(\"crawl/others.ini\"))\n              {\n                echo \"\\n[-] General Crawler File Found! Crawling The Site [-]\\n\";\n                $crawllnk = file_get_contents(\"crawl/others.ini\");\n                $crawls   = explode(',', $crawllnk);\n                echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                foreach ($crawls as $crawl)\n                  {\n                    $url    = $ipsl . $ip . \"/\" . $crawl;\n                    $handle = curl_init($url);\n                    curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                    $response = curl_exec($handle);\n                    $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                    if ($httpCode == 200)\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $fgreen . \"Found!\" . $cln;\n                      }\n                    elseif ($httpCode == 404)\n                      {\n                      }\n                    else\n                      {\n                        echo $bold . $lblue . \"\\n\\n[U] $url : \" . $cln;\n                        echo $bold . $yellow . \"HTTP Response: \" . $httpCode . $cln;\n                      }\n                    curl_close($handle);\n                  }\n              }\n            else\n              {\n                echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n              }\n          }\n        elseif ($scan == \"13\")\n          {\n            $reallink = $ipsl . $ip;\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n            echo \"\\n$cln\" . $lblue . $bold . \"[+] Scanning Begins ... \\n\";\n            echo $blue . $bold . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo $bold . $yellow . \"[S] Scan Type : MX Lookup\" . $cln;\n            echo \"\\n\\n\";\n            echo MXlookup($lwwww);\n            echo \"\\n\\n\";\n            echo $bold . $yellow . \"[*] Scanning Complete. Press Enter To Continue OR CTRL + C To Stop\\n\\n\";\n            trim(fgets(STDIN, 1024));\n            goto scanlist;\n          }\n        elseif ($scan == 'U' || $scan == 'u')\n          {\n            echo \"\\n\\n\" . $bold . $yellow . \"-[ RED HAWK Update Corner]-\\n\\n\" . $cln;\n            echo $bold . \"[i] Fetching Stuffs .... \\n\" . $cln;\n            $latestversion = readcontents(\"https://raw.githubusercontent.com/Tuhinshubhra/RED_HAWK/master/version.txt\");\n            echo $bold . $blue . \"[C] Current Version: \" . $rhversion . $cln;\n            echo \"\\n\" . $bold . $lblue . \"[L] Latest Version:  \" . $latestversion . $cln;\n            if ($latestversion > $rhversion)\n              {\n                askupdate:\n                    userinput(\"There's An Update Available, Would You Like To Update Automatically?\");\n                    $updateask = trim(fgets(STDIN, 1024));\n                    if (!in_array($updateask, array(\"y\",\"Y\",\"n\",\"N\"), true))\n                    {\n                        echo $bold . $red . \"\\n[!] Invalid Input! Please Enter a Valid Option! \\n\\n\" . $cln;\n                        goto askupdate;\n                    }\n                    else\n                    {\n                        if ($updateask == \"y\" | $updateask == \"Y\")\n                        {\n                            update();\n                        }\n                        elseif ($updateask == \"n\" | $updateask == \"N\")\n                        {\n                            echo $bold . $red . \"\\n[!] Aborting... \\n\\n\" . $cln;\n                            goto scanlist;\n                        }\n                    }\n            \n              }\n            elseif ($rhversion == $latestversion)\n              {\n                echo $bold . $fgreen . \"\\n[i] You are already running the latest version of RED HAWK. \\n\\n\" . $cln;\n                goto scanlist;\n              }\n            else\n              {\n                echo $bold . $red . \"\\n[U] Seems You Tampered With The Script !! Please Take The Trouble OR Force An Update Manually Using `update` Command!!! \\n\\n\" . $cln;\n                goto scanlist;\n              }\n          }\n        elseif ($scan == \"F\" || $scan == \"f\"){\n          echo \"\\n\\e[91m\\e[1m[+] RED HAWK FiX MENU [+]\\n\\n$cln\";\n          echo $bold . $blue . \"[+] Checking If cURL module is installed ...\\n\";\n          if (!extension_loaded('curl'))\n            {\n              echo $bold . $red . \"[!] cURL Module Not Installed ! \\n\";\n              echo $yellow . \"[*] Installing cURL. (Operation requeires sudo permission so you might be asked for password) \\n\" . $cln;\n              system(\"sudo apt-get -qq --assume-yes install php-curl\");\n              echo $bold . $fgreen . \"[i] cURL Installed. \\n\";\n            }\n          else\n            {\n              echo $bold . $fgreen . \"[i] cURL is already installed, Skipping To Next \\n\";\n            }\n          echo $bold . $blue . \"[+] Checking If php-XML module is installed ...\\n\";\n          if (!extension_loaded('dom'))\n            {\n              echo $bold . $red . \"[!] php-XML Module Not Installed ! \\n\";\n              echo $yellow . \"[*] Installing php-XML. (Operation requeires sudo permission so you might be asked for password) \\n\" . $cln;\n              system(\"sudo apt-get -qq --assume-yes install php-xml\");\n              echo $bold . $fgreen . \"[i] DOM Installed. \\n\";\n            }\n          else\n            {\n              echo $bold . $fgreen . \"[i] php-XML is already installed, You Are All SET ;) \\n\";\n            }\n          echo $bold . $fgreen . \"[i] Job finished successfully! Please Restart RED HAWK \\n\";\n          exit;\n        }\n        elseif ($scan == \"A\" || $scan == \"a\")\n          {\n\n            echo \"\\n$cln\" . \"$lblue\" . \"[+] Scanning Begins ... \\n\";\n            echo \"$blue\" . \"[i] Scanning Site:\\e[92m $ipsl\" . \"$ip \\n\";\n            echo \"\\n\\n\";\n\n            echo \"\\n$bold\" . \"$lblue\" . \"B A S I C   I N F O \\n\";\n            echo \"====================\\n\";\n            echo \"\\n\\e[0m\";\n\n            $reallink = $ipsl . $ip;\n            $srccd    = file_get_contents($reallink);\n            $lwwww    = str_replace(\"www.\", \"\", $ip);\n\n            echo \"\\n$blue\" . \"[+] Site Title: \";\n            echo \"\\e[92m\";\n            echo getTitle($reallink);\n            echo \"\\e[0m\";\n\n\n            $wip = gethostbyname($ip);\n            echo \"\\n$blue\" . \"[+] IP address: \";\n            echo \"\\e[92m\";\n            echo $wip . \"\\n\\e[0m\";\n\n            echo \"$blue\" . \"[+] Web Server: \";\n            WEBserver($reallink);\n            echo \"\\n\";\n\n            echo \"$blue\" . \"[+] CMS: \\e[92m\" . CMSdetect($reallink) . \" \\e[0m\";\n\n            echo \"\\n$blue\" . \"[+] Cloudflare: \";\n            cloudflaredetect($reallink);\n\n            echo \"$blue\" . \"[+] Robots File:$cln \";\n            robotsdottxt($reallink);\n            echo \"\\n\\n$cln\";\n            echo \"\\n\\n$bold\" . $lblue . \"W H O I S   L O O K U P\\n\";\n            echo \"========================\";\n            echo \"\\n\\n$cln\";\n            $urlwhois    = \"http://api.hackertarget.com/whois/?q=\" . $lwwww;\n            $resultwhois = file_get_contents($urlwhois);\n            echo \"\\t\";\n            echo $resultwhois;\n            echo \"\\n\\n$cln\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"G E O  I P  L O O K  U P\\n\";\n            echo \"=========================\";\n            echo \"\\n\\n$cln\";\n            $urlgip    = \"http://api.hackertarget.com/geoip/?q=\" . $lwwww;\n            $resultgip = readcontents($urlgip);\n            $geoips    = explode(\"\\n\", $resultgip);\n            foreach ($geoips as $geoip)\n              {\n                echo $bold . $green . \"[i]$cln $geoip \\n\";\n              }\n            echo \"\\n\\n$cln\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"H T T P   H E A D E R S\\n\";\n            echo \"=======================\";\n            echo \"\\n\\n$cln\";\n            gethttpheader($reallink);\n            echo \"\\n\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"D N S   L O O K U P\\n\";\n            echo \"===================\";\n            echo \"\\n\\n$cln\";\n            $urldlup    = \"http://api.hackertarget.com/dnslookup/?q=\" . $lwwww;\n            $resultdlup = file_get_contents($urldlup);\n            echo $resultdlup;\n            echo \"\\n\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"S U B N E T   C A L C U L A T I O N\\n\";\n            echo \"====================================\";\n            echo \"\\n\\n$cln\";\n            $urlscal    = \"http://api.hackertarget.com/subnetcalc/?q=\" . $lwwww;\n            $resultscal = file_get_contents($urlscal);\n            echo $resultscal;\n            echo \"\\n\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"N M A P   P O R T   S C A N\\n\";\n            echo \"============================\";\n            echo \"\\n\\n$cln\";\n            $urlnmap    = \"http://api.hackertarget.com/nmap/?q=\" . $lwwww;\n            $resultnmap = file_get_contents($urlnmap);\n            echo $resultnmap;\n            echo \"\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"S U B - D O M A I N   F I N D E R\\n\";\n            echo \"==================================\";\n            echo \"\\n\\n\";\n            $urlsd      = \"http://api.hackertarget.com/hostsearch/?q=\" . $lwwww;\n            $resultsd   = file_get_contents($urlsd);\n            $subdomains = trim($resultsd, \"\\n\");\n            $subdomains = explode(\"\\n\", $subdomains);\n            unset($subdomains['0']);\n            $sdcount = count($subdomains);\n            echo \"\\n$blue\" . \"[i] Total Subdomains Found :$cln \" . $green . $sdcount . \"\\n\\n$cln\";\n            foreach ($subdomains as $subdomain)\n              {\n                echo \"[+] Subdomain:$cln $fgreen\" . (str_replace(\",\", \"\\n\\e[0m[-] IP:$cln $fgreen\", $subdomain));\n                echo \"\\n\\n$cln\";\n              }\n            echo \"\\n\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"R E V E R S E   I P   L O O K U P\\n\";\n            echo \"==================================\";\n            echo \"\\n\\n\";\n            $sth = 'http://domains.yougetsignal.com/domains.php';\n            $ch  = curl_init($sth);\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($ch, CURLOPT_POSTFIELDS, \"remoteAddress=$ip&ket=\");\n            curl_setopt($ch, CURLOPT_HEADER, 0);\n            curl_setopt($ch, CURLOPT_POST, 1);\n            $resp  = curl_exec($ch);\n            $resp  = str_replace(\"[\", \"\", str_replace(\"]\", \"\", str_replace(\"\\\"\\\"\", \"\", str_replace(\", ,\", \",\", str_replace(\"{\", \"\", str_replace(\"{\", \"\", str_replace(\"}\", \"\", str_replace(\", \", \",\", str_replace(\", \", \",\", str_replace(\"'\", \"\", str_replace(\"'\", \"\", str_replace(\":\", \",\", str_replace('\"', '', $resp)))))))))))));\n            $array = explode(\",,\", $resp);\n            unset($array[0]);\n            echo \"\\n$blue\" . \"[i] Total Sites Found On This Server :$cln \" . $green . count($array) . \"\\n\\n$cln\";\n            foreach ($array as $izox)\n              {\n                echo \"\\n$blue\" . \"[#]$cln \" . $fgreen . $izox . $cln;\n                echo \"\\n$blue\" . \"[-] CMS:$cln $green\";\n                $cmsurl = \"http://\" . $izox;\n                $cmssc  = file_get_contents($cmsurl);\n                if (strpos($cmssc, '/wp-content/') !== false)\n                  {\n                    $tcms = \"WordPress\";\n                  }\n                else\n                  {\n                    if (strpos($cmssc, 'Joomla') !== false)\n                      {\n                        $tcms = \"Joomla\";\n                      }\n                    else\n                      {\n                        $drpurl = \"http://\" . $izox . \"/misc/drupal.js\";\n                        $drpsc  = file_get_contents($drpurl);\n                        if (strpos($drpsc, 'Drupal') !== false)\n                          {\n                            $tcms = \"Drupal\";\n                          }\n                        else\n                          {\n                            if (strpos($cmssc, '/skin/frontend/') !== false)\n                              {\n                                $tcms = \"Magento\";\n                              }\n                            else\n                              {\n                                $tcms = $red . \"Could Not Detect$cln \";\n                              }\n                          }\n                      }\n                  }\n                echo $tcms . \"\\n\";\n              }\n\n            echo \"\\n\\n\";\n            echo \"\\n\\n$bold\" . $lblue . \"S Q L   V U L N E R A B I L I T Y   S C A N N E R\\n\";\n            echo \"===================================================$cln\";\n            echo \"\\n\";\n            $lulzurl = $ipsl . $ip;\n            $html    = file_get_contents($lulzurl);\n            $dom     = new DOMDocument;\n            @$dom->loadHTML($html);\n            $links = $dom->getElementsByTagName('a');\n            $vlnk  = 0;\n            foreach ($links as $link)\n              {\n                $lol = $link->getAttribute('href');\n                if (strpos($lol, '?') !== false)\n                  {\n                    echo \"\\n$blue [#] \" . $fgreen . $lol . \"\\n$cln\";\n                    echo $blue . \" [-] Searching For SQL Errors: \";\n                    $sqllist = file_get_contents('sqlerrors.ini');\n                    $sqlist  = explode(',', $sqllist);\n                    if (strpos($lol, '://') !== false)\n                      {\n                        $sqlurl = $lol . \"'\";\n                      }\n                    else\n                      {\n                        $sqlurl = $ipsl . $ip . \"/\" . $lol . \"'\";\n                      }\n                    $sqlsc = file_get_contents($sqlurl);\n                    $sqlvn = \"$red Not Found\";\n                    foreach ($sqlist as $sqli)\n                      {\n                        if (strpos($sqlsc, $sqli) !== false)\n                            $sqlvn = \"$green Found!\";\n                      }\n                    echo $sqlvn;\n                    echo \"\\n$cln\";\n                    echo \"\\n\";\n                    $vlnk++;\n                  }\n              }\n            echo \"\\n\\n$blue [+] URL(s) With Parameter(s):\" . $green . $vlnk;\n            echo \"\\n\\n\";\n\n            echo \"\\n\\n$bold\" . $lblue . \"C R A W L E R \\n\";\n            echo \"=============\";\n            echo \"\\n\\n\";\n            echo \"\\nCrawling Types & Descriptions:$cln\";\n            echo \"\\n\\n$bold\" . \"69:$cln This is the lite version of tge crawler, This will show you the files which returns the http code '200'. This is time efficient and less messy.\\n\";\n            echo \"\\n$bold\" . \"420:$cln This is a little advance one it will show you all the list of files with their http code other then the badboy 404. This is a little messier but informative \\n\\n\";\ncsel:\n            echo \"Select Crawler Type (69/420): \";\n            $ctype = trim(fgets(STDIN, 1024));\n            if ($ctype == \"420\")\n              {\n                echo \"\\n\\t -[ A D V A N C E   C R A W L I N G ]-\\n\";\n                echo \"\\n\\n\";\n                echo \"\\n Loading Crawler File ....\\n\";\n                if (file_exists(\"crawl/admin.ini\"))\n                  {\n                    echo \"\\n[-] Admin Crawler File Found! Scanning For Admin Pannel [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/admin.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        else\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"HTTP Response: \" . $httpCode;\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n                if (file_exists(\"crawl/backup.ini\"))\n                  {\n                    echo \"\\n[-] Backup Crawler File Found! Scanning For Site Backups [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/backup.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        else\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"HTTP Response: \" . $httpCode;\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n                if (file_exists(\"crawl/others.ini\"))\n                  {\n                    echo \"\\n[-] General Crawler File Found! Crawling The Site [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/others.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        else\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"HTTP Response: \" . $httpCode;\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n              }\n            elseif ($ctype == \"69\")\n              {\n                echo \"\\n\\t -[ B A S I C   C R A W L I N G ]-\\n\";\n                echo \"\\n\\n\";\n                echo \"\\n Loading Crawler File ....\\n\";\n                if (file_exists(\"crawl/admin.ini\"))\n                  {\n                    echo \"\\n[-] Admin Crawler File Found! Scanning For Admin Pannel [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/admin.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        else\n                          {\n                            echo \".\";\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n                if (file_exists(\"crawl/backup.ini\"))\n                  {\n                    echo \"\\n[-] Backup Crawler File Found! Scanning For Site Backups [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/backup.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n                if (file_exists(\"crawl/others.ini\"))\n                  {\n                    echo \"\\n[-] General Crawler File Found! Crawling The Site [-]\\n\";\n                    $crawllnk = file_get_contents(\"crawl/others.ini\");\n                    $crawls   = explode(',', $crawllnk);\n                    echo \"\\nURLs Loaded: \" . count($crawls) . \"\\n\\n\";\n                    foreach ($crawls as $crawl)\n                      {\n                        $url    = $ipsl . $ip . \"/\" . $crawl;\n                        $handle = curl_init($url);\n                        curl_setopt($handle, CURLOPT_RETURNTRANSFER, TRUE);\n                        $response = curl_exec($handle);\n                        $httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\n                        if ($httpCode == 200)\n                          {\n                            echo \"\\n\\n[U] $url : \";\n                            echo \"Found!\";\n                          }\n                        elseif ($httpCode == 404)\n                          {\n                          }\n                        curl_close($handle);\n                      }\n                  }\n                else\n                  {\n                    echo \"\\n File Not Found, Aborting Crawl ....\\n\";\n                  }\n              }\n            else\n              {\n                goto csel;\n              }\n          }\n      }\n  }\n?>\n"
        },
        {
          "name": "sqlerrors.ini",
          "type": "blob",
          "size": 0.2626953125,
          "content": "You have an error in your SQL syntax,supplied argument is not a valid MySQL result resource,check the manual that corresponds to your MySQL,mysql_fetch_array(),supplied argument is not a valid MySQL,function fetch_row(),Microsoft OLE DB Provider for ODBC Drivers error\n"
        },
        {
          "name": "var.php",
          "type": "blob",
          "size": 2.021484375,
          "content": "<?php\n$rhversion = \"2.0.0\";\n$white = \"\\e[97m\";\n$black = \"\\e[30m\\e[1m\";\n$yellow = \"\\e[93m\";\n$orange = \"\\e[38;5;208m\";\n$blue   = \"\\e[34m\";\n$lblue  = \"\\e[36m\";\n$cln    = \"\\e[0m\";\n$green  = \"\\e[92m\";\n$fgreen = \"\\e[32m\";\n$red    = \"\\e[91m\";\n$magenta = \"\\e[35m\";\n$bluebg = \"\\e[44m\";\n$lbluebg = \"\\e[106m\";\n$greenbg = \"\\e[42m\";\n$lgreenbg = \"\\e[102m\";\n$yellowbg = \"\\e[43m\";\n$lyellowbg = \"\\e[103m\";\n$redbg = \"\\e[101m\";\n$grey = \"\\e[37m\";\n$cyan = \"\\e[36m\";\n$bold   = \"\\e[1m\";\nfunction redhawk_banner(){\n  echo \"\\e[91;1m\n           All In One Tool For\\e[36m Information Gathering\\e[91m And\\e[32m Vulnerability Scanning\\e[91m\n                                                              .  .  .  .\n                                                              .  |  |  .\n                                                           .  |        |  .\n                                                           .              .\n                                              @@@@@      . |  (\\.|\\/|./)  | .   ___   ____\n  ██████╗ ███████╗██████╗    ###     ###    @@@@ @@@@    .   (\\ |||||| /)   .  |   | /   /\n  ██╔══██╗██╔════╝██╔══██╗   ###     ###   @@@@   @@@@   |  (\\  |/  \\|  /)  |  |   |/   /\n  ██████╔╝█████╗  ██║  ██║   ###########   @@@@@@@@@@@     (\\             )    |       /\n  ██╔══██╗██╔══╝  ██║  ██║   ###########   @@@@@@@@@@@    (\\ \\e[93m Ver  2.0.0\\e[91m  /)   |       \\\n  ██║  ██║███████╗██████╔╝   ###     ###   @@@     @@@     \\      \\/      /    |   |\\   \\\n  ╚═╝  ╚═╝╚══════╝╚═════╝    ###     ###   @@@     @@@      \\____/\\/\\____/     |___| \\___\\\n                                                                |0\\/0|\n         {C} Coded By - R3D#@X0R_2H1N A.K.A Tuhinshubhra         \\/\\/\n                                                                  \\/ \\e[97m [$] Shout Out - You ;)\n\\e[32m\n  \\n\";\n}\n?>\n"
        },
        {
          "name": "version.txt",
          "type": "blob",
          "size": 0.005859375,
          "content": "2.0.0\n"
        }
      ]
    }
  ]
}