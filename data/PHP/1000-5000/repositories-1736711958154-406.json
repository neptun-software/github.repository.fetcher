{
  "metadata": {
    "timestamp": 1736711958154,
    "page": 406,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "blade-ui-kit/blade-icons",
      "stars": 2237,
      "defaultBranch": "1.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.212890625,
          "content": "* text=auto\n\n/.github export-ignore\n/tests export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\nCHANGELOG.md export-ignore\nphpunit.xml.dist export-ignore\nREADME.md export-ignore\nUPGRADE.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0712890625,
          "content": "composer.lock\nvendor\nphpunit.xml\n.phpunit.result.cache\ntests/fixtures/tmp"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.5439453125,
          "content": "# Changelog\n\nThis changelog follows [the Keep a Changelog standard](https://keepachangelog.com).\n\n## [Unreleased](https://github.com/blade-ui-kit/blade-icons/compare/1.7.2...1.x)\n\n## [1.7.2](https://github.com/blade-ui-kit/blade-icons/compare/1.7.1...1.7.2) - 2024-10-17\n\n* Register optimize commands by [@erikgaal](https://github.com/erikgaal) in https://github.com/blade-ui-kit/blade-icons/pull/253\n\n## [1.7.1](https://github.com/blade-ui-kit/blade-icons/compare/1.7.0...1.7.1) - 2024-08-14\n\n* Remove labelled-by attribute from SVG when title attribute is passed  by [@aarishgilani](https://github.com/aarishgilani) in https://github.com/blade-ui-kit/blade-icons/pull/249\n\n## [1.7.0](https://github.com/blade-ui-kit/blade-icons/compare/1.6.1...1.7.0) - 2024-07-29\n\n* Accessible SVG icons: Add title tag inside SVG if the title attribute is set by [@aarishgilani](https://github.com/aarishgilani) in https://github.com/blade-ui-kit/blade-icons/pull/245\n\n## [1.6.1](https://github.com/blade-ui-kit/blade-icons/compare/1.6.0...1.6.1) - 2024-07-26\n\n* Icon deferring; match all SVG tags by [@royduin](https://github.com/royduin) in https://github.com/blade-ui-kit/blade-icons/pull/244\n\n## [1.6.0](https://github.com/blade-ui-kit/blade-icons/compare/1.5.3...1.6.0) - 2024-02-07\n\n* Laravel 11 by [@robsontenorio](https://github.com/robsontenorio) in https://github.com/blade-ui-kit/blade-icons/pull/223\n\n## [1.5.3](https://github.com/blade-ui-kit/blade-icons/compare/1.5.2...1.5.3) - 2023-10-18\n\n- Fix for invalid defer attribute on SVG tag by [@Jaybuz](https://github.com/Jaybuz) in https://github.com/blade-ui-kit/blade-icons/pull/218\n\n## [1.5.2](https://github.com/blade-ui-kit/blade-icons/compare/1.5.1...1.5.2) - 2023-06-09\n\n- Windows support by @driesvints in https://github.com/blade-ui-kit/blade-icons/pull/213\n\n## [1.5.1](https://github.com/blade-ui-kit/blade-icons/compare/1.5.0...1.5.1) - 2023-02-15\n\n- Apply SVG file filter for Generator by Default by @mallardduck in https://github.com/blade-ui-kit/blade-icons/pull/209\n\n## [1.5.0](https://github.com/blade-ui-kit/blade-icons/compare/1.4.1...1.5.0) - 2023-01-11\n\n### Added\n\n- Laravel v10 Support by @driesvints in https://github.com/blade-ui-kit/blade-icons/pull/207\n\n## [1.4.1](https://github.com/blade-ui-kit/blade-icons/compare/1.4.0...1.4.1) - 2022-09-30\n\n### Fixed\n\n- Fixed deferred SVGs that use mask, defs or use tags by @AEM5299 in https://github.com/blade-ui-kit/blade-icons/pull/202\n\n## [1.4.0](https://github.com/blade-ui-kit/blade-icons/compare/1.3.2...1.4.0) - 2022-09-28\n\n### Added\n\n- Add ability to provide own defer hash by @pionl in https://github.com/blade-ui-kit/blade-icons/pull/201\n\n## [1.3.2](https://github.com/blade-ui-kit/blade-icons/compare/v1.3.1...1.3.2) - 2022-09-21\n\n### Fixed\n\n- Fix SVGs that are using `<g` by @pionl in https://github.com/blade-ui-kit/blade-icons/pull/200\n\n## [v1.3.1](https://github.com/blade-ui-kit/blade-icons/compare/1.3.0...v1.3.1) - 2022-08-24\n\n### Changed\n\n- Prioritize component attributes over set and default attributes by @sebastianpopp in https://github.com/blade-ui-kit/blade-icons/pull/197\n\n## [1.3.0](https://github.com/blade-ui-kit/blade-icons/compare/1.2.2...1.3.0) - 2022-05-11\n\n### Added\n\n- Defer icons to icons stack to reduce DOM count by @indykoning in https://github.com/blade-ui-kit/blade-icons/pull/191\n\n## [1.2.2](https://github.com/blade-ui-kit/blade-icons/compare/v0.3.5...1.2.2) - 2022-02-28\n\n### Security\n\n- Fix XSS injection ([bf972cb](https://github.com/blade-ui-kit/blade-icons/commit/bf972cb55ba65955a9735a0625af4928db7e3373))\n\n## [v0.3.5](https://github.com/blade-ui-kit/blade-icons/compare/1.2.1...v0.3.5) - 2022-02-28\n\n### Security\n\n- Fix XSS injection ([bf972cb](https://github.com/blade-ui-kit/blade-icons/commit/bf972cb55ba65955a9735a0625af4928db7e3373))\n\n## [1.2.1](https://github.com/blade-ui-kit/blade-icons/compare/1.2.0...1.2.1) - 2022-02-20\n\n### Security\n\n- Fix XSS injection vulnerability ([f954c3f](https://github.com/blade-ui-kit/blade-icons/commit/f954c3f6518f9883f2d0c534f43c3767d063ad13))\n\n## [1.2.0 (2022-01-20)](https://github.com/blade-ui-kit/blade-icons/compare/1.1.2...1.2.0)\n\n### Changed\n\n- Laravel 9 support ([#183](https://github.com/blade-ui-kit/blade-icons/pull/183))\n\n## [1.1.2 (2021-08-11)](https://github.com/blade-ui-kit/blade-icons/compare/1.1.1...1.1.2)\n\n### Changed\n\n- Make original file available in icon generation callback ([#173](https://github.com/blade-ui-kit/blade-icons/pull/173))\n\n## [1.1.1 (2021-06-29)](https://github.com/blade-ui-kit/blade-icons/compare/1.1.0...1.1.1)\n\n### Changed\n\n- New suffix options ([#166](https://github.com/blade-ui-kit/blade-icons/pull/166))\n\n## [1.1.0 (2021-06-25)](https://github.com/blade-ui-kit/blade-icons/compare/1.0.2...1.1.0)\n\n### Added\n\n- Add icon generation for package maintainers ([#144](https://github.com/blade-ui-kit/blade-icons/pull/144))\n\n## [1.0.2 (2021-04-03)](https://github.com/blade-ui-kit/blade-icons/compare/1.0.1...1.0.2)\n\n### Fixed\n\n- Fix if statement ([7829b0b](https://github.com/blade-ui-kit/blade-icons/commit/7829b0b4faacd9cab1ddac8dcf48e5eb12a2b2b1))\n\n## [1.0.1 (2021-03-31)](https://github.com/blade-ui-kit/blade-icons/compare/1.0.0...1.0.1)\n\n### Fixed\n\n- Fix an issue with empty disk ([2505ea4](https://github.com/blade-ui-kit/blade-icons/commit/2505ea41eccb72933497213c12e6d041add7b844))\n\n## [1.0.0 (2021-03-21)](https://github.com/blade-ui-kit/blade-icons/compare/0.5.1...1.0.0)\n\n### Added\n\n- Default Icon class ([#110](https://github.com/blade-ui-kit/blade-icons/pull/110))\n- Filesystem Disks ([#111](https://github.com/blade-ui-kit/blade-icons/pull/111))\n- Fallback icons ([#112](https://github.com/blade-ui-kit/blade-icons/pull/112))\n- Multiple paths per icon set ([#113](https://github.com/blade-ui-kit/blade-icons/pull/113))\n- Default attributes ([#115](https://github.com/blade-ui-kit/blade-icons/pull/115))\n- Allow to disable components ([#118](https://github.com/blade-ui-kit/blade-icons/pull/118))\n- Caching ([#121](https://github.com/blade-ui-kit/blade-icons/pull/121))\n\n### Changed\n\n- Strip XML tag from icon ([#116](https://github.com/blade-ui-kit/blade-icons/pull/116))\n- Drop Laravel 7 support ([#117](https://github.com/blade-ui-kit/blade-icons/pull/117))\n- Drop PHP 7.3 ([#123](https://github.com/blade-ui-kit/blade-icons/pull/123))\n\n## [0.5.1 (2020-11-05)](https://github.com/blade-ui-kit/blade-icons/compare/0.5.0...0.5.1)\n\n### Fixed\n\n- Ignore files without SVG extension ([#103](https://github.com/blade-ui-kit/blade-icons/pull/103))\n\n## [0.5.0 (2020-10-31)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.5...0.5.0)\n\n### Added\n\n- PHP 8 Support ([#101](https://github.com/blade-ui-kit/blade-icons/pull/101))\n\n### Removed\n\n- Drop PHP 7.2 support ([b36f216](https://github.com/blade-ui-kit/blade-icons/commit/b36f216c03f096cd59cc8b1ebfa41a926bfe8e78))\n\n### Fixed\n\n- Strip trailing slash from path ([#88](https://github.com/blade-ui-kit/blade-icons/pull/88))\n\n## [0.4.5 (2020-09-04)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.4...0.4.5)\n\n### Added\n\n- Laravel 8 support ([#87](https://github.com/blade-ui-kit/blade-icons/pull/87))\n\n## [0.4.4 (2020-08-14)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.3...0.4.4)\n\n### Fixed\n\n- Fix in-memory cache of multiple icon sets ([#74](https://github.com/blade-ui-kit/blade-icons/pull/74))\n\n## [0.4.3 (2020-07-09)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.2...0.4.3)\n\n### Fixed\n\n- Properly register `callAfterResolving` callback ([bdd6e59](https://github.com/blade-ui-kit/blade-icons/commit/bdd6e59980caa63865da6ce82ed2590c26790efd))\n\n## [0.4.2 (2020-06-27)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.1...0.4.2)\n\n### Fixed\n\n- Revert uncomment of default set ([62357bc](https://github.com/blade-ui-kit/blade-icons/commit/62357bc45cff8e78ec8cdda96581574fc85503fe))\n\n## [0.4.1 (2020-06-27)](https://github.com/blade-ui-kit/blade-icons/compare/0.4.0...0.4.1)\n\n### Changed\n\n- Use singleton for factory ([5e69d60](https://github.com/blade-ui-kit/blade-icons/commit/5e69d6075e2e2a4204d172d36a6864b32f9014dc))\n- Uncomment default set ([a928be4](https://github.com/blade-ui-kit/blade-icons/commit/a928be4d544e1c53ecc459c2971e3fd68f7def49))\n- Refactor component registration ([e7c20c7](https://github.com/blade-ui-kit/blade-icons/commit/e7c20c730ba6bb929cbe246cfca7aea0834742af))\n\n### Fixed\n\n- Fix bug with component classes ([d53025a](https://github.com/blade-ui-kit/blade-icons/commit/d53025a1ad573f7c16e822aeca44e42127df463d))\n\n## [0.4.0 (2020-06-17)](https://github.com/blade-ui-kit/blade-icons/compare/0.3.4...0.4.0)\n\nRefactor to Blade Icons. See the [upgrade guide](https://github.com/blade-ui-kit/blade-icons/blob/main/UPGRADE.md#upgrading-from-v034-to-040) for relevant upgrade notes.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Dries Vints\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 28.7880859375,
          "content": "<p align=\"center\">\n    <img src=\"https://github.com/blade-ui-kit/art/blob/main/socialcard-blade-icons.png\" width=\"1280\" title=\"Social Card Blade UI Kit\">\n</p>\n\n# Blade Icons\n\n<a href=\"https://github.com/blade-ui-kit/blade-icons/actions?query=workflow%3ATests\">\n    <img src=\"https://github.com/blade-ui-kit/blade-icons/workflows/Tests/badge.svg\" alt=\"Tests\">\n</a>\n<a href=\"https://github.com/blade-ui-kit/blade-icons/actions/workflows/coding-standards.yml\">\n    <img src=\"https://github.com/blade-ui-kit/blade-icons/actions/workflows/coding-standards.yml/badge.svg\" alt=\"Coding Standards\" />\n</a>\n<a href=\"https://packagist.org/packages/blade-ui-kit/blade-icons\">\n    <img src=\"https://img.shields.io/packagist/v/blade-ui-kit/blade-icons\" alt=\"Latest Stable Version\">\n</a>\n<a href=\"https://packagist.org/packages/blade-ui-kit/blade-icons\">\n    <img src=\"https://img.shields.io/packagist/dt/blade-ui-kit/blade-icons\" alt=\"Total Downloads\">\n</a>\n\nA package to easily make use of SVG icons in your Laravel Blade views. Originally \"Blade SVG\" by [Adam Wathan](https://twitter.com/adamwathan).\n\nTurn...\n\n```html\n<!-- camera.svg -->\n<svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"w-6 h-6\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"/>\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"/>\n</svg>\n```\n\nInto...\n\n```blade\n<x-icon-camera class=\"w-6 h-6\" />\n```\n\nOr into...\n\n```blade\n@svg('camera', 'w-6 h-6')\n```\n\nLooking for a specific icon? Try our icon search: https://blade-ui-kit.com/blade-icons#search\n\nAny sponsorship to [help fund development](https://github.com/sponsors/driesvints) is greatly appreciated ❤️\n\n## Icon Packages\n\nBlade Icons is a base package to make it easy for you to use SVG icons in your app. In addition, there's also quite some third party icon set packages. Thanks to the community for contributing these!\n\nWe're not accepting requests to build new icon packages ourselves but you can [start building your own](#building-packages).\n\n- [Blade Academicons](https://github.com/codeat3/blade-academicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Akar Icons](https://github.com/codeat3/blade-akar-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Ant Design Icons](https://github.com/codeat3/blade-ant-design-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Bootstrap Icons](https://github.com/davidhsianturi/blade-bootstrap-icons) by [David H. Sianturi](https://github.com/davidhsianturi)\n- [Blade Boxicons](https://github.com/mallardduck/blade-boxicons) by [Dan Pock](https://github.com/mallardduck)\n- [Blade Bytesize Icons](https://github.com/codeat3/blade-bytesize-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Carbon Icons](https://github.com/codeat3/blade-carbon-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Circle Flags](https://github.com/fahrim/blade-circle-flags) by [Fahri Meral](https://github.com/fahrim)\n- [Blade Clarity Icons](https://github.com/codeat3/blade-clarity-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Coolicons](https://github.com/codeat3/blade-coolicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade CoreUI Icons](https://github.com/ublabs/blade-coreui-icons) by [Adrián UB](https://github.com/adrian-ub)\n- [Blade Country Flags](https://github.com/stijnvanouplines/blade-country-flags) by [Stijn Vanouplines](https://github.com/stijnvanouplines)\n- [Blade Cryptocurrency Icons](https://github.com/codeat3/blade-cryptocurrency-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade CSS Icons](https://github.com/khatabwedaa/blade-css-icons) by [khatabWedaa](https://github.com/khatabwedaa)\n- [Blade Dev Icons](https://github.com/codeat3/blade-devicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Element Plus Icons](https://github.com/codeat3/blade-element-plus-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Elusive Icons](https://github.com/codeat3/blade-elusive-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Emblemicons](https://github.com/codeat3/blade-emblemicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Entypo](https://github.com/owenvoke/blade-entypo) by [Owen Voke](https://github.com/owenvoke)\n- [Blade EOS Icons](https://github.com/codeat3/blade-eos-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Eva Icons](https://github.com/Hasnayeen/blade-eva-icons) by [Nehal Hasnayeen](https://github.com/Hasnayeen)\n- [Blade Evil Icons](https://github.com/codeat3/blade-evil-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Feather Icons](https://github.com/brunocfalcao/blade-feather-icons) by [Bruno Falcão](https://github.com/brunocfalcao)\n- [Blade File Icons](https://github.com/codeat3/blade-file-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade File Type Icons](https://github.com/log1x/blade-filetype-icons) by [Brandon Nifong](https://github.com/log1x)\n- [Blade FluentUi System Icons](https://github.com/codeat3/blade-fluentui-system-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Flowbite Icons](https://github.com/themesberg/flowbite-blade-icons) by [Dominique Thomas](https://github.com/domthomas-dev)\n- [Blade Font Audio](https://github.com/codeat3/blade-fontaudio) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Font Awesome](https://github.com/owenvoke/blade-fontawesome) by [Owen Voke](https://github.com/owenvoke)\n- [Blade Fontisto Icons](https://github.com/codeat3/blade-fontisto-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Fork Awesome](https://github.com/codeat3/blade-forkawesome) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Github Octicons](https://github.com/Activisme-be/Blade-github-octicons) by [Tim Joosten](https://github.com/Tjoosten)\n- [Blade Google Material Design Icons](https://github.com/codeat3/blade-google-material-design-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Gov Icons](https://github.com/codeat3/blade-govicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Gravity UI Icons](https://github.com/codeat3/blade-gravity-ui-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Grommet Icons](https://github.com/codeat3/blade-grommet-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Health Icons](https://github.com/troccoli/blade-health-icons) by [Giulio Troccoli-Allard](https://github.com/troccoli)\n- [Blade Heroicons](https://github.com/blade-ui-kit/blade-heroicons) by [Dries Vints](https://github.com/driesvints)\n- [Blade Hugeicons](https://github.com/afatmustafa/blade-hugeicons) by [Mustafa Afat](https://github.com/afatmustafa)\n- [Blade Humbleicons](https://github.com/codeat3/blade-humbleicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade IcoMoon Icons](https://github.com/nerdroid23/blade-icomoon) by [Joe Sylnice](https://github.com/nerdroid23)\n- [Blade Icon Park Icons](https://github.com/codeat3/blade-iconpark) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Iconic Icons](https://github.com/ItsMalikJones/blade-iconic) by [Malik Alleyne-Jones](https://github.com/ItsMalikJones)\n- [Blade Iconoir](https://github.com/andreiio/blade-iconoir) by [Andrei Ioniță](https://github.com/andreiio)\n- [Blade Iconsax](https://github.com/saade/blade-iconsax) by [Saade](https://github.com/saade)\n- [Blade Ikonate Icons](https://github.com/codeat3/blade-ikonate) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Ionicons](https://github.com/Faisal50x/blade-ionicons) by [Faisal Ahmed](https://github.com/Faisal50x)\n- [Blade Jam Icons](https://github.com/codeat3/blade-jam-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Lets Icons](https://github.com/mansoorkhan96/blade-lets-icons) by [Mansoor Ahmed](https://github.com/mansoorkhan96)\n- [Blade Line Awesome Icons](https://github.com/codeat3/blade-line-awesome-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Lineicons](https://github.com/datlechin/blade-lineicons) by [Ngô Quốc Đạt](https://github.com/datlechin)\n- [Blade Lucide Icons](https://github.com/mallardduck/blade-lucide-icons) by [Dan Pock](https://github.com/mallardduck)\n- [Blade Majestic Icons](https://github.com/codeat3/blade-majestic-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Maki Icons](https://github.com/codeat3/blade-maki-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Material Design Icons](https://github.com/postare/blade-mdi) by [Postare](https://github.com/postare)\n- [Blade Memory Icons](https://github.com/codeat3/blade-memory-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Microns](https://github.com/codeat3/blade-microns) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Mono Icons](https://github.com/codeat3/blade-mono-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Pepicons](https://github.com/codeat3/blade-pepicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Phosphor icons](https://github.com/codeat3/blade-phosphor-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Pixelarticons](https://github.com/codeat3/blade-pixelarticons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Polaris Icons](https://github.com/Eduard9969/blade-polaris-icons) by [Samoilenko Eduard](https://github.com/Eduard9969)\n- [Blade Prime Icons](https://github.com/codeat3/blade-prime-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Radix Icons](https://github.com/codeat3/blade-radix-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Remix Icon](https://github.com/andreiio/blade-remix-icon) by [Andrei Ioniță](https://github.com/andreiio)\n- [Blade RPG Awesome Icons](https://github.com/codeat3/blade-rpg-awesome-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Simple Icons](https://github.com/ublabs/blade-simple-icons) by [Adrián UB](https://github.com/adrian-ub)\n- [Blade Simple Line Icons](https://github.com/codeat3/blade-simple-line-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Solar Icons](https://github.com/codeat3/blade-solar-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade System UIcons](https://github.com/codeat3/blade-system-uicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Tabler Icons](https://github.com/ryangjchandler/blade-tabler-icons) by [Ryan Chandler](https://github.com/ryangjchandler)\n- [Blade Teeny Icons](https://github.com/codeat3/blade-teeny-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Typicons](https://github.com/codeat3/blade-typicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Uiw Icons](https://github.com/codeat3/blade-uiw-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Unicons](https://github.com/codeat3/blade-unicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade UntitledUI Icons](https://github.com/mckenziearts/blade-untitledui-icons) by [Arthur Monney](https://github.com/mckenziearts)\n- [Blade Vaadin Icons](https://github.com/codeat3/blade-vaadin-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade VSCode Codicons](https://github.com/codeat3/blade-codicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Weather Icons](https://github.com/codeat3/blade-weather-icons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n- [Blade Zondicons](https://github.com/blade-ui-kit/blade-zondicons) by [Swapnil Sarwe](https://github.com/swapnilsarwe)\n\n## Requirements\n\n- PHP 7.4 or higher\n- Laravel 8.0 or higher\n\n## Installation\n\nInstall the package with composer:\n\n```bash\ncomposer require blade-ui-kit/blade-icons\n```\n\nThen, publish the configuration and **uncomment** the `default` icon set:\n\n```bash\nphp artisan vendor:publish --tag=blade-icons\n```\n\nMake sure that the path defined for this icon set exists. By default it's `resources/svg`. Your SVG icons will need to be placed in this directory.\n\n## Upgrading\n\nPlease refer to [`the upgrade guide`](UPGRADE.md) when upgrading the library.\n\n## Caching\n\nWhen working with Blade Icons, and third party icon sets in particular, you'll often be working with large icon sets. This can slow down your app tremendously, especially when making use of [Blade components](#components). To solve this issue, Blade Icons ships with caching support. To enable icon caching you can run the following command:\n\n```blade\nphp artisan icons:cache\n```\n\nThis will create a `blade-icons.php` file in `bootstrap/cache` similar to the `packages.php` cached file. It'll contain a manifest of all known sets and icons with their path locations.\n\nCaching icons means you won't be able to add extra icons, change paths for icon sets or install/remove icon packages. To do so make sure you first clear the icons cache and cache after you've made these changes:\n\n```bash\nphp artisan icons:clear\n```\n\nIt's a good idea to add the `icons:cache` command as part of your deployment pipeline and always cache icons in production.\n\nAlternatively, you may choose to [disable Blade components](#disabling-components) entirely.\n\nAlso, when adding new icons, renaming directories in your icon paths, it's always a good idea to clear your views before refreshing the page:\n\n```bash\nphp artisan view:clear\n```\n\n## Configuration\n\n### Defining Sets\n\nBlade Icons support multiple sets. You can define these by passing a key/value combination in the `blade-icons.php` config file's `sets` setting:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'path' => 'resources/svg',\n        ],\n    ],\n];\n```\n\nFeel free to add as many sets as you wish. Blade Icons ships with a `default` set for your app which you may adjust to your liking.\n\n### Icon Paths\n\nIf you wanted to add icons from a different directory in your app, say `resources/images/svg`, you can set it like this:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'path' => 'resources/images/svg',\n        ],\n    ],\n];\n```\n\n> [!WARNING]  \n> Always make sure you're pointing to existing directories.\n\n#### Multiple Paths\n\nIn addition to a single path, you may define multiple paths for a single set with the `paths` option instead:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'paths' => [\n                'resources/images/icon-set',\n                'resources/images/other-icon-set',\n            ],\n        ],\n    ],\n];\n```\n\nThis gives you the benefit from grouping icons from different paths under a single set where you can define the same prefix and default classes.\n\n> [!WARNING]\n> When using multiple paths instead of one, Blade Icons will return the first icon it finds when an icon name is present in more than one path. Please ensure you use unique icon names when registering multiple paths if you want to retrieve the correct icon.\n\n### Filesystem Disk\n\nIf you host your icons on an external filesystem storage you can set the `disk` option for an icon set to a disk defined in your `filesystems.php` config file. For example, you might store your icons on an AWS S3 bucket which is set in your `filesystems.php` config file with a disk key of `s3-icons`:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'path' => '/',\n            'disk' => 's3-icons',\n        ],\n    ],\n];\n```\n\nAnd from now on our default set will pull the icons from the S3 bucket. Also notice we've adjusted the path to `/` because we store our icons in the root directory of this S3 bucket. If you have several icon sets uploaded to the same disk you can set your paths accordingly:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'heroicons' => [\n            'path' => 'heroicons',\n            'disk' => 's3-icons',\n            'prefix' => 'heroicon',\n        ],\n        'zondicons' => [\n            'path' => 'zondicons',\n            'disk' => 's3-icons',\n            'prefix' => 'zondicon',\n        ],\n    ],\n];\n```\n\n### Fallback Icons\n\nIf you want to provide a fallback icon when an icon cannot be found, you may define the `fallback` option on a specific set:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'fallback' => 'cake',\n        ],\n    ],\n];\n```\n\nNow when you try to resolve a non-existing icon for the default icon set, it'll return the rendered \"cake\" icon instead.\n\nYou can also provide a global fallback icon instead. This icon will be used when an icon cannot be found and the set doesn't have its own fallback icon defined. It can reference any icon from any registered icon set.\n\n```php\n<?php\n\nreturn [\n    'fallback' => 'heroicon-cake',\n];\n```\n\n> [!NOTE]\n> There's one caveat when using fallback icons and that is that they don't work when using [Blade Components](#components). In this case, Laravel will throw an exception that the component cannot be found. If you want to make use of fallback icons please consider one of the other usages.\n\n### Prefixing Icons\n\nIn the default icon set the `icon` prefix will be applied to every icon, but you're free to adjust this in the `blade-icons.php` config file:\n\n```php\n<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'prefix' => 'icon',\n        ],\n    ],\n];\n```\n\nDefining a prefix for every set is required and every prefix should be unique.\n\nWhen referencing icons with the [Blade directive](#directive) or [helper](#helper) you can omit the prefix to reference icons from the `default` set. When referencing icons from other sets, using the prefix is required.\n\nWhen an icon in the default set has a name which collides with a prefix from a set then the icon from the default set is retrieved first.\n\nPlease note that it's best practice that your icons themselves do not have the prefix in their name. So if you have a prefix in your set called `icon` and your icons are named `icon-example.svg` you should rename them to `example.svg`. Otherwise you can run into unexpected name resolving issues.\n\nIt's also important to note that icon prefixes cannot contain dashes (`-`) as this is the delimiter which we use to split it from the rest of the icon name.\n\n### Default Classes\n\nYou can optionally define classes which will be applied to every icon by filling in the `class` setting in your `blade-icons.php` config file:\n\n```php\n<?php\n\nreturn [\n    'class' => 'icon icon-default',\n];\n```\n\nIf you don't want any classes to be applied by default then leave this as an empty string. Additionally, the same option is available in sets so you can set default classes on every set.\n\nThe sequence in which classes get applied is `<global classes> <set classes> <explicit classes>`. You can always override this by passing an explicit class with your attributes. Component classes cannot be overridden.\n\n### Default Attributes\n\nYou can also optionally define some attributes which will be added to every icon in the `attributes` setting of your `blade-icons.php` config file:\n\n```php\n<?php\n\nreturn [\n    'attributes' => [\n        'width' => 50,\n        'height' => 50,\n    ],\n];\n```\n\nThis always needs to be an associative array.  Additionally, the same option is available in sets so you can set default attributes on every set.\n\nThe sequence in which classes get applied is `default attributes / set attributes / explicit attributes` where the latter overwrites the former. It is not possible to overwrite existing attributes on SVG icons. If you already have attributes defined on icons which you want to override, remove them first.\n\n## Usage\n\nThere are several ways of inserting icons into your Blade templates. We personally recommend using Blade components, but you can also make use of a Blade directive if you wish.\n\n### Components\n\nThe easiest way to get started with using icons from sets are Blade components:\n\n```blade\n<x-icon-camera/>\n```\n\nIcons in subdirectories can be referenced using dot notation:\n\n```blade\n<x-icon-solid.camera/>\n```\n\nYou can also pass classes to your icon components (default classes will be applied as well):\n\n```blade\n<x-icon-camera class=\"icon-lg\"/>\n```\n\nOr any other attributes for that matter:\n\n```blade\n<x-icon-camera class=\"icon-lg\" id=\"settings-icon\" style=\"color: #555\" data-baz/>\n```\n\n> [!NOTE]\n> With Blade components, using a prefix is always required, even when referencing icons from the default set.\n\n#### Deferring icons\n\nWhen you're using the same icon in lots of places on the page the DOM element count may explode upwards.\nTo remedy this you can add the defer attribute to the components:\n\n```blade\n<x-icon-camera defer />\n```\n\nThis will push the icons to the stack \"bladeicons\", you should load this stack at the bottom of your page\n\n```blade\n   ...\n    <svg hidden class=\"hidden\">\n        @stack('bladeicons')\n    </svg>\n</body>\n</html>\n```\n\n> [!WARNING]\n> Deferring icons is only possible using the `<x-icon>` component. This [feature doesn't work](https://github.com/blade-ui-kit/blade-icons/issues/194#issuecomment-1175156423) with the `@svg` Blade directive or the `svg()` helper function.\n\n##### Using deferred icons in JavaScript\n\nYou can re-use your icons from blade in your JavaScript rendered views by providing a custom defer value that will be used as an identifier:\n\n```blade\n<x-icon-camera defer=\"my-custom-hash\" />\n```\n\nThen, in your JavaScript, create an `svg` element with `use` and `href=\"#icon-{your-hash}\"` attribute.\n\n```javascript\nfunction icon() {\n    return <svg><use href=\"#icon-my-custom-hash\"></use></svg>\n}\n```\n\n#### Default Component\n\nIf you don't want to use the component syntax from above you can also make use of the default `Icon` component that ships with Blade Icons. Simply pass the icon name through the `$name` attribute:\n\n```blade\n<x-icon name=\"camera\"/>\n```\n\nIf you want to use a different name for this component instead you can customize the `components.default` option in your `blade-icons.php` config file:\n\n```php\n<?php\n\nreturn [\n    'components' => [\n        'default' => 'svg',\n    ],\n];\n```\n\nThen reference the default icon as follow:\n\n```blade\n<x-svg name=\"camera\"/>\n```\n\nYou can also completely disable this default component if you want by setting its name to `null`:\n\n```php\n<?php\n\nreturn [\n    'components' => [\n        'default' => null,\n    ],\n];\n```\n\n#### Disabling Components\n\nAlthough they're enabled by default, if you don't wish to use components at all you may choose to disable them completely by setting the `components.disabled` setting in your `blade-icons.php` config file to `true`:\n\n```php\n<?php\n\nreturn [\n    'components' => [\n        'disabled' => true,\n    ],\n];\n```\n\nDoing this makes sense when you're only using [the directive](#directive) or [the helper](#helper) and can improve overall performance.\n\n### Directive\n\nIf components aren't really your thing you can make use of the Blade directive instead. If you defined a default `icon` class in your config and want to render a `camera` icon with an `icon-lg` class you can do that like so:\n\n```blade\n@svg('camera', 'icon-lg')\n```\n\nAny additionally attributes can be passed as a third array argument, and they'll be rendered on the `svg` element:\n\n```blade\n@svg('camera', 'icon-lg', ['id' => 'settings-icon'])\n```\n\nIf you don't have a class to be defined you can also pass these attributes as the second parameter:\n\n```blade\n@svg('camera', ['id' => 'settings-icon'])\n```\n\nIf you want to override the default classes, pass in the class as an attribute:\n\n```blade\n@svg('camera', ['class' => 'icon-lg'])\n```\n\nAttributes without a key, are supported too:\n\n```blade\n@svg('camera', ['data-foo'])\n```\n\n### Helper\n\nIf you'd like, you can use the `svg` helper to expose a fluent syntax for setting SVG attributes:\n\n```blade\n{{ svg('camera')->id('settings-icon')->dataFoo('bar')->dataBaz() }}\n```\n\n### Accessibility\n\nIf the icon should have semantic meaning, a text alternative can be added with the title attribute. Refer to the [Usage](https://github.com/blade-ui-kit/blade-icons#usage) section of this documentation to learn how to add an attribute.\n\nFor almost all use cases, your icon will be assuming the role of an image. This means that deciding on if your icon has any semantic meaning, or what that semantic meaning is, you can use the [WCAG alt text decision tree](https://www.w3.org/WAI/tutorials/images/decision-tree/).\n\nIf your icon has semantic meaning, using the title attribute will apply the following features to the SVG element:\n\n- Child element of `<title>` with a unique ID containing the value that was passed\n- `title` attribute containing the value that was passed\n- `role=\"img\"`\n- `aria-labelledby` to refer to the unique ID of the title element\n\nExample usage:\n\n```blade\n<x-icon-camera title=\"camera\" />\n\n@svg('camera', ['title' => 'camera'])\n```\n\nExample result:\n\n```html\n<svg \n\t title=\"Camera\" \n\t role=\"img\" \n\t xmlns=\"http://www.w3.org/2000/svg\"\n\t viewBox=\"0 0 448 512\"\n>\n\t<title>\n\t\tCamera\n\t</title>\n\t<path fill=\"currentColor\" d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"></path>\n</svg>  \n```\n\nIf your icon does not have semantic meaning, you may want to hide the icon to reduce overall document clutter. You may do this by adding `aria-hidden=\"true\"` to your icon.\n\n## Building Packages\n\nIf you're interested in building your own third party package to integrate an icon set, it's pretty easy to do so. We've created [a template repo for you to get started with](https://github.com/blade-ui-kit/blade-icons-template). You can find the getting started instructions in its readme.\n\nIf you want to learn how to create packages we can recommend these two excellent courses:\n\n- [PHP Package Development](https://phppackagedevelopment.com) by [Marcel Pociot](https://twitter.com/marcelpociot)\n- [Laravel Package Training](https://laravelpackage.training) by [Freek Van der Herten](https://twitter.com/freekmurze)\n\nMake sure to load your SVGs from the `register` method of your package's service provider. Provide the path to your SVGs and provide your own unique set name and component prefix:\n\n```php\nuse BladeUI\\Icons\\Factory;\n\npublic function register(): void\n{\n    $this->callAfterResolving(Factory::class, function (Factory $factory) {\n        $factory->add('heroicons', [\n            'path' => __DIR__.'/../resources/svg',\n            'prefix' => 'heroicon',\n        ]);\n    });\n}\n```\n\nNow your icons can be referenced using a component, directive or helper:\n\n```blade\n<x-heroicon-o-bell/>\n\n@svg('heroicon-o-bell')\n\n{{ svg('heroicon-o-bell') }}\n```\n\nDon't forget to make `blade-ui-kit/blade-icons` a requirement of your package's `composer.json`.\n\n### Generating Icons\n\nBlade Icons also offers an easy way to generate icons for your packages. By defining a config file with predefined source and destination paths, you can make updating your icons a breeze.\n\nFirst, start off by creating a `generation.php` config file in the `config` directory of your icon package. Next, you can define an array per icon set that you want to generate. Below is a full version of this file with explanation for every option. Only the `source` and `destination` options are required.\n\n```php\n<?php\n\nuse Symfony\\Component\\Finder\\SplFileInfo;\n\nreturn [\n    [\n        // Define a source directory for the sets like a node_modules/ or vendor/ directory...\n        'source' => __DIR__.'/../node_modules/heroicons/outline',\n\n        // Define a destination directory for your icons. The below is a good default...\n        'destination' => __DIR__.'/../resources/svg',\n\n        // Strip an optional prefix from each source icon name...\n        'input-prefix' => 'o-',\n\n        // Set an optional prefix to applied to each destination icon name...\n        'output-prefix' => 'o-',\n\n        // Strip an optional suffix from each source icon name...\n        'input-suffix' => '-o',\n\n        // Set an optional suffix to applied to each destination icon name...\n        'output-suffix' => '-o',\n\n        // Enable \"safe\" mode which will prevent deletion of old icons...\n        'safe' => true,\n\n        // Call an optional callback to manipulate the icon with the pathname of the icon,\n        // the settings from above and the original icon file instance...\n        'after' => static function (string $icon, array $config, SplFileInfo $file) {\n            // ...\n        },\n    ],\n\n    // More icon sets...\n];\n```\n\nSee [an example `config/generation.php` file](https://github.com/blade-ui-kit/blade-heroicons/blob/main/config/generation.php) for the Heroicons package.\n\nAfter setting up your config file you can use the icon generation as follow from the root of your icon package directory:\n\n```zsh\nvendor/bin/blade-icons-generate\n```\n\n## Changelog\n\nCheck out the [CHANGELOG](CHANGELOG.md) in this repository for all the recent changes.\n\n## Maintainers\n\nBlade Icons is developed and maintained by [Dries Vints](https://driesvints.com).\n\n## License\n\nBlade Icons is open-sourced software licensed under [the MIT license](LICENSE.md).\n"
        },
        {
          "name": "UPGRADE.md",
          "type": "blob",
          "size": 3.4248046875,
          "content": "# Upgrade Guide\n\nGeneral steps for every update:\n\n- Run `php artisan icons:clear`\n- Run `php artisan view:clear`\n\nIf you published the config file, make sure to sync it with the config file from the version you're upgrading to.\n\n## Upgrading from 0.5.1 to 1.0.0\n\nBlade Icons 1.0.0 is the first major release of the library. This release brings a whole range of new features and a stable API. While there aren't many, there's a few breaking changes to know about.\n\n### Minimum Requirements\n\nThe package now requires as a minimum:\n\n- PHP 7.4\n- Laravel 8.0\n\n### Default Icon Component\n\nPR: https://github.com/blade-ui-kit/blade-icons/pull/110\n\nBlade Icons 1.0.0 ships with a default `Icon` component. If you were already using a default icon component with the `<x-icon` syntax then you can either upgrade to the Blade Icons one or disable the default shipped component by setting it to `null` in the config file:\n\n```php\n<?php\n\nreturn [\n    'components' => [\n        'default' => null,\n    ],\n];\n```\n\n### XML Tags\n\nPR: https://github.com/blade-ui-kit/blade-icons/pull/116\n\nBlade Icons 1.0.0 will now automatically strip XML tags from SVG icons. These should not be needed to render SVG icons. If you were specifically relying on these XML tags to be output together with the SVG contents you may not want to upgrade.\n\n\n## Upgrading from 0.3.4 to 0.4.0\n\n0.4.0 is a complete rewrite. If you haven't yet, [read the announcement pr](https://github.com/blade-ui-kit/blade-icons/pull/50). The package has been rewritten from the ground up and the public API has drastically changed. Most notable is the added support for Blade component syntax. While it'd be impossible to reference to every single breaking change, please refer below for the most notable ones:\n\n### Package Renaming\n\n**The package has been renamed to Blade Icons.** It's also been moved to the Blade UI Kit organisation. You should update your reference in your `composer.json` to `blade-ui-kit/blade-icons`.\n\n### Minimum Requirements\n\nThe package now requires as a minimum:\n\n- PHP 7.2\n- Laravel 7.14\n\n### Config Changes\n\nBlade Icons now supports multiple icon sets. This is useful for third party packages that offer different icon sets and allow for apps to make use of different icons from different sets in the same app. As such, the config file has been changed drastically. It's best that you re-publish it with the command below:\n\n```bash\nphp artisan vendor:publish --tag=blade-icons --force\n```\n\nThis will publish the config as `blade-icons.php`. You should remove the old `blade-svg.php` config file.\n\nThe new config file defines a new `sets` config option which is an associative array with different sets. It ships with a `default` set which you should use for your own app. You can add as many sets as you like. For a full list of options please [refer to the docs](README.md#configuration). \n\n### Sprite Sheets Removed\n\nAll functionality concerning sprite sheets have been removed. We felt that sprite sheets weren't really used that much anymore. We recommend using individual icon SVG files instead.\n\n### Helper Renames\n\nThe `svg_image()` helper has been renamed to `svg()`.\n\n### Prefixes\n\nThe new release introduces the concept of prefixes in your config file. If you want to continue to use your current icon set and were prefixing your icons like `icon-cloud.svg` it's best that you set the prefix in your config file and remove the prefix from your icons themselves. Otherwise you can run into unexpected name resolving issues.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.8525390625,
          "content": "{\n    \"name\": \"blade-ui-kit/blade-icons\",\n    \"description\": \"A package to easily make use of icons in your Laravel Blade views.\",\n    \"keywords\": [\"Blade\", \"Icons\", \"Laravel\", \"SVG\"],\n    \"homepage\": \"https://github.com/blade-ui-kit/blade-icons\",\n    \"license\": \"MIT\",\n    \"support\": {\n        \"issues\": \"https://github.com/blade-ui-kit/blade-icons/issues\",\n        \"source\": \"https://github.com/blade-ui-kit/blade-icons\"\n    },\n    \"authors\": [\n        {\n            \"name\": \"Dries Vints\",\n            \"homepage\": \"https://driesvints.com\"\n        }\n    ],\n    \"funding\": [\n        {\n            \"type\": \"github\",\n            \"url\": \"https://github.com/sponsors/driesvints\"\n        },\n        {\n            \"type\": \"paypal\",\n            \"url\": \"https://www.paypal.com/paypalme/driesvints\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.4|^8.0\",\n        \"illuminate/contracts\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/filesystem\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/support\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/view\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"symfony/console\": \"^5.3|^6.0|^7.0\",\n        \"symfony/finder\": \"^5.3|^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.5.1\",\n        \"orchestra/testbench\": \"^6.0|^7.0|^8.0|^9.0\",\n        \"phpunit/phpunit\": \"^9.0|^10.5|^11.0\"\n    },\n    \"bin\": [\n        \"bin/blade-icons-generate\"\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"BladeUI\\\\Icons\\\\\": \"src\"\n        },\n        \"files\": [\n            \"src/helpers.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"BladeUI\\\\Icons\\\\BladeIconsServiceProvider\"\n            ]\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.4716796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Blade Icons Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <php>\n        <env name=\"APP_ENV\" value=\"blade-icons-testing\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "pint.json",
          "type": "blob",
          "size": 0.1142578125,
          "content": "{\n    \"notPath\": [\n        \"tests/fixtures/blade-icons.php\",\n        \"tests/fixtures/generated-manifest.php\"\n    ]\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}