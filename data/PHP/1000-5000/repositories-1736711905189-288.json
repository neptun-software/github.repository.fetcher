{
  "metadata": {
    "timestamp": 1736711905189,
    "page": 288,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "schmittjoh/php-option",
      "stars": 2636,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3671875,
          "content": "* text=auto\n\n/tests export-ignore\n/.gitattributes export-ignore\n/.github export-ignore\n/.gitignore export-ignore\n/.travis.yml export-ignore\n/Makefile export-ignore\n/phpstan-baseline.neon export-ignore\n/phpstan.neon.dist export-ignore\n/phpunit.xml.dist export-ignore\n/psalm-baseline.xml export-ignore\n/psalm.xml export-ignore\n/README.md export-ignore\n/vendor-bin export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0888671875,
          "content": ".phpunit.result.cache\ncomposer.lock\nphpstan.src.neon\nphpstan.tests.neon\nphpunit.xml\nvendor\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.4931640625,
          "content": "install:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated -v ~/.composer:/root/.composer:delegated --entrypoint composer --rm registry.gitlab.com/grahamcampbell/php:8.3-base update\n\t@docker run -it -w /data -v ${PWD}:/data:delegated -v ~/.composer:/root/.composer:delegated --entrypoint composer --rm registry.gitlab.com/grahamcampbell/php:8.3-base bin all update\n\nphpunit:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/phpunit --rm registry.gitlab.com/grahamcampbell/php:8.3-cli\n\nphpstan-analyze:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/phpstan --rm registry.gitlab.com/grahamcampbell/php:8.3-cli analyze\n\nphpstan-baseline:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/phpstan --rm registry.gitlab.com/grahamcampbell/php:8.3-cli analyze --generate-baseline\n\npsalm-analyze:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/psalm.phar --rm registry.gitlab.com/grahamcampbell/php:8.3-cli\n\npsalm-baseline:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/psalm.phar --rm registry.gitlab.com/grahamcampbell/php:8.3-cli --set-baseline=psalm-baseline.xml\n\npsalm-show-info:\n\t@docker run -it -w /data -v ${PWD}:/data:delegated --entrypoint vendor/bin/psalm.phar --rm registry.gitlab.com/grahamcampbell/php:8.3-cli --show-info=true\n\ntest: phpunit phpstan-analyze psalm-analyze\n\nclean:\n\t@rm -rf .phpunit.result.cache composer.lock vendor vendor-bin/*/composer.lock vendor-bin/*/vendor\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.2197265625,
          "content": "# PHP Option Type\n\nThis package implements the Option type for PHP!\n\n![Banner](https://user-images.githubusercontent.com/2829600/71564011-3077bf00-2a91-11ea-9083-905702cc262b.png)\n\n<p align=\"center\">\n<a href=\"LICENSE\"><img src=\"https://img.shields.io/badge/license-Apache%202.0-brightgreen.svg?style=flat-square\" alt=\"Software License\"></img></a>\n<a href=\"https://packagist.org/packages/phpoption/phpoption\"><img src=\"https://img.shields.io/packagist/dt/phpoption/phpoption.svg?style=flat-square\" alt=\"Total Downloads\"></img></a>\n<a href=\"https://github.com/schmittjoh/php-option/releases\"><img src=\"https://img.shields.io/github/release/schmittjoh/php-option.svg?style=flat-square\" alt=\"Latest Version\"></img></a>\n</p>\n\n\n## Motivation\n\nThe Option type is intended for cases where you sometimes might return a value\n(typically an object), and sometimes you might return a base value (typically\nnull) depending on arguments, or other runtime factors.\n\nOften times, you forget to handle the case where a base value should be\nreturned. Not intentionally of course, but maybe you did not account for all\npossible states of the system; or maybe you indeed covered all cases, then time\ngoes on, code is refactored, some of these your checks might become invalid, or\nincomplete. Suddenly, without noticing, the base value case is not handled\nanymore. As a result, you might sometimes get fatal PHP errors telling you that\nyou called a method on a non-object; users might see blank pages, or worse.\n\nOn one hand, the Option type forces a developer to consciously think about both\ncases (returning a value, or returning a base value). That in itself will\nalready make your code more robust. On the other hand, the Option type also\nallows the API developer to provide more concise API methods, and empowers the\nAPI user in how he consumes these methods.\n\n\n## Installation\n\nInstallation is super-easy via [Composer](https://getcomposer.org/):\n\n```bash\n$ composer require phpoption/phpoption\n```\n\nor add it by hand to your `composer.json` file.\n\n\n## Usage\n\n### Using the Option Type in your API\n\n```php\nclass MyRepository\n{\n    public function findSomeEntity($criteria): \\PhpOption\\Option\n    {\n        if (null !== $entity = $this->em->find(...)) {\n            return new \\PhpOption\\Some($entity);\n        }\n\n        // We use a singleton, for the None case.\n        return \\PhpOption\\None::create();\n    }\n}\n```\n\nIf you are consuming an existing library, you can also use a shorter version\nwhich by default treats `null` as `None`, and everything else as `Some` case:\n\n```php\nclass MyRepository\n{\n    public function findSomeEntity($criteria): \\PhpOption\\Option\n    {\n        return \\PhpOption\\Option::fromValue($this->em->find(...));\n\n        // or, if you want to change the none value to false for example:\n        return \\PhpOption\\Option::fromValue($this->em->find(...), false);\n    }\n}\n```\n\n### Case 1: You always Require an Entity in Calling Code\n\n```php\n$entity = $repo->findSomeEntity(...)->get(); // returns entity, or throws exception\n```\n\n### Case 2: Fallback to Default Value If Not Available\n\n```php\n$entity = $repo->findSomeEntity(...)->getOrElse(new Entity());\n\n// Or, if you want to lazily create the entity.\n$entity = $repo->findSomeEntity(...)->getOrCall(function() {\n    return new Entity();\n});\n```\n\n## More Examples\n\n### No More Boiler Plate Code\n\n```php\n// Before\n$entity = $this->findSomeEntity();\nif (null === $entity) {\n    throw new NotFoundException();\n}\necho $entity->name;\n\n// After\necho $this->findSomeEntity()->get()->name;\n```\n\n### No More Control Flow Exceptions\n\n```php\n// Before\ntry {\n    $entity = $this->findSomeEntity();\n} catch (NotFoundException $ex) {\n    $entity = new Entity();\n}\n\n// After\n$entity = $this->findSomeEntity()->getOrElse(new Entity());\n```\n\n### More Concise Null Handling\n\n```php\n// Before\n$entity = $this->findSomeEntity();\nif (null === $entity) {\n    return new Entity();\n}\n\nreturn $entity;\n\n// After\nreturn $this->findSomeEntity()->getOrElse(new Entity());\n```\n\n### Trying Multiple Alternative Options\n\nIf you'd like to try multiple alternatives, the `orElse` method allows you to\ndo this very elegantly:\n\n```php\nreturn $this->findSomeEntity()\n    ->orElse($this->findSomeOtherEntity())\n    ->orElse($this->createEntity());\n```\nThe first option which is non-empty will be returned. This is especially useful \nwith lazy-evaluated options, see below.\n\n### Lazy-Evaluated Options\n\nThe above example has the flaw that we would need to evaluate all options when\nthe method is called which creates unnecessary overhead if the first option is \nalready non-empty.\n\nFortunately, we can easily solve this by using the `LazyOption` class:\n\n```php\nreturn $this->findSomeEntity()\n    ->orElse(new LazyOption(array($this, 'findSomeOtherEntity')))\n    ->orElse(new LazyOption(array($this, 'createEntity')));\n```\n\nThis way, only the options that are necessary will actually be evaluated.\n\n## Performance Considerations\n\nOf course, performance is important. Attached is a performance benchmark which\nyou can run on a machine of your choosing. The overhead incurred by the Option\ntype comes down to the time that it takes to create one object, our wrapper,\nand one additional method call to retrieve the value from the wrapper. Unless\nyou plan to call a method thousands of times during a request, there is no\nreason to stick to the `object|null` return value; better give your code some\noptions!\n\n## Security\n\nIf you discover a security vulnerability within this package, please send an email to security@tidelift.com. All security vulnerabilities will be promptly addressed. You may view our full security policy [here](https://github.com/schmittjoh/php-option/security/policy).\n\n## License\n\nPHP Option Type is licensed under [Apache License 2.0](LICENSE).\n\n## For Enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `phpoption/phpoption` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/packagist-phpoption-phpoption?utm_source=packagist-phpoption-phpoption&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.240234375,
          "content": "{\n    \"name\": \"phpoption/phpoption\",\n    \"description\": \"Option Type for PHP\",\n    \"keywords\": [\"php\", \"option\", \"language\", \"type\"],\n    \"license\": \"Apache-2.0\",\n    \"authors\": [\n        {\n            \"name\": \"Johannes M. Schmitt\",\n            \"email\": \"schmittjoh@gmail.com\",\n            \"homepage\": \"https://github.com/schmittjoh\"\n        },\n        {\n            \"name\": \"Graham Campbell\",\n            \"email\": \"hello@gjcampbell.co.uk\",\n            \"homepage\": \"https://github.com/GrahamCampbell\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2.5 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n        \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20 || ^10.5.28\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"PhpOption\\\\\": \"src/PhpOption/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"PhpOption\\\\Tests\\\\\": \"tests/PhpOption/Tests/\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"bamarni/composer-bin-plugin\": true\n        },\n        \"preferred-install\": \"dist\"\n    },\n    \"extra\": {\n        \"bamarni-bin\": {\n            \"bin-links\": true,\n            \"forward-command\": false\n        },\n        \"branch-alias\": {\n            \"dev-master\": \"1.9-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 1.2607421875,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Method PhpOption\\\\\\\\Option\\\\:\\\\:ensure\\\\(\\\\) should return PhpOption\\\\\\\\Option\\\\<S\\\\> but returns PhpOption\\\\\\\\LazyOption\\\\<mixed\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n\t\t-\n\t\t\tmessage: \"#^Method PhpOption\\\\\\\\Option\\\\:\\\\:fromReturn\\\\(\\\\) has parameter \\\\$arguments with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n\t\t-\n\t\t\tmessage: \"#^Method PhpOption\\\\\\\\Option\\\\:\\\\:fromReturn\\\\(\\\\) should return PhpOption\\\\\\\\LazyOption\\\\<S\\\\> but returns PhpOption\\\\\\\\LazyOption\\\\<mixed\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$callback of function array_map expects \\\\(callable\\\\(mixed\\\\)\\\\: mixed\\\\)\\\\|null, Closure\\\\(PhpOption\\\\\\\\Option\\\\)\\\\: T given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$callback of function array_reduce expects callable\\\\(bool\\\\|TReturn, mixed\\\\)\\\\: \\\\(bool\\\\|TReturn\\\\), Closure\\\\(mixed, PhpOption\\\\\\\\Option\\\\)\\\\: \\\\(bool\\\\|TReturn\\\\) given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n\t\t-\n\t\t\tmessage: \"#^Template type S of method PhpOption\\\\\\\\Option\\\\:\\\\:lift\\\\(\\\\) is not referenced in a parameter\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/PhpOption/Option.php\n\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0888671875,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    level: max\n    paths:\n        - src\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6630859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" backupGlobals=\"false\" beStrictAboutTestsThatDoNotTestAnything=\"true\" beStrictAboutOutputDuringTests=\"true\" bootstrap=\"tests/bootstrap.php\" colors=\"true\" failOnRisky=\"true\" failOnWarning=\"true\" processIsolation=\"false\" stopOnError=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.4/phpunit.xsd\">\n  <testsuites>\n    <testsuite name=\"PhpOption Type Test Suite\">\n      <directory>./tests/PhpOption/</directory>\n    </testsuite>\n  </testsuites>\n  <groups>\n    <exclude>\n      <group>performance</group>\n    </exclude>\n  </groups>\n</phpunit>\n"
        },
        {
          "name": "psalm-baseline.xml",
          "type": "blob",
          "size": 0.109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<files psalm-version=\"5.25.0@01a8eb06b9e9cc6cfb6a320bf9fb14331919d505\"/>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.44921875,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"1\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    errorBaseline=\"psalm-baseline.xml\"\n    findUnusedBaselineEntry=\"true\"\n    findUnusedCode=\"false\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor-bin",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}