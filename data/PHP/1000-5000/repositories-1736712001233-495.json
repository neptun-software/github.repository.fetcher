{
  "metadata": {
    "timestamp": 1736712001233,
    "page": 495,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jsdecena/laracom",
      "stars": 1942,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": ".idea\ndbdata\nmails"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.349609375,
          "content": "language: php\n\njsdecena:\n  - php72-composer:latest\n\nsudo: false\n\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_script:\n  - cd project\n  - cp .env.testing .env\n  - composer install --no-interaction\n  - composer dump-autoload\n\nscript:\n  - vendor/bin/phpunit --coverage-clover=coverage.xml\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6240234375,
          "content": "FROM jsdecena/php74-fpm\n\nENV NODE_VERSION=12.6.0\nRUN apt update && apt install -y curl\n\nRUN docker-php-ext-install mysqli pdo_mysql gd\n\nCOPY project ./\n\nCOPY project/.env.example ./.env\n\nRUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\nENV NVM_DIR=/root/.nvm\n\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\n\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8603515625,
          "content": "[![Build Status](https://travis-ci.org/jsdecena/laracom.svg?branch=master)](https://travis-ci.org/jsdecena/laracom)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/Laracommerce/laracom/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/Laracommerce/laracom/?branch=master)\n[![Code Intelligence Status](https://scrutinizer-ci.com/g/Laracommerce/laracom/badges/code-intelligence.svg?b=master)](https://scrutinizer-ci.com/code-intelligence)\n[![codecov](https://codecov.io/gh/jsdecena/laracom/branch/master/graph/badge.svg)](https://codecov.io/gh/jsdecena/laracom)\n[![Fork Status](https://img.shields.io/github/forks/jsdecena/laracom.svg)](https://github.com/jsdecena/laracom)\n[![Star Status](https://img.shields.io/github/stars/jsdecena/laracom.svg)](https://github.com/jsdecena/laracom)\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/larac0m/Lobby)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FLaracommerce%2Flaracom.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FLaracommerce%2Flaracom?ref=badge_shield)\n\n# Get discount on Digital Ocean\n\nSign-up with [Digital Ocean and get $10 discount](https://m.do.co/c/bce94237de96)!\n\n# Laravel FREE E-Commerce Software\n\nFeatures Provided\n\n-   Products\n-   Cart\n-   Checkout\n-   Categories\n-   Customers\n-   Orders\n-   Payment\n-   Couriers\n-   Employees\n\n-   To view more details of the features\n    See full [documentation](https://jsdecena.github.io/laracom)\n\n# Simplified DOCKER setup\n\n## In your teminal, issue these commands\n\n-   RUN `docker-compose up -d --build`\n-   If your runtime is apple silicon, use `docker-compose -f docker-compose-m1.yml up -d --build` command\n-   RUN `docker exec -it app bash`\n-   Inside the container, run `composer install && chmod -R 777 storage/ bootstrap/cache/`\n-   Inside the container, run `php artisan migrate --seed`\n-   While inside the container, compile the assets with `npm i && npm run dev`\n-   While inside the container, link the images `php artisan storage:link`\n-   OPEN [http://localhost:8000](http://localhost:8000)\n\n## If you want to use mailhog as SMTP\n\n1.Create a ./mails directory\n2.change .env like this\n\n```\nMAIL_DRIVER=smtp\nMAIL_HOST=mailhog\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=\"test@example.com\"\nMAIL_FROM_NAME=\"${APP_NAME}\"\n```\n\n3.Go to http://localhost:8025 and verify that the mailhog screen appears\n\n# Author\n\n[Jeff Simons Decena](https://jsdecena.me)\n\n# Contributors\n\n<a href=\"https://github.com/jsdecena/laracom/graphs/contributors\"><img src=\"https://opencollective.com/laracom/contributors.svg?width=890\" title=\"contributors\" alt=\"contributors\" /></a>\n\n## License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FLaracommerce%2Flaracom.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FLaracommerce%2Flaracom?ref=badge_large)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.142578125,
          "content": "## Reporting a Vulnerability\n\nIf you discover any security related issues, please email jeff.decena@yahoo.com instead of using the issue tracker.\n"
        },
        {
          "name": "docker-compose-m1.yml",
          "type": "blob",
          "size": 1.3271484375,
          "content": "version: '3'\nservices:\n  app:\n    build: .\n    container_name: app\n    restart: unless-stopped\n    tty: true\n    environment:\n      SERVICE_NAME: app-api\n      SERVICE_TAGS: dev\n    working_dir: /var/www\n    volumes:\n      - ./project:/var/www\n      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini\n    networks:\n      - app-network\n  webserver:\n    image: nginx:alpine\n    container_name: webserver\n    restart: unless-stopped\n    tty: true\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./project:/var/www\n      - ./nginx/conf.d/:/etc/nginx/conf.d/\n    networks:\n      - app-network\n  db:\n    image: mysql:5.7\n    container_name: db\n    restart: unless-stopped\n    tty: true\n    platform: linux/amd64\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_DATABASE: homestead\n      MYSQL_USER: homestead\n      MYSQL_ROOT_PASSWORD: secret\n      SERVICE_TAGS: dev\n      SERVICE_NAME: mysql\n    volumes:\n      - ./dbdata:/var/lib/mysql\n    networks:\n      - app-network\n  mailhog:\n    build: ./mailhog\n    container_name: mailhog\n    tty: true\n    ports:\n      - \"8025:8025\"\n      - \"1025:1025\"\n    environment:\n      MH_STORAGE: maildir\n      MH_MAILDIR_PATH: /home/mailhog/mails\n    volumes:\n      - ./mails:/home/mailhog/mails\n    networks:\n      - app-network\nnetworks:\n  app-network:\n    driver: bridge\nvolumes:\n  dbdata:\n    driver: local\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.3017578125,
          "content": "version: '3'\nservices:\n  app:\n    build: .\n    container_name: app\n    restart: unless-stopped\n    tty: true\n    environment:\n      SERVICE_NAME: app-api\n      SERVICE_TAGS: dev\n    working_dir: /var/www\n    volumes:\n      - ./project:/var/www\n      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini\n    networks:\n      - app-network\n  webserver:\n    image: nginx:alpine\n    container_name: webserver\n    restart: unless-stopped\n    tty: true\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./project:/var/www\n      - ./nginx/conf.d/:/etc/nginx/conf.d/\n    networks:\n      - app-network\n  db:\n    image: mysql:5.7\n    container_name: db\n    restart: unless-stopped\n    tty: true\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_DATABASE: homestead\n      MYSQL_USER: homestead\n      MYSQL_ROOT_PASSWORD: secret\n      SERVICE_TAGS: dev\n      SERVICE_NAME: mysql\n    volumes:\n      - ./dbdata:/var/lib/mysql\n    networks:\n      - app-network\n  mailhog:\n    build: ./mailhog\n    container_name: mailhog\n    tty: true\n    ports:\n      - \"8025:8025\"\n      - \"1025:1025\"\n    environment:\n      MH_STORAGE: maildir\n      MH_MAILDIR_PATH: /home/mailhog/mails\n    volumes:\n      - ./mails:/home/mailhog/mails\n    networks:\n      - app-network\nnetworks:\n  app-network:\n    driver: bridge\nvolumes:\n  dbdata:\n    driver: local\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mailhog",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "php",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}