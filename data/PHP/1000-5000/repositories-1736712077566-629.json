{
  "metadata": {
    "timestamp": 1736712077566,
    "page": 629,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Cacti/cacti",
      "stars": 1674,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.31640625,
          "content": "# +-------------------------------------------------------------------------+\n# | Copyright (C) 2004-2024 The Cacti Group                                 |\n# |                                                                         |\n# | This program is free software; you can redistribute it and/or           |\n# | modify it under the terms of the GNU General Public License             |\n# | as published by the Free Software Foundation; either version 2          |\n# | of the License, or (at your option) any later version.                  |\n# |                                                                         |\n# | This program is distributed in the hope that it will be useful,         |\n# | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n# | GNU General Public License for more details.                            |\n# +-------------------------------------------------------------------------+\n# | Cacti: The Complete RRDtool-based Graphing Solution                     |\n# +-------------------------------------------------------------------------+\n# | This code is designed, written, and maintained by the Cacti Group. See  |\n# | about.php and/or the AUTHORS file for specific developer information.   |\n# +-------------------------------------------------------------------------+\n# | http://www.cacti.net/                                                   |\n# +-------------------------------------------------------------------------+\n#\n# For any folder that ignores all subcontent (<folder>/**), you\n# must MANUALLY use 'git add' to include a file as source\n# controlled.  This is to prevent addition of local specific\n# content bleeding into cacti's main sources.\n#\n# Example\n# -------\n# The themes and scripts folders ignore all contents\n# beneath them unless that content was already source controlled\n# so to add a new theme, or script, make sure to use 'git add'\n# before commiting changes.\n#\n# Themes\n# ------\n# Themes have a special case where a theme folder that is\n# included in a cacti release has all content considered as\n# maintainable and as such are prefixed with an exclamation\n# mark (!include/theme/mytheme = do not ignore mytheme)\n#\n\n# Ignore vim swap files\n*.swp\n*.rnd\n\n# Ignore Cacti config\ninclude/config.php\n\n# Ignore Cacti log files/folders\nlog/**\n\n# Ignore Cacti rrd files/folders\nrra/**\n\n# Ignore Cacti cache files/folders\ncache/**\n*.cache\n\n# Ignore Cacti plugin files/folders\nplugins/**\n\n# Ignore Cacti resources files/folders\nresource/**\n\n# Ignore Cacti script files/folders\nscripts/**\n\n# Ignore Custom Cacti theme folders\ninclude/themes/*/*\n\n# Ignore custom stylesheet (applied on all themes)\ninclude/themes/custom.css\n\n# Do not ignore standard Cacti theme folders\n!include/themes/cacti/*\n!include/themes/carrot/*\n!include/themes/classic/*\n!include/themes/dark/*\n!include/themes/hollyberry/*\n!include/themes/modern/*\n!include/themes/paper-plane/*\n!include/themes/paw/*\n!include/themes/raspberry/*\n!include/themes/sunrise/*\n!include/themes/midwinter/*\n\n# Ignore any mac DS_Store files\n.DS_Store\n\n# Ignore .well-known folders (certbot)\n.well-known\n\n# Ignore language files\nlocales/po/*.mo\n\n# Ignore CSRF secret file\ninclude/vendor/csrf/csrf-secret.php\n\n# Ignore visual studio code\n.vscode/**\n\n# Ignore vendor folders\ninclude/vendor/*\nvendor/*\n"
        },
        {
          "name": ".mdl_style.rb",
          "type": "blob",
          "size": 2.087890625,
          "content": "# +-------------------------------------------------------------------------+\n# | Copyright (C) 2004-2024 The Cacti Group                                 |\n# |                                                                         |\n# | This program is free software; you can redistribute it and/or           |\n# | modify it under the terms of the GNU General Public License             |\n# | as published by the Free Software Foundation; either version 2          |\n# | of the License, or (at your option) any later version.                  |\n# |                                                                         |\n# | This program is distributed in the hope that it will be useful,         |\n# | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n# | GNU General Public License for more details.                            |\n# +-------------------------------------------------------------------------+\n# | Cacti: The Complete RRDtool-based Graphing Solution                     |\n# +-------------------------------------------------------------------------+\n# | This code is designed, written, and maintained by the Cacti Group. See  |\n# | about.php and/or the AUTHORS file for specific developer information.   |\n# +-------------------------------------------------------------------------+\n# | http://www.cacti.net/                                                   |\n# +-------------------------------------------------------------------------+\n\n# customize style guide\nall\nrule \"MD010\", code_blocks: false\nrule \"MD013\", code_blocks: false, tables: false\nrule \"MD029\", style: \"ordered\"\nrule \"MD046\", style: \"fenced\"\n\n# Lesser rules\nexclude_rule \"MD010\" # hard tabs\n#exclude_rule \"MD013\" # line length\n\n# Rule Exclusions\nexclude_rule \"MD001\" # Headers are useful in other ways\nexclude_rule \"MD024\" # Headers with same name are useful, but break link labeling (Rework needed on affected files before enabling this rule)\nexclude_rule \"MD041\" # YAML header is being flagged as not the first\nexclude_rule \"MD046\" # seems broken\n"
        },
        {
          "name": ".mdlrc",
          "type": "blob",
          "size": 1.5830078125,
          "content": "# +-------------------------------------------------------------------------+\n# | Copyright (C) 2004-2024 The Cacti Group                                 |\n# |                                                                         |\n# | This program is free software; you can redistribute it and/or           |\n# | modify it under the terms of the GNU General Public License             |\n# | as published by the Free Software Foundation; either version 2          |\n# | of the License, or (at your option) any later version.                  |\n# |                                                                         |\n# | This program is distributed in the hope that it will be useful,         |\n# | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n# | GNU General Public License for more details.                            |\n# +-------------------------------------------------------------------------+\n# | Cacti: The Complete RRDtool-based Graphing Solution                     |\n# +-------------------------------------------------------------------------+\n# | This code is designed, written, and maintained by the Cacti Group. See  |\n# | about.php and/or the AUTHORS file for specific developer information.   |\n# +-------------------------------------------------------------------------+\n# | http://www.cacti.net/                                                   |\n# +-------------------------------------------------------------------------+\n\n# mdl cli configuration\nstyle \".mdl_style.rb\"\nverbose false\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 7.044921875,
          "content": "<?php\n\n$header = <<<'EOF'\n+-------------------------------------------------------------------------+\n| Copyright (C) 2004-2024 The Cacti Group                                 |\n|                                                                         |\n| This program is free software; you can redistribute it and/or           |\n| modify it under the terms of the GNU General Public License             |\n| as published by the Free Software Foundation; either version 2          |\n| of the License, or (at your option) any later version.                  |\n|                                                                         |\n| This program is distributed in the hope that it will be useful,         |\n| but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n| GNU General Public License for more details.                            |\n+-------------------------------------------------------------------------+\n| Cacti: The Complete RRDtool-based Graphing Solution                     |\n+-------------------------------------------------------------------------+\n| This code is designed, written, and maintained by the Cacti Group. See  |\n| about.php and/or the AUTHORS file for specific developer information.   |\n+-------------------------------------------------------------------------+\n| http://www.cacti.net/                                                   |\n+-------------------------------------------------------------------------+\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->exclude('tests', 'include/vendor', 'include/fa', 'plugins', 'vendor')\n    ->in(__DIR__)\n    // ->append([\n    // \t__DIR__.'/dev-tools/doc.php',\n    // \t__DIR__.'/php-cs-fixer',\n    // ])\n;\n\n$config = new PhpCsFixer\\Config();\n$config\n    ->setRiskyAllowed(true)\n    ->setIndent(\"\\t\")\n    ->setRules([\n        // '@PHP56Migration' => true,\n        // '@PhpCsFixer' => true,\n        // '@PhpCsFixer:risky' => true,\n        'header_comment' => false,\n        // 'header_comment' => [\n        //\t'header' => $header,\n        //\t'comment_type' => 'comment',\n        //\t'separate' => 'bottom'\n        // ],\n        'list_syntax' => [\n            'syntax' => 'long'\n        ],\n        'array_syntax' => [\n            'syntax' => 'long'\n        ],\n        'trim_array_spaces' => false,\n        'no_whitespace_before_comma_in_array' => true,\n        'no_multiline_whitespace_around_double_arrow' => false,\n        'normalize_index_brace' => true,\n        'no_mixed_echo_print' => [\n            'use' => 'print'\n        ],\n\t\t'no_spaces_after_function_name' => true,\n\t\t'braces' => [\n\t\t\t'position_after_functions_and_oop_constructs' => 'same',\n\t\t\t'position_after_control_structures' => 'same',\n\t\t\t'allow_single_line_closure' => true,\n\t\t],\n        'single_blank_line_at_eof' => true,\n        'no_whitespace_in_blank_line' => true,\n        'no_trailing_whitespace' => true,\n        'method_chaining_indentation' => true,\n        'indentation_type' => true,\n        'constant_case' => [\n            'case' => 'lower',\n        ],\n        'lowercase_keywords' => true,\n        'line_ending' => true,\n        'magic_constant_casing' => true,\n        'native_function_casing' => true,\n        'elseif' => true,\n        'include' => false,\n        'no_alternative_syntax' => true,\n        'no_superfluous_elseif' => true,\n        'no_trailing_comma_in_singleline' => true,\n        'no_unneeded_curly_braces' => true,\n        'no_useless_else' => false,\n        'yoda_style' => [\n            'equal' => false,\n            'identical' => false,\n            'less_and_greater' => null,\n            'always_move_variable' => false\n        ],\n        'declare_equal_normalize' => [\n            'space' => 'single'\n        ],\n        'dir_constant' => true,\n        'single_space_after_construct' => [\n            'constructs' => [\n                'abstract', 'as', 'attribute', 'break', 'case',\n                'catch', 'class', 'clone', 'const', 'const_import',\n                'continue', 'do', 'echo', 'else', 'elseif', 'extends',\n                'final', 'finally', 'for', 'foreach', 'function',\n                'function_import', 'global', 'goto', 'if', 'implements',\n\t\t\t\t'include', 'include_once', 'require', 'require_once',\n\t\t\t\t'instanceof', 'insteadof', 'interface', 'match',\n\t\t\t\t'named_argument', 'new', 'open_tag_with_echo', 'php_open',\n\t\t\t\t'print', 'private', 'protected', 'public', 'return',\n\t\t\t\t'static', 'throw', 'trait', 'try', 'use', 'use_lambda',\n\t\t\t\t'use_trait', 'var', 'while', 'yield', 'yield_from'\n\t\t\t],\n\t\t],\n        'switch_case_semicolon_to_colon' => true,\n        'switch_case_space' => true,\n        'switch_continue_to_break' => true,\n\t\t'logical_operators' => true,\n        'function_declaration' => [\n            'closure_function_spacing' => 'one'\n        ],\n        'no_spaces_inside_parenthesis' => true,\n        'binary_operator_spaces' => [\n            'operators' => [\n                '+=' => 'align_single_space',\n                '===' => 'align_single_space_minimal',\n                '=' => 'align',\n                '|' => 'single_space',\n                '=>' => 'align',\n                '!=' => 'align',\n            ],\n        ],\n        'not_operator_with_space' => false,\n        'no_spaces_around_offset' => [\n            'positions' => [\n                'outside',\n                'inside'\n            ],\n        ],\n        'standardize_not_equals' => true,\n        'ternary_operator_spaces' => false,\n        'full_opening_tag' => true,\n        'linebreak_after_opening_tag' => true,\n        'align_multiline_comment' => [\n            'comment_type' => 'phpdocs_like'\n        ],\n        'phpdoc_add_missing_param_annotation' => true,\n        'no_extra_blank_lines' => [\n            'tokens' => [\n                'attribute', 'break', 'case', 'continue', 'curly_brace_block',\n                'default', 'extra', 'parenthesis_brace_block', 'return',\n                'square_brace_block', 'switch', 'throw', 'use',\n            ],\n        ],\n        'no_empty_statement' => true,\n        'multiline_whitespace_before_semicolons' => [\n            'strategy' => 'no_multi_line',\n        ],\n        'no_singleline_whitespace_before_semicolons' => true,\n        'semicolon_after_instruction' => false,\n        //'space_after_semicolon' => [\n        //\t'remove_in_empty_for_expressions' => true\n        //],\n        'blank_line_before_statement' => [\n            'statements' => [\n                'break', 'continue', 'declare', 'default', 'do', 'exit',\n                'for', 'foreach', 'goto', 'if', 'return', 'switch',\n                'throw', 'try', 'while', 'yield', 'yield_from'\n            ],\n        ],\n        'explicit_string_variable' => false,\n        'single_quote' => true,\n        'string_line_ending' => true,\n        'strict_param' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'const' => 'only_if_meta',\n                'method' => 'one',\n                'property' => 'one',\n                'trait_import' => 'only_if_meta',\n                'case' => 'only_if_meta',\n            ],\n        ],\n    ])\n    ->setFinder($finder);\n\nreturn $config;\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 292.4091796875,
          "content": "Cacti CHANGELOG\n\n1.3.0-dev\n-issue#2205: Allow admins to disable RRDtool watermark\n-issue#3066: Enable the secure flag on cookies when HTTPS is enabled.\n-issue#3074: ss_net_snmp_disk_bytes.php and ss_net_snmp_disk_io.php do now report mmcblk data.\n-issue#3141: Fix FreeBSD IPv6 ping\n-issue#3547: Database Audit utility does not check database permissions\n-issue#3559: When a developer uses backtracing, HTML output can be seen from command line\n-issue#3560: When using `input_validate_xxx`, calls to `die_html_input_error()` do not pass variable name\n-issue#5019: Install SQL Statements with Database name should be quoted\n-issue#5191: Improve poller recovery by the addition of a secondary index\n-issue#5216: 1.3.0 - QA DSSTATS does not use the RRDtool Proxy stateful socket connection\n-issue#5221: ss_fping.php script times out when there is a lot of packet loss\n-issue#5264: The Net-SNMP Disk I/O Templates are not Cluster Aware\n-issue#5481: Attempting to edit a Data Query that does not exist throws warnings and not an GUI error\n-issue#5511: Allow automation network to be saved when the IP Addresses to ignore box is empty\n-issue#5517: Cacti 1.3.x will not support 'Remember me' functionality without using https\n-issue#5567: Incorrect variable name in change_device cli script\n-issue#5570: RRDChecker is started very often\n-issue#5573: Incorrect URL for editing graph template\n-issue#5639: Add tooltip info about IPv6 address\n-issue#5657: Consolidation Functions must be available in COMMENT for nth percentile and bandwidth summations comment types\n-issue#5680: Fix Spikekill not following correct time in schedule\n-issue#5776: Undefined array key \"description\" in file settings.php\n-issue#5844: Automation fails when using MySQL 8\n-issue#5885: Fix Fortigate and Aruba OSCX switch template, improve Clearpass template\n-issue#5899: Tooltip remain on page after page is refreshed\n-issue#5900: Please add the ability to select compiled RRDtool v1.9+\n-issue#5936: If a Remote Data Collector has not devices, poller.php does not properly register any collectors\n-issue#5964: Graph Timespans too far into the past generate RRDtool crashes\n-issue#5967: Removing dygraph-combined.js as we are not using it and have adequate charting libraries\n-issue#5968: Removing jQuery Sparklines API as we are not using it and have adequate charting libraries\n-issue#5969: If System Level Browser TimeZone Support is disabled don't show the User Profile Option\n-issue#5973: Multiple Issues with database API function db_update_table() preventing correct update of an existing table\n-feature#412: Import Export for Graph and Tree rules\n-feature#1214: Move Tree Create/Remove/Modify Functions to lib/api_tree.php\n-feature#1361: UI should update alternate row colors\n-feature#1398: Implement an interactive web based Plugin upgrade process\n-feature#1442: Add validation to GUI inputs\n-feature#1523: Value above RRD maximum value\n-feature#1585: Confirmation screen should show what options have been picked\n-feature#1773: Lock installer to single admin\n-feature#1987: Plugins should be able to be downloaded, installed, and upgraded from Plugin Management\n-feature#2166: LDAP configuration should only use 'user_domains_ldap'\n-feature#2333: The ability to export/import preset data profiles\n-feature#2429: Allow Device SNMP Options to be Templated\n-feature#2437: Create system-wide Proxy settings for plugins\n-feature#2439: Allow CDEF to be used as a filter for Graph/Graph Templates\n-feature#2474: Enable better version reporting for GitHub/Source/Package editions\n-feature#2550: Enable use of authenticator codes for Two-Factor Authentication\n-feature#2572: Support Sorting of Tree or Graph View by Data Source\n-feature#2607: Allow adding sites from command line\n-feature#2738: Set cache rebuild process indicator for the Cacti UI\n-feature#2767: Plugins should be temporarily disabled if a required plugin is also disabled\n-feature#2959: Add multi threading for push out hosts (cli)\n-feature#3048: Allow different log settings for remote pollers\n-feature#3139: Added option in CLI tool remove_graphs for deletion of single graph\n-feature#3187: Feature: rra path should be configurable\n-feature#3192: Add ability to change options in AUTOM8 networks\n-feature#3260: When a device is added, populate the created date/time\n-feature#3332: Remove files graph_items.php and graph_templates_items.php\n-feature#3333: Allow sequential network scans via AUTOM8\n-feature#3417: Add worst poller hosts to support page, log and email warning when poller time reached defined threshold\n-feature#3419: Automation should show network in discovered devices\n-feature#3430: Automation should report on devices added\n-feature#3513: Add hooks for plugins to show customize graph source and customize template url\n-feature#3518: Allow for 2 Levels of Poller sync\n-feature#3558: Allow copy_user cli script to set various additional fields\n-feature#3568; Allow exclusion of snmp fields / value(s) when adding graphs via CLI\n-feature#3584: Verify passwords against Pwned databases using API\n-feature#3585: CLI script to show database permissions that Cacti has\n-feature#3608: Graphs should be able to use |input_field_name| replacement variables\n-feature#3677: Relocate the delete button for collectors to the edit page\n-feature#3679: Allow searching logs by name, not just id\n-feature#3696: Allow use of ifDescr variable in Tree rules\n-feature#3724: Create Spikekill method to kill values over an absolute maximum\n-feature#3725: Create the ability for Spikekill to modify only certain DSes within an RRD\n-feature#3738: Ability to see MySQL permissions associated with current database user\n-feature#3740: Ability to disable a site\n-feature#3749: Clone a network automation\n-feature#3766: Bulk Export / Import Templates from Front-end\n-feature#3832: Exclude IP addresses in Automation Networks\n-feature#3833: Dry-run Automation Device Rule\n-feature#3845: Allow non-standard Remote Agent port to be used\n-feature#3904: Enhance automation to allow someone to view all recently discovered devices\n-feature#3943: Add hooks for plugins to show customize graph source and customize template url (List View)\n-feature#4157: Allow admin emails to utilise CLOG-style ID to name/link replacements\n-feature#4202: Editing State=Down device - mark online when editing device when responding by all required probes\n-feature#4296: Add hyperlink from graph edit page to graph-view\n-feature#4300: Allow GPrint/CDef/VDef to be visibile in graph template item lists\n-feature#4339: Change CLI progress output for rebuilding poller cache\n-feature#4778: Add devices sysName and sysLocation name as a Device description\n-feature#4811: Performance Issues on Template and Presets Pages on Large Installs and Drilldowns\n-feature#5020: Introduce script timeout for cmd.php\n-feature#5021: Allow form input validation to be reported to GUI\n-feature#5025: Add Least Squares Special Data Types to Cacti\n-feature#5027: Add Service Check Filter and Column and Device Thread Column\n-feature#5039: Add host_poller_id replacement variable\n-feature#5083: Make user log ask for confirmation on purge\n-feature#5120: Define cacti system paths as constants for better code checking\n-feature#5129: Add an option to skip table sync to remote pollers during upgrade process of Cacti\n-feature#5130: Add parameter \"version\" for Graph Templates\n-feature#5148: Allow theme-based include paths with master location\n-feature#5149: Allow CSS files to be loaded async #5149\n-feature#5163: DSSTATS - Add Additional Data Source Statics to Cacti\n-feature#5165: DSSTATS - Change data_source_stats_hourly_cache from Memory to INNODB\n-feature#5178: DSSTATS - Allow Retention of Daily, Weekly, Monthly and Yearly data for varying periods\n-feature#5212: Gradient Support drops Alpha translparency values from Areas and Does not Support Stack\n-feature#5215: DSSTATS - Cache the RRDtool Logic in a table to speed calculation of the staticis gathering\n-feature#5222: Allow Cacti Log to be Displayed in 'Raw Log' Format\n-feature#5225: When your Database server has TB of memory, memory calculation returns incorrect data in Cacti\n-feature#5231: When editing a Device show in state/uptime as a date in the header\n-feature#5267: Gradient Support does not work correctly on Aggregate Graphs\n-feature#5273: Add support for RRD --left-axis-format Options\n-feature#5278: Enhance Cacti's ping to use fping if it's installed to take advantage of sub-second timeouts\n-feature#5294: Allow Ignored Errors to be Logged such as 'No Route to host'\n-feature#5305: Remove files aggregate_items.php and color_templates_items.php and consolidate into their parents\n-feature#5316: Allow for searching in settings/menu\n-feature#5321: cli/push_out_hosts.php is deprecated, redirect to rebuild_poller.cache.php\n-feature#5328: Search through Data Query fields when searching for Graphs in Tree\n-feature#5368: Allow all key searching calls to be delayed by defined amount\n-feature#5378: When reload page in browser with graphs created scroll window always return to top\n-feature#5389: Forgot password function and email notification about new user or reset user password \n-feature#5406: Cacti connection handling should forcibly close connections to work around PDO uncertainty\n-feature#5407: Add last_updated column to the boost table to increase diagnostics in Cacti\n-feature#5416: Display device class before package import\n-feature#5463: When building Automation Rules, show the 'effective sql' on the page for users who know SQL\n-feature#5578: Provide new templates for Aruba switch, Aruba wifi controller and HPE iLO to be available during install\n-feature#5588: When upgrading Cacti deprecated/removed libraries and files still exist\n-feature#5596: Add template Aruba OSCX switch 6x00\n-feature#5601: Order Graph Item Inputs Naturally (MariaDB 10.7++, no MySQL support)\n-feature#5640: Boost log file visibility and rotation not as expected\n-feature#5681: Add poller information to graph-variables\n-feature#5717: Add Aruba Clearpass template\n-feature#5804: Remove the Classic Theme in Cacti\n-feature#5833: Add button for remove all data and configuration/settings\n-feature#5837: Remote poller installer should test version of cacti and new poller\n-feature#5838: Reduce the number of default log from automation\n-feature#5849: Separate Logging related settings to a new settings tab\n-feature#5855: Replace Plugin Images with FontAwesome Glyphs\n-feature#5857: Create a Reporting Queue for Cacti and Plugins to schedule reports\n-feature#5858: Create a Reporting log table to hold various data from Cacti Reports for base Cacti and from Plugins\n-feature#5860: When Cacti is running on MariaDB move the Data Source statistics partitions to the ARIA table format\n-feature#5861: In Cacti Utilities, be able to view the MariaDB/MySQL processeslist and active background tasks\n-feature#5862: Change logging message around remote agent timeout\n-feature#5866: Add 'database' to the permission structure in db_get_permissions() function\n-feature#5871: Make it possible for splice_rrd.php to run from outside of Cacti\n-feature#5889: Make it so that Cacti does not share sessions between browser tabs\n-feature#5892: Enable Authentication Cookies by Default in New Installs\n-feature#5907: Add Filter for Data Input Method on Data Templates\n-feature#5908: Add Searching of Notes and External ID when Searching for a Device\n-feature#5909: Add 'legend shorthand' for Graph Template Items\n-feature#5920: Remove the use of tables for alignment on graphs page and move to flex alignment\n-feature#5922: Add HPE Nimble/Alletra template\n-feature#5923: If RRDtool crashes due to a segmentation fault, report that and retry a few times\n-feature#5931: Make it easier to connect content in the table data_input_data to the host and data source\n-feature#5935: Add additional detail to the Admin Email to trace the server's impacted by the errors\n-feature#5941: Implement Drag and Drop on Graph Templates Edit Page\n-feature#5942: Improve Speed of Graph Template Editing Through Bulk Updates\n-feature#5948: Allow Graph Template Classes to be changed enmass\n-feature#5952: Create a new form dropdown type called drop_icon\n-feature#5954: Add Check boxes to Graph Templates Change Page\n-feature#5955: When Changing a Profile Update Other Data\n-feature#5958: When archiving a plugin, give the user the ability to add a note\n-feature#5959: Debounce the Poller Output Not Empty Warning\n-feature#5965: Merge packaging plugin with Cacti and add archiving and restore capabilities\n-feature#5966: Add snmp retries at the device level\n-feature#5970: Import/Export Automation should take THold into account\n-feature#5971: Add a method to mark missing Data in all graphs globally\n-feature#5993: Allow Automation Rules to Search through Site Information\n-feature#5997: Add filter for devices in maintenance plan, add icon to device list \n-feature#6001: Extend SYSTEM STATS log entry\n-feature#6033: Allow Admins to see when a template was last modified\n-feature#6034: Allow Users to Drill Up from CDEF's and VDEF's to Graphs and Graph Templates\n-feature#6044: Enable the capabilities to view historical Classical Cacti Report from the GUI\n-feature: Allow messages to be popup notifications\n-feature: Upgrade billboard.js to version 3.14.1\n-feature: Upgrade jQueryUI to version 1.14.1\n-feature: Upgrade d3.js to version 7.8.2\n-feature: Upgrade ua-parser.js to version 1.0.35\n-feature: Upgrade jquery.tablednd.js to version 1.0.5\n-feature: Upgrade FontAwesome to version 6.7.2\n-feature: Add parsedown to vendor library for plugin CHANGELOG and README viewing support\n-feature: Add year display to get_daysfromtime function\n-feature: Add class and version columns to Graph Template to support Streams feature\n-feature: Allow Reports to be sent to a Notification List if thold is installed\n-feature: Remove legacy Lotus Notes Attachment Types from Reports\n\n1.2.29\n-issue#5843: Issue with temporary tables with use of microtime\n-issue#5847: Presets Time in Cacti 1.2.28 Not Automatically Updating...\n-issue#5848: RRDfile Auto Clean not working\n-issue#5856: Help HTML file is incorrect for Automation Networks\n-issue#5867: Disabling a Tree does not function as expected\n-issue#5868: Error when remove Orphaned Graphs from GUI\n-issue#5870: CLI utility splice_rrd.php generates an error in PHP8+\n-issue#5874: IPV6 address colon format causes the snmp query to not work\n-issue#5884: Fix Fortigate and Aruba OSCX switch template, improve Clearpass template\n-issue#5927: Unable to re-enable a plugin using plugin_manage.php\n-issue#5932: When upgrading Cacti, the replicate_out() process runs repeatedly\n-issue#5961: Issues with Replication of Tables and Misleading Full Sync Time\n-issue#5963: Cacti caching for db_table_exists() and db_column_exists() is not connection aware and replication does not replicate empty table structures\n-issue#5986: PHP ERRORS with php8.4 while including global_arrays.php\n-issue#5987: Please add a new line to upgrade_database script \n-feature#5921: Add HPE Nimble/Alletra template\n-feature#5933: Only attempt to change the table type and character encoding for built-in Cacti tables\n\n1.2.28\n-security#GHSA-49f2-hwx9-qffr: XSS vulnerability when creating external links with the consolenewsection parameter\n-security#GHSA-fgc6-g8gc-wcg5: XSS vulnerability when creating external links with the title parameter\n-security#GHSA-gxq4-mv8h-6qj4: RCE vulnerability can be executed via Log Poisoning\n-security#GHSA-wh9c-v56x-v77c: XSS vulnerability when creating external links with the fileurl parameter\n-issue#5636: When using LDAP authentication the first time, warnings may appear in logs\n-issue#5754: When installing, a replication loop for plugin_realms may occur\n-issue#5759: When installing, remote poller may attempt to sync with other pollers\n-issue#5768: When a Data Query has a space, indexes may not be properly escaped\n-issue#5771: Boost does not always order data source records properly\n-issue#5772: Add IP address to the login audit for successful logins by xmacan\n-issue#5773: Undefined variable error may sometimes occur when dealing with RRD output by MSS970\n-issue#5777: When export to CSV, only the first line of notes is included\n-issue#5780: When rendering forms, missing default value can cause errors\n-issue#5782: Allow hosted content to be executable for the links page\n-issue#5783: When closing database connections, some may linger incorrectly\n-issue#5785: When changing passwords, an infinite loop may occur by ddb4github\n-issue#5790: When using Cacti Daemon, a \"Cron out of sync\" message may be reported\n-issue#5791: Add ability to filter/sort users by group or last login time\n-issue#5792: When using List View, unable to add Graphs to a Report\n-issue#5797: When using SNMPv3, some devices may show polling issues\n-issue#5802: Limit table conversion to Cacti core tables\n-issue#5806: Fix issues with posix-based kills on Windows\n-issue#5813: When installing, password changes may fail on new installations\n-issue#5814: When using structured RRD folders, permission issues may be flagged incorrectly\n-issue#5823: When unable to locate a valid theme, new default will be Modern\n-issue#5824: Properly cache the data source information for dsstats processing\n-issue#5840: Reindex Method 'Verify all Fields' does not work for OID/INDEX parse method\n-feature#5784: Add ability to log database connections/disconnections\n-feature#5796: Add Ping Method where connection refused assumes host is up\n-feature#5819: When displaying graphs, default end time does not show full 24 hour period\n-feature#5825: Add --id to remove_device.php\n-feature#5828: Add Location and Site to Graph List View\n-feature#5830: Add more verbose logging to Boost\n-feature: Update jQuery to 3.7.1\n-feature: Update jQueryUI to 1.14.0\n-feature: Update Purify.js to 3.1.6\n-feature: Update billboard.js to 3.13.0\n-feature: Improve the performance of the repopulation of the poller cache\n\n1.2.27\n-security#GHSA-37x7-mfjv-mm7m: Authentication Bypass when using using older password hashes\n-security#GHSA-7cmj-g5qc-pj88: RCE vulnerability when importing packages\n-security#GHSA-cx8g-hvq8-p2rv: RCE vulnerability when plugins include files\n-security#GHSA-gj3f-p326-gh8r: SQL Injection vulnerability when using tree rules through Automation API\n-security#GHSA-grj5-8fcj-34gh: XSS vulnerability when using JavaScript based messaging API\n-security#GHSA-jrxg-8wh8-943x: SQL Injection vulnerability when using form templates\n-security#GHSA-p4ch-7hjw-6m87: XSS vulnerability when reading tree rules with Automation API\n-security#GHSA-rqc8-78cm-85j3: XSS vulnerability when managing data queries\n-security#GHSA-vjph-r677-6pcc: SQL Injection vulnerability when retrieving graphs using Automation API\n-issue#5622: Improve PHP 8.3 support\n-issue#5628: When importing packages via command line, data source profile could not be selected\n-issue#5629: When changing password, returning to previous page does not always work\n-issue#5636: When using LDAP authentication the first time, warnings may appear in logs\n-issue#5638: When editing/viewing devices, add IPv6 info to hostname tooltip\n-issue#5645: Improve speed of polling when Boost is enabled\n-issue#5648: Improve support for Half-Hour time zones\n-issue#5649: Improve support of ping on Windows\n-issue#5655: When user session not found, device lists can be incorrectly returned\n-issue#5660: On import, legacy templates may generate warnings\n-issue#5661: Improve support for alternate locations of Ping\n-issue#5662: Improve PHP 8.1 support for Installer\n-issue#5669: Fix issues with number formatting\n-issue#5677: Improve PHP 8.1 support when SpikeKill is run first time\n-issue#5693: Improve PHP 8.1 support for SpikeKill\n-issue#5696: When using Chinese to search for graphics, garbled characters appear.\n-issue#5701: When importing templates, preview mode will not always load\n-issue#5720: When remote poller is installed, MySQL TimeZone DB checks are not performed\n-issue#5723: When Remote Poller installation completes, no finish button is shown\n-issue#5725: Unauthorized agents should be recorded into logs\n-issue#5726: Poller cache may not always update if hostname changes\n-issue#5727: When using CMD poller, Failure and Recovery dates may have incorrect values\n-issue#5731: Saving a Tree can cause the tree to become unpublished\n-issue#5732: Web Basic Authentication does not record user logins\n-issue#5733: When using Accent-based languages, translations may not work properly\n-issue#5743: Fix automation expressions for device rules\n-issue#5748: Improve PHP 8.1 Support during fresh install with boost\n-feature#5692: Add a device \"enabled/disabled\" indicator next to the graphs\n-feature#5710: Notify the admin periodically when a remote data collector goes into heartbeat status\n-feature#5716: Add template for Aruba Clearpass\n-feature#5730: Add fliter/sort of Device Templates by Graph Templates\n\n1.2.26\n-issue#5464: PHP warning when view Data Source Info mode with new Data Source\n-issue#5481: Attempting to edit a Data Query that does not exist throws warnings and not an GUI error\n-issue#5483: cacti 1.2.25 ubuntu server 22.04.3 php8.1 add device error\n-issue#5485: Selecting a host device in System Utilities - View Data Query Cache raises error in cacti log\n-issue#5489: remove_graphs.php does not handle \"--preserve\" option\n-issue#5490: Database failure causes infinite recursion in cacti_log() followed by machine lockup\n-issue#5492: Cacti 1.2.25 ss_host_cpu.php CPU graphs not updating anymore on Windows servers\n-issue#5493: Multi select drop down list box not rendered correctly in Chrome and Edge\n-issue#5494: typo error in name used in inserts array for selective_plugin_debug\n-issue#5495: Upon upgrade, cacti falsely assumes that a plugin is not compatible, when it could simply not be present\n-issue#5496: Plugin Management CLI does not work when multiple plugins are specified\n-issue#5502: Errors related to php 8.3 and page generation including a checkbox\n-issue#5503: Note, we could not process all your actions. Details are below\n-issue#5514: DS Stats issues warnings when the RRDfile has not been initialized\n-issue#5527: Upgrade from 0.8.8 to 1.2.25 (latest) fails on db upgrade due to missing data source profile id\n-issue#5534: When deleting a single Data Source the table data_debug is not purged\n-issue#5542: When a form element does not include a 'value' column, provide a more helpful warning message\n-issue#5554: Interface description with equal sign (=) in ifAlias does not show Alias\n-issue#5555: Aggregate graph does not show other percentiles\n-issue#5561: Settings table custom size reverted by database repair\n-issue#5572: RRD Checker timeouts to low\n-issue#5573: Incorrect URL for editing graph template\n-issue#5581: Due to previously never completed upgrade, future upgrades fail due to missing color table keys\n-issue#5583: On install ensure Default Device is either Net-SNMP or Cisco Router or allow user to define during install\n-issue#5585: Refix Issue #4649 using more appropriate method\n-issue#5586: CSV export displays data shifted by rrd step interval\n-issue#5589: When a graph has a real long cdef in graph debug mode, it forces an undesirable scroll\n-issue#5590: Secondary LDAP server not evaluated when the first one has failed\n-issue#5602: When adding a device, using the bulk walk option can make version information appear\n-issue#5609: When parsing a Data Query resource, an error can be reported if no direction is specified\n-issue#5612: Database reconnection can cause errors to be reported incorrectly\n-issue#5613: Fix returned value if $sau is empty\n-issue#5641: Cmd poller - add availability test for devices without poller items\n-feature#5577: Add Aruba switch, Aruba controller and HPE iLO templates\n-feature#5597: Add OSCX 6x00 templates\n\n1.2.25\n-security#GHSA-77rf-774j-6h3p: Protect against Insecure deserialization of filter data\n-security#GHSA-gx8c-xvjh-9qh4: Protect against Cross-Site Scripting vulnerability when creating new graphs\n-security#GHSA-6r43-q2fw-5wrg: Protect against Unauthenticated SQL Injection when viewing graphs\n-security#GHSA-6jhp-mgqg-fhqg: Protect against SQL Injection when saving data with sql_save()\n-security#GHSA-g6ff-58cj-x3cp: Protect against Authenticated command injection when using SNMP options\n-security#GHSA-q4wh-3f9w-836h: Protect against Authenticated SQL injection vulnerability when managing graphs\n-security#GHSA-gj95-7xr8-9p7g: Protect against Authenticated SQL injection vulnerability when managing reports\n-security#GHSA-v5w7-hww7-2f22: Protect against SQL Injection when using regular expressions\n-security#GHSA-4pjv-rmrp-r59x: Protect against Open redirect in change password functionality\n-security#GHSA-rwhh-xxm6-vcrv: Protect against Cross-Site Scripting vulnerability with Device Name when managing Data Sources\n-security#GHSA-24w4-4hp2-3j8h: Protect against Cross-Site Scripting vulnerability with Device Name when administrating Reports\n-security#GHSA-5hpr-4hhc-8q42: Protect against Cross-Site Scripting vulnerability with Device Name when editing Graphs whilst managing Reports\n-security#GHSA-vqcc-5v63-g9q7: Protect against Cross-Site Scripting vulnerability with Device Name when managing Data Sources\n-security#GHSA-9fj7-8f2j-2rw2: Protect against Cross-Site Scripting vulnerability with Device Name when debugging data queries\n-security#GHSA-6hrc-2cfc-8hm7: Protect against Cross-Site Scripting vulnerability with Data Source Name when managing Graphs\n-security#GHSA-hrg9-qqqx-wc4h: Protect against Cross-Site Scripting vulnerability with Data Source Name when debugging Data Queries\n-security#GHSA-r8qq-88g3-hmgv: Protect against Cross-Site Scripting vulnerability with Data Source Information when managing Data Sources\n-security#GHSA-rf5w-pq3f-9876: Protect against Privilege escalation when Cacti installed using Windows Installer defaults\n-issue#2959: When rebuilding the Poller Cache from command line, allow it to be multi-threaded\n-issue#4045: When searching tree or list views, the URL does not update after changes\n-issue#5254: When creating a Data Source Template with a specific snmp port, the port is not always applied\n-issue#5255: When a Data Query references a file, the filename should be trimmed to remove spurious spaces\n-issue#5258: THold plugin may not always install or upgrade properly\n-issue#5259: RRD file structures are not always updated properly, if there are more Data Sources in the Data Template than the Graph Template\n-issue#5263: When reindexing devices, errors may sometimes be shown\n-issue#5272: Boost may loose data when the database server is overloaded\n-issue#5275: Boost can sometimes output unexpected or invalid values\n-issue#5277: Boost should not attempt to start if there are no items to process\n-issue#5279: Rebuilding the poller cache does not always work as expected\n-issue#5282: Host CPU items may not work poll as expected when on a remote data collector where hmib is also enabled\n-issue#5283: When creating new graphs, invalid offset errors may be generated\n-issue#5291: When importing packages, SQL errors may be generated\n-issue#5298: When managing plugins from command line, the --plugin option is not properly handled\n-issue#5299: When automating an install of Cacti, error messages can be appear\n-issue#5300: When performing automated install of a plugin, warnings can be thrown\n-issue#5315: Automation references the wrong table name causing errors\n-issue#5317: Data Source Info Mode produces invalid recommendations\n-issue#5319: Data Source Debug 'Run All' generates too many log messages\n-issue#5323: The description of rebuild poller cache in utilities does not display properly\n-issue#5324: When reindexing a device, debug information may not always display properly\n-issue#5329: Upon displaying a form with errors, the session error fields variable isn't cleared\n-issue#5333: MariaDB clusters will no longer support exclusive locks\n-issue#5336: RRDtool can fail to update when sources in Data Template and Graph Template data sources do not match\n-issue#5338: Compatibility improvements for Boost under PHP 8.x\n-issue#5342: When searching the tree, increase the time before querying for items\n-issue#5347: Device Location drop down does not always populate correctly\n-issue#5354: When viewing Realtime graphs, undefined variable errors may be reported\n-issue#5355: SNMP Uptime is not always ignored for spikekills\n-issue#5356: Improve detection of downed Devices\n-issue#5360: When reporting missing functions from Plugins, ensure messages do not occur too often\n-issue#5364: When starting the Cacti daemon, database errors may be reported when there is no problem\n-issue#5366: When reporting from RRDcheck, ensure prefix is in the correct casing\n-issue#5371: Improve Orphaned Data Source options and display\n-issue#5372: Parsing the PHP Configuration may sometimes produce errors\n-issue#5376: Security processes attempt to check for a user lockout even if there is no user logged in\n-issue#5377: When attempting to edit a tree, the search filter for Graphs remains disabled\n-issue#5381: When reindexing, a Data Source that could be un-orphaned may not always be unorphaned\n-issue#5382: When parsing a date value, there could be more than 30 chars\n-issue#5384: Untemplated Data Sources can fail to update due to lack of an assigned Graph\n-issue#5386: When processing items to check, do not include disabled hosts\n-issue#5390: When saving a Data Source Template, SQL errors may be reported\n-issue#5392: When importing a Template, errors may be recorded\n-issue#5402: Some display strings have invalid formatting that cannot be parsed\n-issue#5403: When filtering with regular expressions, the 'does not match' option does not always function as expected\n-issue#5409: When enabling a plugin, sometimes it can appear as if nothing happens\n-issue#5413: Ensure the Rows Per Page option shows limitations set by configuration\n-issue#5414: Plugins are unable to modify fields in the setting 'Change Device Settings'\n-issue#5417: When reporting emails being sent, ensure BCC addresses are also included\n-issue#5420: Improve compatibility of SNMP class trim handling under PHP 8.x\n-issue#5426: When importing legacy Data Query Templates, the Template can become unusable\n-issue#5427: Provide ability to raise an event when extending the settings form\n-issue#5434: Prevent unsupported SQL Mode flags from being set\n-issue#5439: The DSStats summary does not always display expected values\n-issue#5440: When performing a fresh install, device classification may be missing.\n-issue#5446: Duplication functions for Graph/Template and Data Source/Template do not return and id\n-issue#5447: Duplication of Device Templates should be an API call\n-issue#5450: Unable to convert database to latin1 instead of utf8 if desired\n-issue#5451: When creating Graphs, the process may become slower over time as more items exist\n-issue#5452: When a bulk walk size is set to automatic, this is not always set to the optimal value\n-issue#5453: Update copyright notice on import packages\n-issue#5454: When viewing Orphan Graphs, SQL errors may be reported\n-issue#5457: When reindexing hosts from command line, ensure only one process runs at once\n-issue#5458: When a Data Query has no Graphs, it may not be deletable\n-issue#5459: When duplicating a Graph Template, provide an option to not duplicate Data Query association\n-issue#5460: When duplicating a Data Template errors can appear in the Cacti log\n-issue#5462: When importing a Package, previewing makes unexpected changes to Cacti Templates\n-issue#5466: When enabling boost on a fresh install, an error may be reported\n-issue#5467: Improve compatibility for backtrace logging under PHP 8.x\n-issue#5475: Improve compatibility for Advanced Ping under PHP 8.x\n-feature#5375: Provide new templates for Fortigate and Aruba Cluster to be available during install\n-feature#5393: Provide new template for SNMP Printer to be available during install\n-feature#5418: When importing devices, allow a device classification to be known\n-feature#5442: Extend length of maximum name in settings table\n-feature#5444: Extend length of maximum name in user settings table\n-feature#5448: Data Queries do not have a Duplication function\n-feature#5252: Upgrade d3.js v7.8.2 and billboard.js v3.7.4\n-feature#5358: Upgrade ua-parser.js to version 1.0.35\n-feature#5397: Update Cisco Device Template to include HSRP graph template\n-feature: New hook for device template change 'device_template_change'\n\n1.2.24\n-issue#5127: Unable to import Local Linux Machine template\n-issue#5134: Maximum Memory shows -1 instead of Unlimited\n-issue#5135: RRDcleaner and RRDcheck share the same filter details causing errors\n-issue#5136: When passed a null value, number_format_i18n() can return a invalid number\n-issue#5137: When attempting to update structured paths, SQL errors can occur\n-issue#5140: Compatibility changes for SNMP under PHP 8.2\n-issue#5142: Fix issues with permission model and warnings\n-issue#5143: When a Device has zero Graphs or Data Sources, it does not display a value\n-issue#5145: Changing SNMP settings to None leaves Bulk Walk Maximum Repititions visible\n-issue#5147: Language handlers may not always be loaded properly\n-issue#5150: Wrong parameters are shown for the Import Package script\n-issue#5151: Templates appear to lose their suggested name values\n-issue#5159: When editing a tree, the tree can not be set to published\n-issue#5160: Translations on debian 'bookworm' systems may cause server errors\n-issue#5161: Switching language in the settings does not immediately become active\n-issue#5166: Plugin permissions may sometimes appear in the wrong section\n-issue#5167: Graph template for NetSNMP lmsensors missing\n-issue#5168: Import Package is misleading when reviewing Device Template Changes\n-issue#5169: Device failure and recovery dates can be misleading\n-issue#5170: Prevent remote polling functionality from running on main poller\n-issue#5174: When adding a new device, location is not being saved\n-issue#5180: Audit Database has issues with storage engine compare\n-issue#5181: When working with remote data collectors, some errors may be logged\n-issue#5182: Graph Image does not have check for Remote Agent\n-issue#5184: When a user has been deleted, checking permissions can cause errors\n-issue#5185: Repair Database does not prune old Poller Item Records\n-issue#5187: When calling plugin functions, errors can appear if they are not present\n-issue#5188: When filtering Device Templates, valid matches are not always shown\n-issue#5190: When using Gradient Support GPRINT Text Format is misaligned\n-issue#5194: CSRF directory needs to be writeable for creating the csrf-secret.php file\n-issue#5195: When removing spikes, errors can be recorded for NaN samples\n-issue#5196: Gradient support can break Graphs containing special characters\n-issue#5197: Unable to obtain realtime graph from remote poller\n-issue#5198: Compability Improvements for PHP Diff under PHP 8.x\n-issue#5199: When trying to obtain data, cacti should not long Transport Read errors\n-issue#5200: Compatibility improvements for Classic Tab images under PHP 8.x\n-issue#5201: Weathermaps can have issues rendering with some themes\n-issue#5202: When importing packages, Graph Size does not get updated to Graph Templates\n-issue#5203: Host Mib Device package can cause errors with NetSNMP scripts\n-issue#5204: Compatibility improvements for Audit Database under PHP 8.x\n-issue#5205: When using Diff Viewer, rendering is not always correct under certain themes\n-issue#5207: Compatibility improvements for Installer under PHP 8.x\n-issue#5208: Some i18n strings are not properly translated\n-issue#5209: When disabling a user, no log is recorded\n-issue#5211: When creating a new graph, undefined variable errors may be recorded\n-issue#5214: Basic Auth is timing out and logging users off automatically\n-issue#5223: When using callback form functions, name and id field may not be correctly set\n-issue#5224: When poller runtime is exceeded, time should be display as a rounded number\n-issue#5227: When debugging a data source, errors may be shown if no RRDfile created yet\n-issue#5232: Polling can appear delayed due to early statistics gathering\n-issue#5236: When viewing a graph, Edit Graph Template link may open wrong url\n-issue#5238: Searching for Poller Items can generates SQL Errors\n-issue#5239: Bulk Walk Maximum Repetitions may sometimes be ignored\n-issue#5241: Balance Process Load does not always apply properly\n-issue#5243: Template Export missing Graph Template columns `multiple` and `test_source`\n-issue#5245: Add additional security to the unserialize function\n-issue#5247: Rebuilding Poller Cache from Utilities does not respect poller interval due to lack or ordering\n\n1.2.23\n-security#4920: Add .htaccess file to scripts folder\n-security#5119: CVE-2022-46169 Unauthenticated Command Injection in Remote Agent\n-issue#4418: When using Single Sign-on Frameworks, revocation is not always detected in callbacks\n-issue#4682: New templates are not installed during the update\n-issue#4738: Improve PHP 8.1 support for Installer CLI\n-issue#4888: The database audit script fails to run properly on MySQL 8.0.29\n-issue#4889: Increase host query performance by removing check for NULL\n-issue#4892: When many hosts go offline, Recache Event can be constantly logged\n-issue#4893: Real Time Counter can become stuck and does not count down\n-issue#4896: When remote poller is in offline mode, GUI can become inaccesible and poller can timeout\n-issue#4897: Technical support page on remote poller shows max connections of Main poller\n-issue#4903: Correct incompatibility between MySQL 8.x and Automation regular expressions\n-issue#4904: The recommendation for innodb_buffer_pool_instances is incorrect for MySQL 8 and MariaDB < 10.5\n-issue#4905: Using colons in labels can break graphs with gradients\n-issue#4917: Real Time Counter can become stuck and does not count down\n-issue#4921: Some Aggregate graphs can be denied access incorrectly\n-issue#4923: Unable to duplicate a Graph template\n-issue#4927: Unable to audit the database if database password contains a bracket\n-issue#4934: Upgrade phpseclib to 2.0.37\n-issue#4935: The 'Net-SNMP - Device I/O' template incorrectly sets a maximum value of zero\n-issue#4940: When sorting by hostname, database errors can be reported\n-issue#4941: When boost is running, graphs can appear broken\n-issue#4944: Packages should be signed with SHA256 as SHA1 is considered deprecated\n-issue#4947: When creating a Data Template, ensure that the default max value is always 'U' and not '0'\n-issue#4951: Plugins may not work correctly with Multi-Poller setups\n-issue#4960: Setting context for connections throws error in PHP 8.x\n-issue#4963: Wen calculating 95th percentile, floor() maybe used instead of ceil() incorrectly\n-issue#4964: Tree search does not correct hide non-matching tree objects\n-issue#4966: Device Template filters should show on used templates\n-issue#4971: MIB Parser can sometimes cause errors in later PHP versions\n-issue#4978: Boost may sometimes lose the Time Zone unexpectedly\n-issue#4980: Setting business hours can cause PHP errors\n-issue#4988: When creating RRD File, more data sources than expected may be defined\n-issue#4990: When viewing Links, errors can be generated\n-issue#4991: Updating a Data Template does not switch rrd_heartbeat properly for all sources leading to empty graphs\n-issue#4993: Data Debug Troubleshooter does not pick up invalid RRD_heartbeat settings\n-issue#4996: When managing graphs, Graphs can be listed multiple times incorrectly\n-issue#5001: Data Debug troubleshooter reports false positives with Missing Data Sources\n-issue#5006: Errors can occur when attempting to remove items from CDEF or VDEF's\n-issue#5012: When upgrading database at command line, some PHP errors may be seen\n-issue#5013: Automatically set Bulk Walk size when missing on a host\n-issue#5015: Upgrade for 1.2.21 reporting unknown status\n-issue#5017: SNMP Agent can cause unexpected errors due to implicit rounding\n-issue#5018: When using 'Remember me', session can still be forced to end unexpectedly\n-issue#5024: Escape char not properly replaced in snmp strings\n-issue#5028: Cacti User Stats script can throw errors unexpectedly\n-issue#5029: Searching for a plugin by name does not always work\n-issue#5030: Installer shows innodb unset in MariaDB 10.10+\n-issue#5033: Improve PHP 8.1 support with Installer\n-issue#5034: RRD Proxy Server not supported by CLI script \"structure_rra_paths.php\"\n-issue#5041: Custom themes may cause errors if they do not contain all required CSS/JS files\n-issue#5057: When adding a device rule in automation, depreciated filters may be reported\n-issue#5066: Graph watermark is not escaped properly, leading to broken graphs\n-issue#5068: Improve PHP 8.2 support with Installer\n-issue#5084: When viewing trees, runtime errors may be recorded\n-issue#5088: When running script host_update_template.php, reindex method may incorrectly be changed to uptime\n-issue#5089: When numeric regex validation fails, no backtrace is logged\n-issue#5096: When the SNMP Agent is enabled, certain objects can result in errors appearing\n-issue#5097: RRDtool Utilities should not appear on Remote Data Collectors\n-issue#5101: When a remote poller fails, the recovery process may also fail\n-issue#5102: When in Recovery Mode, plugins that are designed to work remotely stop working\n-issue#5103: When Remote Data Collector changes status, a full page refresh or logout should occur\n-issue#5105: ss_host_disk.php php issue after upgrade PHP 8.1 (from 7.4)\n-issue#5107: Block installation if PHP has session.auto_start enabled\n-issue#5111: During boost processing, some DS Stats functions can cause errors\n-feature#1100: Structured path not created when using remote poller and Update On-Demand\n-feature#1392: Notify Admins that page errors exist even when using dynamic callbacks\n-feature#2239: Allow Import and Export to be more selective\n-feature#2485: Importing Template requires you to upload the same file after previewing\n-feature#2548: Add Head/Tail filtering of log for more efficient searches\n-feature#2567: The innodb sort buffer should be optimized for large tables\n-feature#2747: Allow more sorting options when managing Graphs\n-feature#2871: Report when RRA's heartbeat is below the data source profile's interval\n-feature#3131: Add utility feature to reindex hosts with bad indexes\n-feature#3578: Allow Re-indexing of Devices to be Scheduled\n-feature#4025: When importing a Template or Package, allow the user to ignore template and use the system default dimensions\n-feature#4239: On \"Graph Utility View\" add the name of and a link to the graph template which the graph is based on\n-feature#4417: Support execution of custom functions at poller bottom for remote pollers\n-feature#4754: The script ss_fping.php should timeout based on the host\n-feature#4762: Allow Package Import to be selective\n-feature#4786: Windows install does not support SVG rendering\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4841: Move the `cactid` function `db_check_reconnect()` to `lib/database.php` for other service oriented scripts\n-feature#4874: Add support for Business Hours\n-feature#4890: Add multi threading for Poller recache script\n-feature#4899: Allow script server to be told when the main database when offline or in recovery\n-feature#4901: Make the script server accept arguments in the standard way\n-feature#4902: Increase compatibility with MySQL 8.x\n-feature#4907: Add lmSensors to the Net-SNMP Device Template\n-feature#4926: Allow the user to override Cacti's built-in Time Zone detection\n-feature#4943: Add ability to periodically check RRDfiles for errors in batch\n-feature#4948: When security cookie times out, redirection does not always occur properly\n-feature#4955: Provide memory tuning based upon MySQL Tuner recommendations\n-feature#4956: The function `db_check_reconnect()` should be able to work with any connection\n-feature#4957: Add Device Template categories to match the classes of the Package Plugin\n-feature#4965: When unlocking a tree, entire page should not need rebuilding\n-feature#4967: Make adding Associated Graph Templates and Data Queries easier to use\n-feature#4989: Improve table performance by caching 'Total Rows' using a hash\n-feature#5009: Allow SNMP Value OIDs to be parsed using regular expressions\n-feature: Adding ESXi Device Template\n-feature: Upgrade jQuery to version 3.6.1\n-feature: Upgrade jQueryUI to version 1.13.2\n-feature: Upgrade billboard.js to version 3.6\n-feature: Introduce exec() function with timeout\n\n1.2.22\n-security#4834: When creating new graphs, cross site injection is possible\n-issue#4768: When creating user from template, multiple Domain FullName and Mail are not propagated\n-issue#4791: Nectar Aggregate 95th emailed report broken\n-issue#4796: Boost may not find archive tables correctly\n-issue#4802: Users may be unable to change their password when forced during a login\n-issue#4803: Net-SNMP Memory Graph Template has Wrong GPRINT\n-issue#4806: Search in tree view unusable on larger installations\n-issue#4808: Increased bulk insert size to avoid partial inserts and potential data loss.\n-issue#4810: Call to undefined function boost_debug in Cacti log\n-issue#4814: When no guest template is set, login cookies are not properly set\n-issue#4817: Later RRDtool releases do not need to check last_update time\n-issue#4818: Regex filters are not always long enough\n-issue#4819: Domains based LDAP and AD Fullname and Email not auto-populated\n-issue#4822: Cacti polling and boost report the wrong number of Data Sources when Devices are disabled\n-issue#4823: When editing Graph Template Items there are cases where VDEF's are hidden when they should be shown\n-issue#4831: Database SSL setting lacks default value\n-issue#4837: Update default path cacti under *BSD\n-issue#4840: Web Basic authentication not creating template user\n-issue#4846: Unable to change the Heartbeat of a Data Source Profile\n-issue#4849: Tree Search Does Not Properly Search All Trees\n-issue#4850: When structured paths are setup, RRDfiles may not always be created when possible\n-issue#4851: When parsing the logs, caching would help speed up processing\n-issue#4853: Deprecation warnings when attempting real-time Graphs with PHP8.1\n-issue#4860: Custom Timespan is lost when clicking other tree branches\n-issue#4863: Non device based Data Sources not being polled\n-issue#4865: When Resource XML file inproperly formatted, graph creation can fail with errors\n-issue#4866: Update code style to support PHP 8 requirements\n-issue#4867: In Graph Management, filtering for \"Device: None\" shows all graphs\n-issue#4871: Realtime popup window experiences issues on some browsers\n-issue#4873: Auth settings do not always properly reflect the options selected\n-issue#4880: MySQL can cause cacti to become stalled due to locking issues\n-issue#4882: Boost process can get hung under rare conditions until the poller times out\n-issue#4884: Exporting graphs under PHP 8 can cause errors\n-issue#4887: Host table has wrong default for disabled and deleted columns\n-feature#4533: RRD storage paths do not scale properly\n-feature#4820: When importing, make it possible to only import certain components\n-feature#4825: Update change_device script to include new features\n-feature#4827: Make help pages use latest online version wherever possible\n-feature#4832: Cacti should show PHP INI locations during install\n-feature#4833: Detect PHP INI values that are different in the INI vs running config\n-feature#4870: Added Gradient Color support for AREA charts\n-feature#4872: Update CDEF functions for RRDtool\n-feature#4881: When boost is running, it's not clear which processes are running and how long they have to complete\n\n1.2.21\n-issue#4531: Correct duplicate keys within database\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4683: When adding a device, errors may be reported whilst updating templates\n-issue#4684: When creating RRD error image, font may not exist\n-issue#4685: Correct issues with corrupted Cacti Packages\n-issue#4687: Poller output not empty all the time\n-issue#4688: When running under PHP 5.4, certain operators are not valid\n-issue#4689: Package Import generates errors when you try to import directory or non-file\n-issue#4693: Correct issues with Heartbeat definitions under PHP 8.x\n-issue#4695: When importing packages, hash types are not properly processed\n-issue#4697: Login problem\n-issue#4698: When creating a device, unexpected poller down message may be shown\n-issue#4701: Editing a new user or user group may cause errors\n-issue#4705: Unable to automatically login using Remember Me option\n-issue#4707: Unable to duplicate graph templates due to missing column\n-issue#4716: Correct issues with Data Source Edit under PHP 8.x\n-issue#4719: Browsers may reject CactiTimeZone and CactiDateTime cookies due to SameSite requirements\n-issue#4721: Some JavaScript and image files URL are broken under midwinter theme\n-issue#4722: When upgrading from pre 1.x, various errors may be seen\n-issue#4726: When running under Fedora, issues may be seen with snmp values\n-issue#4729: Add ability for Template and Package Installs to update Suggested Name Values/Patterns\n-issue#4732: When using audit tool, text/mediumtext columns may not be properly processed\n-issue#4735: When changing data source profiles, errors may be shown\n-issue#4736: Update PHP recommendations to meet current expectations\n-issue#4743: When viewing graphs, fontawesome may not always been found\n-issue#4744: When using automation, numeric values may be treated as strings\n-issue#4748: When saving a device, errors may be generated\n-issue#4756: Importing very old Data Input Methods generate dependency warnings\n-issue#4757: Correct issues with Boost running under PHP 8.x\n-issue#4763: Unable to login locally when LDAP authentication enabled\n-feature#4720: Add a CLI script to install/enable/disable/uninstall plugins\n-feature#4740: Add log message when purging DS stats and poller repopulate\n\n1.2.20\n-security#4562: When using LDAP, authentication process may be bypassed\n-security#4576: Device, Graph, Graph Template, and Graph Items may be vulnerable to XSS issues\n-security#4579: Lockout policies are not properly applied to LDAP and Domain Users\n-security#4593: When using 'remember me' option, incorrect realm may be selected\n-security#4678: User and Group maintenance are vulnerable to SQL attacks\n-security#4679: Color Templates are vulnerable to XSS attack\n-issue#3816: When replicating data during installation/upgrade, system may appear to hang\n-issue#4363: Graph Template Items may have duplicated entries\n-issue#4435: Unable to Save Graph Settings\n-issue#4449: Script Server may crash if an OID is missing or unavailable\n-issue#4451: When system-wide polling is disabled, remote pollers may fail to sync changed settings\n-issue#4455: When updating poller name, duplicate name protection may be over zealous\n-issue#4457: Titles may show \"Missing Datasource\" incorectly\n-issue#4458: Checking for MIB Cache can cause crashes\n-issue#4460: Polling cycles may not always complete as expected\n-issue#4461: When viewing graph data, non-numeric values may appear\n-issue#4472: Utilities view has calculation errors when there are no data sources\n-issue#4475: Add support for PHP 8\n-issue#4477: Remote pollers do not force connection when online\n-issue#4479: Rebuild Poller Cache CLI script should have filter options\n-issue#4480: Saving a bad Data Template can damage Data Sources\n-issue#4481: Reports still use Legacy attributes, despite having a format file\n-issue#4482: Graph Automation slowed by in-efficient index selection\n-issue#4491: When rebuilding poller cache, SNMP settings do not properly update\n-issue#4492: When an OID starts with space, SNMP returns undefined data\n-issue#4495: Datasource Statistics may obtain invalid data for some rebooted devices\n-issue#4498: When attempting to calculate width, some input elements may cause console errors\n-issue#4500: Datasource Statistics may not scale properly on larger systems\n-issue#4508: Changing Multi-Device SNMP settings may not work as expected\n-issue#4509: Updating Items for a Graph Template may be slow on larger systems\n-issue#4511: When using the time-based view, SVG Graphs may not resize properly\n-issue#4512: When using API calls, graphs without data sources may be unremovable\n-issue#4516: Add additional information to help when creating graphs from templates\n-issue#4519: When remote host poll fails, poller ID may not be found and cause errors\n-issue#4521: Backtraces Logged in Cacti 1.2.x Branch - Gettext Translation\n-issue#4522: When entering custom input, layout issues may be seen\n-issue#4528: When creating a device, default setting for Device Threads may be ignored\n-issue#4529: Primary Admin account notifications may not work in certain cases\n-issue#4530: On larger systems, user interface for reporting may become unusable\n-issue#4536: When using Web Basic Authentication, user is always mapped as guest.\n-issue#4539: When handling plugin dependancies, notices may not be displayed properly\n-issue#4540: Certain account types should not allow their enabled status to be changed\n-issue#4543: Emails sent multiple times to the same address can be rejected\n-issue#4545: Reports Tab always shows 'Administration' despite a users permissions\n-issue#4546: When unauthorized, user may be redirected instead of notified\n-issue#4547: Add debug options to LDAP for diagnostic purposes\n-issue#4548: Rounding causes errors with variable substitution\n-issue#4549: Boost may become disabled due to an invalid path\n-issue#4551: Add support for PHP 8\n-issue#4552: Error messages are not always cleared, resulting in duplicated messages.\n-issue#4554: Add support for Automation under PHP 8\n-issue#4557: When selecting a Consolidation Function, errors may be reported\n-issue#4563: Breadcrumbs not always display the correct path\n-issue#4564: When clicking tabs, page may not always respond\n-issue#4567: Editing current user should prevent changes of account status\n-issue#4568: Authentication cache does not always use the correct realm\n-issue#4569: When editing users or groups, template permissions may not work as intended\n-issue#4571: When changing authentication method, unneeded settings may not be hidden\n-issue#4572: When basic authentication is used, login screen should not be seen\n-issue#4573: On larger systems, permission checks may render system unusable\n-issue#4575: When you delete a user, cookie data is not automatically removed\n-issue#4577: When editing current user, last administrator may be removed\n-issue#4578: The Cacti login algorithm is complicated to understand due to too much strait line code\n-issue#4580: When using Web Basic Authentication, users may be seen as guests\n-issue#4586: When viewing graphs, excess database queries may occur\n-issue#4587: Settings may be read more often than required\n-issue#4588: Unable to save host with multi-byte characters\n-issue#4589: When updating tables, ensure engine, row_format and charset\n-issue#4594: When selecting font, attempt to use system-based font before internally supplied version\n-issue#4597: Selective Device Debug does not work with Remote Data Collectors\n-issue#4598: Plugin tab does not stay visible when main poller is offline\n-issue#4603: When failing back to PHP GetText, module is not always selected\n-issue#4607: Configuration file may be improperly moved into the resource cache\n-issue#4609: When handling sessions, user agent may not always be present\n-issue#4610: When hiding disabled devices, some may still be shown\n-issue#4611: When replicating to remote pollers, plugins are not always properly sync'd\n-issue#4612: When using cookie authentication, Same Site support does not always work properly\n-issue#4613: Newer versions of MySQL/MariaDB may prevent structure replication changes\n-issue#4614: Add support for hooks during polling loop or at poller end\n-issue#4615: Plugin status on a Remote Data Collector may not always be detectable\n-issue#4616: When performing certain plugin actions, replication should be forced to Remote Collectors\n-issue#4617: When removing a plugin, removed tables are not removed from remote pollers\n-issue#4618: When plugin exceed runtimes, they should not be automatic disabled\n-issue#4620: When using CLI, Remote Data Collector scripts may connect to the wrong database\n-issue#4623: Boost does not operate as it should in certain situations\n-issue#4624: System uptime may be missing under certain circumstances\n-issue#4629: When removing many Graphs and Data Sources, polling cycles may overrun\n-issue#4630: Session data is not always started correctly\n-issue#4632: When creating a Datasource, Input Field Checking is not always enforced\n-issue#4634: When using Basic Authentication, the Logout Everywhere button should not be shown\n-issue#4645: When format file does not exist, changing certain settings may result in errors\n-issue#4651: Device Description is not consistent in Poller Cache view\n-issue#4652: After repopulating graph, navigation to check cumbersome\n-issue#4654: When saving a data template, replication may cause errors\n-issue#4658: When upgrading from pre-1.0, tree information may not properly update\n-issue#4659: When moving a device between pollers, errors may occur\n-issue#4666: Add date calculation support for PHP 8\n-issue#4671: Add poller sleeping support for PHP 8\n-issue#4672: When editing Reports, drag and drop may not function as intended\n-issue#4680: When data drive is full, viewing a Graph can result in errors\n-feature#4574: On larger systems, permissions may need alternative methods\n-feature#4631: When creating a Data Source Profile, allow additional choices for Heartbeat\n-feature#4636: Upgrade jQueryMulti-select to 3.0.1\n-feature#4637: Change select all options to use Font Awesome icons\n-feature#4641: Improve spine performance by storing the total number of system snmp_ports in use\n-feature#4663: Prevent Template User Accounts from being Removed\n-feature#4664: When managing by users, allow filtering by Realm\n-feature#4665: Allow plugins to supply template account names\n-feature#4667: When viewing logs, additional message types should be filterable\n-feature#4668: When creating a Graph Template Item, allow filtering by Data Template\n-feature#4669: Allow language handler to be selected via UI\n-feature#4673: Updated Device packages for Synology, Citrix NetScaler, Cisco ASA/Cisco\n-feature#4674: Add Advanced Ping Graph Template to initial Installable templates\n-feature#4675: Add LDAP Debug Mode option\n-feature#4676: Allow Reports to include devices not on a Tree\n-feature#4677: Allow Basic Authentication to display custom failure message\n\n1.2.19\n-security#4356: Further fixes for grave character security protection\n-issue: Over aggressive escaping causes menu visibility issues on Create Device page\n-issue#3787: Add SHA256 and AES256 security levels for SNMP polling\n-issue#4289: Import graph template(Preview Only) show color_id new value as a blank area\n-issue#4341: Editing graphs can cause errors due to missing sequence\n-issue#4342: When hovering over a Tree Graph, row shows same highlighting as Graph Edit screen\n-issue#4343: When RealTime is not active, console errors may appear\n-issue#4347: Race conditions may occur when multiple RRDtool processes are running\n-issue#4352: Creating graphs from templates may sometimes result in errors\n-issue#4353: When duplicating reports, errors may occur\n-issue#4375: Boost may be blocked by overflowing poller_output table\n-issue#4378: Template import may be blocked due to unmet dependency warnings with snmp ports\n-issue#4381: Newer MySQL versions may error if committing a transaction when not in one\n-issue#4382: SNMP Agent may not find a cache item\n-issue#4383: Correct issues running under PHP 8.x\n-issue#4391: When polling is disabled, boost may crash and creates many arch tables\n-issue#4396: When poller runs, memory tables may not always be present\n-issue#4400: Removal of redunant code\n-issue#4403: Timezones may sometimes be incorrectly calculated\n-issue#4404: Allow monitoring IPv6 with interface graphs\n-issue#4408: When a data source uses a Data Input Method, those without a mapping should be flagged\n-issue#4410: When RRDfile is not yet created, errors may appear when displaying the graph\n-issue#4419: Cacti missing key indexes that result in Preset pages slowdowns\n-issue#4420: Data Sources page shows no name when Data Source has no name cache\n-issue#4421: db_update_table function can not alter table from signed to unsigned\n-issue#4422: data remains in poller_output table even if it's flushed to rrd files\n-issue#4423: Parameter list for lib/database.php:db_connect_real() is not correct in 3 places\n-issue#4424: Offset is a reserved word in MariaDB 10.6 affecting Report\n-issue#4425: Rendering large trees slowed due to lack of permission caching\n-issue#4428: Error on interpretation of snmpUtime, when to big\n-issue#4431: Applying right axis formatting creates an error-image\n-issue#4435: Unable to Save Graph Settings from the Graphs pages\n-issue#4437: Graph Template Cache is nullified too often when Graph Automation is running\n-issue#4438: When Adding a Data Query to a Device, no Progress Spinner is shown\n-issue#4439: New Browser Breaks Plugins that depend on non UTC date time data\n-issue#4440: Undefined index: timeout_exceed /lib/poller.php on line: 1953\n-issue#4442: When testing remote poller connectivity Errors occour\n-issue#4443: When renaming poller errors occour\n-issue#4444: Removing spikes by Variance does not appear to be working beyond the first RRA\n-issue#4445: LDAP API lacks timeout options leading to bad login experiences\n-issue#4525: When using CMD for polling, pipes are not properly referenced for PHP scripts\n-feature: Add a normal/wrap class for general use\n-feature: Limit File Types available for Template Import operations\n-feature#1573: Cacti does not provide an option of providing a client side certificate for LDAP/AD authentication\n-feature#3113: Support Stronger Encryption Available Starting in Net-SNMP v5.8\n-feature#4299: Allow Cacti to use multiple possible LDAP servers\n-feature#4344: Add a 15 minute polling/sampling interval\n-feature#4385: Provide additional admin email notifications\n-feature#4390: Add warnings for undesired changes to plugin hook return values\n-feature#4409: When creating a Graph, make testing the Data Sources optional by Template\n-feature#4412: Update phpseclib to 2.0.33\n-feature#4413: Update jstree.js to 3.3.12\n-feature#4414: Improve performance of Cacti poller on heavily loaded systems\n-feature#4426: MariaDB recommendations need some tuning for recent updates\n\n1.2.18\n-security#4261: Lack of escaping on template import can lead to XSS exposure under 'midwinter' theme (CVE-2020-14424)\n-security#4276: Real time graphs can expose XSS issue\n-security#4282: Session IDs are not always recreated when logging out under PHP 5\n-issue#4250: Unable to create graphs due to Data Source verification failure\n-issue#4254: When poller first runs, time since last run produces an error\n-issue#4259: Data Template caching does not update and causes errors\n-issue#4263: Graphs with multiple data sources can no longer display percenticles\n-issue#4266: Incomplete items from a previous polling session may be updated twice\n-issue#4267: Unnecessary warnings appear when host name is not resolved\n-issue#4269: Installation Wizard can become stuck when creating graphs for default device\n-issue#4271: Continued timeout of registered processes\n-issue#4272: Unexpected errors may appear when using hostnames without a DNS domain\n-issue#4273: When adding a device from command line, testing of data sources can cause errors to be recorded\n-issue#4274: When you start to zoom a graph, the auto graph refresh should be disabled\n-issue#4279: Default Setting \"Device Threads\" will not be saved correctly\n-issue#4284: Whilst upgrading, errors in upgrade scripts prevent properly execution\n-issue#4293: Tree search does not take hosts belonging to a site into account\n-issue#4294: Tables outside of pre-built list that need fixing, cause bad unknown column errors\n-issue#4295: If a page contains multiple tables, a larger table can cause small ones to lose columns\n-issue#4297: Unable to search using regular expressions when trying to filter graphs\n-issue#4312: When using CMD.PHP as the poller, warnings can appear if you only use a subset of data input types\n-issue#4314: When disabling the snmpagent, you can introduce significant delay to data collection\n-issue#4315: Reduce repeatative warnings when resources are exhausted\n-issue#4316: Remove Spikes CLI interface is unable to provide localized spike, gap fill or float operations\n-issue#4321: Earlier versions of RRDTool do not correctly ignore previous updates\n-issue#4324: Date/Time format of replacement field on graph cannot be changed\n-issue#4325: When editing graph items, make identifying rows easier\n-issue#4326: When using large lists, ensure selection is visible in dropdown menus\n-issue#4330: Automation attempts to call undefined debug function\n-issue#4333: Under FreeBSD, allow ping to work properly for IPv6\n-issue#4367: Report owner - show at least the username when the full name is empty\n-feature#4258: Update phpseclib to 2.0.31\n-feature#4283: Content Security Policy may block Plugin functionality\n-feature#4317: Allow the Cacti administrator to perform bulk gap filling and floating in parallel\n-feature#4322: Update pace.js to version 1.2.4\n\n1.2.17\n-security#4019: Incorrect handling of fields led to potential XSS issues\n-security#4022: SQL Injection was possible due to incorrect validation order (CVE-2020-35701)\n-security#4035: Various XSS issues with HTML Forms handling\n-issue: CLI scripts should not have a max allowed runtime\n-issue: Normalize plugin hooks between user_admin.php and user_group_admin.php\n-issue#1052: TimeZones are not handled correctly with Daylight Savings changes\n-issue#3392: Allow plugins to customize device listing page\n-issue#3879: Allow Graph/Data Source with custom fields to prompt during manual creation\n-issue#3908: When poller overruns the script server can throw errors upon shutdown\n-issue#3936: Editing a graph created from Aggregate Graph can fail\n-issue#3945: CSV export can show NaN for date if TimeZone does not match system\n-issue#3969: SNMPv3 Password field does not correctly limit to size of database field\n-issue#3976: Font colors are being overridden leading to display issues\n-issue#3977: Database upgrade may fail when using upgrade_database.php\n-issue#3978: Input Validation was not handled correctly when displaying graph trees\n-issue#3981: Missing API include leads to runtime errors in Automation\n-issue#3985: Collation was not always handled correctly in the database library\n-issue#3988: Automation raises errors when default snmp options is set to none\n-issue#3990: PHP Information was not being displayed properly under Tech Support\n-issue#3999: Ensure database audit code attempts to use passwordless options before sending credentials\n-issue#4001: Ensure Cacti can support PHP 8\n-issue#4002: Pollers may sometimes not recover properly once they go offline\n-issue#4005: When viewing Realtime Graphs, validation errors may be seen for Size parameter\n-issue#4008: Massive decrease in poller performance due to unset variable\n-issue#4009: Ensure number format functions are consistent for i18n usage\n-issue#4021: Increase maximum number of device threads\n-issue#4031: Secondary filters on Data Collectors and Data Profiles do not work as expected\n-issue#4033: Action Icons changed to be consistent with admin UI\n-issue#4036: During discovery, Automation can throw unexpected errors due to null values\n-issue#4038: When creating new graphs, a second click is required even if not needed\n-issue#4042: RRD Updates can become disabled when saving performance options\n-issue#4043: Boost can become unresponsive when large number of archive tables exist\n-issue#4049: Enable sensitive graph information to be hidden from standard users\n-issue#4050: When showing table conversion script, the example path can be displayed incorrectly\n-issue#4056: Rename \"Show Exceptions\" checkbox to \"Only Show Exceptions\" which more actually reflects its function\n-issue#4060: When attempting to get client address, incorrect information may be returned\n-issue#4061: When getting date format, default options are not always honored\n-issue#4066: Enable Boost to utilize multiple processes\n-issue#4067: Disable BOOST image caching when using Graph Zoom features\n-issue#4068: When viewing graphs, individual graph sizes can be ignored in favour of global default\n-issue#4070: Summary data can fail to calculate when the RRDfile lacks the Data Source\n-issue#4073: Zoom functionality can fail when a graph has lost focus.\n-issue#4074: Realtime Images are not always adhering to defined format\n-issue#4075: LDAP Settings lead to confusion when setting up LDAP authentication\n-issue#4076: MariaDB tuning link points to a dead URL within System Utilities\n-issue#4077: If user has no permissions assigned and tries to login, a redirect loop occours\n-issue#4079: When checking current timestamps, make audit replace mysql function usage with preferred CURRENT_TIMESTAMP variable\n-issue#4080: Cacti regular expression searching does not quote expressions\n-issue#4082: RRDtool version detection not working for RRDproxy setup\n-issue#4083: RRDCleaner does not support RRDproxy\n-issue#4086: Large system performance negatively impacted due to $spikekill_templates behavior\n-issue#4092: On large systems, Primary ID usage on heavily used tables will overflow due to default MySQL variable size\n-issue#4095: When viewing Plugins page, icons can sometimes be misaligned\n-issue#4098: Graphs and Data Sources lists can become unresponsive on very large systems\n-issue#4100: When viewing User Admins, a division by zero error can sometimes be seen\n-issue#4105: Allow admins to define bulk walk repetition sizes\n-issue#4109: Realtime graphing can sometimes cause gaps in historic data\n-issue#4110: Graph Variables are not always parsed correctly leading to errors in log files\n-issue#4116: Upgrading large trees from 0.8.x to 1.x is slow\n-issue#4117: Script server throws errors if a command line argument includes a backslash\n-issue#4119: Implicit flushing is not always enabled, depending on OS, resulting in Script Server result issues\n-issue#4121: LDAP search filter cannot be configured if too many OUs or filters are nested\n-issue#4122: Automation causes SQL syntax errors when invalid operations are present\n-issue#4125: On completing the installation wizard, an internal server error can sometimes be observed\n-issue#4126: Deleting a damaged graph can sometimes led to removal of valid graphs too\n-issue#4127: When updating Trees, graph titles are calculated too often leading to unresponsiveness\n-issue#4130: On large systens, Graph creation can become unresponsive due to large number of data sources\n-issue#4131: A design flaw makes importing new Graph Template slow on large systems\n-issue#4134: MIB Caching does not always work as expected\n-issue#4135: On large Cacti installs, editing Data Templates is slow\n-issue#4136: When repairing database at command line, no option exists to skip table checks and force Data Source repair\n-issue#4141: Unusually long comments do not wrap when viewing graphs, and haven't in this CHANGELOG entry either\n-issue#4143: Prevent some false positive scenarios when detection orphan graphs\n-issue#4147: Poller items are evaluated too quickly when mixed polling cycles are used\n-issue#4148: Ensure automatic refresh of cacti log view works consistently\n-issue#4149: Ensure utilities show correct information when in offline mode\n-issue#4161: Data source template names should be shown in the respective \"suggested values\" sections\n-issue#4162: Allow Persistent Connections to MariaDB/MySQL to be configured\n-issue#4164: Unable to easily track Cacti login sessions when using database sessions\n-issue#4166: Auto-select text when focusing auto complete elements\n-issue#4169: Ensure Log Viewer 'Go' and 'Clear' buttons behave as expected\n-issue#4170: Enable full name tooltips for Alias/Description columns\n-issue#4173: Ensure Console menu icons are properly aligned\n-issue#4174: When using replication, ensure binary logging can be disabled\n-issue#4175: When syncing Templates, prevent false 'Damaged Graph' notifications from appearing\n-issue#4177: Simplify Graph/Template authorization searches when not using restricted mode\n-issue#4179: Correct class usage on Graph Sidebar Icons to be consistent\n-issue#4180: Remove logoff option when using basic authentication\n-issue#4181: Ensure realm names are more consistent\n-issue#4182: Allow Automatic Graph Creation to utilise Data Templates with Overriden Values\n-issue#4183: Processes can be terminated early due to incorrect timeout calculation\n-issue#4184: Ensure error logging is consistent when using CMD processor instead of spine\n-issue#4185: Updating Signal Handling to recommended standards for PHP 7.1+\n-issue#4186: When editing a Fixed String on Tree Rule it is improperly displayed as \"Unknown\"\n-issue#4187: Provide more direct method fo navigating to Data Source from Graph\n-issue#4188: Replacement variable names are difficult to find for Aggregate Graphs and Templates\n-issue#4189: Allow links from a page to its specific documentation\n-issue#4190: Augmenting roles can incorrectly link to roles instead of realms in rare cases\n-issue#4192: Devices search can return a black screen if device name contains the hash/pound # character\n-issue#4193: Allow command line reindex to work with disabled devices\n-issue#4195: When search text includes # character, filtering does not always work as expected\n-issue#4197: When attempting to do a rollback on versions, the installer will not restart\n-issue#4199: Allow Cacti administrator to define a min refresh interval to prevent graph gaps\n-issue#4205: When removing Data-query Associated Graph Templates, it deletes the graphs Templates from bottom to top\n-issue#4206: When a report was delayed, the report's time is incorrectly changed\n-issue#4215: Poller recovery starts multiple processes and fails to recover properly\n-issue#4223: Parallel boost restart due to timeout can result in errors.\n-issue#4227: When remote poller is in offline mode, data is written to more tables than necessary\n-issue#4228: Under specific circumstances, redirection issues can occur after login\n-issue#4229: When no snmp option is set, automation can incorrectly report a number of issues\n-issue#4232: Database TLS configuration requires client certificates as well\n-issue#4233: Potential typos and incomplete parameter lists for database connection variables\n-issue#4241: Tree sort mechanism does not take sites into account\n-issue#4251: Caching of Graph Titles can be incorrect\n-feature: Add Theme 'Midwinter'\n-feature: Update phpseclib to version 2.0.30\n-feature#645: Modify automation to test for data before creating graphs\n-feature#3513: Add hooks for plugins to show customize graph source and customize template url\n-feature#3572: Missing prompts during automation's device creation leads to blank data\n-feature#4012: Allow CSRF security key to be refreshed at command line\n-feature#4013: Allow remote pollers statistics to be cleared\n-feature#4113: Allow user to be automatically logged out after admin defined period\n-feature#4176: When replicating, ensure Cacti can detect and verify replica servers\n-feature#4210: Replace c3.js with billboard.js\n\n1.2.16\n-issue#3704: When generating a report, the Cascade to Branches function does not as expected\n-issue#3859: When viewing graphs, automatic refresh so not always work as expected\n-issue#3898: Realtime graph pop up counter bug\n-issue#3903: Undefined variable errors may occur when creating a new datasource\n-issue#3907: The cli-based installer does not exit with a non-zero exit code when error occurs\n-issue#3912: When an export is complete, sometimes the progress bar remains\n-issue#3915: When enabling many devices, a threshold can be reached causing a slowdown in the process\n-issue#3916: When performing actions against Devices, replicated device information could sometimes be lost\n-issue#3917: When using API to rename a tree node, backtrace may be incorrectly shown\n-issue#3919: When searching, valid pages can sometimes be shown as empty\n-issue#3920: When exporting data from graphs, not all data was properly included\n-issue#3924: Graph Templates filter is not updated after new graph created\n-issue#3926: Username and password on the login page is not visible in Classic theme\n-issue#3929: Improve wording of concurrent process and thread settings\n-issue#3930: Location filter should remove blank entries\n-issue#3931: When syncing data collectors, a reindex event may be triggered unnecessarily\n-issue#3932: Automation Networks allows discovery of invalid IP addresses\n-issue#3933: When changing permissions of the current user, they don't take effect immediately\n-issue#3935: When reindexing a device, an incorrect page was sometimes displayed\n-issue#3942: When repairing database, audit_database.php does not add missing columns\n-issue#3948: Spine 1.2.15 - Spine Encountered An Unhandled Exception Signal Number: '6' [11, Resource temporarily unavailable] (Spine thread)\n-issue#3949: Log page should not be empty if no log info exists\n-issue#3953: During upgrade, there are times when realms can be duplicated leading to SQL errors\n-issue#3957: When using ping.php, UDP response times are not interpreted properly\n-issue#3960: Improve warning you get when attempting to view a log file you don't have access to\n-issue#3962: When replicating files, scripts are not marked as executable\n-issue#3963: When creating plugin tables, collation is not set properly\n-feature: Update c3.js to version 0.7.20\n-feature: Update Chart.js to version 2.9.4\n-feature: Update phpseclib to version 2.0.29\n-feature: Update PHPMailer to version 6.1.8\n-feature: Use LSB shebang notation for cli scripts\n-feature: Add support for cactid daemon based launcher\n-feature#3923: Add ability to hide the Graph Drilldown icons\n-feature#3943: Add hooks for plugins to show custom Graph Source and custom Template URL (List View)\n\n1.2.15\n-issue#3643: When editing Maximum OIDs Per Get Request, blank value can cause errors\n-issue#3656: Boost may run more often than it should\n-issue#3693: Recache Event Loop can cause Interface Graphs to show gaps\n-issue#3703: When searching Graph Tree's, non matching devices remain visible\n-issue#3711: Page validation errors may occur when opening real time graphs\n-issue#3722: External Links do not always open if they are still open from previous usage\n-issue#3730: Cultural changes to various word usage\n-issue#3741: Replicate deleted device status instead of poller sync\n-issue#3743: Description field allows more characters entered than is stored\n-issue#3747: When installing or upgrading, LDAP functions may not always be included properly\n-issue#3748: Unable to remove discovered device\n-issue#3753: When installing or upgrading, PHP recommendations may not always return a valid value\n-issue#3755: Graph Templates has duplicate SQL delete statement\n-issue#3759: When syncing to remote poller, missing function errors may occur\n-issue#3760: When removing devices from remote pollers, devices may reappear without details\n-issue#3761: When removing devices, array errors may sometimes be recorded\n-issue#3763: Variable injection does not always work as expected\n-issue#3764: Editing Data Queries with multiple data templates can give errors about Suggested values\n-issue#3767: Progress bar does not provide enough visual information during long page loads\n-issue#3768: Some themes do not allow for a way to see which user is currently signed in\n-issue#3769: When viewing tables, allow users to force all columns to be visible\n-issue#3770: Column sizing is being lost between pages refreshes\n-issue#3771: When viewing input methods table, no ID is shown to help identify which method is being viewed\n-issue#3775: Filters do not always respect using keyboard to initiate searching\n-issue#3778: When exporting a data query, an invalid column name error can sometimes be shown\n-issue#3781: When checking if a view is allowed, having no session can result in errors\n-issue#3782: When removing devices via the CLI, undefined variable errors may be seen\n-issue#3786: Real Time Graphs may cause invalid index errors\n-issue#3790: On newer versions of MySQL/MariaDB, 'system' keyword can cause issues\n-issue#3793: Plugin setup can generate errors when reading options via system function\n-issue#3809: Plugin version numbers can be unexpectedly truncated\n-issue#3815: When PHP Session is set to autostart, an error can be reported as Cacti attempts to start it\n-issue#3820: When removing multiple items, selection process does not always work\n-issue#3821: When exporting colors, the indicator is not always removed upon completion\n-issue#3825: Unable to pass tree and leaf ID to 'graph_button' hook\n-issue#3827: When performing maintenance, various errors may sometimes be seen\n-issue#3828: When Guest User setting is active, current user is not always properly set\n-issue#3831: When installing Cacti, minor errors in text can be seen\n-issue#3835: Numbers are not always formatted properly when there are no decimal places\n-issue#3836: When viewing Real Time Graphs, an undefined index error may be recorded\n-issue#3844: Minor memory leaks and refresh issues when zooming on graphs\n-issue#3847: Real Time Graphs may sometimes fail due to folder permissions\n-issue#3849: Navigation can sometimes occur unexpectedly due to background timers\n-issue#3850: Trees management screen not reporting correct number of trees\n-issue#3858: Tree sequences can sometimes skip numbers during resorting\n-issue#3862: Guest user selection should not allow setting the currently logged in user\n-issue#3864: Links in Table Headers do not show clearly when in modern theme\n-issue#3868: Under some cases tree logic leads to undefined index errors\n-issue#3869: Cacti Data Debug can show errors if the Data Source is damaged or has been removed\n-issue#3871: When importing a data query, an invalid column name error can sometimes be shown\n-issue#3874: When using shift functions on graphs, negative values are not allowed\n-issue#3881: Correct issue when file is unreadable reporting no file was specified\n-issue#3883: Orphaned Plugins have no option to be removed\n-issue#3884: Update MySQL recommendations for Character Set and Colation\n-issue#3888: Correct sorting of IP addresses to be numeric not alpha\n-issue#3890: Saving a device should not always repopulate the poller cache\n-feature: Update FontAwesome to Version 5.14\n\n1.2.14\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3678: More or Equal incorrect highlighting max_heap_table_size and tmp_table_size\n-issue#3694: Spikekill `percent` is converted from percent to decimal twice, making it 1/100 of the true size\n-issue#3713: When sorting data debug checks by user, no results are shown and errors recorded\n-issue#3719: When tooltip is too long, the scroll bar exists, and cannot be scrolled, which makes the tooltip be hided\n-issue#3723: Improper escaping of error message leads to XSS during template import preview\n-issue#3728: Invalid uptime is not handled properly\n-issue#3737: Poller functions may not run if 'processes' table is missing\n-feature#3615: Poller keeps using old IP address for a device\n\n1.2.13\n-security#3544: jQuery XSS vulnerabilities require vendor package update (CVE-2020-11022 / CVE-2020-11023)\n-security#3549: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-23226)\n-security#3582: Update PHPMailer to 6.1.6 (CVE-2020-13625)\n-security#3622: SQL Injection vulnerability due to input validation failure when editing colors (CVE-2020-14295)\n-security#3628: Lack of escaping on template import can lead to XSS exposure\n-issue#3517: When generating reports, function looping can occur resulting in 100% cpu usage\n-issue#3525: When viewing Graphs, zoom functionality prevents drag and drop of image\n-issue#3527: When using 95th Percentiles, undefined index errors can be generated\n-issue#3532: When using Realtime, if no graph contents are present an error is generated\n-issue#3533: When exporting data, Start date for RRDfile does not match start date of first data row\n-issue#3536: When using Navigation Menu, Show/Hide in Response mode does not always work\n-issue#3538: When using Realtime, race conditions between browser and function loading can occur\n-issue#3543: When exporting CSV data, Unicode prefix is not properly set\n-issue#3551: Authentication can fail when using Web Basic Authentication and Template User\n-issue#3553: When attempting to view an aggregate graph that does not exist, many errors are generated\n-issue#3563: Current orphan handling disrupts graphing transient indexes\n-issue#3566: Automation incorrectly attempts to use MacTrack to duplicate options\n-issue#3567: When Boost runs, locks are not always released properly and crash is detected\n-issue#3569: Invalid font results in large number of log entries\n-issue#3571: Correct various runtime errors due to incorrect message variables\n-issue#3574: Saving Graph Template Items take a long time on large systems\n-issue#3577: Hosts are being incorrectly filtered when first displaying with filter set to all\n-issue#3579: Graphs can incorrectly show as 'Empty Graph'\n-issue#3581: Realtime graph window is not resizing properly\n-issue#3588: Validation warnings are generated when viewing/editing devices\n-issue#3594: Automation hangs for certain schedule types\n-issue#3595: Template to Device sync text is not consistent\n-issue#3596: When importing template, resources aren't checked properly\n-issue#3597: Template to Device sync provides no feedback\n-issue#3598: When editing graphs and graph templates, back button results in broken page\n-issue#3599: When downgrading, templates are fully selected for install\n-issue#3601: When a device is down, instate can show wrong time\n-issue#3607: When session timeout occurs, subsequent authorized access to areas can become blocked\n-issue#3611: Allow CHANGELOG to be viewable from the GUI\n-issue#3613: When modifying trees, devices and graphs lists ignore Autocomplete Rows setting\n-issue#3614: When section tabs wrap, the title of the first section can become obscured\n-issue#3624: When previewing graphs, sometimes the images fail to appear\n-issue#3629: Log files are not rotated properly on remote pollers\n-issue#3631: Command line scripts do not allow an unlimited runtime causing timeouts\n-issue#3632: When mysql connection fails, various unexpected errors are recorded\n-issue#3635: Automate generates undefined index errors when communicating with remote pollers\n-issue#3639: When updating a device, duplicate entry errors occur when inserting to the database\n-issue#3646: Adding datasource fails from CLI due to missing function\n-issue#3651: Editing any item on an Aggregate Graph that has been converted to a normal graph breaks entire graph\n-issue#3655: Rare race condition between Boost and Poller can result in unexpected missing table errors\n-issue#3659: When viewing logs, unexpected 'needle' errors can be seen on rare occasions\n-issue#3663: Disabling a Data Collector can cause unexpected errors\n-issue#3668: When Input Field is in error, message reports field will be highlighted which is incorrect\n-issue#3669: When adding an Input Field, the Input Method can be renamed unexpected\n-issue#3673: Spikekill does not receive correct `avgnan` value when launching from GUI\n-issue#3676: Device not showing up in device page but showing up in Monitor tab\n-issue#3681: Item movement arrows do not properly align on all themes\n-issue#3682: When in 'Time Graph View' mode, Zoom features do not work correctly\n-feature#3611: Allow CHANGELOG to be viewable from the GUI\n-feature#3647: When adding datasource fails from CLI, created Datasource ID should be printed\n-feature#3666: Update jstree.js to 3.3.10\n-feature#3688: Update phpseclib to 2.0.28\n\n1.2.12\n-security#3467: Lack of escaping of color items can lead to XSS exposure (CVE-2020-7106)\n-issue#3422: When Graph Item is not linked to a data source, Comments do not always get variables substituted correctly\n-issue#3424: Hosts are being incorrectly filtered when no location filter is set\n-issue#3427: When exporting to a CSV with unicode characters, contents can become garbled\n-issue#3429: When using SNMP v3, Automation can report extraneous warnings\n-issue#3432: Rare race condition exists when both boost and dsstats enabled\n-issue#3434: When attempting to exploit Cacti using alert, unexpected errors can be seen\n-issue#3436: Unable to login due to incorrect default of Cookie Domains in config.php.dist\n-issue#3438: When upgrading to 1.2.11, installer can appear to stop at 42%\n-issue#3447: SNMP Issues on recent version of PHP\n-issue#3449: When viewing the installation wizard's directory permission step, items are overlapping unexpectedly\n-issue#3450: When installing Cacti under XAMPP and PHP 7.4, exceptions are being recorded and installation fails\n-issue#3452: New Content-Security-Policy prevents External Links from being opened\n-issue#3454: Cacti's Reports are not displaying messages correctly\n-issue#3457: Graphs can not properly handle negative axis values\n-issue#3459: When installing a new remote poller, connection tests can incorrectly fail\n-issue#3460: Addtional changes to allow plugin folder/display names to be handled better\n-issue#3462: Increase default memory limit for cli scripts to prevent runtime memory issues\n-issue#3463: When listing VDEF's, selecting 'has graph' can cause unexpected exceptions in logs\n-issue#3468: Graph rules cannot be created for automation\n-issue#3474: The SSL option to set the SSL_CA should be optional for Client Connections\n-issue#3477: Boost leaking memory when a large number of Data Sources disabled\n-issue#3478: Reindexing can sometimes run longer than expected\n-issue#3479: When viewing the Data Query table interface, the Data Input Method should be right aligned\n-issue#3483: When recording log entries, cacti should default to hyphenated date format\n-issue#3484: When editing SNMP v3 passwords, previous setting is not obfuscated\n-issue#3488: In automation, when viewing an 'SNMP option set', the private passphrase is in clear\n-issue#3495: When installing templates, default 'all' selection will reset all existing graphs, removing customisations\n-issue#3496: Graph Items can show a double percent sign incorrectly\n-issue#3502: When viewing Graphs, can not switch between list, preview and tree submodes\n-issue#3504: Viewing graphs before the poller has run for the first time can produce unexpected errors\n-issue#3505: When viewing graph previews, clicking Go or Refresh prevents calendars from working\n-issue#3506: After successfully logging in, a user can become automatically logged out again\n-issue#3507: Changes to JavaScript's Storage API cause exceptions to be thrown\n-issue#3510: Only guests can actually guest only pages, logged in users are denied access incorrectly\n-issue#3512: When plugins update, registered files list cannot always be updated\n-issue#3520: When viewing graphs, shifting time does not work when using non-english languages\n-issue#3576: LDAP Authentication succeeds, but login fails due to bad session handling\n-issue#3629: Log files are not rotated properly on remote pollers\n-feature#3480: Created 'custom_denied' hook to allow customisation of permission denied notifications\n-feature#3498: Update js.storage.js to 1.1.0\n-feature#3499: Update jstree.js to 3.3.9\n-feature#3500: Update phpseclib to 2.0.27\n\n1.2.11\n-security#1566: Add SameSite support for cookies\n-security#1985: Cookie should be properly verified against password\n-security#3342: CSRF at Admin Email\n-security#3343: Improper Access Control on disabling a user.\n-security#3414: Update to jQuery 3.4.1 to resolve XSS issues with jQuery 3.3.1\n-issue#2265: When attempting to save Graph field, query_ifSpeed is not properly validated\n-issue#2400: Allow ability to duplicate site settings\n-issue#2428: Make plugins non-case sensitive for folder names, whilst allowing nicer display names\n-issue#2580: When running DSSTATS, system isn't properly detecting that another is already running\n-issue#2853: Discovered Devices filtering do not include snmp description or name\n-issue#3231: Allow user to unlock a tree that has been locked for editing by another\n-issue#3237: Report gets resent every poller cycle\n-issue#3247: Language source files do not update \"PO-Revision-Date\" attribute\n-issue#3261: Automation rules aren't run for new devices on remote data collectors\n-issue#3296: Bad PHP memory limit values can result in failed upgrades\n-issue#3299: When using php-snmp and setting SNMPv3, warning is now shown as library does not support it properly\n-issue#3303: When installing under Windows OS, path expansion is not converted to PHP required format\n-issue#3310: When using 32-bit OS, automation errors can be seen due to subnet mask calculations\n-issue#3312: Console menu does not auto-expand for graph item editor page\n-issue#3313: When installing, multiple issues can be seen due to bad packages\n-issue#3314: Script Server has invalid debug code left in\n-issue#3317: Warnings can appear from CSRF Magic library due to multiple token values being found\n-issue#3319: Errors can occur upgrading from 0.8.x due to incorrectly detected data source profile id\n-issue#3322: When searching for LDAP accounts, allow recursive searching\n-issue#3330: Packages that are not properly formatted can cause installation issues\n-issue#3334: When upgrading from 0.8.x Automation SNMP Options should be populated\n-issue#3335: Unable to hide Device based Aggregate Graphs on Tree\n-issue#3336: Plugins need the ability to relax some content security policies in order to work properly\n-issue#3340: Undefined variable warning can appear when using 95th percentile graphs\n-issue#3341: MoTranslator does not appear to be handing null values properly\n-issue#3345: When attempting to refresh datetime picker, unexpected results can appear\n-issue#3346: When attempting to rewrite octet strings, extra space breaks pattern matching\n-issue#3348: When attempting to handle Orphans and/or Sync Graphs, results are not as expected\n-issue#3349: Prevent setting the PHP variable max_input_vars since it is read only\n-issue#3350: When editing a data source template, inconsistent results can be seen due to database query\n-issue#3355: When viewing raw graph data via the GUI, values are not always calculated correctly\n-issue#3357: Tree Search textbox resizes to 0 in some cases\n-issue#3360: When using guest accounts, after several timeouts result in refreshes, guest becomes logged out\n-issue#3363: The current user and user group permissions pages are not responsive\n-issue#3367: When Data Queries timeout, data is removed from the Host SNMP Cache table causing issues\n-issue#3368: Saving a Graph Template Item fails due to missing includes\n-issue#3373: When logging in via LDAP, ActiveDirectory would sometimes report insufficient access\n-issue#3375: When polling more often than default period of collecting data, distribution of collected data was not occurring\n-issue#3376: Improve speed when recovering from a poller from offline state\n-issue#3378: When attempting to check whether to include MoTranslator, typo makes it appear unavailable\n-issue#3380: php error when trigger threshold sendmail\n-issue#3386: Second data collector shows as running when its has no items to gather\n-issue#3387: Minor corrections to CSRF Magic\n-issue#3388: Naming of CLI programs does not always match name used within syntax usage advice\n-issue#3390: Incorrect breadcrumb bar if current tab is not \"Graphs\"\n-issue#3402: Cacti scores low on performance audit on lighthouse audit\n-issue#3408: CSRF Secret path is not passed properly when attempting to initialize secret\n-issue#3409: Issues with navigation link activations to other base Cacti pages\n-issue#3410: Zoom looses focus in advanced mode while crossing chart border\n-issue#3411: When upgrading a primary server, full synchronization is not happening as expected\n-issue#3412: When upgrading a primary server, automation templates are removed\n-issue#3413: When upgrading and choosing to upgrade your packages, installer finishes without package data in log\n-feature#1551: Allow system uptime to be a variable for use with graphs\n-feature#1990: Plugin Realm should have a 'role' to help maintain changes between plugins\n-feature#2110: Add Refresh Interval to Data Collectors display\n-feature#2156: Add Location based filtering\n-feature#2236: Allow for Purging of Data Source Statistics from the GUI\n-feature#2268: Restore ability to duplicate a data profile\n-feature#2534: Enhance table navigation bars to support systems with larger number of items\n-feature#2688: Increase length of Graph Item 'value' field to support pango-markup better\n-feature#3304: Allow Basic Auth Accounts to be mapped by CSV file\n-feature#3366: Make form elements under checkbox_groups flow using flex grid style\n-feature#3374: Set the domain attribute to secure cookies for the 'remember me' option\n-feature#3403: Enhance the \"Graph Debug Mode\" to display RRDtool Command lengths and excess warnings\n\n1.2.10\n-security#3285: When guest users have access to realtime graphs, remote code could be executed (CVE-2020-8813)\n-issue#3240: When using User Domains, global template user is used instead of the configured domain template user\n-issue#3245: Unix timestamps after Sep 13 2020 are rejected as graph start/end arguments\n-issue#3246: When upgrading with remote collectors, sync status does not always return properly\n-issue#3250: When PHP memory limit is set to -1, recommendation value fails\n-issue#3253: Upgrade can stall when checking permissions on csrf-secret.php\n-issue#3254: Installer shows script owner rather than running user for suggested chown command\n-issue#3266: When setting User Groups to 'Defer to the User', setting can lead to user being told they have no permissions\n-issue#3269: When searching Graphs under a Chinese language, an unexpected error as sometimes shown\n-issue#3274: When editing a tree, multiple device drag/drop does not work\n-issue#3276: When spine aborts, script server can be left wanting or generating unnecessary logs\n-issue#3277: When boost does not find an initial time, numeric errors can be raised\n-issue#3281: When changing Graph Template options, incorrect image format may be selected\n-issue#3282: Graph's can be sized incorrectly if image is SVG format\n-issue#3283: When setting a file path, valid characters not recognised properly\n-issue#3287: When using graph template 'Cacti Stats - User Logins', an incorrect count of invalid users can be seen\n-issue#3288: When on Device page, pressing 'Go' on the filter caused Device New menu pick to appear\n-issue#3289: When using CMD.PHP, poller id is not always shown properly\n-issue#3290: When using CMD.PHP, inconsistent device logging levels may occur\n-issue#3298: When initialising fields in JavaScript, text/textarea elements have width set to zero if it is hidden by parent\n-issue#3302: Editing a Graph Template does not show the Data Template name\n\n1.2.9\n-security#3191: Lack of escaping on some pages can lead to XSS exposure (CVE-2020-7106)\n-security#3201: Remote Code Execution due to input validation failure in Performance Boost Debug Log (CVE-2020-7237)\n-issue#2937: Devices still show in lists despite being deleted\n-issue#3038: When editing an aggregate on smaller screens, layout may not be correct\n-issue#3136: Upgrade may fail between 1.2.7 and 1.2.8 if incompatible database format used\n-issue#3142: Chrome sets graphs tree navigation view to width 0px\n-issue#3146: Unable to create aggregate graphs on new installations\n-issue#3149: After refresh of page, tooltips stop working\n-issue#3150: When using Time Graph View, Zooming can cause errors\n-issue#3151: Passing glue string after array is deprecated in PHP 7.4\n-issue#3155: Aggregate does not correctly follow color template when reordered\n-issue#3156: On new installs, gprint_format was missing from table aggregate_graphs\n-issue#3157: Back button not working properly with Classic theme\n-issue#3158: Classic theme show only 3 tabs on mobile device. Don't show Console menu\n-issue#3159: PHP Memory is not correctly identified when value is not in megabytes\n-issue#3161: When the poller_output_boost table is missing, recreate it before a poller run\n-issue#3163: When using RPMlint, Free Software Foundation address is shown to be incorrect\n-issue#3165: Zoom looses its focus after all graphs on page rendered\n-issue#3166: When changing zoom level, graphs are resized inappropriately at the end\n-issue#3167: Installer should initialize the csrf-secret.php file automatically\n-issue#3168: sqltable_to_php.php script does not pick up row_format\n-issue#3177: Remove legacy plugin hook that presents potential 3rd party security issues\n-issue#3178: The change password page is not displaying the rules\n-issue#3180: Receiving undefined index errors when working with some Data Queries\n-issue#3181: When configuration file is unreadable, Cacti shows database connection errors if non defaults are needed\n-issue#3182: When a database connection error occurs, there is no way to report actual error\n-issue#3184: Improve program path detection by using system path and PHP_BINDIR\n-issue#3193: Starting with MySQL 5.7 some sql_mode variables are required for some plugins\n-issue#3196: Minimize use of eval() in JavaScript due to emerging Content-Security-Context guidelines\n-issue#3200: Unable to mass change Graph Template image format in mass\n-issue#3206: Converted aggregate graph cannot be edited\n-issue#3209: Error occurs when Creating New Graphs through Automatically Added Devices using Sync Device Template\n-issue#3216: When editing a Data Source Profile size is shown as 'N/A'\n-issue#3224: When removing graphs by command line, regex is not properly validated when empty\n-issue#3225: Unable to Import Templates due to invalid dependency hash\n-issue#3226: When processing secpass login, failed logins are not recorded\n-issue#3228: Login page does not remember the last realm used by user\n-issue#3232: When editing HRULE and VRULE items, color selector was not presented\n-issue#3233: When working with non-templated graphs, it can be difficult to determine what items represent\n-issue#3235: Transient errors may occur with table poller_output_boost_arch\n\n1.2.8\n-security#3025: CVE-2019-17357 When viewing graphs, some input variables are not properly checked (SQL injection possible)\n-security#3026: CVE-2019-17358 When deserializating data, ensure basic sanitization has been performed\n-security#3066: When using HTTPS, secure cookie to prevent potential weakness\n-issue#1228: Any tree or branch with a long name force main content off screen\n-issue#2133: Long snmp_indexes are being cut off\n-issue#2888: Long hostnames cause template filter to go off page\n-issue#2987: Changing Color Template does not update Aggregate\n-issue#2989: Allow Remote Data Collectors to maintain their own path variables\n-issue#2991: Cacti Statistics device template can generate unexpected errors\n-issue#2995: When editing a report, column setting may be ignored incorrectly\n-issue#2996: When editing a user, graph options do not properly reflect previously saved settings\n-issue#2998: Session performance issues due to excessive use for database storage\n-issue#2999: Blank arguments can lead to extra spaces in script arguments\n-issue#3006: Boost generates undefined variables warning during poller run\n-issue#3011: i18n logging does not check write permission exists\n-issue#3012: When viewing realtime graphs, some input variables are not properly checked\n-issue#3013: Allow legends to be modified for Aggregate Graphs\n-issue#3017: Automation network range with spaces fails validation\n-issue#3019: User selected language is not always adhered to\n-issue#3021: Tree view cuts off at the bottom of page on modern theme\n-issue#3023: When clicking highlighted tab, side panel is not always shown/hidden correctly\n-issue#3027: Aggregate Graph re-ordering does not work\n-issue#3028: When zooming a graph, unable to reach edge of graph without losing focus\n-issue#3030: Pace continues to run even after a page is finished rendering\n-issue#3032: Graphs may select MAX instead of AVERAGE as consolidation function even if there is no item with MAX present.\n-issue#3035: When editing a tree, can not remove entries due to CSS bug\n-issue#3037: When emptying poller output using cli, debug functions are not properly included\n-issue#3039: Allow packagers to be able to specify an alternate location of csrf-secret.php file\n-issue#3040: When running automation, discovery can still run even if cancelled\n-issue#3041: When running automation, scans do not always respond to being cancelled\n-issue#3042: When running automation, scan can fail when selecting remote pollers\n-issue#3045: When viewing Aggregate Graphs, an error due to undefined referrer may occur\n-issue#3047: When saving settings, ignore remote pollers who have not checked in recently\n-issue#3050: When viewing graph trees, some input variables are not properly checked\n-issue#3052: When editing CDEF's, slow database performance can occur\n-issue#3053: When viewing graph thumbnails, some input variables are not properly checked\n-issue#3055: During install/upgrade, database tests are not performed correctly\n-issue#3059: When using nth_percentile, correct value is not always returned if using MAX consolidation\n-issue#3060: When upgrading from older MySQL databases, format is not changed from compact to dynamic\n-issue#3061: When running automation, allow SNMP to be used as a ping method\n-issue#3068: When administrating users, some input variables are not properly checked\n-issue#3070: Improve database logging when a crashed table is encountered\n-issue#3073: Automation network range does not always produce the correct start/end values\n-issue#3078: When viewing graph debug from remote data collector, File Not Found warnings can appear incorrectly\n-issue#3079: Allow domain names to be stripped from a device's long description\n-issue#3080: Remote Agent throws warnings that graph_nolegend has not been sanitized\n-issue#3085: When editing a poller, ensure each listening IP is unique\n-issue#3081: External Links are not showing a glyph when they appear on the Console menu\n-issue#3089: When viewing graphs in realtime, undefined variable can be logged for 95th Percentile graphs\n-issue#3099: Graph template 'Linux - Memory Usage' has the wrong unit on its vertical_label\n-issue#3101: Polling times can be slightly inconsistent due\n-issue#3104: When viewing graphs, a byref error can be seen in the error logs\n-issue#3105: When viewing hosts, some input variables are not properly checked\n-issue#3111: When adding devices via command line, bad SNMP versions are not reported\n-issue#3112: When zooming on Graphs, too many requests are being made causing slowness\n-issue#3114: Support for USB devices that change name due to their hosts restarting\n-issue#3118: When converting tables, the dynamic row format should be selected\n-issue#3119: Main Data Collector should perform a Full Sync whenever it is installed/upgraded\n-issue#3120: Correct issues causing incompatibility with PHP 7.4\n-issue#3121: When converting tables during install, show what will be changed\n-issue#3123: Named colors table is not properly imported/upgraded\n-issue#3124: When a second data collector is added, boost is not enabled automatically\n-issue#3128: i18n handler checks for existence of wrong mo file\n-issue#3129: Logout repeated occurs even when already logged out\n-issue#3132: Installer fails to continue if automation range is array of networks\n-issue#3098: Support percent sign(%) in graph gprint item like legend area.\n-feature#3077: Allow disabling remote poller resource cache replication to support upgrade testing\n\n1.2.7\n-security#2964: CVE-2019-16723 Security issue allows to view all graphs\n-issue#1181: When opening the Scheduler, it may appear off screen when opened near the bottom of a window\n-issue#2894: When using Remote Data Collectors, database information and recommendations may show Incorrect values\n-issue#2895: When using data sources from different RRDs, Percentile calculation may be incorrect\n-issue#2899: When displaying a form, variable substitution may not always work as expected\n-issue#2922: When running a data query, the result may come back as undefined\n-issue#2925: When using consolidation functions, retrieving the first step can cause errors\n-issue#2926: When editing a graph, variable validation errors may prevent changes from being saved\n-issue#2929: Boost performance may become poor even in single server mode\n-issue#2930: RRDtool can generate errors to standard output which can corrupt images\n-issue#2932: When RRDTool generates an error creating an image, it is not always reportedly properly\n-issue#2936: Installer will loop when number of tables exceeds PHP's max_input_vars limit\n-issue#2938: Under CentOS packages, upgrade_database.php script uses incorrect location for DB upgrade scripts\n-issue#2940: Images are not always properly sized until the page size changes\n-issue#2949: Order icons may not be properly aligned\n-issue#2951: Allow legends to be modified for Aggregate Graphs\n-issue#2958: Drop down autocomplete lists do not always open as expected\n-issue#2961: When syncing device templates, undefined function may be raised\n-issue#2963: When running ss_cpoller script, avgTime incorrect returns maxTime\n-issue#2966: Realtime popup windows do not always honor settings\n-issue#2967: When using Spikekill, gap and range fill are not operating as expected\n-issue#2970: When a user edits their profile, buttons may appear as unusable whilst still being enabled\n-issue#2973: User menu does not always display properly on mobile devices\n-issue#2974: Script Server can raise unexpected warnings when 'arg_num_indexes' set but not found in data source\n-issue#2975: Datasource Debug does not properly handle European numbers in certain circumstances\n-issue#2976: Boost messages should be stored in their own log file\n-issue#2977: Data updates with past timestamps can cause boost errors\n-issue#2978: Moving hosts between data collectors is slow\n-issue#2979: Multi Output Fields are not parsed correctly\n-issue#2984: When checking SQL fields, value was not always primed\n-issue#2986: Selecting 'Devices' menu pick closes 'Management' menu\n-feature#2943: Allow all Data Queries of a device to be re-indexed at once\n-feature#2952: If device is down or threshold breached, highlight in tree view\n-feature#2985: Update phpseclib to 2.0.23\n\n1.2.6\n-issue#2794: Graph template not saved on graph edit\n-issue#2825: \"innodb_doublewrite = off\" possibly dangerous recommendation\n-issue#2829: PHP recommendations always see memory limit as unlimited\n-issue#2830: Disabled Top/Bottom external links should not be displayed\n-issue#2832: Install/Upgrade log does not show anything\n-issue#2833: Undefined index can occur when data source does not have an snmp_index\n-issue#2834: Boost performance drops on very large systems\n-issue#2835: When creating graphs and inneficient query is causing long creation times\n-issue#2837: Sunrise theme does not render checkboxes 100% correctly\n-issue#2838: jQueryMultiselect does not match upstream due to forking\n-issue#2839: Non regular expression search filters don't support international characters\n-issue#2841: Total count is wrong after searching for External Link pages\n-issue#2843: DSStats reruns Daily Aggregation every minute\n-issue#2844: Autocomplete settings for passwords are not properly defined\n-issue#2845: Data Template can't be edited when it is in use\n-issue#2846: Allow tooltips for section headers with 'question' icon\n-issue#2847: Permanently convert an Aggregate to a regular graph\n-issue#2848: Aggregate graphs get clipped due to incorrect date range\n-issue#2856: Aggregate issues with very long RRDtool command lines\n-issue#2857: When trying to find the best index to use, a 'must implement Countable' warning appears\n-issue#2860: When testing remote poller connections during install, undefined variable warning can occur\n-issue#2862: Automation does not calculate network information correctly for single hosts\n-issue#2866: Add poller ID to subject for admin notifications\n-issue#2869: When creating aggregates from Graphs, JavaScript issues can occur\n-issue#2872: Add support for MySQL 8 and use of grouping as name for a column\n-issue#2875: Undefined variable when removing spikes in some cases\n-issue#2877: When attempting to send report, undefined function 'get_tinespan' messages appear\n-issue#2878: Function get_magic_quotes_gpc() is now deprecated in PHP 7.4\n-issue#2879: Switching from authPriv to authNoPriv produces error when saving\n-issue#2884: Replication continues to occur when poller has been disabled\n-issue#2891: Script server script ss_fping.php generates error when not called by script server\n-issue#2901: Poller overrun warning message is badly worded\n-issue#2902: Mailer incorrectly reports it is sending to noone\n-issue#2903: PHP recommendations can generate a warning causing JSON issues\n-issue#2905: Sorting plugins by version can lead to unexpected ordering\n-issue#2907: SSL column for multiple pollers can be incorrectly set causing SQL errors\n-issue#2908: When URL_PATH is blank, it should assume that it is '/'\n-issue#2909: Correct usage of affect vs effect in strings\n-issue#2910: Can not show user menu when in portrait mode on mobile devices\n-issue#2911: Graph variables are not always encoded to JSON properly resulting in warnings\n-issue#2912: Navigation cache can sometimes be corrupted resulting in a non-array value\n-issue#2913: When adding new graphs, the type of graph is not remembered\n-issue#2917: Action icons next to graphs can sometimes become unselectable due to zoom\n-issue#2919: When refreshing menu, selected items are sometimes lost and submenu items can become hidden\n\n1.2.5\n-issue#1978: Popup Menus can appear off screen when using Graph Thumbnails\n-issue#2282: Installation wizard does not detect RRDtool version correctly\n-issue#2524: When editing a tree, Drag and Drop of Devices does not always work as expected\n-issue#2573: Associated Graph Template for Data Query can sometime disappear\n-issue#2656: GPRINT text_format does not replace Data Query and Host Fields\n-issue#2661: Automation does not always calculate network range/subnet correctly\n-issue#2663: Some legacy Data Queries can not determine their index order causing broken graphs\n-issue#2674: Large strings can sometimes cause language translation can fail\n-issue#2719: Automation may sometimes create empty graphs\n-issue#2721: When replacing '|input_xxxx|' strings, undefined index can occur\n-issue#2722: Calls to _db_replace() are not consistent resulting in warnings\n-issue#2723: When replicating to remote pollers, Undefined Variable errors may be seen\n-issue#2724: When graphing HRULE items, 'Only Variables should be passed by reference' error may be seen\n-issue#2725: When viewing logs in utilities, filenames should be limited the same as clog\n-issue#2726: During Automation logging, include the Rule ID that triggers the creation of an item\n-issue#2732: When using basic authentication, automatically strip any @domain information\n-issue#2734: Allow non-english labels to be used on Graph Templates\n-issue#2727: When using Polling Hosts Template, warnings can be issued when CMD.PHP is the poller\n-issue#2733: When processing SNMP data, space delimited hex strings do not always convert into MAC addresses\n-issue#2735: Mouse cursor should show as default pointer if column is not sortable\n-issue#2736: When using MySQL 8 or above, 'function' is considered a reserved word unless quoted\n-issue#2741: Various errors can occur due to undefined or incorrect variable names\n-issue#2742: Various errors can occur due to undefined or incorrect variable names\n-issue#2743: Attempts to close a tooltip when no tooltip has been set may cause errors\n-issue#2744: When changing password, undefined index error can occur if user is not logged in\n-issue#2748: If PHP location setting is invalid during install/upgrade, this should be notified on modules page\n-issue#2750: When performing multiple sort, highlighting of content occurs\n-issue#2751: When editing a Tree, display filter may not allow 'All' option to work\n-issue#2752: When running verbose query on device, you are unable to copy text from items\n-issue#2753: Unable to copy entire verbose query using clipboard command\n-issue#2757: Page Navigation can be subject to XSS injection\n-issue#2758: Various sensitive directories are browsable if web server directory browsing is enabled\n-issue#2760: Unable to add items into a report\n-issue#2762: Creating an aggregate graph can sometimes fail due to unknown RRD tools error\n-issue#2766: When modifying Aggregate Templates, changes are not always cascaded to Graph\n-issue#2768: Aggregate Graphs may sometimes show the wrong row count\n-issue#2770: ItemType is not updated when saving Report Items\n-issue#2772: Add tooltip support to html_header() and html_header_checkbox()\n-issue#2775: Remote pollers may sometimes fail to replicate data back to main system\n-issue#2777: Attempting to edit a non-existent report generates an error\n-issue#2778: When rendering graphs, resizing can sometimes occur repeatedly\n-issue#2779: On new installations, automation rules for Interface Graphs are broken\n-issue#2780: Upgrade database script not actually upgrading Cacti\n-issue#2782: When replicating the syslog plugin, the configuration file is ignored causing errors\n-issue#2783: When limiting the number of displayed characters, international characters may sometimes display incorrectly\n-issue#2784: When removing a device with graphs but no data sources , errors are generated\n-issue#2785: When editing a graph rule, warnings incorrectly appear about unsaved changes\n-issue#2792: When a checkbox 'friendly name' has a comma, checkbox functionality stops working\n-issue#2797: When upgrading from before 1.x, SuperLinks view permissions may not be correct\n-issue#2799: Under heavy use of Real Time Graphs, SQL errors may start appearing\n-issue#2800: When editing a tree, using a comma in the search field stops search from working\n-issue#2802: If a Device lacks ifName, an alternative field is not always found even if available\n-issue#2807: When editing a Data Template that has dependant graphs, some attributes should not be modifiable\n-issue#2808: When navigating a tree, the layout may unexpectedly move\n-issue#2814: When viewing the utilities page, HTML tags may be seen rather than rendered\n-issue#2816: When viewing logs, paging does not always working correctly\n-issue#2818: Automation can sometimes incorrectly add duplicate devices with the same sysname\n-issue#2820: When path is blank, is_resource_writable() will generate 'Uninitialized string offset: -1'\n-issue#2821: When the desired locale can not be located, a number format issue may occur\n-feature#2728: Update phpseclib to 2.0.17\n-feature#2809: Update c3.js & d3.js\n-feature#2730: Update jstree.js to 3.3.8\n-feature#2754: Allow Devices, Graphs and Data Sources to be searched by ID\n-feature#2765: When editing a tree, allow cascading selection of available graphics\n-feature#2805: Merged plugins are not always upgraded correctly\n-feature#2823: Enhance the splice_rrd.php to be able to merge RRDfiles of differing step\n\n1.2.4\n-issue#2523: Send A Test Email stops working under PHP 7.3\n-issue#2589: Missing RRD file can cause DSSTATS to throw errors\n-issue#2590: When installing, chosen language is sometimes lost\n-issue#2591: Menu selection does not always match selected page/section\n-issue#2592: When viewing an aggregate graph, 'Display graphs from this aggregate' option does always not work\n-issue#2593: Unable to migrate aggregate graphs to matching aggregate template\n-issue#2598: Creating an aggregate graph without associated template causes RRDtool error\n-issue#2599: Creating/Updating an Aggregate Graph to use LINE/STACK's generates invalid SQL statements\n-issue#2604: When adding a dataquery, SQL errors can be generated\n-issue#2605: When installing, checking database tables can cause errors\n-issue#2608: db_update_table() function should not require an engine type or comment\n-issue#2609: When updating from earlier than 1.2, timezone column might not exist\n-issue#2610: Data Sources troubleshooter generates warning that each() function is deprecated\n-issue#2612: When RRDtool fails to initialize, DSStats generates lots of warnings\n-issue#2618: ifAdminStatus in snmp_queries/interfaces.xml\n-issue#2621: File paths that accept blanks are not allowing blanks\n-issue#2622: Various undefined variables generate errors within database.php\n-issue#2623: When using form_text_area(), invalid HTML can be generated\n-issue#2627: Some filenames can be lost in log file selection list\n-issue#2629: When upgrading, ldap library is not loaded properly due to incorrect paths\n-issue#2632: Automated Networks are not being properly replicated to additional pollers\n-issue#2635: When running automation scans, database connection should be forced to central database\n-issue#2638: Support disabling PHP SNMP extension\n-issue#2645: Some URLs are incorrectly calculated\n-issue#2649: Automation not creating graphs when there are custom items\n-issue#2650: Several undefined variables are generating warnings\n-issue#2662: HRULE objects broken in some cases\n-issue#2668: Trailing parentheses are removed from the SNMP system description\n-issue#2672: Cacti Install on Windows Fails\n-issue#2676: Skin paper plane not working on iPhone XR\n-issue#2678: Call to undefined function _() in data_queries.php\n-issue#2679: Users with passwords that do not meet complexity requirements are not redirected to the Change Password page\n-issue#2680: Remove deprecated $php_errormsg usage\n-issue#2689: Increase boost maximum memory limits\n-issue#2693: Graph links do not contain URL path causing links to fail\n-issue#2698: Avoid duplicated icon in the main.js of all themes\n-issue#2699: Login option \"Show the page that user pointed their browser to\" does not work properly\n-issue#2702: sqltable_to_php.php does not always generate valid table data arrays\n-issue#2707: Some pages that have permission errors dont raise proper messages\n-issue#2712: PHP memory should be unlimited in scripts that need more memory than the default\n-issue#2713: SNMP System Description with UTF8 strings properly are not properly parsed\n-issue#2718: When links are converted to ajax calls, mailto links should not be included\n-issue#2720: When calculating percentiles, the value is incorrect as the steps are not placed in correct order\n-issue#2822: When stderr log file is not populated, clog generates 'empty needle' error\n-feature#2538: Allow users to change default method of removing data sources when deleting graphs\n-feature#2539: Allow users to set the default graph lock status\n-feature#2540: Allow users to enable/disable graph tree history\n-feature#2646: Allow application of automation rules on CLI\n-feature#2654: New hook to notify plugins of user profile changes ('auth_profile_update_data')\n-feature#2664: Add option to purge spikekill backups\n-feature#2701: Provide option to continue graphing objects that loose their index\n-feature#2704: Device and template cache do not refresh properly\n\n1.2.3\n-issue#1063: Tree View does not display the last item correctly under 'Modern' theme\n-issue#2282: Installation Wizard does not Detect RRDtool Version on Windows\n-issue#2430: \"New Device\" menu item showing as selected incorrect when \"Devices\" clicked\n-issue#2435: Tree View becomes narrower and narrower when expanding/collapsing nodes with long names\n-issue#2449: Index incorrectly changed to 1 if the index is alphanumeric when OID/REGEXP: or OIDVALUE/REGEXP:\n-issue#2452: Missing 'getSNMPQueries()' function when calling add_data_query.php\n-issue#2453: When running add_graphs.php, cannot retrieve list of valid snmp values\n-issue#2460: sqltable_to_php.php does not export 'default' value of columns correctly\n-issue#2456: When attempting to display actions that can be taken, having no actions caused error\n-issue#2457: When creating a graph, undefined function prevents confirmation from appearing\n-issue#2459: ss_host_disk.php attempts to return an empty array instead of a string\n-issue#2463: Partial Fix: Display zombie data sources without graphs\n-issue#2464: When viewing a User's effective permissions, disabled devices should show denied\n-issue#2465: Too many groups hide effective permission column when viewing User's effective permissions\n-issue#2466: Manual data source creation is broken\n-issue#2469: When using Matching Objects filter within Automation Graph Rules, unexpected redirect occurs\n-issue#2471: When Creating a new Graph Template, clear the Graph Template permissions cache\n-issue#2472: Bad navigation items cause Array to string conversion errors\n-issue#2474: REGEXP_SNMP_TRIM does not handle Gauge fields properly\n-issue#2475: When resetting filters, multiple sort session variables do not always reset properly\n-issue#2476: When using CMD.PHP for polling, device polling time is not updated\n-issue#2477: When saving a Data Input Method, Output Field name changes to incorrect value\n-issue#2478: When saving a LINEX type Graph Item, the Line Width value is too restrictive\n-issue#2479: RPN function select list should be sorted when editing CDEF and VDEF's\n-issue#2480: RRDtool versions in Cacti not granular enough\n-issue#2482: When upgrading past 1.1.34, upgrade attempts to drop a non-existing primary key\n-issue#2491: Data Source Info suggests commands RRDTool can't honor\n-issue#2492: When data templates are filtered by profile, data source list does not get same filter applied\n-issue#2493: Data Source Info is not separated properly\n-issue#2494: User Login History is not fully enabled for translations\n-issue#2497: When linking to Graphs, unless both start and end are specified, only defaults are used\n-issue#2499: Data Source reapply names does not update name from data query or template.\n-issue#2500: Allow Data Source repairs from the Data Source Debug and Data Source Info pages\n-issue#2502: Unable to have a min or max value for RRDfile at zero '0'\n-issue#2503: The Cacti Statistics Device Template is not include in release\n-issue#2509: When checking for correct Unicode, minimum MySQL version is incorrect\n-issue#2513: When a plugin INFO file is malformed or missing elements, plugin_load_info_file() should fill missing elements with defaults\n-issue#2519: When editing a data query, graph template picker shows poor performance\n-issue#2518: Unexpected errors when filtering Data Sources with invalid 'rows' value\n-issue#2522: When upgrading from pre-1.0.0, colors were not upgraded properly\n-issue#2525: Tree branches that includes sites which have valid devices do not appear on Graph Tree\n-issue#2527: When importing a package, if Cacti version is below the version which that exported, a clear message should be shown\n-issue#2531: When updating color template items, the table name used is incorrect\n-issue#2532: Ensure Graph ListView table is displayed in line with Management -> Graphs\n-issue#2535: Ensure Graph ListView uses same UI logic as Graph Management -> Graphs\n-issue#2537: Incorrect title showing when changes are made to Tree\n-issue#2543: Poor performance showing a device's graphs on a tree\n-issue#2547: RRD values are not being properly trimmed\n-issue#2551: When checking MySQL configuration values, consider ON/OFF to be equal to 1/0\n-issue#2553: When upgrading from 1.0.0 or below, renaming automation columns can cause issues\n-issue#2555: Missing configuration defaults prevent installations/upgrades without showing reason\n-issue#2563: When sorting Data Sources, missing index causes unnecessary delays\n-issue#2564: Filtering for Orphan Data Sources is unreliable\n-issue#2565: Pages with 500+ selectable items in a single able can suffer from poor performance\n-issue#2568: When querying for diagnostic data, devices on remote pollers should proxy the request\n-issue#2571: External Links do not properly validate user permissions\n-issue#2575: Poller errors occur if a file exists that the website cannot read\n-issue#2576: Spikekill API does not work when called from plugins\n-issue#2578: When importing packages, missing/new resources are not created\n-issue#2581: When viewing poller cache, Device SNMP community is not properly escaped\n-issue#2583: When JSON module is not installed, Installer does not correctly show missing message\n-issue#2584: When user/group permissions are reset, this is not reflected immediately to the end user\n-feature#2505: Improve performance of Data Source Statistics\n-feature#2515: Allow more than one SNMP port to be specified when adding devices via CLI\n-feature: Update phpseclib to version 2.0.15\n-feature: Adjust the max table rows based upon value of 'max_input_vars'\n\n1.2.2\n-issue#599: Aggregate graph templates assume AVG consolidation function\n-issue#2312: Retrieving Device Information appears to fail on Safari\n-issue#2317: Unabe to add new records to 'poller_time' table\n-issue#2327: Memory exhausted whilst running poller replication\n-issue#2334: Some browsers report JavaScript errors when switching to console\n-issue#2337: When running an upgrade, the path of the log file is reset\n-issue#2339: Certain characters in recipient address can cause email to fail\n-issue#2343: Export hooks no longer work due to missing default keyword\n-issue#2346: When listing plugin permissions, \"Legacy 1.x Plugins\" can appear in the wrong cell\n-issue#2347: Allow sort output to inject returned data into a specific object\n-issue#2350: Unable to Select Data Source for HRULES and COMMENTS that include nth Percentile and Bandwidth\n-issue#2352: SNMP description field can sometimes contain mangled data\n-issue#2354: When reindexing in Automation, titles are not updated for Graph and Data Source\n-issue#2355: Data Sources are sometimes duplicated when Custom Data is specified\n-issue#2357: When indexes are incorrect, poller should log more information\n-issue#2359: When upgrading, \"Install/Upgrade\" privilege may have been previously lost\n-issue#2360: When retrieving database / table / column information, schema name is not always applied\n-issue#2362: No way to default an interface speed when ifSpeed and ifHighSpeed come back as zero\n-issue#2365: When editing Aggregate Graphs, orphaned items were not always removed\n-issue#2372: Data Query reindexing leads gaps in Graphs\n-issue#2376: Manually adding a device discovered by Automation causes errors to be logged\n-issue#2380: Devices may experience constant reindexing\n-issue#2384: When authentication method is set to None, change to Builtin as None has been removed\n-issue#2393: When reindexing a device, Graph Automation creates duplicate graphs every time\n-issue#2416: SELinux wants APPEND not WRITE permission for Fedora/EPEL (RHEL, Centos)\n-issue#2419: Host state time was not correctly calculated\n-issue#2426: Reinstate missing plugin hooks for 'custom_logout_message' and 'custom_denied'\n-issue#2431: Default value for 'Mail Method' (settings_how) is incorrect resulting in errors\n-issue#2432: Undefined variable warnings when updating RRD data\n-issue#2451: Drag and drop does not always function correctly\n-feature: Update JavaScript library c3.js to version 0.6.12\n-feature: Update phpseclib to version 2.0.14\n-feature: Update PHPMailer to version 6.0.7\n-feature: Update JavaScript library d3.js to version 5.9.1\n\n1.2.1\n-issue#2259: Unable to View Aggregate Graphs\n-issue#2267: Remove unnecessary includes in aggregate template code\n-issue#2270: Realtime Graphs consuming too much memory\n-issue#2272: Site Tree Branches not showing Graphs\n-issue#2273: Error when saving changes to Data Collectors\n-issue#2279: SQL Errors in add_graphs.php\n-issue#2280: SQL Errors in snmpagent cache table inserts\n-issue#2281: Database audit cli giving incorrect results\n-issue#2285: Allow HRULEs for bandwith and ptile\n-issue#2292: Allow Realtime to use 1 second data collection\n-issue#2298: Ambiguous Toggle Switches in Sunrise Theme\n-issue#2303: Problem with \"Notify Primary Admin of Issues\" function\n-issue#2304: Installation progress stays at 0%\n-issue#2305: BOOST PROGERR: ERRNO:'8'\n-issue#2311: Unable to update PHP location during installation due to incorrect CLI environment\n-issue#2319: Primary admin account not always given access to a plugin when that plugin is enabled\n-issue#2321: Date separator not being used properly for graphs\n-issue#2322: Modifying plugin realm registration files and description not supported\n-issue: Installer does not identify when shell_exec()/exec() are disabled\n-issue: Removing a Device or Graph Template can not be seen till next login\n-issue: Visual issues with custom data when using paper-plane theme\n-issue: Undefined function errors attempting to sync device templates\n-issue: Plugin dependency handling inconsistant\n-issue: Editing a report shows incorrect graphs from dropdown\n\n1.2.0\n-feature: Add a Timeout setting for Remote Agent calls\n-feature: Add Graphs and Data Sources hyperlinks on Device page\n-feature: Add One Minute Sampling to the default Data Source Profiles\n-feature: Add support for DDERIVE and DCOUNTER to Cacti\n-feature: Add Timezone support for Remote Data Collectors\n-feature: Allow Adding Aggregate Graphs to a Report\n-feature: Allow ASCII filepath paths to not be found on settings save\n-feature: Allow drill down from Graphs to Data Queries or Templates\n-feature: Allow Import/Export to be hookable\n-feature: Allow snmpagent to be disabled for very large installs\n-feature: Allow Top tabs to be Glyphs or Text or both\n-feature: Big Spanish translation update plus massive QA fixes\n-feature: Change password page provides visible confirmation of password rules\n-feature: Do not allow second data source to be added to an SNMP Get data template\n-feature: Don't allow removal of Data Sources from Data Template once its in use\n-feature: Inform the primary Cacti administrator of problems by Email\n-feature: Make all user settings dynamic and allow resetting to default.\n-feature: Make Graph and Data Source suggested naming more efficient\n-feature: Make it easy to find Data Query based graphs that have lost indexes\n-feature: Make Top Tabs use Ajax Callback\n-feature: Make tree editing responive\n-feature: New Install/Upgrade user permission to limit access to being able to upgrade\n-feature: Provide option to debug width errors where output exceeds column width\n-feature: Removed the Authentication Method of 'None'\n-feature: Tree automation is now defaulted to on for new install\n-feature: Update JavaScript library c3.js to version 0.6.8\n-feature: Update JavaScript library Chart.js to 2.7.3\n-feature: Update JavaScript library d3.js to version 5.7.0\n-feature: Update JavaScript library jquery.js to 3.3.1\n-feature: Update JavaScript library jquery-migrate.js to 3.0.1\n-feature: Update JavaScript library jquery.tablesorter.js to version 2.30.7\n-feature: Update JavaScript library jstree.js to 3.3.7\n-feature: Update JavaScript library screenfull.js to 3.3.3\n-feature: Update phpmailer to version 6.0.6\n-feature: Update phpseclib to version 2.0.13\n-feature#289: Allow external nologin access for Realtime Graphs\n-feature#553: When display a host, include Aggregated Graphs as well as standard graphs\n-feature#614: Allow users to duplicate Data Input Methods\n-feature#973: When creating a new user authenticated via LDAP, attempt to retrieve users email and full name\n-feature#122: Support a Site Branch Type\n-feature#1060: Design Enhancement for Large scale Cacti Implementations\n-feature#1142: Add Site dropdown to the Graphs and Data Source pages\n-feature#1184: Improve Data Input Methods editability and message handling\n-feature#1200: Aggregate Graphs can now include COMMENT\n-feature#1282: Email notification for Automation Network discovery process\n-feature#1347: Update automation logging to work better\n-feature#1395: Ensure messages have each new line keep the same prefix in cacti_log()\n-feature#1399: Allow 'requires' to include version against a plugin\n-feature#1400: User settings are now dynamic and can be reset (removed) to return to global settings\n-feature#1422: Automatically select the next unused data input field when clicking add on data input method\n-feature#1505: When displaying a graph, provide breadcrumb link to edit device\n-feature#1527: Update Fontawesome from 4.7 to 5.0.10\n-feature#1580: Support Drag & Drop for Builtin Report Items\n-feature#1581: Allow Mass Adding of Graphs to Reports\n-feature#1584: Allow theme selection when installing\n-feature#1588: Check that PHP can run a test file\n-feature#1593: Allow External links to auto refresh\n-feature#1597: Ensure synchronised files have same attributes as originals\n-feature#1610: On Unix, redirect error messages to log files when running external scripts\n-feature#1628: Allow the User to define an initial Automation Network for discovery when installing\n-feature#1670: Improve Graph Management to show type of source for a graph\n-feature#1671: When duplicating a Graph Template, properly duplicate Data Query Graph Template Mappings\n-feature#1677: Default Tree nodes sorting to be inherited\n-feature#1691: On Graph context menu, add a 'Copy graph' option to copy graph image\n-feature#1692: Separate option for logging Input Validation issues\n-feature#1703: On Graph context menu, text is now multi-lingual\n-feature#1708: Allow the User to override global Automation email recipients at the Automation Network level\n-feature#1709: Suppress warning from RRDTool when attempting to make updates in the past\n-feature#1711: Add support for SSL connections to MySQL\n-feature#1731: Prevent loss of changes by warning user about unsaved items\n-feature#1734: When displaying a graph, provide more information when error image is displayed (see also #1428)\n-feature#1763: Enable automatic refresh for Time Graph View\n-feature#1806: Control low level debug routines via config.php (Develoepr Use)\n-feature#1819: Provide CLI program to enable graphs to be removed by scripts\n-feature#1969: Graph previews can now be linked using a host's external id\n-feature#2006: Introduce new Data Source Profile to handle decade long graphs\n-feature#2173: Introduce Device and Graph Template Caching to Speed UI\n-feature#2228: Add Device ID to Device search field\n-issue: Fix issue with display_custom_error_message() causing problem with system error message handling\n-issue: Graph List View was not fully responsive\n-issue: Move Graph removal function to Graph API\n-issue: On the Data Sources page, if there is no filtered Device and a Data Source is edited, device association is lost\n-issue: Typo in Dutch translations when an error occurred while downgrading\n-issue: Unable to display user profile tabs\n-issue: Verify all Fields not working due to Cacti 1.x upgrade error\n-issue#186: Cacti does not support jQueryUI 1.12.x\n-issue#187: Remove the use of jQuery Migrate plugin\n-issue#948: Do not create a new datasource when adding a new Graph for the same device/field\n-issue#454: Cacti Re-Index does not resolve index changes properly during re-index\n-issue#983: Import Template Preview is misleading\n-issue#1097: Template user should be disable to prevent logging in directly. And newly created user should always be enabled to allow logging in when copying template user.\n-issue#1174: When display a tree, disable drag and drop unless in edit mode\n-issue#1298: Display fatal error to prevent issues caused when system log is not writable\n-issue#1350: When switching an Automation Tree Rule's leaf type, remove invalid Automation Rule Items\n-issue#1383: CSRF Timeout does not obey session timeout\n-issue#1408: Update SQL / Backtrace to use new clean_up_lines() function\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1420: Fix issues found by Debian package builds\n-issue#1421: Fix issue when SQL had all bad modes, missing variable warning was generated\n-issue#1426: Fix issue where remote poller was not using unique filenames when attempting to verify files\n-issue#1437: Plugin install hover message sometimes shows line breaks rather than formatted text\n-issue#1454: When using oid_regexp_parse, filter indexes to those that match\n-issue#1473: Recovery Date overwritten by subsequent checks\n-issue#1494: Unable to Deep Link/Bookmark Trees\n-issue#1503: Undefined function clearstatscache in DSSTATS\n-issue#1507: When saving graph settings from the graph page, the graph template id should not be included\n-issue#1510: New Graphs Undefined Variable $graph_template_name\n-issue#1521: Force boost to be enabled when there are Remote Data Collectors\n-issue#1528: Saving a device can result in WARNINGS related to string vs array handling\n-issue#1529: Allow Aggregate Graphs to Sum Bandwidth and Percentile COMMENTS\n-issue#1543: Graph Preview appends header=false too many times\n-issue#1553: Poller does not set rrd_step_counter correctly if no steps taken\n-issue#1559: CLI Output Issues due to over escaping\n-issue#1560: Warning that escapeshellarg() is escaping a null\n-issue#1567: Technical support - add notification if Cacti and Spine version is different\n-issue#1574: User templates are not correctly being applied\n-issue#1589: Installer now checks that the temporary folder is writable\n-issue#1590: User Admin generates SQL error if user is not part of any groups\n-issue#1601: Aggregate Graphs can not include some classes of COMMENT\n-issue#1602: PHP ERROR: Call to undefined function api_data_source_cache_crc_update()\n-issue#1604: Failed to connect to remote collector\n-issue#1606: Boost debug log not functional\n-issue#1607: Boost next run time occurs in the past\n-issue#1608: Possible boost race conditions\n-issue#1609: Remote pollers update 'stats_poller' on main poller\n-issue#1617: Editing a data query results in missing $header variable\n-issue#1621: Realtime Popup can cause automatic logout\n-issue#1626: httpd-error.log have message about Fontconfig\n-issue#1634: Default snmp quick print setting resulting in false poller ASSERTS on some php releases\n-issue#1651: Check temporary folder has write access during import\n-issue#1655: Correct Cacti to handle new MySQL 8.0 reserved word `system`\n-issue#1658: Devices drop down should be filtered by Site\n-issue#1660: Reports based upon Tree don't maintain graph order\n-issue#1665: Must change password not working for local users when main realm is not local\n-issue#1669: Console log header grammar issue\n-issue#1674: Threads and Processes values not migrated to Poller table during upgrade\n-issue#1676: Allow automation discovery to add the same sysname on different hosts\n-issue#1682: Slow Select Statement lib/api_automation.php\n-issue#1689: Technical Support's RRDTool version should show detected RRD version\n-issue#1690: Report a warning if the default collation is not utf8mb4_unicode_ci\n-issue#1700: Mail sent without auth causes errors to appear in logs\n-issue#1710: RRDtool create command causes first update to fail\n-issue#1721: Console Side Bar not correct on first login\n-issue#1723: die() messages should include PHP_EOF for better logging\n-issue#1726: Poor page performance editing a Graphs Graph Items\n-issue#1746: Poller with no hosts does not exit until timeout is reached\n-issue#1761: Graph Management page shows bogus template names\n-issue#1783: Browser Back button still does not working\n-issue#1796: Import: Fixed handling of references to objects not included in file\n-issue#1799: Default User log sort should be date descending\n-issue#1810: Correct SQL errors with authentication set to no authentication\n-issue#1839: Dummy cosmetic bug on down device selection option\n-issue#1841: Data Source Stats table not properly migrated from pre 1.x Cacti plugin\n-issue#1849: SNMPAgent not sending traps\n-issue#1852: Reports Preview/Mails show no graphs\n-issue#1889: Insecure $ENV{ENV} which running setgid\n-issue#1901: Upgrade from 0.8.8h fails on external_links statement\n-issue#1921: Data Query XML field method 'rewrite_index' does not correctly query for value\n-issue#1926: Deselecting items should present warning or disable GO button\n-issue#1948: Device Template should warn about need to re-sync\n-issue#1953: set_default_action() should warn if more than one action provided\n-issue#1973: SpikeKill Menu does not display properly\n-issue#1976: Default admin permissions do not allow everything\n-issue#1982: Certain hooks should occur within api functions rather than UI functions\n-issue#2002: api_plugin_db_table_create should support non-string defaults\n-issue#2012: For kernel 3.2+, \"Linux - Memory - Free\" should grep for \"MemAvailable:\", not \"MemFree:\"\n-issue#2085: CLOG Regex Parser does not verify registered function exists\n-issue#2126: api_device.php generates undefined function poller_push_to_remote_db_connect()\n-issue#2127: Unable to save error when duplicating graph\n-issue#2135: api_tree_lock() and api_tree_unlock() forcing redirection incorrectly\n-issue#2143: export.php Illegal string offset 'method'\n-issue#2144: Device Management \"Status\" column does not sort properly\n-issue#2152: When editing a device, should show disable/enable option\n-issue#2153: Utilities page issues the wrong hook for tabs\n-issue#2163: LDAP functions are not consistent\n-issue#2164: Login page does not remember selected realm\n-issue#2171: datepicker and timepick translation not available\n-issue#2178: Header/Footer included more than once\n-issue#2182: Graph View missing 'html_graph_template_multiselect()' function\n-issue#2184: html_host_filter() does not handle host_id consequently\n-issue#2186: Boost generates invalid SQL during on demand update\n-issue#2188: SNMP timeout errors are being duplicated\n-issue#2191: i18n_themes is not properly primed in global_arrays.php\n-issue#2202: Can't create more than one graph with add_graphs.php from one template\n-issue#2207: Removing Graph Template does not Remove Data Query Associations\n-issue#2217: cmd.php not handling quoted snmp values properly\n-issue#2240: SNMP system Data Input Methods should not be modified on import\n-issue#2241: Spike removal not functional due to Debian packaging\n-security#1072: Prevent exploitation of Data Input Methods to escalate privileges (CVE-2009-4112)\n-security#1882: Bypass output validation in select cases\n-security#2212: Stored XSS in \"Website Hostname\" field\n-security#2213: Stored XSS in \"Website Hostname\" field - Devices\n-security#2214: Stored XSS in \"Vertical Label\" field - Graph\n-security#2215: Stored XSS in \"Name\" field - Color\n\n1.1.38\n-issue#1501: cmd.php poller not stripping alpha from snmp get values\n-issue#1515: Special characters not rendered properly in settings\n-issue#1530: Inconsistent behaviour handling blank Field Name/Value when editing data query suggested values\n-issue#1537: Numeric validation not ignoring blank elements\n\n1.1.37\n-issue#274: Allow Realtime Graph Popup Mode\n-issue#1405: When Data Query columns are wide, they cause rendering issues\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1419: Filtering log results in errors in the log\n-issue#1420: PHP NOTICE editing cdef and vdef items\n-issue#1421: CLI upgrade_database.php PHP Warning on execution\n-issue#1426: Remote poller erroring attempting to verify files\n-issue#1432: Delete confirmation does not disappear\n-issue#1443: Partial Save warnings under Settings -> Mail/Reporting/DNS\n-issue#1447: CLI audit_database.php not detecting database name, and failed to create audit tables when run fresh\n-issue#1453: CLI add_graph.php not allowing title to be set\n-issue#1456: Increase minimum php version maintaining support for RHEL6\n-issue#1457: Path-Based Cross-Site Scripting (XSS) issues\n-issue#1458: Error in logs when creating new graphs\n-issue#1459: Automation filter not applied correctly\n-issue#1461: Setting output_format on input type causes no values to be returned\n-issue#1464: Poller stuck in infinitely loop causing excess logging\n-issue#1466: No scrollbars in mobile browsers\n-issue#1468: Increase max length of host.snmp_sysObjectID column\n-issue#1471: Undefined function found in global_languages.php\n-issue#1472: Change Device Options - Style needs updating\n-issue#1474: Check possibility for creation of temporary tables on install\n-issue#1487: Undefined constant in ldap.php\n-issue#1483: Create New Graphs - Paw Styling Issue\n-issue#1493: Can't create tree branches with '#' sign\n-feature#1489: Add ability to use parts of OID as value via regex\n-feature: Updated Chinese Simplified translations\n-feature: Updated Dutch translations\n-feature: JavaScript library Chart.js updated 2.7.2\n-feature: Allow snmp formatting functions to detect UTF-8 output\n\n1.1.36\n-issue#934: Template names missing in graph management list\n-issue#1211: CDEF and VDEF Item Edit do not use correct procedures\n-issue#1250: Language support does not support localization properly\n-issue#1331: Log Rotation should occur at midnight on system\n-issue#1334: Console->Users->(Edit) Permissions checkmark descriptions missing\n-issue#1336: Debian test suite reports php error\n-issue#1338: Allow automation to be run in debug mode from GUI\n-issue#1339: First graph of second page does not render\n-issue#1340: Unable to open Time Graph View in new tab\n-issue#1348: Toggle context menu of Zoom\n-issue#1351: Errorimage does not render on systems without GD ttf support\n-issue#1353: New installation without config.php silently throws errors\n-issue#1355: Single tree can have the order of the tree changed\n-issue#1357: Data Profile disable fields shown temporarily as editable\n-issue#1359: Settings page generates error for removed plugin tab\n-issue#1362: DSStats Avg/Peak function broken due to change in RRDtool processing\n-issue#1365: Plugin Management enforce folder name\n-issue#1366: Improve error/info message display\n-issue#1380: Potential failure when updating script type\n-issue#1384: When installing/enabling plugins, current user and admin should get permissions\n-issue#1386: form_selectable_cell() ignores width if no style_or_class is passed\n-issue#1389: Poller is including plugins that are not installed\n-issue#1390: Plugin uninstall should prompt user before removal\n-issue#1396: Prevent installation/uninstallation of a plugin if dependency is present\n-issue#1397: Distinguish between plugin tabs and core tabs in settings\n-issue#1371: Allow dynamic setting of from name when emailing\n-issue: Data Query Cache filter layout more consistent\n-issue: Minor plugin permissions format change\n-issue: Implementation of error handling causes errors creating New Graphs\n-issue: Deprecated DDStats setting removed\n-issue: Graph context menu items are now context aware\n-issue: Validate spine path before allowing enabling of spine\n-issue: Errored settings fields now highlighted correctly on error\n-issue: Add the Default Device to the Default Tree at install time\n-issue: Secpass password verification error message unuseful\n-feature: Searching of SNMP Index in View Data Query Cache now works\n-feature: Presets now have default device Template\n-feature: JavaScript library c3.js updated (v0.4.21) / jstree.js (3.3.5)\n-feature: PHPSecLib updated 2.0.10\n-feature: Updated Dutch translations\n\n1.1.35\n-issue#114: *all_max_peak* percentile calculations incorrect\n-issue#430: Pressing Back often fails to work as expected\n-issue#564: Fail to move items in graph template as desired\n-issue#981: Hyperlinks for Data Profile stats\n-issue#993: Realtime not working on remote pollers for certain data query\n-issue#1244: Errors importing templates with deprecated hashes\n-issue#1251: Allow zoom out through mouse mmiddle button\n-issue#1281: Max OIDs setting is for bulkget and not bulkwalk operations\n-issue#1286: Correct CHUNKED_ENCODING error when retrieving graph with some browsers\n-issue#1306: Graphs are not always refreshed properly\n-issue#1309: Provide meaningful authentication errors in graph_json.php and graph_image.php\n-issue#1310: Return button fails on change password page\n-issue#1315: Realtime not working on local data collector\n-issue#1316: CDEF Item Value dialog does not update creating items\n-issue#1319: Front end + remote poller - connection timeout issue\n-issue#1321: Use RRDtool pipelining functions within DSSTATS\n-issue#1323: Enhance form layout for readability\n-issue#1329: Spelling errors in automation_networks.php\n-issue: Validate regular expressions if specified in add_graphs.php\n-issue: Ensure compression levels are consistent when importing package\n\n1.1.34\n-issue#1040: PHP version 7.2 - ERROR PHP WARNING: sizeof()\n-issue#1195: Improved Javascript error message handling\n-issue#1245: Unable to reorder graph name suggested values\n-issue#1256: Error reporting of custom errors not displayed correctly\n-issue#1257: Boost excessively logging updates\n-issue#1258: cacti.sql updated to match expected schema\n-issue#1260: Tab images fail to render due to TrueType support in PHP GD Module\n-issue#1261: Automatic logout timeout does not apply to web basic authenication\n-issue#1263: CLI utility to validate database schema\n-issue#1266: Inconsistent usage graphWrapper CSS causes odd graph zoom behavior\n-issue#1268: Regex filters not working properly\n-issue#1274: Host CPU script checks value existance to avoid error\n-issue#1275: SNMP v3 authPriv fails to work\n-issue#1287: JSON calls return validation error in HTML format\n-issue#1289: Script Server should output parameter array rather than parameters\n-issue#1292: Chrome to aggressively caches Javascript files\n-issue#1293: Correctly identify if command 'snmpbulkwalk' is available\n-issue#1296: CactiErrorHandler does not ignore PHP suppressed errors\n-issue#1300: Automation discovery : New devices added by automation discovery have empty SNMP community field\n-issue#1302: Automatic logout should not be enforced on login page\n-issue#1304: mib_cache.php file contains unsafe transactions for binary logging\n-feature: CLI utilily to generate and verify file hashes for installed Cacti files\n-feature: Logging links back to appropriate areas for troubleshooting\n-feature: Logging lists filenames in reverse order\n\n1.1.33\n-issue#1253: Automatically generated RRDtool DEF names in Cacti 1.1.32 break existing Graph Templates\n\n1.1.32\n-issue#969: Undefined index: color_id / task_item when viewing graphs\n-issue#1166: Fix typo of 'locale' in global_languages.php\n-issue#1222: Graphs with large number of items causes RRDTool to error\n-issue#1230: PHP Fatal error: Call to undefined function get_max_tree_sequence()\n-issue#1238: SNMP functions fail to handle \"Invalid object identifier\" error\n-issue#1239: Browser console error in layout.js\n-issue#1240: Page layout issues caused by library update\n-issue#1246: Make SNMP Error return more info\n-issue: Missing or corrupted theme files can corrupt user settings\n-issue: Theme may not change until next login\n-issue: Tree edit Tree/Device/Graph drag areas incorrect\n-issue: Make callback error handling compatible with jQuery 3.x\n-issue: Ensure the snmp_error is cleared before every call\n-issue: Indicate unknown error when RRDTool returns no error message\n-feature: Update Javascript library: js.storage.js, d3.js, jquery.js, jquery.tablednd.js, jquery.timepicker.js\n\n1.1.31\n-issue#629: Site reload after delete the last letter in the searchbar\n-issue#1022: Discovery network stuck in \"running\" state does not return results\n-issue#1164: Version compare function fails on major/minor only versions\n-issue#1166: Invalid New User default language selection\n-issue#1175: Automatic logout inconsistent redirect\n-issue#1179: Warn during installation if installing moving to older version\n-issue#1183: Automatically detect missing Theme and use alternate\n-issue#1185: Layout with Graphs having large number of data columns\n-issue#1189: Allow ability to sort tree list by name asc/desc\n-issue#1190: Enabling, Disabling, Uninstalling plugin, you should page refresh\n-issue#1191: Tree sequences were not set or checked\n-issue#1197: Add more collection intervals to Data Source Profiles\n-issue#1206: Display issue with internationalization number format\n-issue#1210: CDEF and VDEF Items can not be properly edited\n-issue#1212: Navigation breadcrumbs fail to handle External links correctly\n-issue#1213: PHPMailer trying TLS despite SMTPSecure setting\n-issue#1215: Show version when installation prompts for license\n-issue#1217: Add ability to view/edit Input/Query when editing Data Template\n-issue: Named colors fail to import on install or upgrade\n-issue: Drag and Drop issues on multiple pages could corrupt sequencing\n-feature: Enhance filter to permit more glyphs for table headers\n-feature: Add a page refresh dropdown to the Automation Networks\n-feature: Enhanced SNMP v3 input forms\n-feature: Allow Trees to be rearranged using Drag and Drop\n-feature: Trap GUI callback errors and present error message\n\n1.1.30\n-issue#1155: Non-secure mail setting not functional due to changes in phpmailer\n-issue#1157: Resolve issue with branch permission api\n-issue#1158: Change CLOG to use regex replacement so line details are not mangled\n-issue#1161: Graph View regex's are not preserved during automatic page refresh\n-issue#1162: Error messages are not display when editing a user\n-issue#1166: Default language was not correctly set when editing a user\n-issue: basename function undefined during upgrade to 1.0.x\n-issue: Storage API and translations required for Change password function\n-issue: ALTER IGNORE still throws an error when attempting to drop the primary key\n-issue: Data Source profile form API generates error when system is half upgraded\n-issue: Resolve issue with importing packages\n-feature: Update package versions for Cacti version 1.1.29\n\n1.1.29\n-issue#871: Allow Nth Percentile and Bandwidth Summation to respect 'Base Value' in template\n-issue#965: Duplicate error message and incorrect error code when using LDAP authentication\n-issue#1084: Graph Tree Branch not properly populating when editing report item\n-issue#1104: Datetime formatting in developer debug mode incorrect\n-issue#1106: Template Filters has empty row\n-issue#1109: URL used in redirection when referrer already has parameters in it\n-issue#1110: Add CPU Total to 'SNMP - Get Processor Information'\n-issue#1111: PHP NOTICE when using LDAP authenication\n-issue#1116: Filters not allowing \"None\" or \"All\" when editing report item\n-issue#1119: Reduced amount of data fetched for CPU usage to just the data used\n-issue#1121: Bandwidth summation not using correct locale\n-issue#1122: Fix issue with local login / potential password problems\n-issue#1128: Resolve php warning when raising messages\n-issue#1130: Fix logging level issue where logs of same level as setting where not logged\n-issue#1131: Make upgrade_database.php use same version compare as /install/ system\n-issue#1133: Fix issues with variable name and debug log\n-issue#1141: When viewing graphs from list view, pagination causes list view filter to be cleared\n-issue#1143: ss_host_cpu.php - Division by zero / Invalid Return Value\n-issue#1146: Installation now checks URI path matchs with configuration option URL_PATH\n-issue: Updated Graph pagenation and filter reset\n-issue: Resolve issues with cacti_version_compare() processing\n-issue: Zoom context menu stays open after zoom out actions\n-issue: Paginator object was not always translated\n\n1.1.28\n-issue#958: User Group Tree permissions not calculated fully\n-issue#959: Issue viewing email reports due to email client decoding problems\n-issue#992: RRDfile naming issues that result from random sorting during export\n-issue#1012: Issue where disabled devices will not appear in Tree editor\n-issue#1044: Handle invalid exclusion regex properly when viewing the log\n-issue#1045: Issue with multiple pages and confirmation dialogs\n-issue#1048: Problem importing vdefs from templates\n-issue#1053: Remote Data Collector now works with https and self signed certificates\n-issue#1055: Errors in data source statistics inserts when invalid output is encountered\n-issue#1057: CVE-2017-16641 - Potential vulnerability in RRDtool functions\n-issue#1058: ICMP Ping to and IPv6 address fails to gather data for ping latency\n-issue#1059: Aggregate item filter should use regular expressions to avoid SQL errors due to flawed filter logic\n-issue#1064: When a Device Template is removed, Automation Templates for that Device Template remain\n-issue#1066: CVE-2017-16660 in remote_agent.php logging function\n-issue#1066: CVE-2017-16661 in view log file\n-issue#1071: CVE-2017-16785 in global_session.php Reflection XSS\n-issue#1074: Boost records get stuck in archive\n-issue#1079: Undefined index in lib/snmpagent.php\n-issue#1085: Undefined function html_log_input_error\n-issue#1086: Rerun data queries in automation process has no effect\n-issue#1087: cli/add_device.php --proxy option does not work with non-snmp devices\n-issue#1088: Set timeout for remote data collector context\n-issue: Minor performance increase in boost processing\n-issue: Poller output not empty not processed correctly on Log tab\n-feature: Timeout to the remote agent for realtime graphs\n-feature: Updated Dutch translations\n-feature: Database update adding additional indexes for increased performance\n-feature: Updated PHPMailer to version 5.2.26\n-feature: Updated phpseclib to version 2.0.7\n\n1.1.27\n-issue#1033: Issues inserting into dsstats table due to legacy data\n-issue#1039: Using html_escape still double escapes.  Use strip_tags instead\n-issue#1040: Resolving compatibility issue with PHP7.2\n\n1.1.26\n-issue#841: --input-fields variable not working with add_graphs.php cli\n-issue#986: Resolve minor appearance problem on Modern theme\n-issue#989: Resolve issue with data input method commands loosing spaces on import\n-issue#1000: add_graphs.php not recognizing input fields\n-issue#1003: Reversing resolution to Issue#995 due to adverse impact to polling times\n-issue#1008: Remove developer debug warning about thumbnail validation\n-issue#1009: Resolving minor issue with cmd_realtime.php and a changing hostname\n-issue#1010: CVE-2017-15194 - Path-Based Cross-Site Scripting (XSS)\n-issue#1027: Confirm that the PHP date.timezone setting is properly set during install\n-issue: Fixed database session handling for PHP 7.1\n-issue: Fixed some missing i18n\n-issue: Fixed typo's\n-feature: Updated Dutch translations\n-feature: Schema changes; Examined queries without key usage and added/changed some keys\n-feature: Some small improvements\n\n1.1.25\n-issue#966: Email still using SMTP security even though set to none\n-issue#995: Redirecting exec_background() to dev null breaks some functions\n-issue#998: Allow removal of external data template and prevent their creation\n-issue: Remove spikes uses wrong variance value from WebGUI\n-issue: Changing filters on log page does not reset to first page\n-issue: Allow manual creation of external data sources once again\n-feature: Updated Dutch translations\n\n1.1.24\n-issue#932: Zoom positioning breaks when you scroll the graph page\n-issue#970: Remote Data Collector Cache Synchronization missing plugin sub-directories\n-issue#980: Resolve issue where a new tree branches refreshs before you have a chance to name it\n-issue#982: Data Source Profile size information not showing properly\n-issue: Long sysDescriptions on automation page cause columns to be hidden\n-issue: Resolve visual issues in Classic theme\n-feature: Allow Resynchronization of Poller Resource Cache\n-feature: Update Spanish Translation\n\n1.1.23\n-issue#963: SQL Errors with snmpagent and MariaDB 10.2\n-issue#964: SQL Mode optimization failing in 1.1.22\n\n1.1.22\n-issue#950: Automation - New graph rule looses name on change\n-issue#952: CSV Export not rendering chinese characters correctly (Second attempt)\n-issue#955: Validation error trying to view graph debug syntax\n-issue: MySQL/MariaDB database sql_mode NO_AUTO_VALUE_ON_ZERO corrupts Cacti database\n-issue: When creating a data source, the data source profile does not default to the system default\n-feature: Enhance table filters to support new Cycle plugin\n-feature: Updated Dutch Translations\n\n1.1.21\n-issue#938: Problems upgrading to 1.1.20 with one table alter statement\n-issue#952: CSV Export not rendering chinese characters correctly\n-issue: Minor alignment issue on tables\n\n1.1.20\n-issue#920: Issue with scrollbars after update to 1.1.19 related to #902\n-issue#921: Tree Mode no longer expands to accomodate full tree item names\n-issue#922: When using LDAP domains some setings are not passed correctly to the Cacti LDAP library\n-issue#923: Warninga in cacti.log are displayed incorrectly\n-issue#926: Update Utilities page to provide more information on rebuilding poller cache\n-issue#927: Minor schema change to support XtraDB Cluster\n-issue#929: Overlapping frames on certain themes\n-issue#931: Aggregate graphs missing from list view\n-issue#933: Aggregate graphs page counter off\n-issue#935: Support utf8 printable in data query inserts\n-issue#936: TimeZone query failure undefined function\n-issue: Taking actions on users does not use callbacks\n-issue: Undefined constant in lib/snmp.php on RHEL7\n-issue: Human readable socket errno's not defined\n-issue: Audit of ping methods tcp, udp, and icmp ping. IPv6 will still not work till php 5.5.4\n\n1.1.19\n-issue#810: Scripts in packages don't match distribution\n-issue#919: Unable to upgrade to 1.1.18\n-issue: Update documentation for minimum PHP 5.4\n\n1.1.18\n-issue#902: Correcting some issues with Console and External Links\n-issue#903: Upgrade pace.js to v0.7.8\n-issue#904: Allow user to hide Graphs from disabled Devices\n-issue#906: Create a separate Realm for Realtime Graphs\n-issue#907: XSS issue in spikekill.php\n-issue#910: Boost last run duration generates an error on new install\n-issue#914: Unable to purge Cacti logfile from System Utilities\n-issue#915: Non-numeric data in ss_host_disk.php\n-issue#916: Resolve display of errors when encountering ldap issues\n-issue#918: Minor XSS and create generalized escape function\n-issue: Resolve JavaScript errors on Login page\n-issue: Resolve JavaScript errors on Permission Denied pages\n-issue: Graphs tab would appear in non-classic even if you did not have permissions\n-feature: Updated dutch translations\n\n1.1.17\n-issue#450: List View to Preview shows no results\n-issue#486: Export Device table results to CSV\n-issue#544: Allow Log Rotation to be other than Daily\n-issue#673: Downtime/Recovery time/date is set incorrectly\n-issue#819: Customized timespans for graphs\n-issue#888: Rebuilding Poller Cache when External data sources are present results in false positive warnings in the log\n-issue#891: Database.php unable to connect to MySQL when using port different than 3306\n-issue#893: Warning messages when duplicating CDEF objects\n-issue#897: Due to browser use of special key, deprecate ctrl-shift-x for clearing filter\n-issue#898: Issue with tcp and udp ping due to file description allocation changes\n-issue: Unable use ipv6 ip addresses for snmp ping in the Cacti GUI\n-issue: Update language of the Rebuild Poller Cache menu pick\n-issue: Broken design for input controls with Sunrise theme\n-issue: Timespan switching not switching to Custom in Preview Mode\n-issue: Log rotation would not occur under certain conditions.  Provide more control over log functions\n-issue: Purge log file always purged the cacti.log, not the selected log\n-issue: Unable to view graphs for errored data sources from Cacti log\n\n1.1.16\n-issue#865: Escape Data Query arguments to prevent issues with special characters\n-issue#872: Can't add device items to graphs generated with no device and no template\n-issue#875: When modifying Realm permissions, realms that are listed multiple times don't stay in sync\n-issue#877: Improving resolution to issue#847 and one additional vulnerability\n-issue#878: Ambiguous language in purge log function\n-issue#879: SQL Error when adding a report item to a report\n-issue#880: Device drop down is limited to 20 devices and lacks a scroll bar\n-issue#885: Graph generated with no device and no graph template forgets device definitions\n-issue#886: Unable to export templates other than Device templates\n-issue: Address additional corner cases around get_order_string usage\n-issue: Data Queries sharing a Data Source can result in poller output table not empty errors\n-issue: Fix Sunrise theme to properly theme multiselect widgets\n-issue: Increase height of multiselects so that more options are visible\n-issue: When a graph is locked, anchor tags are still functional\n-issue: Autocomplete does not populate none-value when the selected value is not set\n\n1.1.15\n-issue: PHP Fatal Exception on upgrade from 1.1.11 or earlier\n-feature: Added test to detect install upgrade code problems\n\n1.1.14\n-issue#849: Unable to select host in Graph Item pick\n-issue#850: Reporting not allowing Non-templated Graphs\n-issue#858: Pagination on SNMP Options wrong\n-issue#860: Network Discovery Subnet Range character limit too small\n-issue#861: The search filter does not support Cyrillic\n-issue#862: Automation - When editing Graph Rules, unable to Change Data Query\n-issue#863: Typo error in auth_login.php for LDAP authentication\n-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php\n-issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme\n-issue: Make Templates Export responsive\n-issue: Don't wrap menu glyphs and menuitems\n-issue: The function get_order_string() can fail when encountering reserved word columns\n-issue: Data Query Delete is not using callback\n-feature: Resize Graphs on Graph page to be responsive\n-feature: Make import text a hidden field as it is likely seldom used\n\n1.1.13\n-issue#605: Remove Spikes feature not fully functional\n-issue#814: Allow 'Save' feature from New Graphs\n-issue#837: Using the add_device.php CLI script, you can not 'default' the device threads to other than 1\n-issue#838: CVE-2017-10970: XSS Issue in link.php\n-issue#839: The Database column name 'rows' is a reserved word in MariaDB 10.2+\n-issue#845: External links tabs should appear at the end of the tab view\n-issue#846: Web crawl of Cacti site shows errors in the log\n-issue#847: CVE-2017-10970: XSS Issue in lib/html_form.php.\n-issue#853: Go and Clear buttons do not work in all cases on Graph Rules pages\n-issue: Up/Down arrow titles labeled incorrectly on Tree Management page\n-issue: Make the default Export Type a Device Template\n-issue: Fix SNMPagent MIB cache issues\n-issue: Realtime cache cleanup now only removes rrd and png\n-issue: When redirected from reports, you can receive a validation error\n-feature: updated Dutch language\n\n1.1.12\n-issue#822: Aggregate Graph Items are incorrectly editable\n-issue#823: Allow Filters to be hidden\n-issue#834: Add spacing on graphs pages\n-issue: Uninstalled plugins can not install\n-issue: Location of filter functions in host.php prevent full responsive filter implementation\n-feature: Implement first phase of responsive search filters\n\n1.1.11\n-issue#642: RRA not written or WARNING: Poller Output Table not Empty\n-issue#779: PHP running out of memory due to date format issues\n-issue#791: SeLinux causing problems due to recent enhancement of the Cacti log\n-issue#818: Unable to unselect all SpikeKill templates under settings\n-issue#831: Unable to add devices from automation devices that don't have a snmpSysname\n-issue: incorrect version of pace: fix progess bar\n-issue: date_format(): fix date separator character\n-issue: host.php: fix itemCount en rowCount when result = null\n-issue: clog: fix scandir for systems with limited permissions to log directory\n-issue: clog: fix listing of logfiles\n-issue: Stop New Graphs filter interface from taking too much space\n-issue: Pagination of clog is not done via ajax\n-issue: Unable to dry run spikekill's from Graphs page\n-issue: Default sort order does not highlight on Aggregate Template page\n-issue: Correct display issue with Graph Templates when editing Device\n-issue: External Data Sources show as having poller interval on Data Source page\n-issue: Allow Selecting 'External' as the Data Source Profile when creating non-templated Data Source\n-issue: Remove Field Order on Data Input output data as it's not required\n-issue: Data Templates not using Ajax callbacks to switch Data Sources\n-issue: Visual issue when creating non-templated Aggregate Graphs\n-feature: new skin: Sunrise\n-feature: Provide Non Compatible explanation when a plugin is not compatible\n-feature: Updated Dutch translations\n-feature: Allow Graph Templates with multiple flag to be created repeatedly from Graphs New interface\n-feature: Allow plugins to exclude files and directories from their remote poller synchronization process\n-feature: Add Device Description to View Poller Cache UI\n\n1.1.10\n-issue#779: Resolve random Apache segfault due to recursion\n-issue#786: Unable to create second RRA for a Data Source Profile with collection rate less than 5 minutes\n-issue#789: Unable to Clear Filter due to JavaScript name space collision\n-issue#791: cacti 1.1.9 and clog_webapi.php permission issue\n-issue#794: SQL Error when creating graphs manually\n-issue#798: Cosmetic issue when checking checkboxes in Cacti\n-issue#800: Unchecked loop in lib/html_utility.php causing race condition\n-issue#802: Issue updating device hostname with SNMP data queries\n-issue#803: Issues with utf8mb4 introduced via optimization\n-issue: If the device is down and snmp_sysUpTimeInstance is 0, time in state can be wrong\n-feature: Updated Dutch translations\n\n1.1.9\n-issue#788: Fails on PHP Fatal error if LDAP auth enabled\n\n1.1.8\n-issue#529: Issue on Graph New page with checkbox unselected\n-issue#552: Minor selectable row checkbox issue\n-issue#577: Dragging multiple items causes the tree to refresh too early\n-issue#617: Correct poller timeouts when no devices are associated with active data collector\n-issue#706: Classic external link template images missing\n-issue#726: Undefined variable in upgrade script\n-issue#728: Resolve issues with jQueryUI empty dialogs\n-issue#731: Add class to radio button labels to correct display issue\n-issue#736: Sequence numbers not visible when editing templates using modern theme\n-issue#739: Graph Titles missing on aggregate graphs\n-issue#740: Spacer manipulation broken after update to responsive forms\n-issue#741: Errors in dsstats with very large RRDfiles with more than 60 data sources\n-issue#748: Search results are not cleared on Aggregates\n-issue#754: Default Language for user and system are not set on new installation\n-issue#755: RRDtool Graph Watermark is incorrect\n-issue#756: Resolving some translation issues\n-issue#763: Template Export not functional\n-issue#765: Validation error when viewing Utility View\n-issue#771: Editing a report renders no options after creation\n-issue#780: Preview always shows thumbnails in reports interface\n-issue: Hide Aggregate system cdefs when editing graphs and graph templates\n-issue: Updating Utility View zoom was not updating table data\n-feature#723: Convert Data Source dropdown to autocomplete when editing standalone graphs\n-feature#735: Allow color selection in graphs and templates to be autocomplete\n-feature#753: Preliminary support for RRDtool 1.7.\n-feature: Add function to obtain the current execution user\n-feature: Implement Site timezones as autocomplete for performance\n-feature: For themes other than classic, make color id selection autocomplete\n-feature: CLOG timestamp is now formatted as defined in settings\n-feature: CLOG can show loginformation from rotated logfiles\n\n1.1.7\n-issue#470: Enhance Cacti's SNMP function and Data Query XML, add <output_format>hex|string|guess</output_format>\n-issue#653: Devices with empty sysNames are not added to discovered devices\n-issue#655: Data source not displaying device name\n-issue#658: Scheduled Reports (type \"tree\") not working\n-issue#662: Sending test Email should optionally bypass ping\n-issue#667: In Classic theme initial view of Tree view broken\n-issue#669: Invalid SQL Messages when upgrading to Cacti 1.0.5\n-issue#670: Validation error when you do \"Change Graph Template\" in Cacti\n-issue#672: Cacti unable to enable snmp notification receiver mibs\n-issue#680: Sort order in Time Graph View\n-issue#687: Cacti DB access not compatible with PHP 7\n-issue#696: Multiple issues with snmpagent notification UI\n-issue#699: Add custom error handler for ping functions\n-issue#704: Fix GUI issues for Graphs not belonging to a device\n-issue#707: Back button not working\n-issue#708: Issues finding lib/snmp.php in host disk functions\n-issue#712: Change Graph Template dropdown invalid\n-issue#717: Allow ajax callbacks when adding non-templated graph items\n-issue: Reports were not using Cacti's permission system for checking access\n-issue: User Admin page reported wrong permissions at Tree level missing some i18n as well\n-issue: Short data_name can cause data collection issues\n-feature: Updated Dutch language\n-feature: Updating PHPMailer to 5.2.23\n-feature: Support input-output Data Query types\n-feature: Introduce new get_cacti_version() to reduce database calls on pages\n\n1.1.6\n-issue#620: The table poller_data_template_field_mappings can get out of sync when manipulating data templates\n-issue#622: Can not connect to MySQL over a socket\n-issue#628: Cacti upgrade process is complex and error pront for developers\n-issue#635: Error when saving change to data template\n-issue#637: When displaying tree graphs, use the same layout as preview mode\n-issue#646: When a plugin is disabled during page operations, warnings can appear\n-issue#651: Unable to view cacti log (because of allowed memory size exhausted)\n-issue#657: Error in log when host is down, using icmp and using cmd.php on FreeBSD\n-issue: List for creating a Graph type shows already added Graph Templates\n-issue: Fix and undefined variable on data source page when first creating a manual data source\n-issue: Remove tabindex and other non-required manual aria controls from pages\n-issue: Table type and column type in poller_output table wrong\n-issue: FILTER_VALIDATE_MAC not defined on PHP less than 5.5\n-issue: When changing your language Cacti would not do a full page refresh\n-feature#106: Paginated CLOG and log administration\n-feature: Dutch translations\n-feature: Responsive Graphs page\n-feature: Convert forms from table based to div based for responsive design\n-feature: Better support for phones and tablets\n-feature: Simplified installation code to facilitate easier release cycle\n-feature: Updating Tablesorter to v2.28.9, adding widgets and pager\n\n1.1.5\n-issue#580: Data collection warnings when using cmd.php\n-issue#592: Incorrectly formatted HTML\n-issue#606: Replace <path_php_binary> in data input methods\n-issue#607: Allow draw_menu to specify multiple actions for the same URL\n-issue#608: Spaces adjacent to double quotes are eliminated during data input method import\n-issue#609: Honor the column setting in graph tree view mode\n-issue#610: Change Graph Template action not available\n-issue#611: Cacti Installation Wizard - Spine page incorrect on Windows\n-issue#612: Uncaught Error: Call to a member function row() on a string\n-issue#613: Network Automation, now requires a site or your are unable to save rules\n-issue#615: Data Input field length too short for longer scripts\n-issue#619: Export logging option in settings no longer used\n\n1.1.4\n-issue#524: Reporting not working when Tree branch is device\n-issue#560: Add 'Duplicate' and 'Convert to Graph Template' back to Graph Management page for Advanced mode\n-issue#573: Missing Graph Template dropdown items\n-issue#575: Very large hex strings result in scientific notation that RRDtool rejects\n-issue#579: Problems logging in using nginx web server\n-issue#581: session_start() warnings when manually sending reports\n-issue#584: Issues reporting memory recommendation on utilities page\n-issue#586: Overrunning pollers can cause system load spikes\n-issue#587: Data Collector setting under Network Discovery is not being used\n-issue#588: Devices with blank sysDescr are added to the first Device Template in error\n-issue#589: Automation discovery does not allow site association\n-issue#590: Unable to create a plugin based menu\n-issue#591: Row selection in Device Automation Templates not sane with drag-n-drop enabled\n-issue#601: Resolving some translation issues\n-issue#604: Unexpected backtrace on regular expression filters\n-issue#605: Remove Spikes non-numeric data causes warnings\n-issue: Ping email does not use a from email address\n-issue: Automation does not recognize default size or poller\n-issue: Unable to drag-n-drop on automation templates pages when enabled\n-issue: Fixed number of hosts in poller stats for first poller\n-issue: Fixed screenwidth issue in tab PHP-Info of Utilities module\n-issue: Recovery poller could get stuck in some situations\n-issue: Fix JavaScript errors when managing Aggregate Graphs\n-feature: Reorganize defaults to place more on device defaults page\n-feature: Update jQuery tableDnD to version 0.9\n-feature: More tolerant of empty PHP_SELF found with some web servers\n\n1.1.3\n-issue#515: Unable to import color CSV file\n-issue#519: In non-classic themes its not possible to remove Cacti log or reporting tabs\n-issue#520: SQL error in graph automation\n-issue#521: Cacti allows removal of Data Query Graph Template associations when they are in use\n-issue#525: LAST GPRINT type not rendered correctly due to lack of escaping\n-issue#530: Undefined function get_vdef in lib/rrd.php\n-issue#531: Issues with TextAlign and Tick graph items\n-issue#532: Unreliable scroll height causes issues in Chrome\n-issue#533: User settings not cleared after saving profile\n-issue#534: Automation issue with AS clause\n-issue#538: Unable to rename tree folder\n-issue#541: Issues with mobile graph viewing\n-issue#555: DSStats SQL insert errors due to data collection issues\n-issue#563: Division by zero in removespikes.php\n-issue: Fixed rendering issues with HRULE's on graphs\n-issue: Update jsTree to 3.3.4 version\n-feature: Improved responsiveness UI tables, filters, and menus\n\n1.1.2\n-issue#492: Error while adding non data query (cg) graphs\n-issue#494: CLI error while importing template\n-issue#499: SQL error in graph automation resulting in no graphs on tree\n-issue#500: Generic SNMP device package damaged - Unix Ping Host\n-issue#505: Log rotation does not work in some cases\n-issue#506: Undefined index: cactiStatsDeviceFailedPolls\n-issue#507: Nextwork discovery 'export' produces no results\n-issue#509: Minor bug with device ownership selection\n-feature: Add new legend type that includes Current/Average/Minimum/Maximum\n-feature: Update d3.js to latest version 4.7.4\n\n1.1.1\n-issue#457: Continued LDAP issues with initial user creation\n-issue#461: The function escapeshell arg not appropriate on Windows\n-issue#462: LDAP authorization issues: group membership check broken for 'Group Member Type' = 'Username'\n-issue#464: Change default batch spike removal limits for standard deviation and variance\n-issue#465: Less than sign inside items and labels of graph break graph\n-issue#466: Call to member function row() on a non-object in lib/snmpagent.php\n-issue#467: Reduce the number of queries in log function\n-issue#472: Schema changes to improve performance\n-issue#485: When editing a device, the ping status was not always returned\n-issue: Back button issues due to syntax problems in JavaScript\n-issue: Zoom periodically would loose it's crosshairs after zooming\n-issue: Zoom would zoom out into the future even when disabled\n-issue: Fixing lite corruption in graph_templates_item table\n-feature: Make SpikeKill options more consistent\n-feature#459: Add variable date time option to report mail subject\n-feature#460: Add external_id to host variables\n-feature#469: Change re-index method of Data Query from Device edit\n-feature: Support generalized date format approach in the GUI\n-feature: Use localStorage over a Cookie for Zoom setting storage\n-feature: Fully implement 'Remove Orphans' from Package import process\n\n1.1.0\n-issue#337: Generic SNMP OID Graph Template damanged\n-issue#338: Extremely slow new graph/DS creation\n-issue#353: Broadcast & Multicast Packet counters missing\n-issue#376: Structured RRD path permission issues\n-issue#389: Manual template based graph creation not working\n-issue#407: The RRDfile does not exist message is misleading\n-issue#410: Select character data was interpreted as hex by cacti_snmp_walk()\n-issue#422: additional issues with LDAP authentication\n-issue#424: Automation does not discover devices w/o resolvable hostnames\n-issue#427: undefined index TotalVisibleMemorySize on FreeBSD\n-issue#432: SpikeKill menu wonky on Paw Theme\n-issue#434: password_verify not compatible in php5.4-\n-issue#435: urlPath missing from paw theme links\n-issue#436: Restricted user does not see graphs in tree view\n-issue#443: Allow remote_agent.php through a NAT\n-issue#446: No local admin when using multiple LDAP configuration\n-issue#447: Creating another non data query graph from same template reuses first data source\n-issue#449: exec_poll_php does not flush pipes when using script server\n-issue#450: Graph list view - No Graphs Found\n-issue: Improve email test exception errors and change default timeout to 10 seconds\n-issue: When on links page, breadcrumbs would become corrupted\n-issue: When upgrading from any version of Cacti to 1.0.5, SQL's relative to poller_reindex might appear\n-issue: Color page performance poor\n-issue: The Device dropdown on the Graph View page was unreliable\n-issue: Aggregate and non-Device Graphs in list view had not Device or Title description\n-issue: Re-engineer back button design to accomocate ajax and native navigation\n-issue: Make Graph Template filter wider\n-issue: Resolve some visual issues in Classic theme\n-feature: Add page refresh API to make page refreshing in Ajax easier to accomplish\n-feature: Update fontawesome to version 4.7\n-feature: Use fontawesome glyphs for menu items\n-feature: Support multiple column sort in table library\n-feature: Add glyphs to main Cacti console menu\n\n1.0.6\n-issue#386: Allow special characters in graph title\n-issue#414: Install Wizard check path for spine\n-issue#415: SNMP session handling broken\n-issue#418: LDAP create user from template not working\n\n1.0.5\n-issue#296: Poller warning for Non-SNMP device\n-issue#319: Add default 'High Collection Rate' data source profile to new installs to demonstrate concept of multiple rates\n-issue#330: Import templates to non-default Data Profile\n-issue#337: Error when try create new graph - SNMP - Generic OID\n-issue#342: Infinite loop in poller_automation.php with invalid schedule\n-issue#343: Device discovery cannot handle dots in device name\n-issue#344: Unable to upgrade to latest Cacti on FreeBSD\n-issue#353: Legacy broadcast & multicast packet counters missing in interface.xml\n-issue#354: Place on tree dashes / ordering is not correct\n-issue#355: Replace table rows with count when using InnoDB tables\n-issue#357: If recovery mode runs longer than a polling interval, a second is spawned\n-issue#358: Sending test e-mail results in warning\n-issue#360: Issue importing cacti.sql with some charsets\n-issue#364: Moving graph item causes page render issue\n-issue#365: ss_host_disk.php and ss_host_cpu.php should use return\n-issue#367: Upgrade chart.js to version 2.5\n-issue#368: Issue with device automation ip vs. ip_address\n-issue#369: Interface bits/second total Bandwidth wrong CDEF\n-issue#375: Drag and Drop of Devices and Graphs allows dropping onto self\n-issue#380: Ignores a non-standard SNMP port\n-issue#382: When using php5.5+ new users unable to change their password\n-issue#384: graph_view.php backtrace errors\n-issue#385: Unable to place an aggregate grapn on a subtree\n-issue#390: Display graphs from this aggregate icon next to graph not displaying\n-issue#392: cdef.php missing sql where for system cdef's\n-issue#398: checkbox is not honored when creating tree\n-issue#399: External link configuration: Order buttons don't work\n-issue#400: SNMP Engine ID (v3) field too short\n-issue#401: Graphs -> Apply Automation Rules fails\n-issue#404: Success even when test mail fails\n-issue#406: HRULE text format special characters not escaped\n-issue#408: Suppress SNMP units suffix from cacti_snmp_get() output\n-issue: Improve is_ipaddress functions\n-issue: Drag & drop showing when disabled on page automation_templates.php\n-issue: Output messages displayed incorrectly in automation_templates.php and automation_snmp.php\n-issue: Importing template from old Cacti would not show data templates\n-issue: Handle snmp error exceptions better\n-issue: Update Apache .htaccess files to support multiple version\n-issue: When executing a full sync, if the table structured has changed, recreate the remote table\n-issue: Multiple domains not working as expected\n-feature#197: Add external_id to Cacti for linking Cacti to other monitoring systems\n-feature#332: Support copy user groups\n-feature: Log proper IP address if logging in behind a NAT\n-feature: New qquery parsing rules: VALUE/TEST, VALUE/TABLE, VALUE/HEX2IP\n\n1.0.4\n-feature: Javascript: make menu movement smooth and use localStorage\n-feature: Added cacti_snmp_get_raw() for plugin developers\n-issue#288: Function cacti_snmp_get bad handling of wierd value into snmp_value\n-issue#298: Graph generation issue with SNMP - Bits/Sec + Total Bandwith\n-issue#301: Unresolvable DNS hostname causing backtraces\n-issue#302: spikekill memory leak\n-issue#303: Error when creating tree items with \"&\" in the name\n-issue#307: Aggregate graph gives CMDPHP errors\n-issue#308: UI resize issue\n-issue#309: Show \"Save Successful\" notification permanently\n-issue#311: Graph thumbnail settings in profile setting does not work\n-issue#320: Users can not change their own password\n-issue#324: Aggregate template graph template JavaScript error\n-issue#352: Add configurable auto-logout and page-reload options\n-issue#329: Customize the favicon\n-issue#334: primary key on poller output boost table not efficient/not being used correctly\n-issue: Fixed issues with Dark theme\n-issue: Fixed issues with Paw theme\n-issue: Fix timespan calculation\n-issue: Added misplaced join condition when generating RRDtool graphs\n-issue: Fix the selection of timestan based on local_graph_id and rra_id\n-issue: Correct error in discovery not adding devices\n-issue: Action message did not always display\n-issue: fix regex to use Domains like www.t-online.de\n-issue: Properly align Order columns.\n-issue: address renaming issues with tree items.\n-issue: Add device snmp --version is ambiguous\n-issue: SNMP Availability failed to report down devices - This only was occuring for cmd.php collector.\n-issue: i18n remove embedded HTML syntax\n-issue: Wrap menu items to avoid scrolling\n\n1.0.3\n-issue#297: Upgrade 0.8.8h to 1.0.0 fails to create poller_output_boost table\n-issue: Added missing template import hash for 1.0.2\n\n1.0.2\n-issue#279: Correct Boost Status display issue\n-issue#275: Permission View issue and Device Dropdown when in Classic Theme\n-issue#270: Major Mib Cache corruption.  Rebuild your MIB Cache after upgrading\n-issue: Resolve Cacti logo on Graphs page in Classic Theme\n\n1.0.1\n-feature: SpikeKill allows filling range to last known good value\n-issue#261: Add IPv4 and IPv6 Specific Counters to interfaces.xml\n-issue#257: Poller Output Table not Empty WARNING messages in cacti.log\n-issue#256: New Graph - Add Graph Items Fails (Data Sources shows None)\n-issue#255: Errors Creating new Graphs - Undefined Index Errors\n-issue#254: Unable to Properly add Data Source\n-issue#251: Remote Data Collector stuck on upgrade page\n-issue#247: Devices missing from tree device list\n-issue#245: Drag and Drop in Tree Edit Erratic\n-issue#243: SMTP Ping Failure with not SNMP Authentication\n-issue#241: Authentication Method: None not functional\n-issue#240: SQL error when install plugin\n-issue#238: Duplicate color id's cause error during Upgrade\n-issue#231: SNMPv3 - PHP ERROR WARNING: Fatal error: Unknown user name in file\n-issue: Resolving visual issues with row counts.\n-issue: When deleting Graphs prevent the removal of Data Sources that are still in use\n-issue: Improve SNMP agent performance through SQL optimizations\n\n1.0.0\n-feature: Support for remote data collectors\n-feature: Support Internationalization (i18n) for the main Cacti site, and supported plugins\n-feature: Data Source Profiles replace RRA settings allowing a single system to have multiple polling intervals\n-feature: Redesigned Tree page including Drag & Drop functionality\n-feature: New Graph Permissions system designed to make permissions simple to manage\n-feature: Add Themes 'Classic', 'Modern', 'Dark', and 'Paw'\n-feature: Debug Data Sources by comparing them to the Data Template\n-feature: New special Data Source type to detect the poller interval\n-feature: Bulk inserts in PHP poller to address latency issues\n-feature: Optimize data collection through in memory caching giving a 50% reduction in polling times when dealing with large sites\n-feature: Support RRDtool VDEFs\n-feature: Support new Graph Items: AREA:STACK, GPRINT:AVERAGE, GPRINT:LAST, GPRINT:MAX, GPRINT:MIN, LINE:STACK, TEXTALIGN, TICK\n-feature: Support RRDtool features: Right Axis Support, Dynamic Labels, Tab Width, Legend Position, Legend Direction\n-feature; Resizeable table columns\n-feature: Deprecated Single Pane Tree View\n-feature: Role Based Access Control (RBAC)\n-feature: Support User Group Permissions\n-feature: Show number of in use Graphs, Data Sources, and Devices for a given Template\n-feature: Support bulk re-sync of graphs to assigned Graph Template\n-feature: Bulk Device Settings changes\n-feature: CDEFs, Colors, GPrint Presets consolidated to Presets menu\n-feature: Authentication cookies for 'remember me' functionality\n-feature: Automatic logout after session inactivity\n-feature: Replace Boost server in favor of RRDtool Proxy\n-feature: Graph Details include CSV output, zoom, debug, and download links\n-feature: Graph Export moved to a plugin\n-feature: User change password functionality\n-feature: Automation added to core functionality through the merge of the Discovery and AutoM8 plugins\n-feature: Change interface graphs from 32 bit to 64 bit with ease\n-feature: Plugins now have hooks in device templates and automation\n-feature: Allow users to preview template imports to determine if there will be issues from importing\n-feature: Automatic removal of orphaned graph items when importing newer versions of graph templates\n-feature: Support for MySQL 5.7\n-feature: Support for PHP 7.0\n-feature: Merge Aggregate Plugin - Aggregate graph creation\n-feature: Merge AutoM8 Plugin - Automation of graph creation\n-feature: Merge Boost Plugin - Faster polling, result caching, on-demand RRDtool file updates\n-feature: Merge CLog Plugin - View Cacti logs\n-feature: Merge Discovery Plugin - Device discovery\n-feature: Merge Domains Plugin - Support for domain (ADS/LDAP) specific user templates\n-feature: Merge DSStats Plugin - Cache Data Source values for easy retrieval\n-feature: Merge Logrotate Plugin - Rotate Cacti logs\n-feature: Merge Realtime Plugin - Realtime graph viewing\n-feature: Merge Reporting (Nectar) Plugin - Reporting\n-feature: Merge RRDclean Plugin - RRD file cleanup and management\n-feature: Merge Secpass Plugin - User password policy enforcement\n-feature: Merge Settings Plugin - Shared settings for plugins\n-feature: Merge SNMP Agent Plugin - SNMP Agent for Cacti providing system statistics\n-feature: Merge SpikeKill Plugin - Remove unwanted spikes from graphs\n-feature: Merge SSL Plugin - Force https\n-feature: Merge SuperLinks Plugin - Add external links within Cacti\n-feature: Merge UGroup Plugin - User groups with permissions\n-feature: Merge Watermark Plugin - Watermark your Cacti graphs\n-bug: Fixed issue where old graph templates (0.8.6-), could import bogus data causing issues with Data Input Methods\n-bug#0000168: Duplicate data sources should be avoided when creating new graphs\n-bug#0000851: Review an imported template\n-bug#0001155: When viewing graph tree do not show empty nodes\n-bug#0001337: Form to filter for graphs in host view mode\n-bug#0001552: Date ranges not shown on graphs in the view with Daily, Weekly, Monthly & Yearly graphs\n-bug#0001573: RRA templates/grouping\n-bug#0001577: Override session handling and store session in Database\n-bug#0001790: Allow for XML delimiter in fields of a script query\n-bug#0001820: Unable to use a Data Input Method Output Field in more than one Data Source Item\n-bug#0001827: Changing the graph template messes up the graph item fields\n-bug#0001836: Add mysql error message to log\n-bug#0001877: Cookies path is not properly set\n-bug#0001966: Expand Devices in tree view not honored\n-bug#0001970: Data query index order cache should be populated on re-index\n-bug#0001981: Cacti is not full UTF-8\n-bug#0001986: CLI allow add_graphs.php to have multiples --snmp-field and --snmp-value options\n-bug#0001996: Allow using data input field in graph title\n-bug#0002096: Enumerated SNMP values not parsed correctly\n-bug#0002112: CLI add configurable parameters for device_add.php\n-bug#0002133: Restrict User to only manage specific device(s)\n-bug#0002135: Regular expression support for filter\n-bug#0002137: Data query oid_suffix parameter does not function\n-bug#0002159: Database creation file not fully compliant with strict SQL mode\n-bug#0002162: Unable to authenticate user with password containing UTF-8\n-bug#0002196: Incorrect script server instance number in log\n-bug#0002225: Make -Cc SNMP option configurable\n-bug#0002255: Script query_unix_partitions.pl should only query local mounts\n-bug#0002336: Implement php-snmp class library\n-bug#0002340: Data query script execution should be escaped\n-bug#0002350: SNMP Data Query index_order ignored\n-bug#0002351: Ping does not work with non-English locale\n-bug#0002361: Spine does not log unknowns the same way cmd.php\n-bug#0002362: Poller cmd.php makes wrong hex-string to decimal conversion\n-bug#0002370: Cacti prints wrong date formats, does not honor a systems locale\n-bug#0002403: Typo in DELETE statement leading to poor graphing performance\n-bug#0002412: Graph Template duplication causes \\t to be converted to TAB char\n-bug#0002418: Data Source Items named 'ds' break UI ability to add more items\n-bug#0002419: SNMP enum results not parsed correctly by cmd.php poller\n-bug#0002452: CVE-2014-4000 PHP Object Injection Vulnerabilities\n-bug#0002454: OS Command Injection\n-bug#0002468: Changing graph format to anything but PNG causes no output\n-bug#0002476: Add support for SNMP v3 EngineID\n-bug#0002483: Cisco ASA using Re-index method of verify all causes recache event every time\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002521: Unable to create two devices via CLI with the same IP-Address\n-bug#0002522: Zero padded hex strings are parsed incorrectly\n-bug#0002535: Graph Template Changes not updating RRDtool command\n-bug#0002636: Creating Data Template with \"U\" for min and max saves field data_input_field_id as 0 for first item\n-bug#0002697: CVE-2016-2313 allows remote authenticated users who use web authentication to bypass intended access\n-bug#0002698: When the host is down the wrong data type are used for some columns in the host table\n-bug#0002723: Renaming a disabled device still attempts to connect and get SNMP host information\n-bug#0002724: Multipage graphs the menu can disappear\n-bug#0002725: Changing graph template does not mark correct interfaces disabled on data query generated list\n\n0.8.8h\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access (regression)\n-bug:0002667: Cacti SQL Injection Vulnerability\n-bug:0002666: When click the [Clear] button after clicking the [Refresh] button in Preview Mode , fails to CSRFcheck\n-bug:0002673: CVE-2016-3659 - Cacti graph_view.php SQL Injection Vulnerability\n-bug:0002676: Outdated MIBs for non-unicast packets\n-bug:0002677: Index is a MySQL 5.6 reserved word\n-bug:0002681: generate_graph_def_name() generates reserved word \"cf\"\n\n0.8.8g\n-bug:0002161: Graph management \"graph()\" function conflicts with graphviz PECL extension graph()\n-bug:0002320: Unable to delete more than 500 graphs at once\n-bug:0002591: graph_view.php - unable to advance to Next Page in Tree View\n-bug:0002608: cacti 0.8.8f - Data Templates - Poller/script issue with backslash\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002616: cdef.php -- Extra php closing tag\n-bug:0002617: PHP Warning is thrown when trying to include auth_login.php\n-bug:0002623: log warning display wrong time_interval\n-bug:0002627: Graph tree doesn't work in Internet Explorer\n-bug:0002601: graphs_new.php query not sorted as per definition xml:index_order\n-bug:0002625: Plugins don't display the next page\n-bug:0002631: RRDtool export not XML compliant - results in empty CSV exports\n-bug:0002622: graph_view.php -- Navigation and Content Areas are not visible in Tree Mode\n-bug:0002626: Unable to add two users in a row - Notice: Undefined index: id\n-bug:0002620: Unable to copy user\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002646: SQL injection in graph.php\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access\n-bug:0002647: 0.8.8g rev 7767 Can add cacti devices to graph tree \"Save Failed\"\n-bug:0002652: CVE-2015-8604: SQL injection in graphs_new.php\n-bug:0002655: CVE-2015-8377: SQL injection vulnerability in the host_new_graphs_save function in graphs_new.php\n-bug:0002629: Cacti lacks tab icons in chrome from android\n-bug:0002619: Fix incorrect placement of htmlspecialchars() in tree.php\n-bug:0002642: ping.pl does not take into account host port numbers\n-bug:0002567: RRDtool 1.5.x Support\n-bug:0002269: |query_ifSpeed| in --upper-limit for graph template does not work with empty ifSpee\n\n0.8.8f\n-bug:0002599: 0.8.8e Poller Script Parser is Broken\n-bug:0002600: cli/upgrade_database.php is missing releases\n-bug:0002603: Graph managment graphs.php save button does not work\n-bug:0002599: Poller Script Parser is Broken\n\n0.8.8e\n-bug: Fixed issue with graph zooming failing to work\n-bug: Fixed various SQL Injection vectors\n-bug#0002569: Impossible to have a URL pointing directly to a graph\n-bug#0002574: SQL Injection Vulnerabilities in graph items and graph template items\n-bug#0002577: CVE-2015-4634 - SQL injection in graphs.php\n-bug#0002579: SQL Injection Vulnerabilities in data sources\n-bug#0002580: SQL Injection in cdef.php\n-bug#0002582: SQL Injection in data_templates.php\n-bug#0002583: SQL Injection in graph_templates.php\n-bug#0002584: SQL Injection in host_templates.php\n-bug#0002586: Cannot delete data sources from the GUI\n-bug#0002592: graph_view.php - viewing host in new tab - Undefined index: nodeid\n-bug#0002594: status_fail_date and status_rec_date are set incorrectly after host is marked down\n-bug#0002597: Incorrect value in Hosts column on Host Templates page\n-bug#0002598: Incorrect row number in Devices -> (Edit) page\n\n0.8.8d\n-feature: Remove un-needed fonts and javascript files\n-bug: Fixed XSS VN: JVN#78187936 / TN:JPCERT#98968540\n-bug#0002261: PHP 5.4.0 added new error_reporting variable, causing cacti to show errors\n-bug#0002391: Odd Behaviour on ReIndex of Data Query Data\n-bug#0002393: Broken thumbnail images for graph templates\n-bug#0002402: Subtree must not have the same header as the parent header\n-bug#0002474: CLI add_device.php dows not set availability_method correctly\n-bug#0002449: The Save button does not work: Invalid html on page Console -> Cacti Settings: empty form tag\n-bug#0002428: Fail to delete all data input items when removing more than 1000 data sources\n-bug#0002439: Password with special character don't work with LDAP authentication\n-bug#0002461: invalid bn with ldap and anonymous bind\n-bug#0002465: Graph Export return empty CSV file\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002485: Broken pagenation on graph viewing\n-bug#0002489: SNMP - Get Mounted Partitions using Re-index method of Index Count Changed causes recache event every time\n-bug#0002490: Can not select page for multiple datasources per device\n-bug#0002494: CSV export always shows last day\n-bug#0002504: Data template search not functional\n-bug#0002542: [FG-VD-15-017] Cacti Cross-Site Scripting Vulnerability Notification\n-bug#0002543: Unable to switch pages within graphs_new.php due to invalid URL generation\n-bug#0002544: Duplicate entry in $nav_url during list view\n-bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342\n-bug#0002572: SQL injection in graph templates CVE-2015-4454\n\n0.8.8c\n-bug#0002228: GPL incompatible files included in Cacti project in include/treeview\n-bug#0002383: Sanitize the step and id variables CVE-2013-5588, CVE-2013-5589\n-bug#0002385: Cannot export host templates while including dependencies\n-bug#0002386: cli/upgrade_database.php is missing the last two releases\n-bug#0002390: Poller/script issue with slash and backslash\n-bug#0002405: SQL injection in graph_xport.php\n-bug#0002431: CVE-2014-2326 Unspecified HTML Injection Vulnerability\n-bug#0002432: CVE-2014-2327 Cross Site Request Forgery Vulnerability - Special Thanks to Deutsche Telekom CERT\n-bug#0002433: CVE-2014-2328 Unspecified Remote Command Execution Vulnerability\n-bug#0002434: Suppress SNMP UNITS Suffix from cacti_snmp_get() output\n-bug#0002438: Down Host Detection issue when using SNMP Desc or SNMP getNext\n-bug#0002446: Subtract plugin processing time from Poller sleep time\n-bug#0002453: CVE-2014-4002 Cross-Site Scripting Vulnerability - Special Thanks to G. Geshev (munmap)\n-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios\n-bug#0002456: CVE-2014-5025 / CVE-2014-5026 - Cross-Site Scripting Vulnerability - Special Thanks to Adan Alvarez and Paul Gevers\n-bug#0002495: Graph Filter Date Range\n-bug: Fix COMMENT handling, even in case COMMENT is empty, with or without HR and with variable substitution\n-bug: Fix issues when SNMP data holds a \"=\"; \"explode\" must be treated accordingly\n-bug: Fix filter highlighting on data sources for the data template field\n-bug: correct description of SNMP V3 parameters\n-feature: Added native jquery, jqueryui, and jstree\n-feature: Fixed issues with 'Clear' under preview not working\n-feature: Added new Tree navigation\n-feature: Added Columns and Thumbnails to Preview\n-feature: Added Columns to Tree (Preview only)\n-feature: Both Graphs and Columns default to 'Default'\n-feature: Resolved Left hand navigation taking entire page\n-feature: Added new graph zoom to tree view and preview offering a \"quick\" (default) and an \"advanced\" mode\n\n0.8.8b\n-bug: Fixed issue with custom data source information being lost when saved from edit\n-bug: Repopulate the poller cache on new installations\n-bug: Fix issue with poller not escaping the script query path correctly\n-bug: Allow snmpv3 priv proto none\n-bug: Fix issue where host activate may flush the entire poller item cache\n-security: SQL injection and shell escaping issues\n\n0.8.8a\n-bug#0002207: cannot export graph templates\n-bug#0002208: Graphs with CDEFs fail to generate\n-bug#0002209: External auth does not work behind a reverse proxy\n-bug#0002211: creating an index USING BTREE fails ony MySQL < 5.0.60\n-bug#0002213: CLI upgrade script is missing 0.8.7i as a target\n-bug#0002214: SQL error during non-PIA upgrade to 088 when giving a default for a text field in plugin_realms\n-bug#0002216: use of define_syslog_variables() gone in PHP 5.4\n-bug#0002217: url_path should default to /cacti/\n-bug#0002221: Missing plugin directory causes endless loop in plugins.php\n-bug#0002222: tail_logfile hangs when cacti.log not readable, filling apache log with fgets warnings\n\n0.8.8\n-bug#0002056: un-initialized datetime used for host status (was: Zero length string != NULL)\n-bug#0002081: In Graph Management, search display graph title breaks when using pattern symbol \"/\"\n-bug#0002132: need to include pa.sql with the 0.8.7i and future releases\n-bug#0002134: rebuild_poller_cache.php --host-id deletes table poller_item completely\n-bug#0002141: cacti.sql missing BTREE PRIMARY KEY for poller_output\n-bug#0002146: Utilities -> View Log File -> refresh does not work\n-bug#0002150: usort_data_query_index() is broken -> graph order for hosts with data query sort option fails\n-bug#0002151: When building HTML forms with sub_checkbox on_change parameter is not used\n-bug#0002152: Issue with filter on graphs_new.php\n-bug#0002153: Cant search for patterns containing a forward-slash\n-bug#0002156: CDEF strings are not escaped before passed to rrdtool command\n-bug#0002158: Minor changes to grammar of displayed messages\n-bug#0002165: Using data input field in data source name (related to 2079 in 0.8.7i)\n-bug#0002167: New poller hook poller_finishing\n-bug#0002172: structure_rra_paths.php does not handle disabled data sources\n-bug#0002174: poller_item.host_id has wrong type\n-bug#0002178: typo in include/global_form.php: Mimimum -> Minimum\n-bug#0002181: session_unregister (use in functions.php) doesn't exist anymore in PHP 5.4\n-bug#0002182: When there is no suitable (unique) index, graphs are not shown in data query ordering on host leafs\n-bug#0002189: Proper graph hooks\n-bug#0002191: Refresh issues\n-bug#0002194: changing data query XML <index_order> does not propagate to existing data sources\n-bug: Fix input validation on cli/api_device.php\n-bug: Fix issue with data source template associate command line script inserting incorrect rra information\n-bug: Fix minor display issue on data source pages\n-bug: Fix minor issue with counting items in the poller_output table\n-bug: Graph settings and settings check boxes do not allow unchecking to be saved\n-bug: Fix minor issue with plugin library caused by non-session\n-bug: Fix SQL error on data input save for non-templated graphs\n-bug: user_log index added to increase performance\n-feature: Merge Plugin Architecture into Cacti\n-feature: Added index to data_template_data to increase performance\n\n0.8.7i\n-bug#0001963: Bandwidth summation \"total in\" and \"total out\" are always 0\n-bug#0002040: ICMP ping errors for Windows 7 with PHP 5.3\n-bug#0002062: Multiple security vulnerabilities\n-bug#0002063: Multiple value poller output incorrectly interpreted as hexadecimal value\n-bug#0002064: Removing \"~\" (tilde) by sanitize_uri() conflicts with Apache UserDir translation\n-bug#0002066: Graph without host id \"Notice: Undefined variable: host_id\"\n-bug#0002067: Custom time range filter not working\n-bug#0002068: Missing header include in analyze_database.php\n-bug#0002071: MySQL table poller_item is dropped always when \"Data Input Method\" is changed or added.\n-bug#0002079: Using input field of a script in graph title does not work\n-bug#0002080: Database password containing \"@\" does not connect\n-bug#0002083: Adding a new users generates errors in apache logs\n-bug#0002084: Incorrect normalization of hrStorageTable values over 2^31\n-bug#0002086: Incorrect usage of mysql custom tcp port\n-bug#0002087: PHP recache problems due to missing slashes in reindex table\n-bug#0002093: Unit exponent value of 0 not imported with graph template\n-bug#0002094: CDEF: \"another cdef\" references not included in template export\n-bug#0002106: Command line add device does not accept \"None\" for host template\n-bug: Update host template cli script help to fix incorrect options\n-bug: Refresh of Cacti log viewer not working\n-bug: Problems saving User Graph Permissions in IE9\n-bug: Bandwidth summation fails if NAN values are present\n-bug: Special Type Code \"host_id\" available in Data Queries by Not Data Input Methods\n-bug: Do not generate error messages when creating non host based graphs\n-bug: Wrong index used for Data Queries using VALUE/REGEXP\n-bug: Fix issue with title variable replacement failing when no host is associated with graph\n-bug: Cacti generating MySQL 1100 Errors when modifying the tree\n-bug: Resolved \"Fatal error: Cannot use string offset as an array\" in lib/data_query.php\n-feature: Properly support ifHighSpeed replacement variable\n-feature: Increase granularity of availability options to correct spine bug\n-feature: Replace \"event count\" with last changed date for host availability\n\n0.8.7h\n-bug#0001403: Reapply Suggested Names does not work correctly for graphs and data sources not associated with Data Queries\n-bug#0001568: Remove PHP 5.3 deprecated functions\n-bug#0001584: Concurrent changes to graph tree ordering can corrupt sort values\n-bug#0001626: Symbol ($) does not appear in labels/gprint strings to rrdtool during graph generation\n-bug#0001632: Script server treats quoted arguments with spaces incorrectly as multiple separate arguments\n-bug#0001646: MySQL SSL connection support\n-bug#0001660: Modifying data template values does not propagate as expected\n-bug#0001678: Adding graphs to a device fails to add entries to poller_item if using the script server\n-bug#0001768: Perform consistency check on ds maximum vs. ds minimum\n-bug#0001783: Graph Export export date is incorrect\n-bug#0001812: Data template copying ignores some item templating\n-bug#0001814: Command line device add script fails when SNMP default is disabled\n-bug#0001815: One minute polling not working correctly\n-bug#0001816: Cannot export graph data to CSV with IE 8\n-bug#0001819: MySQL \"TYPE=\" command deprecated since MySQL 4.1 removed in MySQL 5.4.4\n-bug#0001826: Zoomed graph views should auto refresh\n-bug#0001828: Reapply Suggested Name prompt as spelling problems\n-bug#0001835: Graph edit page has more than one html form tag\n-bug#0001847: Graph export API function has required argument not defined\n-bug#0001851: Graph creation selector does not work with data query that has no associated graph templates\n-bug#0001855: Improper formatting of data queries can result in SQL errors\n-bug#0001862: Ping script does not process output of update ping utility\n-bug#0001867: RRDtool Cacti fetch function does not work for some locales\n-bug#0001876: PHP function strip_quotes causes HEX values to be truncated\n-bug#0001880: Form validation error message does not highlight text area control\n-bug#0001882: Cacti snmp_walk function fails if max_oids is an empty value\n-bug#0001890: Default tree view mode set to single pane mode not working\n-bug#0001893: Data input method description text does not make sense\n-bug#0001900: Equal sign not correctly parsed in snmp data results\n-bug#0001903: Undefined variable: mode in lib/ldap.php on line 375\n-bug#0001918: Script server does not accept more than one blank space before the function name\n-bug#0001926: Importing templates \"using defaults for this installation\" associates all rra's defined\n-bug#0001928: graph_image.php does not check local_graph_id\n-bug#0001929: Error when exporting templates are not properly reported\n-bug#0001930: No error reporting for wrong RRA\n-bug#0001934: Poller does not process SIGTERM signal correctly\n-bug#0001936: Removing multiple data sources is inefficient\n-bug#0001937: Technical support page uses check table which waits for table lock\n-bug#0001939: Do not query for number or items per host if concurrent polling processes is set to one\n-bug#0001954: Usage of PHP_SELF without basename in html.php (at least partly fixed)\n-bug#0001956: Attempts to update existing tree item fail\n-bug#0001967: Reflected XSS on Cacti 0.8.7g\n-bug#0001989: IE9 breaks Cacti when objects are hidden using 'display:none;' style tag\n-bug#0001993: Undefined index in lib/html.php\n-bug#0001995: REQUEST_URI not properly escaped in graph_view.php for preview mode\n-bug#0002005: Saving Script Server or Script Data Input Method Results in SQL Error\n-bug#0002060: NAN values in hdd utilisation graphs (Poller Output Table not Empty)\n-bug: Fix SQL injection issues in login page\n-bug: RRDtool fetch in Cacti fails to function properly on rrdtool files with NaN values in the output\n-bug: Accept \"Connection refused\" on TCP ping tests\n-bug: Add missing row selection javascript to graph preview\n-bug: Script server throws \"undefined variable\" error when in debug mode\n-bug: Removing graphs does not take advantage of bulk deletes\n-bug: Fixed issue with multiple \"U\" results for a data input method with multiple output parameters\n-bug: SNMP v3 use AuthNoPriv when privacy passphrase is empty\n-bug: Fixed sql errors when using template and search filter on graph management\n-bug: Delete Data Source multi fails to perform bulk deletes on Data Source items\n-bug: Allow Timespan Selector to work with $_REQUEST as well as $_POST\n-bug: While in the mrtg view of Cacti Graphs, or in viewing graph properties zoom fails\n-bug: The filepath api call should trim the filename before checking for the files existance\n-bug: Fix issues with IE9 while editing templates\n-bug: Form action in graph_items.php incorrect\n-bug: Initial drawing of tree causing Next/Previous with malformed URI\n-feature#0001519: Spine enhancement for parallel collection of data at device level\n-feature#0001667: Get values of |host_*| variables in graph elements from data source\n-feature#0001922: Reindex method \"Index Count Changed\" requires that OID_NUM_INDEXES is given for SNMP Data Queries\n-feature#0001923: Implement counting for script (server) data queries just like OID_NUM_INDEXES\n-feature#0001924: Allow for reindex method \"Index Count Changed\" to apply to script (server) queries as well\n-feature#0001952: Ability to use input field of a script in graph title\n-feature: Make reindexing and repopulating the poller cache a lossless process\n-feature: Change default font sizes\n-feature: Add analyze database and push out host cli scripts\n\n0.8.7g\n-bug: RRDtool 1.4.x not recognized during installation\n-bug: Implement windows-aware shell escaping\n-bug: Fixed multiple cross site scripting vulnerabilities reported by Tomas Hoger of the Red Hat Security Response Team\n-bug#0001292: Over 8TByte Partition in Windows cant get correct data from snmp\n-bug#0001486: Unable to login after redirection to access denied page\n-bug#0001516: \"Show the page that user pointed their browser\" does not seem to work\n-bug#0001561: Over zelous HTML excaping on filter strings\n-bug#0001575: LDAP-Authentifications does not work due to ldap_host being set incorrect\n-bug#0001587: Feature from bug#0001271 breaks on large values\n-bug#0001607: Web Basic authentication does not work with fastcgi\n-bug#0001620: Max OID's max value reported incorrectly in Web UI\n-bug#0001747: oid_suffix do not work correctly for input direction on data queries\n-bug#0001756: Alternate font styles do not work correctly\n-bug#0001757: LDAP realm authentication outputs warning for undefined index\n-bug#0001763: Unable to add graph permissions on a user\n-bug#0001765: Tech support does not work correctly with RRDtool 1.4.x\n-bug#0001766: Page refresh setting not being honored\n-bug#0001771: \"index count changed\" not implemented for query_unix_partitions.pl, query_host_partitions.pl, query_cpu_partitions.pl, ss_host_cpu.php and ss_host_disk.php\n-bug#0001773: Character encoding problem after upgrade to 0.8.7f\n-bug#0001775: Tech support page does account for no memory limit set for PHP\n-bug#0001776: Simultaneous databases connections are not supported\n\n0.8.7f\n-security: SQL injection and shell escaping issues reported by Bonsai Information Security (http://www.bonsai-sec.com)\n-security: Cross-site scripting issues reported by VUPEN Security (http://www.vupen.com)\n-security: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability (http://php-security.org)\n-bug#0001125: XML parse error on template import with degree symbol\n-bug#0001311: Access denied for graph-only users when accessing index.php directly\n-bug#0001366: Exported data templates do not import special characters properly\n-bug#0001416: Graph Export fails with EXPORT FATAL ERROR: Export path /some/path/root/export is within a system path /root. Can not continue.\n-bug#0001452: Missing \"<\" and \">\" in \"Collection Methods=>Data Input Methods=>\"Input String\" after importing template\n-bug#0001461: Data query export/import fails\n-bug#0001492: RRDtool 1.3 series fonts (fontconfig) support\n-bug#0001506: Reindexing fails due to global include issue in lib/snmp.php\n-bug#0001522: Special characters break parsing of template data\n-bug#0001524: Export graphs and Classical Presentation does not honor per graph export rules\n-bug#0001528: ICMP Ping availabilty broken in UI for Windows Servers using IIS\n-bug#0001535: No display of parent ID in tree nodes for CLI tree add script\n-bug#0001543: All graphs are exported dispite graph export rules\n-bug#0001549: Function array_to_sql_or creates poor sql where clauses\n-bug#0001557: Quotes in Text Format graph template field break graph rendering\n-bug#0001587: 64bit HEX Strings do not convert to Decimal on 32bit Systems\n-bug#0001604: HEX Counter values enclosed in quotes not recognized as HEX\n-bug#0001609: Script server timeout too aggressive with 10 second poller interval\n-bug#0001628: Inconsistent message for Change SNMP Options related to available buttons\n-bug#0001695: Suppress deprecated warnings in Cacti code\n-bug#0001725: PHP Fatal Error while trying to add a tree node via cli\n-bug: When creating new graphs without a data source, print error to user instead of throwing php error\n-bug: Browser query string does not contain arguments\n-bug: Function inject_form_variables does not operate if more than 1 variable needs replacing\n-bug: Script imposed memory limits cause issues with some scripts\n-bug: Turn off process leveling if there are not enough poller items to substantiate it\n-bug: Add device should allow no-snmp type devices\n-bug: Firefox Autocomplete causes issues with password validation\n-bug: Access Denied messages do not allow re-direction to login page\n-bug: When clearing filter on new-graphs do not clear host or template\n-bug: When clearing filter, reset page to 1 for all queries\n-bug: Graph List selectors do not persist between pages\n-bug: allow empty [upper|lower]_limit even without autoscaling\n-bug: Availability method Ping or SNMP generates meaningless warnings\n-feature: Add logging to SQL Save error handling\n-feature: Add utility to convert database to InnoDB\n-feature: Return nav as the title for the page\n-feature: Detect and correct for RRDtool segfaults\n-feature: Add rra_id for hosts and graphs to be used during tree export\n-feature: Make the Graphs pages render like the rest of Cacti\n-feature: Convert base Cacti UI to use buttons and not images\n-feature: Make poller sane so that it can be used by other cacti processes\n-feature: Add snmp timeout warnings for lib/snmp.php\n\n0.8.7e\n-bug#0001044: Creating a DS, Output field can't be selected for DT with a DIM when \"Use Per-Data Source Value\" is on\n-bug#0001341: SNMP query: add oid_suffix for weird SNMP queries\n-bug#0001345: Overwriting $snmp_index in query_snmp_host() breaks SNMP Data query if using get method\n-bug#0001346: Strip out noisy 'No Such Instance currently exists at this OID'\n-bug#0001404: timeout in \"function ping_icmp\" (lib/ping.php)\n-bug#0001405: Spaces in DS when .rrd file is created, so it fails\n-bug#0001407: Place graph thumbnail into div to lower page length changes on load graphs\n-bug#0001410: Thumbnail Columns is not honored for host display with snmp index group style\n-bug#0001411: Graph searching issue\n-bug#0001413: strip_quotes fails\n-bug#0001426: multiple form opening due to bug in draw_edit_form()\n-bug#0001436: CSV Export Start Date and End Date are always 1970-01-01 01:00:00\n-bug#0001443: format_snmp_string can return a number with a leading space\n-bug#0001446: Wrong dates override in CSV export\n-bug#0001456: oid_uptime is not parsed correctly\n-bug#0001460: Skiping input parameters in data_query_field_list() may lead to SQL errors\n-bug#0001464: Typo in install/index.php\n-bug#0001467: Customisable oid index parse regexp for weird MIBs\n-bug#0001468: Tree is not expanded correctly\n-bug#0001469: Tree is not being expanded if user followed link outside of cacti\n-bug#0001476: Mark stacked columns in rrdtool_function_xport() output\n-bug#0001477: Spelling error in a variable in html_tree.php\n-bug#0001478: Combo boxes on Graph Management page produce URLs with leading spaces\n-bug: Top Graph Header Breaks When Plugins Used\n-bug: SNMP v3 Password issue caused by Firefox's Password AutoFill\n-bug: Strip Quotes does not properly handle the value 'U'\n-bug: Changes to the graph tree would not show up immediately for current user\n\n0.8.7d\n-bug#0001336: Allow to specify on_change handler for checkbox_group\n-bug#0001338: When Using Web Basic Authentication HTML Bookmarks Do Not Work\n-bug#0001388: Spine uses illegal flag for ping on Mac OS X\n-bug#0001351: Deleting 1000 graphs along with their Data Sources crashes the Server\n-bug#0001361: SNMP query: 'No more variables left in this MIB View' instead of value of input field\n-bug#0001374: ss_host_disk.php etc. error corrected when using SNMP V3 (index off by 1)\n-bug#0001376: graph_items.php variable $id defined in wrong place\n-bug#0001377: Several bugs in new cli script \"structured_rra_paths\"\n-bug#0001378: ping.pl script fails when using tcp:hostname\n-bug#0001382: cdef.php error due to wrong function name\n-bug#0001383: syntax error in lib/rrd.php with PHP 4.4.4\n-bug#0001384: utilities.php does not handle view_snmp_cache when host_id = -1 (Any)\n-bug#0001385: LDAP Error: Group DN could not be found\n-bug#0001391: parsing snmp string with \"=\" ?? --> WARNING: Result from SNMP not valid\n-bug#0001392: Problem on CDEF function ALL|SIMILAR_DATA_SOURCES_(NO)?DUPS\n-bug#0001394: Error of variable in lib/html_tree.php\n-bug#0001398: Cross site scripting checking is overly protective on search filters\n-bug#0001400: LDAP authentication results in PHP warning message\n-bug: Resolved issue with reapply suggested names not working for data sources under certain conditions\n-bug: Correct missing db_conn argument issue\n-bug: Deleting large number of hosts results in SQL errors due to MySQL buffer overrun\n-feature: SNMP cli version information added to tech support page\n\n0.8.7c\n-bug#0000157: Dual pane tree does not have the option of not rendering all trees in one page\n-bug#0000486: RRA template edit allows invalid XFF values\n-bug#0000626: Setting \"Default Graph Tree\" does not work with dual pane view\n-bug#0000828: Truncated IOS description in |query_ifAlias|\n-bug#0000909: ALL_DATA_SOURCES_NODUPS breaks graphing when using \"Consolidation Function\" MAX\n-bug#0000943: scripts/ping.pl has incorrect response when \"icmp hop redirect\" occurs\n-bug#0000948: Exporting graphs to a local path does not work correctly in some cases\n-bug#0000986: Graphs that are done by graph type are not exported when using the tree view\n-bug#0001022: strip_quotes incorrectly parses script output\n-bug#0001090: LDAP authentication fails when using quote character in password\n-bug#0001135: Graph export feature not exporting as per user level selected\n-bug#0001136: Regex ambiguous for mbstring\n-bug#0001138: Lack of error checking causes graphs to not update when rrdtool crashes\n-bug#0001141: Script server appears broken for \"index\" and \"query\" requests (Documentation Fix)\n-bug#0001145: Save Failed error when changing Graph Details\n-bug#0001153: Undefined variable: local_graph_id in graphs.php on line 201\n-bug#0001166: Installer does not properly handle disabled guest_user conversion\n-bug#0001174: Unidentified index warning\n-bug#0001175: Hide hosts in Graph Permissions that you already have access to\n-bug#0001176: Problem validating IPv6 addresses\n-bug#0001188: Graph export issues in tree mode\n-bug#0001191: Faulty IP address validation by ping.php script\n-bug#0001180: Graph Export to CSV failed by using IE 6 SP2\n-bug#0001194: RRDtool URL is incorrect on the about page\n-bug#0001204: Since upgrade to 0.87b the hosts with ip address with 255 are down and have no datas\n-bug#0001206: Graphs are not zoom-able with PHP warnings turned on\n-bug#0001211: Allow use of \"REMOTE_USER\" if \"PHP_AUTH_USER\" is not set for authentication\n-bug#0001213: Template Copy does not hash copied template_items\n-bug#0001215: Impossible to define a none availability with the client cli/add_device.php\n-bug#0001216: CSV Export for zoomed graph, results in Validation error\n-bug#0001217: Default Graph Tree is not reflected in Left Pane of the graph page\n-bug#0001223: Missing Hard return on last GPRINT causes bad formatting\n-bug#0001228: LDAP server port not honored\n-bug#0001230: Poller stops updating rrd files\n-bug#0001236: Set 'stats_recache' to zero when no re-index is present\n-bug#0001238: Guest user has access to change password\n-bug#0001239: Using the TOTAL_ALL_DATA_SOURCES in a graph where all item are using the MAX CF yields an invalid(empty) CDEF\n-bug#0001240: SNMP string cleanup removes too many '=' signs\n-bug#0001244: Missing closing </form> on host.php\n-bug#0001247: Snmp ping won't work for snmp v3\n-bug#0001256: Spine-poller.c : Bug in size string sysUptime\n-bug#0001258: \"Remove Verification\" is an ambiguous definition, leads to data loss\n-bug#0001259: LDAP Authentication using Solaris 10 standard ldap client fails\n-bug#0001262: Do not allow deletion of Graph Export User\n-bug#0001264: CDEFs can't recognize |query_*|\n-bug#0001268: resource/snmp_queries/net-snmp_disk.xml has incorrect name for \"Percent Available\"\n-bug#0001271: Hex string to decimal conversion for proper RRDtool storage\n-bug#0001273: Escape windows paths to accommodate spaces\n-bug#0001281: ICMP Ping fails if an octet == 255\n-bug#0001283: graph_image.php causes PHP Notice errors on view\n-bug#0001286: poller_item cache is not updated when \"Data Input Method\" is changed\n-bug#0001288: A host with ICMP ping selected as method does not properly perform ping\n-bug#0001291: Reapply Suggested Names fails on Script Queries\n-bug#0001293: When Creating Data Query Graphs, Performing Search will Cause List to Disappear\n-bug#0001294: Stack overflow if database is not correctly initialized\n-bug#0001295: Division by zero when rrd_step < poller_interval\n-bug#0001296: add_graphs.php does not add the graph template to the host\n-bug#0001299: When creating graphs the entire poller cache is recreated for a host\n-bug#0001314: Use Data Query variables as HRULE input for graph templates\n-bug#0001318: Graph Export with 1 minute poller re-exports graphs 5 times\n-bug#0001320: Invalid PHP_SELF Path\n-bug#0001326: If a user's password contains a single quote the login fails\n-bug#0001342: VRULE printed as HRULE on graph_templates.php graph template item list\n-bug#0001380: Expand description of ping retries\n-bug: Remove include/html files to mitigate XSS issues\n-bug: IE generates errors on both the host and graph settings pages\n-bug: Host save failed in FireFox 3 for non-SNMP V3 hosts, complaining about \"password mismatch\"\n-bug: Initialization of snmp_auth when using SNMP=NONE\n-bug: Speed up add_graphs.php in most cases (still slow only if --input-fields is used)\n-bug: If the poller_output table is not empty, do not flood the log\n-bug: Remove warnings appear in the httpd log relative to reset attempts on settings array\n-bug: Add API Automation tool quietMode to additional functions\n-bug: When Cacti is launched from within an iframe, cookies are dropped from IE6\n-bug: Database upgrade and cacti.sql differ\n-bug: drop color setting background on FF does not work\n-bug: cli/add_tree.php requires as least a host-id for --list-graphs\n-bug: add_tree.php did not allow nodes with propagating sort options\n-bug: When adding a tree node via the api numeric and natural were reversed\n-bug: When saving a data query based data templates, their data sources would become corrupt\n-bug: If your system contains INNODB tables, the Technical Support page would hang\n-bug: The default user tree link icon would not be properly highlighted when opening graphs\n-bug: Severe performance problems when adding data query based graphs.\n-bug: Default refresh on Cacti Log was too quick\n-bug: Some users do not like the idea of automatic page refreshes\n-bug: Allow more rows to be visible in Cacti pages\n-bug: Ping and SNMP should test both conditions\n-bug: When step is less than poller interval, item will stop polling for long period of time\n-bug: When using Web Basic authentication, user is directed to default page and not REQUEST URI\n-feature#0000284: Custom <path_rra> for each device\n-feature#0000431: Add php-xml to requirements, verify required PHP extensions\n-feature#0000852: Have \"Previous\" and \"Next\" disappear when not in use (only for graph display)\n-feature#0001082: Mirror Graph Rename based on template function to work with Data Sources\n-feature#0001140: CLI-Script to associate a graph template to a host\n-feature#0001162: WEB UI now accepts max_oids on SNMP bulkwalks\n-feature#0001177: CLI Reindexing - poller_reindex_hosts.php: allow filter on \"host description\"\n-feature#0001189: Introducing |data_source_title| variable\n-feature#0001195: Add graph title to graphs page\n-feature#0001201: Reapply Suggested Names for Data Sources and cli/poller_data_sources_reapply_names.php\n-feature#0001205: Add filtering and pagination to cdef management; add \"Duplicate CDEF\"\n-feature#0001220: Disable snmpbulkwalk if max OIDS is less than 2\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001235: CLI script needs to activate a query: add_data_query.php\n-feature#0001250: Dispatching job in poller can lead to unbalanced threads\n-feature#0001249: New pseudo CDEF variables for \"Count All|Similar Data Sources (NO)?DUPS\"\n-feature#0001289: Add \"Graph Properties\" wrench to tree+preview mode\n-feature#0001323: List all graph template associated with a host template\n-feature#0001306: Add Blank Line as possible graph item\n-feature: Paginate Treeview Dual Pane\n-feature: Allow user to specify maximum graphs per page from Treeview Dual Pane\n-feature: Allow Treeview Dual Pane to be filtered for graph titles\n-feature: Allow the user to add or remove graph text from page for searching with the browser\n-feature: Add links to Graph Management and Data Sources to Device Edit Screen\n-feature: Add links to Graph Template and Host Edit to Graph Edit Screen\n-feature: Add links to Data Template and Host Edit to Data Source Edit Screen\n-feature: Support using the cacti database api with more than one connection\n-feature: Add some more debug lines to Data Query debugging (Verbose Query)\n-feature: Fix compatibility issues for RRDtool 1.3\n-feature: Make the tabs section work a little better with existing plugins\n-feature: Add additional options to speed data query graph automation process\n-feature: Add additional indexes to speed data query graph creation\n-feature: Allow the cli reindexing of hosts to be limited to a single query\n-feature: New cli command host_update_template to allow re-templating of hosts using an updated template\n-feature: When reindexing hosts, allow a queryid to be specified\n-feature: Add command line Database upgrade script\n-feature: Add api call to associate graphs with their data sources\n-feature: Move the notes field to bottom of page\n-feature: New availability option \"Ping or SNMP\"\n-feature: Allow for specification of a default reindex method\n-feature: Show more colors on a single color's page\n-feature: Exit is either a database or table does not exist\n-feature: Add developer debug level to reduce SQL messages in DEBUG\n-feature: Add support for group membership for LDAP authenication\n\n0.8.7b\n-bug#0000855: Unnecessary (and faulty) DEF generation for CF:AVERAGE\n-bug#0001083: Small visual fix for Cacti in \"View Cacti Log File\"\n-bug#0001089: Graph xport modification to increase default rows output\n-bug#0001091: Poller incorrectly identifies unique hosts\n-bug#0001093: CLI Scripts bring MySQL down on large installations\n-bug#0001094: Filtering broken on Data Sources page\n-bug#0001103: Fix looping poller recache events\n-bug#0001107: ss_fping.php 100% \"Pkt Loss\" does not work properly\n-bug#0001114: Graphs with no template and/or no host cause filtering errors on Graph Management page\n-bug#0001115: View Poller Cache does not show Data Sources that have no host\n-bug#0001118: Graph Generation fails if e.g. ifDescr contains some blanks\n-bug#0001132: TCP/UDP ping port ignored\n-bug#0001133: Downed Device Detection: None leads to database errors\n-bug#0001134: update_host_status handles ping_availability incorrectly\n-bug#0001143: \"U\" not allowed as min/max RRD value\n-bug#0001158: Deleted user causes error on user log viewer\n-bug#0001161: Re-assign duplicate radio button IDs\n-bug#0001164: Add HTML title attributes for certain pages\n-bug#0001168: ALL_DATA_SOURCES_NODUPS includes DUPs? SIMILAR_DATA_SOURCES_DUPS is available again\n-bug: Cacti does not guarentee RRA consolidation functions exist in RRA's\n-bug: Alert on changing logarithmic scaling removed\n-bug: add_hosts.php did not accept privacy protocol\n-security: Fix several security vulnerabilities\n-feature: show basic RRDtool graph options on Graph Template edit\n-feature: Add additional logging to Graph Xport\n-feature: Add rows dropdown to devices, graphs and data sources\n-feature: Add device_id and event count to devices\n-feature: Add ids to devices, graphs and data sources pages\n-feature: Add database repair utility\n-feature: Default Script Server/Script Queries now accept host specific ping_retries, max_oids\n-feature: Support for new variables |host_ping_retries| and |host_max_oids|\n\n0.8.7a\n-bug#0000895: \"Use Per-Data Source Value (Ignore this Value)\" runs only when when checking \"Allow Empty Input\"\n-bug#0001029: Add --autoscale-min (rrdtool 1.2.x only) and --autoscale-max (using upper AND lower limit)\n-bug#0001035: Allow for --logarithmic scaling without autoscaling\n-bug#0001038: Data sources in RRAs have random order, messing up predefined CDEFs\n-bug#0001043: Graph Templates drop down populates with duplicates\n-bug#0001046: Upgrade from 0.8.6j to 0.8.7 defaults to Authentication Method NONE\n-bug#0001052: Graph template - GRINT creates CF function DEF\n-bug#0001055: Invalid date format - \"half hour\" not the GNU Date format\n-bug#0001057: SQL error when using 'Auth Method' None when no 'guest' user exists\n-bug#0001058: Graph Filter dropdowns do not respect user graph permissions\n-bug#0001059: Potential SQL injection vulnerability\n-bug#0001060: RRDtool 1.2.15 complain for garbage characters when rrdtool_function_xport is used\n-bug#0001061: cmd.php: potential call to invalid \"availability_method\" key on wrong hash\n-bug#0001064: Log file viewer inefficient filtering uses excess memory\n-bug#0001066: doc change for using COUNTERs as integers only\n-bug#0001067: Fixed extra spaces in GPRINT. Better Alignment for Autopadding\n-bug#0001068: doc change for patching cacti when running SELinux\n-bug#0001070: Cron interval detection causes multiple pollers to run\n-bug#0001073: Max OIDS is not saved in device view\n-bug#0001078: Undefined variable: rra in graph.php on line 241\n-bug#0001079: Dates are not stored in host table using correct format\n-bug#0001080: Graph Export Generates SQL Errors\n-bug#0001081: Usernames with spaces and dashes are not able to save\n-feature#0001035: Allow for --units=si on logarithmic scaled graphs (rrdtool-1.2.x only).\n-feature#0001069: add opacity/alpha channel to graph items (rrdtool-1.2.x only).\n-feature#0001065: Move to Top for List and Tree View. Omit boring scrolling\n-feature: add availability pings to host interface\n\n0.8.7\n-bug#0000480: Fix error after altering graphs displayed per page\n-bug#0000740: Add support for setting the PHP session name of Cacti\n-bug#0000829: Add support for an specifying an uptime OID for SNMP queries\n-bug#0000830: Add filtering graphs by Graph Template\n-bug#0000833: Add favicon.ico support\n-bug#0000850: Add Select All for graph list view\n-bug#0000854: Move \"Downed Host Detection\" into the device edit screen\n-bug#0000873: Fix issues with the poller hanging in certain situations\n-bug#0000876: Add ability to search for host with a not UP status\n-bug#0000898: Selecting a CUSTOM timespan and then CLEARing yields \"LAST HALF HOUR\" preset\n-bug#0000899: Add local checking to the Paths tab on the Settings page\n-bug#0000902: Fix issues with cmd.php and PHP 4.4.1 under windows\n-bug#0000903: snmpgetnext function does not exist in PHP less than 5.0\n-bug#0000904: Data Source creation fails without php-snmp\n-bug#0000906: Every tenth host does not show on tree during console edit\n-bug#0000907: Sorting of data sources when interface numbers are used without leading zeros are incorrectly sorted\n-bug#0000908: Graphs created by SNMP data queries are losing their specific names if the template is modified\n-bug#0000910: Cacti complains when trying to set the data source \"maximum value\" to any number with a decimal point\n-bug#0000912: Nth Percentile thumbnail graphs fail with RRDtool 1.2.15, 1.2.18\n-bug#0000913: Allow direct linking to specific graph pages\n-bug#0000919: Fix problem with ping_tcp function\n-bug#0000920: Improved handling of rrdtool --font parameter\n-bug#0000921: Improvement to ping.pl script\n-bug#0000925: Support for host_* variables in the legend\n-bug#0000926: Stop removing useful characters when searching\n-bug#0000927: Classic export does not recognize thumbnail columns properly\n-bug#0000931: New rrdtool fails on empty comment\n-bug#0000934: Column 'status_last_error' in table 'host' too short.\n-bug#0000937: System output in hosts.php poor for Alcatel\n-bug#0000946: Timetick of zero returns down for device\n-bug#0000947: Trailing blank on OID in form causes problems\n-bug#0000953: SNMP Passphrase is displayed in cleartext\n-bug#0000954: Y-grid lables are not informative when using --alt-autoscale\n-bug#0000955: Fixed possible denial of service attack by modifying graph image URL\n-bug#0000956: Additional editing help with tree management\n-bug#0000957: Script server output's beginning/trailing data during \"Include\" causing a synchronization issue\n-bug#0000958: Slope Mode is now selectable\n-bug#0000959: Alarming added when poller output table is not empty\n-bug#0000963: TCP/UDP capitalization\n-bug#0000965: When setting filters under utilities, pressing enter takes you back to the main page\n-bug#0000966: Log file viewing utility has no ability to filter\n-bug#0000969: In some versions of PHP, the graph tree will not view properly\n-bug#0000970: Incorrect debug messages in lib/ping.php for failed UDP ping\n-bug#0000974: No graphs on Fedora core6 using sunone/iplanet 6.1 SP5\n-bug#0000975: Add Nth Percentile aggregate_current - Summing Multiple Data Sources with like names for Nth Percentile\n-bug#0000982: Remove invalid references to the \"output_string\" column in the \"data_input\" table\n-bug#0000983: Bad SQL: snmp_query_graph_rrd.snmp_query_graph_id=\n-bug#0000984: Poller does not correctly flush poller_output table after a memory error\n-bug#0000989: hyphen - host description used with Data Source Path\n-bug#0001001: \"Purge User Log\" keeps invalid entries\n-bug#0001002: Cacti reports incomplete interface status\n-bug#0001007: SNMPv3 password field allows command injection\n-bug: ss_sql.php causes the script server to crash\n-bug: Timeshifter added to base code\n-bug: Allow query_ and host_ substitution in COMMENT and CDEF's.\n-bug: Command line interface scripts to add devices, graphs, tree's and permissions.\n-bug: Correct index error when creating graphs when you have no hosts on your system.\n-bug: More recent versions of net-snmp broke SNMP walk functions.\n-bug: Adjust for problematic responses from some SNMP agents (IBM AIX).\n-bug: Improve logging in cmd.php and poller.php when parameters are not specified correctly.\n-bug: Reduce the total number of SQL queries called\n-bug: Replace inefficient strip function in process_poller_output\n-bug: Some php_snmp implementations return strings as \"Hex-STRING:\".  In these cases properly resolve the string\n-bug: Correctly assign right and left click actions for Opera\n-bug: Fix SQL error when viewing an invalid Data Source via the Log Viewer\n-bug: Fix command line user copy utility\n-feature: Paginate the Graph Creation Page\n-feature: Add SNMPv3 Support to Cacti\n-feature: Add a Notes field to the Device that can contain arbitrary information\n-feature: Add Availability Methods to Cacti including per Host Ping Methods and Timeouts\n-feature: Add Max OID's to te Host Level\n-feature: Allow CSV Export from the various Graphs page\n-feature: Add rra_path as a global.php config variable\n-feature: Add drop down actions to data queries\n-feature: Add drop down actions to data input methods\n-feature: Add drop down actions to user administration\n-feature: Add filtering and pagination to data queries\n-feature: Add filtering and pagination to data input methods\n-feature: Add filtering and pagination to host templates\n-feature: Add filtering and pagination to user administration\n-feature: Add extended LDAP authentication support\n-feature: Add Web Basic authentication\n-feature: Add authentication realm to modifiable user parameters\n-feature: Add multiple polling intervals\n-feature: Moved command line scripts to cli sub directory\n-feature: include/config.php now only includes database configuration\n-feature: include/config_* have been renamed to include/global_*. Note: Script servers need to be updated.\n-feature: Allow VRULE's in Cacti to specify an absolute timestamp in addition to [+/-]HH:MM\n-feature: Add 1 minute RRA\n-feature: Add item select highlighting to main pages\n-feature: Let poller.php be more intelligent about poller intervals less than 60 seconds\n-feature: Add consistency to Filters by adding nowrap to td items\n-feature: Add Graph and Data Source counts to Device page\n-feature: Add Poller Interval to Data Sources page\n-feature: Keep filters aligned with main page content on window resize\n-feature: Add Enable/Disable user\n-feature: Add copy and batch copy of users\n-feature: Reduce ADODB memory consumption during polling\n-feature: Add new RRDtool Function to facilitate CSV export\n-feature: Add the ability to ignore custom RRA settings when importing templates and use this behavior by default\n-feature: Add technical support output to System Utilities\n-compat: Add additional checking due to php-snmp changes in Windows\n-compat: Remove GIF as a supported file type for RRDtool 1.2.x and added SVG file type\n\n0.8.6j\n-bug#0000842: SNMPv3 password field does not check if entered passwords match.\n-bug#0000848: Fix \"PHP Script Server communications lost\" error in the poller under high network load.\n-bug#0000859: User log \"purge\" now keeps the last successful login.\n-bug#0000861: Use downed host detection even when the SNMP community is blank.\n-bug#0000864: Apply natural sort to graph items in the tree.\n-bug#0000867: Apply various cleanups to poller.php and lib/poller.php.\n-bug#0000870: Add sorting to the graph templates list on the \"Change Graph Template\" page.\n-bug#0000877: Fix issue that caused PHP 5.2.0 to break the Windows cmd.php poller.\n-bug#0000882: Add \"collapsible\" branches to the graph tree editor.\n-bug#0000883: Fix exploit in cmd.php with register_argc_argv enabled in PHP.\n-bug#0000884: Add bottom navigation bar to graph viewing.\n-bug#0000885: Fix issue causing spaces to be removed when importing/exporting data input methods.\n-bug#0000886: Allow SNMP ping to utilize the snmpgetnext call instead of snmpget.\n-bug#0000890: Fix issue with dec-vulnerability-poller patch breaking graph_view.php.\n-bug#0000892: Fix hostname sorting on the devices page for IP addresses.\n-bug#0000894: poller.php does not give any output with MySQL disabled in CLI's php.ini.\n-bug: Template export produces invalid XML escaped character encoding.\n-bug: Data queries were not sorted properly during initial display.\n-bug: Apply various graph changes required for Boost plugin.\n-bug: If your system has no hosts or graphs, you would get a warning when creating new graphs.\n-bug: If using the CGI version of PHP, the script server risked not starting properly.\n\n0.8.6i\n-bug#0000188: Add ability to sort columns by selecting column headers.\n-bug#0000199: Exported thumbnail graphics shows limited time range only.\n-bug#0000207: Correct unit size displayed in the default 'Localhost - Memory Usage' graph.\n-bug#0000286: Fix issue with bandwidth summation on exported graphs.\n-bug#0000313/#0000561: Don't print menu/titlebar by using CSS class noprint.\n-bug#0000316: Take the unit value field into account when creating graphs.\n-bug#0000395: Fix graph export FTP functionality in Unix environments.\n-bug#0000430: Add natural sort order option for graph trees.\n-bug#0000433: Remove script server restriction on varying case path names.\n-bug#0000488: Remove reliance on HTTP_USER_AGENT to prevent possible notices.\n-bug#0000527: Fix issue updating the RRA for a graph tree item.\n-bug#0000584: Add barometer decimal fix to scripts/weatherbug.pl.\n-bug#0000624: Generate DEFs for graph items other than AREA, STACK, and LINE.\n-bug#0000643: Always display a human readable sysUpTime in the device edit page.\n-bug#0000665: Invalid index error on empty or 0 return set from rrdfetch with Nth Percentile.\n-bug#0000672: When creating a device, the Host Template was not properly validated.\n-bug#0000678: Allow graph export to a Cacti sub directory.\n-bug#0000681: Increase the size of the arg1, arg2, and arg3 fields in the poller_item table.\n-bug#0000692: Fix problems with FTP and the tree export method.\n-bug#0000693: Fix problems with the \"Expand Host\" option and the tree export method.\n-bug#0000698: Make arguments to 'df' more compatible with FreeBSD 6.0 in the \"Get Unix Partitions\" data query.\n-bug#0000705: Fix problem with the current selected data source item and SIMILAR_DATA_SOURCES_NODUPS (again).\n-bug#0000709: Fix problems with FTP and the tree export method (duplicate).\n-bug#0000720: Fix undefined variable message in script_server.php.\n-bug#0000721: SNMPv2 Query has issues with ifAlias & ifName when none present.\n-bug#0000727: Allow a user with specific graph permissions to be used when exporting graphs.\n-bug#0000730: Allow non-standard MySQL ports to be specified.\n-bug#0000731: Use proper defaults when adding a device to a tree from the Devices page.\n-bug#0000739: Stop ignoring the \"Unit value\" parameter in the graph template.\n-bug#0000741: Fix issue with links getting mismatched after using zoom on a graph.\n-bug#0000746: Make sure clearing Cacti log file from web interface preserves file permissions.\n-bug#0000752: Allow OID's greater than 255 characters except for the index OID because of MySQL index limitations.\n-bug#0000758: LDAP user with non-alphanumeric characters in the password failed to authenticate.\n-bug#0000761: Correct input validation to allow all possible numbers in the RRAs form.\n-bug#0000766: Increase the size of the id field in the graph tree items table.\n-bug#0000769: Use only selected RRA's when exporting graphs.\n-bug#0000775: Add pagination to the SNMP cache viewer to handle large numbers of items.\n-bug#0000779: Scale down the size of text when viewing thumbnail graphs.\n-bug#0000781: Add an \"enabled\" filter status item in the devices list.\n-bug#0000785: Fix issue with Graph Tree View and Data Query Index Sorting showing \"Non Indexed\" even if empty.\n-bug#0000786: Expose the SNMP port field to data sources that use SNMP.\n-bug#0000789: Remove use of \"action\" attribute on graph tree image which is incompatible with newer Opera browsers and HTML4.\n-bug#0000797: Fix issue with filtering on multiple fields on the Data Sources and Graph Management pages.\n-bug#0000809: Add an option to \"purge\" the user_log table.\n-bug#0000814: Prevent Apache from segfaulting if the database permissions are not correct.\n-bug#0000815: Paginated the Cacti log file viewer to handle large numbers of items.\n-bug#0000821: Add missing menuarrow.gif image.\n-bug#0000823: Prevent Cacti from overwriting data during the creation of a new data template.\n-bug: Do not allow the device filter on the graph items editor to clear the selected data source.\n-bug: SQL query incorrectly formatted causing SQL queries to fail in preview mode.\n-bug: Setting a host template filter in devices, followed by moving off and then back on the page generated an error.\n-bug: PHP 5.1 snmpwalks utilize the bulk method by default.  Therefore, prefer them over the bulkwalk binary.\n-bug: Allow read_config_option to force a database refresh when one is wanted.\n-bug: Fix to resolve script server script not returning data as expected.\n-bug: Make load average script compatible with Mac OS X systems.\n-bug: Correct an issue where under certain circumstances, |query_ifSize| was being implemented as the maximum value for an RRD.\n-bug: Correct issue where DHTML caching was not working with expand hosts enabled.\n-bug: Add SNMP retries option to Cacti's SNMP functions.\n-bug: Once Graph Export has been enabled, do not allow Cacti to run even after it has been disabled.\n-bug: Correct alphabetic tree sorting to be more natural.\n-bug: Fix meta refresh tags to use proper URL syntax.\n-bug: Do not allow the graphs setting page to use the refresh interval, which can cause it to refresh while the user is inputting data.\n-bug: Make sure that data query index ordering with the \"index_order\" XML field is always respected.\n-bug: Limit the number of rows retrieved from the poller_output table to minimize the impact low memory system configurations.\n\n0.8.6h\n-bug#0000383: Add more verbose RRDtool debug output from Graph Management.\n-bug#0000522: Take 'oid_index_parse' into consideration when handling 'OID/REGEXP:' data query fields.\n-bug#0000528: Allow template_import.php to return without error when XML file is invalid in PHP 4.4 and above.\n-bug#0000557: Changing filter value resulted in invalid page/row selection.\n-bug#0000572: Added $database_port to config.php.\n-bug#0000570: Grammar edit for text about already up-to-date.\n-bug#0000571: Misleading diagnostic error messages during install have been updated.\n-bug#0000582: Ampersand present in graph template graph name causes XML import to fail.\n-bug#0000585: Graphing fails using AREA/STACK/LINE/HRULE/VRULE without defined color.\n-bug#0000586: Remove static reference to RRA ID #1.\n-bug#0000596: Proper escape of ' in graph titles.\n-bug#0000599: Add filtering to graphs and data templates.\n-bug#0000601: Add ability to add multiple hosts to a tree.\n-bug#0000603: user_log.ip field not ipv6 compatible.\n-bug#0000608: Minor coding error in lib/poller.php with a erroneous pclose statement.\n-bug#0000615: Add sysContact and sysLocation output to device edit page.\n-bug#0000619: Host templates not alphabetized on device creation form.\n-bug#0000625: Cannot modify/create a user with a period in the username.\n-bug#0000631: Invalid information concerning delimiter for index_order in SNMP Query documentation.\n-bug#0000650: Clicking Cancel in Create Graphs for this Host does nothing.\n-bug#0000656: Perl scripts using back ticks is not portable.\n-bug: Stop MySQL connect messages from appearing in user interface.\n-bug: Allow primary keys other than \"ID\" to work in sql_save and in HTML code.\n-bug: Save statistics even when the poller times out.\n-bug: Only call poller_commands.php or poller_export.php if they require calling.\n-bug: Incorporate a timeout to ss_fping.php so that a host that takes to long to finish at least returns data.\n-bug: Correct the display of custom data under data input methods to follow the proper order.\n-bug: Change the default behavior of ping.php to mark a host as up if either SNMP or ping are successful.\n-bug: Don't allow graph_export to delete your web site.\n-bug: Correct issue where SNMP was not returning both hex and text data under certain circumstances.\n-bug: Prevent a never ending table lock in lib/tree.php.\n-bug: Correct issue where either AREA or LINEx without color were causing RRD_NL without any elements in rrdtool_graph.\n-bug: Allow hostname to include the TCP: prefix for TCP based snmp and keep tcp, icmp, udp ping functional\n-bug: Better error reporting for Clear Cacti Log File in Utilities\n-bug: Graphs with items having Legend text defined but no color will fail under RRDtool 1.2.x.\n-feature: Add MySQL 5.x support.\n-feature: Add IPv6 support to lib/ping.php.\n-feature: When utilizing cmd.php, do not run the script_server if it is not required for a process.\n-feature: Incorporate snmpbulkwalk binary path to user interface to speed snmpv2 and snmpv3 walk calls.\n-feature: Incorporate snmpgetnext binary path to user interface to make available for certain plugins.\n-feature; Add support for Nth percentile functions, not just 95th.\n-feature: Add support for new Nth percentile variables: aggregate, aggregate_max, aggregate_sum.\n-feature: Allow additional filtering for graph item adding while creating graphs.\n-feature: Add Command line script to copy users: copy_cacti_user.php.\n-feature: Add Command line script to reindex hosts: poller_reindex_hosts.php.\n-feature: Add Command line script to rebuild the poller cache: rebuild_poller_cache.php.\n\n0.8.6g\n-bug#0000351: Fix zooming capability in Safari.\n-bug#0000491: Allow underscore, dash, and forward slash characters through search string validation.\n-bug#0000498: Fix issue where editing data input methods damaged portions of the database.\n-bug#0000502: Fix Syslog support in unix.\n-bug#0000506/#0000517: Properly handle special XML characters when importing/exporting templates.\n-bug#0000508: Fix issues where filter functionality would not work in preview mode.\n-bug#0000512: Increase script server buffer size for large output.\n-bug#0000520: Fix issue where LDAP authentication causes crash/abort.\n-bug#0000521: Add graph/data source title mouseover support.\n-bug#0000525: Make sure that all files in the Cacti distribution contain an EOF character.\n-bug#0000530: Remove 132 character limitation for OID's during polling.\n-bug#0000531: Make sure that quote characters in suggested value fields are properly escaped.\n-bug#0000535: Fix template export support for PHP 4.4.\n-bug#0000536: Fix printing of zoomed graphs where in IE where a white box would appear over the graph.\n-bug#0000537: Re-implement functional SNMPv3 support (authNoPriv only)\n-bug#0000543: Always allow non-templated graph/data template fields to be blank.\n-bug#0000544: See graph tree export contrib below.\n-bug#0000547: Fix issue with escaping certain control characters, causing the graph tree to break.\n-bug#0000552: Fix typo on the Settings page.\n-bug: Fix multiple output support in the script server.\n-bug: Fix incompatible binary SNMP calling parameter issue with NET-SNMP versions earlier than 5.1.\n-bug: Fix issues encountered when polling invalid data sources.\n-bug: Fix issue where if a host was deleted, re-indexing would continue to attempt to be performed on it.\n-bug: Allow lib/ping.php to be included in user script server scripts.\n-bug: Eliminate the need to run php-win.exe in Windows environment.  Will now work with just php.exe.\n-feature: Add a great new graph export format \"Tree Presentation\", thanks to our friend from Toulouse France (forums user: jaybob).\n-feature: Allow data query |query_*| variables to be used within a CDEF string.\n-feature: Force export functions into a separate poller process.\n-feature: Force re-caching of data queries into a separate poller process.\n-feature: Added filter capability to graph list view mode.\n-feature: Enhanced ss_fping.php and ping.php to inclue ICMP, TCP and UDP ping functionality and to specify a port.\n\n0.8.6f\n-security: Hardened PHP Project Advisory #042005 - Cacti Authentification/Addslashes Bypass Vulnerability\n-security: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities\n-security: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability\n\n0.8.6e\n-bug#0000143: Allow the user to enter 'U' for unknown minimum and maximum data source input values.\n-bug#0000377: Fix logarithmic graph creation issues.\n-bug#0000392: Implement caching to reduce the number of SQL queries needed to render the graph tree.\n-bug#0000402/#0000457: Allow bounds to be set properly for logarithmic graph creation.\n-bug#0000428: Unable to try login again after Access Denied.\n-bug#0000450: Force strict checking for data query parsing to prevent numeric values from being incorrectly handled.\n-bug#0000453: SPAN tag between each character of GraphTitle in Graph Management.\n-bug#0000458: Generate and error message and exit poller.php if the cactid binary path is invalid.\n-bug#0000463: Fix Syslog logging of poller statistics.\n-bug#0000464: Remove dates from Syslog generated messages.\n-bug#0000465: Allow for the mass resize of graphs.\n-bug#0000471: Remove the graph 'Settings' tab if the user is not allowed to save graph settings.\n-bug#0000478: Validate field input values on the Data Templates page. Prevent duplicate data template items from appearing as a result of this bug.\n-bug#0000481: Add several checks to prevent PHP errors when parsing data query XML files.\n-bug: Graph zoom feature had incorrect bounding box when using RRD 1.2.x\n-bug: Speed the generation of the Tree View Dual Pane by caching the Tree to a local session variable.\n-bug: Handle STACK graph items properly in RRDtool 1.2.\n-bug: Prevent data query recaches if the device returns empty input.\n-bug: Fix potential issues with graph gaps when using a large number of poller processes.\n-bug: Fix issues when zooming with new RRDtool 1.2 title fonts with a point size other than 10\n-bug: Fix issues when zooming outside of the select areas causing a broken graph\n-bug: Fix issues experienced when users attempted to create custom graphs and thousands of data sources exist\n-feature: Add ability to filter by host status as well as add ability to filter accross both description and hostname\n-feature: Add additional options to control RRDtool 1.2 fonts.\n-feature: Allow the user to Enable/Disable Data Sources from the user interface and automatically disable hosts when deleting a device.\n-feature: Add Data Source information to the Cacti Log File to assist with troubleshooting.\n-feature: Add html links to both hosts and data sources in the Cacti Log File.\n-security: Fix several remote inclusion bugs that were exploitable when PHP's 'register_global' feature is turned on [IDEF0941], [IDEF1023], [IDEF1024].\n-security: Fix several SQL injection bugs due to improper input validation [IDEF1001].\n\n0.8.6d\n-bug#0000416: Speed up binary net-snmp calls by removing MIB lookup requirement.\n-bug#0000434/#0000403: Allow for periods in script return variable names.\n-bug#0000436: Made snmp.php more like version 0.9 code base.\n-bug#0000419: Fixed session initialization problems with some browsers.\n-bug#0000394: Fixed a web server crash when reordering items in a graph tree.\n-bug#0000390: Remove deep linking in Cacti.\n-bug#0000389: Implement directory security in Cacti.\n-bug#0000443: Add SNMP port/timeout to the Host MIB CPU/disk script queries.\n-bug: Corrected issues encountered when creating multiple graphs from a single graph template.\n-bug: Corrected a problem where no graphs are displayed in the graph tree when authentication is turned off.\n-bug: Allow RRDtool fetch command to retrieve negative numbers.\n-bug: Increased some field lengths for very long OID's.\n-bug: Removed references to non-existing code when attempting to make database connections.\n-bug: Give poller cache more time to process entries during a clear operation, give it more memory.\n-bug: Changed default value in Unix ping script to correct for template bug.\n-bug: Fixed page refresh issue.\n-bug: Fixed include ordering in config.php to accommodate MySQL bugs and logging.\n-bug: Changed SNMP ping OID to be sysUptime because it is more common.\n-bug: Increased PHP timeout to accommodate for long running recache events causing poller issues.\n-bug: LDAP Auth with no DN specified and blank username would allow login.\n-feature: Basic support for RRDtool 1.2 including specifying a default True Type Font.\n-feature: Added support for spike suppression within the cmd.php poller.\n-feature: Support php_snmp version 2 builtin functions.\n\n0.8.6c\n-bug#0000354: User Name field always displays \"admin\" in Mozilla web browser.\n-bug#0000293: JavaScript selection bug on the \"New Graphs\" page.\n-bug#0000352: Problem with the current data source item when using the \"Similar Data Sources\" special data source.\n-bug#0000348: Scale problems with the \"ucd/net - Memory Usage\" graph template.\n-bug#0000358: Problems adding the same graph to more than one graph tree.\n-bug#0000355: Allow scientific and negative numbers to be returned from a script.\n-bug#0000347: Change Order of Graph Templates and Data Queries in Host.\n-bug#0000339: LDAP description misspell 'allow'.\n-bug: Maximum runtime issues with the script server.\n-bug: User could select a data query graph type from \"Graph Templates\", causing duplicate data source items.\n-bug: Auto-recache failed and caused the poller to crash under specific circumstances.\n-bug: Problems saving a user's graph settings from the user admin page.\n-bug: Poller cache not being updated properly for some host types upon change.\n-bug: Hope it's final this time: 95th percentile and bandwidth summation fixes.\n-bug: Added more verbose error handling with template XML importing.\n-bug: Sort host templates when creating a host.\n-bug: Corrected user form edit array problem that didn't show the graph options for an edited user.\n-bug: Access Denied error when user doesn't have console access.\n-bug: Return type bug in cacti_snmp_walk() which could cause extra blank data query rows.\n-feature: Data queries now support indexes that span multiple OIDs (see the manual).\n-feature: Re-apply suggested naming to graphs from the user interface.\n-feature: TreeView-specific feature to speed up rendering the tree for large databases.\n-feature: Added retry logic to the MySQL connect statements.\n-feature: Changed default connect method to a 'pconnect' from a 'connect' to improve performance with large implementations.\n-feature: Add support for Safari on the graph zoom page.\n\n0.8.6b\n-bug#0000318: Only delete the Cacti system user when uninstalling the RPM package rather than during each upgrade.\n-bug: Problems with the 95th percentile and bandwidth summation graph variables.\n-bug: Problem with random gaps in some or all graphs caused by staggered RRDtool update times.\n\n0.8.6a\n-bug#0000287: Non-host based scripts failing to populate the poller cache (0.8.6).\n-bug#0000285: Data query variables on graphs should reflect the data source of each individual graph item (0.8.6).\n-bug#0000289: Check the value of PHP's \"magic_quotes_gpc\" setting to prevent potential security holes (0.8.6).\n-bug#0000295: Problem with the DHTML tree when Cacti is included inside of a parent frame.\n-bug#0000311: Set PHP's \"max_execution_time\" to \"0\" during all upgrades.\n-bug#0000303: Correct the logic that checks if the export path directory exists or not.\n-bug#0000310: Problems viewing data templates with the \"Data Input Method\" set to \"None\".\n-bug#0000304: Problems displaying duplicate data templates on the main \"Data Templates\" screen.\n-bug#0000302: Update the Windows install documentation to mention the \"PHPRC\" environment variable.\n-bug#0000293: Problem with the JavaScript that grays out already created graphs on the \"New Graphs\" page.\n-bug#0000312: Make sure that the \"host_graph\" table is populated in the installer for users coming from a version less than 0.8.4.\n-bug#0000296: Remove references to PHP's ob_flush() function it doesn't exist until verion 4.2.\n-bug#0000314: Respect graph export timing settings.\n-bug: Problem saving a templated graph or data source that contained a checkbox field that had a value different from the default.\n-bug: Typo in graphs.php when placing graph(s) on a tree.\n-bug: Make sure that there is a user logged in before trying to read a per-user graph configuration value.\n-bug: Fix support for multiple cmd.php/cactid polling sessions in a single poller.php session.\n-bug: Revert back to older RRDtool update method as to correct several poller related issues with 0.8.6.\n-bug: Fix PHP-SNMP support in cmd.php.\n-bug: Fix multiple graph/data template corruption issues when converting from graphs or data sources.\n\n0.8.6\n-bug#0000051: HTTP header caching problems (0.8.5).\n-bug#0000121: It is no longer possible to add the same graph twice to a single graph tree branch.\n-bug#0000123: Several UI fixes on the tree item edit page (0.8.5).\n-bug#0000124: Select all check boxes would actually invert the selection.\n-bug#0000128: Graph template item corruption issues (0.8.5a).\n-bug#0000139: Graph tree deletion corruption issue (0.8.5a).\n-bug#0000140: Replaced the 'None' option in several host drop downs with 'Any' and redefined 'None' to mean host = 0 (0.8.5a).\n-bug#0000144: Possible corruption issues when deleting tree items from the root of the tree.\n-bug#0000149: Error using the 'total' type for 95th percentile or bandwidth summation.\n-bug#0000151: Added the ability to duplicate a host template.\n-bug#0000160: A change in Mozilla 1.5+ caused extra vertical space to appear on many table rows throughout the console.\n-bug#0000164: HostMIB scripts do not respect SNMP port and timeout parameters.\n-bug#0000173: Increase the number of characters dedicated to each tier from 2 to 3 which increases the item per tier/branch limit to 999.\n-bug#0000174: Broken thumbnail graphs that contained a 95th percentile HRULE item.\n-bug#0000175: Strip quotes from SNMP output to prevent UI escaping issues.\n-bug#0000176: Added the '-P' argument to 'df' to prevent multi-line output for the query_unix_partitions.pl script.\n-bug#0000179: Updated ADODB to version 4.23 which enabled Cacti work with PHP 5.\n-bug#0000198: Strip greater and less than characters from SNMP output to prevent UI escaping issues.\n-bug#0000214: Rename 'Utilities' to 'System Utilities' and move it under the 'Utilities' menu heading.\n-bug#0000235: Limit the number of pages displayed for graph management, data sources, and devices.\n-bug#0000244: Prevent PHP errors from being displayed during summation/95th percentile calculation when the .rrd file does not exist.\n-bug#0000253: Fixed recursive CDEFs.\n-bug#0000254: CDEF dropdown list in adding another CDEF is not sorted.\n-bug#0000265: Removed \"CANNOT FIND GUEST USER\" error message.\n-bug#0000273: Fixed 'rrdtool fetch' parsing for RRDtool 1.0.9.\n-bug: A hash was not being generated for duplicated graph and data templates which would cause import/export for those templates to fail.\n-bug: A user's graph permissions may fail to delete properly after removing that user.\n-bug: The \"Export Every x Times\" feature did not work correctly.\n-bug: Work correctly with PHP's get_magic_quotes_gpc() turned off.\n-bug: Eliminated potential password injection attack in auth_login.php.\n-bug: Eliminated popen issues in cactid win32 with threads > 1.\n-feature/bug#0000118: Data source screen UI enhancements (0.8.5).\n-feature/bug#0000120: Deleting a tree header should delete all child items (0.8.4).\n-feature/bug#0000125: A forced sort type can be specified for data query indexes which will be used to sort data query results in the UI.\n-feature/bug#0000152: Added filter/search/pagination capabilities to the Devices page.\n-feature/bug#0000155: Allow hosts on the graph tree to be grouped by data query index (ie. switch port, partition, etc) instead of only graph template.\n-feature/bug#0000156: Added the ability to sort a graph tree branch alphabetically or numerically.\n-feature/bug#0000161: Removing a graph now gives the user the option to remove all associated data sources.\n-feature/bug#0000172: Added the ability to control which graph viewing areas should display thumbnail graphs and which ones should display full sized graphs.\n-feature/bug#0000185: Deleting a device gives the user the option of deleting all associated graphs and data sources.\n-feature/bug#0000187: Add host availability and device enabled/disable controls to the main devices page.\n-feature/bug#0000189: Add a system-wide defaults for SNMP community, version, port, timeout and retries configurable under 'Cacti Settings'.\n-feature/bug#0000192: Add the ability to log poller runtime statistics to the log.\n-feature/bug#0000194: Add host availability capability which allows Cacti to track of downed devices as well as a device's uptime history.\n-feature/bug#0000200: Implement three different auto re-index methods which allow Cacti to automatically 'refresh' a data query when an indexes changes.\n-feature/bug#0000213: Add a 'Clear' button to all filter forms which resets the form to its default state.\n-feature/bug#0000240: Add moonman's SIMILAR_DATA_SOURCES_NODUPS CDEF patch.\n-feature/bug#0000250: Allow host/graph tree items to change parents.\n-feature: Data query index types are now automatically selected which eliminates the need to prompt the user for this information at graph creation time.\n-feature: Better message handling on the \"New Graphs\" page.\n-feature: Get rid of the \"Data Input Method\" box from the data query edit screen as this data can be automatically derived.\n-feature: Customizable log levels.\n-feature: Ability to log to syslog (Unix) and event log (Windows) in addition to the log file.\n-feature: UDP/ICMP/SNMP ping support used to determine a host's availability status.\n-feature: A PHP script server which enables PHP script to be interpreted by the poller without spawning a separate PHP process for each item. See the manual for more details.\n-feature: Ability to choose the type of poller (cmd.php, cactid) and number of threads (cactid only) from the UI.\n-feature: Ability to spawn multiple simultaneous cmd.php/cactid processes to speed up the polling process.\n-feature: Allow data templates and data sources that use SNMP to override host fields (hostname, snmp port, etc) in the poller cache.\n-feature: Added Eric Steffen's Bonsai patch which enables users to zoom a graph by dragging a box around the area of interest.\n-feature: Added branix's graph export enhancements patch which adds many more graph export configuration options including remote FTP support.\n-feature: Ability to view/clear the log file from the console.\n-feature: Use a single RRDtool stdin pipe for all update, create, and graph export actions.\n-feature: Advanced timespan selector which provides a large number of presets and a calendar control for custom timespans.\n-feature: Better support for SNMP v2 from UI.  Speed up some UI queries.\n-feature: Enable/Disable Poller from UI.\n-feature: Added ifOperStatus to Graph Creation page to show either Up or Down.\n-feature: Rearchitected poller subsystem to prepare for multiple poller architecture in future releases.\n-feature: Added validation logic in the pollers to prevent system and log anomalies.\n-feature: Removed SNMP v3 options until SNMP v3 is supported.\n\n0.8.5a\n-bug#84: Updated internal CDEF caching to take CFs into account.\n-bug#86: Updated the LDAP code to correctly copy template users.\n-bug#136: Inaccurate total bandwidth readings for RRAs with a step > 1.\n-bug#138: Typo on install/index.php\n-bug#141: Incorrect pre-requisite file check when doing a graph export.\n-bug#142: Added the '-t' option when calling ucd-snmp or net-snmp to support numeric timeticks.\n-bug#145: phpMyAdmin was choking on the import of cacti.sql.\n-bug#146: Minor HTML fix in lib/form.php\n-bug: Fixed potential graph item input corruption when saving a graph template item.\n-bug: Fixed problem saving a data source using a template that had more than one item.\n-bug: Correctly display the console menu when authentication has been turned off.\n-bug: Correctly display the two pane tree when authentication has been turned off.\n-bug: Support regular expression characters in passwords: \\+*?[^]$(){}=!<>|:\n-bug: Fixed certain re-ordering problems when deleting branches from a graph tree.\n-bug: Add support for a 3 digit exponents in RRDtool fetch output on Windows.\n-bug: Correctly escape community strings with a quotation mark under Windows.\n-bug: 95th percentile and bandwidth summation code should result in less errors when things don't go as planned.\n-bug: Fix 'data_input_data_fcache' orphan when deleting a data source.\n-feature: Make the 'None' option on the graph management and data sources host filter dropdowns only display items with no host assigned. Add an 'Any' option to display items assigned to all hosts.\n-cactid: Fix segfault problems on all platforms when performing SNMP queries.\n-cactid: Fix deadlock issues on Windows and Solaris when making popen calls.\n\n0.8.5\n-bug#102: Fix problem with SNMP community strings that contain certain variable shell characters.\n-bug#103: Under \"New Graphs\", make sure to highlight the host template line when the right-hand checkbox is selected.\n-bug#104: Typo in the usage for the query_unix_partitions.pl script.\n-bug#105: On the data query edit page, only display compatible items in the \"Data Input Method\" dropdown.\n-bug#106: Render the main menu based on a user's permissions so graph-only users cannot see a list of menu options when attempting to view 'index.php'.\n-bug#109: Replaced all instances of 'ifDesc' with the correct 'ifDescr' when dealing with the IF MIB.\n-bug#110: Be smarter about redirecting the user to the correct page when the user's login option is set to \"Show the page that user pointed their browser to\".\n-bug#111: Take host permissions into account when rendering the left-hand pane in tree view.\n-bug#112: Every 10th tree item was not being displayed.\n-bug#115: Fixed a bunch of misspellings of the word 'substitute' throughout the code.\n-bug#116: Restructured the edit screens for CDEF items and tree items, making them less confusing to users.\n-bug#119: Added a \"Search:\" label to the filter textboxes on the \"Graph Management\" and \"Data Sources\" pages.\n-bug#127: Added an HTML \"title\" tag to the three graph mode images.\n-bug#129: Added support for correctly parsing timeticks in both cmd.php and cactid.\n-bug#130: Users are sometimes redirected to the incorrect host when selecting the \"Create Graphs for this Host\" link under \"Polling Hosts\".\n-bug#131: Load averages above '10' were not being returned correctly from the loadavg_multi.pl script.\n-bug#133: Non-SNMP data sources were not being removed from the poller cache when a host became 'disabled'.\n-bug#134: Make sure to delete associated 'host' tree items when deleting a host.\n-bug#135: Fix the navigation display so it doesn't display errors when directly linking to a graph.\n-bug#137: Remove the 'td.shadow' CSS class as it isn't being used and contains an incorrect image reference.\n-bug: Allow the user to enter a \"Unit Exponent Value\" of '0'.\n-bug: Remove all references to $_SERVER[\"HTTP_REFERER\"] for web servers that do not include this variable.\n-bug: Extend the \"Maximum JavaScript Rows\" feature to work for host templates as well.\n-bug: Fixed a few parsing problems that were causing problems for users including a '\\' or '/' in their script's input string.\n-bug: The correct representation of memory usage using net-snmp should be 'free memory + cache memory + buffered memory'.\n-bug: Fixed a problem importing CDEF items correctly from an XML file.\n-bug: Deleting a GPRINT preset now correctly displays the name of the item about to be removed.\n-bug: Problems importing XML that contained a host template with more than one associated graph template.\n-bug: Added a potential workaround for the PHP session/popen bug which occurs on Windows systems using PHP in ISAPI mode.\n-feature: Data query variables such as |query_ifAlias| can now be included on the actual graph in the \"Text Format\" or \"Value\" field.\n-feature: Added two new special data sources to CDEFs, which enable users to use the data source's maximum or minimum value in a CDEF.\n-feature: Added a new SNMP query source type, \"VALUE/REGEXP\", which enables users to parse the SNMP value with a regular expression before passing it onto Cacti.\n-feature: Hide the \"Console\" tab from users that only have rights to view graphs.\n-feature: Added a new 95th percentile type, \"max\", which calculates 95th percentile based on the maximum of either inbound or outbound for each sample. This is how most co-location facilities calculate 95th percentile for billing purposes.\n-feature: Update ADODB to version 4.05.\n-feature: Data source graph inputs are automatically added and maintained by Cacti for new graph templates as to reduce user confusion.\n-feature: The \"Graph Management\" and \"Data Sources\" edit pages are much improved when using a template.\n-feature: Renamed \"Polling Hosts\" to \"Devices\" since polling hosts technically implies that you are managing the hosts that poll data, which could be reserved for later use.\n-feature: If you enter a value for a \"host field\" in the data template, Cacti will use that value rather than always defaulting to the host. If you leave it blank, Cacti will use the value from the host.\n-feature: Data input method type codes 'snmp_timeout' and 'snmp_port' are now supported.\n-feature: Users will only see tabs for the graph viewing modes that they have access to.\n-doc: Completely re-written manual in SGML/Docbook so HTML, PDF, and ASCII versions of the manual are now possible. The new manual also includes a better introduction to Cacti for new users and makes use of screen shots to illustrate various portions of the user interface.\n-cactid: Fixed segfault problems using cactid on Solaris platforms.\n\n0.8.4\n-bug#87: Deleting top level branches without children on the tree caused ordering problems.\n-bug#88: Possibly popen/pclose concurrency problem with cactid.\n-bug#89: Missing \"check all\" checkbox on polling hosts page when an empty column was drawn.\n-bug#91: Fix undefined index errors on data source checkbox popups.\n-bug#92: Fix undefined index errors on graph management checkbox popups.\n-bug#96: Problems creating graphs from data queries where there was only row row total in the query result.\n-bug#97: Typo in cmd.php\n-bug#98: Creating a data source or graph with no host or template, would result in an extra empty item.\n-bug#99: Deleting a graph or data template that was still attached to one or more items would cause the graph/data source to appear to still have the deleted template still attached.\n-bug: Removed size limits on Linux memory data template.\n-bug: Undefined variable errors when creating new graphs/data sources without a template.\n-bug: multiple problems that caused the Windows disk space and CPU graphs to stop working.\n-bug: Broken images for bandwidth summation graphs that were less than a day old.\n-bug: Graph order changes on the tree would affect other graph trees.\n-bug: Problem with the \"Host MIB - Hard Drive Space\" data template that broke Windows disk spaces graphs.\n-bug: Fixed the LDAP authentication code, which was partially broken in 0.8.3.\n-bug: Fixed a cmd.php parsing problem when input and output fields are sharing the same name.\n-bug: Added basename() to all PHP_SELF references to make sure all hrefs stay absolute.\n-bug: The RRA field is now honored for the dual pane tree view.\n-bug: The |date_time| graph variable now displays the current day of the month.\n-feature: The \"Total All Items\" CDEF is now able to total NaN's without becoming 'U'.\n-feature: Data query results are now grayed out if they have already been created.\n-feature: The \"cacti Web Root\" and \"Web Server Document Root\" settings are completely auto-detected now.\n-feature: Add SNMP port and SNMP timeout fields to each host.\n-feature: Removed the \"Management IP\" field in polling hosts in favor of \"Hostname\".\n-feature: Re-organized the menus expand/contract for less used items to help save vertical space.\n-feature: Added complete template to XML import and export support.\n-feature: Moved the graph creation features of \"Polling Hosts\" to a new menu item,\"New Graphs\".\n-feature: Added verbose debugging support for data queries.\n-doc: Added a FAQ.\n-cactid: Removed lots of potential buffer overflows.\n-cactid: Several libz/openssl autoconf fixes that improve FreeBSD 5.x support.\n-cactid: Fixed some potential segfaults on FreeBSD when reading information from the targets table.\n-cactid: The snmp_get() function now respects the SNMP version chosen under \"Polling Hosts\", so 64-bit counters should work.\n\n0.8.3a\n-bug#81: Partial/complete poller cache rebuild failure after an upgrade.\n-bug#82: Undefined variable error messages under win32/IIS.\n-bug: Problems with overlapping graph permissions with multiple users.\n\n0.8.3\n-bug#50: When viewing a graph, only display it for the RRAs used on the graph.\n-bug#66: Users can see a list of all hosts in graph preview mode.\n-bug#71: Extra escape characters in the |date_time| variable output.\n-bug#72: Disk space graph for ucd/net was broken for original 0.8 users.\n-bug#75: Problems monitoring more than one CPU with query_host_cpu.php.\n-bug#76: Cactid segfault on Solaris caused by unchecked use of NULL with sprintf.\n-bug#77: Cactid segfault upon a MySQL connect error.\n-bug#79: Check for unique/valid data when the user selects a field to index their new data sources off of.\n-bug: Redirect user to the correct page after a forced password change.\n-bug: Problems entering negative numbers for upper/lower limit fields on graph pages.\n-bug: Never try to use internal SNMP support if SNMP version 2 or 3 is selected.\n-bug: Adding or removing data source items in a data template should update attached data sources as well.\n-bug: Problems updating certain fields when switching or turning off both graph and data templates.\n-bug: Got rid of the \"Use Per-Data Source Value\" checkbox where it isn't usable.\n-bug: Strange sequence/ordering behavior after updating an already created tree item.\n-bug: Error message displayed instead of 'Access Denied' message.\n-feature: Added host and graph template permissions for graph viewing users.\n-feature: Added a new 'dual pane' tree view type that draws the graph trees on a DHTML tree on the left side of the page.\n-feature: Added the ability to add hosts to a tree.\n-feature: Added a 'timespan' field to \"Round Robin Archives\" to determine the timespan (in seconds) of graphs using each RRA.\n-feature: Completely replaced the header images/layout for both the console and graph viewing pages\n-feature: Added a navigation bar in the header so you can keep track of you location in the UI.\n-feature: Added bandwidth summation support. See the manual for more information.\n-feature: Made the installer more verbose about SQL it runs during an upgrade.\n-cactid: Changed threading strategy to spawn threads based on hosts.\n-cactid: Created header files for each source file and moved precasts out of cactid.h.\n-cactid: A bunch of autoconf updates.\n\n0.8.2a\n-bug: Fixed various problems updating the poller cache.\n-bug: Fixed the Weatherbug script to work under Redhat 9.\n-cactid: Updated poller to use detached threads based on each host.\n\n0.8.2\n-bug#47: The 'cacti_server_os' variable is now auto-detected.\n-bug#56: Possible endless loop for non 0.8 users in version upgrade loop.\n-bug#57: Cacti does not take the 'graph_tree_id' column into account when re-ordering trees which can cause unexpected results.\n-bug#59: Regular expression bug that caused 'query_unix_partitions.pl' not to function on FreeBSD.\n-bug#60: Incorrect index OID in the (currently unused) 'host_disk.xml' SNMP query.\n-bug#61: Problems adding additional graph items to an input after the template is in use by graphs.\n-bug#64: Cactid now checks for the RRDtool path in the 'settings' table.\\\n-bug#67: Problems with wrapping and 'diskfree.pl'.\n-bug: Problems deleting GPRINT presets.\n-bug: Undefined variable errors on the graph settings page if built in user authentication was turned off.\n-bug: Kill cached field value when messages are displayed.\n-bug: Graph trees now honor the RRA selected when creating the tree (andyfud.org.nz)\n-bug: Graph and data source titles are now properly updated when making changes to graph or data templates.\n-bug: Unexpected results when trying to delete top level branches from a graph tree.\n-bug: Problems expanding/contracting trees when two or more nested branches had the hidden flag set.\n-feature: Added ability to turn off checks for an entire host.\n-feature: Added SNMP and operating system variable printout to the about page.\n-feature: Added 95th percentile support. See the manual for more information.\n-feature: Added setting for data query maximum field length.\n-cactid: Added downed host detection.\n-cactid: Code cleanup: formatting, compiler warnings, and removal of unused functions.\n-cactid: Daemon support has been removed from cactid for the time being, it must be run out of CRON.\n-cactid: Have autoconf detect net-snmp before trying ucd-snmp to prevent failure on default Redhat installs.\n\n0.8.1\n-bug#40: Fixed OIDs in serveral Netware data templates.\n-bug#41: Data source and graph names are lost when created from a  template.\n-bug#44: Fixed Host MIB logged in users OID in data template.\n-bug#46: Fixed an RRDtool/PHP binary variable mixup on the install page for win32 users.\n-bug#48: Changed the \"Create\" button on the settings page to \"Save\".\n-bug#52: Make sure the data source/graph names are pulled down after clicking \"Create\", so the user can press cancel.\n-bug: Changed references from $_SERVER[\"SCRIPT_NAME\"] to $_SERVER[\"PHP_SELF\"] because of strange behavior on PHP 4.3.2 under Windows.\n-bug: Make sure to filter on the \"cached title\" for on both the data sources and graph management pages.\n-bug: Fixed error when debug mode was on and the user tried to add a new graph or data source.\n-bug: Take tree permissions into account when displaying the \"Default Tree\" dropdown on the graph settings page.\n-bug: Incorrect graph title was displayed on graph tree delete confirmation.\n-bug: Win32: Graphs were being exported even when the graph export path was left blank.\n-bug: Exported graphs were displayed in the incorrect order.\n-bug: Legends were not displayed on exported graphs.\n-bug: HRULE items caused graphs to break.\n-feature: You can now use negative VRULE items, such as '-12:00' to display a line 12 hours ago.\n-bug: Data queries that had a non-integer index would not render graph/data source titles properly.\n-auth: LDAP authentication updates\n\n0.8\n-feature: Added support for graph, data source, and host templates.\n-feature: Added a stricter concept of hosts which enables better organization and easier graph creation.\n-feature: Created data queries which enable the retrieval of indexable data in the form of a query.\n-feature: Revised the entire UI creating more functional and attractive forms.\n-feature: New generic poller interface enables other pollers to handle the data gathering for Cacti.\n-feature: Added support for net-snmp 5.x.\n-docs: Revised the install documentation and re-wrote the manual for this version.\n-feature: The beginnings of a threaded c-based poller (cactid), which is not completely function at this point.\n-feature: And much much more...\n\n0.6.8a\n-bug: Unchecked string being passed to rrdtool caused a potential security problem.\n-bug: The logout funtionality was broken for some users because of a missing fourth argument.\n-bug: Fixed some SNMP parsing problems.\n-bug: Fixed a problem with using quotes for data source input.\n\n0.6.8\n-feature: Added the following new rrdtool graph options: --units-exponent value, --unit, and --logarithmic.\n-feature: Added the ability to show exact numbers in GPRINT, users can now specify a custom GPRINT string on a per-graph item basis.\n-bug: Any data input source with more than one output would be added as a multi-data source .rrd file.\n-bug: Some data source file name issues.\n-bug: Cacti now checks to see if a host exists when adding it to be graphed.\n-feature: There is now an optional \"remove verification\" for most of cacti's dialogs.\n-feature: There is a \"logout\" button when viewing graphs (not for the guest user).\n-docs: Updated the Win32 docs (thanks Larry).\n-bug: Fixed some rare HTML \"multipart/form\" bugs with PHP.\n-feature: Added a \"Default View Mode\" for each user when viewing graphs.\n-bug: Fixed some bugs where you would change a parent graph item to a child or a child graph item to a parent when graph grouping was turned on.\n-bug: Fixed some potential security bugs by eliminating cacti's use of cookies.\n\n0.6.7\n-feature: Added a \"none\" option for a data source when creating a CDEF. This can be used if you check the \"Use the current data source being used on the graph instead of a preset one\" box.\n-feature: Each user has a default graph policy: ALLOW or DENY for their graph permissions.\n-bug: Unique .rrd filename/data source name issues for SNMP \"Make Graph\" have been fixed.\n-feature: Changing the data source for a graph group parent will change the data sources for each of the child items.\n-bug: Logging has been fixed so errors do not show up in the Apache error_log any more.\n-bug: VRULE's work correctly now. Enter a time in the \"value\" field to use them, such as \"00:00\" or \"14:00\".\n-feature: If you select a graph to be added to the graph hierarchy, the \"This Item is a Graph\" checkbox is automatically selected.\n-docs: Install docs have been updated for Unix/Win32, documentation on upgrading cacti has been added. See the 'docs/' directory for more information.\n-bug: SNMP can function on win32/unix without snmpwalk/snmpget binaries. This will only work if you have php-snmp support compiled into both your php binary and web server modules. This is already the case for win32.\n-bug: A bug when more than one data source was created using the same data input source with multiple outputs has been fixed.\n-feature: The default install/upgrade screen has been revised.\n\n0.6.6\n-feature: Multiple data sources per .rrd is supported. To use this feature, simply create a data input source with multiple outputs that 'Update RRA'.\n-feature: Graph item grouping, which enables you to delete/reorder groups of similair graph items.\n-feature: Graph preview and output preview in the console, which allows you to preview what a graph will look like/what rrdtool's output is.\n-feature: Graph-based permissions have added, you can also show/hide certain hierarchies per user.\n-feature: Multiple data source per .rrd file support, read the docs for more information.\n-feature: You can now export graphs to static png's/html's every n times.\n-feature: By default, SNMP data source names come from <IP>_<IFNUM>, instead of just <IFDESC> which is more unique.\n-feature: More options for users such as where to go when the user logs in and whether the user can have their own settings or not.\n\n0.6.5\n-bug: Fixed some of the data source naming issues. You can now use any data source name you want; cacti will take care of making the name \"rrdtool friendly\".\n-feature: Cacti will use PHP's builtin SNMP support if detected, SNMP is overall faster now too. NOTE: PHP's SNMP support may not work with all of your MIB names, you may have to use the OID instead!\n-feature: Basic high speed counter support has been added, use 'hcin'/'hcout' to use it. Also may not work with PHP's builtin SNMP support yet.\n-bug: Using the MAX consolidation function with graph data works better now. You can make graphs that look like the MRTG ones (5 minute maximum). This code still needs a little work though.\n\n0.6.4\n-bug: You can now add the same CDEF to multiple data sources in the same graph.\n-feature: Ability to \"sync\" changes with the .rrd file with rrdtool's TUNE function. Cacti also tries to fill in internal data source path and name information to keep graphs from \"breaking\" when possible.\n-settings: You can now change the PHP Binary path from within cacti.\n-feature: Cacti can now export static images/html files when it gathers data like MRTG did.\n-feature: Multiple graph hierarchies are supported.\n-feature: You can now \"zoom in\" on any portion of the graph hierarchy by clicking on a header item.\n-bug: Some changes were made to make cacti more win32 complaint; a tutorial on how to setup cacti on win32 can be found on the raXnet page.\n-feature: You can now create all graphs for an SNMP host with one click.\n-feature: You can customize the graph title when creating graphs using the 'Make Graph' or 'Make All Graphs' link.\n-feature: Data sources in cacti are no longer limited to 19 characters. If you create a data source name that rrdtool will not like, cacti will automatically modify the name and save it internally for rrdtool-only use.\n\n0.6.3\n-feature: Put limits (HTML 'maxlength') on fields that have a maximum length.\n-feature: Added 'cacti Settings' and 'User Administration' to the cacti menu.\n-feature: Added a 'Step' field for Data Sources to graph data at non-300 second intervals.\n-feature: Added a '--rigid' on/off option, plus the ability to choose between '--alt-autoscale' and '--alt-autoscale-max' when using auto scale.\n-feature: Added a 'Base Value' field to the graphs to adjust how the vertical axis is displayed.\n-feature: Updated the menu/header graphics for a smoother look and easier navigation.\n-feature: cacti now stores its settings in the database instead of config.php, so they can be manipulated under 'cacti Settings'. Database credentials are still located in config.php however.\n-feature: Added a preview of the rrdtool source when creating data sources.\n-feature: Added a \"data source duplicate\" function and moved \"graph duplicate\" to \"Graphs\" on the cacti menu.\n-settings: You can now turn on/off cacti's builtin authentication.\n-settings: You can control what is logged (create, graph, snmp, update).\n-feature: Added a \"Total All Data Sources\" CDEF, which can be used to represent the total of all of the data on a graph.\n-bug: Fixed a few add/edit/delete form-related bugs.\n-docs: Added some more content to the documentation and made it more visible from within cacti.\n\n0.6.2\n-bug: Fixed some bugs when creating CDEF's using multiple data sources.\n-bug: Fixed more SNMP parsing bugs with some versions of net-snmp.\n-feature: added an \"auto-refresh\" feature to the graphs (thanks Nossie).\n-bug: HRULE's and VRULE's acually work now.\n-docs: the beginnings of some real documentation.\n-bug: you can select the color black now.\n\n0.6.1\n-bug: Fixed a parsing bug with snmp, more parsing is done in cacti's code and not via arguments passed to snmpget.\n-auth: Updated the function used to hash passwords (more compatible with older MySQL versions), more strict on document caching.\n-feature: Easier installation: cacti now checks for common problems and gives suggestions. Database updates are also done at this time.\n-bug: Fixed a problem with adding new data input sources.\n-bug: Problem saving the wrong numbers for 'Round Robin Archives'.\n-feature: Ability to preview the output of the cron script from a web browser under 'Cron Printout'.\n-feature: Added 'Logout User' to the menu.\n-bug: Removed some occurances of /var/www/html and replaced them with more dynamic variables.\n\n0.6\n-new tree code\n-some html table issues in graph view mode\n-fixed the settings code for saved graph-view data\n\n0.5\n-initial release\n\n-----------------------------------------------\nCopyright (c) 2004-2024 - The Cacti Group, Inc.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.099609375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ndevelopers@cacti.net.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.8154296875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.2265625,
          "content": "# Cacti ™\n\n[![Cacti Commit Audit](https://github.com/Cacti/cacti/actions/workflows/syntax.yml/badge.svg)](https://github.com/Cacti/cacti/actions/workflows/syntax.yml)\n[![Project Status](http://opensource.box.com/badges/active.svg)](http://opensource.box.com/badges)\n[![Translation Status](https://translate.cacti.net/widgets/cacti/-/core/svg-badge.svg)](https://translate.cacti.net\n\"Translation Status\")\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/cacti/cacti.svg)](http://isitmaintained.com/project/cacti/cacti\n\"Average time to resolve an issue\")\n[![Percentage of open issues](http://isitmaintained.com/badge/open/cacti/cacti.svg)](http://isitmaintained.com/project/cacti/cacti\n\"Percentage of issues still open\")\n\n-----------------------------------------------------------------------------\n\n# Welcome to the Cacti GitHub Site!\n\n## Introduction\n\nWe currently have two functioning versions of Cacti on this site, and several\nCacti plugins supported by The Cacti Group.  Our current long lived version\nof Cacti in the `1.2.x` branch.  The current release version of this branch \nis Cacti 1.2.27.  \n\nThis pending maintenance release has several bugs fixes, and significantly more \nwelcomed feature enhancements.  You can review the CHANGELOG for the `1.2.x`\nbranch for more information on that.\n\nAdditionally, we have the `develop` branch.  This is now an active Development\nBranch.  In this branch, we as a team have re-grouped and are introducing several\nnew features.  We hope to be able to deliver a Christmas present for Cacti\nenthusiasts, which will be a Cacti 1.3.0-beta release.  If you want to get\ninvolved earlier, you can simply download the development release and knock\nyourselves out.  The 1.3.0 release will include everything in th 1.2.27\nrelease, as well as several additional features from our roadmap.\n\nSystem requirements vary from Cacti point release to point release.  The matrix\nbelow documents the minimum tool levels for each version.  With our source\ndistribution, all the vendor included packages are pre-packeged and tested\nby the Cacti group, so there is no reason to use package management tools\nto install those dependencies.\n\n| Dependency | Cacti 1.2.x  | Cacti 1.3.x |\n|------------|--------------|-------------|\n| MariaDB    | 5.5+         | 10.2.x+     |\n| MySQL      | 5.5+         | 8.0+        |\n| PHP        | 5.4+         | 8.1+        |\n| RRDtool    | 1.4+         | 1.8+        |\n| Net-SNMP   | 5.5+         | 5.8+        |\n\nFor Cacti 1.2.x, it is reasonable to run with RHEL/CentOS 7 or equivalent.  However,\nfor Cacti 1.3.x, it would be better to run on RHEL 9 +, CentOS Stream 9+, or Rocky 9+ \nor equivalent as these OS versions makes PHP 8.1+ available via a DNF Stream.  Of course\nUbuntu/Debian is also well supported.\n\nHowever, if you wish to run Cacti 1.3.x on the RHEL/CentOS 7 distribution you may\nbe able to do so if you use the REMI distributions of PHP.  You will also in this case\nhave to build RRDtool 1.9.1+ from source, which is straightforward on any modern\nLinux OS such as Rocky Linux 9.x.\n\nIf you wish to take advantag of dynamic hover over Graphs, you will need RRDtool 1.9.1+.\nHowever, as of January 10, 2025, it has not been released.  So, you will likely need \nto run the develop version until it's released.  Upon release, depending on Tobi's \ndiscretion, the release may be 2.0 or some other version.  So, keep your eye on Github.\n\nDue to the recent oauth2 Email feature enhancement in the develop branch, we were\nforced to increase the minimum PHP version for Cacti 1.3+ from PHP 8.0 to 8.1. So, keep \nthis in mind if you are planning to upgrade and don't already have PHP 8.2+ installed \nand operations.\n\nIn the sections below, you can find some important first steps before installing\neither the Cacti 1.2.x version of the pending Cacti 1.3.x version.  Good luck\nand enjoy Cacti.\n\nMost modern browsers are supported with the exception of ALL Internet Explorer\nversions as of Cacti version 1.2.x.  Do NOT attempt to use Internet Explorer\nof any version with Cacti 1.2.x and above.\n\n# Running Cacti from the `develop` Branch\n\n## IMPORTANT\n\nWhen using source or by downloading the code directly from the repository, it is\nimportant to note that periodically, you may have to rerun the database upgrade \ncli script to bring in new columns.  You can use the --forcever=1.2.22 option\nto assume you are upgrading from an earlier cacti version:\n\n```bash\nphp -q upgrade_database.php --forcever=1.2.22\n```\n\nIf you experience SQL errors in your Cacti log, please open a case in our Cacti\nissue tracker here.  If you are following the recent development, make sure that\nevery time you pull a fresh copy of develop you re-run the database upgrade with\nthe --forcever option.\n\n## Upgrading from Pre-Cacti 1.x Releases\n\nWhen Cacti was first developed nearly 20 years ago, MySQL was not as mature as it\nis now.  When The Cacti Group went about engineering Cacti 1.x, a decision was\nmade to force users to use the InnoDB storage engine for many of the Tables.  This\nwas done as the InnoDB storage engine provides a better user experience when your\nweb site has several concurrent logins.  Though a little slower, it also provides\ngreater resiliency for the developers.\n\nWith that said, there are several changes that you MUST perform to MySQL/MariaDB\nbefore you upgrade, and a service restart is required.  Depending on your release\nof MariaDB or MySQL, the following settings will either be required, or already\nenabled as default:\n\n```\n[mysqld]\n\n# required for multiple language support\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\n\n# Memory tunables - Cacti provides recommendations at upgrade time\nmax_heap_table_size = XXX\nmax_allowed_packet = 500M\ntmp_table_size = XXX\njoin_buffer_size = XXX\nsort_buffer_size = XXX\n\n# important for compatibility\nsql_mode=NO_ENGINE_SUBSTITUTION\n\n# innodb settings - Cacti provides recommendations at upgrade time\ninnodb_buffer_pool_instances = XXX\ninnodb_flush_log_at_trx_commit = 2\ninnodb_buffer_pool_size = XXX\ninnodb_sort_buffer_size = XXX\ninnodb_doublewrite = ON\n\n# required\ninnodb_file_per_table = ON\ninnodb_file_format = Barracuda\ninnodb_large_prefix = 1\n\n# not all version support\ninnodb_flush_log_at_timeout = 3\n\n# for SSD's/NVMe\ninnodb_read_io_threads = 32\ninnodb_write_io_threads = 16\ninnodb_io_capacity = 10000\ninnodb_io_capacity_max = 20000\ninnodb_flush_method = O_DIRECT\n```\n\nThe *required* settings are very important.  Otherwise, you will encounter issues\nupgrading.  The settings with XXX, Cacti will provide a recommendation at upgrade time.\nIt is not out of the ordinary to have to restart MySQL/MariaDB during the upgrade\nto tune these settings.  Please make special note of this before you begin your upgrade.\n\nBefore you upgrade, you should make these required changes, then restart MySQL/MariaDB.\nAfter that, you can save yourself some time and potential errors by running the following\nscripts (assuming you are using bash):\n\n```\nfor table in `mysql -e \"SELECT TABLE_NAME FROM information_schema.TABLES WHERE table_schema='cacti' AND engine!='MEMORY'\" cacti | grep -v TABLE_NAME`;\ndo\n   echo \"Converting $table\";\n   mysql -e \"ALTER TABLE $table ENGINE=InnoDB ROW_FORMAT=Dynamic CHARSET=utf8mb4\" cacti;\ndone\n```\n\nThis will convert any tables that are either InnoDB or MyISAM to Barracuda file format, dynamic row format and utf8mb4.  Note, that if you have been using MySQL or MariaDB without innodb_file_per_table set to on, you might be better in backing up your database, resetting InnoDB by removing your ib* files in the /var/lib/mysql directory, and after which restoring your database and MySQL/MariaDB tables and permissions.  Before you take such a step, you should always practice on a test server until you feel comfortable with the change.\n\nGood luck, and enjoy Cacti!\n\n## Running Database Upgrade Script\n\n```\nsudo -u cacti php -q cli/upgrade_database.php --forcever=`cat include/cacti_version`\n```\n\n## Updating Cacti Version in Database\n\n```\nupdate version set cacti = '1.1.38';\n```\n\n***Note:*** Change the above version to the correct version or risk the\ninstaller upgrading from a previous version.\n\n-----------------------------------------------------------------------------\n\n# About Cacti\n\nCacti is a complete network graphing solution designed to harness the power of\nRRDtool's data storage and graphing functionality providing the following\nfeatures:\n\n- Remote and local data collectors\n\n- Device discovery\n\n- Automation of device and graph creation\n\n- Graph and device templating\n\n- Custom data collection methods\n\n- User, group and domain access controls\n\nAll of this is wrapped in an intuitive, easy to use interface that makes sense\nfor both LAN-sized installations and complex networks with thousands of devices.\n\nDeveloped in the early 2000s by Ian Berry as a high school project, it has been\nused by thousands of companies and enthusiasts to monitor and manage their\nEnterprise Networks and Data Centers.\n\n## Requirements\n\nCacti should be able to run on any Linux, UNIX, or Windows based operating\nsystem with the following requirements:\n\n- PHP 7.4+\n\n- MySQL 5.6+\n\n- RRDtool 1.3+, 1.5+ recommended\n\n- NET-SNMP 5.5+\n\n- Web Server with PHP support\n\nPHP Must also be compiled as a standalone cgi or cli binary. This is required\nfor data gathering via cron.\n\n### php-snmp\n\nWe mark the php-snmp module as optional.  So long as you are not using ipv6\ndevices, or using snmpv3 engine IDs or contexts, then using php-snmp should be\nsafe.  Otherwise, you should consider uninstalling the php-snmp module as it\nwill create problems.  We are aware of the problem with php-snmp and looking to\nget involved in the php project to resolve these issues.\n\n### RRDtool\n\nRRDtool is available in multiple versions and a majority of them are supported\nby Cacti. Please remember to confirm your Cacti settings for the RRDtool version\nif you having problem rendering graphs.\n\n## Documentation\n\nDocumentation is available with the Cacti releases and also available for\nviewing on the [Documentation\nRepository](https://github.com/Cacti/documentation/blob/develop/README.md).\n\n## Contribute\n\nCheck out the main [Cacti](http://www.cacti.net) web site for downloads, change\nlogs, release notes and more!\n\n### Community forums\n\nGiven the large scope of Cacti, the forums tend to generate a respectable amount\nof traffic. Doing your part in answering basic questions goes a long way since\nwe cannot be everywhere at once. Contribute to the Cacti community by\nparticipating on the [Cacti Community Forums](http://forums.cacti.net).\n\n### GitHub Documentation\n\nGet involved in creating and editing Cacti Documentation!  Fork, change and\nsubmit a pull request to help improve the documentation on\n[GitHub](https://github.com/cacti/documentation).\n\n### GitHub Development\n\nGet involved in development of Cacti! Join the developers and community on\n[GitHub](https://github.com/cacti)!\n\n-----------------------------------------------------------------------------\n\n## Functionality\n\n### Data Sources\n\nCacti handles the gathering of data through the concept of data sources. Data\nsources utilize input methods to gather data from devices, hosts, databases,\nscripts, etc...  The possibilities are endless as to the nature of the data you\nare able to collect.  Data sources are the direct link to the underlying RRD\nfiles; how data is stored within RRD files and how data is retrieved from RRD\nfiles.\n\n### Graphs\n\nGraphs, the heart and soul of Cacti, are created by RRDtool using the defined\ndata sources definition.\n\n### Templating\n\nBringing it all together, Cacti uses and extensive template system that allows\nfor the creation and consumption of portable templates. Graph, data source, and\nRRA templates allow for the easy creation of graphs and data sources out of the\nbox.  Along with the Cacti community support, templates have become the standard\nway to support graphing any number of devices in use in today computing and\nnetworking environments.\n\n### Data Collection (The Poller)\n\nLocal and remote data collection support with the ability to set collection\nintervals. Check out ***Data Source Profile*** with in Cacti for more\ninformation. Data Source Profiles can be applied to graphs at creation time or\nat the data template level.\n\nRemote data collection has been made easy through replication of resources to\nremote data collectors. Even when connectivity to the main Cacti installation is\nlost from remote data collector, it will store collected data until connectivity\nis restored. Remote data collection only requires MySQL and HTTP/HTTPS access\nback to the main Cacti installation location.\n\n### Network Discovery and Automation\n\nCacti provides administrators a series of network automation functionality in\norder to reduce the time and effort it takes to setup and manage devices.\n\n- Multiple definable network discovery rules\n\n- Automation templates that specify how devices are configured\n\n### Plugin Framework\n\nCacti is more than a network monitoring system, it is an operations framework\nthat allows the extension and augmentation of Cacti functionality. The Cacti\nGroup continues to maintain an assortment of plugins.  If you are looking to add\nfeatures to Cacti, there is quite a bit of reference material to choose from on\nGitHub.\n\n### Dynamic Graph Viewing Experience\n\nCacti allows for many runtime augmentations while viewing graphs:\n\n- Dynamically loaded tree and graph view\n\n- Searching by string, graph and template types\n\n- Viewing augmentation\n\n- Simple time span adjustments\n\n- Convenient sliding time window buttons\n\n- Single click realtime graph option\n\n- Easy graph export to csv\n\n- RRA view with just a click\n\n### User, Groups and Permissions\n\nSupport for per user and per group permissions at a per realm (area of Cacti),\nper graph, per graph tree, per device, etc... The permission model in Cacti is\nrole based access control (RBAC) to allow for flexible assignment of\npermissions. Support for enforcement of password complexity, password age and\nchanging of expired passwords.\n\n## RRDtool Graph Options\n\nCacti supports most RRDtool graphing abilities including:\n\n### Graph Options\n\n- Full right axis\n\n- Shift\n\n- Dash and dash offset\n\n- Alt y-grid\n\n- No grid fit\n\n- Units length\n\n- Tab width\n\n- Dynamic labels\n\n- Rules legend\n\n- Legend position\n\n### Graph Items\n\n- VDEFs\n\n- Stacked lines\n\n- User definable line widths\n\n- Text alignment\n\n-----------------------------------------------------------------------------\nCopyright (c) 2004-2024 - The Cacti Group, Inc.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.666015625,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 1.3.x   | :white_check_mark: |\n| 1.2.x   | :white_check_mark: |\n| 1.1.x   | :x:                |\n| 1.0.x   | :x:                |\n| < 1.0   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease use either GitHub's private vulnerability reporting or send an email to developers@cacti.net.  We will aim to respond within a few days and accept any PoC's that demonstrate how to test for the vulnerability.\n\nWe wlil remove an PoC from published advisory's were possible and will advise to this effect when doing so.\n\n---\nCopyright (c) 2004-2023 - The Cacti Group, Inc.\n"
        },
        {
          "name": "about.php",
          "type": "blob",
          "size": 5.62109375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\ntop_header();\n\nhtml_start_box(__('About Cacti'), '100%', '', '3', 'center', '');\n\n?>\n\n<tr class='tableHeader'>\n\t<td class='tableSubHeaderColumn' colspan='2'>\n\t\t<font class='textSubHeaderDark'><?php print CACTI_VERSION_TEXT_FULL; ?></font>\n\t</td>\n</tr>\n<tr>\n\t<td valign='top' class='odd' class='textArea'>\n\t\t<div style='float:right;'>\n\t\t\t<a href='http://www.cacti.net/' target='_blank'><img class='right' alt='cactiHome' src='images/cacti_about_logo.gif'></a>\n\t\t</div>\n\n\t\t<p><?php print __('Cacti is designed to be a complete graphing solution based on the RRDtool Time Series Database (TSDB) and Graphing solution. Its goal is to make the Network Administrator\\'s job easier by taking care of all the important details necessary to create meaningful Graphs.'); ?></p>\n\n\t\t<p><?php print __('Please see the official %sCacti website%s for information on how to use Cacti, get support, and updates.', '<a href=\"http://www.cacti.net/?version=' . CACTI_VERSION . '\" target=\"_blank\">', '</a>'); ?></p>\n\n\t\t<div class='flexContainer'>\n\t\t<div class='flexChild' style='min-width:300px;'>\n\t\t<p><strong><?php print __('Active Developers'); ?></strong></p>\n\t\t<p style='min-height:45px'><?php print __('Developers working on Cacti, its Architecture, Documentation and Future Releases.'); ?></strong></p>\n\t\t<ul type='disc'>\n\t\t\t<li>Larry Adams <i>(TheWitness)</i></li>\n\t\t\t<li>Mark Brugnoli-Vinten <i>(netniV)</i></li>\n\t\t\t<li>Jimmy Conner <i>(cigamit)</i></li>\n\t\t\t<li>Petr Macek <i>(xmacan)</i></li>\n\t\t\t<li>Andreas Braun <i>(browniebraun)</i></li>\n\t\t\t<li>Thomas Urban <i>(phalek)</i></li>\n\t\t\t<li>Jing Chen <i>(ddb4github)</i></li>\n\t\t</ul>\n\t\t</div>\n\t\t<div class='flexChild' style='min-width:300px;'>\n\t\t<p><strong><?php print __('Honorable Mentions'); ?></strong></p>\n\t\t<p style='min-height:45px'><?php print __('Contributors to Docuemntation, QA, Packaging, the Forums and our YouTube page.'); ?></strong></p>\n\t\t<ul type='disc'>\n\t\t\t<li>Sean Mancini <i>(bmfmancini)</i></li>\n\t\t\t<li>J.P. Pasnak, CD <i>(Linegod)</i></strong></li>\n\t\t\t<li>Chris Bell (Windows) <i>(BSOD2600)</i></li>\n\t\t\t<li>Paul Gevers (Debian) <i>(paulgevers)</i></strong></li>\n\t\t\t<li>Morten Stevens (Fedora) <i>(mortenstevens)</i></strong></li>\n\t\t</ul>\n\t\t</div>\n\t\t<div class='flexChild' style='min-width:300px;'>\n\t\t<p><strong><?php print __('Emeritus Members'); ?></strong></p>\n\t\t<p style='min-height:45px'><?php print __('Members of the original Cacti Group that have since moved on in their careers.  We continue to wish them the best.'); ?></strong></p>\n\t\t<ul type='disc'>\n\t\t\t<li>Ian Berry <i>(raX)</i></li>\n\t\t\t<li>Reinhard Scheck <i>(gandalf)</i></li>\n\t\t\t<li>Tony Roman <i>(rony)</i></strong></li>\n\t\t\t<li>Andy Blyler <i>(ablyler)</i></strong></li>\n\t\t</ul>\n\t\t</div>\n\t\t</div>\n\n\t\t<p><strong><?php print __('Thanks'); ?></a></strong><br>\n\t\t<ul type='disc'>\n\t\t\t<li>\n\t\t\t\t<?php print __('A very special thanks to %sTobi Oetiker%s, the creator of %sRRDtool%s and the very popular %sMRTG%s.', '<a href=\"http://tobi.oetiker.ch/\" target=\"_blank\"><strong>', '</strong></a>', '<a href=\"http://www.rrdtool.org/\" target=\"_blank\">', '</a>', '<a href=\"http://www.rrdtool.org\" target=\"_blank\">', '</a>'); ?>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><?php print __('The users of Cacti'); ?></strong>\n\t\t\t\t<?php print __('Especially anyone who has taken the time to create an issue report, or otherwise help fix a Cacti related problems. Also to anyone who has contributed to supporting Cacti.'); ?>\n\t\t\t</li>\n\t\t</ul>\n\t\t</p>\n\n\t\t<strong><?php print __('License'); ?></strong><br>\n\n\t\t<p><?php print __('Cacti is licensed under the GNU GPL:'); ?></p>\n\n\t\t<p><tt><?php print __('This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.');?></tt></p>\n\n\t\t<p><tt><?php print __('This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.'); ?></tt></p>\n\t</td>\n</tr>\n\n<?php\nhtml_end_box();\n\nbottom_footer();\n"
        },
        {
          "name": "aggregate_graphs.php",
          "type": "blob",
          "size": 71.9716796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\naggregate_prune_graphs();\n\n$actions = array(\n\t1 => __('Delete'),\n\t5 => __('Convert to Normal Graph'),\n\t4 => __('Place Graphs on Report'),\n\t2 => __('Migrate Aggregate to use a Template'),\n\t3 => __('Create New Aggregate from Aggregates')\n);\n\n$agg_item_actions = array(\n\t10 => __('Associate with Aggregate'),\n\t11 => __('Disassociate with Aggregate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\titem_remove();\n\n\t\theader('Location: aggregate_graphs.php?action=edit&id=' . get_filter_request_var('local_graph_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\titem_movedown();\n\n\t\theader('Location: aggregate_graphs.php?action=edit&id=' . get_filter_request_var('local_graph_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\titem_moveup();\n\n\t\theader('Location: aggregate_graphs.php?action=edit&id=' . get_filter_request_var('local_graph_id'));\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_graph();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$actions['tr_' . $tree['id']] = __('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tif (!isset_request_var('save_component_graph') && !isset_request_var('save_component_input')) {\n\t\theader('Location: aggregate_graphs.php?action=edit&id=' . get_nfilter_request_var('id'));\n\n\t\treturn null;\n\t}\n\n\tif (isset_request_var('save_component_graph')) {\n\t\t/* remember some often used values */\n\t\t$local_graph_id        = get_nfilter_request_var('local_graph_id', 0);\n\t\t$graph_template_id     = get_nfilter_request_var('graph_template_id', 0);\n\t\t$aggregate_template_id = get_nfilter_request_var('aggregate_template_id', 0);\n\t\t$graph_title           = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', false, 3);\n\n\t\tif (is_error_message()) {\n\t\t\traise_message(2);\n\t\t\theader('Location: aggregate_graphs.php?action=edit&id=' . $local_graph_id);\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/* get the aggregate graph id */\n\t\t$aggregate_graph_id  = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM aggregate_graphs\n\t\t\tWHERE local_graph_id = ?', array($local_graph_id));\n\n\t\t/* if user disabled template propagation we need to get graph data from form */\n\t\tif (!isset_request_var('template_propogation')) {\n\t\t\t$aggregate_template_id = 0;\n\t\t\t$new_data              = aggregate_validate_graph_params($_POST, false);\n\t\t} else {\n\t\t\t$new_data = array();\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\traise_message(2);\n\t\t\theader('Location: aggregate_graphs.php?action=edit&id=' . $local_graph_id);\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/* save graph data to cacti tables */\n\t\t$graph_templates_graph_id = aggregate_graph_templates_graph_save(\n\t\t\t$local_graph_id,\n\t\t\t$graph_template_id,\n\t\t\t$graph_title,\n\t\t\t$aggregate_template_id,\n\t\t\t$new_data\n\t\t);\n\n\t\t/* update title in aggregate graphs table */\n\t\tdb_execute_prepared(\n\t\t\t'UPDATE aggregate_graphs\n\t\t\tSET title_format = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray($graph_title, $aggregate_graph_id)\n\t\t);\n\n\t\t/* next lets see if any of the aggregate has changed and save as applicable\n\t\t * if the graph is templates, we can simply ignore.  A simple check will\n\t\t * determine if aggregation propagation is enabled\n\t\t */\n\t\tif (!isset_request_var('template_propogation')) {\n\t\t\t/* template propagation is disabled */\n\t\t\t$save                          = array();\n\t\t\t$save['id']                    = $aggregate_graph_id;\n\t\t\t$save['aggregate_template_id'] = $aggregate_template_id;\n\t\t\t$save['template_propogation']  = '';\n\t\t\t$save['gprint_prefix']         = get_nfilter_request_var('gprint_prefix');\n\t\t\t$save['gprint_format']         = isset_request_var('gprint_format') ? 'on' : '';\n\t\t\t$save['total_prefix']          = get_nfilter_request_var('total_prefix');\n\n\t\t\t$save['total']                 = get_filter_request_var('total');\n\t\t\t$save['graph_type']            = get_filter_request_var('graph_type');\n\t\t\t$save['total_type']            = get_filter_request_var('total_type');\n\t\t\t$save['order_type']            = get_filter_request_var('order_type');\n\n\t\t\t/* see if anything changed, if so, we will have to push out the aggregate */\n\t\t\tif (!empty($aggregate_graph_id)) {\n\t\t\t\t$old = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM aggregate_graphs\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($aggregate_graph_id)\n\t\t\t\t);\n\n\t\t\t\t$save_me = 0;\n\n\t\t\t\t$save_me += ($old['aggregate_template_id'] != $save['aggregate_template_id']);\n\t\t\t\t$save_me += ($old['template_propogation']  != $save['template_propogation']);\n\t\t\t\t$save_me += ($old['gprint_prefix']         != $save['gprint_prefix']);\n\t\t\t\t$save_me += ($old['gprint_format']         != $save['gprint_format']);\n\t\t\t\t$save_me += ($old['graph_type']            != $save['graph_type']);\n\t\t\t\t$save_me += ($old['total']                 != $save['total']);\n\t\t\t\t$save_me += ($old['total_type']            != $save['total_type']);\n\t\t\t\t$save_me += ($old['total_prefix']          != $save['total_prefix']);\n\t\t\t\t$save_me += ($old['order_type']            != $save['order_type']);\n\n\t\t\t\tif ($save_me) {\n\t\t\t\t\t$aggregate_graph_id = sql_save($save, 'aggregate_graphs');\n\t\t\t\t}\n\n\t\t\t\t/* save the template items now */\n\t\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\tWHERE local_graph_id = 0\n\t\t\t\t\t\tAND graph_template_id = ?\n\t\t\t\t\t\tORDER BY sequence', array($graph_template_id)),\n\t\t\t\t\t'id',\n\t\t\t\t\tarray('sequence')\n\t\t\t\t);\n\n\t\t\t\t/* get existing aggregate template items */\n\t\t\t\t$aggregate_graph_items_old = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graphs_graph_item\n\t\t\t\t\t\tWHERE aggregate_graph_id = ?\n\t\t\t\t\t\tORDER BY sequence', array($aggregate_graph_id)),\n\t\t\t\t\t'graph_templates_item_id',\n\t\t\t\t\tarray('aggregate_graph_id', 'graph_templates_item_id', 'sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t\t\t\t);\n\n\t\t\t\t/* update graph template item values with posted values */\n\t\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t\t$items_changed = false;\n\t\t\t\t$items_to_save = array();\n\t\t\t\t$sequence      = 1;\n\n\t\t\t\tforeach ($graph_templates_items as $item_id => $data) {\n\t\t\t\t\t$item_new                            = array();\n\t\t\t\t\t$item_new['aggregate_graph_id']      = $aggregate_graph_id;\n\t\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template'] : 0;\n\t\t\t\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on' : '';\n\t\t\t\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on' : '';\n\t\t\t\t\t$item_new['sequence']       = $sequence;\n\n\t\t\t\t\t/* compare with old item to see if we need to push out. */\n\t\t\t\t\tif (!isset($aggregate_graph_items_old[$item_id])) {\n\t\t\t\t\t\t/* this item does not yet exist */\n\t\t\t\t\t\t$items_changed = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* compare data from user to data from DB */\n\t\t\t\t\t\tforeach ($item_new as $field => $new_value) {\n\t\t\t\t\t\t\tif ($aggregate_graph_items_old[$item_id][$field] != $new_value) {\n\t\t\t\t\t\t\t\t$items_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* fill in missing fields with db values */\n\t\t\t\t\t\t$item_new = array_merge($aggregate_graph_items_old[$item_id], $item_new);\n\t\t\t\t\t}\n\t\t\t\t\t$items_to_save[] = $item_new;\n\n\t\t\t\t\t$sequence++;\n\t\t\t\t}\n\n\t\t\t\tif ($items_changed) {\n\t\t\t\t\taggregate_graph_items_save($items_to_save, 'aggregate_graphs_graph_item');\n\t\t\t\t}\n\n\t\t\t\tif ($save_me || $items_changed) {\n\t\t\t\t\tpush_out_aggregates(0, $local_graph_id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traise_message(1);\n\n\t\theader('Location: aggregate_graphs.php?action=edit&id=' . $local_graph_id);\n\t} elseif (isset_request_var('save_component_item')) {\n\t\tglobal $graph_item_types;\n\n\t\t$items[0] = array();\n\n\t\t// handle saving aggregate graph items in separate function\n\t\tif (get_request_var('aggregate_template_id') > 0 || get_request_var('aggregate_graph_id') > 0) {\n\t\t\tform_save_aggregate();\n\t\t}\n\n\t\tif ($graph_item_types[get_request_var('graph_type_id')] == 'LEGEND') {\n\t\t\t/* this can be a major time saver when creating lots of graphs with the typical\n\t\t\tGPRINT LAST/AVERAGE/MAX legends */\n\t\t\t$items = array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '4',\n\t\t\t\t\t'text_format'               => 'Current:',\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '1',\n\t\t\t\t\t'text_format'               => 'Average:',\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '3',\n\t\t\t\t\t'text_format'               => 'Maximum:',\n\t\t\t\t\t'hard_return'               => 'on'\n\t\t\t\t\t));\n\t\t}\n\n\t\tforeach ($items as $item) {\n\t\t\t/* generate a new sequence if needed */\n\t\t\tif (isempty_request_var('sequence')) {\n\t\t\t\t$sequence = get_filter_request_var('sequence');\n\t\t\t\tset_request_var('sequence', get_sequence($sequence, 'sequence', 'graph_templates_item', 'local_graph_id=' . get_request_var('local_graph_id')));\n\t\t\t}\n\t\t\t$save['id']                           = get_filter_request_var('graph_template_item_id');\n\t\t\t$save['graph_template_id']            = get_filter_request_var('graph_template_id');\n\t\t\t$save['local_graph_template_item_id'] = get_filter_request_var('local_graph_template_item_id');\n\t\t\t$save['local_graph_id']               = get_filter_request_var('local_graph_id');\n\t\t\t$save['task_item_id']                 = form_input_validate(get_filter_request_var('task_item_id'), 'task_item_id', '', true, 3);\n\t\t\t$save['color_id']                     = form_input_validate((isset($item['color_id']) ? $item['color_id'] : get_filter_request_var('color_id')), 'color_id', '', true, 3);\n\n\t\t\t/* if alpha is disabled, use invisible_alpha instead */\n\t\t\tif (!isset_request_var('alpha')) {\n\t\t\t\tset_request_var('alpha', get_nfilter_request_var('invisible_alpha'));\n\t\t\t}\n\n\t\t\t$save['alpha']                        = form_input_validate((isset($item['alpha']) ? $item['alpha'] : get_nfilter_request_var('alpha')), 'alpha', '', true, 3);\n\t\t\t$save['graph_type_id']                = form_input_validate((isset($item['graph_type_id']) ? $item['graph_type_id'] : get_filter_request_var('graph_type_id')), 'graph_type_id', '', true, 3);\n\t\t\t$save['cdef_id']                      = form_input_validate(get_filter_request_var('cdef_id'), 'cdef_id', '', true, 3);\n\t\t\t$save['consolidation_function_id']    = form_input_validate((isset($item['consolidation_function_id']) ? $item['consolidation_function_id'] : get_filter_request_var('consolidation_function_id')), 'consolidation_function_id', '', true, 3);\n\t\t\t$save['text_format']                  = form_input_validate((isset($item['text_format']) ? $item['text_format'] : get_nfilter_request_var('text_format')), 'text_format', '', true, 3);\n\t\t\t$save['value']                        = form_input_validate(get_nfilter_request_var('value'), 'value', '', true, 3);\n\t\t\t$save['hard_return']                  = form_input_validate(((isset($item['hard_return']) ? $item['hard_return'] : (isset_request_var('hard_return') ? get_nfilter_request_var('hard_return') : ''))), 'hard_return', '', true, 3);\n\t\t\t$save['gprint_id']                    = form_input_validate(get_filter_request_var('gprint_id'), 'gprint_id', '', true, 3);\n\t\t\t$save['sequence']                     = get_filter_request_var('sequence');\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$graph_template_item_id = sql_save($save, 'graph_templates_item');\n\n\t\t\t\tif ($graph_template_item_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tset_request_var('sequence', 0);\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: ' . CACTI_PATH_URL . 'aggregate_graphs.php?action=item_edit&graph_template_item_id=' . (empty($graph_template_item_id) ? get_filter_request_var('graph_template_item_id') : $graph_template_item_id) . '&id=' . get_filter_request_var('local_graph_id'));\n\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: ' . CACTI_PATH_URL . 'aggregate_graphs.php?action=edit&id=' . get_filter_request_var('local_graph_id'));\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\n/**\n * form_save_aggregate - save aggregate graph item\n *   This saves any overrides to item properties from graph template item.\n *   Inserting new items here is not possible. Just editing existing ones.\n */\nfunction form_save_aggregate() {\n\tglobal $config;\n\n\tif (!isset_request_var('save_component_item')) {\n\t\treturn;\n\t}\n\n\t// two possible tables to save to - aggregate template or aggregate graph\n\t// with different key column combination\n\t$save_to          = 'aggregate_graph_templates_item';\n\t$key_cols         = array('aggregate_template_id', 'graph_templates_item_id');\n\t$location_success = 'aggregate_templates.php?action=edit&id=' . get_filter_request_var('aggregate_template_id');\n\t$location_failure = 'aggregate_graphs.php?action=item_edit&aggregate_template_id=' . get_filter_request_var('aggregate_template_id') . '&id=' . get_filter_request_var('graph_template_item_id');\n\n\tif (get_filter_request_var('aggregate_graph_id') > 0) {\n\t\t$save_to          = 'aggregate_graphs_graph_item';\n\t\t$key_cols         = array('aggregate_graph_id', 'graph_templates_item_id');\n\t\t$location_success = 'aggregate_graphs.php?action=edit&id=' . get_filter_request_var('local_graph_id');\n\t\t$location_failure = 'aggregate_graphs.php?action=item_edit&aggregate_graph_id=' . get_filter_request_var('aggregate_graph_id') . '&id=' . get_filter_request_var('graph_template_item_id');\n\t}\n\n\t// only some properties can be saved here\n\t$save                    = array();\n\t$save['t_graph_type_id'] = form_input_validate((isset_request_var('t_graph_type_id') ? get_nfilter_request_var('t_graph_type_id') : ''), 't_graph_type_id', '', true, 3);\n\t$save['graph_type_id']   = form_input_validate((($save['t_graph_type_id']) ? get_filter_request_var('graph_type_id') : 0), 'graph_type_id', '', true, 3);\n\t$save['t_cdef_id']       = form_input_validate((isset_request_var('t_cdef_id') ? get_nfilter_request_var('t_cdef_id') : ''), 't_cdef_id', '', true, 3);\n\t$save['cdef_id']         = form_input_validate((($save['t_cdef_id']) ? get_filter_request_var('cdef_id') : 0), 'cdef_id', '', true, 3);\n\n\tif (!is_error_message()) {\n\t\t// sql_save will not give useful return values when row key is\n\t\t// composed from multiple columns. need to manually build query\n\t\t$sql_set = 'SET ';\n\n\t\tforeach ($save as $key => $value) {\n\t\t\t$sql_set .= $key . '=' . db_qstr($value) . ', ';\n\t\t}\n\t\t$sql_set = substr($sql_set, 0, -2);\n\n\t\t$sql_where = 'graph_templates_item_id = ' . get_filter_request_var('graph_template_item_id') . ' AND ';\n\n\t\tif ($save_to == 'aggregate_graph_templates_item') {\n\t\t\t$sql_where .= 'aggregate_template_id=' . get_filter_request_var('aggregate_template_id');\n\t\t} else {\n\t\t\t$sql_where .= 'aggregate_graph_id=' . get_filter_request_var('aggregate_graph_id');\n\t\t}\n\t\t$sql     = \"UPDATE $save_to $sql_set WHERE $sql_where LIMIT 1\";\n\t\t$success = db_execute($sql);\n\n\t\tif ($success) {\n\t\t\traise_message(1);\n\t\t} else {\n\t\t\traise_message(2);\n\t\t}\n\n\t\t// update existing graphs with the changes to this item\n\t\tif ($save_to == 'aggregate_graphs_graph_item') {\n\t\t\tpush_out_aggregates(0, get_filter_request_var('local_graph_id'));\n\t\t} elseif ($save_to == 'aggregate_graph_templates_item') {\n\t\t\tpush_out_aggregates(get_filter_request_var('aggregate_template_id'));\n\t\t}\n\t}\n\n\tif (is_error_message()) {\n\t\theader('Location: ' . CACTI_PATH_URL . $location_failure);\n\n\t\texit;\n\t} else {\n\t\theader('Location: ' . CACTI_PATH_URL . $location_success);\n\n\t\texit;\n\t}\n}\n\nfunction item_movedown() {\n\tglobal $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_graph_id');\n\t/* ==================================================== */\n\n\t$arr     = get_graph_group(get_request_var('id'));\n\t$next_id = get_graph_parent(get_request_var('id'), 'next');\n\n\tif ((!empty($next_id)) && (isset($arr[get_request_var('id')]))) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $next_id, 'next');\n\t} elseif (preg_match('/(GPRINT|VRULE|HRULE|COMMENT)/', $graph_item_types[db_fetch_cell_prepared('SELECT graph_type_id FROM graph_templates_item WHERE id = ?', array(get_request_var('id')))])) {\n\t\tmove_item_down('graph_templates_item', get_request_var('id'), 'local_graph_id=' . get_request_var('local_graph_id'));\n\t}\n}\n\nfunction item_moveup() {\n\tglobal $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_graph_id');\n\t/* ==================================================== */\n\n\t$arr         = get_graph_group(get_request_var('id'));\n\t$previous_id = get_graph_parent(get_request_var('id'), 'previous');\n\n\tif ((!empty($previous_id)) && (isset($arr[get_request_var('id')]))) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $previous_id, 'previous');\n\t} elseif (preg_match('/(GPRINT|VRULE|HRULE|COMMENT)/', $graph_item_types[db_fetch_cell_prepared('SELECT graph_type_id FROM graph_templates_item WHERE id = ?', array(get_request_var('id')))])) {\n\t\tmove_item_up('graph_templates_item', get_request_var('id'), 'local_graph_id=' . get_request_var('local_graph_id'));\n\t}\n}\n\nfunction item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM graph_templates_item WHERE id = ?', array(get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $config, $struct_graph_item, $graph_item_types, $consolidation_functions;\n\n\t// Remove filter item\n\tunset($struct_graph_item['data_template_id']);\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('aggregate_graph_id');\n\tget_filter_request_var('aggregate_template_id');\n\t/* ==================================================== */\n\n\t/* remember these search fields in session vars so we don't have to keep passing them around */\n\tload_current_session_value('local_graph_id', 'sess_local_graph_id', '');\n\n\t$id = (!isempty_request_var('id') ? '&id=' . get_request_var('id') : '');\n\n\t/* this editor can work on aggregate template graph item or aggregate item */\n\tif (!isempty_request_var('aggregate_graph_id')) {\n\t\t$id_field   = 'aggregate_graph_id';\n\t\t$table_name = 'aggregate_graphs_graph_item';\n\t\t$page_name  = 'aggregate_graphs.php';\n\t} elseif (!isempty_request_var('aggregate_template_id')) {\n\t\t$id_field   = 'aggregate_template_id';\n\t\t$table_name = 'aggregate_graph_templates_item';\n\t\t$page_name  = 'aggregate_templates.php';\n\t} else {\n\t\t/* TODO redirect somewhere and show an error message, rather than die */\n\t\tdie('We should have redirected somewhere but we ended up here instead' . PHP_EOL);\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t/* override some template_item values from aggregate tables */\n\t$item_overrides = db_fetch_row_prepared(\"SELECT *\n\t\tFROM $table_name\n\t\tWHERE $id_field = ?\n\t\tAND graph_templates_item_id = ?\",\n\t\tarray(get_request_var($id_field), get_request_var('id')));\n\n\tif (cacti_sizeof($item_overrides) == 0) {\n\t\t/* this item is not currently in aggregate tables\n\t\t * item editor will not work in this case, so let's\n\t\t * save it now\n\t\t */\n\t\t$item_new = array(\n\t\t\t$id_field                 => get_request_var($id_field),\n\t\t\t'graph_templates_item_id' => get_request_var('id'),\n\t\t\t'sequence'                => $template_item['sequence']\n\t\t);\n\n\t\taggregate_graph_items_save(array($item_new), $table_name);\n\n\t\t$item_overrides = db_fetch_row_prepared(\"SELECT *\n\t\t\tFROM $table_name\n\t\t\tWHERE $id_field = ?\n\t\t\tAND graph_templates_item_id = ?\",\n\t\t\tarray(get_request_var($id_field), get_request_var('id')));\n\t}\n\n\tforeach (array_keys($template_item) as $field_name) {\n\t\tif (!array_key_exists($field_name, $item_overrides)) {\n\t\t\tcontinue;\n\t\t}\n\t\t# t_<field_name> column in aggregate table must be \"on\" to override\n\t\tif (array_key_exists('t_'.$field_name, $item_overrides) && $item_overrides['t_'.$field_name] == 'on') {\n\t\t\t$template_item[$field_name] = $item_overrides[$field_name];\n\t\t}\n\t}\n\n\thtml_start_box(__('Override Values for Graph Item'), '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\tforeach ($struct_graph_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_graph_item[$field_name]);\n\n\t\t/* should we draw an override checkbox */\n\t\tif (array_key_exists('t_' . $field_name, $item_overrides)) {\n\t\t\t$form_array[$field_name]['sub_checkbox']  = array(\n\t\t\t\t'name'          => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Override this Value') . '<br>',\n\t\t\t\t'value'         => ($item_overrides['t_'.$field_name] == 'on' ? 'on' : ''),\n\t\t\t\t'on_change'     => 'toggleFieldEnabled(this.id);'\n\t\t\t);\n\t\t}\n\n\t\t$form_array[$field_name]['value']   = (isset($template_item) ? $template_item[$field_name] : '');\n\t\t$form_array[$field_name]['form_id'] = (isset($template_item) ? $template_item['id'] : '0');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array(\n\t\t\t\t'post_to' => CACTI_PATH_URL . 'aggregate_graphs.php'\n\t\t\t),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\tform_hidden_box('local_graph_id', get_request_var('local_graph_id'), '0');\n\tform_hidden_box('graph_template_item_id', (isset($template_item) ? $template_item['id'] : '0'), '');\n\tform_hidden_box('local_graph_template_item_id', (isset($template_item) ? $template_item['local_graph_template_item_id'] : '0'), '');\n\tform_hidden_box('graph_template_id', (isset($template_item) ? $template_item['graph_template_id'] : '0'), '');\n\tform_hidden_box('sequence', (isset($template_item) ? $template_item['sequence'] : '0'), '');\n\tform_hidden_box('_graph_type_id', (isset($template_item) ? $template_item['graph_type_id'] : '0'), '');\n\tform_hidden_box('save_component_item', '1', '');\n\tform_hidden_box('invisible_alpha', $form_array['alpha']['value'], 'FF');\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\tform_hidden_box('aggregate_graph_id', get_request_var('aggregate_graph_id'), '0');\n\tform_hidden_box('aggregate_template_id', get_request_var('aggregate_template_id'), '0');\n\n\thtml_end_box(true, true);\n\n\tform_save_button(CACTI_PATH_URL . \"$page_name?action=edit&id=\" . get_request_var('local_graph_id'));\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\tdynamic();\n\t\tsetFieldsDisabled();\n\t});\n\n\tfunction dynamic() {\n\t\t$('#alpha').prop('disabled', true);\n\t\tif ($('#color_id').val() != 0) {\n\t\t\t$('#alpha').prop('disabled', true);\n\t\t}\n\t}\n\n\tfunction changeColorId() {\n\t\tif ($('#color_id').attr('selectedIndex') != 0) {\n\t\t\t$('#alpha').prop('disabled', true);\n\t\t}\n\t}\n\n\t// disable all items with sub-checkboxes except\n\t// where sub-checkbox checked\n\tfunction setFieldsDisabled() {\n\t\t$('input[id^=\"t_\"]').each(function() {\n\t\t\tif (!$(this).is(':checked')) {\n\t\t\t\tvar fieldId = $(this).attr('id').substr(2);\n\n\t\t\t\t$('#'+fieldId).prop('disabled', true);\n\t\t\t\t$('#'+fieldId).addClass('ui-state-disabled');\n\n\t\t\t\tif ($('#'+fieldId).selectmenu('instance')) {\n\t\t\t\t\t$('#'+fieldId).selectmenu('disable');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t// enable or disable form field based on state of corresponding checkbox\n\tfunction toggleFieldEnabled(toggleFieldId) {\n\t\tfieldId  = toggleFieldId.substr(2);\n\n\t\tif ($('#'+fieldId).hasClass('ui-state-disabled')) {\n\t\t\t$('#'+fieldId).prop('disabled', false).removeClass('ui-state-disabled');\n\n\t\t\tif ($('#'+fieldId).selectmenu('instance')) {\n\t\t\t\t$('#'+fieldId).selectmenu('enable');\n\t\t\t}\n\t\t} else {\n\t\t\t$('#'+fieldId).prop('disabled', true).addClass('ui-state-disabled');\n\n\t\t\tif ($('#'+fieldId).selectmenu('instance')) {\n\t\t\t\t$('#'+fieldId).selectmenu('disable');\n\t\t\t}\n\t\t}\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction form_actions() {\n\tglobal $actions, $agg_item_actions;\n\tglobal $alignment, $graph_timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* we are performing two set's of actions here */\n\t$actions += $agg_item_actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tapi_aggregate_remove_multi($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // migrate to template\n\t\t\t\tapi_aggregate_convert_template($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // create aggregate from aggregate\n\t\t\t\t$aggregate_name = get_request_var('aggregate_name');\n\t\t\t\tapi_aggregate_create($aggregate_name, $selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // add graphs to report\n\t\t\t\t$good = true;\n\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t\t$good = false;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($good) {\n\t\t\t\t\traise_message('reports_graphs_added');\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // Convert to a normal graph\n\t\t\t\tapi_aggregate_convert_to_graph($selected_items);\n\n\t\t\t\theader('Location: aggregate_graphs.php');\n\n\t\t\t\texit;\n\t\t\t} elseif (get_request_var('drp_action') == '10') { // associate with aggregate\n\t\t\t\t$local_graph_id = get_filter_request_var('local_graph_id');\n\t\t\t\tapi_aggregate_associate($local_graph_id, $selected_items);\n\n\t\t\t\theader('Location: aggregate_graphs.php?action=edit&tab=items&id=' . $local_graph_id);\n\n\t\t\t\texit;\n\t\t\t} elseif (get_request_var('drp_action') == '11') { // dis-associate with aggregate\n\t\t\t\t$local_graph_id = get_filter_request_var('local_graph_id');\n\t\t\t\tapi_aggregate_disassociate($local_graph_id, $selected_items);\n\n\t\t\t\theader('Location: aggregate_graphs.php?action=edit&tab=items&id=' . $local_graph_id);\n\n\t\t\t\texit;\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: aggregate_graphs.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* default form variables */\n\t\t$aggregate_templates = array();\n\t\t$reports = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($iarray)) {\n\t\t\tif (get_request_var('drp_action') == '2') {\n\t\t\t\t/* determine the common graph template if any */\n\t\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t\t\t$local_graph_ids[] = $matches[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$lgid = implode(',', $local_graph_ids);\n\n\t\t\t\t/**\n\t\t\t\t * for whatever reason,  subquery performance in mysql is sub-optimal.\n\t\t\t\t * Therefore, let's do this as a few queries instead.\n\t\t\t\t */\n\t\t\t\t$task_items = array_rekey(db_fetch_assoc(\"SELECT DISTINCT task_item_id\n\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\tWHERE local_graph_id IN($lgid)\"), 'task_item_id', 'task_item_id');\n\n\t\t\t\tif (cacti_sizeof($task_items)) {\n\t\t\t\t\t$task_items = implode(',', $task_items);\n\n\t\t\t\t\t$graph_templates = db_fetch_assoc(\"SELECT DISTINCT graph_template_id\n\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\tWHERE task_item_id IN ($task_items) AND graph_template_id>0\");\n\t\t\t\t} else {\n\t\t\t\t\t$graph_templates = array();\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($graph_templates) > 1) {\n\t\t\t\t\t$message = \"<p>\" . __('The selected Aggregate Graphs represent elements from more than one Graph Template.') . '</p>\n\t\t\t\t\t\t<p>' . __('In order to migrate the Aggregate Graphs below to a Template based Aggregate, they must only be using one Graph Template.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$ilist</ul></div>\";\n\n\t\t\t\t\traise_message('nonmatch_templates', $message, MESSAGE_LEVEL_ERROR);\n\t\t\t\t\theader('Location: aggregate_graphs.php');\n\n\t\t\t\t\texit;\n\t\t\t\t} elseif (cacti_sizeof($graph_templates) == 0) {\n\t\t\t\t\t$message = \"<p>\" . __('The selected Aggregate Graphs does not appear to have any matching Aggregate Templates.') . '</p>\n\t\t\t\t\t\t<p>' . __('In order to migrate the Aggregate Graphs below use an Aggregate Template, one must already exist.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$ilist</ul></div>\";\n\n\t\t\t\t\traise_message('nonmatch_templates', $message, MESSAGE_LEVEL_ERROR);\n\t\t\t\t\theader('Location: aggregate_graphs.php');\n\n\t\t\t\t\texit;\n\t\t\t\t} else {\n\t\t\t\t\t$graph_template = $graph_templates[0]['graph_template_id'];\n\n\t\t\t\t\t$aggregate_templates = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\t\t\tORDER BY name',\n\t\t\t\t\t\t\tarray($graph_template)),\n\t\t\t\t\t\t'id', 'name'\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!cacti_sizeof($aggregate_templates)) {\n\t\t\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\t\tFROM graph_templates\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($graph_template));\n\n\t\t\t\t\t\t$message = \"<p>\" . __('There are currently no Aggregate Templates defined for the selected Legacy Aggregates.') . '</p>\n\t\t\t\t\t\t\t<p>' . __esc('In order to migrate the Aggregate Graphs below to a Template based Aggregate, first create an Aggregate Template for the Graph Template \\'%s\\'.', $name) . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$ilist</ul></div>\";\n\n\t\t\t\t\t\traise_message('nonmatch_templates', $message, MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\theader('Location: aggregate_graphs.php');\n\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') {\n\t\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM reports\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($_SESSION[SESS_USER_ID]));\n\n\t\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\t\t$reports = array_rekey($reports, 'id', 'name');\n\t\t\t\t} else {\n\t\t\t\t\t$message = \"<p>\" . __('You currently have no reports defined.') . '</p>';\n\n\t\t\t\t\traise_message('nonmatch_templates', $message, MESSAGE_LEVEL_ERROR);\n\t\t\t\t\theader('Location: aggregate_graphs.php');\n\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'aggregate_graphs.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist,\n\t\t\t\t'eaction'    => 'local_graph_id',\n\t\t\t\t'eactionid'  => isset_request_var('local_graph_id') ? get_filter_request_var('local_graph_id'):'0'\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Aggregate Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Aggregate Graphs.'),\n\t\t\t\t\t'scont'    => __('Delete Aggregate Graph'),\n\t\t\t\t\t'pcont'    => __('Delete Aggregate Graphs')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Migrate the following Legacy Aggregate to a Templated Aggregate Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Migrate the following Legacy Aggregates to Templated Aggregate Graphs.'),\n\t\t\t\t\t'scont'    => __('Migrate to Aggregate Graph'),\n\t\t\t\t\t'pcont'    => __('Migrate to Aggregate Graphs'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'array'   => $aggregate_templates,\n\t\t\t\t\t\t\t'title'   => __('Aggregate Template'),\n\t\t\t\t\t\t\t'default' => array_key_first($aggregate_templates)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'message' => __('Click \\'Continue\\' to Combine the following Aggregates into an Aggregate Graph.'),\n\t\t\t\t\t'cont'    => __('Combine Aggregate Graphs'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Aggregate Name'),\n\t\t\t\t\t\t\t'default' => __('New Aggregate'),\n\t\t\t\t\t\t\t'width'   => 40,\n\t\t\t\t\t\t\t'size'    => 40\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Place the following Aggregate Graph on a Report.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Place the following Aggregate Graphs on a Report.'),\n\t\t\t\t\t'scont'    => __('Place Aggregate Graph on Report'),\n\t\t\t\t\t'pcont'    => __('Place Aggregate Graphs on Report'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'report_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Report Name'),\n\t\t\t\t\t\t\t'array'   => $reports,\n\t\t\t\t\t\t\t'default' => array_key_first($reports)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'timespan' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Timespan'),\n\t\t\t\t\t\t\t'array'   => $graph_timespans,\n\t\t\t\t\t\t\t'default' => read_user_setting('default_timespan')\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'align' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Align'),\n\t\t\t\t\t\t\t'array'   => $alignment,\n\t\t\t\t\t\t\t'default' => REPORTS_ALIGN_CENTER\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Convert the following Aggregate Graph to a Normal Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Convert the following Aggregate Graphs to Normal Graphs.'),\n\t\t\t\t\t'scont'    => __('Convert Aggregate Graph'),\n\t\t\t\t\t'pcont'    => __('Convert Aggregate Graphs')\n\t\t\t\t),\n\t\t\t\t10 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Associate the following Graph with the Aggregate Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Associate the following Graphs with the Aggregate Graph.'),\n\t\t\t\t\t'scont'    => __('Associate Graph with Aggregate'),\n\t\t\t\t\t'pcont'    => __('Associate Graphs with  Aggregate')\n\t\t\t\t),\n\t\t\t\t11 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disassociate the following Graph from the Aggregate Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disassociate the following Graphs from the Aggregate Graph.'),\n\t\t\t\t\t'scont'    => __('Disassociate Graph with Aggregate'),\n\t\t\t\t\t'pcont'    => __('Disassociate Graphs with  Aggregate')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\t$trees = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach($trees as $tree) {\n\t\t\t\t$form_data['options']['tr_' . $tree['id']] = array(\n\t\t\t\t\t'smessage' => __esc('Click \\'Continue\\' to Place the following Aggregate Graph on Tree %s.', $tree['name']),\n\t\t\t\t\t'pmessage' => __esc('Click \\'Continue\\' to Duplicate following Aggregate Graphs on Tree %s.', $tree['name']),\n\t\t\t\t\t'scont'    => __('Place Aggregate Graph on Tree'),\n\t\t\t\t\t'pcont'    => __('Place Aggregate Graphs on Tree'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'tree_item_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_branch',\n\t\t\t\t\t\t\t'title'   => __('Destination Branch:'),\n\t\t\t\t\t\t\t'id'      => $tree['id']\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t'eaction'   => 'tree_id',\n\t\t\t\t\t'eactionid' => $tree['id'],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $struct_aggregate_graph, $image_types;\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t// Remove filter item\n\tunset($struct_graph_item['data_template_id']);\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* purge any old graphs */\n\taggregate_prune_graphs(get_request_var('id'));\n\n\tif (isset_request_var('reset')) {\n\t\t$_SESSION['aggregate_referer'] = 'aggregate_graphs.php';\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !substr_count($_SERVER['HTTP_REFERER'], 'aggregate_graphs.php')) {\n\t\t$_SESSION['aggregate_referer'] = $_SERVER['HTTP_REFERER'];\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !isset($_SESSION['aggregate_referer'])) {\n\t\t$_SESSION['aggregate_referer'] = $_SERVER['HTTP_REFERER'];\n\t}\n\n\t$referer = isset($_SESSION['aggregate_referer']) ? $_SESSION['aggregate_referer'] : 'aggregate_graphs.php';\n\n\t$use_graph_template = false;\n\t$aginfo             = array();\n\t$graphs             = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$graphs = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\t$aginfo = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graphs\n\t\t\t\tWHERE local_graph_id = ?',\n\t\t\t\tarray($graphs['local_graph_id'])\n\t\t\t);\n\n\t\t\tif ($aginfo['title_format'] == '') {\n\t\t\t\t$aginfo['title_format'] = get_graph_title($graphs['local_graph_id']);\n\t\t\t}\n\n\t\t\t$header_label = __esc('[edit: %s]', get_graph_title(get_request_var('id')));\n\t\t} else {\n\t\t\t$header_label = __('Aggregate Graph does not Exist');\n\t\t}\n\t}\n\n\n\t$aggregate_tabs = array(\n\t\t'details' => __('Details'),\n\t\t'items'   => __('Items'),\n\t\t'preview' => __('Preview')\n\t);\n\n\tif (cacti_sizeof($aginfo)) {\n\t\tif ($aginfo['aggregate_template_id'] > 0) {\n\t\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($aginfo['aggregate_template_id'])\n\t\t\t);\n\t\t} else {\n\t\t\t$template = $aginfo;\n\t\t}\n\t} elseif (cacti_sizeof($graphs)) {\n\t\t$template = array();\n\t} else {\n\t\traise_message('missing_aggregate', __('Aggregate Graphs Accessed does not Exist'), MESSAGE_LEVEL_ERROR);\n\n\t\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t$referer = $_SERVER['HTTP_REFERER'];\n\t\t\theader('Location: ' . $referer);\n\t\t} else {\n\t\t\theader('Location: aggregate_graphs.php');\n\t\t}\n\n\t\texit;\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\tif (isset_request_var('tab')) {\n\t\tswitch (get_nfilter_request_var('tab')) {\n\t\t\tcase 'details':\n\t\t\tcase 'items':\n\t\t\tcase 'preview':\n\t\t\t\t$_SESSION['agg_tab'] = get_nfilter_request_var('tab');\n\t\t\t\tset_request_var('tab', get_nfilter_request_var('tab'));\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (isset($_SESSION['agg_tab'])) {\n\t\t\t\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t\t\t\t} else {\n\t\t\t\t\t$_SESSION['agg_tab'] = 'details';\n\t\t\t\t\tset_request_var('tab', 'details');\n\t\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['agg_tab'])) {\n\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t} else {\n\t\tset_request_var('tab', 'details');\n\t}\n\t/* ================= input validation ================= */\n\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t/* draw the categories tabs on the top of the page */\n\tprint \"<div class='tabs'>\";\n\tprint \"<div class='aggtabs'><nav><ul role='tablist'>\";\n\n\tif (cacti_sizeof($aggregate_tabs)) {\n\t\tforeach ($aggregate_tabs as $id => $name) {\n\t\t\tif ($id == 'details' || (!isempty_request_var('id'))) {\n\t\t\t\tprint \"<li class='subTab'><a id='agg_\" . $tab_short_name . \"' class='tab \" . ($id == $current_tab ? \"selected'\" : \"'\") .\n\t\t\t\t\t\" href='\" . html_escape(CACTI_PATH_URL . 'aggregate_graphs.php?action=edit&id=' . get_request_var('id') . \"&tab=$id\") .\n\t\t\t\t\t\"'>\" . html_escape($name) . '</a></li>';\n\t\t\t}\n\t\t}\n\t}\n\n\tprint '</ul>';\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_filter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_filter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t$message = __('Turn Off Graph Debug Mode');\n\t} else {\n\t\t$message = __('Turn On Graph Debug Mode');\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\tprint \"<ul style='float:right;'><li><a class='pic' href='\" . html_escape('aggregate_graphs.php?action=edit&id=' . get_request_var('id') . '&tab=' . get_request_var('tab') .  '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1')) . \"'>\" . $message . '</a></li></ul></nav></div></div>';\n\t} elseif (!isempty_request_var('id') && $current_tab == 'details' && (!cacti_sizeof($template))) {\n\t\tprint \"<ul style='float:right;'><li><a id='toggle_items' class='pic' href='#'>\" . __('Show Item Details') . '</a></li></ul></nav></div></div>';\n\t} else {\n\t\tprint '</nav></div></div>';\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\t$graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\tif (!cacti_sizeof($graph)) {\n\t\t\thtml_start_box(__('Aggregate Preview Does Not Exist'), '100%', '', '3', 'center', '');\n\t\t\tprint \"<tr><td id='imagewindow' class='center'>\" . __('Aggregate Graph does not Exist') . '</tr></tr>';\n\t\t\thtml_end_box(false);\n\t\t\traise_message('noaggregate', __('Aggregate Graph does not Exist'), MESSAGE_LEVEL_ERROR);\n\n\t\t\treturn false;\n\t\t}\n\n\t\thtml_start_box(__('Aggregate Preview %s', $header_label), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr>\n\t\t\t<td id='imagewindow' class='center'>\n\t\t\t\t<img src='<?php print html_escape(CACTI_PATH_URL . 'graph_image.php?action=edit&disable_cache=1&local_graph_id=' . get_request_var('id') . '&rra_id=' . read_user_setting('default_rra_id') . '&random=' . mt_rand()); ?>' alt=''>\n\t\t\t\t<script type='text/javascript'>\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t$('#agg_preview').show();\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\tif (isset($_SESSION['graph_debug_mode']) && isset_request_var('id')) {\n\t\t\t$graph_data_array['output_flag']  = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\n\t\t\t$null_param = array();\n\t\t\t?>\n\t\t\t<tr>\n\t\t\t\t<td id='rrdtoolinfo' class='left' style='padding-left:15px;max-width:900px;overflow:scroll'>\n\t\t\t\t\t<div style='overflow:auto;'>\n\t\t\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:'); ?></span><br>\n\t\t\t\t\t\t<?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array, '', $null_param, $_SESSION[SESS_USER_ID]); ?>\n\t\t\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:'); ?></span><br><?php unset($graph_data_array['print_source']); ?>\n\t\t\t\t\t\t<pre class='monoSpace tableRow left'><?php print($config['poller_id'] == 1 ? @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array, '', $null_param, $_SESSION[SESS_USER_ID]) : __esc('Not Checked')); ?></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script type='text/javascript'>\n\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\tvar rrdwidth = $(window).width() - $('.cactiConsoleNavigationArea').width();\n\t\t\t\t\t\t\t$('#rrdtoolinfo, #imagewindow').css('max-width', rrdwidth);\n\t\t\t\t\t\t});\n\t\t\t\t\t</script>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t}\n\n\t\thtml_end_box(false);\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'items') {\n\t\taggregate_items();\n\t\tbottom_footer();\n\n\t\texit;\n\t}\n\n\tform_start('aggregate_graphs.php', 'template_edit');\n\n\t/* we will show the templated representation only when there is a template and propagation is enabled */\n\tif (!isempty_request_var('id') && $current_tab == 'details') {\n\t\tif (cacti_sizeof($template)) {\n\t\t\tprint \"<div id='templated'>\";\n\n\t\t\thtml_start_box(__('Aggregate Graph %s', $header_label), '100%', true, '3', 'center', '');\n\n\t\t\t$helper_string = '|host_description|';\n\n\t\t\tif (isset($template)) {\n\t\t\t\t$data_query = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\t\tarray($template['graph_template_id'])\n\t\t\t\t);\n\n\t\t\t\tif ($data_query > 0) {\n\t\t\t\t\t$data_query_info = get_data_query_array($data_query);\n\n\t\t\t\t\tforeach ($data_query_info['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\tif ($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t$helper_string .= ($helper_string != '' ? ', ' : '') . '|query_' . $field_name . '|';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Append the helper string\n\t\t\t$struct_aggregate_graph['suggestions'] = array(\n\t\t\t\t'method'        => 'other',\n\t\t\t\t'friendly_name' => __('Prefix Replacement Values'),\n\t\t\t\t'description'   => __('You may use these replacement values for the Prefix in the Aggregate Graph'),\n\t\t\t\t'value'         => $helper_string\n\t\t\t);\n\n\t\t\t/* add template propagation to the structure */\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate_graph, (isset($aginfo) ? $aginfo : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tif (isset($template)) {\n\t\t\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $aginfo);\n\t\t\t}\n\n\t\t\tform_hidden_box('save_component_template', '1', '');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t\tvar templated_selectors = [\n\t\t\t\t\t'#gprint_prefix',\n\t\t\t\t\t'#gprint_format',\n\t\t\t\t\t'#graph_type',\n\t\t\t\t\t'#total',\n\t\t\t\t\t'#total_type',\n\t\t\t\t\t'#total_prefix',\n\t\t\t\t\t'#order_type',\n\t\t\t\t\t'select[id^=\"agg_color\"]',\n\t\t\t\t\t'input[id^=\"agg_total\"]',\n\t\t\t\t\t'input[id^=\"agg_skip\"]',\n\t\t\t\t\t'#image_format_id',\n\t\t\t\t\t'#height',\n\t\t\t\t\t'#width',\n\t\t\t\t\t'#slope_mode',\n\t\t\t\t\t'#auto_scale',\n\t\t\t\t\t'#auto_scale_opts',\n\t\t\t\t\t'#auto_scale_log',\n\t\t\t\t\t'#scale_log_units',\n\t\t\t\t\t'#auto_scale_rigid',\n\t\t\t\t\t'#auto_padding',\n\t\t\t\t\t'#export',\n\t\t\t\t\t'#upper_limit',\n\t\t\t\t\t'#lower_limit',\n\t\t\t\t\t'#base_value',\n\t\t\t\t\t'#unit_value',\n\t\t\t\t\t'#unit_exponent_value',\n\t\t\t\t\t'#alt_y_grid',\n\t\t\t\t\t'#right_axis',\n\t\t\t\t\t'#right_axis_label',\n\t\t\t\t\t'#right_axis_format',\n\t\t\t\t\t'#right_axis_formatter',\n\t\t\t\t\t'#left_axis_format',\n\t\t\t\t\t'#left_axis_formatter',\n\t\t\t\t\t'#no_gridfit',\n\t\t\t\t\t'#unit_length',\n\t\t\t\t\t'#tab_width',\n\t\t\t\t\t'#dynamic_labels',\n\t\t\t\t\t'#force_rules_legend',\n\t\t\t\t\t'#legend_position',\n\t\t\t\t\t'#legend_direction',\n\t\t\t\t\t'#vertical_label'\n\t\t\t\t];\n\n\t\t\t\t$(function() {\n\t\t\t\t\tif (!$('input[id^=\"agg_total\"]').is(':checked') && !$('#template_propogation').is(':checked')) {\n\t\t\t\t\t\t$('#agg_preview').hide();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($('#template_propogation').is(':checked')) {\n\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t\t\t\t\tif ($(templated_selectors[i]).selectmenu('instance')) {\n\t\t\t\t\t\t\t\t$(templated_selectors[i]).selectmenu('disable');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#row_template_propogation').hide();\n\t\t\t\t\t\t$('#row_spacer0').hide();\n\t\t\t\t\t}\n\n\t\t\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($('#' + id).is(':checked')) {\n\t\t\t\t\t\t\t$('#' + altId).prop('checked', false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$('#' + altId).prop('checked', true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchangeTotals();\n\n\t\t\t\t\t\tupdateSaveButton();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#total').change(function() {\n\t\t\t\t\t\tchangeTotals();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#total_type').change(function() {\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#template_propogation').change(function() {\n\t\t\t\t\t\tif (!$('#template_propogation').is(':checked')) {\n\t\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tupdateSaveButton();\n\t\t\t\t});\n\n\t\t\t\tfunction updateSaveButton() {\n\t\t\t\t\tif ($('input[id^=\"agg_total\"]').is(':checked')) {\n\t\t\t\t\t\t$('#submit').prop('disabled', false);\n\n\t\t\t\t\t\tif ($('#submit').button('instance')) {\n\t\t\t\t\t\t\t$('#submit').button('enable');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#submit').prop('disabled', true);\n\n\t\t\t\t\t\tif ($('#submit').button('instance')) {\n\t\t\t\t\t\t\t$('#submit').button('disable');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction changeTotals() {\n\t\t\t\t\tvar totalMode = $('#total').val();\n\t\t\t\t\tvar showField = totalMode != <?= AGGREGATE_ORDER_NONE ?>;\n\n\t\t\t\t\ttoggleFields({\n\t\t\t\t\t\ttotal_type: showField,\n\t\t\t\t\t\ttotal_prefix: showField,\n\t\t\t\t\t\torder_type: showField,\n\t\t\t\t\t});\n\n\t\t\t\t\tchangeTotalsType();\n\t\t\t\t}\n\n\t\t\t\tfunction changeTotalsType() {\n\t\t\t\t\tif ($('#total_type').val() == '<?php print AGGREGATE_TOTAL_TYPE_SIMILAR; ?>') {\n\t\t\t\t\t\tif ($('#total_prefix').val() == '' && $('#id').val() == 0) {\n\t\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('Total'); ?>');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ($('#total_type').val() == '<?php print AGGREGATE_TOTAL_TYPE_ALL; ?>') {\n\t\t\t\t\t\tif ($('#total_prefix').val() == '' && $('#id').val() == 0) {\n\t\t\t\t\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('All Items'); ?>');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</script>\n\t\t\t<?php\n\t\t\tprint '</div>';\n\t\t}\n\n\t\t/* we will show the classic representation only when we are not templating */\n\t\tprint \"<div id='classic'>\";\n\n\t\t?>\n\t\t<input type='hidden' id='graph_template_graph_id' name='graph_template_graph_id' value='<?php print(isset($graphs) ? $graphs['id'] : '0'); ?>'>\n\t\t<input type='hidden' id='local_graph_template_graph_id' name='local_graph_template_graph_id' value='<?php print(isset($graphs) ? $graphs['local_graph_template_graph_id'] : '0'); ?>'>\n\t\t<?php\n\n\t\tif (empty($graphs['graph_template_id'])) {\n\t\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t\t$form_array = array();\n\n\t\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t\tif ($field_array['method'] != 'spacer') {\n\t\t\t\t\tif ($field_name != 'title') {\n\t\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\t\t\t\t$form_array[$field_name]['value']   = (isset($graphs) ? $graphs[$field_name] : '');\n\t\t\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graphs) ? $graphs['id'] : '0');\n\n\t\t\t\t\t\tif (!(($use_graph_template == false) || ($graphs['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t\t\t$form_array[$field_name]['method']      = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\t\t}\n\n\t\tform_hidden_box('save_component_graph', '1', '');\n\t\tform_hidden_box('save_component_input', '1', '');\n\t\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\t\tform_save_button($referer, 'return', 'id');\n\n\t\tprint '</div>';\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t\t$(function() {\n\t\t\t\tdynamic();\n\t\t\t\tif (!$('#templated')) {\n\t\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#toggle_items').click(function() {\n\t\t\t\tif ($('#toggle_items').is(\":contains('<?php print __('Show'); ?>')\")) {\n\t\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', '');\n\t\t\t\t\t$('#toggle_items').text('<?php print __('Hide Item Details'); ?>');\n\t\t\t\t} else {\n\t\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t\t\t$('#toggle_items').text('<?php print __('Show Item Details'); ?>');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction dynamic() {\n\t\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction changeScaleLog() {\n\t\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t<?php\n\t}\n}\n\nfunction aggregate_items() {\n\tglobal $agg_item_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'page' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t),\n\t\t'matching' => array(\n\t\t\t'filter'  => FILTER_CALLBACK,\n\t\t\t'default' => 'on',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter'  => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter'  => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t),\n\t\t'custom' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'local_graph_ids' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agraph_item');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') == '') {\n\t\t$sql_where = '';\n\t} elseif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t$sql_where = \"WHERE gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\";\n\t} else {\n\t\t$filters   = explode(' ', get_request_var('rfilter'));\n\t\t$sql_where = '';\n\t\t$sql_where = aggregate_make_sql_where($sql_where, $filters, 'gtg.title_cache');\n\t}\n\n\tif (get_request_var('matching') != 'false') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . ' (agi.local_graph_id IS NOT NULL)';\n\t}\n\n\t$graph_template = db_fetch_cell_prepared('SELECT graph_template_id\n\t\tFROM aggregate_graphs AS ag\n\t\tWHERE ag.local_graph_id = ?',\n\t\tarray(get_request_var('id'))\n\t);\n\n\t$aggregate_id = db_fetch_cell_prepared('SELECT id\n\t\tFROM aggregate_graphs\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('id'))\n\t);\n\n\t$total_items = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM aggregate_graphs_items\n\t\tWHERE aggregate_graph_id = ?',\n\t\tarray($aggregate_id)\n\t);\n\n\tif (!empty($graph_template)) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . \" (gtg.graph_template_id=$graph_template)\";\n\t}\n\n\tif (get_request_var('local_graph_ids') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' agi.local_graph_id IN(' . get_request_var('local_graph_ids') . ')';\n\t}\n\n\t$sql = \"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (\n\t\t\tSELECT DISTINCT local_graph_id\n\t\t\tFROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id=$aggregate_id) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, array(), 'aggregate_graph');\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agi.local_graph_id AS agg_graph_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (\n\t\t\tSELECT DISTINCT local_graph_id\n\t\t\tFROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id=$aggregate_id) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t?>\n\t<script type='text/javascript'>\n\t\tvar totalItems = <?php print $total_items; ?>;\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL = 'aggregate_graphs.php' +\n\t\t\t\t'?action=edit&tab=items&id=' + $('#id').val() +\n\t\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t\t'&matching=' + $('#matching').is(':checked');\n\t\t\tloadUrl({\n\t\t\t\turl: strURL\n\t\t\t})\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'aggregate_graphs.php?action=edit&tab=items&id=' + $('#id').val() + '&clear=true';\n\t\t\tloadUrl({\n\t\t\t\turl: strURL\n\t\t\t})\n\t\t}\n\n\t\t$(function() {\n\t\t\tif (totalItems == 0) {\n\t\t\t\t$('#agg_preview').hide();\n\t\t\t}\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#rfilter').change(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#forms').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t</script>\n\t<?php\n\n\thtml_filter_start_box(__('Matching Graphs'));\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='forms' action='aggregate_graphs.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='45' onChange='applyFilter()' value='<?php print get_request_var('rfilter'); ?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Graphs'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()' data-defaultLabel='<?php print __('Graphs');?>'>\n\t\t\t\t\t\t\t\t<option value='-1' <?php print(get_request_var('rows') == '-1' ? ' selected>' : '>') . __('Default'); ?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\";\n\n\t\t\t\t\t\t\t\t\t\tif (get_request_var('rows') == $key) {\n\t\t\t\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tprint '>' . html_escape($value) . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='checkbox' id='matching' onChange='applyFilter()' <?php print(get_request_var('matching') == 'on' || get_request_var('matching') == 'true' ? ' checked' : ''); ?>>\n\t\t\t\t\t\t\t\t<label for='matching'><?php print __('Part of Aggregate'); ?></label>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='go' value='<?php print __esc('Go'); ?>' title='<?php print __esc('Set/Refresh Filters'); ?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' onClick='clearFilter()' value='<?php print __esc('Clear'); ?>' title='<?php print __esc('Clear Filters'); ?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t\t<input type='hidden' name='tab' value='items'>\n\t\t\t\t<input type='hidden' id='id' value='<?php print get_request_var('id'); ?>'>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box(false);\n\n\t/* print checkbox form for validation */\n\tform_start('aggregate_graphs.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$nav = html_nav_bar('aggregate_graphs.php?action=edit&tab=items&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\t$display_text = array(\n\t\t'title_cache' => array(\n\t\t\t'display' => __('Graph Title'),\n\t\t\t'align' => 'left',\n\t\t\t'sort' => 'ASC'\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align' => 'right',\n\t\t\t'sort' => 'ASC'\n\t\t),\n\t\t'agg_graph_id' => array(\n\t\t\t'display' => __('Included in Aggregate'),\n\t\t\t'align' => 'left',\n\t\t\t'sort' => 'ASC'\n\t\t),\n\t\t'height' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align' => 'right',\n\t\t\t'sort' => 'ASC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?action=edit&id=' . get_request_var('id'));\n\n\tif (cacti_sizeof($graph_list) > 0) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\n\t\t\tif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t\t\tform_selectable_cell(filter_value($graph['title_cache'], get_request_var('rfilter')), $graph['local_graph_id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_ecell(get_request_var('rfilter') != '' ? aggregate_format_text($graph['title_cache'], get_request_var('rfilter')) : $graph['title_cache'], $graph['local_graph_id']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(($graph['agg_graph_id'] != '' ? \"<span class='associated'>\" . __('Yes') . '</span>' : \"<span class='notAssociated'>\" . __('No') . '</span>'), $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"4\"><em>' . __('No Graphs Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\t/* put the nav bar on the bottom as well */\n\tprint $nav;\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tform_hidden_box('local_graph_id', get_request_var('id'), '');\n\n\tdraw_actions_dropdown($agg_item_actions);\n\n\tform_end();\n}\n\nfunction aggregate_make_sql_where($sql_where, $items, $field) {\n\tif ($sql_where != '') {\n\t\t$sql_where .= ' AND (';\n\t} else {\n\t\t$sql_where  = 'WHERE (';\n\t}\n\n\t$indentation = 0;\n\t$termcount   = 0;\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach ($items as $i) {\n\t\t\t$i = trim($i);\n\n\t\t\twhile (substr($i, 0, 1) == '(') {\n\t\t\t\t$indentation++;\n\t\t\t\t$termcount = 0;\n\t\t\t\t$sql_where .= '(';\n\t\t\t\t$i = substr($i, 1);\n\t\t\t}\n\n\t\t\t$split = strpos($i, ')');\n\n\t\t\tif ($split !== false) {\n\t\t\t\t$end = trim(substr($i, $split));\n\t\t\t\t$i   = substr($i, 0, $split);\n\t\t\t} else {\n\t\t\t\t$end = '';\n\t\t\t}\n\n\t\t\tif ($i != '') {\n\t\t\t\tif (strtolower($i) == 'and') {\n\t\t\t\t\t$sql_where .= ' AND ';\n\t\t\t\t} elseif (strtolower($i) == 'or') {\n\t\t\t\t\t$sql_where .= ' OR ';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= ($termcount > 0 ? ' OR ' : '') . $field . \" LIKE '%\" . trim($i) . \"%'\";\n\t\t\t\t\t$termcount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($end != '') {\n\t\t\t\twhile (substr($end, 0, 1) == ')') {\n\t\t\t\t\t$indentation--;\n\t\t\t\t\t$termcount = 0;\n\t\t\t\t\t$sql_where .= ')';\n\t\t\t\t\t$end = trim(substr($end, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql_where .= ')';\n\n\treturn trim($sql_where);\n}\n\nfunction aggregate_format_text($text, $filter) {\n\t$items = explode(' ', $filter);\n\t$tags  = array();\n\n\tforeach ($items as $i) {\n\t\t$i = trim($i);\n\t\t$i = str_replace('(', '', $i);\n\t\t$i = str_replace(')', '', $i);\n\n\t\tif (strtolower($i) == 'and' || strtolower($i) == 'or') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (substr_count($text, $i) !== false) {\n\t\t\t$tagno        = rand();\n\t\t\t$tags[$tagno] = $i;\n\t\t\t$text         = str_replace($i, \"<<$tagno>>\", $text);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($tags)) {\n\t\tforeach ($tags as $k => $t) {\n\t\t\t$text = str_replace(\"<<$k>>\", \"<span class='filteredValue'>\" . html_escape($t) . '</span>', $text);\n\t\t}\n\t}\n\n\treturn $text;\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT at.id, at.name\n\t\t\tFROM aggregate_graph_templates AS at\n\t\t\tINNER JOIN aggregate_graphs AS ag\n\t\t\tON ag.aggregate_template_id=at.id\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$templates = $any + $none + $templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'template_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Graphs'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'local_graph_ids' => array(\n\t\t\t\t\t'method'         => 'validate',\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'default'        => ''\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column' => 'title_cache',\n\t\t\t'sort_direction' => 'ASC'\n\t\t),\n\t\t'javascript' => array(\n\t\t\t'global' => '',\n\t\t\t'ready'  => ''\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t$header = __('Aggregate Graphs') . (get_request_var('local_graph_ids') != '' ? __(' [ Custom Graphs List Applied - Clear to Reset ]') : '');\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'aggregate_graphs.php', 'forms', 'sess_agraph');\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction aggregate_graph() {\n\tglobal $actions, $item_rows;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = 'WHERE (gtg.graph_template_id = 0 AND gl.host_id = 0)';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . '(gtg.title_cache LIKE ? OR ag.title_format LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('template_id') == '0') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . '(ag.aggregate_template_id = 0 OR ag.aggregate_template_id IS NULL)';\n\t} elseif (get_request_var('template_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ag.aggregate_template_id= ?';\n\t\t$sql_params[] = get_request_var('template_id');\n\t}\n\n\t$sql = \"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gtg.local_graph_id = ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id = ag.aggregate_template_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $sql_params, 'aggregate_graph');\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc_prepared(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agt.name\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id = gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gl.id = ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id = ag.aggregate_template_id\n\t\t$sql_where\n\t\tAND ag.id IS NOT NULL\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'title_cache' => array(\n\t\t\t'display' => __('Graph Title'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The title for the Aggregate Graphs')\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database identifier for this object')\n\t\t),\n\t\t'name' => array(\n\t\t\t'display' => __('Aggregate Template'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Aggregate Template that this Aggregate Graphs is based upon')\n\t\t),\n\t\t'height' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('aggregate_graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Graphs'), 'page', 'main');\n\n\tform_start('aggregate_graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?filter=' . get_request_var('filter'));\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\t$template_name = html_escape($graph['name']);\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('filter'), 'aggregate_graphs.php?action=edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell((empty($graph['name']) ? '<em>' . __('None') . '</em>' : filter_value($template_name, get_request_var('filter'))), $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Aggregate Graphs Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\t/* remove old graphs */\n\tpurge_old_graphs();\n\n\tform_end();\n}\n\nfunction purge_old_graphs() {\n\t/* workaround to handle purged graphs */\n\t$old_graphs = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs_items AS pagi\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pagi.local_graph_id = gl.id\n\t\tWHERE gl.id IS NULL\n\t\tAND local_graph_id > 0'), 'local_graph_id',  'local_graph_id');\n\n\tif (cacti_sizeof($old_graphs)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_graphs) . ')');\n\t}\n\n\t$old_aggregates = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id = gl.id\n\t\tWHERE gl.id IS NULL\n\t\tAND local_graph_id>0'), 'local_graph_id', 'local_graph_id');\n\n\t$old_agg_ids = array_rekey(db_fetch_assoc('SELECT DISTINCT pag.id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id = gl.id\n\t\tWHERE gl.id IS NULL'), 'id', 'id');\n\n\tif (cacti_sizeof($old_aggregates)) {\n\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')\n\t\t\tAND local_graph_id > 0');\n\n\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')\n\t\t\tAND local_graph_id > 0');\n\n\t\tdb_execute('DELETE FROM aggregate_graphs\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\t}\n\n\tif (cacti_sizeof($old_agg_ids)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id IN (' . implode(',', $old_agg_ids) . ')');\n\t}\n}\n\n"
        },
        {
          "name": "aggregate_templates.php",
          "type": "blob",
          "size": 21.37890625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/data_query.php');\n\n$actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') == 'save') {\n\tif (isset_request_var('id') && get_filter_request_var('id') == 0 && isset_request_var('graph_template_id_prev') && get_filter_request_var('graph_template_id_prev') == 0) {\n\t\tset_request_var('action', 'edit');\n\t}\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\taggregate_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\taggregate_form_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\taggregate_template_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\taggregate_template();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/**\n * aggregate_form_save\tthe save function\n */\nfunction aggregate_form_save() {\n\t/* make sure we are saving aggregate template */\n\tif (!isset_request_var('save_component_template')) {\n\t\theader('Location: aggregate_templates.php?action=edit&id=' . get_nfilter_request_var('id'));\n\n\t\treturn null;\n\t}\n\n\t$save1 = array();\n\n\t/* updating existing template or creating a new one? */\n\tif (isset_request_var('id') && get_request_var('id') > 0) {\n\t\t$is_new      = false;\n\t\t$save1['id'] = get_nfilter_request_var('id');\n\t} else {\n\t\t$is_new      = true;\n\t\t$save1['id'] = 0;\n\t}\n\n\t/* set some defaults for possibly disabled values */\n\tif (!isset_request_var('total')) {\n\t\tset_request_var('total', 0);\n\t}\n\n\tif (!isset_request_var('total_type')) {\n\t\tset_request_var('total_type', 0);\n\t}\n\n\tif (!isset_request_var('order_type')) {\n\t\tset_request_var('order_type', 0);\n\t}\n\n\tif (!isset_request_var('total_prefix')) {\n\t\tset_request_var('total_prefix', '');\n\t}\n\n\t/* populate aggregate template save array and validate posted values*/\n\t$save1['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t$save1['graph_template_id'] = get_filter_request_var('graph_template_id_prev');\n\t$save1['gprint_prefix']     = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t$save1['gprint_format']     = isset_request_var('gprint_format') ? 'on' : '';\n\t$save1['graph_type']        = form_input_validate(get_nfilter_request_var('graph_type'), 'graph_type', '', false, 3);\n\t$save1['total']             = form_input_validate(get_nfilter_request_var('total'), 'total', '', false, 3);\n\t$save1['total_type']        = form_input_validate(get_nfilter_request_var('total_type'), 'total_type', '', false, 3);\n\t$save1['total_prefix']      = form_input_validate(get_nfilter_request_var('total_prefix'), 'total_prefix', '', true, 3);\n\t$save1['order_type']        = form_input_validate(get_nfilter_request_var('order_type'), 'order_type', '', false, 3);\n\t$save1['user_id']           = $_SESSION[SESS_USER_ID];\n\n\t/* form validation failed */\n\tif (is_error_message()) {\n\t\theader('Location: aggregate_templates.php?action=edit&id=' . get_nfilter_request_var('id'));\n\n\t\treturn null;\n\t}\n\n\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $save1['id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t/* do a quick comparison to see if anything changed */\n\tif ($is_new == false) {\n\t\t$old = db_fetch_row_prepared(\n\t\t\t'SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray($save1['id'])\n\t\t);\n\n\t\t$save_me = 0;\n\n\t\t$save_me += ($old['name']          != $save1['name']);\n\t\t$save_me += ($old['gprint_prefix'] != $save1['gprint_prefix']);\n\t\t$save_me += ($old['gprint_format'] != $save1['gprint_format']);\n\t\t$save_me += ($old['graph_type']    != $save1['graph_type']);\n\t\t$save_me += ($old['total']         != $save1['total']);\n\t\t$save_me += ($old['total_type']    != $save1['total_type']);\n\t\t$save_me += ($old['total_prefix']  != $save1['total_prefix']);\n\t\t$save_me += ($old['order_type']    != $save1['order_type']);\n\t} else {\n\t\t$save_me = 1;\n\t}\n\n\tif ($save_me) {\n\t\t$id = sql_save($save1, 'aggregate_graph_templates', 'id');\n\n\t\t/* update children of the template */\n\t\tdb_execute_prepared(\n\t\t\t\"UPDATE aggregate_graphs\n\t\t\tSET gprint_prefix = ?, gprint_format = ?, graph_type = ?, total = ?, total_prefix = ?, order_type = ?\n\t\t\tWHERE aggregate_template_id = ?\n\t\t\tAND template_propogation='on'\",\n\t\t\tarray(\n\t\t\t\t$save1['gprint_prefix'], $save1['gprint_format'], $save1['graph_type'],\n\t\t\t\t$save1['total'], $save1['total_prefix'],  $save1['order_type'], $id\n\t\t\t)\n\t\t);\n\n\t\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\t} else {\n\t\t$id = $save1['id'];\n\t}\n\n\tif (!$id) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_templates.php?action=edit&id=' . get_nfilter_request_var('id'));\n\n\t\treturn null;\n\t}\n\n\t/* save extra graph parameters */\n\t/* validate posted graph params */\n\t$params_new                          = aggregate_validate_graph_params($_POST, true);\n\t$params_new['aggregate_template_id'] = $id;\n\n\t/* compare new graph param values with existing in DB.\n\t * We need to know if there were changes so we only\n\t * rebuild existing graphs if needed. */\n\t$params_changed = false;\n\n\t$params_old = db_fetch_row_prepared(\n\t\t'SELECT *\n\t\tFROM aggregate_graph_templates_graph\n\t\tWHERE aggregate_template_id = ?',\n\t\tarray($id)\n\t);\n\n\tif (!empty($params_old)) {\n\t\tforeach ($params_old as $field => $value_old) {\n\t\t\tif (isset($params_new[$field]) && $params_new[$field] != $value_old) {\n\t\t\t\t$params_changed = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$params_changed = true;\n\t}\n\n\t/* save only if all posted form fields passed validation */\n\tif ($params_changed && !is_error_message()) {\n\t\tsql_save($params_new, 'aggregate_graph_templates_graph', 'aggregate_template_id', false);\n\t}\n\n\t/* save the template items now */\n\t/* get existing item ids and sequences from graph template */\n\t$graph_templates_items = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE local_graph_id = 0\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($save1['graph_template_id'])\n\t\t),\n\t\t'id', array('sequence')\n\t);\n\n\t/* get existing aggregate template items */\n\t$aggregate_template_items_old = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tWHERE aggregate_template_id = ?', array($id)),\n\t\t'graph_templates_item_id',\n\t\tarray('sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t);\n\n\t/* update graph template item values with posted values */\n\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t$items_changed = false;\n\t$items_to_save = array();\n\n\tforeach ($graph_templates_items as $item_id => $data) {\n\t\t$item_new                            = array();\n\t\t$item_new['aggregate_template_id']   = $id;\n\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template'] : 0;\n\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on' : '';\n\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on' : '';\n\t\t$item_new['sequence']       = isset($data['sequence']) ? $data['sequence'] : 0;\n\n\t\t/* compare with old item to see if we need to push out. */\n\t\tif (!isset($aggregate_template_items_old[$item_id])) {\n\t\t\t/* this item does not yet exist */\n\t\t\t$items_changed = true;\n\t\t} else {\n\t\t\t// fill in missing fields with db values\n\t\t\t$item_new = array_merge($aggregate_template_items_old[$item_id], $item_new);\n\t\t\t/* compare data from user to data from DB */\n\t\t\tforeach ($data as $field => $new_value) {\n\t\t\t\tif ($aggregate_template_items_old[$item_id][$field] != $new_value) {\n\t\t\t\t\t$items_changed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$items_to_save[] = $item_new;\n\t}\n\n\tif ($items_changed) {\n\t\taggregate_graph_items_save($items_to_save, 'aggregate_graph_templates_item');\n\t}\n\n\tif ($save_me || $params_changed || $items_changed) {\n\t\tpush_out_aggregates($id);\n\t}\n\n\traise_message(1);\n\n\theader('Location: aggregate_templates.php?action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n}\n\nfunction aggregate_get_graph_items($table, $id) {\n}\n\n/**\n * aggregate_form_actions - the action function\n */\nfunction aggregate_form_actions() {\n\tglobal $actions, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_item WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_graph WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute(\"UPDATE aggregate_graphs SET aggregate_template_id=0, template_propogation='' WHERE \" . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: aggregate_templates.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM aggregate_graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'aggregate_templates.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Aggregate Graph Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Aggregate Graph Templates.'),\n\t\t\t\t\t'scont'    => __('Delete Aggregate Graph Template'),\n\t\t\t\t\t'pcont'    => __('Delete Aggregate Graph Templates')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\n/**\n * aggregate_template_edit\tedit the color template\n */\nfunction aggregate_template_edit() {\n\tglobal $image_types, $struct_aggregate_template;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$template = db_fetch_row_prepared(\n\t\t\t'SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\t$header_label = __esc('Aggregate Template [edit: %s]', $template['name']);\n\t} else {\n\t\t$header_label = __('Aggregate Template [new]');\n\t}\n\n\t/* populate the graph template id if it's set */\n\tif (isset_request_var('graph_template_id') && !isset($template)) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\t\t$template['graph_template_id'] = get_nfilter_request_var('graph_template_id');\n\t\t$template['id']                = 0;\n\t}\n\n\tform_start('aggregate_templates.php', 'template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t$helper_string = '|host_description|';\n\n\tif (isset($template)) {\n\t\t$data_query = db_fetch_cell_prepared(\n\t\t\t'SELECT snmp_query_id\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE graph_template_id = ?',\n\t\t\tarray($template['graph_template_id'])\n\t\t);\n\n\t\tif ($data_query > 0) {\n\t\t\t$data_query_info = get_data_query_array($data_query);\n\n\t\t\tforeach ($data_query_info['fields'] as $field_name => $field_array) {\n\t\t\t\tif ($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t$helper_string .= ($helper_string != '' ? ', ' : '') . '|query_' . $field_name . '|';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Append the helper string\n\t$struct_aggregate_template['suggestions'] = array(\n\t\t'method'        => 'other',\n\t\t'friendly_name' => __('Prefix Replacement Values'),\n\t\t'description'   => __('You may use these replacement values for the Prefix in the Aggregate Graph'),\n\t\t'value'         => $helper_string\n\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($struct_aggregate_template, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (isset($template)) {\n\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $template);\n\n\t\t/* Draw Graph Configuration form, so user can override some parameters from graph template */\n\t\tdraw_aggregate_template_graph_config($template['id'], $template['graph_template_id']);\n\t}\n\n\tform_hidden_box('id', (isset($template['id']) ? $template['id'] : '0'), '0');\n\tform_hidden_box('save_component_template', '1', '');\n\tform_save_button('aggregate_templates.php', 'return', 'id');\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tif ($('#id').val() == 0) {\n\t\t\t\t$('[id^=\"agg_total_\"]').prop('checked', true);\n\t\t\t}\n\n\t\t\tvar showField = $('#graph_template_id').val() != 0;\n\t\t\ttoggleField({\n\t\t\t\tname: showField,\n\t\t\t\tspacer1: showField,\n\t\t\t\tgprint_prefix: showField,\n\t\t\t\tgprint_format: showField,\n\t\t\t\tgraph_type: showField,\n\t\t\t\ttotal: showField,\n\t\t\t\ttotal_type: showField,\n\t\t\t\ttotal_prefix: showField,\n\t\t\t\torder_type: showField,\n\t\t\t});\n\n\t\t\tif ($('#graph_template_id').val() == 0) {\n\t\t\t\t$('#graph_template_id').change(function() {\n\t\t\t\t\t$('#template_edit').submit();\n\t\t\t\t});\n\n\t\t\t\t$('#save_component_template').parent().next('table').css('display', 'none');\n\t\t\t} else {\n\t\t\t\t$('#graph_template_id').prop('disabled', true);\n\t\t\t\tif ($('#graph_template_id').selectmenu('instance') !== undefined) {\n\t\t\t\t\t$('#graph_template_id').selectmenu('disable');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$('#total').change(function() {\n\t\t\t\tchangeTotals();\n\t\t\t});\n\n\t\t\t$('#total_type').change(function() {\n\t\t\t\tchangeTotalsType();\n\t\t\t});\n\n\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t} else {\n\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t}\n\n\t\t\t\tif ($('#' + id).is(':checked')) {\n\t\t\t\t\t$('#' + altId).prop('checked', false);\n\t\t\t\t} else {\n\t\t\t\t\t$('#' + altId).prop('checked', true);\n\t\t\t\t}\n\n\t\t\t\tupdateSaveButton();\n\t\t\t});\n\n\t\t\tchangeTotals();\n\n\t\t\tupdateSaveButton();\n\t\t});\n\n\t\tfunction updateSaveButton() {\n\t\t\tif ($('input[id^=\"agg_total\"]').is(':checked')) {\n\t\t\t\t$('#submit').prop('disabled', false);\n\n\t\t\t\tif ($('#submit').button('instance')) {\n\t\t\t\t\t$('#submit').button('enable');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$('#submit').prop('disabled', true);\n\n\t\t\t\tif ($('#submit').button('instance')) {\n\t\t\t\t\t$('#submit').button('disable');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction changeTotals() {\n\t\t\tvar showField = $('#total').val() == '<?php print AGGREGATE_TOTAL_NONE; ?>';\n\n\t\t\ttoggleField({\n\t\t\t\ttotal_type: showField,\n\t\t\t\ttotal_prefix: showField,\n\t\t\t\torder_type: showField,\n\t\t\t});\n\n\t\t\tchangeTotalsType();\n\t\t}\n\n\t\tfunction changeTotalsType() {\n\t\t\tif ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR; ?>) {\n\t\t\t\tif ($('#total_prefix').val() == '' && $('#id').val() == 0) {\n\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('Total'); ?>');\n\t\t\t\t}\n\t\t\t} else if ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL; ?>) {\n\t\t\t\tif ($('#total_prefix').val() == '' && $('#id').val() == 0) {\n\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('All Items'); ?>');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>\n<?php\n}\n\n/**\n * aggregate_template\n */\nfunction aggregate_template() {\n\tglobal $actions, $item_rows, $config;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Aggregate Templates'), 'aggregate_templates.php', 'forms', 'sess_agg_tmp', 'aggregate_templates.php?action=edit');\n\n\t$pageFilter->rows_label = __('Templates');\n\t$pageFilter->set_sort_array('pgt.name', 'ASC');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (pgt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR gt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . 'gt.graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON pgt.graph_template_id = gt.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT pgt.*, gt.name AS graph_template_name\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON pgt.graph_template_id = gt.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Templates'), 'page', 'main');\n\n\tform_start('aggregate_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'pgt.name' => array(\n\t\t\t'display' => __('Template Title'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Aggregate Templates that are in use can not be Deleted.  In use is defined as being referenced by an Aggregate.')\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'graph_template_name' => array(\n\t\t\t'display' => __('Graph Template'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'aggregate_templates.php?action=edit&id=' . $template['id'] . '&page=1'), $template['id']);\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $template['id'], '', 'right');\n\n\t\t\t$url = 'aggregate_graphs.php?reset=true&template_id=' . $template['id'];\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($template['graphs'], '-1'), '', $url), $template['id'], '', 'right');\n\n\t\t\tform_selectable_cell(filter_value($template['graph_template_name'], get_request_var('filter')), $template['id']);\n\n\t\t\tform_checkbox_cell($template['graph_template_name'], $template['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Aggregate Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL = 'aggregate_templates.php';\n\t\t\tstrURL += '?rows=' + $('#rows').val();\n\t\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\t\tstrURL += '&filter=' + $('#filter').val();\n\t\t\tloadUrl({\n\t\t\t\turl: strURL\n\t\t\t})\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'aggregate_templates.php?clear=1';\n\t\t\tloadUrl({\n\t\t\t\turl: strURL\n\t\t\t})\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#forms').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t</script>\n<?php\n}\n"
        },
        {
          "name": "auth_2fa.php",
          "type": "blob",
          "size": 5.984375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude(__DIR__ . '/include/global.php');\n\n/* set default action */\nset_default_action();\n\nif (!isset($_SESSION[SESS_USER_ID])) {\n\theader('Location: logout.php');\n\n\texit;\n}\n\n$user = db_fetch_row_prepared('SELECT id, username, tfa_enabled, tfa_secret, login_opts\n\tFROM user_auth\n\tWHERE id = ?',\n\tarray($_SESSION[SESS_USER_ID]));\n\n$message = '';\n$tfaMins = intval(read_config_option('secpass_mfatime'));\n\nif ($tfaMins <= 0) {\n\t$tfaMins = 60;\n}\n\n$tfaBase = intval(floor((time() / (60 * $tfaMins))));\n$tfaTime = time() - $tfaBase;\n\n// See if we have no 2FA time set, and if so, lets try and get it from the cookie\nif (empty($_SESSION[SESS_USER_2FA]) && isset($_COOKIE[session_name() . '_otp'])) {\n\tlist($tfaCookieTime, $tfaCookeHash) = explode(':', $_COOKIE[session_name() . '_otp']);\n\n\tif ($tfaCookieTime && $tfaCookeHash === hash_hmac('sha1', $user['username'] . ':' . $tfaMins . ':' . $tfaCookieTime . ':' . $_SERVER['HTTP_USER_AGENT'], $user['tfa_secret'])) {\n\t\t$_SESSION[SESS_USER_2FA] = $tfaCookieTime;\n\t}\n}\n\n// Is the current session 2FA time expired?\nif (!empty($_SESSION[SESS_USER_2FA]) && $_SESSION[SESS_USER_2FA] < $tfaTime) {\n\t// Yes, lets unset the session variable and recheck\n\tunset($_SESSION[SESS_USER_2FA]);\n}\n\n// Are we being asked to login with a 2FA token?\nif (get_nfilter_request_var('action') == 'login_2fa') {\n\t/* Auth token from Form */\n\t$token = get_nfilter_request_var('token');\n\n\tif (cacti_sizeof($user)) {\n\t\tif (empty($user['tfa_enabled'])) {\n\t\t\tcacti_log(\"DEBUG: User '\" . $user['username'] . \"' attempting to verify 2fa token, but not 2fa enabled\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t$_SESSION[SESS_USER_2FA] = true;\n\t\t} else {\n\t\t\tcacti_log(\"DEBUG: User '\" . $user['username'] . \"' attempting to verify 2fa token\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\t\t\t$g = new \\Sonata\\GoogleAuthenticator\\GoogleAuthenticator();\n\n\t\t\tif ($g->checkCode($user['tfa_secret'],  $token)) {\n\t\t\t\t$_SESSION[SESS_USER_2FA] = time();\n\n\t\t\t\t// About using the user agent: It's easy to fake it, but it increases the barrier for stealing and reusing cookies nevertheless\n\t\t\t\t// and it doesn't do any harm (except that it's invalid after a browser upgrade, but that may be even intended)\n\t\t\t\t$cookie = $_SESSION[SESS_USER_2FA] . ':' . hash_hmac('sha1', $user['username'] . ':' . $tfaMins . ':' . $_SESSION[SESS_USER_2FA] . ':' . $_SERVER['HTTP_USER_AGENT'], $user['tfa_secret']);\n\n\t\t\t\t$cookie_lifetime = read_config_option('secpass_2fatime') * 60;\n\n\t\t\t\tcacti_cookie_set(session_name() . '_otp', $cookie, time() + ($cookie_lifetime));\n\t\t\t} else {\n\t\t\t\t$_SESSION[SESS_USER_2FA] = false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$_SESSION[SESS_USER_2FA] = time();\n\t}\n\n\t/* Process the user  */\n\tif ($_SESSION[SESS_USER_2FA]) {\n\t\tif (isset($user['tfa_enabled'])) {\n\t\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' 2FA Authenticated\", false, 'AUTH');\n\n\t\t\t$client_addr = get_client_addr('');\n\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t(username, user_id, result, ip, time)\n\t\t\t\tVALUES (?, ?, 2, ?, NOW())',\n\t\t\t\tarray($user['username'], $user['id'], $client_addr));\n\t\t}\n\t} else {\n\t\t/* BAD token */\n\t\tcacti_log(\"DEBUG: User '\" . $user['username'] . \"' failed to verify 2fa token\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, 0, 3, ?, NOW())',\n\t\t\tarray($user['username'], get_client_addr('')));\n\n\t\t$message = __('Failed to verify token');\n\t}\n}\n\nif (empty($user['tfa_enabled'])) {\n\t$_SESSION[SESS_USER_2FA] = true;\n}\n\nif (!empty($_SESSION[SESS_USER_2FA])) {\n\tauth_login_redirect($user['login_opts']);\n\n\texit;\n}\n\nif (api_plugin_hook_function('custom_2fa_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n\n$selectedTheme = get_selected_theme();\n\nhtml_auth_header('login_2fa', __('2nd Factor Authentication'), __('2FA Verification'), __('Enter your token'),\n\tarray(\n\t\t'username' => $user['username'],\n\t\t'action'   => get_nfilter_request_var('action')\n\t)\n);\n?>\n<tr>\n\t<td>\n\t\t<label for='login_token'><?php print __('Token');?></label>\n\t</td>\n\t<td>\n\t\t<input type='textbox' class='ui-state-default ui-corner-all' id='login_token' name='token' placeholder='<?php print __('Token');?>'>\n\t</td>\n</tr>\n<tr>\n\t<td>&nbsp;</td>\n\t<td>\n\t\t<span class='textError'><?php print $message; ?></span>\n\t</td>\n</tr>\n<tr>\n\t<td>&nbsp;</td>\n\t<td>\n\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Verify');?>'>\n\t</td>\n</tr>\n<?php\n\thtml_auth_footer('login_2fa', $message, \"\n\t\t<script>\n\t\t\t$(function() {\n\t\t\t\t$('#login_token').focus();\n\t\t\t});\n\t\t</script>\n\t\");\n"
        },
        {
          "name": "auth_changepassword.php",
          "type": "blob",
          "size": 13.9013671875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/global.php');\n\nset_default_action();\n\n$action = get_request_var('action');\n\nswitch ($action) {\n\tcase 'checkpass':\n\t\t$error = secpass_check_pass(get_nfilter_request_var('password'));\n\n\t\tif ($error != '') {\n\t\t\tprint $error;\n\t\t} else {\n\t\t\tprint 'ok';\n\t\t}\n\n\t\texit;\n\n\t\tbreak;\n\tdefault:\n\t\t// If the user is not logged in, redirect them to the login page\n\t\tif (!isset($_SESSION[SESS_USER_ID])) {\n\t\t\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t\t\theader('Location: ' . $_SERVER['HTTP_REFERER']);\n\t\t\t} else {\n\t\t\t\theader('Location: index.php');\n\t\t\t}\n\n\t\t\theader('Location: index.php');\n\n\t\t\texit;\n\t\t}\n}\n\nif (isset($_SERVER['HTTP_REFERER'])) {\n\t$return = $_SERVER['HTTP_REFERER'];\n\n\tif (basename($return) != 'auth_changepassword.php') {\n\t\tif (strpos($return, '/plugins/') !== false) {\n\t\t\t$parts  = explode('/plugins/', $return);\n\t\t\t$return = CACTI_PATH_URL . 'plugins/' . $parts[1];\n\t\t} else {\n\t\t\t$return = CACTI_PATH_URL . basename($return);\n\t\t}\n\n\t\t$_SESSION['acp_return'] = $return;\n\t} else {\n\t\tif (isset($_SESSION['acp_return'])) {\n\t\t\t$return = $_SESSION['acp_return'];\n\t\t} else {\n\t\t\t$return = CACTI_PATH_URL . 'index.php';\n\t\t}\n\t}\n} else {\n\t$return = CACTI_PATH_URL . 'index.php';\n}\n\n$user = db_fetch_row_prepared('SELECT *\n\tFROM user_auth\n\tWHERE id = ?',\n\tarray($_SESSION[SESS_USER_ID]));\n\n$version = CACTI_VERSION;\n\nif (!cacti_sizeof($user) || $user['realm'] != 0) {\n\tif (!cacti_sizeof($user)) {\n\t\traise_message(44);\n\t} else {\n\t\traise_message('nodomainpassword');\n\t}\n\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\theader('Location: ' . $_SERVER['HTTP_REFERER']);\n\t} else {\n\t\theader('Location: index.php');\n\t}\n\n\texit;\n}\n\nif ($user['password_change'] != 'on') {\n\traise_message('nopassword');\n\n\t/* destroy session information */\n\tkill_session_var(SESS_USER_ID);\n\tcacti_cookie_logout();\n\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\theader('Location: ' . $_SERVER['HTTP_REFERER']);\n\t} else {\n\t\theader('Location: index.php');\n\t}\n\n\texit;\n}\n\n/* find out if we are logged in as a 'guest user' or not, if we are redirect away from password change */\nif (cacti_sizeof($user) && $user['id'] === get_guest_account()) {\n\theader('Location: graph_view.php');\n\n\texit;\n}\n\n/* default to !bad_password */\n$bad_password = false;\n$errorMessage = '';\n\nswitch ($action) {\n\tcase 'changepassword':\n\t\t// Get current user\n\t\t$user_id = intval($_SESSION[SESS_USER_ID]);\n\n\t\t// Get passwords entered for change\n\t\t$password         = get_nfilter_request_var('password');\n\t\t$password_confirm = get_nfilter_request_var('password_confirm');\n\n\t\t// Get current password as entered\n\t\t$current_password = get_nfilter_request_var('current_password');\n\n\t\t// Secpass checking\n\t\t$error = secpass_check_pass($password);\n\n\t\t// Check new password passes basic checks\n\t\tif ($error != 'ok') {\n\t\t\t$bad_password = true;\n\t\t\t$errorMessage = \"<span class='badpassword_message'>$error</span>\";\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Check user password history\n\t\tif (!secpass_check_history($user_id, $password)) {\n\t\t\t$bad_password = true;\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('You cannot use a previously entered password!') . '</span>';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Password and Confirmed password checks\n\t\tif ($password !== $password_confirm) {\n\t\t\t$bad_password = true;\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Your new passwords do not match, please retype.') . '</span>';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Compare current password with stored password\n\t\tif ((!empty($user['password']) || !empty($current_password)) && !compat_password_verify($current_password, $user['password'])) {\n\t\t\t$bad_password = true;\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Your current password is not correct. Please try again.') . '</span>';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Check new password does not match stored password\n\t\tif (compat_password_verify($password, $user['password'])) {\n\t\t\t$bad_password = true;\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Your new password cannot be the same as the old password. Please try again.') . '</span>';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// If password isn't blank, password change is good to go\n\t\tif ($password != '') {\n\t\t\tif (read_config_option('secpass_expirepass') > 0) {\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET lastchange = ?\n\t\t\t\tWHERE id = ?\n\t\t\t\tAND realm = 0\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray(time(), $user_id));\n\t\t\t}\n\n\t\t\t$history = intval(read_config_option('secpass_history'));\n\n\t\t\tif ($history > 0) {\n\t\t\t\t$h = db_fetch_row_prepared(\"SELECT password, password_history\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?\n\t\t\t\tAND realm = 0\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($user_id));\n\n\t\t\t\t$op = $h['password'];\n\t\t\t\t$h  = explode('|', $h['password_history']);\n\n\t\t\t\twhile (cacti_count($h) > $history - 1) {\n\t\t\t\t\tarray_shift($h);\n\t\t\t\t}\n\n\t\t\t\t$h[] = $op;\n\t\t\t\t$h   = implode('|', $h);\n\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET password_history = ?\n\t\t\t\tWHERE id = ?\n\t\t\t\tAND realm = 0\n\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($h, $user_id));\n\t\t\t}\n\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, result, time, ip)\n\t\t\tVALUES (?, 3, NOW(), ?)',\n\t\t\t\tarray($user['username'], get_client_addr()));\n\n\t\t\tdb_check_password_length();\n\n\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET must_change_password = '', password = ?\n\t\t\tWHERE id = ?\",\n\t\t\t\tarray(compat_password_hash($password,PASSWORD_DEFAULT), $user_id));\n\n\t\t\t// Clear the auth cache for the user\n\t\t\t$token = '';\n\n\t\t\tif (isset($_SERVER['HTTP_COOKIE']) && strpos($_SERVER['HTTP_COOKIE'], 'cacti_remembers') !== false) {\n\t\t\t\t$parts = explode(';', $_SERVER['HTTP_COOKIE']);\n\n\t\t\t\tforeach ($parts as $p) {\n\t\t\t\t\tif (strpos($p, 'cacti_remembers') !== false) {\n\t\t\t\t\t\t$pparts = explode('%2C', $p);\n\n\t\t\t\t\t\tif (isset($pparts[1])) {\n\t\t\t\t\t\t\t$token = $pparts[1];\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($token != '') {\n\t\t\t\t$sql_where = 'AND token != ' . db_qstr(hash('sha512', $token, false));\n\t\t\t} else {\n\t\t\t\t$sql_where = '';\n\t\t\t}\n\n\t\t\tdb_execute_prepared(\"DELETE FROM user_auth_cache\n\t\t\tWHERE user_id = ?\n\t\t\t$sql_where\",\n\t\t\t\tarray($_SESSION[SESS_USER_ID]));\n\n\t\t\tkill_session_var(SESS_CHANGE_PASSWORD);\n\n\t\t\traise_message('password_success');\n\n\t\t\t/* ok, at the point the user has been successfully authenticated; so we must decide what to do next */\n\n\t\t\t/* if no console permissions show graphs otherwise, pay attention to user setting */\n\t\t\t$realm_id    = $user_auth_realm_filenames['index.php'];\n\t\t\t$has_console = db_fetch_cell_prepared('SELECT realm_id\n\t\t\tFROM user_auth_realm\n\t\t\tWHERE user_id = ? AND realm_id = ?',\n\t\t\t\tarray($user_id, $realm_id));\n\n\t\t\tif (basename(get_nfilter_request_var('ref')) == 'auth_changepassword.php' || basename(get_nfilter_request_var('ref')) == '') {\n\t\t\t\tif ($has_console) {\n\t\t\t\t\tset_request_var('ref', 'index.php');\n\t\t\t\t} else {\n\t\t\t\t\tset_request_var('ref', 'graph_view.php');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($has_console)) {\n\t\t\t\tswitch ($user['login_opts']) {\n\t\t\t\t\tcase '1': /* referer */\n\t\t\t\t\t\theader('Location: ' . sanitize_uri(get_nfilter_request_var('ref')));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '2': /* default console page */\n\t\t\t\t\t\theader('Location: index.php');\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3': /* default graph page */\n\t\t\t\t\t\theader('Location: graph_view.php');\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tapi_plugin_hook_function('login_options_navigate', $user['login_opts']);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\theader('Location: graph_view.php');\n\t\t\t}\n\n\t\t\texit;\n\t\t} else {\n\t\t\t$bad_password = true;\n\t\t}\n\n\t\tbreak;\n}\n\nif (api_plugin_hook_function('custom_password', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\texit;\n}\n\nif (get_request_var('action') == 'force') {\n\t$errorMessage = \"<span class='loginErrors'>*** \" . __('Forced password change') . ' ***</span>';\n}\n\n/* Create tooltip for password complexity */\n$secpass_tooltip = \"<span style='font-weight:normal;'>\" . __('Password requirements include:') . '</span><br>';\n$secpass_body    = '';\n\nif (read_config_option('secpass_minlen') > 0) {\n\t$secpass_body .= __('Must be at least %d characters in length', read_config_option('secpass_minlen'));\n}\n\nif (read_config_option('secpass_reqmixcase') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include mixed case');\n}\n\nif (read_config_option('secpass_reqnum') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include at least 1 number');\n}\n\nif (read_config_option('secpass_reqspec') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include at least 1 special character');\n}\n\nif (read_config_option('secpass_history') != '0') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Cannot be reused for %d password changes', read_config_option('secpass_history') + 1);\n}\n\n$secpass_tooltip .= $secpass_body;\n\n$selectedTheme = get_selected_theme();\n\n$skip_current = (empty($user['password']));\n\nif (isset_request_var('ref')) {\n\t$ref_parts   = parse_url(get_nfilter_request_var('ref'));\n\t$valid       = true;\n\n\tif (isset($ref_parts['user']) || isset($ref_parts['pass'])) {\n\t\t$valid = false;\n\t} elseif (!isset($ref_parts['host'])) {\n\t\t$value = true;\n\t} elseif (isset($ref_parts['host'])) {\n\t\t$server_addr = $_SERVER['SERVER_ADDR'];\n\t\tif (!filter_var($_SERVER['SERVER_NAME'], FILTER_VALIDATE_IP)) {\n\t\t\t$server_info = dns_get_record($_SERVER['SERVER_NAME'], DNS_ANY);\n\t\t\t$server_ref  = gethostbyname($ref_parts['host']);\n\n\t\t\tif ($server_ref != $server_addr) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\n\t\t\tif (!$valid && cacti_sizeof($server_info)) {\n\t\t\t\tforeach($server_info as $record) {\n\t\t\t\t\tif (isset($record['host']) && $record['host'] == $server_ref) {\n\t\t\t\t\t\t$valid = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} elseif (isset($record['target']) && $record['target'] == $server_ref) {\n\t\t\t\t\t\t$valid = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} elseif (isset($record['ip']) && $record['ip'] == $server_addr) {\n\t\t\t\t\t\t$valid = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$server_ip   = gethostbyname($_SERVER['SERVER_NAME']);\n\t\t\t$server_ref  = gethostbyname($ref_parts['host']);\n\t\t\tif ($server_ip == $server_ref) {\n\t\t\t\t$valid = true;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$valid = false;\n\t}\n\n\tif (!$valid) {\n\t\tcacti_log('WARNING: User attempted to access Cacti from unknown URL', false, 'AUTH');\n\n\t\traise_message('problems_with_page', __('There are problems with the Change Password page.  Contact your Cacti administrator right away.'), MESSAGE_LEVEL_ERROR);\n\t\theader('Location:index.php');\n\t\texit;\n\t}\n}\n\nif ($skip_current) {\n\t$title_message = __('Please enter your current password and your new<br>Cacti password.');\n} else {\n\t$title_message = __('Please enter your new Cacti password.');\n}\n\nhtml_auth_header('change_password', __('Change Password'), __('Change Password'), $title_message);\n?>\n\t<tr style='display:none'>\n\t\t<td>\n\t\t\t<input type='hidden' name='action' value='changepassword'>\n\t\t\t<input type='hidden' name='ref' value='<?php print html_escape(get_request_var('ref')); ?>'>\n\t\t\t<input type='hidden' name='name' value='<?php print isset($user['username']) ? html_escape($user['username']) : '';?>'>\n\t\t\t<input type='text'><input type='password'></td>\n\t\t</td>\n\t</tr>\n\t<tr>\n<?php if ($skip_current) { ?>\n\t\t<td><?php print __('Username');?></td>\n\t\t<td class='nowrap'><input type='hidden' id='current' name='current_password' value=''><?php print $user['username'];?></td>\n<?php } else { ?>\n\t\t<td><?php print __('Current password');?></td>\n\t\t<td class='nowrap'><input type='password' class='ui-state-default ui-corner-all' id='current' name='current_password' autocomplete='off' size='15' maxlength='25' placeholder='********'></td>\n<?php } ?>\n\t</tr>\n\t<tr>\n\t\t<td><?php print __('New password');?></td>\n\t\t<td class='nowrap'><input type='password' class='ui-state-default ui-corner-all' id='password' name='password' autocomplete='off' size='15' maxlength='25' placeholder='********'><?php print display_tooltip($secpass_tooltip);?></td>\n\t</tr>\n\t<tr>\n\t\t<td><?php print __('Confirm password');?></td>\n\t\t<td class='nowrap'><input type='password' class='ui-state-default ui-corner-all' id='password_confirm' name='password_confirm' autocomplete='off' size='15' maxlength='25' placeholder='********'></td>\n\t</tr>\n\t<tr>\n\t\t<td colspan='2' class='nowrap'><input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Save'); ?>'>\n\t\t\t<?php print $user['must_change_password'] != 'on' ? \"<input type='button' class='ui-button ui-corner-all ui-widget' onClick='document.location=\\\"$return\\\"' value='\".  __esc('Return') . \"'>\":'';?>\n\t\t</td>\n\t</tr>\n<?php\n$secpass_minlen = read_config_option('secpass_minlen');\n\nhtml_auth_footer('change_password', $errorMessage, \"\n\t<script type='text/javascript'>\n\tvar password_change = $('#password_change').is(':checked');\n\n\t$(function() {\n\t\t$('#current').focus();\n\n\t\t/* clear passwords */\n\t\t$('#password').val('');\n\t\t$('#password_confirm').val('');\n\t});\n\t</script>\");\n"
        },
        {
          "name": "auth_login.php",
          "type": "blob",
          "size": 13.890625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include ldap support */\ninclude_once(__DIR__ . '/lib/ldap.php');\n\n/* set default action */\nset_default_action();\n\n/**\n * get the username from the post variable\n * For all but basic, this means that two post variables must be\n * set.  Additionally, for basic authentication verify the user,\n * and if not valid generate a fatal error.\n */\n$username = auth_get_username(); // Get the username from either basic auth or the login form\n\n/* initialize some variables */\n$user          = array();                             // An array that will include all user details\n$user_enabled  = true;                                // A variable to let plugins know that the user is enabled\n$guest_user    = false;                               // Indicates the Guest account is being used\n$realm         = 0;                                   // The compensated realm used for template and user validation\n$frv_realm     = get_nfilter_request_var('realm', 0); // The dropdown value for realm\n$auth_method   = read_config_option('auth_method');   // The authentication method for Cacti\n$error         = false;                               // Global variable, will be true if any errors occur\n$error_msg     = '';                                  // The errors message in case there was a login error\n\n/* global variables for exception handling */\nglobal $error, $error_msg;\n\nif (get_nfilter_request_var('action') == 'login' || $auth_method == AUTH_METHOD_BASIC) {\n\tif ($auth_method > AUTH_METHOD_BASIC && $frv_realm <= 1) {\n\t\t// User picked 'local' from dropdown;\n\t\t$auth_method = AUTH_METHOD_CACTI;\n\t} else {\n\t\t$auth_method = read_config_option('auth_method');\n\t}\n\n\t// Compensate as the dropdown for LDAP is off by one\n\tif ($frv_realm == 2) {\n\t\t$realm = 3;\n\t} elseif ($auth_method == AUTH_METHOD_BASIC) {\n\t\t$realm = $auth_method;\n\t} else {\n\t\t$realm = $frv_realm;\n\t}\n\n\tcacti_log(\"DEBUG: User '\" . $username . \"' attempting to login with realm \" . $frv_realm . ', using method ' . $auth_method, false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\tswitch ($auth_method) {\n\t\tcase AUTH_METHOD_NONE: // No authentication, should not be reachable\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Cacti no longer supports No Authentication mode. Please contact your System Administrator.');\n\t\t\tcacti_log('FATAL: No authentication attempted and not supported.', false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t\tcase AUTH_METHOD_CACTI: // Local authentication\n\t\t\tcacti_log(\"DEBUG: Local User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = local_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase AUTH_METHOD_BASIC: // Basic authentication\n\t\t\tcacti_log(\"DEBUG: Basic Auth User '\" . $username . \"' attempting to login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = basic_auth_login_process($username);\n\n\t\t\tbreak;\n\t\tcase AUTH_METHOD_LDAP: // LDAP Authentication\n\t\tcase AUTH_METHOD_DOMAIN: // LDAP Domains login\n\t\t\tcacti_log(\"DEBUG: Domains User '\" . $username . \"' to attempt login.\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t$user = domains_login_process($username);\n\n\t\t\tbreak;\n\n\t\tdefault: // Login Realm not determined\n\t\t\t$error     = true;\n\t\t\t$error_msg = __esc('Unable to determine user Login Realm or Domain. Please contact your System Administrator.');\n\n\t\t\tcacti_log(\"LOGIN FAILED: User '\" . $username . \"' Unable to determine Login Realm.  Exiting.\", false, 'AUTH');\n\n\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\t}\n\n\t/* Create user from template if available */\n\tif (!$error && !cacti_sizeof($user) && get_template_account($username) > 0 && $username != '') {\n\t\t$user = auth_login_create_user_from_template($username, $realm);\n\t}\n\n\t/* Guest account checking - Not for builtin */\n\tif (!$error && !cacti_sizeof($user) && get_guest_account() > 0) {\n\t\t/* Locate guest user record */\n\t\t$user = db_fetch_row_prepared(\n\t\t\t'SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_guest_account())\n\t\t);\n\n\t\tif ($user) {\n\t\t\tcacti_log(\"LOGIN: Authenticated user '\" . $username . \"' using guest account '\" . $user['username'] . \"'\", false, 'AUTH');\n\n\t\t\tif ($username != '' && get_template_account($username) == 0) {\n\t\t\t\traise_message('template_disabled', __('User was Authenticated, but the Template Account is disabled. Using Guest Account'), MESSAGE_LEVEL_WARN);\n\t\t\t}\n\n\t\t\t$guest_user = true;\n\t\t} else {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  Guest user id %s does not exist.  Please contact your Administrator.', read_config_option('guest_user'));\n\n\t\t\tcacti_log(\"LOGIN FAILED: Unable to locate guest user '\" . read_config_option('guest_user') . \"'\", false, 'AUTH');\n\n\t\t\tif ($auth_method == AUTH_METHOD_BASIC) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* We have a valid user, do final checks, log their login attempt, and redirect as required */\n\tif (!$error && cacti_sizeof($user)) {\n\n\t\t$client_addr = get_client_addr();\n\n\t\tif (!$guest_user) {\n\t\t\tcacti_log(\"LOGIN: User '\" . $user['username'] . \"' authenticated from IP Address '\" . $client_addr . \"'\", false, 'AUTH');\n\t\t} else {\n\t\t\tcacti_log(\"LOGIN: Guest User '\" . $user['username'] . \"' in use from IP Address '\" . $client_addr . \"'\", false, 'AUTH');\n\t\t}\n\n\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 1, ?, NOW())',\n\t\t\tarray($username, $user['id'], $client_addr)\n\t\t);\n\n\t\t/* check if the user account is enabled with the exception of guest users */\n\t\t$user_enabled = true;\n\n\t\tif (!$guest_user && isset($user['enabled'])) {\n\t\t\t$user_enabled = ($user['enabled'] == 'on' ? true : false);\n\t\t}\n\n\t\t/* check if the user is enabled */\n\t\tif (!$user_enabled) {\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('Access Denied!  User account disabled.');\n\n\t\t\tif ($auth_method == AUTH_METHOD_BASIC) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\tif (!$error && !auth_user_has_access($user)) {\n\t\t\t/* error */\n\t\t\t$error     = true;\n\t\t\t$error_msg = __('You do not have access to any area of Cacti.  Contact your administrator.');\n\n\t\t\tcacti_log(sprintf('LOGIN FAILED: User %s with id %s does not have access to any area of Cacti.', $user['username'], $user['id']), false, 'AUTH');\n\n\t\t\tif ($auth_method == AUTH_METHOD_BASIC) {\n\t\t\t\tauth_display_custom_error_message($error_msg);\n\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t/* remember me support.  Not for guest of basic auth */\n\t\tif ($auth_method != AUTH_METHOD_BASIC && $user['id'] !== get_guest_account()) {\n\t\t\tif (!$error && isset_request_var('remember_me') && read_config_option('auth_cache_enabled') == 'on') {\n\t\t\t\tset_auth_cookie($user);\n\t\t\t}\n\t\t}\n\n\t\tif (!$error) {\n\t\t\t/* set the php session */\n\t\t\t$_SESSION[SESS_USER_ID]     = $user['id'];\n\t\t\t$_SESSION[SESS_USER_AGENT]  = $_SERVER['HTTP_USER_AGENT'];\n\t\t\t$_SESSION[SESS_CLIENT_ADDR] = get_client_addr();\n\n\t\t\t/* handle 'force change password' */\n\t\t\tif ($user['must_change_password'] == 'on' && $auth_method == AUTH_METHOD_CACTI && $user['password_change'] == 'on') {\n\t\t\t\t$_SESSION[SESS_CHANGE_PASSWORD] = true;\n\t\t\t}\n\n\t\t\tif (db_table_exists('user_auth_group')) {\n\t\t\t\t$group_options = db_fetch_cell_prepared(\n\t\t\t\t\t'SELECT MAX(login_opts)\n\t\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\t\t\tON uag.id=uagm.group_id\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND login_opts != 4',\n\t\t\t\t\tarray($_SESSION[SESS_USER_ID])\n\t\t\t\t);\n\n\t\t\t\tif (!empty($group_options)) {\n\t\t\t\t\t$user['login_opts'] = $group_options;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (user_setting_exists('user_language', $_SESSION[SESS_USER_ID])) {\n\t\t\t\t$_SESSION[SESS_USER_LANGUAGE] = read_user_setting('user_language');\n\t\t\t}\n\n\t\t\tcacti_log(\"DEBUG: User '\" . $username . \"' about to re-direct to preferred login page\", false, 'AUTH', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tauth_login_redirect($user['login_opts']);\n\t\t}\n\t} else {\n\t\t$id = db_fetch_cell_prepared(\n\t\t\t'SELECT id\n\t\t\tFROM user_auth\n\t\t\tWHERE username = ?\n\t\t\tAND realm = ?',\n\t\t\tarray($username, $frv_realm)\n\t\t);\n\n\t\tswitch ($frv_realm) {\n\t\t\tcase '0':\n\t\t\tcase '1':\n\t\t\t\t$realm_name = 'Local';\n\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\t$realm_name = 'LDAP';\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$realm_name = 'Domains LDAP';\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t/* BAD username/password builtin and LDAP */\n\t\tdb_execute_prepared(\n\t\t\t'INSERT IGNORE INTO user_log\n\t\t\t(username, user_id, result, ip, time)\n\t\t\tVALUES (?, ?, 0, ?, NOW())',\n\t\t\tarray($username, !empty($id) ? $id : 0, get_client_addr())\n\t\t);\n\n\t\tcacti_log('LOGIN FAILED: ' . $realm_name . \" Login Failed for user '\" . $username . \"' from IP Address '\" . get_client_addr() . \"'.\", false, 'AUTH');\n\t}\n}\n\nif (api_plugin_hook_function('custom_login', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\treturn;\n}\n\n$selectedTheme = get_selected_theme();\n\nhtml_auth_header(\n\t'login',\n\t__('Login to Cacti'),\n\t__('User Login'),\n\t__('Enter your Username and Password below'),\n\tarray(\n\t\t'error'        => $error,\n\t\t'error_msg'    => $error_msg,\n\t\t'username'     => $username,\n\t\t'user_enabled' => $user_enabled,\n\t\t'action'       => get_nfilter_request_var('action')\n\t)\n);\n?>\n<tr>\n\t<td>\n\t\t<label for='login_username'><?php print __('Username'); ?></label>\n\t</td>\n\t<td>\n\t\t<input type='text' class='ui-state-default ui-corner-all' id='login_username' name='login_username' size='15' maxlength='25' value='<?php print html_escape($username); ?>' placeholder='<?php print __esc('Username'); ?>'>\n\t</td>\n</tr>\n<tr>\n\t<td>\n\t\t<label for='login_password'><?php print __('Password'); ?></label>\n\t</td>\n\t<td>\n\t\t<input type='password' autocomplete='new-password' class='ui-state-default ui-corner-all' id='login_password' name='login_password' size='15' maxlength='25' placeholder='********'>\n\t</td>\n</tr>\n<?php\nif (read_config_option('auth_method') == AUTH_METHOD_LDAP || read_config_option('auth_method') == AUTH_METHOD_DOMAIN) {\n\t$realms = get_auth_realms(true);\n\n\t// try and remember previously selected realm\n\tif ($frv_realm && array_key_exists($frv_realm, $realms)) {\n\t\tforeach ($realms as $key => $realm) {\n\t\t\t$realms[$key]['selected'] = ($frv_realm == $key);\n\t\t}\n\t}\n\t?>\n\t<tr>\n\t\t<td>\n\t\t\t<label for='realm'><?php print __('Realm'); ?></label>\n\t\t</td>\n\t\t<td>\n\t\t\t<select id='realm' name='realm' class='ui-state-default ui-corner-all'>\n\t\t\t\t<?php\n\t\t\t\t\t\tif (cacti_sizeof($realms)) {\n\t\t\t\t\t\t\tforeach ($realms as $index => $realm) {\n\t\t\t\t\t\t\t\tprint \"\\t\\t\\t\\t\\t<option value='\" . $index . \"'\" . ($realm['selected'] ? ' selected=\"selected\"' : '') . '>' . html_escape($realm['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t?>\n\t\t\t</select>\n\t\t</td>\n\t</tr>\n<?php\n}\n\n\nif (isset($_SERVER['HTTPS']) && isset($_SERVER['HTTP_HOST']) && isset($_SERVER['REQUEST_URI'])) {\n\t$is_https = true;\n} else {\n\t$is_https = false;\n}\n\nif (read_config_option('auth_cache_enabled') == 'on' && $is_https) { ?>\n\t<tr>\n\t\t<td colspan='2'>\n\t\t\t<input style='vertical-align:-3px;' type='checkbox' id='remember_me' name='remember_me' <?php print(isset($_COOKIE['cacti_remembers']) || !isempty_request_var('remember_me') ? 'checked' : ''); ?>>\n\t\t\t<label for='remember_me'><?php print __('Keep me signed in'); ?></label>\n\t\t</td>\n\t</tr>\n<?php\n} ?>\n<tr>\n\t<td colspan='2'>\n\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Login'); ?>'>\n\t</td>\n</tr>\n<?php\n$error_message = '';\n\nif ($error_msg) {\n\t$error_message = $error_msg;\n} else {\n\tif (get_nfilter_request_var('action') == 'login') {\n\t\t$error_message = __('Invalid User Name/Password Please Retype');\n\t}\n\n\tif ($user_enabled == '0') {\n\t\t$error_message =  __('User Account Disabled');\n\t}\n}\n\n$focus_control = (empty($username)) ? 'username' : 'password';\n\nhtml_auth_footer('login', $error_message, \"\n\t<script>\n\t\tvar storage = Storages.localStorage;\n\n\t\t$(function() {\n\t\t\t$('body').css('height', $(window).height());\n\t\t\t$('.cactiAuthLeft').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t\t$('.cactiAuthRight').css('width',parseInt($(window).width()*0.33)+'px');\n\t\t\t$('#login_{$focus_control}').focus();\n\n\t\t\tif (storage.isSet('user_realm')) {\n\t\t\t\tvar preferredRealm = storage.get('user_realm');\n\t\t\t} else {\n\t\t\t\tvar preferredRealm = null;\n\t\t\t}\n\n\t\t\tif (preferredRealm == null) {\n\t\t\t\tpreferredRealm = $('#realm option:selected').val();\n\t\t\t}\n\n\t\t\t// Restore the preferred realm\n\t\t\tif ($('#realm').length) {\n\t\t\t\tif (preferredRealm !== null) {\n\t\t\t\t\t$('#realm').val(preferredRealm);\n\t\t\t\t\tif ($('#realm').selectmenu('instance') !== undefined) {\n\t\t\t\t\t\t$('#realm').selectmenu('refresh');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Control submit in order to store preferred realm\n\t\t\t$('#auth').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif ($('#realm').length) {\n\t\t\t\t\tstorage.set('user_realm', $('#realm').val());\n\t\t\t\t}\n\t\t\t\t$('#auth').off('submit').trigger('submit');\n\t\t\t});\n\n\t\t});\n\t</script>\n\");\n"
        },
        {
          "name": "auth_profile.php",
          "type": "blob",
          "size": 24.322265625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\ninclude('./include/auth.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'logout_everywhere':\n\t\tapi_auth_logout_everywhere();\n\n\t\tbreak;\n\tcase 'clear_user_settings':\n\t\tapi_auth_clear_user_settings();\n\n\t\tbreak;\n\tcase 'reset_default':\n\t\t$name  = get_nfilter_request_var('name');\n\n\t\tapi_auth_clear_user_setting($name);\n\n\t\tbreak;\n\tcase 'update_data':\n\t\t$name  = get_nfilter_request_var('name');\n\t\t$value = get_nfilter_request_var('value');\n\n\t\t$current_tab = get_nfilter_request_var('tab');\n\n\t\tif ($current_tab == 'general') {\n\t\t\tapi_auth_update_user_setting($name, $value);\n\t\t} else {\n\t\t\tapi_plugin_hook_function('auth_profile_update_data', $current_tab);\n\t\t}\n\n\t\tbreak;\n\tcase 'disable_2fa':\n\t\tprint disable_2fa($_SESSION[SESS_USER_ID]);\n\n\t\texit;\n\n\tcase 'enable_2fa':\n\t\tprint enable_2fa($_SESSION[SESS_USER_ID]);\n\n\t\texit;\n\n\tcase 'verify_2fa':\n\t\tprint verify_2fa($_SESSION[SESS_USER_ID], substr('000000' . get_nfilter_request_var('code'), -6));\n\n\t\texit;\n\n\tdefault:\n\t\t// We must exempt ourselves from the page refresh, or else the settings page could update while the user is making changes\n\t\t$_SESSION['custom'] = 1;\n\t\tgeneral_header();\n\n\t\tunset($_SESSION['custom']);\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([0-9a-z_A-Z]+)$/')));\n\t\t/* ==================================================== */\n\n\t\t/* present a tabbed interface */\n\t\t$tabs = array(\n\t\t\t'general'  => array(\n\t\t\t\t'display' => __('General'),\n\t\t\t\t'url'     => CACTI_PATH_URL . 'auth_profile.php?tab=general'\n\t\t\t),\n\t\t\t'2fa' => array(\n\t\t\t\t'display' => __('2FA'),\n\t\t\t\t'url'     => CACTI_PATH_URL . 'auth_profile.php?tab=2fa'\n\t\t\t),\n\t\t);\n\n\t\tif (read_config_option('secpass_2fa_enabled') == '') {\n\t\t\tunset($tabs['2fa']);\n\t\t}\n\n\t\t$tabs = api_plugin_hook_function('auth_profile_tabs', $tabs);\n\n\t\t/* set the default tab */\n\t\tload_current_session_value('tab', 'sess_profile_tabs', 'general');\n\t\t$current_tab = get_nfilter_request_var('tab');\n\n\t\tif (cacti_sizeof($tabs) > 1) {\n\t\t\t$i = 0;\n\n\t\t\t/* draw the tabs */\n\t\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\t\tforeach ($tabs as $tab_short_name => $attribs) {\n\t\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\t\" href='\" . html_escape($attribs['url']) .\n\t\t\t\t\t\"'>\" . $attribs['display'] . \"</a></li>\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint \"</ul></nav></div>\";\n\t\t}\n\n\t\tif ($current_tab == 'general') {\n\t\t\tsettings();\n\t\t\tsettings_javascript();\n\t\t} elseif ($current_tab == '2fa') {\n\t\t\tsettings_2fa();\n\t\t} else {\n\t\t\tapi_plugin_hook_function('auth_profile_run_action', get_request_var('tab'));\n\t\t}\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction api_auth_logout_everywhere() {\n\t$user = $_SESSION[SESS_USER_ID];\n\n\tif (!empty($user)) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\tWHERE user_id = ?',\n\t\t\tarray($user)\n\t\t);\n\t}\n}\n\nfunction api_auth_clear_user_settings() {\n\t$user = $_SESSION[SESS_USER_ID];\n\n\tif (!empty($user)) {\n\t\tif (isset_request_var('tab') && get_nfilter_request_var('tab') == 'general') {\n\t\t\tdb_execute_prepared('DELETE FROM settings_user\n\t\t\t\tWHERE user_id = ?',\n\t\t\t\tarray($user)\n\t\t\t);\n\n\t\t\tkill_session_var(OPTIONS_USER);\n\t\t} elseif (isset_request_var('tab')) {\n\t\t\tapi_plugin_hook('auth_profile_reset');\n\t\t}\n\n\t\traise_message('37');\n\t}\n}\n\nfunction api_auth_clear_user_setting($name) {\n\tglobal $settings_user;\n\n\t$user = $_SESSION[SESS_USER_ID];\n\n\tif (read_config_option('client_timezone_support') == '0') {\n\t\tunset($settings_user['client_timezone_support']);\n\t}\n\n\tif (!empty($user)) {\n\t\tif (isset_request_var('tab') && get_nfilter_request_var('tab') == 'general') {\n\t\t\tdb_execute_prepared('DELETE FROM settings_user\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND name = ?',\n\t\t\t\tarray($user, $name)\n\t\t\t);\n\n\t\t\tforeach ($settings_user as $tab => $settings) {\n\t\t\t\tif (isset($settings[$name])) {\n\t\t\t\t\tif (isset($settings[$name]['default'])) {\n\t\t\t\t\t\tdb_execute_prepared('INSERT INTO settings_user\n\t\t\t\t\t\t\t(name, value, user_id)\n\t\t\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\t\t\tarray($name, $settings[$name]['default'], $user)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\theader('Content-Type: application/json');\n\t\t\t\t\t\tprint json_encode(['id' => $name, 'value' => $settings[$name]['default']]);\n\n\t\t\t\t\t\tkill_session_var(OPTIONS_USER);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tapi_plugin_hook_function('auth_profile_reset_value', $name);\n\t\t}\n\t}\n}\n\nfunction api_auth_update_user_setting($name, $value) {\n\tglobal $settings_user;\n\n\t$user = $_SESSION[SESS_USER_ID];\n\n\tif (!empty($user)) {\n\t\tif ($name == 'full_name' || $name == 'email_address') {\n\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET $name = ?\n\t\t\t\tWHERE id = ?\",\n\t\t\t\tarray($value, $user)\n\t\t\t);\n\t\t} else {\n\t\t\tforeach ($settings_user as $tab => $settings) {\n\t\t\t\tif (isset($settings[$name])) {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user\n\t\t\t\t\t\t(name, value, user_id)\n\t\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\t\tarray($name, $value, $user)\n\t\t\t\t\t);\n\n\t\t\t\t\tkill_session_var(OPTIONS_USER);\n\t\t\t\t\tkill_session_var('selected_theme');\n\t\t\t\t\tkill_session_var(SESS_USER_LANGUAGE);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\t// Save the users profile information\n\tif (isset_request_var('full_name') && isset_request_var('email_address') && isset($_SESSION[SESS_USER_ID])) {\n\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\tSET full_name = ?, email_address = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray(\n\t\t\t\tget_nfilter_request_var('full_name'),\n\t\t\t\tget_nfilter_request_var('email_address'),\n\t\t\t\t$_SESSION[SESS_USER_ID]\n\t\t\t)\n\t\t);\n\t}\n\n\t$errors = array();\n\n\t// Save the users graph settings if they have permission\n\tif (is_view_allowed('graph_settings') == true && isset_request_var('tab') && get_nfilter_request_var('tab') == 'general') {\n\t\tsave_user_settings($_SESSION[SESS_USER_ID]);\n\t} elseif (isset_request_var('tab')) {\n\t\tapi_plugin_hook('auth_profile_save');\n\t}\n\n\tif (cacti_sizeof($errors) == 0) {\n\t\traise_message(1);\n\t} else {\n\t\traise_message(35);\n\n\t\tforeach ($errors as $error) {\n\t\t\traise_message($error);\n\t\t}\n\t}\n\n\t/* reset local settings cache so the user sees the new settings */\n\tkill_session_var(SESS_USER_LANGUAGE);\n\tkill_session_var(OPTIONS_USER);\n\tkill_session_var('selected_theme');\n\n\t$tab = (isset_request_var('tab') && get_nfilter_request_var('tab')) ? ('?tab=' . get_nfilter_request_var('tab')) : '';\n\theader('Location: auth_profile.php' . $tab);\n}\n\nfunction settings() {\n\tglobal $tabs_graphs, $settings_user, $current_user, $graph_views, $current_user;\n\n\t/* you cannot have per-user graph settings if cacti's user management is not turned on */\n\tif (read_config_option('auth_method') == AUTH_METHOD_NONE) {\n\t\traise_message(6);\n\n\t\treturn;\n\t}\n\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t$referer = $_SERVER['HTTP_REFERER'];\n\n\t\tif (strpos($referer, 'auth_profile.php') === false) {\n\t\t\t$timespan_sel_pos = strpos($referer, '&predefined_timespan');\n\n\t\t\tif ($timespan_sel_pos) {\n\t\t\t\t$referer = substr($referer, 0, $timespan_sel_pos);\n\t\t\t}\n\n\t\t\t$_SESSION['profile_referer'] = $referer;\n\t\t}\n\t} elseif (!isset($_SESSION['profile_referer'])) {\n\t\t$_SESSION['profile_referer'] = 'graph_view.php';\n\t}\n\n\tform_start('auth_profile.php', 'chk');\n\n\thtml_start_box(__('User Account Details'), '100%', true, '3', 'center', '');\n\n\t$current_user = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($_SESSION[SESS_USER_ID])\n\t);\n\n\tif (!cacti_sizeof($current_user)) {\n\t\treturn;\n\t}\n\n\t// Set the graph views the user has permission to\n\tunset($graph_views);\n\n\tif (is_view_allowed('show_tree')) {\n\t\t$graph_views[1] = __('Tree View');\n\t}\n\n\tif (is_view_allowed('show_list')) {\n\t\t$graph_views[2] = __('List View');\n\t}\n\n\tif (is_view_allowed('show_preview')) {\n\t\t$graph_views[2] = __('Preview View');\n\t}\n\n\tif (cacti_sizeof($graph_views)) {\n\t\t$settings_user['general']['default_view_mode']['array'] = $graph_views;\n\t} else {\n\t\tunset($settings_user['general']['default_view_mode']);\n\t}\n\n\t/* file: user_admin.php, action: user_edit (host) */\n\t$fields_user = array(\n\t\t'username' => array(\n\t\t\t'method'        => 'value',\n\t\t\t'friendly_name' => __('User Name'),\n\t\t\t'description'   => __('The login name for this user.'),\n\t\t\t'value'         => '|arg1:username|',\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40'\n\t\t),\n\t\t'full_name' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Full Name'),\n\t\t\t'description'   => __('A more descriptive name for this user, that can include spaces or special characters.'),\n\t\t\t'value'         => '|arg1:full_name|',\n\t\t\t'max_length'    => '120',\n\t\t\t'size'          => '60'\n\t\t),\n\t\t'email_address' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'type'          => 'email',\n\t\t\t'friendly_name' => __('Email Address'),\n\t\t\t'description'   => __('An Email Address you be reached at.'),\n\t\t\t'value'         => '|arg1:email_address|',\n\t\t\t'max_length'    => '60',\n\t\t\t'size'          => '60'\n\t\t),\n\t\t'clear_settings' => array(\n\t\t\t'method'        => 'button',\n\t\t\t'friendly_name' => __('Clear User Settings'),\n\t\t\t'description'   => __('Return all User Settings to Default values.'),\n\t\t\t'value'         => __('Clear User Settings'),\n\t\t\t'on_click'      => 'clearUserSettings()'\n\t\t),\n\t\t'private_data' => array(\n\t\t\t'method'        => 'button',\n\t\t\t'friendly_name' => __('Clear Private Data'),\n\t\t\t'description'   => __('Clear Private Data including Column sizing.'),\n\t\t\t'value'         => __('Clear Private Data'),\n\t\t\t'on_click'      => 'clearPrivateData()'\n\t\t)\n\t);\n\n\tif (read_config_option('auth_cache_enabled') == 'on') {\n\t\t$fields_user += array(\n\t\t\t'logout_everywhere' => array(\n\t\t\t\t'method'        => 'button',\n\t\t\t\t'friendly_name' => __('Logout Everywhere'),\n\t\t\t\t'description'   => __('Clear all your Login Session Tokens from all devices that you have logged into using your session cookies.'),\n\t\t\t\t'value'         => __('Logout Everywhere'),\n\t\t\t\t'on_click'      => 'logoutEverywhere()'\n\t\t\t)\n\t\t);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_user, (isset($current_user) ? $current_user : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (is_view_allowed('graph_settings') == true) {\n\t\tif (read_config_option('client_timezone_support') == 0) {\n\t\t\tunset($settings_user['general']['client_timezone_support']);\n\t\t}\n\n\t\t$settings_user['tree']['default_tree_id']['sql'] = get_allowed_trees(false, true);\n\n\t\thtml_start_box(__('User Settings'), '100%', true, '3', 'center', '');\n\n\t\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t\t$collapsible = true;\n\n\t\t\tprint \"<div class='spacer formHeader\" . ($collapsible ? ' collapsible' : '') . \"' id='row_$tab_short_name'><div class='formHeaderText'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='ti ti-chevrons-up'></i></div>\" : '') . \"</div></div>\";\n\n\t\t\t$form_array = array();\n\n\t\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tif (user_setting_exists($sub_field_name, $_SESSION[SESS_USER_ID])) {\n\t\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value\n\t\t\t\t\t\t\tFROM settings_user\n\t\t\t\t\t\t\tWHERE name = ?\n\t\t\t\t\t\t\tAND user_id = ?',\n\t\t\t\t\t\t\tarray($sub_field_name, $_SESSION[SESS_USER_ID])\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (user_setting_exists($field_name, $_SESSION[SESS_USER_ID])) {\n\t\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$user_row = db_fetch_row_prepared('SELECT value\n\t\t\t\t\t\tFROM settings_user\n\t\t\t\t\t\tWHERE name = ?\n\t\t\t\t\t\tAND user_id = ?',\n\t\t\t\t\t\tarray($field_name, $_SESSION[SESS_USER_ID])\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cacti_sizeof($user_row)) {\n\t\t\t\t\t\t$form_array[$field_name]['user_set'] = true;\n\t\t\t\t\t\t$form_array[$field_name]['value']    = $user_row['value'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$form_array[$field_name]['user_set'] = false;\n\t\t\t\t\t\t$form_array[$field_name]['value']    = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array(\n\t\t\t\t\t\t'no_form_tag' => true\n\t\t\t\t\t),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tprint \"</td></tr>\";\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tform_hidden_box('save_component_graph_config', '1', '');\n\n\t$buttons = array(\n\t\tarray(\n\t\t\t'id'     => 'return',\n\t\t\t'value'  => __('Return'),\n\t\t\t'method' => 'return'\n\t\t)\n\t);\n\n\tform_save_buttons($buttons, $_SESSION['profile_referer']);\n\n\tform_end();\n}\n\nfunction settings_2fa() {\n\tglobal $tabs_graphs, $settings_user, $current_user, $graph_views, $current_user;\n\n\t/* you cannot have per-user graph settings if cacti's user management is not turned on */\n\tif (read_config_option('auth_method') == AUTH_METHOD_NONE) {\n\t\traise_message(6);\n\n\t\treturn;\n\t}\n\n\tif (isset($_SERVER['HTTP_REFERER'])) {\n\t\t$referer = $_SERVER['HTTP_REFERER'];\n\n\t\tif (strpos($referer, 'auth_profile.php') === false) {\n\t\t\t$timespan_sel_pos = strpos($referer, '&predefined_timespan');\n\n\t\t\tif ($timespan_sel_pos) {\n\t\t\t\t$referer = substr($referer, 0, $timespan_sel_pos);\n\t\t\t}\n\n\t\t\t$_SESSION['profile_referer'] = $referer;\n\t\t}\n\t} elseif (!isset($_SESSION['profile_referer'])) {\n\t\t$_SESSION['profile_referer'] = 'graph_view.php';\n\t}\n\n\tform_start('auth_profile.php', 'chk');\n\n\thtml_start_box(__('2FA Settings'), '100%', true, '3', 'center', '');\n\n\t$current_user = db_fetch_row_prepared('SELECT *\n\t\tFROM user_auth\n\t\tWHERE id = ?',\n\t\tarray($_SESSION[SESS_USER_ID])\n\t);\n\n\tif (!cacti_sizeof($current_user)) {\n\t\treturn;\n\t}\n\n\t$fields_user = array(\n\t\t'username' => array(\n\t\t\t'method'        => 'value',\n\t\t\t'friendly_name' => __('User Name'),\n\t\t\t'description'   => __('The login name for this user.'),\n\t\t\t'value'         => '|arg1:username|',\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40',\n\t\t),\n\t\t'tfa_enabled' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('2FA Enabled'),\n\t\t\t'description'   => __('Whether 2FA is enabled for this user.'),\n\t\t\t'value'         => '|arg1:tfa_enabled|',\n\t\t\t'on_click'      => 'toggle2FA()',\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40',\n\t\t),\n\t\t'tfa_qr_code' => array(\n\t\t\t'method'        => 'value',\n\t\t\t'friendly_name' => __('2FA QA Code'),\n\t\t\t'description'   => __('The 2FA QA Code to be scanned with Google Authenticator, Authy or any compatible 2FA app'),\n\t\t\t'value'         => '\t',\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40',\n\t\t),\n\t\t'tfa_token' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('2FA App Token'),\n\t\t\t'description'   => __('The token generated by Google Authenticator, Auth or any compatible 2FA app'),\n\t\t\t'value'         => '',\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40',\n\t\t),\n\t\t'tfa_verify' => array(\n\t\t\t'method'        => 'button',\n\t\t\t'friendly_name' => __('Verify App Token'),\n\t\t\t'description'   => __('Verify the 2FA App token entered above'),\n\t\t\t'value'         => __('Verify App Token'),\n\t\t\t'max_length'    => '40',\n\t\t\t'size'          => '40',\n\t\t),\n\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_user, $current_user),\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$buttons = array(\n\t\tarray(\n\t\t\t'id'     => 'return',\n\t\t\t'value'  => __('Return'),\n\t\t\t'method' => 'return'\n\t\t)\n\t);\n\n\tform_save_buttons($buttons, $_SESSION['profile_referer']);\n\n\t?>\n\t<script type='text/javascript'>\n\t\tvar tfa_enabled = <?php print $current_user['tfa_enabled'] != '' ? 'true' : 'false'; ?>;\n\t\tvar tfa_text = '<?php print $current_user['tfa_enabled']   != '' ? __('Enabled') : __('Disabled'); ?>';\n\t\tvar tfa_verified = false;\n\t\tvar tfa_enabling = '<?php print __('Enabling...'); ?>';\n\n\t\tfunction set2FAText(text, id, cls) {\n\t\t\tif (id === undefined) {\n\t\t\t\tid = 'tfa_qr_code';\n\t\t\t}\n\n\t\t\tif (cls !== undefined) {\n\t\t\t\tcls = ' class=\\'' + cls + '\\'';\n\t\t\t}\n\t\t\t$('#' + id).html('<div id=\\'' + id + '\\'' + cls + '>' + text + '</div>');\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#row_tfa_token,#row_tfa_verify').hide();\n\t\t\t$('#tfa_qr_code').parent().parent().html('<div id=\\'tfa_qr_code\\'></div>');\n\t\t\t$('#tfa_verify').parent().append('<div id=\"tfa_error\" class=\"textError\"></div>');\n\n\t\t\tset2FAText(tfa_text);\n\t\t\t$('#tfa_enabled').change(function(e) {\n\t\t\t\t$('#tfa_enabled').prop('disabled', true);\n\n\t\t\t\tif ($('#tfa_enabled').is(':checked')) {\n\t\t\t\t\tif (!tfa_verified) {\n\t\t\t\t\t\tset2FAText(tfa_enabling);\n\t\t\t\t\t\t$.getJSON('auth_profile.php?action=enable_2fa', function(data) {\n\t\t\t\t\t\t\t$('#tfa_enabled').prop('disabled', false);\n\n\t\t\t\t\t\t\tif (data.status == 200) {\n\t\t\t\t\t\t\t\tvar link = '<a target=\"_new\" href=\"' + data.link + '\"><img src=\"' + data.link + '\"/></a>';\n\n\t\t\t\t\t\t\t\tset2FAText(link);\n\t\t\t\t\t\t\t\t$('#row_tfa_token,#row_tfa_verify').show();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tset2FAText(data.status + ' - ' + data.text);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#tfa_enabled').prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.getJSON('auth_profile.php?action=disable_2fa', function(data) {\n\t\t\t\t\t\t$('#tfa_enabled').prop('disabled', false);\n\t\t\t\t\t\tset2FAText('<?php print __('Disabled') ?>');\n\t\t\t\t\t\t$('#row_tfa_token,#row_tfa_verify').hide();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t$('#tfa_verify').click(function(e) {\n\t\t\t\tvar code = $('#tfa_token').val();\n\t\t\t\t$.getJSON('auth_profile.php?action=verify_2fa&code=' + code, function(data) {\n\t\t\t\t\tvar tfa_error = $('#tfa_error');\n\t\t\t\t\tif (!(tfa_error.length > 0)) {}\n\t\t\t\t\t$('#tfa_token').val('');\n\t\t\t\t\tif (data.status == 200) {\n\t\t\t\t\t\tset2FAText(data.text);\n\t\t\t\t\t\t$('#row_tfa_token,#row_tfa_verify').hide();\n\t\t\t\t\t\tdata.text = '';\n\t\t\t\t\t}\n\t\t\t\t\tset2FAText(data.text, 'tfa_error', 'textError');\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t</script>\n<?php\n\n\tform_end();\n}\n\nfunction settings_javascript() {\n\tglobal $config;\n\n?>\n\t<script type='text/javascript'>\n\t\tvar themeFonts = <?php print read_config_option('font_method'); ?>;\n\t\tvar currentTab = '<?php print get_nfilter_request_var('tab'); ?>';\n\t\tvar currentTheme = '<?php print get_selected_theme(); ?>';\n\t\tvar currentLang = '<?php print read_config_option('user_language'); ?>';\n\t\tvar authMethod = '<?php print read_config_option('auth_method'); ?>';\n\n\t\tfunction clearUserSettings() {\n\t\t\t$('#clear_settings').blur();\n\n\t\t\tloadUrl({\n\t\t\t\turl: 'auth_profile.php?action=clear_user_settings',\n\t\t\t\tredirect: 'auth_profile.php?newtheme=1',\n\t\t\t});\n\t\t}\n\n\t\tfunction clearPrivateData() {\n\t\t\tStorages.localStorage.removeAll();\n\t\t\tStorages.sessionStorage.removeAll();\n\n\t\t\t$('body').append('<div style=\"display:none;\" id=\"cleared\" title=\"<?php print __esc('Private Data Cleared'); ?>\"><p><?php print __('Your Private Data has been cleared.'); ?></p></div>');\n\n\t\t\t$('#private_data').blur();\n\t\t\t$('#cleared').dialog({\n\t\t\t\tmodal: true,\n\t\t\t\tresizable: false,\n\t\t\t\tdraggable: false,\n\t\t\t\theight: 140,\n\t\t\t\tbuttons: {\n\t\t\t\t\tOk: function() {\n\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t$('#cleared').remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#cleared').dialog('open');\n\t\t}\n\n\t\tfunction logoutEverywhere() {\n\t\t\t$('#logout_everywhere').blur();\n\t\t\t$.get('auth_profile.php?action=logout_everywhere', function(data) {\n\t\t\t\t$('body').append('<div style=\"display:none;\" id=\"cleared\" title=\"<?php print __esc('User Sessions Cleared'); ?>\"><p><?php print __('All your login sessions have been cleared.'); ?></p></div>');\n\n\t\t\t\t$('#cleared').dialog({\n\t\t\t\t\tmodal: true,\n\t\t\t\t\tresizable: false,\n\t\t\t\t\tdraggable: false,\n\t\t\t\t\theight: 140,\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tOk: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t\t$('#cleared').remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$('#cleared').dialog('open');\n\t\t\t});\n\t\t}\n\n\t\tfunction graphSettings() {\n\t\t\tvar showField = themeFonts == 1 && $('#custom_fonts').is(':checked');\n\n\t\t\ttoggleFields({\n\t\t\t\tfonts: themeFonts == 1,\n\t\t\t\ttitle_size: showField,\n\t\t\t\ttitle_font: showField,\n\t\t\t\tlegend_size: showField,\n\t\t\t\tlegend_font: showField,\n\t\t\t\taxis_size: showField,\n\t\t\t\taxis_font: showField,\n\t\t\t\tunit_size: showField,\n\t\t\t\tunit_font: showField,\n\t\t\t});\n\t\t}\n\n\t\tfunction resetUserSettingsFinalise(options, data) {\n\t\t\tvar item = $('#' + data.id);\n\n\t\t\tif (item.is(':checkbox')) {\n\t\t\t\tif (data.value == 'on') {\n\t\t\t\t\titem.prop('checked', true);\n\t\t\t\t} else {\n\t\t\t\t\titem.prop('checked', false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titem.val(data.value);\n\t\t\t\tif (item.selectmenu('instance')) {\n\t\t\t\t\titem.selectmenu('refresh');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t$(function() {\n\t\t\tgraphSettings();\n\n\t\t\t$('#navigation, #navigation_right').show();\n\t\t\t$('#tabs').find('li a.selected').removeClass('selected');\n\n\t\t\t$('input[value=\"<?php print __esc('Save'); ?>\"]').unbind().click(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tvar options = {\n\t\t\t\t\turl: 'auth_profile.php',\n\t\t\t\t\tredirect: 'auth_profile.php?action=noreturn'\n\t\t\t\t}\n\n\t\t\t\tvar data = $('input, select, textarea').serialize();\n\n\t\t\t\tpostUrl(options, data);\n\t\t\t});\n\n\t\t\tif (authMethod == <?= AUTH_METHOD_BASIC ?>) {\n\t\t\t\t$('#row_logout_everywhere').hide();\n\t\t\t}\n\n\t\t\t$('#auth_profile_general2 .formData, #auth_profile_edit2 .formData, #auth_profile_noreturn2 .formData').each(function() {\n\t\t\t\tif ($(this).find('select, input[type!=\"button\"]').length) {\n\t\t\t\t\t$(this).parent().hover(\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\tvar id = $(this).find('select, input[type!=\"button\"]').attr('id');\n\n\t\t\t\t\t\t\t$('<a class=\"resetHover\" data-id=\"' + id + '\" style=\"padding-left:10px\" href=\"#\"><?php print __('Reset'); ?></a>').appendTo($(this));\n\t\t\t\t\t\t\t$('.resetHover').on('click', function(event) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t\t\tvar id = $(this).attr('data-id');\n\n\t\t\t\t\t\t\t\tif (id != undefined) {\n\t\t\t\t\t\t\t\t\tvar resetOptions = {\n\t\t\t\t\t\t\t\t\t\turl: 'auth_profile.php?tab=' + currentTab + '&action=reset_default&name=' + id,\n\t\t\t\t\t\t\t\t\t\tnoState: true,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tif (id != 'selected_theme' && id != 'user_language' && id != 'enable_hscroll') {\n\t\t\t\t\t\t\t\t\t\tresetOptions.funcEnd = 'resetUserSettingsFinalise';\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tresetOptions.redirect = 'auth_profile.php?action=edit';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tloadUrl(resetOptions);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t$('.resetHover').remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('select, input:not([data-scope=\"theme\"], [type=\"button\"])').unbind().delayKeyup(function() {\n\t\t\t\tname = $(this).attr('id');\n\t\t\t\tif ($(this).attr('type') == 'checkbox') {\n\t\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t\tvalue = 'on';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = $(this).val();\n\t\t\t\t}\n\n\t\t\t\tvar options = {\n\t\t\t\t\turl: 'auth_profile.php?tab=' + currentTab + '&action=update_data',\n\t\t\t\t\thandle: false\n\t\t\t\t}\n\n\t\t\t\tvar data = {\n\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t}\n\t\t\t\tpostUrl(options, data);\n\t\t\t}).change(function() {\n\t\t\t\tname = $(this).attr('id');\n\t\t\t\tif ($(this).attr('type') == 'checkbox') {\n\t\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t\tvalue = 'on';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = $(this).val();\n\t\t\t\t}\n\n\t\t\t\tvar options = {\n\t\t\t\t\turl: 'auth_profile.php?tab=' + currentTab + '&action=update_data',\n\t\t\t\t\thandle: false\n\t\t\t\t}\n\n\t\t\t\tif (name == 'selected_theme' || name == 'user_language') {\n\t\t\t\t\toptions.redirect = 'auth_profile.php?action=edit';\n\t\t\t\t}\n\n\t\t\t\tvar data = {\n\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t}\n\n\t\t\t\tpostUrl(options, data);\n\t\t\t});\n\n\t\t\t// set the buttons active\n\t\t\t$('#clear_settings, #private_data, #logout_everywhere').addClass('ui-state-active');\n\t\t});\n\t</script>\n<?php\n}\n"
        },
        {
          "name": "auth_resetpassword.php",
          "type": "blob",
          "size": 11.1728515625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/global.php');\n\nset_default_action('formidentity');\n\n$action = get_request_var('action');\n$errorMessage = '';\n$return = CACTI_PATH_URL . 'index.php';\n\nswitch ($action) {\n\tcase 'checkpass': /* check if inserted password match password complexivity only */\n\t\t$error = secpass_check_pass(get_nfilter_request_var('password'));\n\n\t\tif ($error != '') {\n\t\t\tprint $error;\n\t\t} else {\n\t\t\tprint 'ok';\n\t\t}\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'formreset': /* check correct hash, if incorrect lets start again */\n\t\t$user_hash = get_filter_request_var('hash', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^[a-zA-Z0-9]+$/')));\n\n\t\t$hash = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth_reset_hashes\n\t\t\tWHERE hash = ?\n\t\t\tLIMIT 1',\n\t\t\tarray($user_hash));\n\n\t\tif (!$hash || $hash['hash'] != $user_hash) {\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Incorrect resetlink hash') . '</span>';\n\t\t\t$action = 'formidentity';\n\t\t}\n\n\t\tbreak;\n\tcase 'resetrequest': /* try to find user in db. If yes and has email, send resetlink */\n\t\t$user = array();\n\t\t$identity = get_nfilter_request_var('identity');\n\n\t\tif (filter_var($identity, FILTER_VALIDATE_EMAIL) ||\n\t\t\tget_filter_request_var('identity', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^[a-zA-Z0-9]+$/')))) {\n\n\t\t\t$user = db_fetch_row_prepared('SELECT id, username, email_address\n\t\t\t\tFROM user_auth WHERE username = ? or email_address = ? LIMIT 1',\n\t\t\t\tarray($identity, $identity));\n\t\t}\n\n\t\tif (cacti_sizeof($user) && $user['email_address'] != '') {\n\t\t\t$hash = generate_hash();\n\n\t\t\tdb_execute_prepared('INSERT INTO user_auth_reset_hashes\n\t\t\t\t(user_id, hash, expiry)\n\t\t\t\tVALUES (?, ?, date_add(now(), interval ? minute))',\n\t\t\t\tarray ($user['id'], $hash, read_config_option('secnotify_resetlink_timeout')));\n\n\t\t\t$replacement = array(\n\t\t\t\tread_config_option('base_url') . CACTI_PATH_URL,\n\t\t\t\t$user['username'],\n\t\t\t\tread_config_option('base_url') . CACTI_PATH_URL . 'auth_resetpassword.php?action=formreset&hash=' . $hash\n\t\t\t);\n\n\t\t\t$search = array('<CACTIURL>', '<USERNAME>', '<PWDRESETLINK>');\n\n\t\t\t$body = str_replace($search, $replacement, read_config_option('secnotify_chpass_message'));\n\n\t\t\tsend_mail($user['email_address'], null, read_config_option('secnotify_chpass_subject'), $body, array(), array(),  true);\n\t\t\tcacti_log(sprintf('NOTE: Reset password request for user %s from IP %s', $user['username'], get_client_addr()), false, 'SYSTEM');\n\n\t\t} else {\n\t\t\tcacti_log(sprintf('NOTE: Reset password request for unknown user \"%s\" from IP %s', db_qstr($identity), get_client_addr()), false, 'SYSTEM');\n\t\t}\n\n\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Reset password token was sent. Check your mailbox') . \"</span>\";\n\t\t$action = 'formidentity';\n\n\t\tbreak;\n\tcase 'resetpassword': /* check and save new password */\n\t\t$user_hash = get_filter_request_var('hash', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^[a-zA-Z0-9]+$/')));\n\n\t\t$hash = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth_reset_hashes\n\t\t\tWHERE hash = ?\n\t\t\tLIMIT 1',\n\t\t\tarray($user_hash));\n\n\t\tif (!$hash || $hash['hash'] != $user_hash) {\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Incorrect resetlink hash') . '</span>';\n\t\t\t$action = 'formidentity';\n\t\t}\n\n\t\t$user = db_fetch_row_prepared('SELECT *\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray($hash['user_id']));\n\n\t\t// Get passwords entered for change\n\t\t$password         = get_nfilter_request_var('password');\n\t\t$password_confirm = get_nfilter_request_var('password_confirm');\n\n\t\t// Secpass checking\n\t\t$error = secpass_check_pass($password);\n\n\t\t// Check new password passes basic checks\n\t\tif ($error != 'ok') {\n\t\t\t$errorMessage = \"<span class='badpassword_message'>$error</span>\";\n\t\t\t$action = 'formreset';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Check user password history\n\t\tif (!secpass_check_history($user['id'], $password)) {\n\t\t\t$action = 'formreset';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Password and Confirmed password checks\n\t\tif ($password !== $password_confirm) {\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Your new passwords do not match, please retype.') . '</span>';\n\t\t\t$action = 'formreset';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Check new password does not match stored password\n\t\tif (compat_password_verify($password, $user['password'])) {\n\t\t\t$errorMessage = \"<span class='badpassword_message'>\" . __('Your new password cannot be the same as the old password. Please try again.') . '</span>';\n\t\t\t$action = 'formreset';\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// If password isn't blank, password change is good to go\n\t\tif ($password != '') {\n\t\t\tif (read_config_option('secpass_expirepass') > 0) {\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\tSET lastchange = ?\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND realm = 0\n\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray(time(), $user['id']));\n\t\t\t}\n\n\t\t\t$history = intval(read_config_option('secpass_history'));\n\n\t\t\tif ($history > 0) {\n\t\t\t\t$h = db_fetch_row_prepared(\"SELECT password, password_history\n\t\t\t\t\tFROM user_auth\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND realm = 0\n\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($user['id']));\n\n\t\t\t\t$op = $h['password'];\n\t\t\t\t$h  = explode('|', $h['password_history']);\n\n\t\t\t\twhile (cacti_count($h) > $history - 1) {\n\t\t\t\t\tarray_shift($h);\n\t\t\t\t}\n\n\t\t\t\t$h[] = $op;\n\t\t\t\t$h   = implode('|', $h);\n\n\t\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\t\tSET password_history = ?\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND realm = 0\n\t\t\t\t\tAND enabled = 'on'\",\n\t\t\t\t\tarray($h, $user['id']));\n\t\t\t}\n\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO user_log\n\t\t\t\t(username, result, time, ip)\n\t\t\t\tVALUES (?, 3, NOW(), ?)',\n\t\t\t\tarray($user['username'], get_client_addr()));\n\n\t\t\tdb_check_password_length();\n\n\t\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\t\tSET must_change_password = '', password = ?\n\t\t\t\tWHERE id = ?\",\n\t\t\t\tarray(compat_password_hash($password,PASSWORD_DEFAULT), $user['id']));\n\n\t\t\tdb_execute_prepared('DELETE FROM user_auth_reset_hashes\n\t\t\t\tWHERE hash = ?',\n\t\t\t\tarray($user_hash));\n\n\t\t\traise_message('password_success');\n\n\t\t\theader('Location: index.php');\n\n\t\t\texit;\n\t\t} else {\n\t\t\t$action = 'resetpassword';\n\t\t\t$return = CACTI_PATH_URL . 'resetpassword.php';\n\t\t}\n\n\t\tbreak;\n}\n\n/* show identity form or reset password form */\nif (api_plugin_hook_function('custom_password', OPER_MODE_NATIVE) == OPER_MODE_RESKIN) {\n\texit;\n}\n\n/* Create tooltip for password complexity */\n$secpass_tooltip = \"<span style='font-weight:normal;'>\" . __('Password requirements include:') . '</span><br>';\n$secpass_body    = '';\n\nif (read_config_option('secpass_minlen') > 0) {\n\t$secpass_body .= __('Must be at least %d characters in length', read_config_option('secpass_minlen'));\n}\n\nif (read_config_option('secpass_reqmixcase') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include mixed case');\n}\n\nif (read_config_option('secpass_reqnum') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include at least 1 number');\n}\n\nif (read_config_option('secpass_reqspec') == 'on') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Must include at least 1 special character');\n}\n\nif (read_config_option('secpass_history') != '0') {\n\t$secpass_body .= ($secpass_body != '' ? '<br>':'') . __('Cannot be reused for %d password changes', read_config_option('secpass_history') + 1);\n}\n\n$secpass_tooltip .= $secpass_body;\n\n$selectedTheme = get_selected_theme();\n\nif ($action == 'formidentity') {\n\t$title_message = __('Please enter your Cacti username or email address.');\n} elseif ($action == 'formreset') {\n\t$title_message = __('Please enter your new Cacti password.');\n} else {\n\t$title_message = __('Reset password problem.');\n}\n\nhtml_auth_header('reset_password', __('Reset Password'), __('Reset Password'), $title_message);\n?>\n\n<?php if ($action == 'formidentity') { ?>\n\t\t<tr>\n\t\t<td class='nowrap' colspan='2'>\n\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='identity' name='identity' size='25' maxlength='50'></td>\n\t\t</tr>\n\t<tr>\n\t\t<td colspan='2' class='nowrap'>\n\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Send reset token by email'); ?>'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' onClick='document.location=\"<?php echo $return;?>\"' value='<?php echo __esc('Return');?>'>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan='2'>\n\t\t\t<input type='hidden' name='action' value='resetrequest'>\n\t\t\t<input type='hidden' name='hash' value='<?php echo get_nfilter_request_var('hash');?>'>\n\t\t</td>\n\t</tr>\n<?php }\n\tif ($action == 'formreset') {?>\n\t<tr>\n\t\t<td><?php print __('New password');?></td>\n\t\t<td class='nowrap'>\n\t\t\t<input type='password' class='ui-state-default ui-corner-all' id='password' name='password' autocomplete='off' size='15' maxlength='25' placeholder='********'><?php print display_tooltip($secpass_tooltip);?>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><?php print __('Confirm password');?></td>\n\t\t<td class='nowrap'>\n\t\t\t<input type='password' class='ui-state-default ui-corner-all' id='password_confirm' name='password_confirm' autocomplete='off' size='15' maxlength='25' placeholder='********'>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan='2' class='nowrap'><input type='submit' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Save'); ?>'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' onClick='document.location=\"<?php echo $return;?>\"' value='<?php echo __esc('Return');?>'>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan='2'>\n\t\t\t<input type='hidden' name='action' value='resetpassword'>\n\t\t\t<input type='hidden' name='hash' value='<?php echo get_nfilter_request_var('hash');?>'>\n\t\t</td>\n\t</tr>\n<?php\n}\n\n$secpass_minlen = read_config_option('secpass_minlen');\n\nhtml_auth_footer('reset_password', $errorMessage, \"\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\tif ($('#identity').length) {\n\t\t\t$('#identity').focus();\n\t\t} else {\n\t\t\t$('#password').focus();\n\t\t}\n\n\t\t/* clear passwords */\n\t\t$('#password').val('');\n\t\t$('#password_confirm').val('');\n\t});\n\t</script>\");\n"
        },
        {
          "name": "automation_devices.php",
          "type": "blob",
          "size": 21.09375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/ping.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Add Device'),\n\t2 => __('Delete Device')\n);\n\n$os_arr = array_rekey(db_fetch_assoc('SELECT DISTINCT os\n\tFROM automation_devices\n\tWHERE os IS NOT NULL AND os!=\"\"'), 'os', 'os');\n\n$status_arr = array(\n\t__('Down'),\n\t__('Up')\n);\n\n$networks = array_rekey(db_fetch_assoc('SELECT an.id, an.name\n\tFROM automation_networks AS an\n\tINNER JOIN automation_devices AS ad\n\tON an.id=ad.network_id\n\tORDER BY name'), 'id', 'name');\n\nset_default_action();\n\nswitch(get_request_var('action')) {\n\tcase 'purge':\n\t\tpurge_discovery_results();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'export':\n\t\texport_discovery_results();\n\n\t\tbreak;\n\n\tdefault:\n\t\tdisplay_discovery_page();\n\n\t\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions, $availability_options;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* add to cacti */\n\t\t\t\t$i = 0;\n\n\t\t\t\tforeach ($selected_items as $id) {\n\t\t\t\t\t$d                        = db_fetch_row_prepared('SELECT * FROM automation_devices WHERE id = ?', array($id));\n\t\t\t\t\t$d['poller_id']           = get_filter_request_var('poller_id');\n\t\t\t\t\t$d['host_template']       = get_filter_request_var('host_template');\n\t\t\t\t\t$d['availability_method'] = get_filter_request_var('availability_method');\n\t\t\t\t\t$d['notes']               = __('Added manually through device automation interface.');\n\t\t\t\t\t$d['snmp_sysName']        = $d['sysName'];\n\n\t\t\t\t\t// pull ping options from network_id\n\t\t\t\t\t$n = db_fetch_row_prepared('SELECT * FROM automation_networks WHERE id = ?', array($d['network_id']));\n\n\t\t\t\t\tif (cacti_sizeof($n)) {\n\t\t\t\t\t\t$d['ping_method']  = $n['ping_method'];\n\t\t\t\t\t\t$d['ping_port']    = $n['ping_port'];\n\t\t\t\t\t\t$d['ping_timeout'] = $n['ping_timeout'];\n\t\t\t\t\t\t$d['ping_retries'] = $n['ping_retries'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$host_id     = automation_add_device($d, true);\n\t\t\t\t\t$description = (trim($d['hostname']) != '' ? $d['hostname'] : $d['ip']);\n\n\t\t\t\t\tif ($host_id) {\n\t\t\t\t\t\traise_message('automation_msg_' . $i, __esc('Device %s Added to Cacti', $description), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('automation_msg_' . $i, __esc('Device %s Not Added to Cacti', $description), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == 2) { /* remove device */\n\t\t\t\tforeach ($selected_items as $id) {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM automation_devices WHERE id = ?', array($id));\n\t\t\t\t}\n\n\t\t\t\traise_message('automation_remove', __('Devices Removed from Cacti Automation database'), MESSAGE_LEVEL_INFO);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_devices.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* default variables */\n\t\t$pollers        = array();\n\t\t$host_templates = array();\n\t\t$poller_id      = 0;\n\n\t\t$availability_method = 0;\n\t\t$host_template       = 0;\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT CONCAT(IF(hostname!=\"\", hostname, \"unknown\"), \" (\", ip, \")\") FROM automation_devices WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($iarray) && get_request_var('drp_action') == '1') { /* add */\n\t\t\t$pollers = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM poller\n\t\t\t\t\tORDER BY name'),\n\t\t\t\t'id', 'name'\n\t\t\t);\n\n\t\t\t$host_templates = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM host_template\n\t\t\t\t\tORDER BY name'),\n\t\t\t\t'id', 'name'\n\t\t\t);\n\n\t\t\t$poller_id = db_fetch_cell_prepared('SELECT id FROM poller WHERE disabled = \"\" LIMIT 1');\n\n\t\t\tif (empty($poller_id)) {\n\t\t\t\t$poller_id = $pollers[0]['id'];\n\t\t\t}\n\n\t\t\t$devices = db_fetch_assoc('SELECT id, sysName, sysDescr\n\t\t\t\tFROM automation_devices\n\t\t\t\tWHERE id IN (' . implode(',', $iarray) . ')');\n\n\t\t\tforeach ($devices as $device) {\n\t\t\t\t$os = automation_find_os($device['sysDescr'], '', $device['sysName']);\n\n\t\t\t\tif (isset($os['host_template']) && $os['host_template'] > 0) {\n\t\t\t\t\tif ($host_template == 0) {\n\t\t\t\t\t\t$host_template       = $os['host_template'];\n\t\t\t\t\t\t$availability_method = $os['availability_method'];\n\t\t\t\t\t} elseif ($host_template != $os['host_template']) {\n\t\t\t\t\t\t$host_template       = 0;\n\t\t\t\t\t\t$availability_method = 0;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$host_template       = 0;\n\t\t\t\t\t$availability_method = 0;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_devices.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Add the following Discovered Device to Cacti.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Add the following Discovered Devices to Cacti.'),\n\t\t\t\t\t'scont'    => __('Add Discovered Device'),\n\t\t\t\t\t'pcont'    => __('Add Discovered Devices'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'poller_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Poller'),\n\t\t\t\t\t\t\t'array'   => $pollers,\n\t\t\t\t\t\t\t'default' => $poller_id,\n\t\t\t\t\t\t\t'name'    => 'name',\n\t\t\t\t\t\t\t'id'      => 'id',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'host_template' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Device Template'),\n\t\t\t\t\t\t\t'array'   => $host_templates,\n\t\t\t\t\t\t\t'default' => $host_template,\n\t\t\t\t\t\t\t'name'    => 'name',\n\t\t\t\t\t\t\t'id'      => 'id',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'availability_method' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Availability Method'),\n\t\t\t\t\t\t\t'array'   => $availability_options,\n\t\t\t\t\t\t\t'default' => $availability_method,\n\t\t\t\t\t\t\t'name'    => 'name',\n\t\t\t\t\t\t\t'id'      => 'id',\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Remove the following Discovered Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Remove the following Discovered Devices.'),\n\t\t\t\t\t'scont'    => __('Remove Discovered Device'),\n\t\t\t\t\t'pcont'    => __('Remove Discovered Devices'),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction display_discovery_page() {\n\tglobal $item_rows, $os_arr, $status_arr, $networks, $actions;\n\n\ttop_header();\n\n\tprocess_sanitize_draw_filter(true);\n\n\t$total_rows = 0;\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$results = get_discovery_results($total_rows, $rows);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('automation_devices.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 12, __('Devices'), 'page', 'main');\n\n\tform_start('automation_devices.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'host_id' => array(\n\t\t\t'display' => __('Imported Device'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'hostname' => array(\n\t\t\t'display' => __('Device Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'ip' => array(\n\t\t\t'display' => __('IP'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'network_id' => array(\n\t\t\t'display' => __('Network'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'sysName' => array(\n\t\t\t'display' => __('SNMP Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'sysLocation' => array(\n\t\t\t'display' => __('Location'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'sysContact' => array(\n\t\t\t'display' => __('Contact'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'sysDescr' => array(\n\t\t\t'display' => __('Description'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'os' => array(\n\t\t\t'display' => __('OS'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'time' => array(\n\t\t\t'display' => __('Uptime'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'snmp' => array(\n\t\t\t'display' => __('SNMP'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'up' => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'mytime' => array(\n\t\t\t'display' => __('Last Check'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$snmp_version        = read_config_option('snmp_version');\n\t$snmp_port           = read_config_option('snmp_port');\n\t$snmp_timeout        = read_config_option('snmp_timeout');\n\t$snmp_username       = read_config_option('snmp_username');\n\t$snmp_password       = read_config_option('snmp_password');\n\t$max_oids            = read_config_option('max_get_size');\n\t$ping_method         = read_config_option('ping_method');\n\t$availability_method = read_config_option('availability_method');\n\n\t$status = array(\"<span class='deviceDown'>\" . __('Down') . '</span>',\"<span class='deviceUp'>\" . __('Up') . '</span>');\n\n\tif (cacti_sizeof($results)) {\n\t\tforeach ($results as $host) {\n\t\t\t$description = get_device_description($host['host_id']);\n\t\t\t$network     = get_network_description($host['network_id']);\n\n\t\t\tform_alternate_row('line' . base64_encode($host['ip']), true);\n\n\t\t\tif ($host['hostname'] == '') {\n\t\t\t\t$host['hostname'] = __('Not Detected');\n\t\t\t}\n\n\t\t\tform_selectable_cell(filter_value($description, ''), $host['id']);\n\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\tform_selectable_cell(filter_value($host['ip'], get_request_var('filter')), $host['id']);\n\t\t\tform_selectable_cell(filter_value($network, ''), $host['id']);\n\t\t\tform_selectable_cell(filter_value(snmp_data($host['sysName']), get_request_var('filter')), $host['id'], '', 'text-align:left');\n\t\t\tform_selectable_cell(filter_value(snmp_data($host['sysLocation']), get_request_var('filter')), $host['id'], '', 'text-align:left');\n\t\t\tform_selectable_cell(filter_value(snmp_data($host['sysContact']), get_request_var('filter')), $host['id'], '', 'text-align:left');\n\t\t\tform_selectable_cell(filter_value(snmp_data($host['sysDescr']), get_request_var('filter')), $host['id'], '', 'text-align:left;white-space:normal;');\n\t\t\tform_selectable_cell(filter_value(snmp_data($host['os']), get_request_var('filter')), $host['id'], '', 'text-align:left');\n\t\t\tform_selectable_cell(snmp_data(get_uptime($host)), $host['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($status[$host['snmp']], $host['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($status[$host['up']], $host['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(substr($host['mytime'],0,16), $host['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($host['ip'], $host['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Devices Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($results)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction get_device_description($id) {\n\tif ($id > 0) {\n\t\t$description = db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($id));\n\n\t\tif (empty($description)) {\n\t\t\treturn __('Removed from Cacti');\n\t\t} else {\n\t\t\treturn $description;\n\t\t}\n\t} else {\n\t\treturn __('Not In Cacti');\n\t}\n}\n\nfunction get_network_description($id) {\n\tif ($id > 0) {\n\t\t$description = db_fetch_cell_prepared('SELECT name FROM automation_networks WHERE id = ?', array($id));\n\n\t\tif (empty($description)) {\n\t\t\treturn __('Removed from Cacti');\n\t\t} else {\n\t\t\treturn $description;\n\t\t}\n\t} else {\n\t\treturn __('Invalid Network');\n\t}\n}\n\nfunction get_discovery_results(&$total_rows = 0, $rows = 0, $export = false) {\n\tglobal $os_arr, $status_arr, $networks, $actions;\n\n\t$sql_where  = '';\n\t$status     = get_request_var('status');\n\t$network    = get_request_var('network');\n\t$snmp       = get_request_var('snmp');\n\t$os         = get_request_var('os');\n\t$filter     = get_request_var('filter');\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\tif ($status != '-1') {\n\t\t$sql_where   .= 'WHERE up = ?';\n\t\t$sql_params[] = $status;\n\t}\n\n\tif ($network > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'network_id = ?';\n\t\t$sql_params[] = $network;\n\t}\n\n\tif ($snmp != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'snmp = ?';\n\t\t$sql_params[] = $snmp;\n\t}\n\n\tif ($os != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'os= ?';\n\t\t$sql_params[] = $network;\n\t}\n\n\tif ($filter != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(hostname LIKE ? OR ip LIKE ? OR sysName LIKE ? OR sysDescr ? OR sysLocation ? OR sysContact LIKE ?)';\n\n\t\t$sql_params[] = \"%$filter%\";\n\t\t$sql_params[] = \"%$filter%\";\n\t\t$sql_params[] = \"%$filter%\";\n\t\t$sql_params[] = \"%$filter%\";\n\t\t$sql_params[] = \"%$filter%\";\n\t\t$sql_params[] = \"%$filter%\";\n\t}\n\n\tif ($export) {\n\t\treturn db_fetch_assoc_prepared(\"SELECT *\n\t\t\tFROM automation_devices\n\t\t\t$sql_where\n\t\t\tORDER BY INET_ATON(ip)\",\n\t\t\t$sql_params);\n\t} else {\n\t\t$total_rows = db_fetch_cell_prepared(\"SELECT\n\t\t\tCOUNT(*)\n\t\t\tFROM automation_devices\n\t\t\t$sql_where\",\n\t\t\t$sql_params);\n\n\t\t$page      = get_request_var('page');\n\t\t$sql_order = get_order_string();\n\t\t$sql_limit = ' LIMIT ' . ($rows * ($page - 1)) . ',' . $rows;\n\n\t\t$sql_query = \"SELECT *,sysUpTime snmp_sysUpTimeInstance, FROM_UNIXTIME(time) AS mytime\n\t\t\tFROM automation_devices\n\t\t\t$sql_where\n\t\t\t$sql_order\n\t\t\t$sql_limit\";\n\n\t\treturn db_fetch_assoc_prepared($sql_query, $sql_params);\n\t}\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $os_arr, $status_arr, $networks;\n\n\t$any          = array(-1 => __('Any'));\n\t$networks_arr = $any + $networks;\n\t$status_arr   = $any + $status_arr;\n\t$os_arr       = $any + $os_arr;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'network' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Network'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $networks_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'os' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('OS'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $os_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'snmp' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('SNMP'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Devices'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'   => 'submit',\n\t\t\t\t'display'  => __('Go'),\n\t\t\t\t'title'    => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'   => 'button',\n\t\t\t\t'display'  => __('Clear'),\n\t\t\t\t'title'    => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'export' => array(\n\t\t\t\t'method'   => 'button',\n\t\t\t\t'display'  => __('Export'),\n\t\t\t\t'action'   => 'default',\n\t\t\t\t'title'    => __('Export the Discovered Devices to CSV'),\n\t\t\t\t'callback' => 'document.location = \\'automation_devices.php?action=export\\''\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'   => 'button',\n\t\t\t\t'display'  => __('Purge'),\n\t\t\t\t'action'   => 'default',\n\t\t\t\t'title'    => __('Purge the Discovered Devices from the Database'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'hostname',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\tglobal $item_rows, $filters, $os_arr, $status_arr, $networks, $actions;\n\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Discovered Devices'), 'automation_devices.php', 'form_devices', 'sess_autom_device');\n\n\t$pageFilter->rows_label = __('Devices');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction export_discovery_results() {\n\tprocess_sanitize_draw_filter(false);\n\n\t$results = get_discovery_results($total_rows, 0, true);\n\n\theader('Content-type: application/csv');\n\theader('Content-Disposition: attachment; filename=discovery_results.csv');\n\tprint \"Host,IP,System Name,System Location,System Contact,System Description,OS,Uptime,SNMP,Status\\n\";\n\n\tif (cacti_sizeof($results)) {\n\t\tforeach ($results as $host) {\n\t\t\tif (isset($host['sysUpTime']) && $host['sysUpTime'] != 0) {\n\t\t\t\t$days   = intval($host['sysUpTime'] / 8640000);\n\t\t\t\t$hours  = intval(($host['sysUpTime'] - ($days * 8640000)) / 360000);\n\t\t\t\t$uptime = $days . ' days ' . $hours . ' hours';\n\t\t\t} else {\n\t\t\t\t$uptime = '';\n\t\t\t}\n\n\t\t\tforeach ($host as $h=>$r) {\n\t\t\t\t$host['$h'] = str_replace(',','',$r);\n\t\t\t}\n\n\t\t\tprint($host['hostname'] == '' ? __('Not Detected'):$host['hostname']) . ',';\n\t\t\tprint $host['ip'] . ',';\n\t\t\tprint export_data($host['sysName']) . ',';\n\t\t\tprint export_data($host['sysLocation']) . ',';\n\t\t\tprint export_data($host['sysContact']) . ',';\n\t\t\tprint export_data($host['sysDescr']) . ',';\n\t\t\tprint export_data($host['os']) . ',';\n\t\t\tprint export_data($uptime) . ',';\n\t\t\tprint($host['snmp'] == 1 ? __('Up'):__('Down')) . ',';\n\t\t\tprint($host['up'] == 1 ? __('Up'):__('Down')) . \"\\n\";\n\t\t}\n\t}\n}\n\nfunction purge_discovery_results() {\n\tget_filter_request_var('network');\n\n\tif (get_request_var('network') > 0) {\n\t\tdb_execute_prepared('DELETE FROM automation_devices WHERE network_id = ?', array(get_request_var('network')));\n\t} else {\n\t\tdb_execute('TRUNCATE TABLE automation_devices');\n\t}\n\n\theader('Location: automation_devices.php');\n\n\texit;\n}\n\nfunction snmp_data($item) {\n\tif ($item == '') {\n\t\treturn __('N/A');\n\t} else {\n\t\treturn html_escape(str_replace(':',' ', $item));\n\t}\n}\n\nfunction export_data($item) {\n\tif ($item == '') {\n\t\treturn 'N/A';\n\t} else {\n\t\treturn $item;\n\t}\n}\n"
        },
        {
          "name": "automation_graph_rules.php",
          "type": "blob",
          "size": 34.568359375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/data_query.php');\n\n$actions = array(\n\tAUTOMATION_ACTION_GRAPH_DUPLICATE => __('Duplicate'),\n\tAUTOMATION_ACTION_GRAPH_ENABLE    => __('Enable'),\n\tAUTOMATION_ACTION_GRAPH_EXPORT    => __('Export'),\n\tAUTOMATION_ACTION_GRAPH_DISABLE   => __('Disable'),\n\tAUTOMATION_ACTION_GRAPH_DELETE    => __('Delete'),\n);\n\n/* sanitize the tab */\nget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tautomation_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'actions':\n\t\tautomation_graph_rules_form_actions();\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tautomation_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tautomation_export();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tautomation_graph_rules_item_movedown();\n\n\t\theader('Location: automation_graph_rules.php?action=edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tautomation_graph_rules_item_moveup();\n\n\t\theader('Location: automation_graph_rules.php?action=edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tautomation_graph_rules_item_remove();\n\n\t\theader('Location: automation_graph_rules.php?action=edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tautomation_graph_rules_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'qedit':\n\t\tautomation_change_query_type();\n\n\t\theader('Location: automation_graph_rules.php?action=edit&name=' . get_request_var('name') . '&id=' . get_filter_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'remove':\n\t\tautomation_graph_rules_remove();\n\n\t\theader('Location: automation_graph_rules.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tautomation_graph_rules_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tautomation_graph_rules();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction automation_export() {\n\tprocess_sanitize_draw_filter(false);\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif(cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = automation_graph_rule_export($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$snmp_option_ids[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = automation_graph_rule_export($snmp_option_ids);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t}\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: automation_graph_rules.php');\n\t\texit;\n\t}\n}\n\nfunction automation_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import Graph Rules from Local File',),\n\t\t\t'description' => __('If the JSON file containing the Graph Rules data is located on your local machine, select it here.'),\n\t\t\t'method' => 'file',\n\t\t\t'accept' => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Import Graph Rules from Text'),\n\t\t\t'description' => __('If you have the JSON file containing the Graph Rules data as text, you can paste it into this box to import it.'),\n\t\t\t'value' => '',\n\t\t\t'default' => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class' => 'textAreaNotes'\n\t\t)\n\t);\n\n\tform_start('automation_graph_rules.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has Imported the following Graph Rules'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Graph Rules'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import Graph Rules') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction automation_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = automation_validate_upload();\n\t}\n\n\t$return_data = automation_graph_rule_import($json_data);\n\n\tif (sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Graph Rules Import Succeeded!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tautomation_log('NOTE: Automation Graph Rules Import Error!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Graph Rules Import Failed!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: automation_graph_rules.php?action=import');\n\n\texit();\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_automation_graph_rule')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']            = get_nfilter_request_var('id');\n\t\t$save['hash']          = get_hash_automation(get_request_var('id'), 'automation_graph_rules');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['snmp_query_id'] = form_input_validate(get_nfilter_request_var('snmp_query_id'), 'snmp_query_id', '^[0-9]+$', false, 3);\n\t\t$save['graph_type_id'] = (isset_request_var('graph_type_id')) ? form_input_validate(get_nfilter_request_var('graph_type_id'), 'graph_type_id', '^[0-9]+$', false, 3) : 0;\n\t\t$save['enabled']       = (isset_request_var('enabled') ? 'on' : '');\n\n\t\tif (!is_error_message()) {\n\t\t\t$rule_id = sql_save($save, 'automation_graph_rules');\n\n\t\t\tif ($rule_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_graph_rules.php?action=edit&id=' . (empty($rule_id) ? get_nfilter_request_var('id') : $rule_id));\n\t} elseif (isset_request_var('save_component_automation_graph_rule_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\t$save              = array();\n\t\t$save['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['hash']      = get_hash_automation(get_request_var('id_item'), 'automation_graph_rule_items');\n\t\t$save['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);\n\t\t$save['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);\n\t\t$save['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_graph_rule_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_graph_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($item_id) ? get_request_var('item_id') : $item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_GRAPH_ACTION);\n\t\t} else {\n\t\t\theader('Location: automation_graph_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_GRAPH_ACTION);\n\t\t}\n\t} elseif (isset_request_var('save_component_automation_match_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\tunset($save);\n\t\t$save['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['hash']      = get_hash_automation(get_request_var('item_idid'), 'automation_match_rule_items');\n\t\t$save['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['rule_type'] = AUTOMATION_RULE_TYPE_GRAPH_MATCH;\n\t\t$save['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);\n\t\t$save['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);\n\t\t$save['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_match_rule_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_graph_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($item_id) ? get_request_var('item_id') : $item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_GRAPH_MATCH);\n\t\t} else {\n\t\t\theader('Location: automation_graph_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_GRAPH_MATCH);\n\t\t}\n\t} else {\n\t\traise_message(2);\n\t\theader('Location: automation_graph_rules.php');\n\t}\n}\n\nfunction automation_graph_rules_form_actions() {\n\tglobal $config, $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_GRAPH_DELETE) { /* delete */\n\t\t\t\tdb_execute('DELETE FROM automation_graph_rules WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM automation_graph_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t\tdb_execute('DELETE FROM automation_match_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_GRAPH_DUPLICATE) { /* duplicate */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions duplicate: ' . $selected_items[$i] . ' name: ' . get_nfilter_request_var('name_format'), AUTOMATION_LOG_HIGH);\n\t\t\t\t\tduplicate_automation_graph_rules($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_GRAPH_ENABLE) { /* enable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions enable: ' . $selected_items[$i], AUTOMATION_LOG_HIGH);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_graph_rules\n\t\t\t\t\t\tSET enabled='on'\n\t\t\t\t\t\tWHERE id = ?\",\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_GRAPH_DISABLE) { /* disable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions disable: ' . $selected_items[$i], AUTOMATION_LOG_HIGH);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_graph_rules\n\t\t\t\t\t\tSET enabled=''\n\t\t\t\t\t\tWHERE id = ?\",\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_GRAPH_EXPORT) { /* export */\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"automation_graph_rules.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'automation_graph_rules.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_graph_rules.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_graph_rules WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_graph_rules.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\tAUTOMATION_ACTION_GRAPH_DELETE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Graph Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Graph Rules.'),\n\t\t\t\t\t'scont'    => __('Delete Graph Rule'),\n\t\t\t\t\t'pcont'    => __('Delete Graph Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_GRAPH_ENABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Graph Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Graph Rules.'),\n\t\t\t\t\t'scont'    => __('Enable Graph Rule'),\n\t\t\t\t\t'pcont'    => __('Enable Graph Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_GRAPH_DISABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Graph Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Graph Rules.'),\n\t\t\t\t\t'scont'    => __('Disable Graph Rule'),\n\t\t\t\t\t'pcont'    => __('Disable Graph Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_GRAPH_EXPORT => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following Graph Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export following Graph Rules.'),\n\t\t\t\t\t'scont'    => __('Export Graph Rule'),\n\t\t\t\t\t'pcont'    => __('Export Graph Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_GRAPH_DUPLICATE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Graph Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Graph Rules.'),\n\t\t\t\t\t'scont'    => __('Duplicate Graph Rule'),\n\t\t\t\t\t'pcont'    => __('Duplicate Graph Rules'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'name_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<rule_name> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction automation_graph_rules_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_MATCH) {\n\t\tmove_item_down('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_ACTION) {\n\t\tmove_item_down('automation_graph_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_graph_rules_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_MATCH) {\n\t\tmove_item_up('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_ACTION) {\n\t\tmove_item_up('automation_graph_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_graph_rules_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_MATCH) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_ACTION) {\n\t\tdb_execute_prepared('DELETE FROM automation_graph_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t}\n}\n\nfunction automation_graph_rules_item_edit() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tglobal_item_edit(get_request_var('id'), get_request_var('item_id'), get_request_var('rule_type'));\n\n\tform_hidden_box('rule_type', get_request_var('rule_type'), get_request_var('rule_type'));\n\tform_hidden_box('id', (isset_request_var('id') ? get_request_var('id') : '0'), '');\n\tform_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_GRAPH_MATCH) {\n\t\tform_hidden_box('save_component_automation_match_item', '1', '');\n\t} else {\n\t\tform_hidden_box('save_component_automation_graph_rule_item', '1', '');\n\t}\n\n\tform_save_button('automation_graph_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type='. get_request_var('rule_type'));\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\ttoggle_operation();\n\t\ttoggle_operator();\n\t});\n\n\tfunction toggle_operation() {\n\t\tif ($('#operation').val() == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t\t$('#field').val('');\n\t\t\t$('#field').prop('disabled', true);\n\t\t\t$('#operator').val(0);\n\t\t\t$('#operator').prop('disabled', true);\n\t\t\t$('#pattern').val('');\n\t\t\t$('#pattern').prop('disabled', true);\n\t\t} else {\n\t\t\t$('#field').prop('disabled', false);\n\t\t\t$('#operator').prop('disabled', false);\n\t\t\t$('#pattern').prop('disabled', false);\n\t\t}\n\t}\n\n\tfunction toggle_operator() {\n\t\tif ($('#operator').val() == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t} else {\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction automation_graph_rules_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM automation_match_rule_items\n\t\tWHERE rule_id = ?\n\t\tAND rule_type = ?',\n\t\tarray(get_request_var('id'), AUTOMATION_RULE_TYPE_GRAPH_MATCH));\n\n\tdb_execute_prepared('DELETE FROM automation_graph_rule_items\n\t\tWHERE rule_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE FROM automation_graph_rules\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction automation_change_query_type() {\n\t$id = get_filter_request_var('id');\n\n\tif (isset_request_var('snmp_query_id') && $id > 0) {\n\t\t$snmp_query_id = get_filter_request_var('snmp_query_id');\n\t\t$name          = get_nfilter_request_var('name');\n\n\t\tdb_execute_prepared('UPDATE automation_graph_rules\n\t\t\tSET snmp_query_id = ?, name = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray($snmp_query_id, $name, $id));\n\n\t\t$graph_type = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE snmp_query_id = ?\n\t\t\tORDER BY name\n\t\t\tLIMIT 1', array($snmp_query_id));\n\n\t\tdb_execute_prepared('UPDATE automation_graph_rules\n\t\t\tSET graph_type_id = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray($graph_type, $id));\n\t} elseif (isset_request_var('graph_type_id') && $id > 0) {\n\t\t$snmp_query_id = get_filter_request_var('graph_type_id');\n\t\t$name          = get_nfilter_request_var('name');\n\n\t\tdb_execute_prepared('UPDATE automation_graph_rules\n\t\t\tSET graph_type_id = ?, name = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray($snmp_query_id, $name, $id));\n\t}\n}\n\nfunction automation_graph_rules_edit() {\n\tglobal $config;\n\tglobal $fields_automation_graph_rules_edit1;\n\tglobal $fields_automation_graph_rules_edit2;\n\tglobal $fields_automation_graph_rules_edit3;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\tget_filter_request_var('graph_type_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$rule = db_fetch_row_prepared('SELECT *\n\t\t\tFROM automation_graph_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (!isempty_request_var('graph_type_id')) {\n\t\t\t$rule['graph_type_id'] = get_request_var('graph_type_id');\n\t\t}\n\n\t\t$header_label = __esc('Rule Selection [edit: %s]', $rule['name']);\n\n\t\t$tabs = array(\n\t\t\t'rule'    => __('Rule'),\n\t\t\t'hosts'   => __('Matching Devices'),\n\t\t\t'objects' => __('Matching Indexes')\n\t\t);\n\n\t\thtml_sub_tabs($tabs, 'action=edit&id=' . get_request_var('id'));\n\t} else {\n\t\t$rule = array(\n\t\t\t'name'          => get_request_var('name'),\n\t\t\t'snmp_query_id' => get_request_var('snmp_query_id'),\n\t\t);\n\n\t\t$header_label = __('Rule Selection [new]');\n\n\t\t$tabs = array(\n\t\t\t'rule'    => __('Rule')\n\t\t);\n\n\t\thtml_sub_tabs($tabs, 'action=edit&id=' . get_request_var('id'));\n\t}\n\n\tif (get_nfilter_request_var('tab') == 'rule') {\n\t\tform_start('automation_graph_rules.php', 'chk');\n\n\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\tif (!isempty_request_var('id')) {\n\t\t\t/* display whole rule */\n\t\t\t$form_array = $fields_automation_graph_rules_edit1 +\n\t\t\t\t$fields_automation_graph_rules_edit2 + $fields_automation_graph_rules_edit3;\n\t\t} else {\n\t\t\t/* display first part of rule only and request user to proceed */\n\t\t\t$form_array = $fields_automation_graph_rules_edit1;\n\t\t}\n\n\t\tif (isset_request_var('name')) {\n\t\t\t$rule['name'] = get_request_var('name');\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($form_array, (isset($rule) ? $rule : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\tform_hidden_box('id', (isset($rule['id']) ? $rule['id'] : '0'), '');\n\t\tform_hidden_box('item_id', (isset($rule['item_id']) ? $rule['item_id'] : '0'), '');\n\t\tform_hidden_box('save_component_automation_graph_rule', '1', '');\n\n\t\t/*\n\t\t * display the rule items -------------------------------------------------------------------------------\n\t\t */\n\n\t\tif (isset($rule['id'])) {\n\t\t\t# display graph rules for host match\n\t\t\tdisplay_match_rule_items(__('Device Selection Criteria'), $rule, AUTOMATION_RULE_TYPE_GRAPH_MATCH, 'automation_graph_rules.php');\n\n\t\t\t# fetch graph action rules\n\t\t\tdisplay_graph_rule_items(__('Graph Creation Criteria'), $rule, AUTOMATION_RULE_TYPE_GRAPH_ACTION, 'automation_graph_rules.php');\n\t\t}\n\n\t\tform_save_button('automation_graph_rules.php', 'return');\n\n\t\tprint '<br>';\n\t} elseif (get_nfilter_request_var('tab') == 'hosts') {\n\t\tdisplay_matching_hosts($rule, AUTOMATION_RULE_TYPE_GRAPH_MATCH, 'automation_graph_rules.php?action=edit&id=' . get_request_var('id'));\n\t} elseif (get_nfilter_request_var('tab') == 'objects') {\n\t\tdisplay_new_graphs($rule, 'automation_graph_rules.php?action=edit&id=' . get_request_var('id'));\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applySNMPQueryIdChange() {\n\t\tstrURL  = 'automation_graph_rules.php?action=qedit';\n\t\tstrURL += '&id=' + $('#id').val();\n\t\tstrURL += '&name=' + $('#name').val();\n\t\tstrURL += '&snmp_query_id=' + $('#snmp_query_id').val();\n\t\tloadUrl({url:strURL})\n\t}\n\n\tfunction applySNMPQueryTypeChange() {\n\t\tstrURL  = 'automation_graph_rules.php?action=qedit'\n\t\tstrURL += '&id=' + $('#id').val();\n\t\tstrURL += '&name=' + $('#name').val();\n\t\tstrURL += '&graph_type_id=' + $('#graph_type_id').val();\n\t\tloadUrl({url:strURL})\n\t}\n\n\t$(function() {\n\t\t$('#show_device_sql').click(function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\t$('#sql_device_query').dialog({\n\t\t\t\t'title': '<?php print __('SQL Debug Output');?>',\n\t\t\t\t'autoOpen': true,\n\t\t\t\t'width': 700\n\t\t\t});\n\t\t});\n\n\t\t$('#show_sql').click(function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\t$('#sql_query').dialog({\n\t\t\t\t'title': '<?php print __('SQL Debug Output');?>',\n\t\t\t\t'autoOpen': true,\n\t\t\t\t'width': 700\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$any = array(-1 => __('Any'));\n\n\t$data_queries = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT sq.id, sq.name\n\t\t\tFROM automation_graph_rules AS ar\n\t\t\tLEFT JOIN snmp_query AS sq\n\t\t\tON ar.snmp_query_id=sq.id\n\t\t\tORDER BY sq.name'),\n\t\t'id', 'name'\n\t);\n\n\t$status_arr = array(\n\t\t'-1' => __('Any'),\n\t\t'-2' => __('Enabled'),\n\t\t'-3' => __('Disabled')\n\t);\n\n\t$queries_arr  = $any + $data_queries;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'snmp_query_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Data Query'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $queries_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Graph Rules'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'import' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Import'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Import Graph Rules'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Graph Rules'), 'automation_graph_rules.php', 'form_automation', 'sess_autom_gr', 'automation_graph_rules.php?action=edit');\n\n\t$pageFilter->rows_label = __('Graph Rules');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction automation_graph_rules() {\n\tglobal $actions, $config, $item_rows;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where    = 'WHERE (agr.name LIKE ? OR sqg.name LIKE ? OR sq.name LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . \"agr.enabled = 'on'\";\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . \"agr.enabled = ''\";\n\t}\n\n\tif (get_request_var('snmp_query_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ' : ' WHERE ') . 'agr.snmp_query_id = ?';\n\t\t$sql_params[] = get_request_var('snmp_query_id');\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(agr.id)\n\t\tFROM automation_graph_rules AS agr\n\t\tLEFT JOIN snmp_query AS sq\n\t\tON (agr.snmp_query_id=sq.id)\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$automation_graph_rules_list = db_fetch_assoc_prepared(\"SELECT agr.id, agr.name,\n\t\tagr.snmp_query_id, agr.graph_type_id,\n\t\tagr.enabled, sq.name AS snmp_query_name, sqg.name AS graph_type_name\n\t\tFROM automation_graph_rules AS agr\n\t\tLEFT JOIN snmp_query AS sq\n\t\tON (agr.snmp_query_id=sq.id)\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON (agr.graph_type_id=sqg.id)\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$nav = html_nav_bar('automation_graph_rules.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Graph Rules'), 'page', 'main');\n\n\tform_start('automation_graph_rules.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Rule Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this rule.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this rule.  Useful in performing debugging and automation.')\n\t\t),\n\t\t'snmp_query_name' => array(\n\t\t\t'display' => __('Data Query'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'graph_type_name' => array(\n\t\t\t'display' => __('Graph Type'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($automation_graph_rules_list)) {\n\t\tforeach ($automation_graph_rules_list as $automation_graph_rules) {\n\t\t\t$snmp_query_name \t\t= ((empty($automation_graph_rules['snmp_query_name'])) \t ? __('None') : html_escape($automation_graph_rules['snmp_query_name']));\n\t\t\t$graph_type_name \t\t= ((empty($automation_graph_rules['graph_type_name'])) \t ? __('None') : html_escape($automation_graph_rules['graph_type_name']));\n\n\t\t\tform_alternate_row('line' . $automation_graph_rules['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($automation_graph_rules['name'], get_request_var('filter'), 'automation_graph_rules.php?action=edit&id=' . $automation_graph_rules['id'] . '&page=1'), $automation_graph_rules['id']);\n\t\t\tform_selectable_cell($automation_graph_rules['id'], $automation_graph_rules['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(filter_value($snmp_query_name, get_request_var('filter')), $automation_graph_rules['id']);\n\t\t\tform_selectable_cell(filter_value($graph_type_name, get_request_var('filter')), $automation_graph_rules['id']);\n\t\t\tform_selectable_cell($automation_graph_rules['enabled'] ? __('Enabled') : __('Disabled'), $automation_graph_rules['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($automation_graph_rules['name'], $automation_graph_rules['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Graph Rules Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($automation_graph_rules_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "automation_networks.php",
          "type": "blob",
          "size": 38.921875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include cacti base functions */\ninclude('./include/auth.php');\ninclude_once('./lib/api_scheduler.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/poller.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t8 => __('Change Network Settings'),\n\t7 => __('Duplicate'),\n\t3 => __('Enable'),\n\t6 => __('Export'),\n\t4 => __('Discover Now'),\n\t5 => __('Cancel Discovery')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tautomation_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tautomation_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tautomation_export();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tnetwork_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tnetworks();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction automation_export() {\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif(cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = automation_network_export($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$snmp_option_ids[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = automation_network_export($snmp_option_ids);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction automation_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import Network Discovery Rule from Local File',),\n\t\t\t'description' => __('If the JSON file containing the Network Discovery Rule data is located on your local machine, select it here.'),\n\t\t\t'method' => 'file',\n\t\t\t'accept' => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Import Network Discovery Rule from Text'),\n\t\t\t'description' => __('If you have the JSON file containing the Network Discovery Rule data as text, you can paste it into this box to import it.'),\n\t\t\t'value' => '',\n\t\t\t'default' => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class' => 'textAreaNotes'\n\t\t)\n\t);\n\n\tform_start('automation_networks.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has imported the following items:'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Network Discovery Rule'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import Network Discovery Rule') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction automation_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = automation_validate_upload();\n\t}\n\n\t$return_data = automation_network_import($json_data);\n\n\tif (sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tcacti_log('NOTE: Automation Network Rule Import Succeeded!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tcacti_log('NOTE: Automation Network Rule Import Error!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tcacti_log('NOTE: Automation Network Rule Import Failed!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: automation_networks.php?action=import');\n\n\texit();\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_network')) {\n\t\t$network_id = api_networks_save($_POST);\n\n\t\theader('Location: automation_networks.php?action=edit&id=' . (empty($network_id) ? get_nfilter_request_var('id') : $network_id));\n\t}\n}\n\nfunction api_networks_remove($network_id) {\n\tdb_execute_prepared(\n\t\t'DELETE FROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n\n\tdb_execute_prepared(\n\t\t'DELETE FROM automation_devices\n\t\tWHERE network_id = ?',\n\t\tarray($network_id)\n\t);\n}\n\nfunction api_networks_enable($network_id) {\n\tdb_execute_prepared(\n\t\t'UPDATE automation_networks\n\t\tSET enabled=\"on\"\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n}\n\nfunction api_networks_disable($network_id) {\n\tdb_execute_prepared(\n\t\t'UPDATE automation_networks\n\t\tSET enabled=\"\"\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n}\n\nfunction api_networks_cancel($network_id) {\n\tdb_execute_prepared(\n\t\t'UPDATE IGNORE automation_processes\n\t\tSET command=\"cancel\"\n\t\tWHERE task=\"tmaster\"\n\t\tAND network_id = ?',\n\t\tarray($network_id)\n\t);\n}\n\nfunction api_networks_duplicate($network_id) {\n\t$save = db_fetch_row_prepared('SELECT *\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tif (cacti_sizeof($save)) {\n\t\t$save['id']           = 0;\n\t\t$save['name']         = $save['name'] . ' (Duplicate)';\n\t\t$save['enabled']      = '';\n\t\t$save['up_hosts']     = 0;\n\t\t$save['snmp_hosts']   = 0;\n\t\t$save['next_start']   = '0000-00-00';\n\t\t$save['last_runtime'] = 0;\n\t\t$save['last_started'] = '0000-00-00';\n\t\t$save['last_status']  = '';\n\n\t\t$network_id = sql_save($save, 'automation_networks');\n\t}\n}\n\n/**\n * api_networks_change_options - Given a network_id and the post\n *   variable, update a series of Network settings\n *\n * @param (mixed) A network id or an array of network ids\n * @param (array) An array of post variables\n *\n * @return (void)\n */\nfunction api_networks_change_options($network_ids, $post) {\n\tif (!is_array($network_ids)) {\n\t\t$network_ids = array($network_ids);\n\t}\n\n\t$fields = network_get_field_array();\n\n\tforeach ($network_ids as $network_id) {\n\t\tforeach ($fields as $field_name => $field_array) {\n\t\t\tif (isset($post[\"t_$field_name\"])) {\n\t\t\t\tdb_execute_prepared(\"UPDATE automation_networks\n\t\t\t\t\tSET $field_name = ?\n\t\t\t\t\tWHERE id = ?\",\n\t\t\t\t\tarray(get_nfilter_request_var($field_name), $network_id));\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction api_networks_discover($network_id, $discover_debug, $discover_dryrun) {\n\tglobal $config;\n\n\t$enabled   = db_fetch_cell_prepared(\n\t\t'SELECT enabled\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n\n\t$running = db_fetch_cell_prepared(\n\t\t'SELECT count(*)\n\t\tFROM automation_processes\n\t\tWHERE network_id = ?',\n\t\tarray($network_id)\n\t);\n\n\t$name = db_fetch_cell_prepared(\n\t\t'SELECT name\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n\n\t$poller_id = db_fetch_cell_prepared(\n\t\t'SELECT poller_id\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id)\n\t);\n\n\tif ($enabled == 'on') {\n\t\tif (!$running) {\n\t\t\tif ($config['poller_id'] == $poller_id) {\n\t\t\t\t$args_debug  = ($discover_debug) ? ' --debug' : '';\n\t\t\t\t$args_debug .= ($discover_dryrun) ? ' --dryrun' : '';\n\t\t\t\texec_background(read_config_option('path_php_binary'), '-q ' . read_config_option('path_webroot') . \"/poller_automation.php --network=$network_id --force\" . $args_debug);\n\t\t\t} else {\n\t\t\t\t$args_debug = ($discover_debug) ? '&debug=true' : '';\n\n\t\t\t\t$url = CACTI_PATH_URL . 'remote_agent.php?action=discover&network=' . $network_id . $args_debug;\n\n\t\t\t\t$response = call_remote_data_collector($poller_id, $url, 'AUTOM8');\n\t\t\t}\n\t\t} else {\n\t\t\traise_message('automation_message', __esc('Can Not Restart Discovery for Discovery in Progress for Network \\'%s\\'', $name), MESSAGE_LEVEL_ERROR);\n\t\t}\n\t} else {\n\t\traise_message('automation_message', __esc('Can Not Perform Discovery for Disabled Network \\'%s\\'', $name), MESSAGE_LEVEL_ERROR);\n\t}\n\n\tforce_session_data();\n}\n\nfunction api_networks_save($post) {\n\tif (empty($post['network_id'])) {\n\t\t$save['id']            = form_input_validate($post['id'], 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']          = get_hash_automation($post['id'], 'automation_networks');\n\n\t\t/* general information */\n\t\t$save['name']          = form_input_validate($post['name'], 'name', '', false, 3);\n\t\t$save['poller_id']     = form_input_validate($post['poller_id'], 'poller_id', '^[0-9]+$', false, 3);\n\t\t$save['site_id']       = form_input_validate($post['site_id'], 'site_id', '^[0-9]+$', false, 3);\n\t\t$save['subnet_range']  = form_input_validate($post['subnet_range'], 'subnet_range', '', false, 3);\n\t\t$save['ignore_ips']    = form_input_validate($post['ignore_ips'], 'ignore_ips', '', true, 3);\n\t\t$save['dns_servers']   = form_input_validate($post['dns_servers'], 'dns_servers', '', true, 3);\n\n\t\t$save['threads']       = form_input_validate($post['threads'], 'threads', '^[0-9]+$', false, 3);\n\t\t$save['run_limit']     = form_input_validate($post['run_limit'], 'run_limit', '^[0-9]+$', false, 3);\n\n\t\t$save['enabled']              = (isset($post['enabled']) ? 'on' : '');\n\n\t\t/* notification settings */\n\t\t$save['notification_enabled'] = (isset($post['notification_enabled']) ? 'on' : '');\n\t\t$save['notification_email']   = form_input_validate($post['notification_email'], 'notification_email', '', true, 3);\n\n\t\t$save['notification_fromname']  = form_input_validate($post['notification_fromname'], 'notification_fromname', '', true, 3);\n\t\t$save['notification_fromemail'] = form_input_validate($post['notification_fromemail'], 'notification_fromemail', '', true, 3);\n\n\t\t$save['enable_netbios']       = (isset($post['enable_netbios']) ? 'on' : '');\n\t\t$save['add_to_cacti']         = (isset($post['add_to_cacti']) ? 'on' : '');\n\t\t$save['same_sysname']         = (isset($post['same_sysname']) ? 'on' : '');\n\t\t$save['rerun_data_queries']   = (isset($post['rerun_data_queries']) ? 'on' : '');\n\n\t\t/* discovery connectivity settings */\n\t\t$save['snmp_id']       = form_input_validate($post['snmp_id'], 'snmp_id', '^[0-9]+$', false, 3);\n\t\t$save['ping_method']   = form_input_validate($post['ping_method'], 'ping_method', '^[0-9]+$', false, 3);\n\t\t$save['ping_port']     = form_input_validate($post['ping_port'], 'ping_port', '^[0-9]+$', false, 3);\n\t\t$save['ping_timeout']  = form_input_validate($post['ping_timeout'], 'ping_timeout', '^[0-9]+$', false, 3);\n\t\t$save['ping_retries']  = form_input_validate($post['ping_retries'], 'ping_retries', '^[0-9]+$', false, 3);\n\n\t\t$save = api_scheduler_augment_save($save, $post);\n\n\t\t/* validate the network definitions and rais error if failed */\n\t\t$continue  = true;\n\t\t$total_ips = 0;\n\t\t$networks  = explode(',', $save['subnet_range']);\n\n\t\tif (cacti_sizeof($networks)) {\n\t\t\tforeach ($networks as $net) {\n\t\t\t\t$ips = automation_calculate_total_ips($net);\n\n\t\t\t\tif ($ips !== false) {\n\t\t\t\t\t$total_ips += $ips;\n\t\t\t\t} else {\n\t\t\t\t\t$continue = false;\n\t\t\t\t\traise_message('automation_message', __esc('ERROR: Network \\'%s\\' is Invalid.', $net), MESSAGE_LEVEL_ERROR);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($continue) {\n\t\t\t$save['total_ips'] = $total_ips;\n\n\t\t\t$network_id = 0;\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$network_id = sql_save($save, 'automation_networks');\n\n\t\t\t\tif ($network_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $network_id;\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $config, $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_remove($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_enable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* disable */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_disable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* run now */\n\t\t\t\t$discover_debug  = isset_request_var('discover_debug');\n\t\t\t\t$discover_dryrun = isset_request_var('discover_dryrun');\n\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_discover($item, $discover_debug, $discover_dryrun);\n\t\t\t\t}\n\n\t\t\t\tsleep(2);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { /* cancel */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_cancel($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { /* export */\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"automation_networks.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'automation_networks.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '7') { /* dupliciate */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_duplicate($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '8') { /* change options */\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tapi_networks_change_options($item, $_POST);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_networks.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* defaults */\n\t\t$header_array = array();\n\n\t\t/* loop through each of the device types selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$networks_info = db_fetch_row_prepared('SELECT name FROM automation_networks WHERE id = ?', array($matches[1]));\n\n\t\t\t\t$ilist .= '<li>' . html_escape($networks_info['name']) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($iarray) && get_request_var('drp_action') == 8) {\n\t\t\t$form_array = array();\n\n\t\t\t$fields = network_get_field_array();\n\n\t\t\tforeach($fields as $field_name => $field_array) {\n\t\t\t\tif ((preg_match('/^notification_/', $field_name)) ||\n\t\t\t\t\t(preg_match('/^ping_/', $field_name)) ||\n\t\t\t\t\t($field_name == 'poller_id') ||\n\t\t\t\t\t($field_name == 'site_id') ||\n\t\t\t\t\t($field_name == 'dns_servers') ||\n\t\t\t\t\t($field_name == 'enabled') ||\n\t\t\t\t\t($field_name == 'snmp_id') ||\n\t\t\t\t\t($field_name == 'enable_netbios') ||\n\t\t\t\t\t($field_name == 'add_to_cacti') ||\n\t\t\t\t\t($field_name == 'same_sysname') ||\n\t\t\t\t\t($field_name == 'sched_type') ||\n\t\t\t\t\t($field_name == 'threads') ||\n\t\t\t\t\t($field_name == 'run_limit') ||\n\t\t\t\t\t($field_name == 'recur_every') ||\n\t\t\t\t\t($field_name == 'day_of_week') ||\n\t\t\t\t\t($field_name == 'month') ||\n\t\t\t\t\t($field_name == 'day_of_month') ||\n\t\t\t\t\t($field_name == 'monthly_week') ||\n\t\t\t\t\t($field_name == 'monthly_day')\n\t\t\t\t) {\n\t\t\t\t\t$form_array += array($field_name => $fields[$field_name]);\n\n\t\t\t\t\t$form_array[$field_name]['value'] = '';\n\n\t\t\t\t\tif (read_config_option('hide_form_description') == 'on') {\n\t\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['form_id']      = 0;\n\t\t\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t\t\t'name'          => 't_' . $field_name,\n\t\t\t\t\t\t'friendly_name' => __('Update this Field'),\n\t\t\t\t\t\t'class'         => 'ui-state-disabled',\n\t\t\t\t\t\t'value'         => ''\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tob_start();\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tnetwork_edit_javascript();\n\n\t\t\t$header_array = ob_get_flush();\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_networks.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete the following Networks.'),\n\t\t\t\t\t'scont'    => __('Delete Network'),\n\t\t\t\t\t'pcont'    => __('Delete Networks')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable the following Networks.'),\n\t\t\t\t\t'scont'    => __('Disable Network'),\n\t\t\t\t\t'pcont'    => __('Disable Networks')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable the following Networks.'),\n\t\t\t\t\t'scont'    => __('Enable Network'),\n\t\t\t\t\t'pcont'    => __('Enable Networks')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Discover the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Discover the following Networks.'),\n\t\t\t\t\t'scont'    => __('Discover Network'),\n\t\t\t\t\t'pcont'    => __('Discover Networks'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'discover_dryrun' => array(\n\t\t\t\t\t\t\t'method' => 'checkbox',\n\t\t\t\t\t\t\t'title'  => __('Perform a Dry Run.  Do not add Devices'),\n\t\t\t\t\t\t\t'default' => ''\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'discover_debug' => array(\n\t\t\t\t\t\t\t'method' => 'checkbox',\n\t\t\t\t\t\t\t'title'  => __('Enable Debug Logging'),\n\t\t\t\t\t\t\t'default' => ''\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'message'  => __('Click \\'Continue\\' to cancel on going Network Discovery(s).'),\n\t\t\t\t\t'cont'    => __('Cancel Network Discovery'),\n\t\t\t\t),\n\t\t\t\t6 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export the following Networks.'),\n\t\t\t\t\t'scont'    => __('Export Network'),\n\t\t\t\t\t'pcont'    => __('Export Networks')\n\t\t\t\t),\n\t\t\t\t7 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Network.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate the following Networks.'),\n\t\t\t\t\t'scont'    => __('Duplicate Network'),\n\t\t\t\t\t'pcont'    => __('Duplicate Networks')\n\t\t\t\t),\n\t\t\t\t8 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Change Network options for the following Network.  Check the checkboxes to indicate that this setting should be changed.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Change Network options for the following Networks.  Check the checkboxes to indicate that this setting should be changed.'),\n\t\t\t\t\t'scont'    => __('Change Network'),\n\t\t\t\t\t'pcont'    => __('Change Networks'),\n\t\t\t\t\t'header'   => $header_array\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction network_get_field_array($network = array()) {\n\tglobal $config, $ping_methods, $sched_types;\n\n\t$ping_methods[PING_SNMP] = __('SNMP Get');\n\n\t/* file: mactrack_device_types.php, action: edit */\n\t$fields = array(\n\t\t'spacer0' => array(\n\t\t\t'method'        => 'spacer',\n\t\t\t'friendly_name' => __('General Settings'),\n\t\t\t'collapsible'   => 'true'\n\t\t),\n\t\t'name' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description'   => __('Give this Network a meaningful name.'),\n\t\t\t'value'         => '|arg1:name|',\n\t\t\t'max_length'    => '250',\n\t\t\t'placeholder'   => __('New Network Discovery Range')\n\t\t),\n\t\t'poller_id' => array(\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'friendly_name' => __('Data Collector'),\n\t\t\t'description'   => __('Choose the Cacti Data Collector/Poller to be used to gather data from this Device.'),\n\t\t\t'value'         => '|arg1:poller_id|',\n\t\t\t'default'       => read_config_option('default_poller'),\n\t\t\t'sql'           => 'SELECT id, name FROM poller ORDER BY name',\n\t\t),\n\t\t'site_id' => array(\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'friendly_name' => __('Associated Site'),\n\t\t\t'description'   => __('Choose the Cacti Site that you wish to associate discovered Devices with.'),\n\t\t\t'value'         => '|arg1:site_id|',\n\t\t\t'default'       => read_config_option('default_site'),\n\t\t\t'sql'           => 'SELECT id, name FROM sites ORDER BY name',\n\t\t\t'none_value'    => __('None')\n\t\t),\n\t\t'subnet_range' => array(\n\t\t\t'method'        => 'textarea',\n\t\t\t'friendly_name' => __('Subnet Range'),\n\t\t\t'description'   => __('Enter valid Network Ranges separated by commas.  You may use an IP address, a Network range such as 192.168.1.0/24 or 192.168.1.0/255.255.255.0, or using wildcards such as 192.168.*.*'),\n\t\t\t'value'         => '|arg1:subnet_range|',\n\t\t\t'textarea_rows' => '4',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'max_length'    => '1024',\n\t\t\t'placeholder'   => '192.168.1.0/24'\n\t\t),\n\t\t'ignore_ips' => array(\n\t\t\t'method'        => 'textarea',\n\t\t\t'friendly_name' => __('IP Addresses to Ignore'),\n\t\t\t'description'   => __('Enter valid comma separated list command of IP Addresses from this range to ignore.'),\n\t\t\t'value'         => '|arg1:ignore_ips|',\n\t\t\t'textarea_rows' => '2',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'max_length'    => '1024',\n\t\t\t'placeholder'   => __('Comma delimited list of IP Addresses to not scan')\n\t\t),\n\t\t'total_ips' => array(\n\t\t\t'method'        => 'other',\n\t\t\t'friendly_name' => __('Total IP Addresses'),\n\t\t\t'description'   => __('Total addressable IP Addresses in this Network Range.'),\n\t\t\t'value'         => (isset($network['total_ips']) ? number_format_i18n($network['total_ips']) : 0)\n\t\t),\n\t\t'dns_servers' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Alternate DNS Servers'),\n\t\t\t'description'   => __('A space delimited list of alternate DNS Servers to use for DNS resolution. If blank, the poller OS will be used to resolve DNS names.'),\n\t\t\t'value'         => '|arg1:dns_servers|',\n\t\t\t'max_length'    => '250',\n\t\t\t'placeholder'   => __('Enter IPs or FQDNs of DNS Servers')\n\t\t),\n\t\t'threads' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('Discovery Threads'),\n\t\t\t'description'   => __('Define the number of threads to use for discovering this Network Range.'),\n\t\t\t'value'         => '|arg1:threads|',\n\t\t\t'array'         => array(\n\t\t\t\t'1'  => __('%d Thread', 1),\n\t\t\t\t'2'  => __('%d Threads', 2),\n\t\t\t\t'3'  => __('%d Threads', 3),\n\t\t\t\t'4'  => __('%d Threads', 4),\n\t\t\t\t'5'  => __('%d Threads', 5),\n\t\t\t\t'6'  => __('%d Threads', 6),\n\t\t\t\t'7'  => __('%d Threads', 7),\n\t\t\t\t'8'  => __('%d Threads', 8),\n\t\t\t\t'9'  => __('%d Threads', 9),\n\t\t\t\t'10' => __('%d Threads', 10),\n\t\t\t\t'20' => __('%d Threads', 20),\n\t\t\t\t'50' => __('%d Threads', 50)\n\t\t\t),\n\t\t\t'default' => 1\n\t\t),\n\t\t'run_limit' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('Run Limit'),\n\t\t\t'description'   => __('After the selected Run Limit, the discovery process will be terminated.'),\n\t\t\t'value'         => '|arg1:run_limit|',\n\t\t\t'array'         => array(\n\t\t\t\t'60'    => __('%d Minute', 1),\n\t\t\t\t'300'   => __('%d Minutes', 5),\n\t\t\t\t'600'   => __('%d Minutes', 10),\n\t\t\t\t'1200'  => __('%d Minutes', 20),\n\t\t\t\t'1800'  => __('%d Minutes', 30),\n\t\t\t\t'3600'  => __('%d Hour', 1),\n\t\t\t\t'7200'  => __('%d Hours', 2),\n\t\t\t\t'14400' => __('%d Hours', 4),\n\t\t\t\t'28800' => __('%d Hours', 8),\n\t\t\t),\n\t\t\t'default' => 1200\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'description'   => __('Enable this Network Range.'),\n\t\t\t'value'         => '|arg1:enabled|'\n\t\t),\n\t\t'enable_netbios' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Enable NetBIOS'),\n\t\t\t'description'   => __('Use NetBIOS to attempt to resolve the hostname of up hosts.'),\n\t\t\t'value'         => '|arg1:enable_netbios|',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'add_to_cacti' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Automatically Add to Cacti'),\n\t\t\t'description'   => __('For any newly discovered Devices that are reachable using SNMP and who match a Device Rule, add them to Cacti.'),\n\t\t\t'value'         => '|arg1:add_to_cacti|'\n\t\t),\n\t\t'same_sysname' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Allow same sysName on different hosts'),\n\t\t\t'description'   => __('When discovering devices, allow duplicate sysnames to be added on different hosts'),\n\t\t\t'value'         => '|arg1:same_sysname|'\n\t\t),\n\t\t'rerun_data_queries' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Rerun Data Queries'),\n\t\t\t'description'   => __('If a device previously added to Cacti is found, rerun its data queries.'),\n\t\t\t'value'         => '|arg1:rerun_data_queries|'\n\t\t),\n\t);\n\n\t$fields += api_scheduler_form();\n\n\t$fields += array(\n\t\t'spacern' => array(\n\t\t\t'method'        => 'spacer',\n\t\t\t'friendly_name' => __('Notification Settings'),\n\t\t\t'collapsible'   => 'true'\n\t\t),\n\t\t'notification_enabled' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Notification Enabled'),\n\t\t\t'description'   => __('If checked, when the Automation Network is scanned, a report will be sent to the Notification Email account..'),\n\t\t\t'value'         => '|arg1:notification_enabled|',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'notification_email' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Notification Email'),\n\t\t\t'description'   => __('The Email account to be used to send the Notification Email to.'),\n\t\t\t'value'         => '|arg1:notification_email|',\n\t\t\t'max_length'    => '250',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'notification_fromname' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Notification From Name'),\n\t\t\t'description'   => __('The Email account name to be used as the senders name for the Notification Email.  If left blank, Cacti will use the default Automation Notification Name if specified, otherwise, it will use the Cacti system default Email name'),\n\t\t\t'value'         => '|arg1:notification_fromname|',\n\t\t\t'max_length'    => '32',\n\t\t\t'size'          => '30',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'notification_fromemail' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Notification From Email Address'),\n\t\t\t'description'   => __('The Email Address to be used as the senders Email for the Notification Email.  If left blank, Cacti will use the default Automation Notification Email Address if specified, otherwise, it will use the Cacti system default Email Address'),\n\t\t\t'value'         => '|arg1:notification_fromemail|',\n\t\t\t'max_length'    => '128',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'spacer1' => array(\n\t\t\t'method'        => 'spacer',\n\t\t\t'friendly_name' => __('Reachability Settings'),\n\t\t\t'collapsible'   => 'true'\n\t\t),\n\t\t'snmp_id' => array(\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'friendly_name' => __('SNMP Options'),\n\t\t\t'description'   => __('Select the SNMP Options to use for discovery of this Network Range.'),\n\t\t\t'value'         => '|arg1:snmp_id|',\n\t\t\t'sql'           => 'SELECT id, name FROM automation_snmp ORDER BY name'\n\t\t),\n\t\t'ping_method' => array(\n\t\t\t'friendly_name' => __('Ping Method'),\n\t\t\t'description'   => __('The type of ping packet to send.'),\n\t\t\t'value'         => '|arg1:ping_method|',\n\t\t\t'method'        => 'drop_array',\n\t\t\t'default'       => read_config_option('ping_method'),\n\t\t\t'array'         => $ping_methods\n\t\t),\n\t\t'ping_port' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Ping Port'),\n\t\t\t'value'         => '|arg1:ping_port|',\n\t\t\t'description'   => __('TCP or UDP port to attempt connection.'),\n\t\t\t'default'       => read_config_option('ping_port'),\n\t\t\t'max_length'    => 5,\n\t\t\t'size'          => 5\n\t\t),\n\t\t'ping_timeout' => array(\n\t\t\t'friendly_name' => __('Ping Timeout Value'),\n\t\t\t'description'   => __('The timeout value to use for host ICMP and UDP pinging.  This host SNMP timeout value applies for SNMP pings.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:ping_timeout|',\n\t\t\t'default'       => read_config_option('ping_timeout'),\n\t\t\t'max_length'    => 5,\n\t\t\t'size'          => 5\n\t\t),\n\t\t'ping_retries' => array(\n\t\t\t'friendly_name' => __('Ping Retry Count'),\n\t\t\t'description'   => __('After an initial failure, the number of ping retries Cacti will attempt before failing.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:ping_retries|',\n\t\t\t'default'       => read_config_option('ping_retries'),\n\t\t\t'max_length'    => 5,\n\t\t\t'size'          => 5\n\t\t),\n\t\t'orig_start_at' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => '|arg1:start_at|',\n\t\t),\n\t\t'orig_sched_type' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => '|arg1:sched_type|',\n\t\t)\n\t);\n\n\treturn $fields;\n}\n\nfunction network_edit_javascript() {\n\tapi_scheduler_javascript();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#notification_enabled').click(function() {\n\t\t\tsetNotification();\n\t\t});\n\n\t\tsetNotification();\n\n\t\t$('#ping_method').change(function() {\n\t\t\tsetPing();\n\t\t});\n\n\t\tsetPing();\n\t});\n\n\tfunction setNotification() {\n\t\tvar showField = $('#notification_enabled').is(':checked');\n\t\ttoggleFields({\n\t\t\tnotification_email: showField,\n\t\t\tnotification_fromname: showField,\n\t\t\tnotification_fromemail: showField,\n\t\t});\n\t}\n\n\tfunction setPing() {\n\t\tvar pingMethod = $('#ping_method').val();\n\t\ttoggleFields({\n\t\t\tsnmp_id: true,\n\t\t\tping_method: true,\n\t\t\tping_port: ping_method > 0,\n\t\t\tping_timeout: ping_method > 1,\n\t\t\tping_retries: ping_method > 1,\n\t\t});\n\t}\n\t</script>\n\t<?php\n}\n\nfunction network_edit() {\n\tglobal $config, $ping_methods;\n\n\t$ping_methods[PING_SNMP] = __('SNMP Get');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$network      = db_fetch_row_prepared('SELECT * FROM automation_networks WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('Network Discovery Range [edit: %s]', $network['name']);\n\t} else {\n\t\t$network      = array();\n\t\t$header_label = __('Network Discovery Range [new]');\n\t}\n\n\t$fields = network_get_field_array($network);\n\n\tform_start('automation_networks.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields, (isset($network) ? $network : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_network', '1', '');\n\tform_hidden_box('id', !isempty_request_var('id') ? get_request_var('id') : 0, 0);\n\n\tform_save_button('automation_networks.php', 'return');\n\n\tnetwork_edit_javascript();\n}\n\nfunction get_networks(&$sql_where, $rows, $apply_limits = true) {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ' WHERE (automation_networks.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t}\n\n\t$sql_order = get_order_string();\n\n\tif ($apply_limits) {\n\t\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\t$query_string = \"SELECT automation_networks.*, poller.name AS data_collector\n\t\tFROM automation_networks\n\t\tLEFT JOIN poller\n\t\tON automation_networks.poller_id=poller.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\treturn db_fetch_assoc($query_string);\n}\n\nfunction networks() {\n\tglobal $actions, $networks, $config, $item_rows, $sched_types;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Network Rules'), 'automation_networks.php', 'networks', 'sess_networks', 'automation_networks.php?action=edit');\n\n\t$pageFilter->rows_label = __('Networks');\n\t$pageFilter->has_refresh = true;\n\t$pageFilter->def_refresh = 20;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} elseif (get_request_var('rows') == -2) {\n\t\t$rows = 99999999;\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where = '';\n\n\t$networks = get_networks($sql_where, $rows);\n\n\t$total_rows = db_fetch_cell('SELECT COUNT(*) FROM automation_networks ' . $sql_where);\n\n\t$nav = html_nav_bar('automation_networks.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 14, __('Networks'), 'page', 'main');\n\n\tform_start('automation_networks.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Network Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'data_collector' => array(\n\t\t\t'display' => __('Data Collector'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'sched_type' => array(\n\t\t\t'display' => __('Schedule'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'total_ips' => array(\n\t\t\t'display' => __('Total IPs'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The Current Status of this Networks Discovery')\n\t\t),\n\t\t'nosort2' => array(\n\t\t\t'display' => __('Progress'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('Pending/Running/Done')\n\t\t),\n\t\t'nosort3' => array(\n\t\t\t'display' => __('Up/SNMP Hosts'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'threads' => array(\n\t\t\t'display' => __('Threads'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'last_runtime' => array(\n\t\t\t'display' => __('Last Runtime'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'nosort4' => array(\n\t\t\t'display' => __('Next Start'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'last_started' => array(\n\t\t\t'display' => __('Last Started'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\t$status = 'Idle';\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($networks)) {\n\t\tforeach ($networks as $network) {\n\t\t\tif ($network['enabled'] == '') {\n\t\t\t\t$mystat       = \"<span class='disabled'>\" . __('Disabled') . '</span>';\n\t\t\t\t$progress     = '0/0/0';\n\t\t\t\t$status       = array();\n\t\t\t\t$updown['up'] = $updown['snmp'] = '0';\n\t\t\t} else {\n\t\t\t\t$running = db_fetch_cell_prepared(\n\t\t\t\t\t'SELECT COUNT(*)\n\t\t\t\t\tFROM automation_processes\n\t\t\t\t\tWHERE network_id = ?\n\t\t\t\t\tAND status != \"done\"',\n\t\t\t\t\tarray($network['id'])\n\t\t\t\t);\n\n\t\t\t\tif ($running > 0) {\n\t\t\t\t\t$status = db_fetch_row_prepared('SELECT\n\t\t\t\t\t\tCOUNT(*) AS total,\n\t\t\t\t\t\tSUM(CASE WHEN status=0 THEN 1 ELSE 0 END) AS pending,\n\t\t\t\t\t\tSUM(CASE WHEN status=1 THEN 1 ELSE 0 END) AS running,\n\t\t\t\t\t\tSUM(CASE WHEN status=2 THEN 1 ELSE 0 END) AS done\n\t\t\t\t\t\tFROM automation_ips\n\t\t\t\t\t\tWHERE network_id = ?', array($network['id']));\n\n\t\t\t\t\t$mystat   = \"<span class='running'>\" . __('Running') . '</span>';\n\n\t\t\t\t\tif (empty($status['total'])) {\n\t\t\t\t\t\t$progress = '0/0/0';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$progress = $status['pending'] . '/' . $status['running'] . '/' . $status['done'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$updown = db_fetch_row_prepared('SELECT SUM(up_hosts) AS up, SUM(snmp_hosts) AS snmp\n\t\t\t\t\t\tFROM automation_processes\n\t\t\t\t\t\tWHERE network_id = ?', array($network['id']));\n\n\t\t\t\t\tif (empty($updown['up'])) {\n\t\t\t\t\t\t$updown['up']   = 0;\n\t\t\t\t\t\t$updown['snmp'] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t'DELETE FROM automation_processes\n\t\t\t\t\t\tWHERE network_id = ?',\n\t\t\t\t\t\tarray($network['id'])\n\t\t\t\t\t);\n\n\t\t\t\t\t$updown['up']   = $network['up_hosts'];\n\t\t\t\t\t$updown['snmp'] = $network['snmp_hosts'];\n\n\t\t\t\t\t$mystat   = \"<span class='idle'>\" . __('Idle') . '</span>';\n\t\t\t\t\t$progress = '0/0/0';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $network['id'], true);\n\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('automation_networks.php?action=edit&id=' . $network['id']) . '\">' . html_escape($network['name']) . '</a>', $network['id']);\n\t\t\tform_selectable_ecell($network['data_collector'], $network['id']);\n\t\t\tform_selectable_cell($sched_types[$network['sched_type']], $network['id']);\n\t\t\tform_selectable_cell(number_format_i18n($network['total_ips']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($mystat, $network['id'], '', 'right');\n\t\t\tform_selectable_cell($progress, $network['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($updown['up']) . '/' . number_format_i18n($updown['snmp']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($network['threads']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell(round($network['last_runtime'], 2), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($network['enabled'] == '' || $network['sched_type'] == SCHEDULE_MANUAL ? __('N/A') : ($network['next_start'] == '0000-00-00 00:00:00' ? substr($network['start_at'], 0, 16) : substr($network['next_start'], 0, 16)), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($network['last_started'] == '0000-00-00 00:00:00' ? __('Never') : substr($network['last_started'], 0, 16), $network['id'], '', 'right');\n\t\t\tform_checkbox_cell($network['name'], $network['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Networks Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($networks)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\n"
        },
        {
          "name": "automation_snmp.php",
          "type": "blob",
          "size": 32.7275390625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n */\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/snmp.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Export'),\n);\n\n/* set default action */\nset_default_action();\n\n/* correct for a cancel button */\nif (isset_request_var('cancel')) {\n\tset_request_var('action', '');\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tautomation_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tautomation_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tautomation_export();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tautomation_snmp_item_dnd();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('id');\n\n\t\tautomation_snmp_item_movedown();\n\n\t\theader('Location: automation_snmp.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('id');\n\n\t\tautomation_snmp_item_moveup();\n\n\t\theader('Location: automation_snmp.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tautomation_snmp_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('id');\n\n\t\tautomation_snmp_item_remove();\n\n\t\theader('Location: automation_snmp.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\tautomation_snmp_item_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tautomation_snmp_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tautomation_snmp();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction automation_export() {\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = automation_snmp_option_export($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$snmp_option_ids[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = automation_snmp_option_export($snmp_option_ids);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction automation_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import SNMP Options from Local File',),\n\t\t\t'description'   => __('If the JSON file containing the SNMP Options data is located on your local machine, select it here.'),\n\t\t\t'method'        => 'file',\n\t\t\t'accept'        => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'friendly_name' => __('Import SNMP Options from Text'),\n\t\t\t'description'   => __('If you have the JSON file containing the SNMP Options data as text, you can paste it into this box to import it.'),\n\t\t\t'method'        => 'textarea',\n\t\t\t'value'         => '',\n\t\t\t'default'       => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class'         => 'textAreaNotes'\n\t\t)\n\t);\n\n\tform_start('automation_snmp.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has Imported the following SNMP Options'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import SNMP Options'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import SNMP Options') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\tform_end(true);\n\n\thtml_end_box();\n}\n\nfunction automation_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = automation_validate_upload();\n\t}\n\n\t$return_data = array();\n\n    if (is_array($json_data) && cacti_sizeof($json_data) && isset($json_data['snmp'])) {\n\t\tforeach($json_data['snmp'] as $snmp) {\n\t\t\t$return_data += automation_snmp_option_import($snmp);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: SNMP Options Import Succeeded!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tautomation_log('NOTE: SNMP Options Import Error!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation SNMP Option Import Failed!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: automation_snmp.php?action=import');\n\n\texit();\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_automation_snmp')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']     = get_request_var('id');\n\t\t$save['hash']   = get_hash_automation(get_request_var('id'), 'automation_snmp');\n\t\t$save['name']   = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'automation_snmp');\n\n\t\t\tif ($id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_snmp.php?action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n\t} elseif (isset_request_var('save_component_automation_snmp_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('item_id');\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save = array();\n\n\t\t$save['id']                   = form_input_validate(get_request_var('item_id'), '', '^[0-9]+$', false, 3);\n\t\t$save['hash']                 = get_hash_automation(get_request_var('item_id'), 'automation_snmp_items');\n\t\t$save['snmp_id']              = form_input_validate(get_nfilter_request_var('id'), 'snmp_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']             = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['snmp_community']       = form_input_validate(get_nfilter_request_var('snmp_community'), 'snmp_community', '', false, 3);\n\t\t$save['snmp_version']         = form_input_validate(get_nfilter_request_var('snmp_version'), 'snmp_version', '', false, 3);\n\t\t$save['snmp_username']        = form_input_validate(get_nfilter_request_var('snmp_username'), 'snmp_username', '', true, 3);\n\t\t$save['snmp_password']        = form_input_validate(get_nfilter_request_var('snmp_password'), 'snmp_password', '', true, 3);\n\t\t$save['snmp_auth_protocol']   = form_input_validate(get_nfilter_request_var('snmp_auth_protocol'), 'snmp_auth_protocol', '', true, 3);\n\t\t$save['snmp_priv_passphrase'] = form_input_validate(get_nfilter_request_var('snmp_priv_passphrase'), 'snmp_priv_passphrase', '', true, 3);\n\t\t$save['snmp_priv_protocol']   = form_input_validate(get_nfilter_request_var('snmp_priv_protocol'), 'snmp_priv_protocol', '', true, 3);\n\t\t$save['snmp_context']         = form_input_validate(get_nfilter_request_var('snmp_context'), 'snmp_context', '', true, 3);\n\t\t$save['snmp_engine_id']       = form_input_validate(get_nfilter_request_var('snmp_engine_id'), 'snmp_engine_id', '', true, 3);\n\t\t$save['snmp_port']            = form_input_validate(get_nfilter_request_var('snmp_port'), 'snmp_port', '^[0-9]+$', false, 3);\n\t\t$save['snmp_timeout']         = form_input_validate(get_nfilter_request_var('snmp_timeout'), 'snmp_timeout', '^[0-9]+$', false, 3);\n\t\t$save['snmp_retries']         = form_input_validate(get_nfilter_request_var('snmp_retries'), 'snmp_retries', '^[0-9]+$', false, 3);\n\t\t$save['max_oids']             = form_input_validate(get_nfilter_request_var('max_oids'), 'max_oids', '^[0-9]+$', false, 3);\n\t\t$save['bulk_walk_size']       = form_input_validate(get_nfilter_request_var('bulk_walk_size'), 'bulk_walk_size', '^[\\-0-9]+$', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_snmp_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_snmp.php?action=item_edit&id=' . get_nfilter_request_var('id') . '&item_id=' . (empty($item_id) ? get_filter_request_var('id') : $item_id));\n\t\t} else {\n\t\t\theader('Location: automation_snmp.php?action=edit&id=' . get_nfilter_request_var('id'));\n\t\t}\n\t} else {\n\t\traise_message(2);\n\t\theader('Location: automation_snmp.php');\n\t}\n}\n\nfunction form_actions() {\n\tglobal $config, $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM automation_snmp WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM automation_snmp_items WHERE ' . str_replace('id', 'snmp_id', array_to_sql_or($selected_items, 'id')));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_duplicate_snmp_option($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* export */\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"automation_snmp.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'automation_snmp.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_snmp.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_snmp WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_snmp.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following SNMP Option.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following SNMP Options.'),\n\t\t\t\t\t'scont'    => __('Delete SNMP Option'),\n\t\t\t\t\t'pcont'    => __('Delete SNMP Options')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following SNMP Option.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following SNMP Options.'),\n\t\t\t\t\t'scont'    => __('Duplicate SNMP Option'),\n\t\t\t\t\t'pcont'    => __('Duplicate SNMP Options'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'name_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Name Format'),\n\t\t\t\t\t\t\t'default' => '<name> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following SNMP Option.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export following SNMP Options.'),\n\t\t\t\t\t'scont'    => __('Export SNMP Option'),\n\t\t\t\t\t'pcont'    => __('Export SNMP Options')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction automation_duplicate_snmp_option($id, $new_name) {\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM automation_snmp\n\t\tWHERE id = ?', array($id));\n\n\t$new_name = str_replace('<name>', $name, $new_name);\n\n\t$save['id']   = 0;\n\t$save['hash'] = generate_hash();\n\t$save['name'] = $new_name;\n\n\t$newid = sql_save($save, 'automation_snmp');\n\n\tif ($newid > 0 && $id > 0) {\n\t\t$hash = get_hash_automation($newid, 'automation_snmp_items');\n\n\t\tdb_execute_prepared(\"INSERT INTO automation_snmp_items\n\t\t\t(hash, snmp_id, sequence, snmp_version, snmp_community, snmp_port, snmp_timeout,\n\t\t\tsnmp_retries, max_oids, snmp_username, snmp_password, snmp_auth_protocol,\n\t\t\tsnmp_priv_passphrase, snmp_priv_protocol, snmp_context, snmp_engine_id)\n\t\t\tSELECT ?, $newid AS snmp_id, sequence, snmp_version, snmp_community, snmp_port, snmp_timeout,\n\t\t\tsnmp_retries, max_oids, snmp_username, snmp_password, snmp_auth_protocol,\n\t\t\tsnmp_priv_passphrase, snmp_priv_protocol, snmp_context, snmp_engine_id\n\t\t\tFROM automation_snmp_items\n\t\t\tWHERE snmp_id = ?\",\n\t\t\tarray($hash, $id));\n\n\t\traise_message('option_duplicated', __('SNMP Options has been Duplicated.'), MESSAGE_LEVEL_INFO);\n\t} else {\n\t\traise_message('missing_options', __('Automation Item does not exist.  Can not Duplicate.'), MESSAGE_LEVEL_ERROR);\n\t}\n}\n\nfunction automation_snmp_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\tif (isset_request_var('snmp_item') && is_array(get_nfilter_request_var('snmp_item'))) {\n\t\t$items    = get_request_var('snmp_item');\n\t\t$sequence = 1;\n\n\t\tforeach ($items as $item) {\n\t\t\t$item = str_replace('line', '', $item);\n\t\t\tinput_validate_input_number($item, 'item');\n\n\t\t\tdb_execute_prepared('UPDATE automation_snmp_items\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $item));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: automation_snmp.php?action=edit&id=' . get_request_var('id'));\n\n\texit;\n}\n\nfunction automation_snmp_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tmove_item_down('automation_snmp_items', get_request_var('item_id'), 'snmp_id=' . get_request_var('id'));\n}\n\nfunction automation_snmp_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tmove_item_up('automation_snmp_items', get_request_var('item_id'), 'snmp_id=' . get_request_var('id'));\n}\n\nfunction automation_snmp_item_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\t/* ==================================================== */\n\n\tform_start('automation_snmp.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$snmp = db_fetch_row_prepared('SELECT * FROM automation_snmp WHERE id = ?', array(get_request_var('id')));\n\t$item = db_fetch_row_prepared('SELECT * FROM automation_snmp_items WHERE id = ?', array(get_request_var('item_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following SNMP Option Item.'); ?></p>\n\t\t\t<p><?php print __('SNMP Option:');?> <?php print html_escape($snmp['name']);?><br>\n\t\t\t<?php print __('SNMP Version: <b>%s</b>', $item['snmp_version']);?><br>\n\t\t\t<?php print __esc('SNMP Community/Username: <b>%s</b>', ($item['snmp_version'] != 3 ? $item['snmp_community']:$item['snmp_username']));?></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove SNMP Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'automation_snmp.php?action=item_remove',\n\t\t\t\tfuncEnd: 'automationSnmpRemoveItemFinalize'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\titem_id: <?php print get_request_var('item_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t});\n\n\tfunction automationSnmpRemoveItemFinalize(data) {\n\t\t$('#cdialog').dialog('close');\n\t\tloadUrl({url:'automation_snmp.php?action=edit&id=<?php print get_request_var('id');?>'})\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction automation_snmp_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM automation_snmp_items WHERE id = ?', array(get_request_var('item_id')));\n}\n\nfunction automation_snmp_item_edit() {\n\tglobal $config, $snmp_auth_protocols, $snmp_priv_protocols, $snmp_versions, $snmp_security_levels;\n\n\t#include_once(CACTI_PATH_LIBRARY . '/automation_functions.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\t/* ==================================================== */\n\n\t# fetch the current mactrack snmp record\n\t$snmp_option = db_fetch_row_prepared('SELECT *\n\t\tFROM automation_snmp\n\t\tWHERE id = ?', array(get_request_var('id')));\n\n\t# if an existing item was requested, fetch data for it\n\tif (get_request_var('item_id', '') !== '') {\n\t\t$automation_snmp_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM automation_snmp_items\n\t\t\tWHERE id = ?', array(get_request_var('item_id')));\n\n\t\t$header_label = __esc('SNMP Options [edit: %s]', $snmp_option['name']);\n\t} else {\n\t\t$header_label                     = __('SNMP Options [new]');\n\t\t$automation_snmp_item             = array();\n\t\t$automation_snmp_item['snmp_id']  = get_request_var('id');\n\t\t$automation_snmp_item['sequence'] = get_sequence(0, 'sequence', 'automation_snmp_items', 'snmp_id=' . get_request_var('id'));\n\t}\n\n\tform_start('automation_snmp.php', 'automation_item_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t/* this is snmp we are talking about here */\n\tunset($snmp_versions[0]);\n\n\tglobal $fields_snmp_item_with_retry;\n\n\t/* file: mactrack_snmp.php, action: item_edit */\n\t$fields_automation_snmp_item_edit = $fields_snmp_item_with_retry + array(\n\t\t'sequence' => array(\n\t\t\t'method'        => 'view',\n\t\t\t'friendly_name' => __('Sequence'),\n\t\t\t'description'   => __('Sequence of Item.'),\n\t\t\t'value'         => '|arg1:sequence|'),\n\t);\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_automation_snmp_item_edit, (isset($automation_snmp_item) ? $automation_snmp_item : array()))\n\t));\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');\n\tform_hidden_box('id', (isset($automation_snmp_item['snmp_id']) ? $automation_snmp_item['snmp_id'] : '0'), '');\n\tform_hidden_box('save_component_automation_snmp_item', '1', '');\n\n\tform_save_button('automation_snmp.php?action=edit&id=' . get_request_var('id'));\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\tsnmp_security_initialized = false;\n\n\t\tsetSNMP();\n\t});\n\t</script>\n\t<?php\n}\n\nfunction automation_snmp_edit() {\n\tglobal $config, $fields_automation_snmp_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* display the mactrack snmp option set */\n\t$snmp_option = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_option = db_fetch_row_prepared('SELECT * FROM automation_snmp where id = ?', array(get_request_var('id')));\n\t\t# setup header\n\t\t$header_label = __esc('SNMP Option Set [edit: %s]', $snmp_option['name']);\n\t} else {\n\t\t$header_label = __('SNMP Option Set [new]');\n\t}\n\n\tform_start('automation_snmp.php', 'automation_snmp_group');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t/* file: automation_snmp.php, action: edit */\n\t$fields_automation_snmp_edit = array(\n\t\t'name' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description'   => __('Fill in the name of this SNMP Option Set.'),\n\t\t\t'value'         => '|arg1:name|',\n\t\t\t'default'       => '',\n\t\t\t'max_length'    => '100',\n\t\t\t'size'          => '40'\n\t\t)\n\t);\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_automation_snmp_edit, $snmp_option)\n\t));\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset_request_var('id') ? get_request_var('id'): '0'), '');\n\tform_hidden_box('save_component_automation_snmp', '1', '');\n\n\tif (!isempty_request_var('id')) {\n\t\t$items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM automation_snmp_items\n\t\t\tWHERE snmp_id = ?\n\t\t\tORDER BY sequence', array(get_request_var('id')));\n\n\t\thtml_start_box(__('SNMP Options'), '100%', '', '3', 'center', 'automation_snmp.php?action=item_edit&id=' . get_request_var('id'));\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Item'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Version'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Community'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Port'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Timeout'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Retries'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Max OIDS'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Auth Username'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Auth Password'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Auth Protocol'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Priv Passphrase'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Priv Protocol'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Context'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Action'),\n\t\t\t\t'align'   => 'right'\n\t\t\t)\n\t\t);\n\n\t\thtml_header($display_text);\n\n\t\t$i = 1;\n\n\t\t$total_items = cacti_sizeof($items);\n\n\t\tif (cacti_sizeof($items)) {\n\t\t\tforeach ($items as $item) {\n\t\t\t\tform_alternate_row('line' . $item['id'], true);\n\n\t\t\t\t$form_data = \"<td><a class='linkEditMain' href='\" . html_escape('automation_snmp.php?action=item_edit&item_id=' . $item['id'] . '&id=' . $item['snmp_id']) . \"'>\" . __('Item # %d', $i) . '</a></td>';\n\t\t\t\t$form_data .= '<td>' . \t$item['snmp_version'] . '</td>';\n\t\t\t\t$form_data .= '<td class=\"left\">' . \t($item['snmp_version'] == 3 ? __('none') : html_escape($item['snmp_community'])) . '</td>';\n\t\t\t\t$form_data .= '<td class=\"right\">' . \t$item['snmp_port'] . '</td>';\n\t\t\t\t$form_data .= '<td class=\"right\">' . \t$item['snmp_timeout'] . '</td>';\n\t\t\t\t$form_data .= '<td class=\"right\">' . \t$item['snmp_retries'] . '</td>';\n\t\t\t\t$form_data .= '<td class=\"right\">' . \t$item['max_oids'] . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t($item['snmp_version'] == 3 ? html_escape($item['snmp_username']) : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t(($item['snmp_version'] == 3 && $item['snmp_password'] !== '') ? '*********' : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t($item['snmp_version'] == 3 ? $item['snmp_auth_protocol'] : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t($item['snmp_version'] == 3 ? '*********' : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t($item['snmp_version'] == 3 ? $item['snmp_priv_protocol'] : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td>' . \t($item['snmp_version'] == 3 ? html_escape($item['snmp_context']) : __('N/A')) . '</td>';\n\t\t\t\t$form_data .= '<td class=\"nowrap right\">';\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\t$form_data .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('automation_snmp.php?action=item_movedown&item_id=' . $item['id'] . '&id=' . $item['snmp_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$form_data .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t$form_data .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('automation_snmp.php?action=item_moveup&item_id=' . $item['id'] .\t'&id=' . $item['snmp_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$form_data .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$form_data .= '<a class=\"delete deleteMarker ti ti-x\" id=\"' . $item['id'] . '_' . $item['snmp_id'] . '\" title=\"' . __esc('Delete') . '\"></a>';\n\t\t\t\t$form_data .= '</td>';\n\n\t\t\t\tprint $form_data;\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No SNMP Items') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('automation_snmp.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div class='cdialog' id='cdialog'></div>\");\n\t\t$('#automation_snmp_edit2_child').attr('id', 'snmp_item');\n\t\t$('img.action').click(function() {\n\t\t\tstrURL = $(this).attr('href');\n\t\t\tloadUrl({url:strURL})\n\t\t});\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#snmp_item').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'automation_snmp.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize()})\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'automation_snmp.php?action=item_remove_confirm&item_id='+id[0]+'&id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete SNMP Option Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t\t}).css('cursor', 'pointer');\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction automation_snmp() {\n\tglobal $config, $item_rows, $actions;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('SNMP Options'), 'automation_snmp.php', 'snmp_form', 'sess_autom_snmp', 'automation_snmp.php?action=edit');\n\n\t$pageFilter->rows_label = __('Rules');\n\t$pageFilter->has_import = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE asnmp.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(DISTINCT asnmp.id)\n\t\tFROM automation_snmp AS asnmp\n\t\tLEFT JOIN automation_networks AS anw\n\t\tON asnmp.id=anw.snmp_id\n\t\tLEFT JOIN automation_snmp_items AS asnmpi\n\t\tON asnmp.id=asnmpi.snmp_id\n\t\t$sql_where\n\t\tGROUP BY asnmp.id\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$snmp_options = db_fetch_assoc(\"SELECT asnmp.*, COUNT(anw.id) AS networks,\n\t\tCOUNT(asnmpi.snmp_id) AS totals,\n\t\tSUM(CASE WHEN asnmpi.snmp_version=1 THEN 1 ELSE 0 END) AS v1entries,\n\t\tSUM(CASE WHEN asnmpi.snmp_version=2 THEN 1 ELSE 0 END) AS v2entries,\n\t\tSUM(CASE WHEN asnmpi.snmp_version=3 THEN 1 ELSE 0 END) AS v3entries\n\t\tFROM automation_snmp AS asnmp\n\t\tLEFT JOIN automation_networks AS anw\n\t\tON asnmp.id=anw.snmp_id\n\t\tLEFT JOIN automation_snmp_items AS asnmpi\n\t\tON asnmp.id=asnmpi.snmp_id\n\t\t$sql_where\n\t\tGROUP BY asnmp.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('automation_snmp.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 12, __('SNMP Option Sets'), 'page', 'main');\n\n\tform_start('automation_snmp.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('SNMP Option Set'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'networks' => array(\n\t\t\t'display' => __('Networks Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'totals' => array(\n\t\t\t'display' => __('SNMP Entries'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'v1entries' => array(\n\t\t\t'display' => __('V1 Entries'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'v2entries' => array(\n\t\t\t'display' => __('V2 Entries'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'v3entries' => array(\n\t\t\t'display' => __('V3 Entries'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($snmp_options)) {\n\t\tforeach ($snmp_options as $snmp_option) {\n\t\t\tform_alternate_row('line' . $snmp_option['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($snmp_option['name'], get_request_var('filter'), 'automation_snmp.php?action=edit&id=' . $snmp_option['id'] . '&page=1'), $snmp_option['id']);\n\t\t\tform_selectable_cell($snmp_option['networks'], $snmp_option['id'], '', 'right');\n\t\t\tform_selectable_cell($snmp_option['totals'], $snmp_option['id'], '', 'right');\n\t\t\tform_selectable_cell($snmp_option['v1entries'], $snmp_option['id'], '', 'right');\n\t\t\tform_selectable_cell($snmp_option['v2entries'], $snmp_option['id'], '', 'right');\n\t\t\tform_selectable_cell($snmp_option['v3entries'], $snmp_option['id'], '', 'right');\n\t\t\tform_checkbox_cell($snmp_option['name'], $snmp_option['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No SNMP Option Sets Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_options)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\n"
        },
        {
          "name": "automation_templates.php",
          "type": "blob",
          "size": 50.79296875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Export')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tautomation_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tautomation_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tautomation_export();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tautomation_template_dnd();\n\n\t\tbreak;\n\tcase 'graph_dnd':\n\t\tautomation_template_graph_item_dnd();\n\n\t\tbreak;\n\tcase 'tree_dnd':\n\t\tautomation_template_tree_item_dnd();\n\n\t\tbreak;\n\tcase 'exitonchange':\n\t\tautomation_template_tree_exit_on_change();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tautomation_templates_item_movedown();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tautomation_templates_item_moveup();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_add_agr':\n\t\tautomation_add_graph_rule();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_remove_agr_confirm':\n\t\tautomation_remove_agr_confirm();\n\n\t\tbreak;\n\tcase 'item_remove_ttr_confirm':\n\t\tautomation_remove_ttr_confirm();\n\n\t\tbreak;\n\tcase 'item_remove_agr':\n\t\tautomation_remove_agr();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_add_atr':\n\t\tautomation_add_tree_rule();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_add_ttr':\n\t\tautomation_add_threshold_template();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_remove_atr_confirm':\n\t\tautomation_remove_atr_confirm();\n\n\t\tbreak;\n\tcase 'item_remove_atr':\n\t\tautomation_remove_atr();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('template_id'));\n\n\t\tbreak;\n\tcase 'item_remove_ttr':\n\t\tautomation_remove_ttr();\n\n\t\theader('Location: automation_templates.php?action=edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'movedown':\n\t\tautomation_movedown();\n\n\t\theader('Location: automation_templates.php');\n\n\t\tbreak;\n\tcase 'moveup':\n\t\tautomation_moveup();\n\n\t\theader('Location: automation_templates.php');\n\n\t\tbreak;\n\tcase 'remove':\n\t\tautomation_remove();\n\n\t\theader('Location: automation_templates.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\ttemplate_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\ttemplate();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction automation_export() {\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif(cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = automation_device_rule_export($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$snmp_option_ids[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = automation_device_rule_export($snmp_option_ids);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction automation_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import Device Rules from Local File',),\n\t\t\t'description' => __('If the JSON file containing the Device Rules data is located on your local machine, select it here.'),\n\t\t\t'method' => 'file',\n\t\t\t'accept' => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Import Device Rules from Text'),\n\t\t\t'description' => __('If you have the JSON file containing the Device Rules data as text, you can paste it into this box to import it.'),\n\t\t\t'value' => '',\n\t\t\t'default' => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class' => 'textAreaNotes'\n\t\t),\n\t\t'import_trees_branches' => array(\n\t\t\t'friendly_name' => __('Import Device Rules Trees and Branches'),\n\t\t\t'description'   => __('Automatically Recreate the Trees and Branches if they do not exist upon Import.'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'value'         => '',\n\t\t\t'default'       => ''\n\t\t)\n\t);\n\n\tform_start('automation_templates.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has Imported the following Device Rules'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Device Rules'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import Network Discovery Rule') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction automation_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = automation_validate_upload();\n\t}\n\n\tif (isset_request_var('import_trees_branches')) {\n\t\t$trees = true;\n\t} else {\n\t\t$trees = false;\n\t}\n\n\t$return_data = automation_template_import($json_data, $trees);\n\n\tif (sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Device Rules Import Succeeded!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tautomation_log('NOTE: Automation Device Rules Import Error!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Device Rules Import Failed!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: automation_templates.php?action=import');\n\n\texit();\n}\n\nfunction automation_template_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\tif (isset_request_var('template_ids') && is_array(get_nfilter_request_var('template_ids'))) {\n\t\t$aids     = get_nfilter_request_var('template_ids');\n\t\t$sequence = 1;\n\n\t\tforeach ($aids as $id) {\n\t\t\t$id = str_replace('line', '', $id);\n\t\t\tinput_validate_input_number($id, 'id');\n\n\t\t\tdb_execute_prepared('UPDATE automation_templates\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: automation_templates.php');\n\n\texit;\n}\n\nfunction automation_templates_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('template_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\t$cur_sequence = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = ?\n\t\tAND id = ?',\n\t\tarray(get_request_var('template_id'), get_request_var('rule_type'), get_request_var('id')));\n\n\t$other_id = db_fetch_cell_prepared('SELECT id\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = ?\n\t\tAND sequence = ?',\n\t\tarray(get_request_var('template_id'), get_request_var('rule_type'), $cur_sequence + 1));\n\n\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($cur_sequence + 1, get_request_var('id')));\n\n\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($cur_sequence, $other_id));\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n}\n\nfunction automation_templates_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('template_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\t$cur_sequence = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = ?\n\t\tAND id = ?',\n\t\tarray(get_request_var('template_id'), get_request_var('rule_type'), get_request_var('id')));\n\n\t$other_id = db_fetch_cell_prepared('SELECT id\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = ?\n\t\tAND sequence = ?',\n\t\tarray(get_request_var('template_id'), get_request_var('rule_type'), $cur_sequence - 1));\n\n\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($cur_sequence - 1, get_request_var('id')));\n\n\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($cur_sequence, $other_id));\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n}\n\nfunction automation_template_graph_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\tif (isset_request_var('graph_rules') && is_array(get_nfilter_request_var('graph_rules'))) {\n\t\t$aids        = get_nfilter_request_var('graph_rules');\n\t\t$sequence    = 1;\n\t\t$template_id = get_request_var('id');\n\n\t\tforeach ($aids as $id) {\n\t\t\t$id = str_replace('gr', '', $id);\n\n\t\t\tinput_validate_input_number($id, 'id');\n\n\t\t\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE template_id = ?\n\t\t\t\tAND id = ?\n\t\t\t\tAND rule_type = 1',\n\t\t\t\tarray($sequence, $template_id, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: automation_templates.php?action=edit&id=' . get_request_var('id'));\n\n\texit;\n}\n\nfunction automation_template_tree_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\tif (isset_request_var('template_ids') && is_array(get_nfilter_request_var('template_ids'))) {\n\t\t$aids     = get_nfilter_request_var('template_ids');\n\t\t$sequence = 1;\n\t\t$template_id = get_request_var('id');\n\n\t\tforeach ($aids as $id) {\n\t\t\t$id = str_replace('tr', '', $id);\n\n\t\t\tinput_validate_input_number($id, 'id');\n\n\t\t\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE template_id = ?\n\t\t\t\tAND id = ?\n\t\t\t\tAND rule_type = 2',\n\t\t\t\tarray($sequence, $template_id, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: automation_templates.php?action=edit&id=' . get_request_var('id'));\n\n\texit;\n}\n\nfunction automation_template_tree_exit_on_change() {\n\t$id          = get_filter_request_var('id');\n\t$newvalue    = get_filter_request_var('current') == 0 ? 1:0;\n\t$template_id = get_filter_request_var('template_id');\n\n\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\tSET exit_rules = ?\n\t\tWHERE id = ?',\n\t\tarray($newvalue, $id));\n\n\theader('Location: automation_templates.php?action=edit&id=' . $template_id);\n}\n\nfunction automation_movedown() {\n\tmove_item_down('automation_templates', get_filter_request_var('id'));\n}\n\nfunction automation_moveup() {\n\tmove_item_up('automation_templates', get_filter_request_var('id'));\n}\n\nfunction automation_remove() {\n\tdb_execute_prepared('DELETE FROM automation_templates WHERE id = ?', array(get_filter_request_var('id')));\n}\n\nfunction automation_add_graph_rule() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('template_id');\n\tget_filter_request_var('rule_id');\n\t/* ==================================================== */\n\n\t$save = array();\n\n\t$save['id']          = 0;\n\t$save['hash']        = get_hash_automation(0, 'automation_templates_rules');\n\t$save['template_id'] = get_request_var('template_id');\n\t$save['rule_type']   = 1;\n\t$save['rule_id']     = get_request_var('rule_id');\n\t$save['sequence']    = db_fetch_cell('SELECT MAX(sequence)+1 FROM automation_templates_rules WHERE rule_type = 1');\n\t$save['exit_rules']  = 0;\n\n\tsql_save($save, 'automation_templates_rules');\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n\n\traise_message('rule_save', __('The Graph Rule has been added to the Device Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction automation_add_threshold_template() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('template_id');\n\tget_filter_request_var('thold_template_id');\n\t/* ==================================================== */\n\n\t$host_template_id = db_fetch_cell_prepared('SELECT host_template\n\t\tFROM automation_templates\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('template_id')));\n\n\t$save = array();\n\n\t$save['id']          = 0;\n\t$save['host_template_id']  = $host_template_id;\n\t$save['thold_template_id'] = get_request_var('thold_template_id');\n\n\tsql_save($save, 'plugin_thold_host_template');\n\n\traise_message('rule_save', __('The Threshold Template has been added to the Device Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction automation_add_tree_rule() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('template_id');\n\tget_filter_request_var('rule_id');\n\t/* ==================================================== */\n\n\t$save = array();\n\n\t$save['id']          = 0;\n\t$save['hash']        = get_hash_automation(0, 'automation_templates_rules');\n\t$save['template_id'] = get_request_var('template_id');\n\t$save['rule_type']   = 2;\n\t$save['rule_id']     = get_request_var('rule_id');\n\t$save['sequence']    = db_fetch_cell('SELECT MAX(sequence)+1 FROM automation_templates_rules WHERE rule_type = 2');\n\t$save['exit_rules']  = 0;\n\n\tsql_save($save, 'automation_templates_rules');\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n\n\traise_message('rule_save', __('The Tree Rule has been added to the Device Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM automation_templates WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* export */\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"automation_templates.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'automation_templates.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_templates.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT ht.name FROM automation_templates AS at INNER JOIN host_template AS ht ON ht.id=at.host_template WHERE at.id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_templates.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Device Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Device Rules.'),\n\t\t\t\t\t'scont'    => __('Delete Device Rule'),\n\t\t\t\t\t'pcont'    => __('Delete Device Rules')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following Device Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export following Device Rules.'),\n\t\t\t\t\t'scont'    => __('Export Device Rule'),\n\t\t\t\t\t'pcont'    => __('Export Device Rules'),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_template')) {\n\t\t$redirect_back = false;\n\n\t\t$save['id']                   = get_nfilter_request_var('id');\n\t\t$save['hash']                 = get_hash_automation(get_request_var('id'), 'automation_templates');\n\t\t$save['host_template']        = form_input_validate(get_nfilter_request_var('host_template'), 'host_template', '', false, 3);\n\t\t$save['availability_method']  = form_input_validate(get_nfilter_request_var('availability_method'), 'availability_method', '', false, 3);\n\t\t$save['sysDescr']             = get_nfilter_request_var('sysDescr');\n\t\t$save['sysName']              = get_nfilter_request_var('sysName');\n\t\t$save['sysOid']               = get_nfilter_request_var('sysOid');\n\t\t$save['description_pattern']  = get_nfilter_request_var('description_pattern');\n\t\t$save['populate_location']    = isset_request_var('populate_location') ? 'on':'';\n\n\t\tif (function_exists('filter_var')) {\n\t\t\t$save['sysDescr'] = filter_var($save['sysDescr'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n\t\t} else {\n\t\t\t$save['sysDescr'] = strip_tags($save['sysDescr']);\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$template_id = sql_save($save, 'automation_templates');\n\n\t\t\tif ($template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message() || isempty_request_var('id')) {\n\t\t\theader('Location: automation_templates.php?id=' . (empty($template_id) ? get_nfilter_request_var('id') : $template_id));\n\t\t} else {\n\t\t\theader('Location: automation_templates.php');\n\t\t}\n\t}\n}\n\nfunction automation_remove_ttr_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tform_start('automation_templates.php?action=edit&id=' . get_request_var('id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$rule = db_fetch_row_prepared('SELECT *\n\t\tFROM plugin_thold_host_template\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('rule_id')));\n\n\tif (cacti_sizeof($rule)) {\n\t\t$name = db_fetch_cell_prepared('SELECT tt.name\n\t\t\tFROM thold_template AS tt\n\t\t\tINNER JOIN plugin_thold_host_template AS tht\n\t\t\tON tt.id = tht.thold_template_id\n\t\t\tWHERE tht.id = ?',\n\t\t\tarray(get_request_var('rule_id')));\n\t} else {\n\t\t$name = __('Unknown');\n\t}\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to Delete the following Threshold Template will be disassociated from the Device Rule.');?></p>\n\t\t\t<p><?php print __(\"Threshold Template Name: '%s'\", html_escape($name));?>\n\t\t\t<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Threshold Template');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\tvar options = {\n\t\t\turl: 'automation_templates.php?action=item_remove_ttr'\n\t\t}\n\n\t\tvar data = {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\tid: <?php print get_request_var('id');?>,\n\t\t\ttemplate_id: <?php print get_request_var('template_id');?>,\n\t\t\trule_id: <?php print get_request_var('rule_id');?>\n\t\t}\n\n\t\t$('#cdialog').dialog('close');\n\n\t\tpostUrl(options, data);\n\t});\n\t</script>\n\t<?php\n}\n\nfunction automation_remove_agr_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tform_start('automation_templates.php?action=edit&id=' . get_request_var('template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$rule = db_fetch_row_prepared('SELECT *\n\t\tFROM automation_templates_rules\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('rule_id')));\n\n\tif (cacti_sizeof($rule)) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM automation_graph_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray($rule['rule_id']));\n\t} else {\n\t\t$name = __('Unknown');\n\t}\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to Delete the following Graph Rule will be disassociated from the Device Rule.');?></p>\n\t\t\t<p><?php print __(\"Graph Rule Name: '%s'\", html_escape($name));?>\n\t\t\t<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Graph Rule');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\tvar options = {\n\t\t\turl: 'automation_templates.php?action=item_remove_agr'\n\t\t}\n\n\t\tvar data = {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\ttemplate_id: <?php print get_request_var('template_id');?>,\n\t\t\trule_id: <?php print get_request_var('rule_id');?>\n\t\t}\n\n\t\t$('#cdialog').dialog('close');\n\n\t\tpostUrl(options, data);\n\t});\n\t</script>\n\t<?php\n}\n\nfunction automation_remove_agr() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM automation_templates_rules\n\t\tWHERE id = ?\n\t\tAND rule_type = 1\n\t\tAND template_id = ?',\n\t\tarray(get_request_var('rule_id'), get_request_var('template_id')));\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n\n\traise_message('rule_remove', __('The Graph Rule has been removed from the Device Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction automation_resequence_rules($template_id) {\n\t$gr_seq = db_fetch_assoc_prepared('SELECT *\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = 1\n\t\tORDER BY sequence',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($gr_seq)) {\n\t\t$sequence = 1;\n\n\t\tforeach($gr_seq as $s) {\n\t\t\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\t\t\tSET `sequence` = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $s['id']));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\t$tr_seq = db_fetch_assoc_prepared('SELECT *\n\t\tFROM automation_templates_rules\n\t\tWHERE template_id = ?\n\t\tAND rule_type = 2\n\t\tORDER BY sequence',\n\t\tarray($template_id));\n\n\tif (cacti_sizeof($tr_seq)) {\n\t\t$sequence = 1;\n\n\t\tforeach($tr_seq as $s) {\n\t\t\tdb_execute_prepared('UPDATE automation_templates_rules\n\t\t\t\tSET `sequence` = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $s['id']));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n}\n\nfunction automation_remove_atr_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tform_start('automation_templates.php?action=edit&id=' . get_request_var('template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$rule = db_fetch_row_prepared('SELECT *\n\t\tFROM automation_templates_rules\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('rule_id')));\n\n\tif (cacti_sizeof($rule)) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM automation_tree_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray($rule['rule_id']));\n\t} else {\n\t\t$name = __('Unknown');\n\t}\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to Delete the following Tree Rule(s) will be disassociated from the Device Rule.');?></p>\n\t\t\t<p><?php print __(\"Tree Rule Name: '%s'\", html_escape($name));?>\n\t\t\t<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Tree Rule');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\tvar options = {\n\t\t\turl: 'automation_templates.php?action=item_remove_atr'\n\t\t}\n\n\t\tvar data = {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\ttemplate_id: <?php print get_request_var('template_id');?>,\n\t\t\trule_id: <?php print get_request_var('rule_id');?>\n\t\t}\n\n\t\t$('#cdialog').dialog('close');\n\n\t\tpostUrl(options, data);\n\t});\n\t</script>\n\t<?php\n}\n\nfunction automation_remove_atr() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM automation_templates_rules\n\t\tWHERE id = ?\n\t\tAND rule_type = 2\n\t\tAND template_id = ?',\n\t\tarray(get_request_var('rule_id'), get_request_var('template_id')));\n\n\tautomation_resequence_rules(get_request_var('template_id'));\n\n\traise_message('rule_remove', __('The Tree Rule has been removed from the Device Automation Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction automation_remove_ttr() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('rule_id');\n\tget_filter_request_var('template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM plugin_thold_host_template\n\t\tWHERE id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('rule_id'), get_request_var('template_id')));\n\n\traise_message('rule_remove', __('The Threshold Template has been removed from the Device Automation Rule'), MESSAGE_LEVEL_INFO);\n}\n\nfunction automation_get_child_branches($tree_id, $id, $spaces, $headers) {\n\t$items = db_fetch_assoc_prepared('SELECT id, title\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND host_id = 0\n\t\tAND local_graph_id = 0\n\t\tAND parent = ?\n\t\tORDER BY position', array($tree_id, $id));\n\n\t$spaces .= '--';\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach ($items as $i) {\n\t\t\t$headers['tr_' . $tree_id . '_bi_' . $i['id']] = $spaces . ' ' . $i['title'];\n\n\t\t\t$headers = automation_get_child_branches($tree_id, $i['id'], $spaces, $headers);\n\t\t}\n\t}\n\n\treturn $headers;\n}\n\nfunction automation_get_tree_headers() {\n\t$headers = array();\n\t$trees   = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\tforeach ($trees as $tree) {\n\t\t$headers['tr_' . $tree['id'] . '_br_0'] = $tree['name'];\n\n\t\t$spaces = '';\n\n\t\t$headers = automation_get_child_branches($tree['id'], 0, $spaces, $headers);\n\t}\n\n\treturn $headers;\n}\n\nfunction template_edit() {\n\tglobal $availability_options, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$host_template_names = db_fetch_assoc('SELECT id, name FROM host_template');\n\n\t$template_names = array();\n\n\tif (cacti_sizeof($host_template_names)) {\n\t\tforeach ($host_template_names as $ht) {\n\t\t\t$template_names[$ht['id']] = $ht['name'];\n\t\t}\n\t}\n\n\t$fields = array(\n\t\t'spacer0' => array(\n\t\t\t'method'        => 'spacer',\n\t\t\t'friendly_name' => __('Matching Settings'),\n\t\t),\n\t\t'host_template' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('Device Template'),\n\t\t\t'description'   => __('Select a Device Template that Devices will be matched to.'),\n\t\t\t'value'         => '|arg1:host_template|',\n\t\t\t'array'         => $template_names,\n\t\t),\n\t\t'availability_method' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('Availability Method'),\n\t\t\t'description'   => __('Choose the Availability Method to use for Discovered Devices.'),\n\t\t\t'value'         => '|arg1:availability_method|',\n\t\t\t'default'       => read_config_option('availability_method'),\n\t\t\t'array'         => $availability_options,\n\t\t),\n\t\t'sysDescr' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('System Description Match'),\n\t\t\t'description'   => __('This is a unique string that will be matched to a devices sysDescr string to pair it to this Device Rule.  Any Perl regular expression can be used in addition to any SQL Where expression.'),\n\t\t\t'value'         => '|arg1:sysDescr|',\n\t\t\t'max_length'    => '255',\n\t\t),\n\t\t'sysName' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('System Name Match'),\n\t\t\t'description'   => __('This is a unique string that will be matched to a devices sysName string to pair it to this Device Rule.  Any Perl regular expression can be used in addition to any SQL Where expression.'),\n\t\t\t'value'         => '|arg1:sysName|',\n\t\t\t'max_length'    => '128',\n\t\t),\n\t\t'sysOid' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('System OID Match'),\n\t\t\t'description'   => __('This is a unique string that will be matched to a devices sysOid string to pair it to this Device Rule.  Any Perl regular expression can be used in addition to any SQL Where expression.'),\n\t\t\t'value'         => '|arg1:sysOid|',\n\t\t\t'max_length'    => '128',\n\t\t),\n\t\t'spacer1' => array(\n\t\t\t'method'        => 'spacer',\n\t\t\t'friendly_name' => __('Device Creation Defaults'),\n\t\t),\n\t\t'description_pattern' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Device Description Pattern'),\n\t\t\t'description'   => __('Represents the final desired Device description to be used in Cacti.  The following replacement values can be used: |sysName|, |ipAddress|, |dnsName|, |dnsShortName|, |sysLocation|.  The following functions can also be used: CONCAT(), SUBSTRING(), SUBSTRING_INDEX().  See the MySQL/MariaDB documentation for examples on how to use these functions.  An example would be: CONCAT(\\'|sysName|\\', SUBSTRING(\\'|sysLocation|\\',1,3)).  Take care to include quoting around the variables names when used in the supported MySQL/MariaDB function examples.'),\n\t\t\t'value'         => '|arg1:description_pattern|',\n\t\t\t'default'       => '|sysName|',\n\t\t\t'max_length'    => '128',\n\t\t\t'size'          => '80'\n\t\t),\n\t\t'populate_location' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Populate Location with sysLocation'),\n\t\t\t'description'   => __('If checked, when the Automation Network is scanned if a Device is found that will be added to Cacti, its Location will be updated to match the Devices sysLocation.'),\n\t\t\t'value'         => '|arg1:populate_location|',\n\t\t\t'default'       => ''\n\t\t),\n\t\t'id' => array(\n\t\t\t'method' => 'hidden_zero',\n\t\t\t'value'  => '|arg1:id|'\n\t\t),\n\t\t'save_component_template' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => '1'\n\t\t)\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM automation_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (isset($template_names[$template['host_template']])) {\n\t\t\t$header_label = __esc('Device Rules [edit: %s]', $template_names[$template['host_template']]);\n\t\t} else {\n\t\t\t$header_label = __('Device Rules for [Deleted Template]');\n\t\t}\n\t} else {\n\t\t$header_label = __('Device Rules [new]');\n\t\tset_request_var('id', 0);\n\t}\n\n\tform_start('automation_templates.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box();\n\n\tif (!isempty_request_var('id')) {\n\t\t/**\n\t\t * Start Graph Rules here.\n\t\t */\n\t\thtml_start_box(__('Associated Graph Rules'), '100%', '', '3', 'center', '');\n\n\t\t$graph_rules = db_fetch_assoc_prepared('SELECT atr.*, gr.name\n\t\t\tFROM automation_templates_rules AS atr\n\t\t\tINNER JOIN automation_graph_rules AS gr\n\t\t\tON atr.rule_id = gr.id\n\t\t\tAND atr.rule_type = 1\n\t\t\tWHERE template_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Graph Rule Name'),\n\t\t\t\t'align'   => 'left',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Sequence'),\n\t\t\t\t'align'   => 'right',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Actions'),\n\t\t\t\t'align'   => 'right',\n\t\t\t)\n\t\t);\n\n\t\thtml_header($display_text, false);\n\n\t\t$dnd = read_config_option('drag_and_drop') == 'on' ? true:false;\n\n\t\tif (cacti_sizeof($graph_rules)) {\n\t\t\t$i = 0;\n\n\t\t\tforeach($graph_rules as $rule) {\n\t\t\t\t$id = \"gr{$rule['id']}\";\n\n\t\t\t\tform_alternate_row($id, true);\n\n\t\t\t\tform_selectable_ecell($rule['name'], $id);\n\t\t\t\tform_selectable_cell($rule['sequence'], $id, '', 'right');\n\n\t\t\t\t$action = '';\n\t\t\t\tif (!$dnd) {\n\t\t\t\t\tif ($i != cacti_sizeof($graph_rules) - 1) {\n\t\t\t\t\t\t$action .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=item_movedown&template_id=' . get_request_var('id') . '&id=' . $rule['id'] . '&rule_type=1') . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$action .= '<a href=\"#\" class=\"moveArrowNone\"></a>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 0) {\n\t\t\t\t\t\t$action .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=item_moveup&template_id=' . get_request_var('id') . '&id=' . $rule['id'] . '&rule_type=1') . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$action .= '<a href=\"#\" class=\"moveArrowNone\"></a>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell(\"$action<a class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='\" . html_escape('automation_templates.php?action=item_remove_agr_confirm&template_id=' . get_request_var('id') . '&rule_id=' . $rule['id']) . \"'></a>\", $id, '40', 'right');\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"3\"><em>' . __('No Associated Graph Rules') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$field_label  = __('Add Graph Rule');\n\t\t$field_name   = 'graph_rule';\n\t\t$field_array  = db_fetch_assoc_prepared('SELECT DISTINCT ar.id, ar.name\n\t\t\tFROM automation_graph_rules AS ar\n\t\t\tLEFT JOIN automation_templates_rules AS art\n\t\t\tON ar.id = art.rule_id\n\t\t\tAND art.rule_type = 1\n\t\t\tWHERE ar.id NOT IN (\n\t\t\t\tSELECT rule_id\n\t\t\t\tFROM automation_templates_rules\n\t\t\t\tWHERE rule_type = 1\n\t\t\t\tAND template_id = ?\n\t\t\t)\n\t\t\tORDER BY ar.name',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$button_id     = 'add_agr';\n\t\t$button_label  = __esc('Add');\n\t\t$button_title  = __esc('Add Graph Rule to Device Rule');\n\n\t\tcreate_add_form_dropdown($field_label, $field_name, $field_array, $button_id, $button_label, $button_title);\n\n\t\thtml_end_box();\n\n\t\t/**\n\t\t * Start Tree Rules here.\n\t\t */\n\t\thtml_start_box(__('Associated Tree Rules'), '100%', '', '3', 'center', '');\n\n\t\t$tree_rules = db_fetch_assoc_prepared('SELECT atr.*, tr.name\n\t\t\tFROM automation_templates_rules AS atr\n\t\t\tINNER JOIN automation_tree_rules AS tr\n\t\t\tON atr.rule_id = tr.id\n\t\t\tAND atr.rule_type = 2\n\t\t\tWHERE template_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Tree Rule Name'),\n\t\t\t\t'align'   => 'left',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Exit On Match'),\n\t\t\t\t'align'   => 'left',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Sequence'),\n\t\t\t\t'align'   => 'right',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Actions'),\n\t\t\t\t'align'   => 'right',\n\t\t\t)\n\t\t);\n\n\t\thtml_header($display_text, false);\n\n\t\t$dnd = read_config_option('drag_and_drop') == 'on' ? true:false;\n\n\t\tif (cacti_sizeof($tree_rules)) {\n\t\t\t$i = 0;\n\n\t\t\tforeach($tree_rules as $rule) {\n\t\t\t\t$id = \"tr{$rule['id']}\";\n\n\t\t\t\t$exit_on_url = CACTI_PATH_URL . 'automation_templates.php' .\n\t\t\t\t\t'?action=exitonchange' .\n\t\t\t\t\t'&template_id='. get_request_var('id') .\n\t\t\t\t\t'&id='         . $rule['id'] .\n\t\t\t\t\t'&current='    . $rule['exit_rules'];\n\n\t\t\t\t$exit_text   = $rule['exit_rules'] == 0 ? __('No'):__('Yes');\n\n\t\t\t\tform_alternate_row($id, true);\n\n\t\t\t\tform_selectable_ecell($rule['name'], $id);\n\t\t\t\tform_selectable_cell(filter_value($exit_text, '', $exit_on_url), $id);\n\t\t\t\tform_selectable_cell($rule['sequence'], $id, '', 'right');\n\n\t\t\t\t$action = '';\n\t\t\t\tif (!$dnd) {\n\t\t\t\t\tif ($i != cacti_sizeof($tree_rules) - 1) {\n\t\t\t\t\t\t$action .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=item_movedown&template_id=' . get_request_var('id') . '&id=' . $rule['id'] . '&rule_type=2') . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$action .= '<a href=\"#\" class=\"moveArrowNone\"></a>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 0) {\n\t\t\t\t\t\t$action .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=item_moveup&template_id=' . get_request_var('id') . '&id=' . $rule['id'] . '&rule_type=2') . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$action .= '<a href=\"#\" class=\"moveArrowNone\"></a>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell(\"$action<a class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='\" . html_escape('automation_templates.php?action=item_remove_atr_confirm&template_id=' . get_request_var('id') . '&rule_id=' . $rule['id']) . \"'></a>\", $id, '40', 'right');\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"3\"><em>' . __('No Associated Tree Rules') . '</em></td></tr>';\n\t\t}\n\n\t\t$field_label  = __('Add Tree Rule');\n\t\t$field_name   = 'tree_rule';\n\t\t$field_array  = db_fetch_assoc_prepared('SELECT DISTINCT ar.id, ar.name\n\t\t\tFROM automation_tree_rules AS ar\n\t\t\tLEFT JOIN automation_templates_rules AS art\n\t\t\tON ar.id = art.rule_id\n\t\t\tAND art.rule_type = 2\n\t\t\tWHERE ar.id NOT IN (\n\t\t\t\tSELECT rule_id\n\t\t\t\tFROM automation_templates_rules\n\t\t\t\tWHERE rule_type = 2\n\t\t\t\tAND template_id = ?\n\t\t\t)\n\t\t\tORDER BY ar.name',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$button_id     = 'add_atr';\n\t\t$button_label  = __esc('Add');\n\t\t$button_title  = __esc('Add Tree Rule to Device Rule');\n\n\t\tcreate_add_form_dropdown($field_label, $field_name, $field_array, $button_id, $button_label, $button_title);\n\n\t\thtml_end_box();\n\n\t\tif (db_table_exists('plugin_thold_host_template')) {\n\t\t\t/**\n\t\t\t * Start Threshold Template here.\n\t\t\t */\n\t\t\thtml_start_box(__('Associated Threshold Templates'), '100%', '', '3', 'center', '');\n\n\t\t\t$thold_rules = db_fetch_assoc_prepared('SELECT tht.id AS rule_id, tt.id, tt.name\n\t\t\t\tFROM thold_template AS tt\n\t\t\t\tINNER JOIN plugin_thold_host_template AS tht\n\t\t\t\tON tht.thold_template_id = tt.id\n\t\t\t\tWHERE tht.host_template_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($template['host_template']));\n\n\t\t\t$display_text = array(\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Threshold Template Name'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Actions'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_header($display_text, false);\n\n\t\t\tif (cacti_sizeof($graph_rules)) {\n\t\t\t\tforeach($thold_rules as $rule) {\n\t\t\t\t\t$id = \"tt{$rule['rule_id']}\";\n\n\t\t\t\t\tform_alternate_row($id, true);\n\n\t\t\t\t\tform_selectable_ecell($rule['name'], $id);\n\n\t\t\t\t\tform_selectable_cell(\"$action<a class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='\" . html_escape('automation_templates.php?action=item_remove_ttr_confirm&id=' . get_request_var('id') . '&template_id=' . $template['host_template'] . '&rule_id=' . $rule['rule_id']) . \"'></a>\", $id, '40', 'right');\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"2\"><em>' . __('No Associated Threshold Template Rules') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\t$host_template_id = db_fetch_cell_prepared('SELECT host_template\n\t\t\t\tFROM automation_templates\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('id')));\n\n\t\t\thtml_end_box();\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$field_label  = __('Add Threshold Rule');\n\t\t\t$field_name   = 'thold_rule';\n\t\t\t$field_array  = db_fetch_assoc_prepared('SELECT DISTINCT tt.id, tt.name\n\t\t\t\tFROM thold_template AS tt\n\t\t\t\tLEFT JOIN plugin_thold_host_template AS tht\n\t\t\t\tON tt.id = tht.thold_template_id\n\t\t\t\tWHERE tt.id NOT IN (\n\t\t\t\t\tSELECT thold_template_id\n\t\t\t\t\tFROM plugin_thold_host_template\n\t\t\t\t\tWHERE host_template_id = ?\n\t\t\t\t)\n\t\t\t\tORDER BY tt.name',\n\t\t\t\tarray($host_template_id));\n\n\t\t\t$button_id     = 'add_ttr';\n\t\t\t$button_label  = __esc('Add');\n\t\t\t$button_title  = __esc('Add Threshold Rule to Device Rule');\n\n\t\t\tcreate_add_form_dropdown($field_label, $field_name, $field_array, $button_id, $button_label, $button_title);\n\n\t\t\thtml_end_box();\n\t\t}\n\t}\n\n\tform_save_button('automation_templates.php');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar dnd = <?php print read_config_option('drag_and_drop') == 'on' ? 'true':'false';?>;\n\n\t$(function() {\n\t\t$('#cdialog').remove();\n\t\t$('#main').append(\"<div id='cdialog' class='cdialog'></div>\");\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Item from Device Rule');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\n\t\t$('#add_agr').click(function() {\n\t\t\tvar options = {\n\t\t\t\turl: 'automation_templates.php?action=item_add_agr'\n\t\t\t}\n\n\t\t\tif ($('#graph_rule').val() == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\ttemplate_id: $('#id').val(),\n\t\t\t\trule_id: $('#graph_rule').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\n\t\t$('#add_atr').click(function() {\n\t\t\tvar options = {\n\t\t\t\turl: 'automation_templates.php?action=item_add_atr'\n\t\t\t}\n\n\t\t\tif ($('#tree_rule').val() == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\ttemplate_id: $('#id').val(),\n\t\t\t\trule_id: $('#tree_rule').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\n\t\t$('#add_ttr').click(function() {\n\t\t\tvar options = {\n\t\t\t\turl: 'automation_templates.php?action=item_add_ttr'\n\t\t\t}\n\n\t\t\tif ($('#thold_rule').val() == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\ttemplate_id: $('#id').val(),\n\t\t\t\tthold_template_id: $('#thold_rule').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\n\t\t$('#automation_templates_edit2_child').attr('id', 'graph_rules');\n\t\t$('#automation_templates_edit4_child').attr('id', 'tree_rules');\n\n\t\tif (dnd) {\n\t\t\t$('#graph_rules').find('tr:first').addClass('nodrag').addClass('nodrop');\n\t\t\t$('#tree_rules').find('tr:first').addClass('nodrag').addClass('nodrop');\n\n\t\t\t$('#graph_rules').tableDnD({\n\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\tloadUrl({url:'automation_templates.php?action=graph_dnd&id='+$('#id').val()+'&'+$.tableDnD.serialize()});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#tree_rules').tableDnD({\n\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\tloadUrl({url:'automation_templates.php?action=tree_dnd&id='+$('#id').val()+'&'+$.tableDnD.serialize()});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\t</script>\n\t<?php\n}\n\nfunction create_add_form_dropdown($field_label, $field_name, $field_array, $button_id, $button_label, $button_title) {\n\t?>\n\t<tr class='odd'>\n\t\t<td colspan='2'>\n\t\t\t<table>\n\t\t\t\t<tr style='line-height:10px'>\n\t\t\t\t\t<td class='nowrap templateAdd'>\n\t\t\t\t\t\t<?php print $field_label;?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t<?php form_dropdown($field_name, $field_array, 'name', 'id', '', '', '');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print $button_label;?>' id='<?php print $button_id;?>' title='<?php print $button_title;?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\nfunction template() {\n\tglobal $actions, $item_rows, $availability_options;\n\n\tautomation_update_hashes();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Device Rules'), 'automation_templates.php', 'snmp_at', 'sess_autot', 'automation_templates.php?action=edit');\n\n\t$pageFilter->rows_label = __('Templates');\n\t$pageFilter->has_import = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR ' .\n\t\t\t'sysName LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR ' .\n\t\t\t'sysDescr LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR ' .\n\t\t\t'sysOID LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM automation_templates AS at\n\t\tLEFT JOIN host_template AS ht\n\t\tON ht.id=at.host_template\n\t\t$sql_where\");\n\n\t$dts = db_fetch_assoc(\"SELECT at.*, ht.name\n\t\tFROM automation_templates AS at\n\t\tLEFT JOIN host_template AS ht\n\t\tON ht.id=at.host_template\n\t\t$sql_where\n\t\tORDER BY sequence \" .\n\t\t' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows);\n\n\t$nav = html_nav_bar('automation_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Templates'), 'page', 'main');\n\n\tform_start('automation_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\tarray(\n\t\t\t'display' => __('Template Name'),\n\t\t\t'align'   => 'left'\n\t\t),\n\t\tarray(\n\t\t\t'display' => __('Availability Method'),\n\t\t\t'align'   => 'left'\n\t\t),\n\t\tarray(\n\t\t\t'display' => __('System Description Match'),\n\t\t\t'align'   => 'left'\n\t\t),\n\t\tarray(\n\t\t\t'display' => __('System Name Match'),\n\t\t\t'align'   => 'left'\n\t\t),\n\t\tarray(\n\t\t\t'display' => __('System ObjectId Match'),\n\t\t\t'align'   => 'left'\n\t\t)\n\t);\n\n\tif (read_config_option('drag_and_drop') == '') {\n\t\t$display_text[] = array('display' => __('Order'), 'align' => 'center');\n\t}\n\n\thtml_header_checkbox($display_text, false);\n\n\t$total_items = cacti_sizeof($dts);\n\n\tif (cacti_sizeof($dts)) {\n\t\t$i = 0;\n\n\t\tforeach ($dts as $dt) {\n\t\t\tif ($dt['name'] == '') {\n\t\t\t\t$name = __('Unknown Template');\n\t\t\t} else {\n\t\t\t\t$name = $dt['name'];\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $dt['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($name, get_request_var('filter'), 'automation_templates.php?action=edit&id=' . $dt['id']), $dt['id']);\n\t\t\tform_selectable_cell($availability_options[$dt['availability_method']], $dt['id']);\n\t\t\tform_selectable_cell(filter_value($dt['sysDescr'], get_request_var('filter')), $dt['id']);\n\t\t\tform_selectable_cell(filter_value($dt['sysName'], get_request_var('filter')), $dt['id']);\n\t\t\tform_selectable_cell(filter_value($dt['sysOid'], get_request_var('filter')), $dt['id']);\n\n\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t$add_text = '';\n\n\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t$add_text .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=movedown&id=' . $dt['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$add_text .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t}\n\n\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t$add_text .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('automation_templates.php?action=moveup&id=' . $dt['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$add_text .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($add_text, $dt['id'], '', 'center');\n\t\t\t}\n\n\t\t\tform_checkbox_cell($name, $dt['id']);\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Automation Device Templates Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($dts)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#automation_templates2_child').attr('id', 'template_ids');\n\n\t\t$('img.action').click(function() {\n\t\t\tstrURL = $(this).attr('href');\n\t\t\tloadUrl({url:strURL})\n\t\t});\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#template_ids').find('tr:first').addClass('nodrag').addClass('nodrop');\n\n\t\t$('#template_ids').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'automation_templates.php?action=ajax_dnd&'+$.tableDnD.serialize()})\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t});\n\t</script>\n\t<?php\n}\n\n"
        },
        {
          "name": "automation_tree_rules.php",
          "type": "blob",
          "size": 39.7373046875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\n\n$actions = array(\n\tAUTOMATION_ACTION_TREE_DUPLICATE => __('Duplicate'),\n\tAUTOMATION_ACTION_TREE_ENABLE    => __('Enable'),\n\tAUTOMATION_ACTION_TREE_EXPORT    => __('Export'),\n\tAUTOMATION_ACTION_TREE_DISABLE   => __('Disable'),\n\tAUTOMATION_ACTION_TREE_DELETE    => __('Delete'),\n);\n\n/* sanitize the tab */\nget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tautomation_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tautomation_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tautomation_export();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tautomation_tree_rules_form_actions();\n\n\t\tbreak;\n\tcase 'change_leaf':\n\t\tautomation_tree_rules_change_leaf();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tautomation_tree_rules_item_movedown();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tautomation_tree_rules_item_moveup();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tautomation_tree_rules_item_remove();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'remove':\n\t\tautomation_tree_rules_remove();\n\n\t\theader('Location: automation_tree_rules.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tautomation_tree_rules();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction automation_export() {\n\tprocess_sanitize_draw_filter(true);\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif(cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = automation_tree_rule_export($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$snmp_option_ids[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = automation_tree_rule_export($snmp_option_ids);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t}\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: automation_tree_rules.php');\n\t\texit;\n\t}\n}\n\nfunction automation_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import Tree Rules from Local File',),\n\t\t\t'description' => __('If the JSON file containing the Tree Rules data is located on your local machine, select it here.'),\n\t\t\t'method' => 'file',\n\t\t\t'accept' => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Import Tree Rules from Text'),\n\t\t\t'description' => __('If you have the JSON file containing the Tree Rules data as text, you can paste it into this box to import it.'),\n\t\t\t'value' => '',\n\t\t\t'default' => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class' => 'textAreaNotes'\n\t\t),\n\t\t'import_trees_branches' => array(\n\t\t\t'friendly_name' => __('Import Device Rules Trees and Branches'),\n\t\t\t'description'   => __('Automatically Recreate the Trees and Branches if they do not exist upon Import.'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'value'         => '',\n\t\t\t'default'       => ''\n\t\t)\n\t);\n\n\tform_start('automation_tree_rules.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has Imported the following Tree Rules'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Tree Rules'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import Tree Rules') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction automation_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = automation_validate_upload();\n\t}\n\n\tif (isset_request_var('import_trees_branches')) {\n\t\t$trees = true;\n\t} else {\n\t\t$trees = false;\n\t}\n\n\t$return_data = automation_tree_rule_import($json_data, $trees);\n\n\tif (sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Tree Rules Import Succeeded!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tautomation_log('NOTE: Automation Tree Rules Import Error!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tautomation_log('NOTE: Automation Tree Rules Import Failed!.  Message: '. $message, AUTOMATION_LOG_LOW);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: automation_tree_rules.php?action=import');\n\n\texit();\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_automation_tree_rule')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']                 = get_request_var('id');\n\t\t$save['hash']               = get_hash_automation(get_request_var('id'), 'automation_tree_rules');\n\t\t$save['name']               = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['tree_id']            = form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[0-9]+$', false, 3);\n\t\t$save['tree_item_id']       = isset_request_var('tree_item_id') ? form_input_validate(get_nfilter_request_var('tree_item_id'), 'tree_item_id', '^[0-9]+$', false, 3) : 0;\n\t\t$save['leaf_type']          = (isset_request_var('leaf_type')) ? form_input_validate(get_nfilter_request_var('leaf_type'), 'leaf_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['host_grouping_type'] = isset_request_var('host_grouping_type') ? form_input_validate(get_nfilter_request_var('host_grouping_type'), 'host_grouping_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['enabled']            = (isset_request_var('enabled') ? 'on' : '');\n\n\t\tif (!is_error_message()) {\n\t\t\t$rule_id = sql_save($save, 'automation_tree_rules');\n\n\t\t\tif ($rule_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . (empty($rule_id) ? get_request_var('id') : $rule_id));\n\t} elseif (isset_request_var('save_component_automation_match_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\t$save              = array();\n\t\t$save['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['hash']      = get_hash_automation(get_request_var('item_id'), 'automation_match_rule_items');\n\t\t$save['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['rule_type'] = AUTOMATION_RULE_TYPE_TREE_MATCH;\n\t\t$save['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);\n\t\t$save['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);\n\t\t$save['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_match_rule_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($item_id) ? get_request_var('item_id') : $item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t}\n\t} elseif (isset_request_var('save_component_automation_tree_rule_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\tunset($save);\n\t\t$save['id']                = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['hash']              = get_hash_automation(get_request_var('item_id'), 'automation_tree_rule_items');\n\t\t$save['rule_id']           = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['field']             = form_input_validate((isset_request_var('field') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['sort_type']         = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '^[0-9]+$', false, 3);\n\t\t$save['propagate_changes'] = (isset_request_var('propagate_changes') ? 'on' : '');\n\t\t$save['search_pattern']    = isset_request_var('search_pattern') ? form_input_validate(get_nfilter_request_var('search_pattern'), 'search_pattern', '', false, 3) : '';\n\t\t$save['replace_pattern']   = isset_request_var('replace_pattern') ? form_input_validate(get_nfilter_request_var('replace_pattern'), 'replace_pattern', '', true, 3) : '';\n\n\t\tif (!is_error_message()) {\n\t\t\t$automation_graph_rule_item_id = sql_save($save, 'automation_tree_rule_items');\n\n\t\t\tif ($automation_graph_rule_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($automation_graph_rule_item_id) ? get_request_var('item_id') : $automation_graph_rule_item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t}\n\t} else {\n\t\traise_message(2);\n\t\theader('Location: automation_tree_rules.php');\n\t}\n}\n\nfunction automation_tree_rules_form_actions() {\n\tglobal $actions;\n\tglobal $config;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DELETE) { /* DELETE */\n\t\t\t\tautomation_log('form_actions DELETE: ' . serialize($selected_items), AUTOMATION_LOG_HIGH);\n\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rules WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t\tdb_execute('DELETE FROM automation_match_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DUPLICATE) { /* duplicate */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions duplicate: ' . $selected_items[$i], AUTOMATION_LOG_HIGH);\n\n\t\t\t\t\tduplicate_automation_tree_rules($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_ENABLE) { /* enable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions enable: ' . $selected_items[$i], AUTOMATION_LOG_HIGH);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DISABLE) { /* disable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_log('form_actions disable: ' . $selected_items[$i], AUTOMATION_LOG_HIGH);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_EXPORT) { /* export */\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"automation_tree_rules.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'automation_tree_rules.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'automation_tree_rules.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\tAUTOMATION_ACTION_TREE_DELETE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Tree Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Tree Rules.'),\n\t\t\t\t\t'scont'    => __('Delete Tree Rule'),\n\t\t\t\t\t'pcont'    => __('Delete Tree Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_TREE_ENABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Tree Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Tree Rules.'),\n\t\t\t\t\t'scont'    => __('Enable Tree Rule'),\n\t\t\t\t\t'pcont'    => __('Enable Tree Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_TREE_DISABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Tree Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Tree Rules.'),\n\t\t\t\t\t'scont'    => __('Disable Tree Rule'),\n\t\t\t\t\t'pcont'    => __('Disable Tree Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_TREE_EXPORT => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following Tree Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export following Tree Rules.'),\n\t\t\t\t\t'scont'    => __('Export Tree Rule'),\n\t\t\t\t\t'pcont'    => __('Export Tree Rules')\n\t\t\t\t),\n\t\t\t\tAUTOMATION_ACTION_TREE_DUPLICATE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Tree Rule.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Tree Rules.'),\n\t\t\t\t\t'scont'    => __('Duplicate Tree Rule'),\n\t\t\t\t\t'pcont'    => __('Duplicate Tree Rules'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'name_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<rule_name> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction automation_tree_rules_change_leaf() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('leaf_type');\n\t/* ==================================================== */\n\n\tautomation_change_tree_rule_leaf_type(get_request_var('leaf_type'), get_request_var('id'));\n}\n\nfunction automation_tree_rules_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_down('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_down('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_up('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_up('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t}\n}\n\nfunction automation_tree_rules_item_edit() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$tabs = array(\n\t\t\t'rule'    => __('Rule Item')\n\t\t);\n\n\t\tif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\t\t\t$item = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM automation_tree_rule_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_request_var('item_id')));\n\n\t\t\t\tif ($item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING) {\n\t            \t$tabs['objects'] = __('Matching Items');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tunset($tabs['objects']);\n\t\t}\n\n        html_sub_tabs($tabs, 'action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));\n\t} else {\n\t\t$tabs = array(\n\t\t\t'rule' => __('Rule Item')\n\t\t);\n\n        html_sub_tabs($tabs, 'action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));\n\t}\n\n\tif (!isset_request_var('tab') || get_request_var('tab') == 'rule') {\n\t\tglobal_item_edit(get_request_var('id'), get_request_var('item_id'), get_request_var('rule_type'));\n\n\t\tform_hidden_box('rule_type', get_request_var('rule_type'), get_request_var('rule_type'));\n\t\tform_hidden_box('id', (isset_request_var('id') ? get_request_var('id') : '0'), '');\n\t\tform_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');\n\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\t\tform_hidden_box('save_component_automation_match_item', '1', '');\n\t\t} else {\n\t\t\tform_hidden_box('save_component_automation_tree_rule_item', '1', '');\n\t\t}\n\n\t\tform_save_button('automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . get_request_var('rule_type'));\n\t} elseif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\t/* display list of matching trees */\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION &&\n\t\t\t$item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING) {\n\t\t\tdisplay_matching_trees(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_ACTION, $item, 'automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));\n\t\t}\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tapplyHeaderChange();\n\ttoggle_operation();\n\ttoggle_operator();\n\n\tfunction applyHeaderChange() {\n\t\tif ($('#rule_type').val() == '<?php print AUTOMATION_RULE_TYPE_TREE_ACTION;?>') {\n\t\t\tif ($('#field').val() == '<?php print AUTOMATION_TREE_ITEM_TYPE_STRING;?>') {\n\t\t\t\t$('#replace_pattern').val('');\n\t\t\t\t$('#replace_pattern').prop('disabled', true);\n\t\t\t} else {\n\t\t\t\t$('#replace_pattern').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction toggle_operation() {\n\t\t// right bracket ')' does not come with a field\n\t\tif ($('operation').value == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t\t\t$('#field').val('');\n\t\t\t$('#field').prop('disabled', true);\n\t\t\t$('#operator').val(0);\n\t\t\t$('#operator').prop('disabled', true);\n\t\t\t$('#pattern').val('');\n\t\t\t$('#pattern').prop('disabled', true);\n\t\t} else {\n\t\t\t$('#field').prop('disabled', false);\n\t\t\t$('#operator').prop('disabled', false);\n\t\t\t$('#pattern').prop('disabled', false)\n\t\t}\n\t}\n\n\tfunction toggle_operator() {\n\t\t// if operator is not 'binary', disable the 'field' for matching strings\n\t\tif ($('#operator').val() == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t\t} else {\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction automation_tree_rules_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM automation_match_rule_items\n\t\tWHERE rule_id = ?\n\t\tAND rule_type = ?',\n\t\tarray(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_MATCH));\n\n\tdb_execute_prepared('DELETE FROM automation_tree_rule_items\n\t\tWHERE rule_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE FROM automation_tree_rules\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction automation_tree_rules_edit() {\n\tglobal $config;\n\tglobal $fields_automation_tree_rules_edit1, $fields_automation_tree_rules_edit2, $fields_automation_tree_rules_edit3;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/html_tree.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('rows');\n\tget_filter_request_var('tree_id');\n\tget_filter_request_var('leaf_type');\n\tget_filter_request_var('host_grouping_type');\n\tget_filter_request_var('tree_item_id');\n\tget_filter_request_var('show_hosts');\n\t/* ==================================================== */\n\n\t/* clean up rule name */\n\tif (isset_request_var('name')) {\n\t\tset_request_var('name', sanitize_search_string(get_request_var('name')));\n\t}\n\n\t/* remember these search fields in session vars so we don't have to keep passing them around */\n\tload_current_session_value('rows', 'sess_default_rows', read_config_option('num_rows_table'));\n\n\t$rule = array();\n\n\tif (get_request_var('id') > 0) {\n\t\t$rule = db_fetch_row_prepared('SELECT *\n\t\t\tFROM automation_tree_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif ($rule['leaf_type'] == TREE_ITEM_TYPE_HOST) {\n\t\t\t$tabs = array(\n\t\t\t\t'rule'    => __('Rule'),\n\t\t\t\t'hosts'   => __('Matching Devices')\n\t\t\t);\n\t\t} else {\n\t\t\t$tabs = array(\n\t\t\t\t'rule'    => __('Rule'),\n\t\t\t\t'graphs'   => __('Matching Graphs')\n\t\t\t);\n\t\t}\n\n        html_sub_tabs($tabs, 'action=edit&id=' . get_filter_request_var('id'));\n\n\t\t$header_label = __esc('Tree Rule Selection [edit: %s]', $rule['name']);\n\t} else {\n\t\t$tabs = array(\n\t\t\t'rule'    => __('Rule')\n\t\t);\n\n        html_sub_tabs($tabs, 'action=edit&id=' . get_filter_request_var('id'));\n\n\t\t$header_label = __('Tree Rules Selection [new]');\n\t}\n\n\tif (get_nfilter_request_var('tab') == 'rule') {\n\t\t/**\n\t\t * display the rule\n\t\t */\n\t\tform_start('automation_tree_rules.php', 'form_automation_tree_rule_edit');\n\n\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\tif (get_request_var('id') > 0) {\n\t\t\t/* display whole rule */\n\t\t\t$form_array = $fields_automation_tree_rules_edit1 +\n\t\t\t\t$fields_automation_tree_rules_edit2 +\n\t\t\t\t$fields_automation_tree_rules_edit3;\n\t\t} else {\n\t\t\t/* display first part of rule only and request user to proceed */\n\t\t\t$form_array = $fields_automation_tree_rules_edit1;\n\t\t}\n\n\t\tif (isset_request_var('name')) {\n\t\t\t$rule['name'] = get_nfilter_request_var('name');\n\t\t}\n\n\t\tif (isset_request_var('tree_id')) {\n\t\t\t$rule['tree_id'] = get_nfilter_request_var('tree_id');\n\t\t}\n\n\t\tif (isset_request_var('tree_item_id')) {\n\t\t\t$rule['tree_item_id'] = get_nfilter_request_var('tree_item_id');\n\t\t}\n\n\t\tif (isset_request_var('leaf_type')) {\n\t\t\t$rule['leaf_type'] = get_nfilter_request_var('leaf_type');\n\t\t}\n\n\t\tif (isset_request_var('enabled')) {\n\t\t\tif (get_nfilter_request_var('enabled') == 'true') {\n\t\t\t\t$rule['enabled'] = 'on';\n\t\t\t} else {\n\t\t\t\t$rule['enabled'] = '';\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_array, (isset($rule) ? $rule : array()))\n\t\t));\n\n\t\tform_hidden_box('id', (isset($rule['id']) ? $rule['id'] : '0'), '');\n\t\tform_hidden_box('item_id', (isset($rule['item_id']) ? $rule['item_id'] : '0'), '');\n\t\tform_hidden_box('save_component_automation_tree_rule', '1', '');\n\n\t\thtml_end_box(true, true);\n\n\t\t/**\n\t\t * display the rule items\n\t\t */\n\t\tif (isset($rule['id'])) {\n\t\t\t// display tree rules for host match\n\t\t\tdisplay_match_rule_items(__('Object Selection Criteria'), $rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php');\n\n\t\t\t// fetch tree action rules\n\t\t\tdisplay_tree_rule_items(__('Tree Creation Criteria'), $rule, $rule['leaf_type'], AUTOMATION_RULE_TYPE_TREE_ACTION, 'automation_tree_rules.php');\n\t\t}\n\n\t\tform_save_button('automation_tree_rules.php', 'return');\n\t} elseif ($rule['leaf_type'] == TREE_ITEM_TYPE_HOST) {\n\t\tdisplay_matching_hosts($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&tab=hosts&id=' . get_request_var('id'));\n\t} elseif ($rule['leaf_type'] == TREE_ITEM_TYPE_GRAPH) {\n\t\tdisplay_matching_graphs($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&tab=graphs&id=' . get_request_var('id'));\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar automationLeafTypeOriginal = $('#leaf_type').val();\n\n\t<?php\n\tif (!empty($rule['id'])) {\n\t\tprint 'var isNew = false;';\n\t} else {\n\t\tprint 'var isNew = true;';\n\t}\n\t?>\n\n\t$(function() {\n\t\tapplyItemTypeChange();\n\n\t\t$('#show_device_sql').click(function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\t$('#sql_device_query').dialog({\n\t\t\t\t'title': '<?php print __('SQL Debug Output');?>',\n\t\t\t\t'autoOpen': true,\n\t\t\t\t'width': 700\n\t\t\t});\n\t\t});\n\n\t\t$('#show_sql').click(function(event) {\n\t\t\tevent.stopPropagation();\n\t\t\t$('#sql_query').dialog({\n\t\t\t\t'title': '<?php print __('SQL Debug Output');?>',\n\t\t\t\t'autoOpen': true,\n\t\t\t\t'width': 700\n\t\t\t});\n\t\t});\n\t});\n\n\tfunction applyTreeChange(action,force) {\n\t\tif (force == undefined) {\n\t\t\tforce = false;\n\t\t}\n\n\t\tif (action == undefined) {\n\t\t\taction = 'edit';\n\t\t}\n\n\t\tstrURL  = 'automation_tree_rules.php?action=' + action;\n\t\tstrURL += '&id=' + $('#id').val();\n\t\tstrURL += '&name=' + $('#name').val();\n\t\tstrURL += '&tree_id=' + $('#tree_id').val();\n\t\tstrURL += '&tree_item_id=' + $('#tree_item_id').val();\n\t\tstrURL += '&leaf_type=' + $('#leaf_type').val();\n\t\tstrURL += '&enabled=' + $('#enabled').is(':checked');\n\n\t\tloadUrl({url:strURL,undefined,force})\n\t}\n\n\tfunction applyItemTypeChange() {\n\t\tvar automationLeafTypeNew = $('#leaf_type').val();\n\t\tif (automationLeafTypeOriginal != automationLeafTypeNew && !isNew) {\n\t\t\tif (automationLeafTypeNew == 3) {\n\t\t\t\tvar automationLeafTypeButtons = {\n\t\t\t\t\t'Yes': {\n\t\t\t\t\t\ttext: '<?php print __('Yes'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeYes',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'No': {\n\t\t\t\t\t\ttext: '<?php print __('No'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeNo',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t\tvar leaf = $('#leaf_type');\n\t\t\t\t\t\t\tif (leaf != null) {\n\t\t\t\t\t\t\t\tleaf.val(automationLeafTypeOriginal);\n\t\t\t\t\t\t\t\tleaf.selectmenu(\"refresh\");\n\t\t\t\t\t\t\t\tleaf.change();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar automationLeafTypeTitle = '<?php print __('Change Leaf Type'); ?>';\n\t\t\t\tvar automationLeafTypeContainer = '<div id=\"automationLeafTypeContainer\" style=\"display:none\">' +\n\t\t\t\t\t'<p style=\"display:table-cell;overflow:auto\"> ' +\n\t\t\t\t\t'<b><?php print __('WARNING:'); ?></b>' +\n\t\t\t\t\t'<?php print __('You are changing the leaf type to \"Device\" which does not support Graph-based object matching/creation.');?>' +\n\t\t\t\t\t'<?php print __('By changing the leaf type, all invalid rules will be automatically removed and will not be recoverable.');?> <br/><br/>' +\n\t\t\t\t\t'<?php print __('Are you sure you wish to continue?');?>' +\n\t\t\t\t\t'</p>' +\n\t\t\t\t\t'</div>';\n\n\t\t\t\t$('#automationLeafTypeContainer').remove();\n\t\t\t\t$('body').append(automationLeafTypeContainer);\n\n\t\t\t\tvar automationLeafTypeWidth = $(window).width();\n\t\t\t\tif (automationLeafTypeWidth > 600) {\n\t\t\t\t\tautomationLeafTypeWidth = 600;\n\t\t\t\t} else {\n\t\t\t\t\tautomationLeafTypeWidth -= 50;\n\t\t\t\t}\n\n\t\t\t\t$('#automationLeafTypeContainer').dialog({\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tresizable: false,\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tminWidth: automationLeafTypeWidth,\n\t\t\t\t\tmaxWidth: 800,\n\t\t\t\t\tmaxHeight: 600,\n\t\t\t\t\ttitle: automationLeafTypeTitle,\n\t\t\t\t\tbuttons: automationLeafTypeButtons\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_HOST;?>') {\n\t\t\t\t$('#row_host_grouping_type').show();\n\t\t\t} else if ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_GRAPH;?>') {\n\t\t\t\t$('#row_host_grouping_type').hide();\n\t\t\t}\n\t\t\t$('#leaf_type').selectmenu(\"refresh\");\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$status_arr = array(\n\t\t'-1' => __('Any'),\n\t\t'-2' => __('Enabled'),\n\t\t'-3' => __('Disabled')\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status_arr,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Tree Rules'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'import' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Import'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Import Tree Rules'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Tree Rules'), 'automation_tree_rules.php', 'form_automation', 'sess_autom_tr', 'automation_tree_rules.php?action=edit');\n\n\t$pageFilter->rows_label = __('Tree Rules');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n\nfunction automation_tree_rules() {\n\tglobal $actions, $config, $item_rows;\n\tglobal $automation_tree_item_types, $host_group_types;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif ((!empty($_SESSION['sess_autom_tr_status'])) && (!isempty_request_var('status'))) {\n\t\tif ($_SESSION['sess_autom_tr_status'] != get_nfilter_request_var('status')) {\n\t\t\tset_request_var('page', 1);\n\t\t}\n\t}\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'WHERE' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where    = 'WHERE (atr.name LIKE ?)';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . \" AND atr.enabled = 'on'\";\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . \" AND atr.enabled = ''\";\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(atr.id)\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.id=gt.id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$automation_tree_rules = db_fetch_assoc(\"SELECT atr.id, atr.name,\n\t\tatr.tree_id, atr.tree_item_id,\n\t\tatr.leaf_type, atr.host_grouping_type, atr.enabled,\n\t\tgt.name AS tree_name, gti.title AS subtree_name\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.tree_id=gt.id\n\t\tLEFT JOIN graph_tree_items AS gti\n\t\tON atr.tree_item_id = gti.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$nav = html_nav_bar('automation_tree_rules.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Tree Rules'), 'page', 'main');\n\n\tform_start('automation_tree_rules.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Rule Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'tree_name' => array(\n\t\t\t'display' => __('Hook into Tree'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'subtree_name' => array(\n\t\t\t'display' => __('At Subtree'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'leaf_type' => array(\n\t\t\t'display' => __('This Type'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'host_grouping_type' => array(\n\t\t\t'display' => __('Using Grouping'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tforeach ($automation_tree_rules as $automation_tree_rule) {\n\t\t\t$tree_item_type_name     = ((empty($automation_tree_rule['leaf_type'])) ? '<em>' . __('None') . '</em>' : $automation_tree_item_types[$automation_tree_rule['leaf_type']]);\n\t\t\t$subtree_name            = ((empty($automation_tree_rule['subtree_name'])) ? '<em>' . __('ROOT') . '</em>' : html_escape($automation_tree_rule['subtree_name']));\n\t\t\t$tree_host_grouping_type = ((empty($host_group_types[$automation_tree_rule['host_grouping_type']])) ? '' : $host_group_types[$automation_tree_rule['host_grouping_type']]);\n\n\t\t\tform_alternate_row('line' .  $automation_tree_rule['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($automation_tree_rule['name'], get_request_var('filter'), 'automation_tree_rules.php?action=edit&id=' . $automation_tree_rule['id'] . '&page=1'), $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['id'], $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_selectable_ecell($automation_tree_rule['tree_name'], $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($subtree_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_item_type_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_host_grouping_type, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['enabled'] ? __('Enabled'):__('Disabled'), $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($automation_tree_rule['name'], $automation_tree_rule['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Tree Rules Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "cacti.sql",
          "type": "blob",
          "size": 140.3642578125,
          "content": "/*\n  +-------------------------------------------------------------------------+\n  | Copyright (C) 2004-2024 The Cacti Group                                 |\n  |                                                                         |\n  | This program is free software; you can redistribute it and/or           |\n  | modify it under the terms of the GNU General Public License             |\n  | as published by the Free Software Foundation; either version 2          |\n  | of the License, or (at your option) any later version.                  |\n  |                                                                         |\n  | This program is distributed in the hope that it will be useful,         |\n  | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n  | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n  | GNU General Public License for more details.                            |\n  +-------------------------------------------------------------------------+\n  | Cacti: The Complete RRDTool-based Graphing Solution                     |\n  +-------------------------------------------------------------------------+\n  | This code is designed, written, and maintained by the Cacti Group. See  |\n  | about.php and/or the AUTHORS file for specific developer information.   |\n  +-------------------------------------------------------------------------+\n  | http://www.cacti.net/                                                   |\n  +-------------------------------------------------------------------------+\n*/\n\n--\n-- Allow MySQL to handle Cacti's legacy syntax\n--\n\nDELIMITER //\n\nSET @sqlmode= \"\";\nSET SESSION sql_mode = @sqlmode;\n\n--\n-- Table structure for table `aggregate_graph_templates`\n--\n\nCREATE TABLE `aggregate_graph_templates` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(64) NOT NULL,\n  `graph_template_id` int(10) unsigned NOT NULL,\n  `gprint_prefix` varchar(64) NOT NULL,\n  `gprint_format` char(2) default '',\n  `graph_type` int(10) unsigned NOT NULL,\n  `total` int(10) unsigned NOT NULL,\n  `total_type` int(10) unsigned NOT NULL,\n  `total_prefix` varchar(64) NOT NULL,\n  `order_type` int(10) unsigned NOT NULL,\n  `created` timestamp NOT NULL default CURRENT_TIMESTAMP,\n  `user_id` int(10) unsigned NOT NULL,\n  `graphs` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `graph_template_id` (`graph_template_id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Template Definitions for Aggregate Graphs';\n\n--\n-- Table structure for table `aggregate_graph_templates_graph`\n--\n\nCREATE TABLE `aggregate_graph_templates_graph` (\n  `aggregate_template_id` int(10) unsigned NOT NULL,\n  `t_image_format_id` char(2) default '',\n  `image_format_id` tinyint(3) unsigned NOT NULL default '0',\n  `t_height` char(2) default '',\n  `height` mediumint(8) NOT NULL default '0',\n  `t_width` char(2) default '',\n  `width` mediumint(8) NOT NULL default '0',\n  `t_upper_limit` char(2) default '',\n  `upper_limit` varchar(20) NOT NULL default '0',\n  `t_lower_limit` char(2) default '',\n  `lower_limit` varchar(20) NOT NULL default '0',\n  `t_vertical_label` char(2) default '',\n  `vertical_label` varchar(200) default '',\n  `t_slope_mode` char(2) default '',\n  `slope_mode` char(2) default 'on',\n  `t_auto_scale` char(2) default '',\n  `auto_scale` char(2) default '',\n  `t_auto_scale_opts` char(2) default '',\n  `auto_scale_opts` tinyint(3) unsigned NOT NULL default '0',\n  `t_auto_scale_log` char(2) default '',\n  `auto_scale_log` char(2) default '',\n  `t_scale_log_units` char(2) default '',\n  `scale_log_units` char(2) default '',\n  `t_auto_scale_rigid` char(2) default '',\n  `auto_scale_rigid` char(2) default '',\n  `t_auto_padding` char(2) default '',\n  `auto_padding` char(2) default '',\n  `t_base_value` char(2) default '',\n  `base_value` mediumint(8) NOT NULL default '0',\n  `t_grouping` char(2) default '',\n  `grouping` char(2) NOT NULL default '',\n  `t_unit_value` char(2) default '',\n  `unit_value` varchar(20) default '',\n  `t_unit_exponent_value` char(2) default '',\n  `unit_exponent_value` varchar(5) NOT NULL default '',\n  t_alt_y_grid char(2) default '',\n  alt_y_grid char(2) default NULL,\n  t_right_axis char(2) default '',\n  right_axis varchar(20) default NULL,\n  t_right_axis_label char(2) default '',\n  right_axis_label varchar(200) default NULL,\n  t_right_axis_format char(2) default '',\n  right_axis_format mediumint(8) default NULL,\n  t_right_axis_formatter char(2) default '',\n  right_axis_formatter varchar(10) default NULL,\n  t_left_axis_format char(2) default '',\n  left_axis_format mediumint(8) default NULL,\n  t_left_axis_formatter char(2) default '',\n  left_axis_formatter varchar(10) default NULL,\n  t_no_gridfit char(2) default '',\n  no_gridfit char(2) default NULL,\n  t_unit_length char(2) default '',\n  unit_length varchar(10) default NULL,\n  t_tab_width char(2) default '',\n  tab_width varchar(20) default '30',\n  t_dynamic_labels char(2) default '',\n  dynamic_labels char(2) default NULL,\n  t_force_rules_legend char(2) default '',\n  force_rules_legend char(2) default NULL,\n  t_legend_position char(2) default '',\n  legend_position varchar(10) default NULL,\n  t_legend_direction char(2) default '',\n  legend_direction varchar(10) default NULL,\n  PRIMARY KEY (`aggregate_template_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Aggregate Template Graph Data';\n\n--\n-- Table structure for table `aggregate_graph_templates_item`\n--\n\nCREATE TABLE `aggregate_graph_templates_item` (\n  `aggregate_template_id` int(10) unsigned NOT NULL,\n  `graph_templates_item_id` int(10) unsigned NOT NULL,\n  `sequence` mediumint(8) unsigned NOT NULL default '0',\n  `color_template` int(10) unsigned NOT NULL,\n  `t_graph_type_id` char(2) default '',\n  `graph_type_id` tinyint(3) unsigned NOT NULL default '0',\n  `t_cdef_id` char(2) default '',\n  `cdef_id` mediumint(8) unsigned default NULL,\n  `item_skip` char(2) NOT NULL,\n  `item_total` char(2) NOT NULL,\n  PRIMARY KEY (`aggregate_template_id`,`graph_templates_item_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Aggregate Template Graph Items';\n\n--\n-- Table structure for table `aggregate_graphs`\n--\n\nCREATE TABLE `aggregate_graphs` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `aggregate_template_id` int(10) unsigned NOT NULL,\n  `template_propogation` char(2) NOT NULL default '',\n  `local_graph_id` int(10) unsigned NOT NULL,\n  `title_format` varchar(128) NOT NULL,\n  `graph_template_id` int(10) unsigned NOT NULL,\n  `gprint_prefix` varchar(64) NOT NULL,\n  `gprint_format` char(2) default '',\n  `graph_type` int(10) unsigned NOT NULL,\n  `total` int(10) unsigned NOT NULL,\n  `total_type` int(10) unsigned NOT NULL,\n  `total_prefix` varchar(64) NOT NULL,\n  `order_type` int(10) unsigned NOT NULL,\n  `created` timestamp NOT NULL default CURRENT_TIMESTAMP,\n  `user_id` int(10) unsigned NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `aggregate_template_id` (`aggregate_template_id`),\n  KEY `local_graph_id` (`local_graph_id`),\n  KEY `title_format` (`title_format`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Aggregate Graph Definitions';\n\n--\n-- Table structure for table `aggregate_graphs_graph_item`\n--\n\nCREATE TABLE `aggregate_graphs_graph_item` (\n  `aggregate_graph_id` int(10) unsigned NOT NULL,\n  `graph_templates_item_id` int(10) unsigned NOT NULL,\n  `sequence` mediumint(8) unsigned NOT NULL default '0',\n  `color_template` int(10) unsigned NOT NULL,\n  `t_graph_type_id` char(2) default '',\n  `graph_type_id` tinyint(3) unsigned NOT NULL default '0',\n  `t_cdef_id` char(2) default '',\n  `cdef_id` mediumint(8) unsigned default NULL,\n  `item_skip` char(2) NOT NULL,\n  `item_total` char(2) NOT NULL,\n  PRIMARY KEY (`aggregate_graph_id`,`graph_templates_item_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Aggregate Graph Graph Items';\n\n--\n-- Table structure for table `aggregate_graphs_items`\n--\n\nCREATE TABLE `aggregate_graphs_items` (\n  `aggregate_graph_id` int(10) unsigned NOT NULL,\n  `local_graph_id` int(10) unsigned NOT NULL,\n  `sequence` mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (`aggregate_graph_id`,`local_graph_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Aggregate Graph Items';\n\n--\n-- Table structure for table `automation_devices`\n--\n\nCREATE TABLE `automation_devices` (\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  `network_id` int(10) unsigned NOT NULL default '0',\n  `host_id` int(10) unsigned NOT NULL default '0',\n  `hostname` varchar(100) NOT NULL default '',\n  `ip` varchar(17) NOT NULL default '',\n  `snmp_community` varchar(100) NOT NULL default '',\n  `snmp_version` tinyint(3) unsigned NOT NULL default '1',\n  `snmp_port` mediumint(8) unsigned NOT NULL default '161',\n  `snmp_username` varchar(50) default NULL,\n  `snmp_password` varchar(50) default NULL,\n  `snmp_auth_protocol` char(6) default '',\n  `snmp_priv_passphrase` varchar(200) default '',\n  `snmp_priv_protocol` char(7) default '',\n  `snmp_context` varchar(64) default '',\n  `snmp_engine_id` varchar(64) default '',\n  `sysName` varchar(100) NOT NULL default '',\n  `sysLocation` varchar(255) NOT NULL default '',\n  `sysContact` varchar(255) NOT NULL default '',\n  `sysDescr` varchar(255) NOT NULL default '',\n  `sysUptime` bigint(20) unsigned NOT NULL default '0',\n  `os` varchar(64) NOT NULL default '',\n  `snmp` tinyint(3) unsigned NOT NULL default '0',\n  `known` tinyint(3) unsigned NOT NULL default '0',\n  `up` tinyint(3) unsigned NOT NULL default '0',\n  `time` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `ip` (`ip`),\n  KEY `hostname` (`hostname`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table of Discovered Devices';\n\n--\n-- Table structure for table `automation_graph_rule_items`\n--\n\nCREATE TABLE `automation_graph_rule_items` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `rule_id` mediumint(8) unsigned NOT NULL default '0',\n  `sequence` smallint(3) unsigned NOT NULL default '0',\n  `operation` smallint(3) unsigned NOT NULL default '0',\n  `field` varchar(255) NOT NULL default '',\n  `operator` smallint(3) unsigned NOT NULL default '0',\n  `pattern` varchar(255) NOT NULL default '',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Automation Graph Rule Items';\n\n--\n-- Dumping data for table `automation_graph_rule_items`\n--\n\n--\n-- Table structure for table `automation_graph_rules`\n--\n\nCREATE TABLE `automation_graph_rules` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(255) NOT NULL default '',\n  `snmp_query_id` smallint(3) unsigned NOT NULL default '0',\n  `graph_type_id` smallint(3) unsigned NOT NULL default '0',\n  `enabled` char(2) default '',\n  PRIMARY KEY (`id`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Automation Graph Rules';\n\n--\n-- Dumping data for table `automation_graph_rules`\n--\n\n--\n-- Table structure for table `automation_ips`\n--\n\nCREATE TABLE `automation_ips` (\n  `ip_address` varchar(20) NOT NULL default '',\n  `hostname` varchar(100) default NULL,\n  `network_id` int(10) unsigned default NULL,\n  `pid` int(10) unsigned default NULL,\n  `status` int(10) unsigned default NULL,\n  `thread` int(10) unsigned default NULL,\n  PRIMARY KEY (`ip_address`),\n  KEY `pid` (`pid`)\n) ENGINE=MEMORY COMMENT='List of discoverable ip addresses used for scanning';\n\n--\n-- Table structure for table `automation_match_rule_items`\n--\n\nCREATE TABLE `automation_match_rule_items` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `rule_id` mediumint(8) unsigned NOT NULL default '0',\n  `rule_type` smallint(3) unsigned NOT NULL default '0',\n  `sequence` smallint(3) unsigned NOT NULL default '0',\n  `operation` smallint(3) unsigned NOT NULL default '0',\n  `field` varchar(255) NOT NULL default '',\n  `operator` smallint(3) unsigned NOT NULL default '0',\n  `pattern` varchar(255) NOT NULL default '',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Automation Match Rule Items';\n\n--\n-- Dumping data for table `automation_match_rule_items`\n--\n\n--\n-- Table structure for table `automation_networks`\n--\n\nCREATE TABLE `automation_networks` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `poller_id` int(10) unsigned default '1',\n  `site_id` int(10) unsigned default '1',\n  `name` varchar(128) NOT NULL default '',\n  `subnet_range` varchar(1024) NOT NULL default '',\n  `ignore_ips` varchar(1024) NOT NULL default '',\n  `dns_servers` varchar(128) NOT NULL default '',\n  `enabled` char(2) default '',\n  `notification_enabled` char(2) default '',\n  `notification_email` varchar(255) default '',\n  `notification_fromname` varchar(32) default '',\n  `notification_fromemail` varchar(128) default '',\n  `snmp_id` int(10) unsigned default NULL,\n  `enable_netbios` char(2) default '',\n  `add_to_cacti` char(2) default '',\n  `same_sysname` char(2) default '',\n  `total_ips` int(10) unsigned default '0',\n  `up_hosts` int(10) unsigned NOT NULL default '0',\n  `snmp_hosts` int(10) unsigned NOT NULL default '0',\n  `ping_method` int(10) unsigned NOT NULL default '0',\n  `ping_port` int(10) unsigned NOT NULL default '0',\n  `ping_timeout` int(10) unsigned NOT NULL default '0',\n  `ping_retries` int(10) unsigned default '0',\n  `sched_type` int(10) unsigned NOT NULL default '0',\n  `threads` int(10) unsigned default '1',\n  `run_limit` int(10) unsigned default '0',\n  `start_at` varchar(20) default NULL,\n  `next_start` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `recur_every` int(10) unsigned default '1',\n  `day_of_week` varchar(45) default NULL,\n  `month` varchar(45) default NULL,\n  `day_of_month` varchar(45) default NULL,\n  `monthly_week` varchar(45) default NULL,\n  `monthly_day` varchar(45) default NULL,\n  `last_runtime` double NOT NULL default '0',\n  `last_started` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `last_status` varchar(128) NOT NULL default '',\n  `rerun_data_queries` char(2) default NULL,\n  PRIMARY KEY (`id`),\n  KEY `poller_id` (`poller_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores scanning subnet definitions';\n\n--\n-- Dumping data for table `automation_networks`\n--\n\nINSERT INTO `automation_networks` VALUES (1,'',1,0,'Test Network','192.168.1.0/24','','','on','','','','',1,'on','on','',254,0,0,1,22,400,1,2,10,1200,'0000-00-00 00:00:00','0000-00-00 00:00:00',2,'4','','','','',0,'0000-00-00 00:00:00','','on');\n\n--\n-- Table structure for table `automation_processes`\n--\n\nCREATE TABLE `automation_processes` (\n  `pid` int(10) unsigned NOT NULL,\n  `poller_id` int(10) unsigned default '1',\n  `network_id` int(10) unsigned NOT NULL default '0',\n  `task` varchar(20) default '',\n  `status` varchar(20) default NULL,\n  `command` varchar(20) default NULL,\n  `up_hosts` int(10) unsigned default '0',\n  `snmp_hosts` int(10) unsigned default '0',\n  `heartbeat` timestamp NOT NULL default '0000-00-00 00:00:00',\n  PRIMARY KEY (`pid`,`network_id`)\n) ENGINE=MEMORY COMMENT='Table tracking active poller processes';\n\n--\n-- Table structure for table `automation_snmp`\n--\n\nCREATE TABLE `automation_snmp` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(100) NOT NULL default '',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Group of SNMP Option Sets';\n\n--\n-- Dumping data for table `automation_snmp`\n--\n\nINSERT INTO `automation_snmp` VALUES (1,'','Default Option Set');\n\n--\n-- Table structure for table `automation_snmp_items`\n--\n\nCREATE TABLE `automation_snmp_items` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `snmp_id` int(10) unsigned NOT NULL default '0',\n  `sequence` int(10) unsigned NOT NULL default '0',\n  `snmp_version` tinyint(3) unsigned NOT NULL default '1',\n  `snmp_community` varchar(100) NOT NULL,\n  `snmp_port` mediumint(8) unsigned NOT NULL default '161',\n  `snmp_timeout` int(10) unsigned NOT NULL default '500',\n  `snmp_retries` tinyint(3) unsigned NOT NULL default '3',\n  `max_oids` int(10) unsigned default '10',\n  `bulk_walk_size` int(11) default '-1',\n  `snmp_username` varchar(50) default NULL,\n  `snmp_password` varchar(50) default NULL,\n  `snmp_auth_protocol` char(6) default '',\n  `snmp_priv_passphrase` varchar(200) default '',\n  `snmp_priv_protocol` char(7) default '',\n  `snmp_context` varchar(64) default '',\n  `snmp_engine_id` varchar(64) default '',\n  PRIMARY KEY (`id`,`snmp_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Set of SNMP Options';\n\n--\n-- Dumping data for table `automation_snmp_items`\n--\n\nINSERT INTO `automation_snmp_items` VALUES (1,'',1,1,'2','public',161,1000,3,10,-1,'admin','baseball','MD5','','DES','',''),(2,'',1,2,'2','private',161,1000,3,10,-1,'admin','baseball','MD5','','DES','','');\n\n--\n-- Table structure for table `automation_templates`\n--\n\nCREATE TABLE `automation_templates` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `host_template` int(10) unsigned NOT NULL default '0',\n  `availability_method` int(10) unsigned default '2',\n  `sysDescr` varchar(255) default '',\n  `sysName` varchar(255) default '',\n  `sysOid` varchar(60) default '',\n  `description_pattern` varchar(128) default '',\n  `populate_location` char(2) default '',\n  `sequence` int(10) unsigned default '0',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Templates of SNMP Sys variables used for automation';\n\n--\n-- Dumping data for table `automation_templates`\n--\n\n--\n-- Table structure for table `automation_templates_rules`\n--\n\nCREATE TABLE `automation_templates_rules` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `template_id` int(10) unsigned NOT NULL default 0,\n  `rule_type` tinyint(3) unsigned NOT NULL default 0,\n  `rule_id` int(10) unsigned NOT NULL default 0,\n  `sequence` tinyint(3) unsigned NOT NULL default 1,\n  `exit_rules` char(2) NOT NULL default '',\n  PRIMARY KEY (`template_id`,`rule_type`,`rule_id`),\n  KEY `id` (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Holds mappings of Automation Templates to Rules';\n\n--\n-- Dumping data for table `automation_templates_rules`\n--\n\n--\n-- Table structure for table `automation_tree_rule_items`\n--\n\nCREATE TABLE `automation_tree_rule_items` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `rule_id` mediumint(8) unsigned NOT NULL default '0',\n  `sequence` smallint(3) unsigned NOT NULL default '0',\n  `field` varchar(255) NOT NULL default '',\n  `sort_type` smallint(3) unsigned NOT NULL default '0',\n  `propagate_changes` char(2) default '',\n  `search_pattern` varchar(255) NOT NULL default '',\n  `replace_pattern` varchar(255) NOT NULL default '',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Automation Tree Rule Items';\n\n--\n-- Dumping data for table `automation_tree_rule_items`\n--\n\n--\n-- Table structure for table `automation_tree_rules`\n--\n\nCREATE TABLE `automation_tree_rules` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(255) NOT NULL default '',\n  `tree_id` smallint(3) unsigned NOT NULL default '0',\n  `tree_item_id` mediumint(8) unsigned NOT NULL default '0',\n  `leaf_type` smallint(3) unsigned NOT NULL default '0',\n  `host_grouping_type` smallint(3) unsigned NOT NULL default '0',\n  `enabled` char(2) default '',\n  PRIMARY KEY (`id`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Automation Tree Rules';\n\n--\n-- Dumping data for table `automation_tree_rules`\n--\n\n--\n-- Table structure for table `cdef`\n--\n\nCREATE TABLE cdef (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `system` mediumint(8) unsigned NOT NULL default '0',\n  `name` varchar(255) NOT NULL default '',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `hash` (`hash`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `cdef`\n--\n\nINSERT INTO cdef VALUES (3,'3d352eed9fa8f7b2791205b3273708c7',0,'Make Stack Negative',0,0);\nINSERT INTO cdef VALUES (4,'e961cc8ec04fda6ed4981cf5ad501aa5',0,'Make Per 5 Minutes',0,0);\nINSERT INTO cdef VALUES (12,'f1ac79f05f255c02f914c920f1038c54',0,'Total All Data Sources',0,0);\nINSERT INTO cdef VALUES (2,'73f95f8b77b5508157d64047342c421e',0,'Turn Bytes into Bits',0,0);\nINSERT INTO cdef VALUES (14,'634a23af5e78af0964e8d33b1a4ed26b',0,'Multiply by 1024',0,0);\nINSERT INTO cdef VALUES (15,'068984b5ccdfd2048869efae5166f722',0,'Total All Data Sources, Multiply by 1024',0,0);\n\n--\n-- Table structure for table `cdef_items`\n--\n\nCREATE TABLE cdef_items (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  cdef_id mediumint(8) unsigned NOT NULL default '0',\n  sequence mediumint(8) unsigned NOT NULL default '0',\n  type tinyint(3) unsigned NOT NULL default '0',\n  value varchar(150) NOT NULL default '',\n  PRIMARY KEY (id),\n  KEY cdef_id_sequence (`cdef_id`,`sequence`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `cdef_items`\n--\n\nINSERT INTO cdef_items VALUES (7,'9bbf6b792507bb9bb17d2af0970f9be9',2,1,4,'CURRENT_DATA_SOURCE');\nINSERT INTO cdef_items VALUES (9,'a4b8eb2c3bf4920a3ef571a7a004be53',2,2,6,'8');\nINSERT INTO cdef_items VALUES (8,'caa4e023ac2d7b1c4b4c8c4adfd55dfe',2,3,2,'3');\nINSERT INTO cdef_items VALUES (10,'c888c9fe6b62c26c4bfe23e18991731d',3,1,4,'CURRENT_DATA_SOURCE');\nINSERT INTO cdef_items VALUES (11,'1e1d0b29a94e08b648c8f053715442a0',3,3,2,'3');\nINSERT INTO cdef_items VALUES (12,'4355c197998c7f8b285be7821ddc6da4',3,2,6,'-1');\nINSERT INTO cdef_items VALUES (13,'40bb7a1143b0f2e2efca14eb356236de',4,1,4,'CURRENT_DATA_SOURCE');\nINSERT INTO cdef_items VALUES (14,'42686ea0925c0220924b7d333599cd67',4,3,2,'3');\nINSERT INTO cdef_items VALUES (15,'faf1b148b2c0e0527362ed5b8ca1d351',4,2,6,'300');\nINSERT INTO cdef_items VALUES (16,'0ef6b8a42dc83b4e43e437960fccd2ea',12,1,4,'ALL_DATA_SOURCES_NODUPS');\nINSERT INTO cdef_items VALUES (18,'86370cfa0008fe8c56b28be80ee39a40',14,1,4,'CURRENT_DATA_SOURCE');\nINSERT INTO cdef_items VALUES (19,'9a35cc60d47691af37f6fddf02064e20',14,2,6,'1024');\nINSERT INTO cdef_items VALUES (20,'5d7a7941ec0440b257e5598a27dd1688',14,3,2,'3');\nINSERT INTO cdef_items VALUES (21,'44fd595c60539ff0f5817731d9f43a85',15,1,4,'ALL_DATA_SOURCES_NODUPS');\nINSERT INTO cdef_items VALUES (22,'aa38be265e5ac31783e57ce6f9314e9a',15,2,6,'1024');\nINSERT INTO cdef_items VALUES (23,'204423d4b2598f1f7252eea19458345c',15,3,2,'3');\n\n\nCREATE TABLE `color_templates` (\n  `color_template_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) NOT NULL default '',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`color_template_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Color Templates';\n\n--\n-- Dumping data for table `color_templates`\n--\n\nINSERT INTO `color_templates` VALUES (1,'Yellow: light -> dark, 4 colors', 0, 0);\nINSERT INTO `color_templates` VALUES (2,'Red: light yellow > dark red, 8 colors', 0, 0);\nINSERT INTO `color_templates` VALUES (3,'Red: light -> dark, 16 colors', 0, 0);\nINSERT INTO `color_templates` VALUES (4,'Green: dark -> light, 16 colors', 0, 0);\n\n--\n-- Table structure for table `color_template_items`\n--\n\nCREATE TABLE `color_template_items` (\n  `color_template_item_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `color_template_id` mediumint(8) unsigned NOT NULL default '0',\n  `color_id` mediumint(8) unsigned NOT NULL default '0',\n  `sequence` mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (`color_template_item_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Color Items for Color Templates';\n\n--\n-- Dumping data for table `color_template_items`\n--\n\nINSERT INTO `color_template_items` VALUES (1,1,4,1);\nINSERT INTO `color_template_items` VALUES (2,1,24,2);\nINSERT INTO `color_template_items` VALUES (3,1,98,3);\nINSERT INTO `color_template_items` VALUES (4,1,25,4);\nINSERT INTO `color_template_items` VALUES (5,2,25,1);\nINSERT INTO `color_template_items` VALUES (6,2,29,2);\nINSERT INTO `color_template_items` VALUES (7,2,30,3);\nINSERT INTO `color_template_items` VALUES (8,2,31,4);\nINSERT INTO `color_template_items` VALUES (9,2,33,5);\nINSERT INTO `color_template_items` VALUES (10,2,35,6);\nINSERT INTO `color_template_items` VALUES (11,2,41,7);\nINSERT INTO `color_template_items` VALUES (12,2,9,8);\nINSERT INTO `color_template_items` VALUES (13,3,15,1);\nINSERT INTO `color_template_items` VALUES (14,3,31,2);\nINSERT INTO `color_template_items` VALUES (15,3,28,3);\nINSERT INTO `color_template_items` VALUES (16,3,8,4);\nINSERT INTO `color_template_items` VALUES (17,3,34,5);\nINSERT INTO `color_template_items` VALUES (18,3,33,6);\nINSERT INTO `color_template_items` VALUES (19,3,35,7);\nINSERT INTO `color_template_items` VALUES (20,3,41,8);\nINSERT INTO `color_template_items` VALUES (21,3,36,9);\nINSERT INTO `color_template_items` VALUES (22,3,42,10);\nINSERT INTO `color_template_items` VALUES (23,3,44,11);\nINSERT INTO `color_template_items` VALUES (24,3,48,12);\nINSERT INTO `color_template_items` VALUES (25,3,9,13);\nINSERT INTO `color_template_items` VALUES (26,3,49,14);\nINSERT INTO `color_template_items` VALUES (27,3,51,15);\nINSERT INTO `color_template_items` VALUES (28,3,52,16);\nINSERT INTO `color_template_items` VALUES (29,4,76,1);\nINSERT INTO `color_template_items` VALUES (30,4,84,2);\nINSERT INTO `color_template_items` VALUES (31,4,89,3);\nINSERT INTO `color_template_items` VALUES (32,4,17,4);\nINSERT INTO `color_template_items` VALUES (33,4,86,5);\nINSERT INTO `color_template_items` VALUES (34,4,88,6);\nINSERT INTO `color_template_items` VALUES (35,4,90,7);\nINSERT INTO `color_template_items` VALUES (36,4,94,8);\nINSERT INTO `color_template_items` VALUES (37,4,96,9);\nINSERT INTO `color_template_items` VALUES (38,4,93,10);\nINSERT INTO `color_template_items` VALUES (39,4,91,11);\nINSERT INTO `color_template_items` VALUES (40,4,22,12);\nINSERT INTO `color_template_items` VALUES (41,4,12,13);\nINSERT INTO `color_template_items` VALUES (42,4,95,14);\nINSERT INTO `color_template_items` VALUES (43,4,6,15);\nINSERT INTO `color_template_items` VALUES (44,4,92,16);\n\n--\n-- Table structure for table `colors`\n--\n\nCREATE TABLE colors (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `name` varchar(40) default '',\n  `hex` varchar(6) NOT NULL default '',\n  `read_only` char(2) default '',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  UNIQUE KEY hex (hex)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `colors`\n--\n\nINSERT INTO colors VALUES (1,'Black','000000','on', 0, 0);\nINSERT INTO colors VALUES (2,'White','FFFFFF','on', 0, 0);\nINSERT INTO colors VALUES (4,'','FAFD9E','', 0, 0);\nINSERT INTO colors VALUES (5,'','C0C0C0','', 0, 0);\nINSERT INTO colors VALUES (6,'','74C366','', 0, 0);\nINSERT INTO colors VALUES (7,'','6DC8FE','', 0, 0);\nINSERT INTO colors VALUES (8,'','EA8F00','', 0, 0);\nINSERT INTO colors VALUES (9,'Red','FF0000','on', 0, 0);\nINSERT INTO colors VALUES (10,'','4444FF','', 0, 0);\nINSERT INTO colors VALUES (11,'Magenta','FF00FF','on', 0, 0);\nINSERT INTO colors VALUES (12,'Green','00FF00','on', 0, 0);\nINSERT INTO colors VALUES (13,'','8D85F3','', 0, 0);\nINSERT INTO colors VALUES (14,'','AD3B6E','', 0, 0);\nINSERT INTO colors VALUES (15,'','EACC00','', 0, 0);\nINSERT INTO colors VALUES (16,'','12B3B5','', 0, 0);\nINSERT INTO colors VALUES (17,'','157419','', 0, 0);\nINSERT INTO colors VALUES (18,'','C4FD3D','', 0, 0);\nINSERT INTO colors VALUES (19,'','817C4E','', 0, 0);\nINSERT INTO colors VALUES (20,'','002A97','', 0, 0);\nINSERT INTO colors VALUES (21,'','0000FF','', 0, 0);\nINSERT INTO colors VALUES (22,'','00CF00','', 0, 0);\nINSERT INTO colors VALUES (24,'','F9FD5F','', 0, 0);\nINSERT INTO colors VALUES (25,'','FFF200','', 0, 0);\nINSERT INTO colors VALUES (26,'','CCBB00','', 0, 0);\nINSERT INTO colors VALUES (27,'','837C04','', 0, 0);\nINSERT INTO colors VALUES (28,'','EAAF00','', 0, 0);\nINSERT INTO colors VALUES (29,'','FFD660','', 0, 0);\nINSERT INTO colors VALUES (30,'','FFC73B','', 0, 0);\nINSERT INTO colors VALUES (31,'','FFAB00','', 0, 0);\nINSERT INTO colors VALUES (33,'','FF7D00','', 0, 0);\nINSERT INTO colors VALUES (34,'','ED7600','', 0, 0);\nINSERT INTO colors VALUES (35,'','FF5700','', 0, 0);\nINSERT INTO colors VALUES (36,'','EE5019','', 0, 0);\nINSERT INTO colors VALUES (37,'','B1441E','', 0, 0);\nINSERT INTO colors VALUES (38,'','FFC3C0','', 0, 0);\nINSERT INTO colors VALUES (39,'','FF897C','', 0, 0);\nINSERT INTO colors VALUES (40,'','FF6044','', 0, 0);\nINSERT INTO colors VALUES (41,'','FF4105','', 0, 0);\nINSERT INTO colors VALUES (42,'','DA4725','', 0, 0);\nINSERT INTO colors VALUES (43,'','942D0C','', 0, 0);\nINSERT INTO colors VALUES (44,'','FF3932','', 0, 0);\nINSERT INTO colors VALUES (45,'','862F2F','', 0, 0);\nINSERT INTO colors VALUES (46,'','FF5576','', 0, 0);\nINSERT INTO colors VALUES (47,'','562B29','', 0, 0);\nINSERT INTO colors VALUES (48,'','F51D30','', 0, 0);\nINSERT INTO colors VALUES (49,'','DE0056','', 0, 0);\nINSERT INTO colors VALUES (50,'','ED5394','', 0, 0);\nINSERT INTO colors VALUES (51,'','B90054','', 0, 0);\nINSERT INTO colors VALUES (52,'','8F005C','', 0, 0);\nINSERT INTO colors VALUES (53,'','F24AC8','', 0, 0);\nINSERT INTO colors VALUES (54,'','E8CDEF','', 0, 0);\nINSERT INTO colors VALUES (55,'','D8ACE0','', 0, 0);\nINSERT INTO colors VALUES (56,'','A150AA','', 0, 0);\nINSERT INTO colors VALUES (57,'','750F7D','', 0, 0);\nINSERT INTO colors VALUES (58,'','8D00BA','', 0, 0);\nINSERT INTO colors VALUES (59,'','623465','', 0, 0);\nINSERT INTO colors VALUES (60,'','55009D','', 0, 0);\nINSERT INTO colors VALUES (61,'','3D168B','', 0, 0);\nINSERT INTO colors VALUES (62,'','311F4E','', 0, 0);\nINSERT INTO colors VALUES (63,'','D2D8F9','', 0, 0);\nINSERT INTO colors VALUES (64,'','9FA4EE','', 0, 0);\nINSERT INTO colors VALUES (65,'','6557D0','', 0, 0);\nINSERT INTO colors VALUES (66,'','4123A1','', 0, 0);\nINSERT INTO colors VALUES (67,'','4668E4','', 0, 0);\nINSERT INTO colors VALUES (68,'','0D006A','', 0, 0);\nINSERT INTO colors VALUES (69,'','00004D','', 0, 0);\nINSERT INTO colors VALUES (70,'','001D61','', 0, 0);\nINSERT INTO colors VALUES (71,'','00234B','', 0, 0);\nINSERT INTO colors VALUES (72,'','002A8F','', 0, 0);\nINSERT INTO colors VALUES (73,'','2175D9','', 0, 0);\nINSERT INTO colors VALUES (74,'','7CB3F1','', 0, 0);\nINSERT INTO colors VALUES (75,'','005199','', 0, 0);\nINSERT INTO colors VALUES (76,'','004359','', 0, 0);\nINSERT INTO colors VALUES (77,'','00A0C1','', 0, 0);\nINSERT INTO colors VALUES (78,'','007283','', 0, 0);\nINSERT INTO colors VALUES (79,'','00BED9','', 0, 0);\nINSERT INTO colors VALUES (80,'','AFECED','', 0, 0);\nINSERT INTO colors VALUES (81,'','55D6D3','', 0, 0);\nINSERT INTO colors VALUES (82,'','00BBB4','', 0, 0);\nINSERT INTO colors VALUES (83,'','009485','', 0, 0);\nINSERT INTO colors VALUES (84,'','005D57','', 0, 0);\nINSERT INTO colors VALUES (85,'','008A77','', 0, 0);\nINSERT INTO colors VALUES (86,'','008A6D','', 0, 0);\nINSERT INTO colors VALUES (87,'','00B99B','', 0, 0);\nINSERT INTO colors VALUES (88,'','009F67','', 0, 0);\nINSERT INTO colors VALUES (89,'','00694A','', 0, 0);\nINSERT INTO colors VALUES (90,'','00A348','', 0, 0);\nINSERT INTO colors VALUES (91,'','00BF47','', 0, 0);\nINSERT INTO colors VALUES (92,'','96E78A','', 0, 0);\nINSERT INTO colors VALUES (93,'','00BD27','', 0, 0);\nINSERT INTO colors VALUES (94,'','35962B','', 0, 0);\nINSERT INTO colors VALUES (95,'','7EE600','', 0, 0);\nINSERT INTO colors VALUES (96,'','6EA100','', 0, 0);\nINSERT INTO colors VALUES (97,'','CAF100','', 0, 0);\nINSERT INTO colors VALUES (98,'','F5F800','', 0, 0);\nINSERT INTO colors VALUES (99,'','CDCFC4','', 0, 0);\nINSERT INTO colors VALUES (100,'','BCBEB3','', 0, 0);\nINSERT INTO colors VALUES (101,'','AAABA1','', 0, 0);\nINSERT INTO colors VALUES (102,'','8F9286','', 0, 0);\nINSERT INTO colors VALUES (103,'','797C6E','', 0, 0);\nINSERT INTO colors VALUES (104,'','2E3127','', 0, 0);\nINSERT INTO colors VALUES (105,'Night','0C090A','on', 0, 0);\nINSERT INTO colors VALUES (106,'Gunmetal','2C3539','on', 0, 0);\nINSERT INTO colors VALUES (107,'Midnight','2B1B17','on', 0, 0);\nINSERT INTO colors VALUES (108,'Charcoal','34282C','on', 0, 0);\nINSERT INTO colors VALUES (109,'Dark Slate Grey','25383C','on', 0, 0);\nINSERT INTO colors VALUES (110,'Oil','3B3131','on', 0, 0);\nINSERT INTO colors VALUES (111,'Black Cat','413839','on', 0, 0);\nINSERT INTO colors VALUES (112,'Iridium','3D3C3A','on', 0, 0);\nINSERT INTO colors VALUES (113,'Black Eel','463E3F','on', 0, 0);\nINSERT INTO colors VALUES (114,'Black Cow','4C4646','on', 0, 0);\nINSERT INTO colors VALUES (115,'Gray Wolf','504A4B','on', 0, 0);\nINSERT INTO colors VALUES (116,'Vampire Gray','565051','on', 0, 0);\nINSERT INTO colors VALUES (117,'Gray Dolphin','5C5858','on', 0, 0);\nINSERT INTO colors VALUES (118,'Carbon Gray','625D5D','on', 0, 0);\nINSERT INTO colors VALUES (119,'Ash Gray','666362','on', 0, 0);\nINSERT INTO colors VALUES (120,'Cloudy Gray','6D6968','on', 0, 0);\nINSERT INTO colors VALUES (121,'Smokey Gray','726E6D','on', 0, 0);\nINSERT INTO colors VALUES (122,'Gray','736F6E','on', 0, 0);\nINSERT INTO colors VALUES (123,'Granite','837E7C','on', 0, 0);\nINSERT INTO colors VALUES (124,'Battleship Gray','848482','on', 0, 0);\nINSERT INTO colors VALUES (125,'Gray Cloud','B6B6B4','on', 0, 0);\nINSERT INTO colors VALUES (126,'Gray Goose','D1D0CE','on', 0, 0);\nINSERT INTO colors VALUES (127,'Platinum','E5E4E2','on', 0, 0);\nINSERT INTO colors VALUES (128,'Metallic Silver','BCC6CC','on', 0, 0);\nINSERT INTO colors VALUES (129,'Blue Gray','98AFC7','on', 0, 0);\nINSERT INTO colors VALUES (130,'Light Slate Gray','6D7B8D','on', 0, 0);\nINSERT INTO colors VALUES (131,'Slate Gray','657383','on', 0, 0);\nINSERT INTO colors VALUES (132,'Jet Gray','616D7E','on', 0, 0);\nINSERT INTO colors VALUES (133,'Mist Blue','646D7E','on', 0, 0);\nINSERT INTO colors VALUES (134,'Marble Blue','566D7E','on', 0, 0);\nINSERT INTO colors VALUES (135,'Slate Blue','737CA1','on', 0, 0);\nINSERT INTO colors VALUES (136,'Steel Blue','4863A0','on', 0, 0);\nINSERT INTO colors VALUES (137,'Blue Jay','2B547E','on', 0, 0);\nINSERT INTO colors VALUES (138,'Dark Slate Blue','2B3856','on', 0, 0);\nINSERT INTO colors VALUES (139,'Midnight Blue','151B54','on', 0, 0);\nINSERT INTO colors VALUES (140,'Navy Blue','000080','on', 0, 0);\nINSERT INTO colors VALUES (141,'Blue Whale','342D7E','on', 0, 0);\nINSERT INTO colors VALUES (142,'Lapis Blue','15317E','on', 0, 0);\nINSERT INTO colors VALUES (143,'Cornflower Blue','151B8D','on', 0, 0);\nINSERT INTO colors VALUES (144,'Earth Blue','0000A0','on', 0, 0);\nINSERT INTO colors VALUES (145,'Cobalt Blue','0020C2','on', 0, 0);\nINSERT INTO colors VALUES (146,'Blueberry Blue','0041C2','on', 0, 0);\nINSERT INTO colors VALUES (147,'Sapphire Blue','2554C7','on', 0, 0);\nINSERT INTO colors VALUES (148,'Blue Eyes','1569C7','on', 0, 0);\nINSERT INTO colors VALUES (149,'Royal Blue','2B60DE','on', 0, 0);\nINSERT INTO colors VALUES (150,'Blue Orchid','1F45FC','on', 0, 0);\nINSERT INTO colors VALUES (151,'Blue Lotus','6960EC','on', 0, 0);\nINSERT INTO colors VALUES (152,'Light Slate Blue','736AFF','on', 0, 0);\nINSERT INTO colors VALUES (153,'Slate Blue','357EC7','on', 0, 0);\nINSERT INTO colors VALUES (154,'Glacial Blue Ice','368BC1','on', 0, 0);\nINSERT INTO colors VALUES (155,'Silk Blue','488AC7','on', 0, 0);\nINSERT INTO colors VALUES (156,'Blue Ivy','3090C7','on', 0, 0);\nINSERT INTO colors VALUES (157,'Blue Koi','659EC7','on', 0, 0);\nINSERT INTO colors VALUES (158,'Columbia Blue','87AFC7','on', 0, 0);\nINSERT INTO colors VALUES (159,'Baby Blue','95B9C7','on', 0, 0);\nINSERT INTO colors VALUES (160,'Light Steel Blue','728FCE','on', 0, 0);\nINSERT INTO colors VALUES (161,'Ocean Blue','2B65EC','on', 0, 0);\nINSERT INTO colors VALUES (162,'Blue Ribbon','306EFF','on', 0, 0);\nINSERT INTO colors VALUES (163,'Blue Dress','157DEC','on', 0, 0);\nINSERT INTO colors VALUES (164,'Dodger Blue','1589FF','on', 0, 0);\nINSERT INTO colors VALUES (165,'Cornflower Blue','6495ED','on', 0, 0);\nINSERT INTO colors VALUES (166,'Sky Blue','6698FF','on', 0, 0);\nINSERT INTO colors VALUES (167,'Butterfly Blue','38ACEC','on', 0, 0);\nINSERT INTO colors VALUES (168,'Iceberg','56A5EC','on', 0, 0);\nINSERT INTO colors VALUES (169,'Crystal Blue','5CB3FF','on', 0, 0);\nINSERT INTO colors VALUES (170,'Deep Sky Blue','3BB9FF','on', 0, 0);\nINSERT INTO colors VALUES (171,'Denim Blue','79BAEC','on', 0, 0);\nINSERT INTO colors VALUES (172,'Light Sky Blue','82CAFA','on', 0, 0);\nINSERT INTO colors VALUES (173,'Day Sky Blue','82CAFF','on', 0, 0);\nINSERT INTO colors VALUES (174,'Jeans Blue','A0CFEC','on', 0, 0);\nINSERT INTO colors VALUES (175,'Blue Angel','B7CEEC','on', 0, 0);\nINSERT INTO colors VALUES (176,'Pastel Blue','B4CFEC','on', 0, 0);\nINSERT INTO colors VALUES (177,'Sea Blue','C2DFFF','on', 0, 0);\nINSERT INTO colors VALUES (178,'Powder Blue','C6DEFF','on', 0, 0);\nINSERT INTO colors VALUES (179,'Coral Blue','AFDCEC','on', 0, 0);\nINSERT INTO colors VALUES (180,'Light Blue','ADDFFF','on', 0, 0);\nINSERT INTO colors VALUES (181,'Robin Egg Blue','BDEDFF','on', 0, 0);\nINSERT INTO colors VALUES (182,'Pale Blue Lily','CFECEC','on', 0, 0);\nINSERT INTO colors VALUES (183,'Light Cyan','E0FFFF','on', 0, 0);\nINSERT INTO colors VALUES (184,'Water','EBF4FA','on', 0, 0);\nINSERT INTO colors VALUES (185,'Alice Blue','F0F8FF','on', 0, 0);\nINSERT INTO colors VALUES (186,'Azure','F0FFFF','on', 0, 0);\nINSERT INTO colors VALUES (187,'Light Slate','CCFFFF','on', 0, 0);\nINSERT INTO colors VALUES (188,'Light Aquamarine','93FFE8','on', 0, 0);\nINSERT INTO colors VALUES (189,'Electric Blue','9AFEFF','on', 0, 0);\nINSERT INTO colors VALUES (190,'Aquamarine','7FFFD4','on', 0, 0);\nINSERT INTO colors VALUES (191,'Cyan or Aqua','00FFFF','on', 0, 0);\nINSERT INTO colors VALUES (192,'Tron Blue','7DFDFE','on', 0, 0);\nINSERT INTO colors VALUES (193,'Blue Zircon','57FEFF','on', 0, 0);\nINSERT INTO colors VALUES (194,'Blue Lagoon','8EEBEC','on', 0, 0);\nINSERT INTO colors VALUES (195,'Celeste','50EBEC','on', 0, 0);\nINSERT INTO colors VALUES (196,'Blue Diamond','4EE2EC','on', 0, 0);\nINSERT INTO colors VALUES (197,'Tiffany Blue','81D8D0','on', 0, 0);\nINSERT INTO colors VALUES (198,'Cyan Opaque','92C7C7','on', 0, 0);\nINSERT INTO colors VALUES (199,'Blue Hosta','77BFC7','on', 0, 0);\nINSERT INTO colors VALUES (200,'Northern Lights Blue','78C7C7','on', 0, 0);\nINSERT INTO colors VALUES (201,'Medium Turquoise','48CCCD','on', 0, 0);\nINSERT INTO colors VALUES (202,'Turquoise','43C6DB','on', 0, 0);\nINSERT INTO colors VALUES (203,'Jellyfish','46C7C7','on', 0, 0);\nINSERT INTO colors VALUES (204,'Macaw Blue Green','43BFC7','on', 0, 0);\nINSERT INTO colors VALUES (205,'Light Sea Green','3EA99F','on', 0, 0);\nINSERT INTO colors VALUES (206,'Dark Turquoise','3B9C9C','on', 0, 0);\nINSERT INTO colors VALUES (207,'Sea Turtle Green','438D80','on', 0, 0);\nINSERT INTO colors VALUES (208,'Medium Aquamarine','348781','on', 0, 0);\nINSERT INTO colors VALUES (209,'Greenish Blue','307D7E','on', 0, 0);\nINSERT INTO colors VALUES (210,'Grayish Turquoise','5E7D7E','on', 0, 0);\nINSERT INTO colors VALUES (211,'Beetle Green','4C787E','on', 0, 0);\nINSERT INTO colors VALUES (212,'Teal','008080','on', 0, 0);\nINSERT INTO colors VALUES (213,'Sea Green','4E8975','on', 0, 0);\nINSERT INTO colors VALUES (214,'Camouflage Green','78866B','on', 0, 0);\nINSERT INTO colors VALUES (215,'Sage Green','848b79','on', 0, 0);\nINSERT INTO colors VALUES (216,'Hazel Green','617C58','on', 0, 0);\nINSERT INTO colors VALUES (217,'Venom Green','728C00','on', 0, 0);\nINSERT INTO colors VALUES (218,'Fern Green','667C26','on', 0, 0);\nINSERT INTO colors VALUES (219,'Dark Forrest Green','254117','on', 0, 0);\nINSERT INTO colors VALUES (220,'Medium Sea Green','306754','on', 0, 0);\nINSERT INTO colors VALUES (221,'Medium Forest Green','347235','on', 0, 0);\nINSERT INTO colors VALUES (222,'Seaweed Green','437C17','on', 0, 0);\nINSERT INTO colors VALUES (223,'Pine Green','387C44','on', 0, 0);\nINSERT INTO colors VALUES (224,'Jungle Green','347C2C','on', 0, 0);\nINSERT INTO colors VALUES (225,'Shamrock Green','347C17','on', 0, 0);\nINSERT INTO colors VALUES (226,'Medium Spring Green','348017','on', 0, 0);\nINSERT INTO colors VALUES (227,'Forest Green','4E9258','on', 0, 0);\nINSERT INTO colors VALUES (228,'Green Onion','6AA121','on', 0, 0);\nINSERT INTO colors VALUES (229,'Spring Green','4AA02C','on', 0, 0);\nINSERT INTO colors VALUES (230,'Lime Green','41A317','on', 0, 0);\nINSERT INTO colors VALUES (231,'Clover Green','3EA055','on', 0, 0);\nINSERT INTO colors VALUES (232,'Green Snake','6CBB3C','on', 0, 0);\nINSERT INTO colors VALUES (233,'Alien Green','6CC417','on', 0, 0);\nINSERT INTO colors VALUES (234,'Green Apple','4CC417','on', 0, 0);\nINSERT INTO colors VALUES (235,'Yellow Green','52D017','on', 0, 0);\nINSERT INTO colors VALUES (236,'Kelly Green','4CC552','on', 0, 0);\nINSERT INTO colors VALUES (237,'Zombie Green','54C571','on', 0, 0);\nINSERT INTO colors VALUES (238,'Frog Green','99C68E','on', 0, 0);\nINSERT INTO colors VALUES (239,'Green Peas','89C35C','on', 0, 0);\nINSERT INTO colors VALUES (240,'Dollar Bill Green','85BB65','on', 0, 0);\nINSERT INTO colors VALUES (241,'Dark Sea Green','8BB381','on', 0, 0);\nINSERT INTO colors VALUES (242,'Iguana Green','9CB071','on', 0, 0);\nINSERT INTO colors VALUES (243,'Avocado Green','B2C248','on', 0, 0);\nINSERT INTO colors VALUES (244,'Pistachio Green','9DC209','on', 0, 0);\nINSERT INTO colors VALUES (245,'Salad Green','A1C935','on', 0, 0);\nINSERT INTO colors VALUES (246,'Hummingbird Green','7FE817','on', 0, 0);\nINSERT INTO colors VALUES (247,'Nebula Green','59E817','on', 0, 0);\nINSERT INTO colors VALUES (248,'Stoplight Go Green','57E964','on', 0, 0);\nINSERT INTO colors VALUES (249,'Algae Green','64E986','on', 0, 0);\nINSERT INTO colors VALUES (250,'Jade Green','5EFB6E','on', 0, 0);\nINSERT INTO colors VALUES (251,'Emerald Green','5FFB17','on', 0, 0);\nINSERT INTO colors VALUES (252,'Lawn Green','87F717','on', 0, 0);\nINSERT INTO colors VALUES (253,'Chartreuse','8AFB17','on', 0, 0);\nINSERT INTO colors VALUES (254,'Dragon Green','6AFB92','on', 0, 0);\nINSERT INTO colors VALUES (255,'Mint green','98FF98','on', 0, 0);\nINSERT INTO colors VALUES (256,'Green Thumb','B5EAAA','on', 0, 0);\nINSERT INTO colors VALUES (257,'Light Jade','C3FDB8','on', 0, 0);\nINSERT INTO colors VALUES (258,'Tea Green','CCFB5D','on', 0, 0);\nINSERT INTO colors VALUES (259,'Green Yellow','B1FB17','on', 0, 0);\nINSERT INTO colors VALUES (260,'Slime Green','BCE954','on', 0, 0);\nINSERT INTO colors VALUES (261,'Goldenrod','EDDA74','on', 0, 0);\nINSERT INTO colors VALUES (262,'Harvest Gold','EDE275','on', 0, 0);\nINSERT INTO colors VALUES (263,'Sun Yellow','FFE87C','on', 0, 0);\nINSERT INTO colors VALUES (264,'Yellow','FFFF00','on', 0, 0);\nINSERT INTO colors VALUES (265,'Corn Yellow','FFF380','on', 0, 0);\nINSERT INTO colors VALUES (266,'Parchment','FFFFC2','on', 0, 0);\nINSERT INTO colors VALUES (267,'Cream','FFFFCC','on', 0, 0);\nINSERT INTO colors VALUES (268,'Lemon Chiffon','FFF8C6','on', 0, 0);\nINSERT INTO colors VALUES (269,'Cornsilk','FFF8DC','on', 0, 0);\nINSERT INTO colors VALUES (270,'Beige','F5F5DC','on', 0, 0);\nINSERT INTO colors VALUES (271,'Blonde','FBF6D9','on', 0, 0);\nINSERT INTO colors VALUES (272,'Antique White','FAEBD7','on', 0, 0);\nINSERT INTO colors VALUES (273,'Champagne','F7E7CE','on', 0, 0);\nINSERT INTO colors VALUES (274,'Blanched Almond','FFEBCD','on', 0, 0);\nINSERT INTO colors VALUES (275,'Vanilla','F3E5AB','on', 0, 0);\nINSERT INTO colors VALUES (276,'Tan Brown','ECE5B6','on', 0, 0);\nINSERT INTO colors VALUES (277,'Peach','FFE5B4','on', 0, 0);\nINSERT INTO colors VALUES (278,'Mustard','FFDB58','on', 0, 0);\nINSERT INTO colors VALUES (279,'Rubber Ducky Yellow','FFD801','on', 0, 0);\nINSERT INTO colors VALUES (280,'Bright Gold','FDD017','on', 0, 0);\nINSERT INTO colors VALUES (281,'Golden Brown','EAC117','on', 0, 0);\nINSERT INTO colors VALUES (282,'Macaroni and Cheese','F2BB66','on', 0, 0);\nINSERT INTO colors VALUES (283,'Saffron','FBB917','on', 0, 0);\nINSERT INTO colors VALUES (284,'Beer','FBB117','on', 0, 0);\nINSERT INTO colors VALUES (285,'Cantaloupe','FFA62F','on', 0, 0);\nINSERT INTO colors VALUES (286,'Bee Yellow','E9AB17','on', 0, 0);\nINSERT INTO colors VALUES (287,'Brown Sugar','E2A76F','on', 0, 0);\nINSERT INTO colors VALUES (288,'BurlyWood','DEB887','on', 0, 0);\nINSERT INTO colors VALUES (289,'Deep Peach','FFCBA4','on', 0, 0);\nINSERT INTO colors VALUES (290,'Ginger Brown','C9BE62','on', 0, 0);\nINSERT INTO colors VALUES (291,'School Bus Yellow','E8A317','on', 0, 0);\nINSERT INTO colors VALUES (292,'Sandy Brown','EE9A4D','on', 0, 0);\nINSERT INTO colors VALUES (293,'Fall Leaf Brown','C8B560','on', 0, 0);\nINSERT INTO colors VALUES (294,'Orange Gold','D4A017','on', 0, 0);\nINSERT INTO colors VALUES (295,'Sand','C2B280','on', 0, 0);\nINSERT INTO colors VALUES (296,'Cookie Brown','C7A317','on', 0, 0);\nINSERT INTO colors VALUES (297,'Caramel','C68E17','on', 0, 0);\nINSERT INTO colors VALUES (298,'Brass','B5A642','on', 0, 0);\nINSERT INTO colors VALUES (299,'Khaki','ADA96E','on', 0, 0);\nINSERT INTO colors VALUES (300,'Camel Brown','C19A6B','on', 0, 0);\nINSERT INTO colors VALUES (301,'Bronze','CD7F32','on', 0, 0);\nINSERT INTO colors VALUES (302,'Tiger Orange','C88141','on', 0, 0);\nINSERT INTO colors VALUES (303,'Cinnamon','C58917','on', 0, 0);\nINSERT INTO colors VALUES (304,'Bullet Shell','AF9B60','on', 0, 0);\nINSERT INTO colors VALUES (305,'Dark Goldenrod','AF7817','on', 0, 0);\nINSERT INTO colors VALUES (306,'Copper','B87333','on', 0, 0);\nINSERT INTO colors VALUES (307,'Wood','966F33','on', 0, 0);\nINSERT INTO colors VALUES (308,'Oak Brown','806517','on', 0, 0);\nINSERT INTO colors VALUES (309,'Moccasin','827839','on', 0, 0);\nINSERT INTO colors VALUES (310,'Army Brown','827B60','on', 0, 0);\nINSERT INTO colors VALUES (311,'Sandstone','786D5F','on', 0, 0);\nINSERT INTO colors VALUES (312,'Mocha','493D26','on', 0, 0);\nINSERT INTO colors VALUES (313,'Taupe','483C32','on', 0, 0);\nINSERT INTO colors VALUES (314,'Coffee','6F4E37','on', 0, 0);\nINSERT INTO colors VALUES (315,'Brown Bear','835C3B','on', 0, 0);\nINSERT INTO colors VALUES (316,'Red Dirt','7F5217','on', 0, 0);\nINSERT INTO colors VALUES (317,'Sepia','7F462C','on', 0, 0);\nINSERT INTO colors VALUES (318,'Orange Salmon','C47451','on', 0, 0);\nINSERT INTO colors VALUES (319,'Rust','C36241','on', 0, 0);\nINSERT INTO colors VALUES (320,'Red Fox','C35817','on', 0, 0);\nINSERT INTO colors VALUES (321,'Chocolate','C85A17','on', 0, 0);\nINSERT INTO colors VALUES (322,'Sedona','CC6600','on', 0, 0);\nINSERT INTO colors VALUES (323,'Papaya Orange','E56717','on', 0, 0);\nINSERT INTO colors VALUES (324,'Halloween Orange','E66C2C','on', 0, 0);\nINSERT INTO colors VALUES (325,'Pumpkin Orange','F87217','on', 0, 0);\nINSERT INTO colors VALUES (326,'Construction Cone Orange','F87431','on', 0, 0);\nINSERT INTO colors VALUES (327,'Sunrise Orange','E67451','on', 0, 0);\nINSERT INTO colors VALUES (328,'Mango Orange','FF8040','on', 0, 0);\nINSERT INTO colors VALUES (329,'Dark Orange','F88017','on', 0, 0);\nINSERT INTO colors VALUES (330,'Coral','FF7F50','on', 0, 0);\nINSERT INTO colors VALUES (331,'Basket Ball Orange','F88158','on', 0, 0);\nINSERT INTO colors VALUES (332,'Light Salmon','F9966B','on', 0, 0);\nINSERT INTO colors VALUES (333,'Tangerine','E78A61','on', 0, 0);\nINSERT INTO colors VALUES (334,'Dark Salmon','E18B6B','on', 0, 0);\nINSERT INTO colors VALUES (335,'Light Coral','E77471','on', 0, 0);\nINSERT INTO colors VALUES (336,'Bean Red','F75D59','on', 0, 0);\nINSERT INTO colors VALUES (337,'Valentine Red','E55451','on', 0, 0);\nINSERT INTO colors VALUES (338,'Shocking Orange','E55B3C','on', 0, 0);\nINSERT INTO colors VALUES (339,'Scarlet','FF2400','on', 0, 0);\nINSERT INTO colors VALUES (340,'Ruby Red','F62217','on', 0, 0);\nINSERT INTO colors VALUES (341,'Ferrari Red','F70D1A','on', 0, 0);\nINSERT INTO colors VALUES (342,'Fire Engine Red','F62817','on', 0, 0);\nINSERT INTO colors VALUES (343,'Lava Red','E42217','on', 0, 0);\nINSERT INTO colors VALUES (344,'Love Red','E41B17','on', 0, 0);\nINSERT INTO colors VALUES (345,'Grapefruit','DC381F','on', 0, 0);\nINSERT INTO colors VALUES (346,'Chestnut Red','C34A2C','on', 0, 0);\nINSERT INTO colors VALUES (347,'Cherry Red','C24641','on', 0, 0);\nINSERT INTO colors VALUES (348,'Mahogany','C04000','on', 0, 0);\nINSERT INTO colors VALUES (349,'Chilli Pepper','C11B17','on', 0, 0);\nINSERT INTO colors VALUES (350,'Cranberry','9F000F','on', 0, 0);\nINSERT INTO colors VALUES (351,'Red Wine','990012','on', 0, 0);\nINSERT INTO colors VALUES (352,'Burgundy','8C001A','on', 0, 0);\nINSERT INTO colors VALUES (353,'Chestnut','954535','on', 0, 0);\nINSERT INTO colors VALUES (354,'Blood Red','7E3517','on', 0, 0);\nINSERT INTO colors VALUES (355,'Sienna','8A4117','on', 0, 0);\nINSERT INTO colors VALUES (356,'Sangria','7E3817','on', 0, 0);\nINSERT INTO colors VALUES (357,'Firebrick','800517','on', 0, 0);\nINSERT INTO colors VALUES (358,'Maroon','810541','on', 0, 0);\nINSERT INTO colors VALUES (359,'Plum Pie','7D0541','on', 0, 0);\nINSERT INTO colors VALUES (360,'Velvet Maroon','7E354D','on', 0, 0);\nINSERT INTO colors VALUES (361,'Plum Velvet','7D0552','on', 0, 0);\nINSERT INTO colors VALUES (362,'Rosy Finch','7F4E52','on', 0, 0);\nINSERT INTO colors VALUES (363,'Puce','7F5A58','on', 0, 0);\nINSERT INTO colors VALUES (364,'Dull Purple','7F525D','on', 0, 0);\nINSERT INTO colors VALUES (365,'Rosy Brown','B38481','on', 0, 0);\nINSERT INTO colors VALUES (366,'Khaki Rose','C5908E','on', 0, 0);\nINSERT INTO colors VALUES (367,'Pink Bow','C48189','on', 0, 0);\nINSERT INTO colors VALUES (368,'Lipstick Pink','C48793','on', 0, 0);\nINSERT INTO colors VALUES (369,'Rose','E8ADAA','on', 0, 0);\nINSERT INTO colors VALUES (370,'Desert Sand','EDC9AF','on', 0, 0);\nINSERT INTO colors VALUES (371,'Pig Pink','FDD7E4','on', 0, 0);\nINSERT INTO colors VALUES (372,'Cotton Candy','FCDFFF','on', 0, 0);\nINSERT INTO colors VALUES (373,'Pink Bubblegum','FFDFDD','on', 0, 0);\nINSERT INTO colors VALUES (374,'Misty Rose','FBBBB9','on', 0, 0);\nINSERT INTO colors VALUES (375,'Pink','FAAFBE','on', 0, 0);\nINSERT INTO colors VALUES (376,'Light Pink','FAAFBA','on', 0, 0);\nINSERT INTO colors VALUES (377,'Flamingo Pink','F9A7B0','on', 0, 0);\nINSERT INTO colors VALUES (378,'Pink Rose','E7A1B0','on', 0, 0);\nINSERT INTO colors VALUES (379,'Pink Daisy','E799A3','on', 0, 0);\nINSERT INTO colors VALUES (380,'Cadillac Pink','E38AAE','on', 0, 0);\nINSERT INTO colors VALUES (381,'Carnation Pink','F778A1','on', 0, 0);\nINSERT INTO colors VALUES (382,'Blush Red','E56E94','on', 0, 0);\nINSERT INTO colors VALUES (383,'Hot Pink','F660AB','on', 0, 0);\nINSERT INTO colors VALUES (384,'Watermelon Pink','FC6C85','on', 0, 0);\nINSERT INTO colors VALUES (385,'Violet Red','F6358A','on', 0, 0);\nINSERT INTO colors VALUES (386,'Deep Pink','F52887','on', 0, 0);\nINSERT INTO colors VALUES (387,'Pink Cupcake','E45E9D','on', 0, 0);\nINSERT INTO colors VALUES (388,'Pink Lemonade','E4287C','on', 0, 0);\nINSERT INTO colors VALUES (389,'Neon Pink','F535AA','on', 0, 0);\nINSERT INTO colors VALUES (390,'Dimorphotheca Magenta','E3319D','on', 0, 0);\nINSERT INTO colors VALUES (391,'Bright Neon Pink','F433FF','on', 0, 0);\nINSERT INTO colors VALUES (392,'Pale Violet Red','D16587','on', 0, 0);\nINSERT INTO colors VALUES (393,'Tulip Pink','C25A7C','on', 0, 0);\nINSERT INTO colors VALUES (394,'Medium Violet Red','CA226B','on', 0, 0);\nINSERT INTO colors VALUES (395,'Rogue Pink','C12869','on', 0, 0);\nINSERT INTO colors VALUES (396,'Burnt Pink','C12267','on', 0, 0);\nINSERT INTO colors VALUES (397,'Bashful Pink','C25283','on', 0, 0);\nINSERT INTO colors VALUES (398,'Carnation Pink','C12283','on', 0, 0);\nINSERT INTO colors VALUES (399,'Plum','B93B8F','on', 0, 0);\nINSERT INTO colors VALUES (400,'Viola Purple','7E587E','on', 0, 0);\nINSERT INTO colors VALUES (401,'Purple Iris','571B7E','on', 0, 0);\nINSERT INTO colors VALUES (402,'Plum Purple','583759','on', 0, 0);\nINSERT INTO colors VALUES (403,'Indigo','4B0082','on', 0, 0);\nINSERT INTO colors VALUES (404,'Purple Monster','461B7E','on', 0, 0);\nINSERT INTO colors VALUES (405,'Purple Haze','4E387E','on', 0, 0);\nINSERT INTO colors VALUES (406,'Eggplant','614051','on', 0, 0);\nINSERT INTO colors VALUES (407,'Grape','5E5A80','on', 0, 0);\nINSERT INTO colors VALUES (408,'Purple Jam','6A287E','on', 0, 0);\nINSERT INTO colors VALUES (409,'Dark Orchid','7D1B7E','on', 0, 0);\nINSERT INTO colors VALUES (410,'Purple Flower','A74AC7','on', 0, 0);\nINSERT INTO colors VALUES (411,'Medium Orchid','B048B5','on', 0, 0);\nINSERT INTO colors VALUES (412,'Purple Amethyst','6C2DC7','on', 0, 0);\nINSERT INTO colors VALUES (413,'Dark Violet','842DCE','on', 0, 0);\nINSERT INTO colors VALUES (414,'Violet','8D38C9','on', 0, 0);\nINSERT INTO colors VALUES (415,'Purple Sage Bush','7A5DC7','on', 0, 0);\nINSERT INTO colors VALUES (416,'Lovely Purple','7F38EC','on', 0, 0);\nINSERT INTO colors VALUES (417,'Purple','8E35EF','on', 0, 0);\nINSERT INTO colors VALUES (418,'Aztech Purple','893BFF','on', 0, 0);\nINSERT INTO colors VALUES (419,'Medium Purple','8467D7','on', 0, 0);\nINSERT INTO colors VALUES (420,'Jasmine Purple','A23BEC','on', 0, 0);\nINSERT INTO colors VALUES (421,'Purple Daffodil','B041FF','on', 0, 0);\nINSERT INTO colors VALUES (422,'Tyrian Purple','C45AEC','on', 0, 0);\nINSERT INTO colors VALUES (423,'Crocus Purple','9172EC','on', 0, 0);\nINSERT INTO colors VALUES (424,'Purple Mimosa','9E7BFF','on', 0, 0);\nINSERT INTO colors VALUES (425,'Heliotrope Purple','D462FF','on', 0, 0);\nINSERT INTO colors VALUES (426,'Crimson','E238EC','on', 0, 0);\nINSERT INTO colors VALUES (427,'Purple Dragon','C38EC7','on', 0, 0);\nINSERT INTO colors VALUES (428,'Lilac','C8A2C8','on', 0, 0);\nINSERT INTO colors VALUES (429,'Blush Pink','E6A9EC','on', 0, 0);\nINSERT INTO colors VALUES (430,'Mauve','E0B0FF','on', 0, 0);\nINSERT INTO colors VALUES (431,'Wisteria Purple','C6AEC7','on', 0, 0);\nINSERT INTO colors VALUES (432,'Blossom Pink','F9B7FF','on', 0, 0);\nINSERT INTO colors VALUES (433,'Thistle','D2B9D3','on', 0, 0);\nINSERT INTO colors VALUES (434,'Periwinkle','E9CFEC','on', 0, 0);\nINSERT INTO colors VALUES (435,'Lavender Pinocchio','EBDDE2','on', 0, 0);\nINSERT INTO colors VALUES (436,'Lavender Blue','E3E4FA','on', 0, 0);\nINSERT INTO colors VALUES (437,'Pearl','FDEEF4','on', 0, 0);\nINSERT INTO colors VALUES (438,'SeaShell','FFF5EE','on', 0, 0);\nINSERT INTO colors VALUES (439,'Milk White','FEFCFF','on', 0, 0);\n\n--\n-- Table structure for table `data_input`\n--\n\nCREATE TABLE data_input (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(200) NOT NULL default '',\n  `input_string` varchar(512) default NULL,\n  `type_id` tinyint(3) unsigned NOT NULL default '0',\n  `data_sources` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `name_type_id` (`name`(171), `type_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_input`\n--\n\nINSERT INTO data_input VALUES (1,'3eb92bb845b9660a7445cf9740726522','Get SNMP Data','',2, 0, 0);\nINSERT INTO data_input VALUES (2,'bf566c869ac6443b0c75d1c32b5a350e','Get SNMP Data (Indexed)','',3, 0, 0);\nINSERT INTO data_input VALUES (3,'274f4685461170b9eb1b98d22567ab5e','Unix - Get Free Disk Space','<path_cacti>/scripts/diskfree.sh <partition>',1, 0, 0);\nINSERT INTO data_input VALUES (4,'95ed0993eb3095f9920d431ac80f4231','Unix - Get Load Average','perl <path_cacti>/scripts/loadavg_multi.pl',1, 0, 0);\nINSERT INTO data_input VALUES (5,'79a284e136bb6b061c6f96ec219ac448','Unix - Get Logged In Users','perl <path_cacti>/scripts/unix_users.pl <username>',1, 0, 0);\nINSERT INTO data_input VALUES (6,'362e6d4768937c4f899dd21b91ef0ff8','Linux - Get Memory Usage','perl <path_cacti>/scripts/linux_memory.pl <grepstr>',1, 0, 0);\nINSERT INTO data_input VALUES (7,'a637359e0a4287ba43048a5fdf202066','Unix - Get System Processes','perl <path_cacti>/scripts/unix_processes.pl',1, 0, 0);\nINSERT INTO data_input VALUES (8,'47d6bfe8be57a45171afd678920bd399','Unix - Get TCP Connections','perl <path_cacti>/scripts/unix_tcp_connections.pl <grepstr>',1, 0, 0);\nINSERT INTO data_input VALUES (9,'cc948e4de13f32b6aea45abaadd287a3','Unix - Get Web Hits','perl <path_cacti>/scripts/webhits.pl <log_path>',1, 0, 0);\nINSERT INTO data_input VALUES (10,'8bd153aeb06e3ff89efc73f35849a7a0','Unix - Ping Host','perl <path_cacti>/scripts/ping.pl <ip>',1, 0, 0);\nINSERT INTO data_input VALUES (11,'80e9e4c4191a5da189ae26d0e237f015','Get Script Data (Indexed)','',4, 0, 0);\nINSERT INTO data_input VALUES (12,'332111d8b54ac8ce939af87a7eac0c06','Get Script Server Data (Indexed)','',6, 0, 0);\n\n--\n-- Table structure for table `data_input_data`\n--\n\nCREATE TABLE data_input_data (\n  data_input_field_id mediumint(8) unsigned NOT NULL default '0',\n  data_template_data_id int(10) unsigned NOT NULL default '0',\n  data_template_id int(10) unsigned NOT NULL default '0',\n  local_data_id int(10) unsigned NOT NULL default '0',\n  host_id int(10) unsigned NOT NULL default '0',\n  t_value char(2) default NULL,\n  value text,\n  PRIMARY KEY (data_input_field_id,data_template_data_id),\n  KEY data_template_data_id (data_template_data_id),\n  KEY t_value (t_value),\n  KEY data_template_id (data_template_id),\n  KEY local_data_id (local_data_id),\n  KEY host_id (host_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_input_data`\n--\n\nINSERT INTO `data_input_data` VALUES (1,4,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,5,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,6,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,19,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,20,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,22,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,23,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,24,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,25,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,26,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,27,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,30,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,31,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,32,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,33,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,34,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,58,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,59,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (1,68,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,4,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,5,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,6,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,19,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,20,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,22,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,23,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,24,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,25,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,26,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,27,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,30,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,31,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,32,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,33,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,34,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,58,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,59,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (2,68,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,4,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,5,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,6,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,19,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,20,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,22,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,23,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,24,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,25,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,26,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,27,0,0,0,'','');\nINSERT INTO `data_input_data` VALUES (3,30,0,0,0,'','');\n\n--\n-- Table structure for table `data_input_fields`\n--\n\nCREATE TABLE data_input_fields (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  data_input_id mediumint(8) unsigned NOT NULL default '0',\n  name varchar(200) NOT NULL default '',\n  data_name varchar(50) NOT NULL default '',\n  input_output char(3) NOT NULL default '',\n  update_rra char(2) default '0',\n  sequence smallint(5) NOT NULL default '0',\n  type_code varchar(40) default NULL,\n  regexp_match varchar(200) default NULL,\n  allow_nulls char(2) default NULL,\n  PRIMARY KEY (id),\n  KEY data_input_id (data_input_id),\n  KEY input_output (input_output),\n  KEY type_code_data_input_id (type_code, data_input_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_input_fields`\n--\n\nINSERT INTO `data_input_fields` VALUES (1,'92f5906c8dc0f964b41f4253df582c38',1,'SNMP IP Address','management_ip','in','',0,'hostname','','');\nINSERT INTO `data_input_fields` VALUES (2,'32285d5bf16e56c478f5e83f32cda9ef',1,'SNMP Community','snmp_community','in','',0,'snmp_community','','');\nINSERT INTO `data_input_fields` VALUES (3,'ad14ac90641aed388139f6ba86a2e48b',1,'SNMP Username','snmp_username','in','',0,'snmp_username','','on');\nINSERT INTO `data_input_fields` VALUES (4,'9c55a74bd571b4f00a96fd4b793278c6',1,'SNMP Password','snmp_password','in','',0,'snmp_password','','on');\nINSERT INTO `data_input_fields` VALUES (5,'012ccb1d3687d3edb29c002ea66e72da',1,'SNMP Version (1, 2, or 3)','snmp_version','in','',0,'snmp_version','','on');\nINSERT INTO `data_input_fields` VALUES (6,'4276a5ec6e3fe33995129041b1909762',1,'OID','oid','in','',0,'snmp_oid','','');\nINSERT INTO `data_input_fields` VALUES (7,'617cdc8a230615e59f06f361ef6e7728',2,'SNMP IP Address','management_ip','in','',0,'hostname','','');\nINSERT INTO `data_input_fields` VALUES (8,'acb449d1451e8a2a655c2c99d31142c7',2,'SNMP Community','snmp_community','in','',0,'snmp_community','','');\nINSERT INTO `data_input_fields` VALUES (9,'f4facc5e2ca7ebee621f09bc6d9fc792',2,'SNMP Username (v3)','snmp_username','in','',0,'snmp_username','','on');\nINSERT INTO `data_input_fields` VALUES (10,'1cc1493a6781af2c478fa4de971531cf',2,'SNMP Password (v3)','snmp_password','in','',0,'snmp_password','','on');\nINSERT INTO `data_input_fields` VALUES (11,'b5c23f246559df38662c255f4aa21d6b',2,'SNMP Version (1, 2, or 3)','snmp_version','in','',0,'snmp_version','','');\nINSERT INTO `data_input_fields` VALUES (12,'6027a919c7c7731fbe095b6f53ab127b',2,'Index Type','index_type','in','',0,'index_type','','');\nINSERT INTO `data_input_fields` VALUES (13,'cbbe5c1ddfb264a6e5d509ce1c78c95f',2,'Index Value','index_value','in','',0,'index_value','','');\nINSERT INTO `data_input_fields` VALUES (14,'e6deda7be0f391399c5130e7c4a48b28',2,'Output Type ID','output_type','in','',0,'output_type','','');\nINSERT INTO `data_input_fields` VALUES (15,'edfd72783ad02df128ff82fc9324b4b9',3,'Disk Partition','partition','in','',1,'','','');\nINSERT INTO `data_input_fields` VALUES (16,'8b75fb61d288f0b5fc0bd3056af3689b',3,'Kilobytes Free','kilobytes','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (17,'363588d49b263d30aecb683c52774f39',4,'1 Minute Average','1min','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (18,'ad139a9e1d69881da36fca07889abf58',4,'5 Minute Average','5min','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (19,'5db9fee64824c08258c7ff6f8bc53337',4,'10 Minute Average','10min','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (20,'c0cfd0beae5e79927c5a360076706820',5,'Username (Optional)','username','in','',1,'','','on');\nINSERT INTO `data_input_fields` VALUES (21,'52c58ad414d9a2a83b00a7a51be75a53',5,'Logged In Users','users','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (22,'05eb5d710f0814871b8515845521f8d7',6,'Grep String','grepstr','in','',1,'','','');\nINSERT INTO `data_input_fields` VALUES (23,'86cb1cbfde66279dbc7f1144f43a3219',6,'Result (in Kilobytes)','kilobytes','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (24,'d5a8dd5fbe6a5af11667c0039af41386',7,'Number of Processes','proc','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (25,'8848cdcae831595951a3f6af04eec93b',8,'Grep String','grepstr','in','',1,'','','on');\nINSERT INTO `data_input_fields` VALUES (26,'3d1288d33008430ce354e8b9c162f7ff',8,'Connections','connections','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (27,'c6af570bb2ed9c84abf32033702e2860',9,'(Optional) Log Path','log_path','in','',1,'','','on');\nINSERT INTO `data_input_fields` VALUES (28,'f9389860f5c5340c9b27fca0b4ee5e71',9,'Web Hits','webhits','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (29,'5fbadb91ad66f203463c1187fe7bd9d5',10,'IP Address','ip','in','',1,'hostname','','');\nINSERT INTO `data_input_fields` VALUES (30,'6ac4330d123c69067d36a933d105e89a',10,'Milliseconds','out_ms','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (31,'d39556ecad6166701bfb0e28c5a11108',11,'Index Type','index_type','in','',0,'index_type','','');\nINSERT INTO `data_input_fields` VALUES (32,'3b7caa46eb809fc238de6ef18b6e10d5',11,'Index Value','index_value','in','',0,'index_value','','');\nINSERT INTO `data_input_fields` VALUES (33,'74af2e42dc12956c4817c2ef5d9983f9',11,'Output Type ID','output_type','in','',0,'output_type','','');\nINSERT INTO `data_input_fields` VALUES (34,'8ae57f09f787656bf4ac541e8bd12537',11,'Output Value','output','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (35,'172b4b0eacee4948c6479f587b62e512',12,'Index Type','index_type','in','',0,'index_type','','');\nINSERT INTO `data_input_fields` VALUES (36,'30fb5d5bcf3d66bb5abe88596f357c26',12,'Index Value','index_value','in','',0,'index_value','','');\nINSERT INTO `data_input_fields` VALUES (37,'31112c85ae4ff821d3b288336288818c',12,'Output Type ID','output_type','in','',0,'output_type','','');\nINSERT INTO `data_input_fields` VALUES (38,'5be8fa85472d89c621790b43510b5043',12,'Output Value','output','out','on',0,'','','');\nINSERT INTO `data_input_fields` VALUES (39,'c1f36ee60c3dc98945556d57f26e475b',2,'SNMP Port','snmp_port','in','',0,'snmp_port','','');\nINSERT INTO `data_input_fields` VALUES (40,'fc64b99742ec417cc424dbf8c7692d36',1,'SNMP Port','snmp_port','in','',0,'snmp_port','','');\nINSERT INTO `data_input_fields` VALUES (41,'20832ce12f099c8e54140793a091af90',1,'SNMP Authentication Protocol (v3)','snmp_auth_protocol','in','',0,'snmp_auth_protocol','','');\nINSERT INTO `data_input_fields` VALUES (42,'c60c9aac1e1b3555ea0620b8bbfd82cb',1,'SNMP Privacy Passphrase (v3)','snmp_priv_passphrase','in','',0,'snmp_priv_passphrase','','');\nINSERT INTO `data_input_fields` VALUES (43,'feda162701240101bc74148415ef415a',1,'SNMP Privacy Protocol (v3)','snmp_priv_protocol','in','',0,'snmp_priv_protocol','','');\nINSERT INTO `data_input_fields` VALUES (44,'2cf7129ad3ff819a7a7ac189bee48ce8',2,'SNMP Authentication Protocol (v3)','snmp_auth_protocol','in','',0,'snmp_auth_protocol','','');\nINSERT INTO `data_input_fields` VALUES (45,'6b13ac0a0194e171d241d4b06f913158',2,'SNMP Privacy Passphrase (v3)','snmp_priv_passphrase','in','',0,'snmp_priv_passphrase','','');\nINSERT INTO `data_input_fields` VALUES (46,'3a33d4fc65b8329ab2ac46a36da26b72',2,'SNMP Privacy Protocol (v3)','snmp_priv_protocol','in','',0,'snmp_priv_protocol','','');\n\n--\n-- Table structure for table `data_local`\n--\n\nCREATE TABLE `data_local` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `data_template_id` mediumint(8) unsigned NOT NULL DEFAULT 0,\n  `host_id` mediumint(8) unsigned NOT NULL DEFAULT 0,\n  `snmp_query_id` mediumint(8) NOT NULL DEFAULT 0,\n  `snmp_index` varchar(255) NOT NULL DEFAULT '',\n  `orphan` tinyint(3) unsigned NOT NULL DEFAULT 0,\n  `errored` tinyint(3) unsigned NOT NULL DEFAULT 0,\n  PRIMARY KEY (`id`),\n  KEY `host_id_snmp_query_id` (`host_id`,`snmp_query_id`),\n  KEY `snmp_index` (`snmp_index`),\n  KEY `data_template_id` (`data_template_id`),\n  KEY `snmp_query_id` (`snmp_query_id`),\n  KEY `orphan` (`orphan`),\n  KEY `errored` (`errored`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Dumping data for table `data_local`\n--\n\n--\n-- Table structure for table `data_debug`\n--\n\nCREATE TABLE `data_debug` (\n  `id` int(10) unsigned NOT NULL auto_increment,\n  `started` int(10) unsigned NOT NULL default '0',\n  `done` int(10) unsigned NOT NULL default '0',\n  `user` int(10) unsigned NOT NULL default '0',\n  `datasource` int(10) unsigned NOT NULL default '0',\n  `info` text NOT NULL,\n  `issue` text NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user` (`user`),\n  KEY `done` (`done`),\n  KEY `datasource` (`datasource`),\n  KEY `started` (`started`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Datasource Debugger Information';\n\n--\n-- Dumping data for table `data_debug`\n--\n\n--\n-- Table structure for table `data_source_profiles`\n--\n\nCREATE TABLE `data_source_profiles` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(255) NOT NULL default '',\n  `step` int(10) unsigned NOT NULL default '300',\n  `heartbeat` int(10) unsigned NOT NULL default '600',\n  `x_files_factor` double default '0.5',\n  `default` char(2) default '',\n  `data_sources` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores Data Source Profiles';\n\n--\n-- Dumping data for table `data_source_profiles`\n--\n\nINSERT INTO `data_source_profiles` VALUES (1,'d62c52891f4f9688729a5bc9fad91b18','5 Minute Collection',300,600,0.5,'on',0,0);\nINSERT INTO `data_source_profiles` VALUES (2,'c0dd0e46b9ca268e7ed4162d329f9215','30 Second Collection',30,1200,0.5,'',0,0);\nINSERT INTO `data_source_profiles` VALUES (3,'66d35da8f75c912ede3dbe901fedcae0','1 Minute Collection',60,600,0.5,'',0,0);\n\n--\n-- Table structure for table `data_source_profiles_cf`\n--\n\nCREATE TABLE `data_source_profiles_cf` (\n  `data_source_profile_id` mediumint(8) unsigned NOT NULL default '0',\n  `consolidation_function_id` smallint(5) unsigned NOT NULL default '0',\n  PRIMARY KEY (`data_source_profile_id`,`consolidation_function_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Maps the Data Source Profile Consolidation Functions';\n\n--\n-- Dumping data for table `data_source_profiles_cf`\n--\n\nINSERT INTO `data_source_profiles_cf` VALUES (1,1);\nINSERT INTO `data_source_profiles_cf` VALUES (1,2);\nINSERT INTO `data_source_profiles_cf` VALUES (1,3);\nINSERT INTO `data_source_profiles_cf` VALUES (1,4);\nINSERT INTO `data_source_profiles_cf` VALUES (2,1);\nINSERT INTO `data_source_profiles_cf` VALUES (2,2);\nINSERT INTO `data_source_profiles_cf` VALUES (2,3);\nINSERT INTO `data_source_profiles_cf` VALUES (2,4);\nINSERT INTO `data_source_profiles_cf` VALUES (3,1);\nINSERT INTO `data_source_profiles_cf` VALUES (3,2);\nINSERT INTO `data_source_profiles_cf` VALUES (3,3);\nINSERT INTO `data_source_profiles_cf` VALUES (3,4);\n\n--\n-- Table structure for table `data_source_profiles_rra`\n--\n\nCREATE TABLE `data_source_profiles_rra` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `data_source_profile_id` mediumint(8) unsigned NOT NULL default '0',\n  `name` varchar(255) NOT NULL default '',\n  `steps` int(10) unsigned default '1',\n  `rows` int(10) unsigned NOT NULL default '700',\n  `timespan` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `data_source_profile_id` (`data_source_profile_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores RRA Definitions for Data Source Profiles';\n\n--\n-- Dumping data for table `data_source_profiles_rra`\n--\n\nINSERT INTO `data_source_profiles_rra` VALUES (1,1,'Daily (5 Minute Average)',1,600,86400);\nINSERT INTO `data_source_profiles_rra` VALUES (2,1,'Weekly (30 Minute Average)',6,700,604800);\nINSERT INTO `data_source_profiles_rra` VALUES (3,1,'Monthly (2 Hour Average)',24,775,2618784);\nINSERT INTO `data_source_profiles_rra` VALUES (4,1,'Yearly (1 Day Average)',288,797,31536000);\nINSERT INTO `data_source_profiles_rra` VALUES (5,2,'Daily (30 Second Average)',1,2900,86400);\nINSERT INTO `data_source_profiles_rra` VALUES (6,2,'Weekly (15 Minute Average)',30,1346,604800);\nINSERT INTO `data_source_profiles_rra` VALUES (7,2,'Monthly (1 Hour Average)',120,1445,2618784);\nINSERT INTO `data_source_profiles_rra` VALUES (8,2,'Yearly (4 Hour Average)',480,4380,31536000);\nINSERT INTO `data_source_profiles_rra` VALUES (9,3,'Daily (1 Minute Average)',1,2900,86400);\nINSERT INTO `data_source_profiles_rra` VALUES (10,3,'Weekly (15 Minute Average)',15,1440,604800);\nINSERT INTO `data_source_profiles_rra` VALUES (11,3,'Monthly (1 Hour Average)',60,8784,2618784);\nINSERT INTO `data_source_profiles_rra` VALUES (12,3,'Yearly (12 Hour Average)',720,7305,31536000);\n\n--\n-- Table structure for table `data_source_purge_action`\n--\n\nCREATE TABLE `data_source_purge_action` (\n  `id` integer UNSIGNED auto_increment,\n  `name` varchar(128) NOT NULL default '',\n  `local_data_id` int(10) unsigned NOT NULL default '0',\n  `action` tinyint(3) unsigned NOT NULL default 0,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY name (`name`))\n  ENGINE=InnoDB\n  ROW_FORMAT=Dynamic\n  COMMENT='RRD Cleaner File Actions';\n\n--\n-- Table structure for table `data_source_purge_temp`\n--\n\nCREATE TABLE `data_source_purge_temp` (\n  `id` integer UNSIGNED auto_increment,\n  `name_cache` varchar(255) NOT NULL default '',\n  `local_data_id` int(10) unsigned NOT NULL default '0',\n  `name` varchar(128) NOT NULL default '',\n  `size` integer UNSIGNED NOT NULL default '0',\n  `last_mod` TIMESTAMP NOT NULL default '0000-00-00 00:00:00',\n  `in_cacti` tinyint(3) unsigned NOT NULL default '0',\n  `data_template_id` mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY name (`name`),\n  KEY local_data_id (`local_data_id`),\n  KEY in_cacti (`in_cacti`),\n  KEY data_template_id (`data_template_id`))\n  ENGINE=InnoDB\n  ROW_FORMAT=Dynamic\n  COMMENT='RRD Cleaner File Repository';\n\n--\n-- Table structure for table `data_source_stats_command_cache`\n--\n\nCREATE TABLE `data_source_stats_command_cache` (\n  `local_data_id` int(10) unsigned NOT NULL default 0,\n  `stats_command` BLOB NOT NULL default '',\n  PRIMARY KEY (`local_data_id`))\n  ENGINE=InnoDB\n  ROW_FORMAT=DYNAMIC\n  COMMENT='Holds the RRDfile Stats Commands';\n\n--\n-- Table structure for table `data_source_stats_daily`\n--\n\nCREATE TABLE `data_source_stats_daily` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `cf` tinyint(3) unsigned NOT NULL default 0,\n  `average` double default NULL,\n  `peak` double default NULL,\n  `p95n` double default NULL,\n  `p90n` double default NULL,\n  `p75n` double default NULL,\n  `p50n` double default NULL,\n  `p25n` double default NULL,\n  `sum` double default NULL,\n  `stddev` double default NULL,\n  `lslslope` double default NULL,\n  `lslint` double default NULL,\n  `lslcorrel` double default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`,`cf`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `data_source_stats_hourly`\n--\n\nCREATE TABLE `data_source_stats_hourly` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `cf` tinyint(3) unsigned NOT NULL default 0,\n  `average` double default NULL,\n  `peak` double default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`,`cf`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `data_source_stats_hourly_cache`\n--\n\nCREATE TABLE `data_source_stats_hourly_cache` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `value` DOUBLE default NULL,\n  PRIMARY KEY (`local_data_id`,`time`,`rrd_name`),\n  KEY `time` USING BTREE (`time`)\n  ) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `data_source_stats_hourly_last`\n--\n\nCREATE TABLE `data_source_stats_hourly_last` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `value` DOUBLE default NULL,\n  `calculated` DOUBLE default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`)\n  ) ENGINE=MEMORY;\n\n--\n-- Table structure for table `data_source_stats_monthly`\n--\n\nCREATE TABLE `data_source_stats_monthly` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `cf` tinyint(3) unsigned NOT NULL default 0,\n  `average` double default NULL,\n  `peak` double default NULL,\n  `p95n` double default NULL,\n  `p90n` double default NULL,\n  `p75n` double default NULL,\n  `p50n` double default NULL,\n  `p25n` double default NULL,\n  `sum` double default NULL,\n  `stddev` double default NULL,\n  `lslslope` double default NULL,\n  `lslint` double default NULL,\n  `lslcorrel` double default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`,`cf`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `data_source_stats_weekly`\n--\n\nCREATE TABLE `data_source_stats_weekly` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `cf` tinyint(3) unsigned NOT NULL default 0,\n  `average` double default NULL,\n  `peak` double default NULL,\n  `p95n` double default NULL,\n  `p90n` double default NULL,\n  `p75n` double default NULL,\n  `p50n` double default NULL,\n  `p25n` double default NULL,\n  `sum` double default NULL,\n  `stddev` double default NULL,\n  `lslslope` double default NULL,\n  `lslint` double default NULL,\n  `lslcorrel` double default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`,`cf`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `data_source_stats_yearly`\n--\n\nCREATE TABLE `data_source_stats_yearly` (\n  `local_data_id` int(10) unsigned NOT NULL,\n  `rrd_name` varchar(19) NOT NULL,\n  `cf` tinyint(3) unsigned NOT NULL default 0,\n  `average` double default NULL,\n  `peak` double default NULL,\n  `p95n` double default NULL,\n  `p90n` double default NULL,\n  `p75n` double default NULL,\n  `p50n` double default NULL,\n  `p25n` double default NULL,\n  `sum` double default NULL,\n  `stddev` double default NULL,\n  `lslslope` double default NULL,\n  `lslint` double default NULL,\n  `lslcorrel` double default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`,`cf`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `data_template`\n--\n\nCREATE TABLE data_template (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(150) NOT NULL default '',\n  `data_sources` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  `last_updated` timestamp default CURRENT_TIMESTAMP,\n  PRIMARY KEY (id),\n  KEY `name` (`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_template`\n--\n\n--\n-- Table structure for table `data_template_data`\n--\n\nCREATE TABLE data_template_data (\n  id int(10) unsigned NOT NULL auto_increment,\n  local_data_template_data_id int(10) unsigned NOT NULL default '0',\n  local_data_id int(10) unsigned NOT NULL default '0',\n  data_template_id mediumint(8) unsigned NOT NULL default '0',\n  data_input_id mediumint(8) unsigned NOT NULL default '0',\n  t_name char(2) default NULL,\n  name varchar(250) NOT NULL default '',\n  name_cache varchar(255) NOT NULL default '',\n  data_source_path varchar(255) default '',\n  t_active char(2) default '',\n  active char(2) default NULL,\n  t_rrd_step char(2) default '',\n  rrd_step mediumint(8) unsigned NOT NULL default '0',\n  t_data_source_profile_id char(2) default '',\n  data_source_profile_id mediumint(8) unsigned NOT NULL default '1',\n  PRIMARY KEY (id),\n  KEY local_data_id (local_data_id),\n  KEY data_template_id (data_template_id),\n  KEY data_input_id (data_input_id),\n  KEY name_cache (name_cache)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_template_data`\n--\n\n--\n-- Table structure for table `data_template_rrd`\n--\n\nCREATE TABLE data_template_rrd (\n  id int(10) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  local_data_template_rrd_id int(10) unsigned NOT NULL default '0',\n  local_data_id int(10) unsigned NOT NULL default '0',\n  data_template_id mediumint(8) unsigned NOT NULL default '0',\n  t_rrd_maximum char(2) default NULL,\n  rrd_maximum varchar(20) NOT NULL default '0',\n  t_rrd_minimum char(2) default NULL,\n  rrd_minimum varchar(20) NOT NULL default '0',\n  t_rrd_heartbeat char(2) default NULL,\n  rrd_heartbeat mediumint(6) NOT NULL default '0',\n  t_data_source_type_id char(2) default NULL,\n  data_source_type_id smallint(5) NOT NULL default '0',\n  t_data_source_name char(2) default NULL,\n  data_source_name varchar(19) NOT NULL default '',\n  t_data_input_field_id char(2) default NULL,\n  data_input_field_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  UNIQUE KEY `duplicate_dsname_contraint` (`local_data_id`,`data_source_name`,`data_template_id`),\n  KEY data_template_id (data_template_id),\n  KEY local_data_template_rrd_id (local_data_template_rrd_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `data_template_rrd`\n--\n\nCREATE TABLE external_links (\n  id int(10) unsigned NOT NULL AUTO_INCREMENT,\n  sortorder int(10) unsigned NOT NULL default '0',\n  enabled char(2) default 'on',\n  contentfile varchar(255) NOT NULL default '',\n  title varchar(20) NOT NULL default '',\n  style varchar(10) NOT NULL default '',\n  extendedstyle varchar(50) NOT NULL default '',\n  refresh int unsigned default NULL,\n  PRIMARY KEY (id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Contains external links that are embedded into Cacti';\n\n--\n-- Table structure for table `graph_local`\n--\n\nCREATE TABLE graph_local (\n  id int(10) unsigned NOT NULL auto_increment,\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  snmp_query_id mediumint(8) NOT NULL default '0',\n  snmp_query_graph_id mediumint(8) NOT NULL default '0',\n  snmp_index varchar(255) NOT NULL default '',\n  PRIMARY KEY (id),\n  KEY host_id (host_id),\n  KEY graph_template_id (graph_template_id),\n  KEY snmp_query_id (snmp_query_id),\n  KEY snmp_query_graph_id (snmp_query_graph_id),\n  KEY snmp_index (snmp_index)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Creates a relationship for each item in a custom graph.';\n\n--\n-- Dumping data for table `graph_local`\n--\n\n--\n-- Table structure for table `graph_template_input`\n--\n\nCREATE TABLE graph_template_input (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  name varchar(255) NOT NULL default '',\n  description text,\n  column_name varchar(50) NOT NULL default '',\n  PRIMARY KEY (id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores the names for graph item input groups.';\n\n--\n-- Dumping data for table `graph_template_input`\n--\n\n--\n-- Table structure for table `graph_template_input_defs`\n--\n\nCREATE TABLE graph_template_input_defs (\n  graph_template_input_id int(10) unsigned NOT NULL default '0',\n  graph_template_item_id int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (graph_template_input_id,graph_template_item_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores the relationship for what graph items are associated';\n\n--\n-- Dumping data for table `graph_template_input_defs`\n--\n\n--\n-- Table structure for table `graph_templates`\n--\n\nCREATE TABLE graph_templates (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` char(32) NOT NULL default '',\n  `name` char(255) NOT NULL default '',\n  `class` varchar(40) NOT NULL default '',\n  `version` varchar(10) NOT NULL default '',\n  `multiple` char(2) NOT NULL default '',\n  `test_source` char(2) NOT NULL default '',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `last_updated` timestamp default CURRENT_TIMESTAMP,\n  PRIMARY KEY (`id`),\n  KEY `multiple_name` (`multiple`, `name`),\n  KEY `name` (`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Contains each graph template name.';\n\n--\n-- Dumping data for table `graph_templates`\n--\n\n--\n-- Table structure for table `graph_templates_gprint`\n--\n\nCREATE TABLE graph_templates_gprint (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(100) NOT NULL default '',\n  `gprint_text` varchar(255) default NULL,\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `name` (`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `graph_templates_gprint`\n--\n\nINSERT INTO graph_templates_gprint VALUES (2,'e9c43831e54eca8069317a2ce8c6f751','Normal','%8.2lf %s', 0, 0);\nINSERT INTO graph_templates_gprint VALUES (3,'19414480d6897c8731c7dc6c5310653e','Exact Numbers','%8.0lf', 0, 0);\nINSERT INTO graph_templates_gprint VALUES (4,'304a778405392f878a6db435afffc1e9','Load Average','%8.2lf', 0, 0);\n\n--\n-- Table structure for table `graph_templates_graph`\n--\n\nCREATE TABLE graph_templates_graph (\n  id int(10) unsigned NOT NULL auto_increment,\n  local_graph_template_graph_id int(10) unsigned NOT NULL default '0',\n  local_graph_id int(10) unsigned NOT NULL default '0',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  t_image_format_id char(2) default '',\n  image_format_id tinyint(3) unsigned NOT NULL default '0',\n  t_title char(2) default '',\n  title varchar(255) NOT NULL default '',\n  title_cache varchar(255) NOT NULL default '',\n  t_height char(2) default '',\n  height mediumint(8) NOT NULL default '0',\n  t_width char(2) default '',\n  width mediumint(8) NOT NULL default '0',\n  t_upper_limit char(2) default '',\n  upper_limit varchar(20) NOT NULL default '0',\n  t_lower_limit char(2) default '',\n  lower_limit varchar(20) NOT NULL default '0',\n  t_vertical_label char(2) default '',\n  vertical_label varchar(200) default NULL,\n  t_slope_mode char(2) default '',\n  slope_mode char(2) default 'on',\n  t_auto_scale char(2) default '',\n  auto_scale char(2) default NULL,\n  t_auto_scale_opts char(2) default '',\n  auto_scale_opts tinyint(3) unsigned NOT NULL default '0',\n  t_auto_scale_log char(2) default '',\n  auto_scale_log char(2) default NULL,\n  t_scale_log_units char(2) default '',\n  scale_log_units char(2) default NULL,\n  t_auto_scale_rigid char(2) default '',\n  auto_scale_rigid char(2) default NULL,\n  t_auto_padding char(2) default '',\n  auto_padding char(2) default NULL,\n  t_base_value char(2) default '',\n  base_value mediumint(8) NOT NULL default '0',\n  `t_grouping` char(2) default '',\n  `grouping` char(2) NOT NULL default '',\n  t_unit_value char(2) default '',\n  unit_value varchar(20) default NULL,\n  t_unit_exponent_value char(2) default '',\n  unit_exponent_value varchar(5) NOT NULL default '',\n  t_alt_y_grid char(2) default '',\n  alt_y_grid char(2) default NULL,\n  t_right_axis char(2) default '',\n  right_axis varchar(20) default NULL,\n  t_right_axis_label char(2) default '',\n  right_axis_label varchar(200) default NULL,\n  t_right_axis_format char(2) default '',\n  right_axis_format mediumint(8) default NULL,\n  t_right_axis_formatter char(2) default '',\n  right_axis_formatter varchar(10) default NULL,\n  t_left_axis_format char(2) default '',\n  left_axis_format mediumint(8) default NULL,\n  t_left_axis_formatter char(2) default '',\n  left_axis_formatter varchar(10) default NULL,\n  t_no_gridfit char(2) default '',\n  no_gridfit char(2) default NULL,\n  t_unit_length char(2) default '',\n  unit_length varchar(10) default NULL,\n  t_tab_width char(2) default '',\n  tab_width varchar(20) default '30',\n  t_dynamic_labels char(2) default '',\n  dynamic_labels char(2) default NULL,\n  t_force_rules_legend char(2) default '',\n  force_rules_legend char(2) default NULL,\n  t_legend_position char(2) default '',\n  legend_position varchar(10) default NULL,\n  t_legend_direction char(2) default '',\n  legend_direction varchar(10) default NULL,\n  PRIMARY KEY (id),\n  KEY local_graph_id (local_graph_id),\n  KEY graph_template_id (graph_template_id),\n  KEY title_cache (title_cache)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores the actual graph data.';\n\n--\n-- Dumping data for table `graph_templates_graph`\n--\n\n--\n-- Table structure for table `graph_templates_item`\n--\n\nCREATE TABLE graph_templates_item (\n  id int(10) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  local_graph_template_item_id int(10) unsigned NOT NULL default '0',\n  local_graph_id int(10) unsigned NOT NULL default '0',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  task_item_id int(10) unsigned NOT NULL default '0',\n  color_id mediumint(8) unsigned NOT NULL default '0',\n  alpha char(2) default 'FF',\n  color2_id mediumint(8) unsigned NOT NULL default '0',\n  alpha2 char(2) default 'FF',\n  gradheight tinyint(4) NOT NULL default '50',\n  graph_type_id tinyint(3) unsigned NOT NULL default '0',\n  line_width DECIMAL(4,2) default 0,\n  dashes varchar(20) default NULL,\n  dash_offset mediumint(4) default NULL,\n  cdef_id mediumint(8) unsigned NOT NULL default '0',\n  vdef_id mediumint(8) unsigned NOT NULL default '0',\n  shift char(2) default NULL,\n  consolidation_function_id tinyint(3) unsigned NOT NULL default '0',\n  textalign varchar(10) default NULL,\n  text_format varchar(255) default NULL,\n  legend varchar(30) default NULL,\n  value varchar(255) default NULL,\n  hard_return char(2) default NULL,\n  gprint_id mediumint(8) unsigned NOT NULL default '0',\n  sequence mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY graph_template_id (graph_template_id),\n  KEY local_graph_id_sequence (local_graph_id, sequence),\n  KEY local_graph_template_item_id (local_graph_template_item_id),\n  KEY task_item_id (task_item_id),\n  KEY cdef_id (cdef_id),\n  KEY vdef_id (vdef_id),\n  KEY color_id (color_id),\n  KEY gprint_id (gprint_id),\n  KEY `lgi_gti` (`local_graph_id`,`graph_template_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores the actual graph item data.';\n\n--\n-- Dumping data for table `graph_templates_item`\n--\n\n--\n-- Table structure for table `graph_tree`\n--\n\nCREATE TABLE graph_tree (\n  `id` smallint(5) unsigned NOT NULL auto_increment,\n  `enabled` char(2) default 'on',\n  `locked` tinyint(3) unsigned default '0',\n  `locked_date` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `sort_type` tinyint(3) unsigned NOT NULL default '1',\n  `name` varchar(255) NOT NULL default '',\n  `sequence` int(10) unsigned default '1',\n  `user_id` int(10) unsigned default '1',\n  `last_modified` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `modified_by` int(10) unsigned default '1',\n  PRIMARY KEY (`id`),\n  KEY `sequence` (`sequence`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `graph_tree`\n--\n\nINSERT INTO graph_tree VALUES (1,'on',0,'0000-00-00',1,'Default Tree',1,1,'0000-00-00','1');\n\n--\n-- Table structure for table `graph_tree_items`\n--\n\nCREATE TABLE graph_tree_items (\n  id bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  parent bigint(20) unsigned default NULL,\n  position int(10) unsigned default NULL,\n  graph_tree_id smallint(5) unsigned NOT NULL default '0',\n  local_graph_id int(10) unsigned NOT NULL default '0',\n  title varchar(255) default NULL,\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  site_id int unsigned default '0',\n  host_grouping_type tinyint(3) unsigned NOT NULL default '1',\n  sort_children_type tinyint(3) unsigned NOT NULL default '0',\n  graph_regex varchar(60) default '',\n  host_regex varchar(60) default '',\n  PRIMARY KEY (`id`),\n  KEY `graph_tree_id` (`graph_tree_id`),\n  KEY `host_id` (`host_id`),\n  KEY `site_id` (`site_id`),\n  KEY `local_graph_id` (`local_graph_id`),\n  KEY `parent_position`(`parent`, `position`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `graph_tree_items`\n--\n\n--\n-- Table structure for table `host`\n--\n\nCREATE TABLE host (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  poller_id int(10) unsigned NOT NULL default '1',\n  site_id int(10) unsigned NOT NULL default '1',\n  host_template_id mediumint(8) unsigned NOT NULL default '0',\n  description varchar(150) NOT NULL default '',\n  hostname varchar(100) default NULL,\n  location varchar(40) default NULL,\n  notes text,\n  external_id varchar(40) default NULL,\n  snmp_options tinyint(3) unsigned NOT NULL default '0',\n  snmp_community varchar(100) default NULL,\n  snmp_version tinyint(3) unsigned NOT NULL default '1',\n  snmp_username varchar(50) default NULL,\n  snmp_password varchar(50) default NULL,\n  snmp_auth_protocol char(6) default '',\n  snmp_priv_passphrase varchar(200) default '',\n  snmp_priv_protocol char(7) default '',\n  snmp_context varchar(64) default '',\n  snmp_engine_id varchar(64) default '',\n  snmp_port mediumint(8) unsigned NOT NULL default '161',\n  snmp_timeout mediumint(8) unsigned NOT NULL default '500',\n  snmp_retries tinyint(3) unsigned NOT NULL default '3',\n  snmp_sysDescr varchar(300) NOT NULL default '',\n  snmp_sysObjectID varchar(128) NOT NULL default '',\n  snmp_sysUpTimeInstance bigint(20) unsigned NOT NULL default '0',\n  snmp_sysContact varchar(300) NOT NULL default '',\n  snmp_sysName varchar(300) NOT NULL default '',\n  snmp_sysLocation varchar(300) NOT NULL default '',\n  availability_method smallint(5) unsigned NOT NULL default '1',\n  ping_method smallint(5) unsigned default '0',\n  ping_port int(10) unsigned default '0',\n  ping_timeout int(10) unsigned default '500',\n  ping_retries int(10) unsigned default '2',\n  max_oids int(10) unsigned default '10',\n  bulk_walk_size int(11) default '-1',\n  device_threads tinyint(3) unsigned NOT NULL default '1',\n  deleted char(2) NOT NULL default '',\n  disabled char(2) NOT NULL default '',\n  graphs int(10) unsigned NOT NULL default '0',\n  data_sources int(10) unsigned NOT NULL default '0',\n  status tinyint(3) unsigned NOT NULL default '0',\n  status_event_count mediumint(8) unsigned NOT NULL default '0',\n  status_fail_date timestamp NOT NULL default '0000-00-00 00:00:00',\n  status_rec_date timestamp NOT NULL default '0000-00-00 00:00:00',\n  status_options_date timestamp NOT NULL default '0000-00-00 00:00:00',\n  status_last_error varchar(255) default '',\n  min_time decimal(10,5) default '9.99999',\n  max_time decimal(10,5) default '0.00000',\n  cur_time decimal(10,5) default '0.00000',\n  avg_time decimal(10,5) default '0.00000',\n  polling_time DOUBLE default '0',\n  current_errors int(10) unsigned default '0',\n  total_polls int(10) unsigned default '0',\n  failed_polls int(10) unsigned default '0',\n  availability decimal(8,5) NOT NULL default '100.00000',\n  last_updated timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  created timestamp default CURRENT_TIMESTAMP,\n  PRIMARY KEY (id),\n  KEY poller_id_disabled (poller_id, disabled),\n  KEY external_id (external_id),\n  KEY disabled (disabled),\n  KEY status (status),\n  KEY current_errors (current_errors),\n  KEY site_id_location (site_id, location),\n  KEY hostname (hostname),\n  KEY poller_id_last_updated (poller_id, last_updated)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host`\n--\n\n--\n-- Table structure for table `host_errors`\n--\n\nCREATE TABLE `host_errors` (\n  `host_id` mediumint(8) unsigned NOT NULL DEFAULT 0,\n  `poller_id` int(10) unsigned NOT NULL DEFAULT 1,\n  `errors` mediumint(8) unsigned NOT NULL DEFAULT 0,\n  `local_data_ids` text DEFAULT NULL,\n  PRIMARY KEY (`host_id`),\n  KEY `poller_id` (`poller_id`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC COMMENT='Holds Device Error buffer for Spine';\n\n--\n-- Dumping data for table `host_errors`\n--\n\n--\n-- Table structure for table `host_graph`\n--\n\nCREATE TABLE host_graph (\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (host_id,graph_template_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_graph`\n--\n\n--\n-- Table structure for table `host_snmp_cache`\n--\n\nCREATE TABLE host_snmp_cache (\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  snmp_query_id mediumint(8) unsigned NOT NULL default '0',\n  field_name varchar(50) NOT NULL default '',\n  field_value varchar(512) default NULL,\n  snmp_index varchar(255) NOT NULL default '',\n  oid TEXT NOT NULL,\n  present tinyint(3) unsigned NOT NULL default '1',\n  last_updated timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (host_id, snmp_query_id, field_name, snmp_index),\n  KEY host_id (host_id, field_name),\n  KEY snmp_index (snmp_index),\n  KEY field_name (field_name),\n  KEY field_value (field_value),\n  KEY snmp_query_id (snmp_query_id),\n  KEY last_updated (last_updated),\n  KEY present (present)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_snmp_cache`\n--\n\n--\n-- Table structure for table `host_snmp_query`\n--\n\nCREATE TABLE host_snmp_query (\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  snmp_query_id mediumint(8) unsigned NOT NULL default '0',\n  sort_field varchar(50) NOT NULL default '',\n  title_format varchar(50) NOT NULL default '',\n  reindex_method tinyint(3) unsigned NOT NULL default '0',\n  PRIMARY KEY (host_id,snmp_query_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_snmp_query`\n--\n\n--\n-- Table structure for table `host_value_cache`\n--\n\nCREATE TABLE host_value_cache (\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  dimension varchar(40) NOT NULL default '',\n  value varchar(8192) NOT NULL default '',\n  time_to_live int(11) NOT NULL default '-1',\n  last_updated TIMESTAMP default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (host_id, dimension)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_value_cache`\n--\n\n--\n-- Table structure for table `host_template`\n--\n\nCREATE TABLE host_template (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(100) NOT NULL default '',\n  `version` varchar(20) NOT NULL default '',\n  `class` varchar(40) NOT NULL default '',\n  `tags` varchar(128) NOT NULL default '',\n  `author` varchar(40) NOT NULL default '',\n  `email` varchar(60) NOT NULL default '',\n  `homepage` varchar(128) NOT NULL default '',\n  `copyright` varchar(40) NOT NULL default '',\n  `installation` varchar(1024) NOT NULL default '',\n  `devices` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `name` (`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_template`\n--\n\n--\n-- Table structure for table `host_template_archive`\n--\n\nCREATE TABLE host_template_archive (\n  `id` int(10) unsigned NOT NULL auto_increment,\n  `host_template_id` mediumint(8) unsigned NOT NULL default '0',\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(100) NOT NULL default '',\n  `version` varchar(20) NOT NULL default '',\n  `class` varchar(40) NOT NULL default '',\n  `tags` varchar(128) NOT NULL default '',\n  `author` varchar(40) NOT NULL default '',\n  `email` varchar(60) NOT NULL default '',\n  `homepage` varchar(128) NOT NULL default '',\n  `copyright` varchar(40) NOT NULL default '',\n  `installation` varchar(1024) NOT NULL default '',\n  `archive_note` varchar(256) NOT NULL default '',\n  `archive_date` timestamp NOT NULL default CURRENT_TIMESTAMP,\n  `archive_md5sum` varchar(32) NOT NULL default '',\n  `archive` longblob,\n  PRIMARY KEY (id),\n  KEY `host_template_id` (`host_template_id`),\n  KEY `name` (`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_template_archive`\n--\n\n--\n-- Table structure for table `host_template_graph`\n--\n\nCREATE TABLE host_template_graph (\n  host_template_id mediumint(8) unsigned NOT NULL default '0',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (host_template_id,graph_template_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_template_graph`\n--\n\n--\n-- Table structure for table `host_template_snmp_query`\n--\n\nCREATE TABLE host_template_snmp_query (\n  host_template_id mediumint(8) unsigned NOT NULL default '0',\n  snmp_query_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (host_template_id, snmp_query_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `host_template_snmp_query`\n--\n\n--\n-- Table structure for table `pacakge_public_keys`\n--\n\nCREATE TABLE `package_public_keys` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `md5sum` varchar(32) NOT NULL DEFAULT '',\n  `author` varchar(40) NOT NULL DEFAULT '',\n  `homepage` varchar(128) NOT NULL DEFAULT '',\n  `email_address` varchar(60) NOT NULL DEFAULT '',\n  `public_key` varchar(1024) DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `md5sum` (`md5sum`) \n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC COMMENT='Hold Trusted Package Public Keys';\n\n--\n-- Table structure for table `package_repositories`\n--\n\nCREATE TABLE `package_repositories` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(32) NOT NULL DEFAULT '',\n  `enabled` char(2) NOT NULL DEFAULT 'on',\n  `default` char(2) NOT NULL DEFAULT '',\n  `repo_type` tinyint(3) unsigned NOT NULL DEFAULT 0,\n  `repo_location` varchar(128) NOT NULL DEFAULT '',\n  `repo_branch` varchar(20) NOT NULL DEFAULT '',\n  `repo_api_key` varchar(100) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `location_branch` (`repo_location`,`repo_branch`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC COMMENT='Holds Repository Locations that hold Packages';\n\n--\n-- Dumping data for table `package_repositories`\n--\n\nINSERT INTO `package_repositories` VALUES\n(1,'Local Packages','on','on',1,'/var/www/html/cacti/install/templates','',''),\n(2,'TheWitness Percona','on','',0,'https://github.com/TheWitness/percona_packages','main','');\n\n--\n-- Table structure for table `plugin_archive`\n--\n\nCREATE TABLE `plugin_archive` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `plugin` varchar(32) NOT NULL DEFAULT '',\n  `description` varchar(64) NOT NULL DEFAULT '',\n  `author` varchar(64) NOT NULL DEFAULT '',\n  `webpage` varchar(255) NOT NULL DEFAULT '',\n  `user_id` int(10) unsigned NOT NULL DEFAULT 0,\n  `version` varchar(10) NOT NULL DEFAULT '',\n  `requires` varchar(128) DEFAULT '',\n  `compat` varchar(20) NOT NULL DEFAULT '',\n  `dir_md5sum` varchar(32) NOT NULL DEFAULT '',\n  `last_updated` timestamp NULL DEFAULT NULL,\n  `archive` longblob DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `directory` (`plugin`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `plugin_available`\n--\n\nCREATE TABLE `plugin_available` (\n  `plugin` varchar(32) NOT NULL DEFAULT '',\n  `description` varchar(128) NOT NULL DEFAULT '',\n  `author` varchar(40) NOT NULL DEFAULT '',\n  `webpage` varchar(128) NOT NULL DEFAULT '',\n  `tag_name` varchar(20) NOT NULL DEFAULT '',\n  `published_at` timestamp NULL DEFAULT NULL,\n  `compat` varchar(20) NOT NULL DEFAULT '',\n  `requires` varchar(128) NOT NULL DEFAULT '',\n  `body` blob DEFAULT NULL,\n  `info` blob DEFAULT NULL,\n  `readme` blob DEFAULT NULL,\n  `changelog` blob DEFAULT NULL,\n  `archive` longblob DEFAULT NULL,\n  `last_updated` timestamp NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`plugin`,`tag_name`)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n\n--\n-- Table structure for table `plugin_config`\n--\n\nCREATE TABLE `plugin_config` (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `directory` varchar(32) NOT NULL default '',\n  `name` varchar(64) NOT NULL default '',\n  `status` tinyint(3) unsigned NOT NULL default '0',\n  `author` varchar(64) NOT NULL default '',\n  `webpage` varchar(255) NOT NULL default '',\n  `version` varchar(10) NOT NULL default '',\n  `last_updated` timestamp NOT NULL default CURRENT_TIMESTAMP(),\n  PRIMARY KEY (`id`),\n  KEY `status` (`status`),\n  KEY `directory` (`directory`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `plugin_hooks`\n--\n\nCREATE TABLE `plugin_hooks` (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `name` varchar(32) NOT NULL default '',\n  `hook` varchar(64) NOT NULL default '',\n  `file` varchar(255) NOT NULL default '',\n  `function` varchar(128) NOT NULL default '',\n  `status` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `hook` (`hook`),\n  KEY `status` (`status`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `plugin_realms`\n--\n\nCREATE TABLE `plugin_realms` (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `plugin` varchar(32) NOT NULL default '',\n  `file` text NOT NULL,\n  `display` varchar(64) NOT NULL default '',\n  PRIMARY KEY (`id`),\n  KEY `plugin` (`plugin`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `plugin_db_changes`\n--\n\nCREATE TABLE `plugin_db_changes` (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `plugin` varchar(16) NOT NULL default '',\n  `table` varchar(64) NOT NULL default '',\n  `column` varchar(64) NOT NULL,\n  `method` varchar(16) NOT NULL default '',\n  PRIMARY KEY (`id`),\n  KEY `plugin` (`plugin`),\n  KEY `method` (`method`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\nREPLACE INTO `plugin_realms` VALUES (1, 'internal', 'plugins.php', 'Plugin Management');\nINSERT INTO `plugin_hooks` VALUES (1, 'internal', 'config_arrays', '', 'plugin_config_arrays', 1);\nINSERT INTO `plugin_hooks` VALUES (2, 'internal', 'draw_navigation_text', '', 'plugin_draw_navigation_text', 1);\n\n--\n-- Table structure for table `poller`\n--\n\nCREATE TABLE `poller` (\n  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,\n  `disabled` char(2) default '',\n  `name` varchar(30) default NULL,\n  `notes` varchar(1024) default '',\n  `status` int(10) unsigned NOT NULL default '0',\n  `log_level` int(10) NOT NULL default '-1',\n  `timezone` varchar(40) default '',\n  `hostname` varchar(100) NOT NULL default '',\n  `dbdefault` varchar(20) NOT NULL default '',\n  `dbhost` varchar(64) NOT NULL default '',\n  `dbuser` varchar(20) NOT NULL default '',\n  `dbpass` varchar(64) NOT NULL default '',\n  `dbport` int(10) unsigned default '3306',\n  `dbretries` int(10) unsigned default '2',\n  `dbssl` char(3) default '',\n  `dbsslkey` varchar(255) default NULL,\n  `dbsslcert` varchar(255) default NULL,\n  `dbsslca` varchar(255) default NULL,\n  `dbsslcapath` varchar(255) default NULL,\n  `dbsslverifyservercert` char(3) default 'on',\n  `total_time` double default '0',\n  `max_time` double default NULL,\n  `min_time` double default NULL,\n  `avg_time` double default NULL,\n  `total_polls` int(10) unsigned default '0',\n  `processes` int(10) unsigned default '1',\n  `threads` int(10) unsigned default '1',\n  `sync_interval` int(10) unsigned default '7200',\n  `devices` int(10) unsigned NOT NULL default '0',\n  `snmp` mediumint(8) unsigned default '0',\n  `script` mediumint(8) unsigned default '0',\n  `server` mediumint(8) unsigned default '0',\n  `last_update` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `last_status` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `last_sync` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `requires_sync` char(2) default '',\n  PRIMARY KEY (`id`),\n  KEY `name` (`name`),\n  KEY `disabled` (`disabled`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Pollers for Cacti';\n\nINSERT INTO poller (id,name,hostname) VALUES (1,'Main Poller', 'localhost');\n\n--\n-- Table structure for table `poller_command`\n--\n\nCREATE TABLE poller_command (\n  poller_id smallint(5) unsigned NOT NULL default '1',\n  time timestamp NOT NULL default '0000-00-00 00:00:00',\n  action tinyint(3) unsigned NOT NULL default '0',\n  command varchar(191) NOT NULL default '',\n  last_updated timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (poller_id, action, command),\n  KEY poller_id_last_updated (poller_id, last_updated)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_data_template_field_mappings`\n--\n\nCREATE TABLE `poller_data_template_field_mappings` (\n  `data_template_id` int(10) unsigned NOT NULL default '0',\n  `data_name` varchar(40) NOT NULL default '',\n  `data_source_names` varchar(125) NOT NULL default '',\n  `last_updated` timestamp NOT NULL default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (`data_template_id`, `data_name`, `data_source_names`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Tracks mapping of Data Templates to their Data Source Names';\n\n--\n-- Table structure for table `poller_item`\n--\n\nCREATE TABLE poller_item (\n  `local_data_id` int(10) unsigned NOT NULL default '0',\n  `poller_id` int(10) unsigned NOT NULL default '1',\n  `host_id` mediumint(8) unsigned NOT NULL default '0',\n  `action` tinyint(3) unsigned NOT NULL default '1',\n  `present` tinyint(3) unsigned NOT NULL default '1',\n  `last_updated` timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  `hostname` varchar(100) NOT NULL default '',\n  `snmp_community` varchar(100) NOT NULL default '',\n  `snmp_version` tinyint(3) unsigned NOT NULL default '0',\n  `snmp_username` varchar(50) NOT NULL default '',\n  `snmp_password` varchar(50) NOT NULL default '',\n  `snmp_auth_protocol` char(6) NOT NULL default '',\n  `snmp_priv_passphrase` varchar(200) NOT NULL default '',\n  `snmp_priv_protocol` char(7) NOT NULL default '',\n  `snmp_context` varchar(64) default '',\n  `snmp_engine_id` varchar(64) default '',\n  `snmp_port` mediumint(8) unsigned NOT NULL default '161',\n  `snmp_timeout` mediumint(8) unsigned NOT NULL default '0',\n  `snmp_retries` tinyint(3) unsigned NOT NULL default '3',\n  `rrd_name` varchar(19) NOT NULL default '',\n  `rrd_path` varchar(255) NOT NULL default '',\n  `rrd_num` tinyint(3) unsigned NOT NULL default '0',\n  `rrd_step` mediumint(8) NOT NULL default '300',\n  `rrd_next_step` mediumint(8) NOT NULL default '0',\n  `arg1` TEXT,\n  `arg2` varchar(255) default NULL,\n  `arg3` varchar(255) default NULL,\n  PRIMARY KEY (`local_data_id`,`rrd_name`),\n  KEY `host_id` (`host_id`),\n  KEY `action` (`action`),\n  KEY `present` (`present`),\n  KEY `poller_id_host_id` (`poller_id`,`host_id`),\n  KEY `poller_id_rrd_next_step` (`poller_id`,`rrd_next_step`),\n  KEY `poller_id_action` (`poller_id`,`action`),\n  KEY `poller_id_last_updated` (`poller_id`, `last_updated`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_output`\n--\n\nCREATE TABLE poller_output (\n  local_data_id int(10) unsigned NOT NULL default '0',\n  rrd_name varchar(19) NOT NULL default '',\n  time timestamp NOT NULL default '0000-00-00 00:00:00',\n  output varchar(512) NOT NULL default '',\n  PRIMARY KEY (local_data_id, rrd_name, time) /*!50060 USING BTREE */\n) ENGINE=MEMORY;\n\n--\n-- Table structure for table `poller_output_boost`\n--\n\nCREATE TABLE `poller_output_boost` (\n  `local_data_id` int(10) unsigned NOT NULL default '0',\n  `rrd_name` varchar(19) NOT NULL default '',\n  `time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `output` varchar(512) NOT NULL,\n  `last_updated` timestamp NOT NULL default current_timestamp,\n  PRIMARY KEY USING BTREE (`local_data_id`, `time`, `rrd_name`),\n  KEY `last_updated` (`last_updated`),\n  KEY `time` (`time`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_output_boost_local_data_ids`\n--\n\nCREATE TABLE `poller_output_boost_local_data_ids` (\n  `local_data_id` int(10) unsigned NOT NULL default 0,\n  `process_handler` int(10) unsigned default 0,\n  PRIMARY KEY (`local_data_id`),\n  KEY `process_handler` (`process_handler`)\n) ENGINE=MEMORY;\n\n--\n-- Table structure for table `poller_output_boost_processes`\n--\n\nCREATE TABLE `poller_output_boost_processes` (\n  `sock_int_value` bigint(20) unsigned NOT NULL auto_increment,\n  `status` varchar(255) default NULL,\n  PRIMARY KEY (`sock_int_value`)\n) ENGINE=MEMORY;\n\n--\n-- Table structure for table `poller_output_realtime`\n--\n\nCREATE TABLE poller_output_realtime (\n  local_data_id int(10) unsigned NOT NULL default '0',\n  rrd_name varchar(19) NOT NULL default '',\n  `time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  output text NOT NULL,\n  poller_id varchar(256) NOT NULL default '1',\n  PRIMARY KEY (local_data_id, rrd_name, time, poller_id),\n  KEY poller_id (poller_id(191)),\n  KEY `time` (`time`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_reindex`\n--\n\nCREATE TABLE poller_reindex (\n  host_id mediumint(8) unsigned NOT NULL default '0',\n  data_query_id mediumint(8) unsigned NOT NULL default '0',\n  action tinyint(3) unsigned NOT NULL default '0',\n  present tinyint(3) unsigned NOT NULL default '1',\n  op char(1) NOT NULL default '',\n  assert_value varchar(100) NOT NULL default '',\n  arg1 varchar(255) NOT NULL default '',\n  PRIMARY KEY (host_id, data_query_id, arg1(187)),\n  KEY present (present)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_resource_cache`\n--\n\nCREATE TABLE poller_resource_cache (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `resource_type` varchar(20) default NULL,\n  `md5sum` varchar(32) default NULL,\n  `path` varchar(191) default NULL,\n  `update_time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `contents` longblob,\n  `attributes` INT unsigned default '0',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `path` (`path`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Caches all scripts, resources files, and plugins';\n\n--\n-- Table structure for table `poller_time`\n--\n\nCREATE TABLE poller_time (\n  id bigint(20) unsigned NOT NULL auto_increment,\n  pid int(10) unsigned NOT NULL default '0',\n  poller_id int(10) unsigned NOT NULL default '1',\n  start_time timestamp NOT NULL default '0000-00-00 00:00:00',\n  end_time timestamp NOT NULL default '0000-00-00 00:00:00',\n  PRIMARY KEY (id),\n  KEY `poller_id_end_time` (`poller_id`, `end_time`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `poller_time_stats`\n--\n\nCREATE TABLE poller_time_stats (\n  id bigint(20) unsigned NOT NULL auto_increment,\n  poller_id int(10) unsigned NOT NULL default '1',\n  total_time double default NULL,\n  `time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  PRIMARY KEY (id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Table structure for table `processes`\n--\n\nCREATE TABLE `processes` (\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  `pid` int(10) unsigned NOT NULL default 0,\n  `tasktype` varchar(20) NOT NULL default '',\n  `taskname` varchar(40) NOT NULL default '',\n  `taskid` int(10) unsigned NOT NULL default 0,\n  `timeout` int(10) unsigned default 300,\n  `started` timestamp NOT NULL default current_timestamp(),\n  `last_update` timestamp NOT NULL default '0000-00-00 00:00:00',\n  PRIMARY KEY (`pid`,`tasktype`,`taskname`,`taskid`),\n  KEY `tasktype` (`tasktype`),\n  KEY `id` (`id`)\n) ENGINE=MEMORY COMMENT='Stores Process Status for Cacti Background Processes';\n\n--\n-- Table structure for table `reports`\n--\n\nCREATE TABLE `reports` (\n  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n  `user_id` mediumint(8) unsigned NOT NULL default '0',\n  `name` varchar(100) NOT NULL default '',\n  `enabled` char(2) default '',\n  `sched_type` int(10) unsigned NOT NULL default '0',\n  `run_limit` int(10) unsigned default '0',\n  `start_at` varchar(20) default NULL,\n  `next_start` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `recur_every` int(10) unsigned default '1',\n  `day_of_week` varchar(45) default NULL,\n  `month` varchar(45) default NULL,\n  `day_of_month` varchar(45) default NULL,\n  `monthly_week` varchar(45) default NULL,\n  `monthly_day` varchar(45) default NULL,\n  `last_runtime` double NOT NULL default '0',\n  `last_started` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `last_status` varchar(128) NOT NULL default '',\n  `cformat` char(2) NOT NULL default '',\n  `format_file` varchar(255) NOT NULL default '',\n  `font_size` smallint(2) unsigned NOT NULL default '0',\n  `alignment` smallint(2) unsigned NOT NULL default '0',\n  `graph_linked` char(2) NOT NULL default '',\n  `subject` varchar(64) NOT NULL default '',\n  `from_name` varchar(40) NOT NULL,\n  `from_email` text NOT NULL,\n  `email` text NOT NULL,\n  `bcc` text NOT NULL,\n  `notify_list` int(10) unsigned NOT NULL default '0',\n  `attachment_type` smallint(2) unsigned NOT NULL default '1',\n  `graph_height` smallint(2) unsigned NOT NULL default '0',\n  `graph_width` smallint(2) unsigned NOT NULL default '0',\n  `graph_columns` smallint(2) unsigned NOT NULL default '0',\n  `thumbnails` char(2) NOT NULL default '',\n  PRIMARY KEY (`id`),\n  KEY `next_start` (`next_start`),\n  KEY `last_started` (`last_started`))\n  ENGINE=InnoDB\n  ROW_FORMAT=Dynamic\n  COMMENT='Cacti Reporting Reports';\n\n--\n-- Table structure for table `reports_items`\n--\n\nCREATE TABLE `reports_items` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `report_id` int(10) unsigned NOT NULL default '0',\n  `item_type` tinyint(3) unsigned NOT NULL default '1',\n  `tree_id` int(10) unsigned NOT NULL default '0',\n  `branch_id` int(10) unsigned NOT NULL default '0',\n  `tree_cascade` char(2) NOT NULL default '',\n  `graph_name_regexp` varchar(128) NOT NULL default '',\n  `site_id` int(11) NOT NULL default '-1',\n  `host_template_id` int(11) NOT NULL default '-1',\n  `host_id` int(11) NOT NULL default '-1',\n  `graph_template_id` int(11) NOT NULL default '-1',\n  `local_graph_id` int(10) unsigned NOT NULL default '0',\n  `timespan` int(10) unsigned NOT NULL default '0',\n  `align` tinyint(3) unsigned NOT NULL default '1',\n  `item_text` text NOT NULL,\n  `font_size` smallint(2) unsigned NOT NULL default '10',\n  `sequence` smallint(5) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `report_id` (`report_id`))\n  ENGINE=InnoDB\n  ROW_FORMAT=Dynamic\n  COMMENT='Cacti Reporting Items';\n\n--\n-- Table structure for table `reports_log`\n--\n\nCREATE TABLE `reports_log` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(64) NOT NULL DEFAULT '',\n  `source` varchar(20) NOT NULL DEFAULT '',\n  `source_id` int(10) unsigned NOT NULL DEFAULT 0,\n  `report_output_type` varchar(5) NOT NULL DEFAULT '',\n  `report_raw_data` longblob DEFAULT NULL,\n  `report_raw_output` longblob DEFAULT NULL,\n  `report_txt_output` longblob DEFAULT NULL,\n  `report_html_output` longblob DEFAULT NULL,\n  `report_attachments` longblob DEFAULT NULL,\n  `notification` blob NOT NULL DEFAULT '',\n  `send_type` int(10) unsigned NOT NULL DEFAULT 0,\n  `send_time` timestamp NOT NULL DEFAULT current_timestamp(),\n  `run_time` double NOT NULL DEFAULT 0,\n  `sent_by` varchar(20) NOT NULL DEFAULT '',\n  `sent_id` int(11) NOT NULL DEFAULT -1,\n  PRIMARY KEY (`id`),\n  KEY `source` (`source`),\n  KEY `source_id` (`source_id`)\n) ENGINE=InnoDB COMMENT='Holds All Cacti Report Output';\n\n--\n-- Table structure for table `reports_queued`\n--\n\nCREATE TABLE `reports_queued` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(64) NOT NULL DEFAULT '',\n  `source` varchar(20) NOT NULL DEFAULT '',\n  `source_id` int(10) unsigned NOT NULL DEFAULT 0,\n  `status` varchar(10) NOT NULL DEFAULT 'pending',\n  `scheduled_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\n  `start_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\n  `run_command` varchar(512) NOT NULL DEFAULT '',\n  `run_timeout` int(11) NOT NULL DEFAULT 60,\n  `notification` blob NOT NULL DEFAULT '',\n  `request_type` int(10) unsigned NOT NULL DEFAULT 0,\n  `requested_by` varchar(20) NOT NULL DEFAULT '',\n  `requested_id` int(11) NOT NULL DEFAULT -1,\n  PRIMARY KEY (`id`),\n  KEY `source` (`source`),\n  KEY `source_id` (`source_id`)\n) ENGINE=InnoDB COMMENT='Holds Scheduled Reports';\n\n--\n-- Table structure for table `settings`\n--\n\nCREATE TABLE settings (\n  name varchar(75) NOT NULL default '',\n  value varchar(4096) NOT NULL default '',\n  PRIMARY KEY (name)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `settings`\n--\n\nINSERT INTO settings VALUES ('auth_method', 1);\nINSERT INTO settings VALUES ('selected_theme', 'modern');\nINSERT INTO settings VALUES ('auth_cache_enabled', 'on');\n\n--\n-- Table structure for table `settings_user`\n--\n\nCREATE TABLE settings_user (\n  user_id smallint(8) unsigned NOT NULL default '0',\n  name varchar(75) NOT NULL default '',\n  value varchar(4096) NOT NULL default '',\n  PRIMARY KEY (user_id, name)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `settings_user`\n--\n\n--\n-- Table structure for table `settings_user_group`\n--\n\nCREATE TABLE settings_user_group (\n  group_id smallint(8) unsigned NOT NULL default '0',\n  name varchar(50) NOT NULL default '',\n  value varchar(2048) NOT NULL default '',\n  PRIMARY KEY (group_id, name)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Stores the Default User Group Graph Settings';\n\n--\n-- Table structure for table `settings_tree`\n--\n\nCREATE TABLE settings_tree (\n  user_id mediumint(8) unsigned NOT NULL default '0',\n  graph_tree_item_id int(10) unsigned NOT NULL default '0',\n  status tinyint(4) NOT NULL default '0',\n  PRIMARY KEY (user_id, graph_tree_item_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `settings_tree`\n--\n\n\n--\n-- Table structure for table `snmp_query`\n--\n\nCREATE TABLE snmp_query (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `xml_path` varchar(255) NOT NULL default '',\n  `name` varchar(100) NOT NULL default '',\n  `description` varchar(255) default NULL,\n  `graph_template_id` mediumint(8) unsigned NOT NULL default '0',\n  `data_input_id` mediumint(8) unsigned NOT NULL default '0',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  `last_updated` timestamp default CURRENT_TIMESTAMP,\n  PRIMARY KEY (id),\n  KEY name (name)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `snmp_query`\n--\n\n--\n-- Table structure for table `snmp_query_graph`\n--\n\nCREATE TABLE snmp_query_graph (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  snmp_query_id mediumint(8) unsigned NOT NULL default '0',\n  name varchar(100) NOT NULL default '',\n  graph_template_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `graph_template_id_name` (`graph_template_id`, `name`),\n  KEY `snmp_query_id_name` (`snmp_query_id`, `name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `snmp_query_graph`\n--\n\n--\n-- Table structure for table `snmp_query_graph_rrd`\n--\n\nCREATE TABLE snmp_query_graph_rrd (\n  snmp_query_graph_id mediumint(8) unsigned NOT NULL default '0',\n  data_template_id mediumint(8) unsigned NOT NULL default '0',\n  data_template_rrd_id int(10) unsigned NOT NULL default '0',\n  snmp_field_name varchar(50) NOT NULL default '0',\n  PRIMARY KEY (snmp_query_graph_id,data_template_id,data_template_rrd_id),\n  KEY data_template_rrd_id (data_template_rrd_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `snmp_query_graph_rrd`\n--\n\n--\n-- Table structure for table `snmp_query_graph_rrd_sv`\n--\n\nCREATE TABLE snmp_query_graph_rrd_sv (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  snmp_query_graph_id mediumint(8) unsigned NOT NULL default '0',\n  data_template_id mediumint(8) unsigned NOT NULL default '0',\n  sequence mediumint(8) unsigned NOT NULL default '0',\n  field_name varchar(100) NOT NULL default '',\n  text varchar(255) NOT NULL default '',\n  PRIMARY KEY (id),\n  KEY snmp_query_graph_id (snmp_query_graph_id),\n  KEY data_template_id (data_template_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `snmp_query_graph_rrd_sv`\n--\n\n--\n-- Table structure for table `snmp_query_graph_sv`\n--\n\nCREATE TABLE snmp_query_graph_sv (\n  id mediumint(8) unsigned NOT NULL auto_increment,\n  hash varchar(32) NOT NULL default '',\n  snmp_query_graph_id mediumint(8) unsigned NOT NULL default '0',\n  sequence mediumint(8) unsigned NOT NULL default '0',\n  field_name varchar(100) NOT NULL default '',\n  text varchar(255) NOT NULL default '',\n  PRIMARY KEY (id),\n  KEY snmp_query_graph_id (snmp_query_graph_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `snmp_query_graph_sv`\n--\n\n--\n-- Table structure for table `user_auth`\n--\n\nCREATE TABLE user_auth (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `username` varchar(50) NOT NULL default '0',\n  `password` varchar(256) NOT NULL default '',\n  `realm` mediumint(8) NOT NULL default '0',\n  `full_name` varchar(100) default '0',\n  `email_address` varchar(128) NULL,\n  `must_change_password` char(2) default NULL,\n  `password_change` char(2) default 'on',\n  `show_tree` char(2) default 'on',\n  `show_list` char(2) default 'on',\n  `show_preview` char(2) NOT NULL default 'on',\n  `graph_settings` char(2) default NULL,\n  `login_opts` tinyint(3) unsigned NOT NULL default '1',\n  `policy_graphs` tinyint(3) unsigned NOT NULL default '1',\n  `policy_trees` tinyint(3) unsigned NOT NULL default '1',\n  `policy_hosts` tinyint(3) unsigned NOT NULL default '1',\n  `policy_graph_templates` tinyint(3) unsigned NOT NULL default '1',\n  `enabled` char(2) NOT NULL default 'on',\n  `lastchange` int(11) NOT NULL default '-1',\n  `lastlogin` int(11) NOT NULL default '-1',\n  `password_history` varchar(4096) NOT NULL default '-1',\n  `locked` varchar(3) NOT NULL default '',\n  `failed_attempts` int(5) NOT NULL default '0',\n  `lastfail` int(10) unsigned NOT NULL default '0',\n  `reset_perms` int(10) unsigned NOT NULL default '0',\n  `tfa_enabled` char(3) NOT NULL default '',\n  `tfa_secret` char(50) NOT NULL default '',\n  PRIMARY KEY (`id`),\n  KEY `username` (`username`),\n  KEY `realm` (`realm`),\n  KEY `enabled` (`enabled`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `user_auth`\n--\n\nINSERT INTO user_auth VALUES (1,'admin','21232f297a57a5a743894a0e4a801fc3',0,'Administrator','','on','on','on','on','on','on',2,1,1,1,1,'on',-1,-1,'-1','',0,0,0,'','');\nINSERT INTO user_auth VALUES (3,'guest','43e9a4ab75570f5b',0,'Guest Account','','on','on','on','on','on',3,1,1,1,1,1,'',-1,-1,'-1','',0,0,0,'','');\n\n--\n-- Table structure for table `user_auth_cache`\n--\n\nCREATE TABLE `user_auth_cache` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `user_id` int(10) unsigned NOT NULL default '0',\n  `hostname` varchar(100) NOT NULL default '',\n  `last_update` timestamp NOT NULL default CURRENT_TIMESTAMP,\n  `token` varchar(191) NOT NULL default '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `tokenkey` (`token`),\n  KEY `hostname` (`hostname`),\n  KEY `user_id` (`user_id`),\n  KEY `last_update` (`last_update`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Caches Remember Me Details';\n\n--\n-- Dumping data for table `user_auth`\n--\n\n--\n-- Table structure for table `user_auth_group`\n--\n\nCREATE TABLE `user_auth_group` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(20) NOT NULL,\n  `description` varchar(255) NOT NULL default '',\n  `graph_settings` varchar(2) default NULL,\n  `login_opts` tinyint(3) unsigned NOT NULL default '1',\n  `show_tree` varchar(2) default 'on',\n  `show_list` varchar(2) default 'on',\n  `show_preview` varchar(2) NOT NULL default 'on',\n  `policy_graphs` tinyint(3) unsigned NOT NULL default '1',\n  `policy_trees` tinyint(3) unsigned NOT NULL default '1',\n  `policy_hosts` tinyint(3) unsigned NOT NULL default '1',\n  `policy_graph_templates` tinyint(3) unsigned NOT NULL default '1',\n  `enabled` char(2) NOT NULL default 'on',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table that Contains User Groups';\n\n--\n-- Dumping data for table `user_auth_group`\n--\n\n--\n-- Table structure for table `user_auth_group_members`\n--\n\nCREATE TABLE `user_auth_group_members` (\n  `group_id` int(10) unsigned NOT NULL,\n  `user_id` int(10) unsigned NOT NULL,\n  PRIMARY KEY (`group_id`,`user_id`),\n  KEY `realm_id` (`user_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table that Contains User Group Members';\n\n--\n-- Dumping data for table `user_auth_group_members`\n--\n\n--\n-- Table structure for table `user_auth_group_perms`\n--\n\nCREATE TABLE `user_auth_group_perms` (\n  `group_id` mediumint(8) unsigned NOT NULL default '0',\n  `item_id` mediumint(8) unsigned NOT NULL default '0',\n  `type` tinyint(3) unsigned NOT NULL default '0',\n  PRIMARY KEY (`group_id`,`item_id`,`type`),\n  KEY `group_id` (`group_id`,`type`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table that Contains User Group Permissions';\n\n--\n-- Dumping data for table `user_auth_group_perms`\n--\n\n--\n-- Table structure for table `user_auth_reset_hashes`\n--\n\nCREATE TABLE `user_auth_reset_hashes` (\n  `user_id` int(10) unsigned NOT NULL default '0',\n  `hash` varchar(100) NOT NULL default '',\n  `expiry` timestamp NOT NULL default '0000-00-00 00:00:00',\n  PRIMARY KEY (`user_id`,`expiry`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table that Contains User Password Reset Hashes';\n\n--\n-- Dumping data for table `user_auth_reset_hashes`\n--\n\n--\n-- Table structure for table `user_auth_group_realm`\n--\n\nCREATE TABLE `user_auth_group_realm` (\n  `group_id` int(10) unsigned NOT NULL,\n  `realm_id` int(10) unsigned NOT NULL,\n  PRIMARY KEY (`group_id`,`realm_id`),\n  KEY `realm_id` (`realm_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table that Contains User Group Realm Permissions';\n\n--\n-- Dumping data for table `user_auth_group_realm`\n--\n\n--\n-- Table structure for table `user_auth_perms`\n--\n\nCREATE TABLE user_auth_perms (\n  user_id mediumint(8) unsigned NOT NULL default '0',\n  item_id mediumint(8) unsigned NOT NULL default '0',\n  type tinyint(3) unsigned NOT NULL default '0',\n  PRIMARY KEY (user_id,item_id,type),\n  KEY user_id (user_id,type)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `user_auth_perms`\n--\n\n\n--\n-- Table structure for table `user_auth_realm`\n--\n\nCREATE TABLE user_auth_realm (\n  realm_id mediumint(8) unsigned NOT NULL default '0',\n  user_id mediumint(8) unsigned NOT NULL default '0',\n  PRIMARY KEY (realm_id,user_id),\n  KEY user_id (user_id)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `user_auth_realm`\n--\n\nINSERT INTO user_auth_realm VALUES (1,1);\nINSERT INTO user_auth_realm VALUES (2,1);\nINSERT INTO user_auth_realm VALUES (3,1);\nINSERT INTO user_auth_realm VALUES (4,1);\nINSERT INTO user_auth_realm VALUES (5,1);\nINSERT INTO user_auth_realm VALUES (7,1);\nINSERT INTO user_auth_realm VALUES (7,3);\nINSERT INTO user_auth_realm VALUES (8,1);\nINSERT INTO user_auth_realm VALUES (9,1);\nINSERT INTO user_auth_realm VALUES (10,1);\nINSERT INTO user_auth_realm VALUES (11,1);\nINSERT INTO user_auth_realm VALUES (12,1);\nINSERT INTO user_auth_realm VALUES (13,1);\nINSERT INTO user_auth_realm VALUES (14,1);\nINSERT INTO user_auth_realm VALUES (15,1);\nINSERT INTO user_auth_realm VALUES (16,1);\nINSERT INTO user_auth_realm VALUES (17,1);\nINSERT INTO user_auth_realm VALUES (18,1);\nINSERT INTO user_auth_realm VALUES (19,1);\nINSERT INTO user_auth_realm VALUES (20,1);\nINSERT INTO user_auth_realm VALUES (21,1);\nINSERT INTO user_auth_realm VALUES (22,1);\nINSERT INTO user_auth_realm VALUES (23,1);\nINSERT INTO user_auth_realm VALUES (24,1);\nINSERT INTO user_auth_realm VALUES (25,1);\nINSERT INTO user_auth_realm VALUES (26,1);\nINSERT INTO user_auth_realm VALUES (27,1);\nINSERT INTO user_auth_realm VALUES (28,1);\nINSERT INTO user_auth_realm VALUES (29,1);\nINSERT INTO user_auth_realm VALUES (101,1);\nINSERT INTO user_auth_realm VALUES (1043,1);\n\n--\n-- Table structure for table `user_auth_row_cache`\n--\n\nCREATE TABLE user_auth_row_cache (\n  `user_id` mediumint(8) NOT NULL default '0',\n  `class` varchar(20) NOT NULL default '',\n  `hash` varchar(32) NOT NULL default '0',\n  `total_rows` int(10) unsigned NOT NULL default '0',\n  `time` timestamp NOT NULL default CURRENT_TIMESTAMP,\n  PRIMARY KEY (`user_id`,`class`,`hash`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `user_auth_row_cache`\n--\n\n--\n-- Table structure for table `user_log`\n--\n\nCREATE TABLE user_log (\n  `username` varchar(50) NOT NULL default '0',\n  `user_id` mediumint(8) NOT NULL default '0',\n  `time` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `result` tinyint(3) unsigned NOT NULL default '0',\n  `ip` varchar(40) NOT NULL default '',\n  PRIMARY KEY (`username`,`user_id`,`time`),\n  KEY user_id (`user_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `user_log`\n--\n\n--\n-- Table structure for table `user_domains`\n--\n\nCREATE TABLE `user_domains` (\n  `domain_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `domain_name` varchar(20) NOT NULL,\n  `type` int(10) unsigned NOT NULL default '0',\n  `enabled` char(2) NOT NULL default 'on',\n  `defdomain` tinyint(3) unsigned NOT NULL default '0',\n  `user_id` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`domain_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table to Hold Login Domains';\n\n--\n-- Dumping data for table `user_domains`\n--\n\n--\n-- Table structure for table `user_domains_ldap`\n--\n\nCREATE TABLE `user_domains_ldap` (\n  `domain_id` int(10) unsigned NOT NULL,\n  `server` varchar(128) NOT NULL,\n  `port` int(10) unsigned NOT NULL,\n  `port_ssl` int(10) unsigned NOT NULL,\n  `proto_version` tinyint(3) unsigned NOT NULL,\n  `encryption` tinyint(3) unsigned NOT NULL,\n  `tls_certificate` tinyint(3) unsigned NOT NULL default '3',\n  `referrals` tinyint(3) unsigned NOT NULL,\n  `mode` tinyint(3) unsigned NOT NULL,\n  `dn` varchar(128) NOT NULL default '',\n  `group_require` char(2) NOT NULL default '',\n  `group_dn` varchar(128) NOT NULL default '',\n  `group_attrib` varchar(128) NOT NULL default '',\n  `group_member_type` tinyint(3) unsigned NOT NULL,\n  `search_base` varchar(128) NOT NULL default '',\n  `search_filter` varchar(512) NOT NULL default '',\n  `specific_dn` varchar(128) NOT NULL default '',\n  `specific_password` varchar(128) NOT NULL default '',\n  `cn_full_name` varchar(50) NULL default '',\n  `cn_email` varchar (50) NULL default '',\n  PRIMARY KEY (`domain_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Table to Hold Login Domains for LDAP';\n\n--\n-- Dumping data for table `user_domains_ldap`\n--\n\n--\n-- Table structure for table `sessions`\n--\n\nCREATE TABLE `sessions` (\n  `id` varchar(32) NOT NULL,\n  `remote_addr` varchar(25) NOT NULL default '',\n  `access` int(10) unsigned default NULL,\n  `data` mediumblob,\n  `user_id` int(10) unsigned NOT NULL default '0',\n  `user_agent` varchar(128) NOT NULL default '',\n  `start_time` timestamp NOT NULL default current_timestamp,\n  `transactions` int(10) unsigned NOT NULL default '1',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Used for Database based Session Storage';\n\n--\n-- Dumping data for table `sessions`\n--\n\n--\n-- Table structure for table `sites`\n--\n\nCREATE TABLE `sites` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(100) NOT NULL default '',\n  `disabled` char(2) NOT NULL default '',\n  `address1` varchar(100) default '',\n  `address2` varchar(100) default '',\n  `city` varchar(50) default '',\n  `state` varchar(20) default NULL,\n  `postal_code` varchar(20) default '',\n  `country` varchar(30) default '',\n  `region` varchar(30) default '',\n  `timezone` varchar(40) default '',\n  `latitude` decimal(13,10) NOT NULL default '0.0000000000',\n  `longitude` decimal(13,10) NOT NULL default '0.0000000000',\n  `zoom` tinyint(3) unsigned default NULL,\n  `alternate_id` varchar(30) default '',\n  `notes` varchar(1024),\n  `devices` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (`id`),\n  KEY `name` (`name`),\n  KEY `city` (`city`),\n  KEY `state` (`state`),\n  KEY `postal_code` (`postal_code`),\n  KEY `country` (`country`),\n  KEY `alternate_id` (`alternate_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Contains information about customer sites';\n\n--\n-- Dumping data for table `sites`\n--\n\nINSERT INTO `sites` VALUES (1,'Edge','','','','','','','','','',0.0000000000,0.0000000000,'','','', 0);\nINSERT INTO `sites` VALUES (2,'Core','','','','','','','','','',0.0000000000,0.0000000000,'','','', 0);\n\n--\n-- Table structure for table `snmpagent_cache`\n--\n\nCREATE TABLE `snmpagent_cache` (\n  `oid` varchar(50) NOT NULL,\n  `name` varchar(50) NOT NULL,\n  `mib` varchar(50) NOT NULL,\n  `type` varchar(50) NOT NULL default '',\n  `otype` varchar(50) NOT NULL default '',\n  `kind` varchar(50) NOT NULL default '',\n  `max-access` varchar(50) NOT NULL default 'not-accessible',\n  `value` varchar(255) NOT NULL default '',\n  `description` varchar(5000) NOT NULL default '',\n  PRIMARY KEY (`oid`),\n  KEY `name` (`name`),\n  KEY `mib_name` (`mib`,`name`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='SNMP MIB CACHE';\n\n--\n-- Dumping data for table `snmpagent_cache`\n--\n\n--\n-- Table structure for table `snmpagent_mibs`\n--\nCREATE TABLE `snmpagent_mibs` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL default '',\n  `file` varchar(255) NOT NULL default '',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Registered MIB files';\n\n--\n-- Dumping data for table `snmpagent_mibs`\n--\n\n--\n-- Table structure for table `snmpagent_cache_notifications`\n--\n\nCREATE TABLE `snmpagent_cache_notifications` (\n  `name` varchar(50) NOT NULL,\n  `mib` varchar(50) NOT NULL,\n  `attribute` varchar(50) NOT NULL,\n  `sequence_id` smallint(6) NOT NULL,\n  PRIMARY KEY (`name`,`mib`,`attribute`,`sequence_id`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Notifications and related attributes';\n\n--\n-- Dumping data for table `snmpagent_cache_notifications`\n--\n\n--\n-- Table structure for table `snmpagent_cache_textual_conventions`\n--\n\nCREATE TABLE `snmpagent_cache_textual_conventions` (\n  `name` varchar(50) NOT NULL,\n  `mib` varchar(50) NOT NULL,\n  `type` varchar(50) NOT NULL default '',\n  `description` varchar(5000) NOT NULL default '',\n  PRIMARY KEY (`name`,`mib`,`type`),\n  KEY `mib` (`mib`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='Textual conventions';\n\n--\n-- Dumping data for table `snmpagent_cache_textual_conventions`\n--\n\n--\n-- Table structure for table `snmpagent_managers`\n--\n\nCREATE TABLE `snmpagent_managers` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `hostname` varchar(100) NOT NULL,\n  `description` varchar(255) NOT NULL,\n  `disabled` char(2) default NULL,\n  `max_log_size` tinyint(4) NOT NULL,\n  `snmp_version` tinyint(3) unsigned NOT NULL default '1',\n  `snmp_community` varchar(100) NOT NULL default '',\n  `snmp_username` varchar(50) NOT NULL,\n  `snmp_password` varchar(50) NOT NULL,\n  `snmp_auth_protocol` char(6) NOT NULL,\n  `snmp_priv_passphrase` varchar(200) NOT NULL,\n  `snmp_priv_protocol` char(7) NOT NULL,\n  `snmp_engine_id` varchar(64) default NULL,\n  `snmp_port` mediumint(8) unsigned NOT NULL default '161',\n  `snmp_message_type` tinyint(4) NOT NULL,\n  `notes` text,\n  PRIMARY KEY (`id`),\n  KEY `hostname` (`hostname`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='snmp notification receivers';\n\n--\n-- Dumping data for table `snmpagent_managers`\n--\n\n--\n-- Table structure for table `snmpagent_managers_notifications`\n--\n\nCREATE TABLE `snmpagent_managers_notifications` (\n  `manager_id` int(10) unsigned NOT NULL,\n  `notification` varchar(50) NOT NULL,\n  `mib` varchar(50) NOT NULL,\n  PRIMARY KEY(`manager_id`,`notification`,`mib`),\n  KEY `mib` (`mib`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='snmp notifications to receivers';\n\n--\n-- Dumping data for table `snmpagent_managers_notifications`\n--\n\n--\n-- Table structure for table `snmpagent_notifications_log`\n--\n\nCREATE TABLE `snmpagent_notifications_log` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `time` int(24) NOT NULL,\n  `severity` tinyint(4) NOT NULL,\n  `manager_id` int(10) unsigned NOT NULL,\n  `notification` varchar(190) NOT NULL,\n  `mib` varchar(50) NOT NULL,\n  `varbinds` varchar(5000) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `time` (`time`),\n  KEY `severity` (`severity`),\n  KEY `manager_id_notification` (`manager_id`,`notification`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='logs snmp notifications to receivers';\n\n--\n-- Dumping data for table `snmpagent_notifications_log`\n--\n\n--\n-- Table structure for table `vdef`\n--\n\nCREATE TABLE vdef (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `name` varchar(255) NOT NULL default '',\n  `graphs` int(10) unsigned NOT NULL default '0',\n  `templates` int(10) unsigned NOT NULL default '0',\n  PRIMARY KEY (id),\n  KEY `hash` (`hash`),\n  KEY `name` (`name`(171))\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='vdef';\n\n--\n-- Dumping data for table `vdef`\n--\n\nINSERT INTO vdef VALUES(1, 'e06ed529238448773038601afb3cf278', 'Maximum',0,0);\nINSERT INTO vdef VALUES(2, 'e4872dda82092393d6459c831a50dc3b', 'Minimum',0,0);\nINSERT INTO vdef VALUES(3, '5ce1061a46bb62f36840c80412d2e629', 'Average',0,0);\nINSERT INTO vdef VALUES(4, '06bd3cbe802da6a0745ea5ba93af554a', 'Last (Current)',0,0);\nINSERT INTO vdef VALUES(5, '631c1b9086f3979d6dcf5c7a6946f104', 'First',0,0);\nINSERT INTO vdef VALUES(6, '6b5335843630b66f858ce6b7c61fc493', 'Total: Current Data Source',0,0);\nINSERT INTO vdef VALUES(7, 'c80d12b0f030af3574da68b28826cd39', '95th Percentage: Current Data Source',0,0);\n\n--\n-- Table structure for table `vdef_items`\n--\n\nCREATE TABLE vdef_items (\n  `id` mediumint(8) unsigned NOT NULL auto_increment,\n  `hash` varchar(32) NOT NULL default '',\n  `vdef_id` mediumint(8) unsigned NOT NULL default '0',\n  `sequence` mediumint(8) unsigned NOT NULL default '0',\n  `type` tinyint(3) unsigned NOT NULL default '0',\n  `value` varchar(150) NOT NULL default '',\n  PRIMARY KEY (id),\n  KEY `vdef_id_sequence` (`vdef_id`,`sequence`)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='vdef items';\n\n--\n-- Dumping data for table `vdef_items`\n--\n\nINSERT INTO vdef_items VALUES(1, '88d33bf9271ac2bdf490cf1784a342c1', 1, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(2, 'a307afab0c9b1779580039e3f7c4f6e5', 1, 2, 1, '1');\nINSERT INTO vdef_items VALUES(3, '0945a96068bb57c80bfbd726cf1afa02', 2, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(4, '95a8df2eac60a89e8a8ca3ea3d019c44', 2, 2, 1, '2');\nINSERT INTO vdef_items VALUES(5, 'cc2e1c47ec0b4f02eb13708cf6dac585', 3, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(6, 'a2fd796335b87d9ba54af6a855689507', 3, 2, 1, '3');\nINSERT INTO vdef_items VALUES(7, 'a1d7974ee6018083a2053e0d0f7cb901', 4, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(8, '26fccba1c215439616bc1b83637ae7f3', 4, 2, 1, '5');\nINSERT INTO vdef_items VALUES(9, 'a8993b265f4c5398f4a47c44b5b37a07', 5, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(10, '5a380d469d611719057c3695ce1e4eee', 5, 2, 1, '6');\nINSERT INTO vdef_items VALUES(11, '65cfe546b17175fad41fcca98c057feb', 6, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(12, 'f330b5633c3517d7c62762cef091cc9e', 6, 2, 1, '7');\nINSERT INTO vdef_items VALUES(13, 'f1bf2ecf54ca0565cf39c9c3f7e5394b', 7, 1, 4, 'CURRENT_DATA_SOURCE');\nINSERT INTO vdef_items VALUES(14, '11a26f18feba3919be3af426670cba95', 7, 2, 6, '95');\nINSERT INTO vdef_items VALUES(15, 'e7ae90275bc1efada07c19ca3472d9db', 7, 3, 1, '8');\n\n--\n-- Table structure for table `rrdcheck`\n--\n\nCREATE TABLE rrdcheck (\n  `local_data_id` mediumint(8) unsigned NOT NULL,\n  `test_date` timestamp NOT NULL default '0000-00-00 00:00:00',\n  `message` varchar(250) default ''\n) ENGINE=InnoDB ROW_FORMAT=Dynamic COMMENT='rrdcheck';\n\n--\n-- Table structure for table `version`\n--\n\nCREATE TABLE version (\n  cacti char(30) default '',\n  PRIMARY KEY (cacti)\n) ENGINE=InnoDB ROW_FORMAT=Dynamic;\n\n--\n-- Dumping data for table `version`\n--\n\nINSERT INTO version VALUES ('new_install');\n\n--\n-- Update some columns as required\n--\n\nUPDATE data_input_data AS did\nINNER JOIN data_template_data AS dtd\nON did.data_template_data_id = dtd.id\nSET did.local_data_id = dtd.local_data_id, did.data_template_id = dtd.data_template_id;\n\nUPDATE data_input_data AS did\nINNER JOIN data_template_data AS dtd\nON did.data_template_data_id = dtd.id\nINNER JOIN data_local AS dl ON dl.id = dtd.local_data_id\nSET did.host_id = dl.host_id;\n\n"
        },
        {
          "name": "cactid.php",
          "type": "blob",
          "size": 7.271484375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\n/* sig_handler - provides a generic means to catch exceptions to the Cacti log.\n   @arg $signo - (int) the signal that was thrown by the interface.\n   @returns - null */\nfunction sig_handler($signo) {\n\tglobal $config, $hostname;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: Cacti Daemon PID[' . getmypid() . '] Terminated on Device[' . gethostname() . ']', true, 'CACTID');\n\t\t\tadmin_email(__('Cacti System Warning'), __('WARNING: Cacti Daemon PID[' . getmypid() . '] Terminated on Device[' . gethostname() . ']', true, 'CACTID'));\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n\n/* let's report all errors */\nerror_reporting(E_ALL);\n\n/* allow the script to hang around waiting for connections. */\nset_time_limit(0);\n\n/* we do not need so much memory */\nini_set('memory_limit', '-1');\nini_set('max_execution_time', '0');\n\n// default values\n$hostname   = gethostname();\n$debug      = false;\n$foreground = false;\n$logrecon   = false;\n\nchdir(__DIR__);\ninclude_once('./include/cli_check.php');\n\n/* install signal handlers for Linux/UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\nglobal $config, $hostname, $debug;\n\n// process calling arguments\n$options = get_options();\n\nif (isset($options['debug'])) {\n\t$debug = true;\n}\n\nif (isset($options['foreground'])) {\n\t$foreground = true;\n}\n\n// Set the frequency of data collection dynamically\n// before loosing our database connection after fork.\n// We would not have to do this is PDO supported\n// connection cloning as does Perl.\n$frequency = read_config_option('cron_interval', true);\n\n// redirect standard error to dev/null\nif (DIRECTORY_SEPARATOR != '\\\\') {\n\tfclose(STDERR);\n\t$STDERR = fopen('/dev/null', 'wb');\n\n\t// check if cactid daemon is already running\n\texec('pgrep -a php | grep cactid.php', $output);\n\n\tif (sizeof($output) >= 2) {\n\t\tprint 'The Cacti Daemon is still running' . PHP_EOL;\n\n\t\treturn;\n\t}\n} else {\n\tfclose(STDERR);\n\t$STDERR = fopen('null', 'wb');\n}\n\nprint 'Starting Cacti Daemon ... ';\n\nif (!$foreground) {\n\tif (function_exists('pcntl_fork')) {\n\t\t// Close the database connection\n\t\tdb_close();\n\n\t\t// Fork the current process to daemonize\n\t\t$pid = pcntl_fork();\n\n\t\tif ($pid == -1) {\n\t\t\t// Something went wrong\n\t\t\tprint '[FAILED]' . PHP_EOL;\n\n\t\t\texit(1);\n\t\t}\n\n\t\tif ($pid == 0) {\n\t\t\t// We are the child\n\t\t} else {\n\t\t\tcacti_log('NOTE: Cacti Daemon PID[' . getmypid() . '] Started on Device[' . gethostname() . ']');\n\t\t\tadmin_email(__('Cacti System Notice'), __('Notice: Cacti Daemon PID[' . getmypid() . '] Started on Device[' . gethostname() . ']', true, 'CACTID'));\n\n\t\t\tprint '[OK]' . PHP_EOL;\n\n\t\t\texit(0);\n\t\t}\n\t} else {\n\t\t// On Windows we run in foreground mode\n\t\tprint '[OK]' . PHP_EOL . '[NOTE] This system does not support forking.' . PHP_EOL;\n\t}\n} else {\n\tprint '[OK]' . PHP_EOL . '[NOTE] The Cacti Daemon is running in foreground mode.' . PHP_EOL;\n}\n\nsleep(2);\n\nwhile (true) {\n\twait_for_start($frequency);\n\n\tdb_check_reconnect(false, $logrecon);\n\n\trun_poller();\n\n\t// Force Cacti to check the service start frequency dynamically\n\t$frequency = -1;\n\t$logrecon  = true;\n}\n\nfunction wait_for_start($frequency = -1) {\n\t$prev_time = -1;\n\t$i         = 0;\n\n\twhile (true) {\n\t\tif ($frequency <= 0) {\n\t\t\t$frequency = read_config_option('cron_interval', true);\n\n\t\t\tif (empty($frequency)) {\n\t\t\t\t$frequency = 300;\n\t\t\t}\n\t\t}\n\n\t\t$now    = time();\n\t\t$offset = $now % $frequency;\n\n\t\tif ($i % 5 == 0) {\n\t\t\tdebug('PrevOS: ' . $prev_time . ', CurrOS: ' . $offset . ', Freq: ' . $frequency);\n\t\t}\n\n\t\tif ($prev_time > 0) {\n\t\t\tif ($offset < $prev_time) {\n\t\t\t\tdebug('Time to Run Poller');\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$prev_time = $offset;\n\t\t$i++;\n\n\t\tsleep(1);\n\t}\n\n\treturn $frequency;\n}\n\nfunction run_poller() {\n\tglobal $config, $debug;\n\n\tdebug('Cacti Data Collector');\n\n\t$command = ' -q ' . CACTI_PATH_BASE . '/poller.php --force' . ($debug ? ' --debug':'');\n\n\t$php_binary = read_config_option('path_php_binary');\n\n\tif (empty($php_binary)) {\n\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t$php_binary = 'php';\n\t\t} else {\n\t\t\t$php_binary = '/usr/bin/php';\n\t\t}\n\t}\n\n\tdebug('Command Line is: ' . $command);\n\n\texec_background($php_binary, $command);\n}\n\nfunction get_options() {\n\t$parms = $_SERVER['argv'];\n\tarray_shift($parms);\n\n\t$options = array();\n\n\tif (sizeof($parms)) {\n\t\t$shortopts = 'VvHh';\n\n\t\t$longopts = array(\n\t\t\t'foreground',\n\t\t\t'debug',\n\t\t\t'version',\n\t\t\t'help'\n\t\t);\n\n\t\t$options = getopt($shortopts, $longopts);\n\n\t\tforeach ($options as $arg => $value) {\n\t\t\tswitch($arg) {\n\t\t\t\tcase 'foreground':\n\t\t\t\tcase 'debug':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'version':\n\t\t\t\tcase 'V':\n\t\t\t\tcase 'v':\n\t\t\t\t\tdisplay_version();\n\n\t\t\t\t\texit(0);\n\t\t\t\tcase 'help':\n\t\t\t\tcase 'H':\n\t\t\t\tcase 'h':\n\t\t\t\t\tdisplay_help();\n\n\t\t\t\t\texit(0);\n\n\t\t\t\tdefault:\n\t\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\" . PHP_EOL . PHP_EOL;\n\t\t\t\t\tdisplay_help();\n\n\t\t\t\t\texit(1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $options;\n}\n\nfunction debug($string) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\t$output = 'DEBUG: ' . trim($string);\n\n\t\tprint $output . PHP_EOL;\n\t}\n}\n\nfunction display_version() {\n\tglobal $config;\n\n\t$version = get_cacti_cli_version();\n\tprint 'The Cacti Daemon (cactid), Version ' . $version . ', ' . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/*\tdisplay_help - displays the usage of the function */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL . 'usage: cactid.php [ --foreground ] [ --debug ]' . PHP_EOL . PHP_EOL;\n\tprint 'Daemon for Cacti data collection, otherwise known as cactid.' . PHP_EOL;\n\tprint 'optional:' . PHP_EOL;\n\tprint '  --foreground       Run cactid in foreground mode, otherwise this is a forking daemon.' . PHP_EOL;\n\tprint '  --debug            Used for debugging in --foreground mode.' . PHP_EOL;\n}\n"
        },
        {
          "name": "cdef.php",
          "type": "blob",
          "size": 23.720703125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/cdef.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tcdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tcdef_item_remove();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tcdef_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tcdef_item_dnd();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tcdef();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction draw_cdef_preview($cdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>cdef=<?php print html_escape(get_cdef($cdef_id, true));?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\nfunction form_save() {\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('cdef_id') && ! is_numeric(get_filter_request_var('cdef_id'))) {\n\t\tset_request_var('cdef_id', 0);\n\t}\n\n\tif (isset_request_var('save_component_cdef')) {\n\t\t$save['id']     = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']   = get_hash_cdef(get_nfilter_request_var('id'));\n\t\t$save['name']   = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['system'] = 0;\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_id = sql_save($save, 'cdef');\n\n\t\t\tif ($cdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php?action=edit&id=' . (empty($cdef_id) ? get_nfilter_request_var('id') : $cdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cdef_id');\n\t\tget_filter_request_var('type');\n\t\t/* ==================================================== */\n\n\t\t$sequence = get_sequence(get_nfilter_request_var('id'), 'sequence', 'cdef_items', 'cdef_id=' . get_nfilter_request_var('cdef_id'));\n\n\t\t$save['id']       = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']     = get_hash_cdef(get_nfilter_request_var('id'), 'cdef_item');\n\t\t$save['cdef_id']  = form_input_validate(get_nfilter_request_var('cdef_id'), 'cdef_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = form_input_validate(get_nfilter_request_var('type'), 'type', '^[0-9]+$', false, 3);\n\t\t$save['value']    = form_input_validate(get_nfilter_request_var('value'), 'value', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_item_id = sql_save($save, 'cdef_items');\n\n\t\t\tif ($cdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: cdef.php?action=item_edit&cdef_id=' . get_nfilter_request_var('cdef_id') . '&id=' . (empty($cdef_item_id) ? get_nfilter_request_var('id') : $cdef_item_id));\n\t\t} else {\n\t\t\theader('Location: cdef.php?action=edit&id=' . get_nfilter_request_var('cdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_cdef($_cdef_id, $cdef_title) {\n\tglobal $fields_cdef_edit;\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array($_cdef_id));\n\t$cdef_items = db_fetch_assoc_prepared('SELECT * FROM cdef_items WHERE cdef_id = ?', array($_cdef_id));\n\n\t/* substitute the title variable */\n\t$cdef['name'] = str_replace('<cdef_title>', $cdef['name'], $cdef_title);\n\n\t/* create new entry: host_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_cdef(0);\n\n\tforeach ($fields_cdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $cdef[$field];\n\t\t}\n\t}\n\n\t$cdef_id = sql_save($save, 'cdef');\n\n\t/* create new entry(s): cdef_items */\n\tif (cacti_sizeof($cdef_items) > 0) {\n\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_cdef(0, 'cdef_item');\n\t\t\t$save['cdef_id']  = $cdef_id;\n\t\t\t$save['sequence'] = $cdef_item['sequence'];\n\t\t\t$save['type']     = $cdef_item['type'];\n\t\t\t$save['value']    = $cdef_item['value'];\n\n\t\t\tsql_save($save, 'cdef_items');\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM cdef WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM cdef_items WHERE ' . array_to_sql_or($selected_items, 'cdef_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_cdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM cdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'cdef.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following CDEF.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following CDEFs.'),\n\t\t\t\t\t'scont'    => __('Delete CDEF'),\n\t\t\t\t\t'pcont'    => __('Delete CDEFs')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following CDEF.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following CDEFs.'),\n\t\t\t\t\t'scont'    => __('Duplicate CDEF'),\n\t\t\t\t\t'pcont'    => __('Duplicate CDEFs'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<cdef_title>',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction cdef_item_remove_confirm() {\n\tglobal $cdef_functions, $cdef_item_types, $custom_cdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\t/* sort the cdef functions */\n\tasort($cdef_functions);\n\n\tform_start('cdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t$cdef_item  = db_fetch_row_prepared('SELECT * FROM cdef_items WHERE id = ?', array(get_request_var('cdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following CDEF Item.');?></p>\n\t\t\t<p><?php print __esc('CDEF Name: %s', $cdef['name']);?><br>\n\t\t\t<em><?php $cdef_item_type = $cdef_item['type'];\n\tprint $cdef_item_types[$cdef_item_type];?></em>: <strong><?php print html_escape(get_cdef_item_name($cdef_item['id']));?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");$(\".deleteMarker\").blur();' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove CDEF Item');?>'>\n\t\t\t<input type='hidden' id='my_cdef_id' value='<?php print $cdef['id'];?>'>\n\t\t\t<input type='hidden' id='my_id' value='<?php print $cdef_item['id'];?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl:'cdef.php?action=item_remove',\n\t\t\t\tfuncEnd: 'remoteCdefItemFinalize'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tcdef_id: <?php print get_request_var('cdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t});\n\n\tfunction removeCdefItemFinalize(data) {\n\t\t$('#cdialog').dialog('close');\n\t\t$('.deleteMarker').blur();\n\t\tloadUrl({url:'cdef.php?action=edit&id=<?php print get_request_var('id');?>'})\n\t};\n\t</script>\n\t<?php\n}\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction cdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM cdef_items\n\t\tWHERE cdef_id = ?\n\t\tAND id = ?',\n\t\tarray(get_request_var('cdef_id'), get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $cdef_item_types, $cdef_functions, $cdef_operators, $custom_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\t/* sort the cdef functions */\n\tasort($cdef_functions);\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($cdef)) {\n\t\t\t$current_type          = $cdef['type'];\n\t\t\t$values[$current_type] = $cdef['value'];\n\t\t}\n\t} else {\n\t\t$cdef = array();\n\t}\n\n\thtml_start_box(__('CDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_cdef_preview(get_request_var('cdef_id'));\n\thtml_end_box();\n\n\tform_start('cdef.php', 'chk');\n\n\t$cdef_name = db_fetch_cell_prepared('SELECT name\n\t\tFROM cdef\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('cdef_id')));\n\n\thtml_start_box(__esc('CDEF Items [edit: %s]', $cdef_name), '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($cdef['type'])) {\n\t\t$current_type = $cdef['type'];\n\t} else {\n\t\t$current_type = '1';\n\t}\n\n\t$form_cdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of CDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $cdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this CDEF item.'),\n\t\t\t'value'         => (isset($cdef['value']) ? $cdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'cdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('cdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\t\tcase '1':\n\t\t\t$form_cdef['value']['array'] = $cdef_functions;\n\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\t$form_cdef['value']['array'] = $cdef_operators;\n\n\t\t\tbreak;\n\t\tcase '4':\n\t\t\t$form_cdef['value']['array'] = $custom_data_source_types;\n\n\t\t\tbreak;\n\t\tcase '5':\n\t\t\t$form_cdef['value']['method'] = 'drop_sql';\n\t\t\t$form_cdef['value']['sql']    = 'SELECT name, id FROM cdef WHERE `system` = 0 ORDER BY name';\n\n\t\t\tbreak;\n\t\tcase '6':\n\t\t\t$form_cdef['value']['method']     = 'textbox';\n\t\t\t$form_cdef['value']['max_length'] = '255';\n\t\t\t$form_cdef['value']['size']       = '30';\n\n\t\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_cdef, $cdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'cdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&cdef_id=' + $('#cdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tloadUrl({url:strURL})\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n}\n\nfunction cdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('cdef_item') && is_array(get_nfilter_request_var('cdef_item'))) {\n\t\t$cdef_ids = get_nfilter_request_var('cdef_item');\n\n\t\tif (cacti_sizeof($cdef_ids)) {\n\t\t\t$sequence = 1;\n\n\t\t\tforeach ($cdef_ids as $cdef_id) {\n\t\t\t\t$cdef_id = str_replace('line', '', $cdef_id);\n\t\t\t\tinput_validate_input_number($cdef_id, 'cdef_id');\n\n\t\t\t\tdb_execute_prepared('UPDATE cdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $cdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: cdef.php?action=edit&id=' . get_request_var('id'));\n}\n\nfunction cdef_edit() {\n\tglobal $cdef_item_types, $fields_cdef_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef         = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('CDEF [edit: %s]', $cdef['name']);\n\t} else {\n\t\t$header_label = __('CDEF [new]');\n\t}\n\n\tform_start('cdef.php', 'cdef');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_cdef_edit, (isset($cdef) ? $cdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_cdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('CDEF Items'), '100%', '', '3', 'center', 'cdef.php?action=item_edit&cdef_id=' . $cdef['id'], false, false);\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$cdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE cdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 1;\n\n\t\t$total_items = cacti_sizeof($cdef_items);\n\n\t\tif (cacti_sizeof($cdef_items)) {\n\t\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\t\tform_alternate_row('line' . $cdef_item['id'], true);\n\n\t\t\t\tform_selectable_cell(filter_value(__('Item # %d', $i), '', 'cdef.php?action=item_edit&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef['id']), $cdef_item['id']);\n\n\t\t\t\t$item_value = '<em>' . $cdef_item_types[$cdef_item['type']] . '</em>' . html_escape(get_cdef_item_name($cdef_item['id']));\n\n\t\t\t\tform_selectable_cell($item_value, $cdef_item['id']);\n\n\t\t\t\t$actions = '';\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 0) {\n\t\t\t\t\t\t$actions .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('cdef.php?action=item_movedown&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$actions .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t$actions .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('cdef.php?action=item_moveup&id=' . $cdef_item['id'] .\t'&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$actions .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$actions .= \"<a id='{$cdef['id']}_{$cdef_item['id']}' class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='#'></a>\";\n\n\t\t\t\tform_selectable_cell($actions, $cdef_item['id'], '', 'right');\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('cdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#cdef_edit3').find('.cactiTable').attr('id', 'cdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#cdef_item').find('tr:first').addClass('nodrag').addClass('nodrop');\n\t\t$('#cdef_item').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'cdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize()})\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').click(function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'cdef.php?action=item_remove_confirm&id='+id[0]+'&cdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#continue').off('click').on('click', function(data) {\n\t\t\t\t\t\t$.post('cdef.php?action=item_remove', {\n\t\t\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\t\t\tcdef_id: $('#my_cdef_id').val(),\n\t\t\t\t\t\t\tid: $('#my_id').val()\n\t\t\t\t\t\t}).done(function(data) {\n\t\t\t\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t\t\t\t$('.deleteMarker').blur();\n\t\t\t\t\t\t\tloadUrl({url:'cdef.php?action=edit&id='+$('#my_cdef_id').val()});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete CDEF Item');?>',\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction cdef() {\n\tglobal $actions, $item_rows;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('CDEFs'), 'cdef.php', 'form_cdef', 'sess_cdef', 'cdef.php?action=edit');\n\n\t$pageFilter->rows_label = __('CDEFs');\n\t$pageFilter->has_graphs = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' AND `system` = 0)';\n\t} else {\n\t\t$sql_where = 'WHERE `system` = 0';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM cdef\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$cdef_list = db_fetch_assoc(\"SELECT *\n\t\tFROM cdef\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('cdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('CDEFs'), 'page', 'main');\n\n\tform_start('cdef.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('CDEF Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this CDEF.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('CDEFs that are in use cannot be Deleted.  In use is defined as being referenced by a Graph or a Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs using this CDEF.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs Templates using this CDEF.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($cdef_list)) {\n\t\tforeach ($cdef_list as $cdef) {\n\t\t\tif ($cdef['graphs'] == 0 && $cdef['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\t$graphs_url    = 'graphs.php?reset=1&cdef_id=' . $cdef['id'];\n\t\t\t$templates_url = 'graph_templates.php?reset=1&cdef_id=' . $cdef['id'];\n\n\t\t\tform_alternate_row('line' . $cdef['id'], false, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($cdef['name'], get_request_var('filter'), 'cdef.php?action=edit&id=' . $cdef['id']), $cdef['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $cdef['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($cdef['graphs'], '-1'), '', $graphs_url), $cdef['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($cdef['templates'], '-1'), '', $templates_url), $cdef['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($cdef['name'], $cdef['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No CDEFs') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($cdef_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "changelog.php",
          "type": "blob",
          "size": 6.2724609375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/boost.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tdefault:\n\t\tif (!api_plugin_hook_function('changelog_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tchangelog_view();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n}\n\nfunction changelog_view() {\n\tglobal $database_default, $config, $rrdtool_versions, $poller_options, $input_types, $local_db_cnn_id;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\ttop_header();\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'highlights' => __('Highlights'),\n\t\t'full'       => __('Full'),\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_cl_tabs', 'summary');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t$page = 'changelog.php?tab=' . $current_tab;\n\n\t$refresh = array(\n\t\t'seconds' => 999999,\n\t\t'page'    => $page,\n\t\t'logout'  => 'false'\n\t);\n\n\tset_page_refresh($refresh);\n\t$i = 0;\n\n\t/* draw the tabs */\n\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\" href='\" . html_escape(CACTI_PATH_URL .\n\t\t\t'changelog.php?tab=' . $tab_short_name) .\n\t\t\t\"'>\" . $tabs[$tab_short_name] . '</a></li>';\n\n\t\t$i++;\n\t}\n\n\tapi_plugin_hook('changelog_tab');\n\n\tprint '</ul></nav></div>';\n\n\t$tab = get_request_var('tab');\n\n\tif (empty($tabs[$tab])) {\n\t\t$tab_keys = array_keys($tabs);\n\t\t$tab      = reset($tab_keys);\n\t}\n\t$header_label = __esc('Change Log [%s]', $tabs[$tab]);\n\n\t/* Display tech information */\n\t$changelog = file(CACTI_PATH_BASE . '/CHANGELOG');\n\n\t$full = $current_tab == 'full';\n\n\tarray_shift($changelog);\n\tarray_shift($changelog);\n\n\t$ver     = '';\n\t$vers    = array();\n\t$details = array();\n\t$first   = '';\n\n\tforeach ($changelog as $line) {\n\t\t$line = trim($line);\n\n\t\tif (isset($line[0]) && ($line[0] == '*' || $line[0] == '-')) {\n\t\t\t$detail = false;\n\n\t\t\tif (preg_match('/-(issue|feature|security): (.*)/i', $line, $parts)) {\n\t\t\t\t$detail = array('desc' => $parts[2]);\n\t\t\t} elseif (preg_match('/-(issue|feature|security)#(\\d+)\\: (.*)/i', $line, $parts)) {\n\t\t\t\t$detail = array('desc' => $parts[3], 'issue' => $parts[2]);\n\t\t\t}\n\n\t\t\t$type = 'unknown';\n\n\t\t\tif (isset($parts[1])) {\n\t\t\t\t$type = strtolower($parts[1]);\n\n\t\t\t\tif ($type == 'security') {\n\t\t\t\t\t$type = ' security';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!empty($detail)) {\n\t\t\t\tif (empty($details[$type])) {\n\t\t\t\t\t$details[$type] = array();\n\t\t\t\t}\n\t\t\t\t$details[$type][] = $detail;\n\t\t\t}\n\t\t} elseif (!empty($line)) {\n\t\t\tif (!empty($ver)) {\n\t\t\t\t$vers[$ver] = $details;\n\t\t\t\t$first      =true;\n\t\t\t\t$details    = array();\n\t\t\t}\n\n\t\t\tif (count($vers) > 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$ver = $line;\n\t\t}\n\t}\n\n\tkrsort($vers);\n\n\tforeach ($vers as $ver => $changelog) {\n\t\tif (!empty($ver)) {\n\t\t\thtml_start_box(__('Version %s', $ver), '100%', '', '3', 'center', '');\n\t\t\tksort($changelog);\n\n\t\t\tforeach ($changelog as $type => $details) {\n\t\t\t\t$output = false;\n\n\t\t\t\tforeach ($details as $detail) {\n\t\t\t\t\t$highlight = false;\n\n\t\t\t\t\tswitch ($type) {\n\t\t\t\t\t\tcase 'issue':\n\t\t\t\t\t\t\t$icon = '<i class=\"ti ti-tool\"></i>';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'feature':\n\t\t\t\t\t\t\t$icon      = '<i class=\"ti ti-rocket\"></i>';\n\t\t\t\t\t\t\t$highlight = true;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ' security':\n\t\t\t\t\t\t\t$icon      = '<i class=\"ti ti-shield-half\"></i>';\n\t\t\t\t\t\t\t$highlight = true;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$icon = '<i class=\"ti ti-help\"></i>';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($current_tab == 'full' || $highlight) {\n\t\t\t\t\t\tif (!$output) {\n\t\t\t\t\t\t\thtml_section_header(html_escape($type), 4);\n\t\t\t\t\t\t\t$output = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tform_alternate_row();\n\n\t\t\t\t\t\tprint '<td>' . $icon . '</td><td>' . html_escape($type) . '</td><td>';\n\n\t\t\t\t\t\tif (!empty($detail['issue'])) {\n\t\t\t\t\t\t\tprint '<a target=\"_blank\" href=\"https://github.com/cacti/cacti/issues/' . html_escape($detail['issue']) . '\">' . html_escape($detail['issue']) . '</a>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint '</td><td>' . html_escape($detail['desc']) . '</td>';\n\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\thtml_end_box();\n\n\t\t\tif ($current_tab !== 'full') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#tables').tablesorter({\n\t\t\twidgets: ['zebra'],\n\t\t\twidgetZebra: { css: ['even', 'odd'] },\n\t\t\theaderTemplate: '<div class=\"textSubHeaderDark\">{content} {icon}</div>',\n\t\t\tcssIconAsc: 'fa-sort-up',\n\t\t\tcssIconDesc: 'fa-sort-down',\n\t\t\tcssIconNone: 'fa-sort',\n\t\t\tcssIcon: 'fa'\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tbottom_footer();\n}\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "clog.php",
          "type": "blob",
          "size": 1.9619140625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account=true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* check edit/alter permissions */\nif (!clog_admin()) {\n\tif ($config['poller_id'] > 1) {\n\t\theader('Location: logout.php?action=remote');\n\t} else {\n\t\theader('Location: permission_denied.php');\n\t}\n\n\texit;\n}\n\nload_current_session_value('page_referrer', 'page_referrer', '');\n\nclog_view_logfile();\n"
        },
        {
          "name": "clog_user.php",
          "type": "blob",
          "size": 1.9677734375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\ninclude('./include/auth.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* check edit/alter permissions */\nif (!clog_authorized()) {\n\tif ($config['poller_id'] > 1) {\n\t\theader('Location: logout.php?action=remote');\n\t} else {\n\t\theader('Location: permission_denied.php');\n\t}\n\n\texit;\n}\n\nload_current_session_value('page_referrer', 'page_referrer', '');\n\nclog_view_logfile();\n"
        },
        {
          "name": "cmd.php",
          "type": "blob",
          "size": 36.4833984375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire_once(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('max_execution_time', '0');\nini_set('memory_limit', '-1');\n\n// process calling arguments\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$first      = null;\n$last       = null;\n$allhost    = true;\n$debug      = false;\n$mibs       = false;\n$mode       = 'online';\n$sessions   = array();\n$downhosts  = array();\n$host_count = 0;\n$tot_errors = 0;\n$poller_id  = $config['poller_id'];\n$pmessage   = false;\n$help       = false;\n$version    = false;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\t$version = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\t$help = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--poller':\n\t\t\tcase '-p':\n\t\t\t\t$pmessage  = true;\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--first':\n\t\t\tcase '-f':\n\t\t\t\t$first   = $value;\n\t\t\t\t$allhost = false;\n\n\t\t\t\tbreak;\n\t\t\tcase '--last':\n\t\t\tcase '-l':\n\t\t\t\t$last    = $value;\n\t\t\t\t$allhost = false;\n\n\t\t\t\tbreak;\n\t\t\tcase '--mibs':\n\t\t\tcase '-m':\n\t\t\t\t$mibs = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--mode':\n\t\t\tcase '-N':\n\t\t\t\t$mode = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--debug':\n\t\t\tcase '-d':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\" . PHP_EOL . PHP_EOL;\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\nif ($version) {\n\tdisplay_version();\n\n\texit;\n}\n\nif ($help) {\n\tdisplay_help();\n\n\texit;\n}\n\nglobal $poller_db_cnn_id, $remote_db_cnn_id, $cactiphp, $using_proc_function;\nglobal $poller_id, $sessions, $downhosts, $print_data_to_stdout;\n\n$maxwidth   = get_max_column_width();\n\nif ($pmessage) {\n\tcacti_log('Forcing poller to ' . $value, true, 'POLLER', POLLER_VERBOSITY_HIGH);\n}\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\nif ($first == null && $last == null) {\n\t// This is valid\n} elseif (!is_numeric($first) || $first < 0) {\n\tcacti_log('FATAL: The first host in the host range is invalid!', true, 'POLLER');\n\n\texit(-1);\n} elseif (!is_numeric($last) || $last < 0) {\n\tcacti_log('FATAL: The last host in the host range is invalid!', true, 'POLLER');\n\n\texit(-1);\n} elseif ($last < $first) {\n\tcacti_log('FATAL: The first host must always be less or equal to the last host!', true, 'POLLER');\n\n\texit(-1);\n}\n\n// verify the poller_id\nif (!is_numeric($poller_id) || $poller_id < 1) {\n\tcacti_log('FATAL: The poller needs to be a positive numeric value', true, 'POLLER');\n\n\texit(-1);\n}\n\n// notify cacti processes that a poller is running\nrecord_cmdphp_started();\n\n$exists = db_fetch_cell_prepared('SELECT COUNT(*)\n\tFROM host\n\tWHERE poller_id = ?',\n\tarray($poller_id)\n);\n\nif ($exists == 0 && $poller_id > 1) {\n\trecord_cmdphp_done();\n\tdb_close();\n\n\texit(-1);\n}\n\n// install signal handlers for UNIX only\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n// record the start time\n$start           = microtime(true);\n$poller_interval = read_config_option('poller_interval');\n$script_timeout  = read_config_option('script_timeout');\n$cron_interval   = read_config_option('cron_interval');\n$active_profiles = read_config_option('active_profiles');\n\n// check arguments\nif ($allhost) {\n\t$sql_where1 = '';\n\t$sql_where2 = '';\n\t$sql_where3 = '';\n\n\t$params1    = array($poller_id);\n\t$params2    = array($poller_id, POLLER_ACTION_SCRIPT_PHP, POLLER_ACTION_SCRIPT_PHP_COUNT);\n\t$params3    = array($poller_interval, $poller_interval, 0, $poller_interval, $poller_id);\n} else {\n\t$sql_where0 = 'WHERE poller_id > ?';\n\t$sql_where1 = ' AND ((h.id >= ? AND h.id <= ?) OR h.id IS NULL)';\n\t$sql_where2 = ' AND pi.host_id >= ? AND pi.host_id <= ?';\n\t$sql_where3 = ' AND pi.host_id >= ? AND pi.host_id <= ?';\n\n\t$params1    = array($poller_id, $first, $last);\n\t$params2    = array($poller_id, POLLER_ACTION_SCRIPT_PHP, POLLER_ACTION_SCRIPT_PHP_COUNT, $first, $last);\n\n\tif ($cron_interval == $poller_interval) {\n\t\t$params3    = array($poller_interval, $poller_interval, 0, $poller_interval, $poller_id, $first, $last);\n\t} else {\n\t\t$params3    = array($poller_interval, $poller_interval, $poller_interval, $poller_interval, $poller_id, $first, $last);\n\t}\n}\n\nif ($debug) {\n\t$print_data_to_stdout = true;\n\t$medium               = POLLER_VERBOSITY_LOW;\n\t$hmedium              = POLLER_VERBOSITY_LOW;\n} elseif ($allhost) {\n\t$print_data_to_stdout = true;\n\t$medium               = POLLER_VERBOSITY_LOW;\n\t$hmedium              = POLLER_VERBOSITY_MEDIUM;\n} else {\n\t$print_data_to_stdout = false;\n\t$medium               = POLLER_VERBOSITY_MEDIUM;\n\t$hmedium              = POLLER_VERBOSITY_MEDIUM;\n}\n\n// address potential exploits\ninput_validate_input_number($first, 'first');\ninput_validate_input_number($last, 'last');\n\nif (db_column_exists('sites', 'disabled')) {\n\t$sql_where = 'AND IFNULL(s.disabled, \"\") != \"on\"';\n} else {\n\t$sql_where = '';\n}\n\nif ($active_profiles != 1) {\n\t$poller_items = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . \" *\n\t\t\tFROM poller_item AS pi\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = pi.host_id\n\t\t\tLEFT JOIN sites AS s\n\t\t\tON s.id = h.site_id\n\t\t\tWHERE pi.poller_id = ?\n\t\t\t$sql_where\n\t\t\tAND IFNULL(TRIM(h.disabled),'') != 'on'\n\t\t\t$sql_where1\n\t\t\tAND pi.rrd_next_step <= 0\n\t\t\tORDER by pi.host_id\",\n\t\t$params1\n\t);\n\n\t$script_server_calls = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . \" COUNT(*)\n\t\t\tFROM poller_item AS pi\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = pi.host_id\n\t\t\tLEFT JOIN sites AS s\n\t\t\tON s.id = h.site_id\n\t\t\tWHERE pi.poller_id = ?\n\t\t\t$sql_where\n\t\t\tAND IFNULL(TRIM(h.disabled),'') != 'on'\n\t\t\tAND pi.action IN(?, ?)\n\t\t\t$sql_where2\n\t\t\tAND pi.rrd_next_step <= 0\",\n\t\t$params2\n\t);\n\n\t// setup next polling interval\n\tdb_execute_prepared(\"UPDATE poller_item AS pi\n\t\tSET rrd_next_step = IF(rrd_step = ?, 0, IF(rrd_next_step - ? < 0, rrd_step - ?, rrd_next_step - ?))\n\t\tWHERE poller_id = ?\n\t\t$sql_where3\",\n\t\t$params3);\n} else {\n\t$poller_items = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . \" *\n\t\tFROM poller_item AS pi\n\t\tLEFT JOIN host AS h\n\t\tON h.id = pi.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON s.id = h.site_id\n\t\tWHERE pi.poller_id = ?\n\t\t$sql_where\n\t\tAND IFNULL(TRIM(h.disabled),'') != 'on'\n\t\t$sql_where1\n\t\tORDER by pi.host_id\",\n\t\t$params1\n\t);\n\n\t$script_server_calls = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . \" COUNT(*)\n\t\tFROM poller_item AS pi\n\t\tLEFT JOIN host AS h\n\t\tON h.id = pi.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON s.id = h.site_id\n\t\tWHERE pi.poller_id = ?\n\t\t$sql_where\n\t\tAND IFNULL(TRIM(h.disabled),'') != 'on'\n\t\tAND pi.action IN(?, ?)\n\t\t$sql_where2\",\n\t\t$params2\n\t);\n}\n\nif (cacti_sizeof($poller_items) && read_config_option('poller_enabled') == 'on') {\n\t$host_down    = false;\n\t$new_host     = true;\n\t$last_host    = '';\n\t$output_array = array();\n\t$output_count = 0;\n\t$error_ds     = array();\n\t$width_dses   = array();\n\n\t/* startup Cacti php polling server and include the\n\t * include file for script processing\n\t */\n\tif ($script_server_calls > 0) {\n\t\t$cactides = array(\n\t\t\t0 => array('pipe', 'r'), // stdin is a pipe that the child will read from\n\t\t\t1 => array('pipe', 'w'), // stdout is a pipe that the child will write to\n\t\t\t2 => array('pipe', 'w')  // stderr is a pipe to write to\n\t\t);\n\n\t\t$php_path = read_config_option('path_php_binary');\n\n\t\t$command = $php_path     . ' -q ' .\n\t\t\tCACTI_PATH_BASE . '/script_server.php ' .\n\t\t\t' --environ=cmd '    .\n\t\t\t' --poller='         . $poller_id .\n\t\t\t' --mode='           . $config['connection'];\n\n\t\t$cactiphp = proc_open($command, $cactides, $pipes);\n\t\t$output   = fgets($pipes[1], 1024);\n\n\t\tif (substr_count($output, 'Started') != 0) {\n\t\t\tcacti_log('PHP Script Server Started Properly', $print_data_to_stdout, 'POLLER', POLLER_VERBOSITY_HIGH);\n\t\t}\n\n\t\t$using_proc_function = true;\n\t} else {\n\t\t$using_proc_function = false;\n\t\t$cactiphp            = false;\n\t}\n\n\tforeach ($poller_items as $item) {\n\t\t$ds      = $item['local_data_id'];\n\t\t$host_id = $item['host_id'];\n\n\t\t// check for host change\n\t\tif ($host_id != $last_host) {\n\t\t\t$new_host       = true;\n\t\t\t$host_down      = false;\n\t\t\t$set_spike_kill = false;\n\n\t\t\tif ($last_host != '') {\n\t\t\t\t$host_end = microtime(true);\n\n\t\t\t\tif ($output_count > 0) {\n\t\t\t\t\tcacti_log(\"Device[$last_host] Writing $output_count items to Poller Output Table\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output\n\t\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\n\t\t\t\t\tif (read_config_option('boost_redirect') == 'on' && read_config_option('boost_rrd_update_enable') == 'on') {\n\t\t\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output_boost\n\t\t\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\t\t\t\t\t}\n\n\t\t\t\t\t$output_array = array();\n\t\t\t\t\t$output_count = 0;\n\t\t\t\t}\n\n\t\t\t\t$errors = cacti_sizeof($error_ds);\n\n\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\tSET polling_time = ?, current_errors = ?\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND deleted = \"\"',\n\t\t\t\t\tarray(($host_end - $host_start), $errors, $last_host)\n\t\t\t\t);\n\n\t\t\t\tcacti_log(sprintf('Device[%d] Time[%3.2f] Items[%d] Errors[%d]', $last_host, $host_end - $host_start, $itemcnt, $errors), $print_data_to_stdout, 'POLLER', $hmedium);\n\n\t\t\t\tif ($errors > 0) {\n\t\t\t\t\tif (read_config_option('spine_log_level') == 1) {\n\t\t\t\t\t\tcacti_log('WARNING: Invalid Response(s), Errors[' . $errors . '] Device[' . $last_host . '] Thread[1] DS[' . implode(', ', $error_ds) . ']', false, 'POLLER');\n\t\t\t\t\t}\n\n\t\t\t\t\t$tot_errors += $errors;\n\n\t\t\t\t\tdb_execute_prepared('INSERT INTO host_errors\n\t\t\t\t\t\t(host_id, poller_id, errors, local_data_ids)\n\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\tarray($last_host, $poller_id, $errors, implode(',', $error_ds)));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$error_ds    = array();\n\t\t\t$itemcnt     = 0;\n\t\t\t$host_start  = microtime(true);\n\n\t\t\t$host_count++;\n\t\t}\n\n\t\t// ping host, find out if there are re-index checks required\n\t\tif ($new_host && !empty($host_id)) {\n\t\t\t$host_down = ping_and_reindex_check($item, $mibs, $script_timeout);\n\t\t}\n\n\t\t$new_host  = false;\n\t\t$last_host = $host_id;\n\n\t\tif (!$host_down) {\n\t\t\t$output = collect_device_data($item, $error_ds, $script_timeout);\n\t\t\t$itemcnt++;\n\n\t\t\tif (read_config_option('poller_debug') == 'on' && strlen($output) > $maxwidth) {\n\t\t\t\t$width_dses[] = $ds;\n\t\t\t}\n\n\t\t\tif ($set_spike_kill && !substr_count($output, ':')) {\n\t\t\t\t// insert a U in place of the actual value if the snmp agent restarts\n\t\t\t\t$output_array[] = sprintf('(%d, %s, CURRENT_TIMESTAMP(), \"U\")', $item['local_data_id'], db_qstr($item['rrd_name']));\n\t\t\t} else {\n\t\t\t\t// otherwise, just insert the value received from the poller\n\t\t\t\t$output_array[] = sprintf('(%d, %s, CURRENT_TIMESTAMP(), %s)', $item['local_data_id'], db_qstr($item['rrd_name']), db_qstr($output));\n\t\t\t}\n\n\t\t\tif ($output_count > 2000) {\n\t\t\t\tcacti_log(\"Device[$host_id] Writing $output_count items to Poller Output Table\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output\n\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\n\t\t\t\tif (read_config_option('boost_redirect') == 'on' && read_config_option('boost_rrd_update_enable') == 'on') {\n\t\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output_boost\n\t\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\t\t\t\t}\n\n\t\t\t\t$output_array = array();\n\t\t\t\t$output_count = 0;\n\t\t\t} else {\n\t\t\t\t$output_count++;\n\t\t\t}\n\t\t}\n\n\t\t// check for an over running poller\n\t\t$now = microtime(true);\n\n\t\tif ($now - $start > $poller_interval) {\n\t\t\tcacti_log('WARNING: cmd.php poller has run over its polling interval and therefore is ending');\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Record the last hosts polling time\n\t$host_end = microtime(true);\n\n\t// Flush the items to the output table\n\tif ($output_count > 0) {\n\t\tcacti_log(\"Device[$host_id] Writing $output_count items to Poller Output Table\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\tdb_execute('INSERT IGNORE INTO poller_output\n\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\n\t\tif (read_config_option('boost_redirect') == 'on' && read_config_option('boost_rrd_update_enable') == 'on') {\n\t\t\tdb_execute('INSERT IGNORE INTO poller_output_boost\n\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\tVALUES ' . implode(', ', $output_array), true, $poller_db_cnn_id);\n\t\t}\n\t}\n\n\t$errors = cacti_sizeof($error_ds);\n\n\tdb_execute_prepared('UPDATE host\n\t\tSET polling_time = ?, current_errors = ?\n\t\tWHERE id = ?\n\t\tAND deleted = \"\"',\n\t\tarray(($host_end - $host_start), $errors, $host_id)\n\t);\n\n\tcacti_log(sprintf('Device[%d] Time[%3.2f] Items[%d] Errors[%d]', $last_host, $host_end - $host_start, $itemcnt, $errors), $print_data_to_stdout, 'POLLER', $hmedium);\n\n\tif ($errors > 0) {\n\t\tif (read_config_option('spine_log_level') == 1) {\n\t\t\tcacti_log('WARNING: Invalid Response(s), Errors[' . $errors . '] Device[' . $host_id . '] Thread[1] DS[' . implode(', ', $error_ds) . ']', false, 'POLLER');\n\t\t}\n\n\t\t$tot_errors += $errors;\n\n\t\tdb_execute_prepared('INSERT INTO host_errors\n\t\t\t(host_id, poller_id, errors, local_data_ids)\n\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\tarray($last_host, $poller_id, $errors, implode(',', $error_ds)));\n\t}\n\n\tif (cacti_sizeof($width_dses)) {\n\t\tcacti_log('WARNING: Long Responses Errors[' . cacti_sizeof($width_dses) . '] DS[' . implode(', ', $width_dses) . ']', false, 'POLLER');\n\t}\n\n\tif ($using_proc_function && $script_server_calls > 0) {\n\t\t// close php server process\n\t\t@fwrite($pipes[0], \"quit\\r\\n\");\n\t\tfclose($pipes[0]);\n\t\tfclose($pipes[1]);\n\t\tfclose($pipes[2]);\n\n\t\t$return_value = proc_close($cactiphp);\n\t}\n\n\t// take time and log performance data\n\t$end = microtime(true);\n\n\tcacti_log(sprintf(\n\t\t'Time: %01.4f s, ' .\n\t\t\t'Poller: %s, '     .\n\t\t\t'Threads: N/A, '   .\n\t\t\t'Devices: %d, '    .\n\t\t\t'Items: %d, '      .\n\t\t\t'Errors: %d',\n\t\tround($end - $start, 4),\n\t\t$poller_id,\n\t\t$host_count,\n\t\tcacti_sizeof($poller_items),\n\t\t$tot_errors\n\t), $print_data_to_stdout, 'POLLER', $medium);\n} else {\n\tcacti_log('NOTE: There are no items in your poller for this polling cycle!', true, 'POLLER', $medium);\n}\n\n// Try to check device status only for devices without poller items\nif ($allhost) {\n\t$sql_where = 'AND h.poller_id = ?';\n\t$params    = array($poller_id);\n} else {\n\t$sql_where = 'AND h.poller_id = ? AND h.id >= ? AND h.id <= ? ';\n\t$params    = array($poller_id, $first, $last);\n}\n\n$hosts = db_fetch_assoc_prepared(\"SELECT h.id, h.hostname, h.ping_port, h.ping_method, h.ping_retries, h.ping_timeout, h.availability_method\n\tFROM host AS h\n\tLEFT JOIN poller_item AS pi\n\tON h.id=pi.host_id\n\tWHERE pi.host_id IS NULL\n\tAND (h.disabled = '' OR h.disabled IS NULL)\n\t$sql_where\",\n\t$params);\n\nif (cacti_sizeof($hosts)) {\n\tcacti_log('NOTE: Found ' . cacti_sizeof($hosts) . ' Device(s) for up/down validation only', true, 'POLLER', $medium);\n\n\tforeach ($hosts as $host) {\n\t\t$ping = new Net_Ping;\n\t\t$ping->host = $host;\n\t\t$ping->port = $host['ping_port'];\n\n\t\t// perform the appropriate ping check of the host\n\t\tif ($ping->ping($host['availability_method'], $host['ping_method'], $host['ping_timeout'], $host['ping_retries'])) {\n\t\t\tupdate_host_status(HOST_UP, $host['id'], $ping, $host['availability_method'], $print_data_to_stdout);\n\t\t\tcacti_log(\"Device[\" . $host['id'] .\"] STATUS: Device '\" . $host['hostname'] . \"' is UP.\", $print_data_to_stdout, 'POLLER', debug_level($host['id'], POLLER_VERBOSITY_MEDIUM));\n\t\t} else {\n\t\t\tupdate_host_status(HOST_DOWN, $host['id'], $ping, $host['availability_method'], $print_data_to_stdout);\n\t\t\tcacti_log(\"Device[\" . $host['id'] . \"] STATUS: Device '\" . $host['hostname'] . \"' is Down.\", $print_data_to_stdout, 'POLLER', debug_level($host['id'], POLLER_VERBOSITY_MEDIUM));\n\t\t}\n\t}\n}\n\n// record the process as having completed\nrecord_cmdphp_done();\n\n// close the database connection\ndb_close();\n\nexit(0);\n\n// function to assist in logging\nfunction debug_level($host_id, $level) {\n\tglobal $debug;\n\n\tstatic $debug_enabled = array();\n\n\tif (!is_bool($debug_enabled[$host_id] ?? null)) {\n\t\tif ($debug) {\n\t\t\t$debug_enabled[$host_id] = true;\n\t\t} else {\n\t\t\t$debug_enabled[$host_id] = is_device_debug_enabled($host_id);\n\t\t}\n\t}\n\n\t$level = $debug_enabled[$host_id] ? POLLER_VERBOSITY_NONE : $level;\n\n\treturn $level;\n}\n\n// let the poller server know about cmd.php being finished\nfunction record_cmdphp_done($pid = '') {\n\tglobal $poller_id, $poller_db_cnn_id;\n\n\tif ($pid == '') {\n\t\t$pid = getmypid();\n\t}\n\n\tdb_execute_prepared(\n\t\t'UPDATE poller_time\n\t\tSET end_time=NOW()\n\t\tWHERE poller_id = ?\n\t\tAND pid = ?',\n\t\tarray($poller_id, $pid),\n\t\ttrue,\n\t\t$poller_db_cnn_id\n\t);\n}\n\n// let cacti processes know that a poller has started\nfunction record_cmdphp_started() {\n\tglobal $poller_id, $poller_db_cnn_id;\n\n\tdb_execute_prepared(\n\t\t\"INSERT INTO poller_time\n\t\t(poller_id, pid, start_time, end_time)\n\t\tVALUES (?, ?, NOW(), '0000-00-00 00:00:00')\",\n\t\tarray($poller_id, getmypid()),\n\t\ttrue,\n\t\t$poller_db_cnn_id\n\t);\n}\n\nfunction open_snmp_session($host_id, &$item) {\n\tglobal $sessions, $downhosts;\n\n\tif (!isset($item['max_oids'])) {\n\t\t$item['max_oids'] = read_config_option('max_get_size');\n\t}\n\n\tif (!isset($sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']]) && !isset($downhosts[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']])) {\n\t\t$sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']] = cacti_snmp_session(\n\t\t\t$item['hostname'],\n\t\t\t$item['snmp_community'],\n\t\t\t$item['snmp_version'],\n\t\t\t$item['snmp_username'],\n\t\t\t$item['snmp_password'],\n\t\t\t$item['snmp_auth_protocol'],\n\t\t\t$item['snmp_priv_passphrase'],\n\t\t\t$item['snmp_priv_protocol'],\n\t\t\t$item['snmp_context'],\n\t\t\t$item['snmp_engine_id'],\n\t\t\t$item['snmp_port'],\n\t\t\t$item['snmp_timeout'],\n\t\t\t$item['snmp_retries'],\n\t\t\t$item['max_oids']\n\t\t);\n\n\t\tif ($sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']] === false) {\n\t\t\tunset($sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']]);\n\t\t\t$downhosts[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']] = true;\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn $sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']];\n}\n\nfunction snmp_mark_host_down($host_id, &$item) {\n\tglobal $sessions, $downhosts;\n\n\tunset($sessions[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']]);\n\t$downhosts[$host_id . '_' . $item['snmp_version'] . '_' . $item['snmp_port']] = true;\n}\n\nfunction update_system_mibs($host_id) {\n\t$system_mibs = array(\n\t\t'snmp_sysDescr'             => '.1.3.6.1.2.1.1.1.0',\n\t\t'snmp_sysObjectID'          => '.1.3.6.1.2.1.1.2.0',\n\t\t'snmp_sysUpTimeInstanceAlt' => '.1.3.6.1.6.3.10.2.1.3.0',\n\t\t'snmp_sysUpTimeInstance'    => '.1.3.6.1.2.1.1.3.0',\n\t\t'snmp_sysContact'           => '.1.3.6.1.2.1.1.4.0',\n\t\t'snmp_sysName'              => '.1.3.6.1.2.1.1.5.0',\n\t\t'snmp_sysLocation'          => '.1.3.6.1.2.1.1.6.0'\n\t);\n\n\t$h = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\n\tif (cacti_sizeof($h)) {\n\t\t$session        = open_snmp_session($host_id, $h);\n\t\t$uptimeAltFound = false;\n\t\t$uptime         = false;\n\n\t\tif ($session !== false) {\n\t\t\tforeach ($system_mibs as $name => $oid) {\n\t\t\t\t$value = cacti_snmp_session_get($session, $oid);\n\n\t\t\t\tif ($name == 'snmp_sysUpTimeInstanceAlt' && $value > 0) {\n\t\t\t\t\t$uptime         = $value * 100;\n\t\t\t\t\t$uptimeAltFound = true;\n\t\t\t\t} elseif ($name == 'snmp_sysUpTimeInstance' && !$uptimeAltFound) {\n\t\t\t\t\t$uptime = $value;\n\t\t\t\t} elseif ($name != 'snmp_sysUpTimeInstanceAlt' && !empty($value)) {\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t\"UPDATE host SET $name = ?\n\t\t\t\t\t\tWHERE deleted = ''\n\t\t\t\t\t\tAND id = ?\",\n\t\t\t\t\t\tarray($value, $host_id)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($uptime !== false) {\n\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\"UPDATE host SET snmp_sysUpTimeInstance = ?\n\t\t\t\t\tWHERE deleted = ''\n\t\t\t\t\tAND id = ?\",\n\t\t\t\t\tarray($uptime, $host_id)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"WARNING: Unable to open session for System Mib collection for Device[$host_id]\", false, 'POLLER');\n\t\t}\n\t}\n}\n\nfunction collect_device_data(&$item, &$error_ds, $script_timeout) {\n\tglobal $print_data_to_stdout, $using_proc_function, $pipes, $cactiphp;\n\n\t$thread_start = microtime(true);\n\t$ds           = $item['local_data_id'];\n\t$host_id      = $item['host_id'];\n\t$output       = 'U';\n\n\tswitch ($item['action']) {\n\t\tcase POLLER_ACTION_SNMP:\n\t\t\tif (($item['snmp_version'] == 0) || (($item['snmp_community'] == '') && ($item['snmp_version'] != 3))) {\n\t\t\t\tcacti_log(\"Device[$host_id] DS[$ds] ERROR: Invalid SNMP Data Source.  Please either delete it from the database, or correct it.\", $print_data_to_stdout, 'POLLER');\n\t\t\t\t$output = 'U';\n\t\t\t} else {\n\t\t\t\t$session = open_snmp_session($host_id, $item);\n\n\t\t\t\tif ($session !== false) {\n\t\t\t\t\t$output = cacti_snmp_session_get($session, $item['arg1'], true);\n\n\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\tif (prepare_validate_result($output) == false) {\n\t\t\t\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] OID:\" . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsnmp_mark_host_down($host_id, $item);\n\n\t\t\t\t\t$output = 'U';\n\n\t\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] OID:\" . $item['arg1'] . ', output: U', $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$total_time = (microtime(true) - $thread_start) * 1000;\n\n\t\t\tcacti_log(\"Device[$host_id] DS[$ds] TT[\" . round($total_time, 2) . '] SNMP: v' . $item['snmp_version'] . ': ' . $item['hostname'] . ', dsname: ' . $item['rrd_name'] . ', oid: ' . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\tbreak;\n\t\tcase POLLER_ACTION_SCRIPT:\n\t\t\t$output = trim(exec_poll($item['arg1'], $script_timeout));\n\n\t\t\tif ($output == 'U') {\n\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] SCRIPT: \" . $item['arg1'] . ', output: U', $print_data_to_stdout, 'POLLER');\n\t\t\t\t}\n\t\t\t} elseif (!is_numeric($output)) {\n\t\t\t\tif (prepare_validate_result($output) == false) {\n\t\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] SCRIPT: \" . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$total_time = (microtime(true) - $thread_start) * 1000;\n\n\t\t\tcacti_log(\"Device[$host_id] DS[$ds] TT[\" . round($total_time, 2) . '] SCRIPT: ' . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\tbreak;\n\t\tcase POLLER_ACTION_SCRIPT_PHP:\n\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\tif ($output == 'U') {\n\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] SERVER: \" . $item['arg1'] . ', output: U', $print_data_to_stdout, 'POLLER');\n\t\t\t\t}\n\t\t\t} elseif (!is_numeric($output)) {\n\t\t\t\tif (prepare_validate_result($output) == false) {\n\t\t\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\t\t\tif (read_config_option('spine_log_level') == 2) {\n\t\t\t\t\t\tcacti_log(\"WARNING: Invalid Response, Device[$host_id] DS[$ds] SERVER: \" . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$total_time = (microtime(true) - $thread_start) * 1000;\n\n\t\t\tcacti_log(\"Device[$host_id] DS[$ds] TT[\" . round($total_time, 2) . '] SERVER: ' . $item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$error_ds[$ds] = $ds;\n\n\t\t\tcacti_log(\"Device[$host_id] DS[$ds] ERROR: Invalid polling option: \" . $item['action'], $print_data_to_stdout, 'POLLER');\n\t}\n\n\treturn $output;\n}\n\nfunction ping_and_reindex_check(&$item, $mibs, $script_timeout) {\n\tglobal $poller_id, $print_data_to_stdout, $set_spike_kill, $poller_db_cnn_id, $pipes, $cactiphp, $using_proc_function;\n\n\t$ping    = new Net_Ping;\n\t$host_id = $item['host_id'];\n\n\t$host = db_fetch_row_prepared('SELECT hostname, ping_port, ping_method, ping_retries, ping_timeout, availability_method\n\t\tFROM host\n\t\tWHERE id = ?',\n\t\tarray($host_id)\n\t);\n\n\t$ping->host = $item;\n\t$ping->port = $host['ping_port'];\n\n\t// perform the appropriate ping check of the host\n\tif ($ping->ping($host['availability_method'], $host['ping_method'], $host['ping_timeout'], $host['ping_retries'])) {\n\t\t$host_down = false;\n\n\t\tupdate_host_status(HOST_UP, $host_id, $ping, $host['availability_method'], $print_data_to_stdout);\n\n\t\tcacti_log(\"Device[$host_id] STATUS: Device '\" . $item['hostname'] . \"' is UP.\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_DEBUG));\n\n\t\tif ($mibs && $host['availability_method'] != 0 && $host['availability_method'] != 3) {\n\t\t\tupdate_system_mibs($host_id);\n\t\t}\n\t} else {\n\t\t$host_down = true;\n\t\tupdate_host_status(HOST_DOWN, $host_id, $ping, $host['availability_method'], $print_data_to_stdout);\n\n\t\tcacti_log(\"Device[$host_id] STATUS: Device '\" . $item['hostname'] . \"' is Down.\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_DEBUG));\n\t}\n\n\tif (!$host_down) {\n\t\t// do the reindex check for this host\n\t\t$reindex = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . ' pr.data_query_id, pr.action,\n\t\t\tpr.op, pr.assert_value, pr.arg1\n\t\t\tFROM poller_reindex AS pr\n\t\t\tWHERE pr.host_id=?',\n\t\t\tarray($item['host_id'])\n\t\t);\n\n\t\tif (cacti_sizeof($reindex)) {\n\t\t\tcacti_log(\"Device[$host_id] RECACHE: Processing \" . cacti_sizeof($reindex) . \" items in the auto reindex cache for '\" . $item['hostname'] . \"'.\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_DEBUG));\n\n\t\t\tforeach ($reindex as $index_item) {\n\t\t\t\t$assert_fail = false;\n\n\t\t\t\tswitch ($index_item['action']) {\n\t\t\t\t\tcase POLLER_ACTION_SNMP:\n\t\t\t\t\t\t$session = open_snmp_session($host_id, $item);\n\n\t\t\t\t\t\tif ($session !== false) {\n\t\t\t\t\t\t\tif (trim($index_item['arg1']) == '.1.3.6.1.2.1.1.3.0') {\n\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, '.1.3.6.1.6.3.10.2.1.3.0');\n\n\t\t\t\t\t\t\t\tif ($output > 0) {\n\t\t\t\t\t\t\t\t\t$output *= 100;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $index_item['arg1']);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $index_item['arg1']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE OID: ' . $index_item['arg1'] . ', (assert:' . $index_item['assert_value'] . ' ' . $index_item['op'] . ' output:' . $output . ')', $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT:\n\t\t\t\t\t\t$output = trim(exec_poll($index_item['arg1'], $script_timeout));\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) == false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE Warning: Result from Script not valid. Partial Result: ' . substr($output, 0, $strout), $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE SCRIPT: ' . $index_item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP:\n\t\t\t\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($index_item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\t\t\t\tif (!is_numeric($output)) {\n\t\t\t\t\t\t\tif (prepare_validate_result($output) == false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE WARNING: Result from Script Server not valid. Partial Result: ' . substr($output, 0, $strout), $print_data_to_stdout, 'POLLER');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE SERVER: ' . $index_item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SNMP_COUNT:\n\t\t\t\t\t\t$session = open_snmp_session($host_id, $item);\n\n\t\t\t\t\t\tif ($session !== false) {\n\t\t\t\t\t\t\t$output = cacti_sizeof(cacti_snmp_session_walk($session, $index_item['arg1']));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE OID COUNT: ' . $index_item['arg1'] . ', output: ' . $output, $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT_COUNT:\n\t\t\t\t\t\t// count items found\n\t\t\t\t\t\t$script_index_array = exec_into_array($index_item['arg1']);\n\t\t\t\t\t\t$output             = cacti_sizeof($script_index_array);\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE CMD COUNT: ' . $index_item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP_COUNT:\n\t\t\t\t\t\t$output = exec_into_array($index_item['arg1']);\n\t\t\t\t\t\t$output = cacti_sizeof($output);\n\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE SERVER COUNT: ' . $index_item['arg1'] . \", output: $output\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_MEDIUM));\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . '] RECACHE ERROR: Invalid reindex option: ' . $index_item['action'], $print_data_to_stdout, 'POLLER');\n\t\t\t\t}\n\n\t\t\t\t/* assert the result with the expected value in the\n\t\t\t\t * db; recache if the assert fails\n\t\t\t\t */\n\t\t\t\t/* TODO: remove magic \":\" from poller_command[\"command\"]; this may interfere with scripts */\n\t\t\t\tif (($index_item['op'] == '=') && ($index_item['assert_value'] != trim($output))) {\n\t\t\t\t\tcacti_log(\"Device[$host_id] HT[1] DQ[\" . $index_item['data_query_id'] . \"] RECACHE ASSERT FAILED '\" . $index_item['assert_value'] . '=' . trim($output), $print_data_to_stdout, 'POLLER');\n\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t'REPLACE INTO poller_command\n\t\t\t\t\t\t(poller_id, time, action, command)\n\t\t\t\t\t\tVALUES (?, NOW(), ?, ?)',\n\t\t\t\t\t\tarray($poller_id, POLLER_COMMAND_REINDEX, $item['host_id'] . ':' . $index_item['data_query_id']),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t$poller_db_cnn_id\n\t\t\t\t\t);\n\n\t\t\t\t\t$assert_fail = true;\n\t\t\t\t} elseif (($index_item['op'] == '>') && ($index_item['assert_value'] < trim($output))) {\n\t\t\t\t\tcacti_log(\"Device[$host_id] HT[1] DQ[\" . $index_item['data_query_id'] . \"] RECACHE ASSERT FAILED '\" . $index_item['assert_value'] . '>' . trim($output), $print_data_to_stdout, 'POLLER');\n\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t'REPLACE INTO poller_command\n\t\t\t\t\t\t(poller_id, time, action, command)\n\t\t\t\t\t\tVALUES (?, NOW(), ?, ?)',\n\t\t\t\t\t\tarray($poller_id, POLLER_COMMAND_REINDEX, $item['host_id'] . ':' . $index_item['data_query_id']),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t$poller_db_cnn_id\n\t\t\t\t\t);\n\n\t\t\t\t\t$assert_fail = true;\n\t\t\t\t} elseif (($index_item['op'] == '<') && ($index_item['assert_value'] > trim($output))) {\n\t\t\t\t\tcacti_log(\"Device[$host_id] DQ[\" . $index_item['data_query_id'] . \"] RECACHE ASSERT FAILED '\" . $index_item['assert_value'] . '<' . trim($output), $print_data_to_stdout, 'POLLER');\n\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t'REPLACE INTO poller_command\n\t\t\t\t\t\t(poller_id, time, action, command)\n\t\t\t\t\t\tVALUES (?, NOW(), ?, ?)',\n\t\t\t\t\t\tarray($poller_id, POLLER_COMMAND_REINDEX, $item['host_id'] . ':' . $index_item['data_query_id']),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t$poller_db_cnn_id\n\t\t\t\t\t);\n\n\t\t\t\t\t$assert_fail = true;\n\t\t\t\t}\n\n\t\t\t\t/* update 'poller_reindex' with the correct information if:\n\t\t\t\t * 1) the assert fails\n\t\t\t\t * 2) the OP code is > or < meaning the current value could have changed without causing\n\t\t\t\t *     the assert to fail */\n\t\t\t\tif (($assert_fail == true) || ($index_item['op'] == '>') || ($index_item['op'] == '<')) {\n\t\t\t\t\tdb_execute_prepared(\n\t\t\t\t\t\t'UPDATE poller_reindex\n\t\t\t\t\t\tSET assert_value = ?\n\t\t\t\t\t\tWHERE host_id = ?\n\t\t\t\t\t\tAND data_query_id = ?\n\t\t\t\t\t\tAND arg1 = ?',\n\t\t\t\t\t\tarray($output, $host_id, $index_item['data_query_id'], $index_item['arg1'])\n\t\t\t\t\t);\n\n\t\t\t\t\t// spike kill logic\n\t\t\t\t\tif (($assert_fail) &&\n\t\t\t\t\t\t(($index_item['op'] == '<') || ($index_item['arg1'] == '.1.3.6.1.2.1.1.3.0' || $index_item['arg1'] == '.1.3.6.1.6.3.10.2.1.3.0'))) {\n\t\t\t\t\t\t// don't spike kill unless we are certain\n\t\t\t\t\t\tif (!empty($output)) {\n\t\t\t\t\t\t\t$set_spike_kill = true;\n\n\t\t\t\t\t\t\tcacti_log(\"Device[$host_id] NOTICE: Spike Kill in Effect for '\" . $item['hostname'] . \"'.\", $print_data_to_stdout, 'POLLER', debug_level($host_id, POLLER_VERBOSITY_DEBUG));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $host_down;\n}\n\nfunction get_max_column_width() {\n\t$pcol_data = db_fetch_row(\"SHOW COLUMNS FROM poller_output WHERE Field='output'\");\n\t$bcol_data = db_fetch_row(\"SHOW COLUMNS FROM poller_output_boost WHERE Field='output'\");\n\n\tif (isset($pcol_data['Type'])) {\n\t\t$pcol  = $pcol_data['Type'];\n\t\t$data  = explode('(', $pcol);\n\t\t$pmax  = trim($data[1], ')');\n\t}\n\n\tif (cacti_sizeof($bcol_data)) {\n\t\t$bcol  = $bcol_data['Type'];\n\t\t$data  = explode('(', $bcol);\n\t\t$bmax  = trim($data[1], ')');\n\t}\n\n\treturn min($pmax, $bmax);\n}\n\nfunction sig_handler($signo) {\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: Cacti Poller process terminated by user', true, 'POLLER');\n\n\t\t\t// record the process as having completed\n\t\t\trecord_cmdphp_done();\n\t\t\tdb_close();\n\n\t\t\texit;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t// ignore all other signals\n\t}\n}\n\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Legacy Host Data Collector, Version $version, \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/**\n * display_help - displays the usage of the function\n *\n * @return (void)\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL;\n\tprint 'usage: cmd.php --first=ID --last=ID [--poller=ID] [--mibs] [--debug]' . PHP_EOL . PHP_EOL;\n\n\tprint 'Cacti\\'s legacy data collector.  This data collector is called by poller.php' . PHP_EOL;\n\tprint 'every poller interval to gather information from devices.  It is recommended' . PHP_EOL;\n\tprint 'that every system deploy spine instead of cmd.php in production due to the built' . PHP_EOL;\n\tprint 'in scalability limits of cmd.php.' . PHP_EOL . PHP_EOL;\n\n\tprint 'Required' . PHP_EOL;\n\tprint '    --first  - First host id in the range to collect from.' . PHP_EOL;\n\tprint '    --last   - Last host id in the range to collect from.' . PHP_EOL . PHP_EOL;\n\n\tprint 'Optional:' . PHP_EOL;\n\tprint '    --poller - The poller to run as.  Defaults to the system poller.' . PHP_EOL;\n\tprint '    --mode   - The poller mode, either online, offline, or recovery.' . PHP_EOL;\n\tprint '    --mibs   - Refresh all system mibs from hosts supporting snmp.' . PHP_EOL;\n\tprint '    --debug  - Display verbose output during execution.' . PHP_EOL . PHP_EOL;\n}\n"
        },
        {
          "name": "cmd_realtime.php",
          "type": "blob",
          "size": 8.544921875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire_once(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\n\nini_set('max_execution_time', '0');\n\n$start = date('Y-m-d H:i:s'); // for runtime measurement\n\n/* correct for a windows PHP bug. fixed in 5.2.0 */\nif (cacti_count($_SERVER['argv']) < 4) {\n\tprint \"No graph_id, interval, pollerid specified.\\n\\n\";\n\tprint \"Usage: cmd_realtime.php POLLER_ID GRAPH_ID INTERVAL\\n\\n\";\n\n\texit(-1);\n}\n\n$poller_id = $_SERVER['argv'][1];\n$graph_id  = (int)$_SERVER['argv'][2];\n$interval  = (int)$_SERVER['argv'][3];\n\nif ($graph_id <= 0) {\n\tprint \"Invalid graph_id specified.\\n\\n\";\n\n\texit(-1);\n}\n\nif ($interval <= 0) {\n\tprint \"Invalid interval specified.\\n\\n\";\n\n\texit(-1);\n}\n\n/* record the start time */\n$start = microtime(true);\n\n/* initialize the polling items */\n$polling_items = array();\n\n/* get poller_item for graph_id */\n$local_data_ids = db_fetch_assoc_prepared('SELECT DISTINCT dtr.local_data_id, dl.host_id\n\tFROM graph_templates_item AS gti\n\tINNER JOIN data_template_rrd AS dtr\n\tON gti.task_item_id=dtr.id\n\tINNER JOIN data_local AS dl\n\tON dl.id=dtr.local_data_id\n\tWHERE gti.local_graph_id = ?\n\tAND dtr.local_data_id > 0',\n\tarray($graph_id));\n\nif (!cacti_count($local_data_ids)) {\n\tprint \"No local_graph_id found\\n\\n\";\n\n\texit(-1);\n}\n\n$ids      = array();\n$hosts    = array();\n$idbyhost = array();\n\nforeach ($local_data_ids as $row) {\n\tif ($row['local_data_id'] > 0 && $row['host_id'] != '') {\n\t\t$ids[$row['local_data_id']]  = $row['local_data_id'];\n\t\t$hosts[$row['host_id']]      = $row['host_id'];\n\n\t\t$idbyhost[$row['host_id']][] = $row['local_data_id'];\n\t}\n}\n\n$print_data_to_stdout = true;\n\nif (cacti_sizeof($idbyhost)) {\n\t$polling_items = db_fetch_assoc('SELECT *\n\t\tFROM poller_item\n\t\tWHERE local_data_id IN (' . implode(',', $ids) . ')\n\t\tAND host_id IN (' . implode(',', $hosts) . ')\n\t\tORDER BY host_id');\n\n\t$script_server_calls = db_fetch_cell('SELECT count(*)\n\t\tFROM poller_item\n\t\tWHERE action=2\n\t\tAND host_id IN (' . implode(',', $hosts) . ')\n\t\tAND local_data_id IN (' . implode(',', $ids) . ')');\n\n\t/* startup Cacti php polling server and include the include file for script processing */\n\tif ($script_server_calls > 0) {\n\t\t$cactides = array(\n\t\t\t0 => array('pipe', 'r'), // stdin is a pipe that the child will read from\n\t\t\t1 => array('pipe', 'w'), // stdout is a pipe that the child will write to\n\t\t\t2 => array('pipe', 'w')  // stderr is a pipe to write to\n\t\t);\n\n\t\tif (function_exists('proc_open')) {\n\t\t\t$cactiphp            = proc_open(read_config_option('path_php_binary') . ' -q ' . CACTI_PATH_BASE . '/script_server.php realtime ' . $poller_id, $cactides, $pipes);\n\t\t\t$output              = fgets($pipes[1], 1024);\n\t\t\t$using_proc_function = true;\n\t\t} else {\n\t\t\t$using_proc_function = false;\n\t\t}\n\t} else {\n\t\t$using_proc_function = false;\n\t}\n\n\t/* all polled items need the same insert time */\n\t$host_update_time = date('Y-m-d H:i:s');\n\n\tforeach ($idbyhost as $host_id => $local_data_ids) {\n\t\t$col_poller_id = db_fetch_cell_prepared('SELECT poller_id\n\t\t\tFROM host\n\t\t\tWHERE id = ?', array($host_id));\n\n\t\t$local_data_ids = array(\n\t\t\t'local_data_ids' => $local_data_ids\n\t\t);\n\n\t\tif ($col_poller_id > 1) {\n\t\t\t$hostname = db_fetch_cell_prepared('SELECT hostname\n\t\t\t\tFROM poller\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($col_poller_id));\n\n\t\t\t$url = CACTI_PATH_URL . '/remote_agent.php' .\n\t\t\t\t'?action=polldata' .\n\t\t\t\t'&host_id=' . $host_id .\n\t\t\t\t'&' . http_build_query($local_data_ids) .\n\t\t\t\t'&poller_id=' . $poller_id;\n\n\t\t\t$output = json_decode(call_remote_data_collector($col_poller_id, $url, 'REALTIME'), true);\n\n\t\t\tif (cacti_sizeof($output)) {\n\t\t\t\t$sql = '';\n\n\t\t\t\tforeach ($output as $item) {\n\t\t\t\t\t$sql .= ($sql != '' ? ', ':'')      . '(' .\n\t\t\t\t\t\tdb_qstr($item['local_data_id']) . ', ' .\n\t\t\t\t\t\tdb_qstr($item['rrd_name'])      . ', ' .\n\t\t\t\t\t\tdb_qstr($host_update_time)      . ', ' .\n\t\t\t\t\t\tdb_qstr($poller_id)             . ', ' .\n\t\t\t\t\t\tdb_qstr($item['value'])         . ')';\n\t\t\t\t}\n\n\t\t\t\tdb_execute(\"INSERT INTO poller_output_realtime\n\t\t\t\t\t(local_data_id, rrd_name, time, poller_id, output)\n\t\t\t\t\tVALUES $sql\");\n\t\t\t}\n\t\t} else {\n\t\t\t$poller_items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id IN(' . implode(',', $local_data_ids['local_data_ids']) . ')',\n\t\t\t\tarray($host_id));\n\n\t\t\tif (cacti_sizeof($poller_items)) {\n\t\t\t\tforeach ($poller_items as $item) {\n\t\t\t\t\tswitch ($item['action']) {\n\t\t\t\t\t\tcase POLLER_ACTION_SNMP: /* snmp */\n\t\t\t\t\t\t\tif (($item['snmp_version'] == 0) || (($item['snmp_community'] == '') && ($item['snmp_version'] != 3))) {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$host = db_fetch_row_prepared('SELECT ping_retries, max_oids\n\t\t\t\t\t\t\t\tFROM host\n\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\tarray($host_id));\n\n\t\t\t\t\t\t\t\tif (!cacti_sizeof($host)) {\n\t\t\t\t\t\t\t\t\t$host['ping_retries'] = 1;\n\t\t\t\t\t\t\t\t\t$host['max_oids']     = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$session = cacti_snmp_session($item['hostname'], $item['snmp_community'], $item['snmp_version'],\n\t\t\t\t\t\t\t\t\t$item['snmp_username'], $item['snmp_password'], $item['snmp_auth_protocol'], $item['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t\t\t$item['snmp_priv_protocol'], $item['snmp_context'], $item['snmp_engine_id'], $item['snmp_port'],\n\t\t\t\t\t\t\t\t\t$item['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t\t\tif ($session === false) {\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $item['arg1']);\n\t\t\t\t\t\t\t\t\t$session->close();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase POLLER_ACTION_SCRIPT: /* script (popen) */\n\t\t\t\t\t\t\t$output = trim(exec_poll($item['arg1']), 2);\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP: /* script (php script server) */\n\t\t\t\t\t\t\tif ($using_proc_function == true) {\n\t\t\t\t\t\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($output)) {\n\t\t\t\t\t\tdb_execute_prepared('INSERT INTO poller_output_realtime\n\t\t\t\t\t\t\t(local_data_id, rrd_name, time, poller_id, output)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t(?, ?, ?, ?, ?)',\n\t\t\t\t\t\t\tarray($item['local_data_id'], $item['rrd_name'], $host_update_time, $poller_id, $output));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (($using_proc_function == true) && ($script_server_calls > 0)) {\n\t\t/* close php server process */\n\t\tfwrite($pipes[0], \"quit\\r\\n\");\n\t\tfclose($pipes[0]);\n\t\tfclose($pipes[1]);\n\t\tfclose($pipes[2]);\n\n\t\t$return_value = proc_close($cactiphp);\n\t}\n}\n"
        },
        {
          "name": "color.php",
          "type": "blob",
          "size": 18.1162109375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$actions = array(\n\t'1' => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'remove':\n\t\tcolor_remove();\n\n\t\theader('Location: color.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tcolor_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tcolor_export();\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\n\t\tcolor_import();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tcolor();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_color')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']        = get_nfilter_request_var('id');\n\n\t\tif (get_nfilter_request_var('read_only') == '') {\n\t\t\t$save['name']      = get_filter_request_var('name', FILTER_SANITIZE_SPECIAL_CHARS);\n\t\t\t$save['hex']       = form_input_validate(get_nfilter_request_var('hex'),  'hex',  '^[a-fA-F0-9]+$' , false, 3);\n\t\t} else {\n\t\t\t$save['name']      = get_filter_request_var('hidden_name', FILTER_SANITIZE_SPECIAL_CHARS);\n\t\t\t$save['read_only'] = 'on';\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$color_id = sql_save($save, 'colors');\n\n\t\t\tif ($color_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: color.php?action=edit&id=' . (empty($color_id) ? get_nfilter_request_var('id') : $color_id));\n\t\t} else {\n\t\t\theader('Location: color.php');\n\t\t}\n\t} elseif (isset_request_var('save_component_import')) {\n\t\tif (isset($_FILES['import_file']['tmp_name'])) {\n\t\t\tif (($_FILES['import_file']['tmp_name'] != 'none') && ($_FILES['import_file']['tmp_name'] != '')) {\n\t\t\t\t$csv_data   = file($_FILES['import_file']['tmp_name']);\n\t\t\t\t$debug_data = color_import_processor($csv_data);\n\n\t\t\t\tif (cacti_sizeof($debug_data)) {\n\t\t\t\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t\t\t\t}\n\n\t\t\t\theader('Location: color.php?action=import');\n\t\t\t}\n\t\t} else {\n\t\t\traise_message(35);\n\n\t\t\theader('Location: color.php?action=import');\n\t\t}\n\t}\n\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM colors WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: color.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$color = db_fetch_row_prepared('SELECT name, hex FROM colors WHERE id = ?', array($matches[1]));\n\n\t\t\t\t$ilist .= '<li>' . ($color['name'] != '' ? html_escape($color['name']): __('Unnamed Color')) . ' (<span style=\"background-color:#' . $color['hex'] . '\">' . $color['hex'] . '</span>)</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'color.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Color.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Colors.'),\n\t\t\t\t\t'scont'    => __('Delete Color'),\n\t\t\t\t\t'pcont'    => __('Delete Colors')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction color_import_processor(&$colors) {\n\t$i            = 0;\n\t$hexcol       = 0;\n\t$return_array = array();\n\n\tif (cacti_sizeof($colors)) {\n\t\tforeach ($colors as $color_line) {\n\t\t\t/* parse line */\n\t\t\t$line_array     = explode(',', $color_line);\n\t\t\t$insert_columns = array();\n\t\t\t$save_order    = '(';\n\t\t\t$update_suffix = '';\n\n\t\t\t/* header row */\n\t\t\tif ($i == 0) {\n\t\t\t\t$j             = 0;\n\t\t\t\t$first_column  = true;\n\t\t\t\t$required      = 0;\n\n\t\t\t\tif (cacti_sizeof($line_array)) {\n\t\t\t\t\tforeach ($line_array as $line_item) {\n\t\t\t\t\t\t$line_item = trim(str_replace(\"'\", '', $line_item));\n\t\t\t\t\t\t$line_item = trim(str_replace('\"', '', $line_item));\n\n\t\t\t\t\t\tswitch ($line_item) {\n\t\t\t\t\t\t\tcase 'hex':\n\t\t\t\t\t\t\t\t$hexcol = $j;\n\t\t\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t\t\tif (!$first_column) {\n\t\t\t\t\t\t\t\t\t$save_order .= ', ';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$save_order .= $line_item;\n\n\t\t\t\t\t\t\t\t$insert_columns[] = $j;\n\t\t\t\t\t\t\t\t$first_column     = false;\n\n\t\t\t\t\t\t\t\tif ($update_suffix != '') {\n\t\t\t\t\t\t\t\t\t$update_suffix .= \", $line_item=VALUES($line_item)\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$update_suffix .= \" ON DUPLICATE KEY UPDATE $line_item=VALUES($line_item)\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$required++;\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t/* ignore unknown columns */\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$j++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$save_order .= ')';\n\n\t\t\t\tif ($required >= 2) {\n\t\t\t\t\tarray_push($return_array, '<b>HEADER LINE PROCESSED OK</b>:  <br>Columns found where: ' . $save_order . '<br>');\n\t\t\t\t} else {\n\t\t\t\t\tarray_push($return_array, '<b>HEADER LINE PROCESSING ERROR</b>: Missing required field <br>Columns found where:' . $save_order . '<br>');\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$save_value   = '(';\n\t\t\t\t$j            = 0;\n\t\t\t\t$first_column = true;\n\t\t\t\t$sql_where    = '';\n\n\t\t\t\tif (cacti_sizeof($line_array)) {\n\t\t\t\t\tforeach ($line_array as $line_item) {\n\t\t\t\t\t\tif (in_array($j, $insert_columns, true)) {\n\t\t\t\t\t\t\t$line_item = trim(str_replace(\"'\", '', $line_item));\n\t\t\t\t\t\t\t$line_item = trim(str_replace('\"', '', $line_item));\n\n\t\t\t\t\t\t\tif (!$first_column) {\n\t\t\t\t\t\t\t\t$save_value .= ',';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$first_column = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$save_value .= \"'\" . $line_item . \"'\";\n\n\t\t\t\t\t\t\tif ($j == $hexcol) {\n\t\t\t\t\t\t\t\t$sql_where = \"WHERE hex='$line_item'\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$j++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$save_value .= ')';\n\n\t\t\t\tif ($j > 0) {\n\t\t\t\t\tif (isset_request_var('allow_update')) {\n\t\t\t\t\t\t$sql_execute = 'INSERT INTO colors ' . $save_order .\n\t\t\t\t\t\t\t' VALUES ' . $save_value . $update_suffix;\n\n\t\t\t\t\t\tif (db_execute($sql_execute)) {\n\t\t\t\t\t\t\tarray_push($return_array,\"INSERT SUCCEEDED: $save_value\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarray_push($return_array,\"INSERT FAILED: $save_value\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* perform check to see if the row exists */\n\t\t\t\t\t\t$existing_row = db_fetch_row(\"SELECT * FROM colors $sql_where\");\n\n\t\t\t\t\t\tif (cacti_sizeof($existing_row)) {\n\t\t\t\t\t\t\tarray_push($return_array,\"<strong>INSERT SKIPPED, EXISTING:</strong> $save_value\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$sql_execute = 'INSERT INTO colors ' . $save_order .\n\t\t\t\t\t\t\t\t' VALUES ' . $save_value;\n\n\t\t\t\t\t\t\tif (db_execute($sql_execute)) {\n\t\t\t\t\t\t\t\tarray_push($return_array,\"INSERT SUCCEEDED: $save_value\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tarray_push($return_array,\"INSERT FAILED: $save_value\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\treturn $return_array;\n}\n\nfunction color_import() {\n\tform_start('color.php?action=import', '', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box('Import Results', '100%', '', '3', 'center', '');\n\n\t\tprint \"<tr class='even'><td>\n\t\t\t<p class='textArea'>\" . __('Cacti has imported the following items:') . \"</p>\n\t\t</td></tr>\\n\";\n\n\t\tif (cacti_sizeof($_SESSION['import_debug_info'])) {\n\t\t\tforeach ($_SESSION['import_debug_info'] as $import_result) {\n\t\t\t\tprint \"<tr class='even'><td>\" . $import_result . \"</td></tr>\\n\";\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Colors'), '100%', '', '3', 'center', '');\n\n\tform_alternate_row();?>\n\t\t<td width='50%'><font class='textEditTitle'><?php print __('Import Colors from Local File'); ?></font><br>\n\t\t\t<?php print __('Please specify the location of the CSV file containing your Color information.');?>\n\t\t</td>\n\t\t<td class='left'>\n\t\t\t<div>\n\t\t\t\t<label class='import_label' for='import_file'><?php print __('Select a File'); ?></label>\n\t\t\t\t<input class='ui-state-default ui-corner-all import_button' type='file' id='import_file' name='import_file'>\n\t\t\t\t<span class='import_text'></span>\n\t\t\t</div>\n\t\t</td>\n\t</tr><?php\n\tform_alternate_row();?>\n\t\t<td width='50%'><font class='textEditTitle'><?php print __('Overwrite Existing Data?');?></font><br>\n\t\t\t<?php print __('Should the import process be allowed to overwrite existing data?  Please note, this does not mean delete old rows, only update duplicate rows.');?>\n\t\t</td>\n\t\t<td class='left'>\n\t\t\t<input type='checkbox' name='allow_update' id='allow_update'><?php print __('Allow Existing Rows to be Updated?');?>\n\t\t</td><?php\n\n\thtml_end_box(false);\n\n\thtml_start_box(__('Required File Format Notes'), '100%', '', '3', 'center', '');\n\n\tform_alternate_row();?>\n\t\t<td><strong><?php print __('The file must contain a header row with the following column headings.');?></strong>\n\t\t\t<br><br>\n\t\t\t\t<?php print __('<strong>name</strong> - The Color Name');?><br>\n\t\t\t\t<?php print __('<strong>hex</strong> - The Hex Value');?><br>\n\t\t\t<br>\n\t\t</td>\n\t</tr><?php\n\n\tform_hidden_box('save_component_import','1','');\n\n\thtml_end_box();\n\n\tform_save_button('color.php', 'import');\n}\n\nfunction color_edit() {\n\tglobal $fields_color_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$color        = db_fetch_row_prepared('SELECT * FROM colors WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('Colors [edit: %s]', $color['hex']);\n\t} else {\n\t\t$header_label = __('Colors [new]');\n\t}\n\n\tform_start('color.php', 'color');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_color_edit, (isset($color) ? $color : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('color.php');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\tcheckReadonly();\n\n\t\t$('#hex').colorpicker().css({'width':'60px'});\n\t\t$('#read_only').click(function() {\n\t\t\tcheckReadonly();\n\t\t});\n\n\t\t$('#name').keyup(function() {\n\t\t\t$('#hidden_name').val($(this).val());\n\t\t});\n\n\t\tfunction checkReadonly() {\n\t\t\tif ($('#read_only').is(':checked') || $('#read_only').val() == 'on') {\n\t\t\t\t$('#name').prop('disabled', true);\n\t\t\t\t$('#hex').prop('disabled', true);\n\t\t\t} else {\n\t\t\t\t$('#name').prop('disabled', false);\n\t\t\t\t$('#hex').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t});\n\t</script>\n\t<?php\n}\n\nfunction process_sanitize_render_filter($render = false) {\n\t$pageFilter = new CactiTableFilter(__('Colors'), 'color.php', 'form_color', 'sess_color', 'color.php?action=edit');\n\n\t$pageFilter->rows_label = __('Colors');\n\t$pageFilter->has_graphs = true;\n\t$pageFilter->has_import = true;\n\t$pageFilter->has_export = true;\n\t$pageFilter->has_named  = true;\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction color() {\n\tglobal $actions, $item_rows;\n\n\tprocess_sanitize_render_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\t\tOR hex LIKE ' . db_qstr('%' .  get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('named') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . \" read_only='on'\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM colors\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$colors = db_fetch_assoc(\"SELECT *\n\t\tFROM colors\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('color.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Colors'), 'page', 'main');\n\n\tform_start('color.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'hex' => array(\n\t\t\t'display' => __('Hex'),\n\t\t\t'align' => 'left',\n\t\t\t'sort' => 'DESC',\n\t\t\t'tip' => __('The Hex Value for this Color.')\n\t\t),\n\t\t'name' => array(\n\t\t\t'display' => __('Color Name'),\n\t\t\t'align' => 'left',\n\t\t\t'sort' => 'ASC',\n\t\t\t'tip' => __('The name of this Color definition.')\n\t\t),\n\t\t'read_only' => array(\n\t\t\t'display' => __('Named Color'),\n\t\t\t'align' => 'left',\n\t\t\t'sort' => 'ASC',\n\t\t\t'tip' => __('Is this color a named color which are read only.')\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Color'),\n\t\t\t'align' => 'center',\n\t\t\t'sort' => 'DESC',\n\t\t\t'tip' => __('The Color as shown on the screen.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align' => 'right',\n\t\t\t'sort' => '',\n\t\t\t'tip' => __('Colors in use cannot be Deleted.  In use is defined as being referenced either by a Graph or a Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align' => 'right',\n\t\t\t'sort' => 'DESC',\n\t\t\t'tip' => __('The number of Graph using this Color.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align' => 'right',\n\t\t\t'sort' => 'DESC',\n\t\t\t'tip' => __('The number of Graph Templates using this Color.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($colors)) {\n\t\tforeach ($colors as $color) {\n\t\t\tif ($color['graphs'] == 0 && $color['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tif ($color['name'] == '') {\n\t\t\t\t$color['name'] = 'Unnamed #'. $color['hex'];\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $color['id'], false, $disabled);\n\n\t\t\t$url = 'color.php?action=edit&id=' . $color['id'];\n\n\t\t\tform_selectable_cell(filter_value($color['hex'], '', $url), $color['id']);\n\t\t\tform_selectable_cell(filter_value($color['name'], get_request_var('filter')), $color['id']);\n\t\t\tform_selectable_cell($color['read_only'] == 'on' ? __('Yes'):__('No'), $color['id']);\n\t\t\tform_selectable_cell('', $color['id'], '', 'text-align:right;background-color:#' . $color['hex'] . ';min-width:30%');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $color['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($color['graphs'], '-1'), $color['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($color['templates'], '-1'), $color['id'], '', 'right');\n\t\t\tform_checkbox_cell($color['name'], $color['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='7'><em>\" . __('No Colors Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($colors)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions, 1);\n\n\tform_end();\n}\n\nfunction color_export() {\n\tprocess_sanitize_render_filter(false);\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\t\tOR hex LIKE ' . db_qstr('%' .  get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('named') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . \" read_only='on'\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0 OR templates>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$colors = db_fetch_assoc(\"SELECT *,\n        SUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs,\n        SUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates\n        FROM (\n\t\t\tSELECT c.*, local_graph_id\n\t\t\tFROM colors AS c\n\t\t\tLEFT JOIN (\n\t\t\t\tSELECT color_id, graph_template_id, local_graph_id\n\t\t\t\tFROM graph_templates_item\n\t\t\t\tWHERE color_id>0\n\t\t\t) AS gti\n\t\t\tON c.id=gti.color_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\");\n\n\tif (cacti_sizeof($colors)) {\n\t\theader('Content-type: application/csv');\n\t\theader('Content-Disposition: attachment; filename=colors.csv');\n\n\t\tprint '\"name\",\"hex\"' . \"\\n\";\n\n\t\tforeach ($colors as $color) {\n\t\t\tprint '\"' . $color['name'] . '\",\"' . $color['hex'] . '\"' . \"\\n\";\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "color_templates.php",
          "type": "blob",
          "size": 29.5673828125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Sync Aggregates')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\t\tcolor_template_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tcolor_templates_item_dnd();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tcolor_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('color_template_id');\n\n\t\tcolor_item_remove();\n\n\t\theader('Location: color_templates.php?action=template_edit&color_template_id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('color_template_id');\n\n\t\tcolor_item_movedown();\n\n\t\theader('Location: color_templates.php?action=template_edit&color_template_id=' . get_request_var('color_template_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('color_template_id');\n\n\t\tcolor_item_moveup();\n\n\t\theader('Location: color_templates.php?action=template_edit&color_template_id=' . get_request_var('color_template_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tcolor_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'item':\n\t\ttop_header();\n\t\tcolor_item();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tcolor_template();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/** draw_color_template_items_list \t- draws a nicely formatted list of color items for display\n *   \t\t\t\t\t\t\t\t  on an edit form\n * @param array $item_list \t\t\t- an array representing the list of color items. this array should\n *   \t\t\t\t\t\t\t\t  come directly from the output of db_fetch_assoc()\n * @param string $filename \t\t\t- the filename to use when referencing any external url\n * @param string $url_data \t\t\t- any extra GET url information to pass on when referencing any\n *   \t\t\t\t\t\t\t\t  external url\n * @param bool $disable_controls \t- whether to hide all edit/delete functionality on this form\n */\nfunction draw_color_template_items_list($item_list, $filename, $url_data, $disable_controls) {\n\tglobal $config;\n\tglobal $struct_color_template_item;\n\n\t$display_text = array(\n\t\tarray('display' => __('Color Item'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Color'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Hex'), 'align' => 'left', 'nohide' => true),\n\t);\n\n\thtml_header($display_text, 2);\n\n\t$i           = 1;\n\t$total_items = cacti_sizeof($item_list);\n\n\tif (cacti_sizeof($item_list)) {\n\t\tforeach ($item_list as $item) {\n\t\t\t/* alternating row color */\n\t\t\tform_alternate_row('line' . $item['color_template_item_id'], true);\n\n\t\t\tprint '<td>';\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<a class='linkEditMain' href='\" . html_escape($filename . '?action=item_edit&color_template_item_id=' . $item['color_template_item_id'] . \"&$url_data\") . \"'>\";\n\t\t\t}\n\n\t\t\tprint __('Item # %d', $i);\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint '</a>';\n\t\t\t}\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tprint \"<td style='\" . ((isset($item['hex'])) ? 'background-color:#' . $item['hex'] . \";'\" : '') . \"></td>\\n\";\n\n\t\t\tprint '<td>' . $item['hex'] . \"</td>\\n\";\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<td class='right nowrap'>\";\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\tprint '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('color_templates.php?action=item_movedown&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\tprint '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('color_templates.php?action=item_moveup&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint \"<a class='delete deleteMarker ti ti-x' id='\" .  $item['color_template_id'] . '_' . $item['color_template_item_id'] . \"' title='\" . __esc('Delete') . \"'></a>\";\n\n\t\t\t\tprint \"</td>\\n\";\n\t\t\t}\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='7'><em>\" . __('No Items') . '</em></td></tr>';\n\t}\n}\n\n/**\n * form_save\tthe save function\n */\nfunction form_save() {\n\tif (isset_request_var('save_component_color')) {\n\t\tif (isset_request_var('color_template_id')) {\n\t\t\t$save1['color_template_id'] = get_nfilter_request_var('color_template_id');\n\t\t} else {\n\t\t\t$save1['color_template_id'] = 0;\n\t\t}\n\n\t\t$save1['name'] = form_input_validate(get_filter_request_var('name', FILTER_SANITIZE_SPECIAL_CHARS), 'name', '', false, 3);\n\n\t\tcacti_log('Saved ID: ' . $save1['color_template_id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\tif (!is_error_message()) {\n\t\t\t$color_template_id = sql_save($save1, 'color_templates', 'color_template_id');\n\n\t\t\tcacti_log('Saved ID: ' . $color_template_id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tif ($color_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: color_templates.php?action=template_edit&color_template_id=' . (empty($color_template_id) ? get_nfilter_request_var('color_template_id') : $color_template_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('color_template_id');\n\t\tget_filter_request_var('color_template_item_id');\n\t\tget_filter_request_var('sequence');\n\t\t/* ==================================================== */\n\n\t\t$items[0] = array();\n\t\t$sequence = get_nfilter_request_var('sequence');\n\n\t\tforeach ($items as $item) {\n\t\t\t/* generate a new sequence if needed */\n\t\t\tif (empty($sequence)) {\n\t\t\t\t$sequence = get_next_sequence($sequence, 'sequence', 'color_template_items', 'color_template_id=' . get_nfilter_request_var('color_template_id'), 'color_template_id');\n\t\t\t}\n\n\t\t\t$save['color_template_item_id'] = html_escape_request_var('color_template_item_id');\n\t\t\t$save['color_template_id']      = html_escape_request_var('color_template_id');\n\t\t\t$save['color_id']               = form_input_validate((isset($item['color_id']) ? $item['color_id'] : get_nfilter_request_var('color_id')), 'color_id', '', true, 3);\n\t\t\t$save['sequence']               = $sequence;\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$color_template_item_id = sql_save($save, 'color_template_items', 'color_template_item_id');\n\n\t\t\t\tif ($color_template_item_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sequence = 0;\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: color_templates.php?action=item_edit&color_template_item_id=' . (empty($color_template_item_id) ? get_nfilter_request_var('color_template_item_id') : $color_template_item_id) . '&color_template_id=' . get_nfilter_request_var('color_template_id'));\n\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: color_templates.php?action=template_edit&color_template_id=' . get_nfilter_request_var('color_template_id'));\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\n/**\n * form_actions\tthe action function\n */\nfunction form_actions() {\n\tglobal $actions, $config;\n\tinclude_once(CACTI_PATH_LIBRARY . '/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM color_templates WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t\tdb_execute('DELETE FROM color_template_items WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_color_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // sync templates\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tsync_color_templates($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: color_templates.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM color_templates\n\t\t\t\t\tWHERE color_template_id = ?',\n\t\t\t\t\tarray($matches[1]));\n\n\t\t\t\t$ilist .= '<li>' . html_escape($name) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'color_templates.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Color Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Color Templates.'),\n\t\t\t\t\t'scont'    => __('Delete Color Template'),\n\t\t\t\t\t'pcont'    => __('Delete Color Templates')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Color Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Color Templates.'),\n\t\t\t\t\t'scont'    => __('Duplicate Color Template'),\n\t\t\t\t\t'pcont'    => __('Duplicate Color Templates'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<template_title> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Synchronize the following Color Template to its Aggregates.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Synchronize the following Color Templates to its Aggregates.'),\n\t\t\t\t\t'scont'    => __('Synchronize Color Template'),\n\t\t\t\t\t'pcont'    => __('Synchronize Color Templates')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction color_templates_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\tif (isset_request_var('color_item') && is_array(get_nfilter_request_var('color_item'))) {\n\t\t$color_items = get_nfilter_request_var('color_item');\n\n\t\tif (cacti_sizeof($color_items)) {\n\t\t\t$sequence = 1;\n\n\t\t\tforeach ($color_items as $option_id) {\n\t\t\t\t$option = str_replace('line', '', $option_id);\n\n\t\t\t\tdb_execute_prepared('UPDATE color_template_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE color_template_item_id = ?',\n\t\t\t\t\tarray($sequence, $option));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: color_templates.php?action=template_edit&color_template_id=' . get_request_var('id'));\n\n\texit;\n}\n\n/**\n * color_item_movedown move item down\n */\nfunction color_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_item_id');\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\t$current_sequence = db_fetch_row_prepared('SELECT color_template_item_id, sequence\n\t\tFROM color_template_items\n\t\tWHERE color_template_item_id = ?',\n\t\tarray(get_request_var('color_template_item_id')));\n\n\tcacti_log('movedown Id: ' . $current_sequence['color_template_item_id'] . ' Seq:' . $current_sequence['sequence'],\n\t\tfalse, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t$next_sequence = db_fetch_row_prepared('SELECT color_template_item_id, sequence\n\t\tFROM color_template_items\n\t\tWHERE sequence > ?\n\t\tAND color_template_id = ?\n\t\tORDER BY sequence ASC limit 1',\n\t\tarray($current_sequence['sequence'], get_request_var('color_template_id')));\n\n\tcacti_log('movedown Id: ' . $next_sequence['color_template_item_id'] . ' Seq:' . $next_sequence['sequence'],\n\t\tfalse, POLLER_VERBOSITY_DEBUG);\n\n\tdb_execute_prepared('UPDATE color_template_items\n\t\tSET sequence = ?\n\t\tWHERE color_template_id = ?\n\t\tAND color_template_item_id = ?',\n\t\tarray($next_sequence['sequence'], get_request_var('color_template_id'), $current_sequence['color_template_item_id']));\n\n\tdb_execute_prepared('UPDATE color_template_items\n\t\tSET sequence = ?\n\t\tWHERE color_template_id = ?\n\t\tAND color_template_item_id = ?',\n\t\tarray($current_sequence['sequence'], get_request_var('color_template_id'), $next_sequence['color_template_item_id']));\n}\n\n/**\n * color_item_moveup move item up\n */\nfunction color_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_item_id');\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\t$current_sequence = db_fetch_row_prepared('SELECT color_template_item_id, sequence\n\t\tFROM color_template_items\n\t\tWHERE color_template_item_id = ?',\n\t\tarray(get_request_var('color_template_item_id')));\n\n\tcacti_log('moveup Id: ' . $current_sequence['color_template_item_id'] . ' Seq:' . $current_sequence['sequence'],\n\t\tfalse, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t$previous_sequence = db_fetch_row_prepared('SELECT color_template_item_id, sequence\n\t\tFROM color_template_items\n\t\tWHERE sequence < ?\n\t\tAND color_template_id = ?\n\t\tORDER BY sequence DESC limit 1',\n\t\tarray($current_sequence['sequence'], get_request_var('color_template_id')));\n\n\tcacti_log('moveup Id: ' . $previous_sequence['color_template_item_id'] . ' Seq:' . $previous_sequence['sequence'],\n\t\tfalse, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\tdb_execute_prepared('UPDATE color_template_items\n\t\tSET sequence = ?\n\t\tWHERE color_template_id = ?\n\t\tAND color_template_item_id = ?',\n\t\tarray($previous_sequence['sequence'], get_request_var('color_template_id'), $current_sequence['color_template_item_id']));\n\n\tdb_execute_prepared('UPDATE color_template_items\n\t\tSET sequence = ?\n\t\tWHERE color_template_id = ?\n\t\tAND color_template_item_id = ?',\n\t\tarray($current_sequence['sequence'], get_request_var('color_template_id'), $previous_sequence['color_template_item_id']));\n}\n\nfunction color_item_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('color_id');\n\t/* ==================================================== */\n\n\tform_start('color_templates.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$template   = db_fetch_row_prepared('SELECT *\n\t\tFROM color_templates\n\t\tWHERE color_template_id = ?',\n\t\tarray(get_request_var('id')));\n\n\t$color_item = db_fetch_row_prepared('SELECT *\n\t\tFROM color_template_items\n\t\tWHERE color_template_item_id = ?',\n\t\tarray(get_request_var('color_id')));\n\n\t$color_hex  = db_fetch_cell_prepared('SELECT hex\n\t\tFROM colors\n\t\tWHERE id = ?',\n\t\tarray($color_item['color_id']));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Color Template Color.'); ?></p>\n\t\t\t<p><?php print __('Color Name:');?> '<?php print html_escape($template['name']);?>'<br>\n\t\t\t<?php print __('Color Hex:');?><strong><?php print $color_hex;?></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Color Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'color_templates.php?action=item_remove',\n\t\t\t\tredirect: 'color_templates.php?action=template_edit&color_template_id=<?php print get_request_var('id');?>'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tcolor_id: <?php print get_request_var('color_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\n/**\n * color_item_remove remove item\n */\nfunction color_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('color_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM color_template_items\n\t\tWHERE color_template_item_id = ?',\n\t\tarray(get_request_var('color_id')));\n}\n\n/**\n * color_item_edit edit item\n */\nfunction color_item_edit() {\n\tglobal $struct_color_template_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_item_id');\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\t$template = db_fetch_row_prepared('SELECT *\n\t\tFROM color_templates\n\t\tWHERE color_template_id = ?',\n\t\tarray(get_request_var('color_template_id')));\n\n\tif (isset_request_var('color_template_item_id') && (get_request_var('color_template_item_id') > 0)) {\n\t\t$template_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM color_template_items\n\t\t\tWHERE color_template_item_id = ?',\n\t\t\tarray(get_request_var('color_template_item_id')));\n\n\t\t$header_label = __esc('Color Template Items [edit Report Item: %s]', $template['name']);\n\t} else {\n\t\t$template_item = array();\n\t\t$header_label  = __esc('Color Template Items [new Report Item: %s]', $template['name']);\n\t}\n\n\tform_start('color_templates.php', 'aggregate_color_item_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($struct_color_template_item, (isset($template_item) ? $template_item : array()))\n\t));\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('color_template_item_id', (array_key_exists('color_template_item_id', $template_item) ? $template_item['color_template_item_id'] : '0'), '');\n\tform_hidden_box('color_template_id', get_request_var('color_template_id'), '0');\n\tform_hidden_box('sequence', (array_key_exists('sequence', $template_item) ? $template_item['sequence'] : '0'), '');\n\tform_hidden_box('save_component_item', '1', '');\n\n\tform_save_button('color_templates.php?action=template_edit&color_template_id=' . get_request_var('color_template_id'), '', 'color_template_item_id');\n}\n\n/**\n * color_item show all color template items\n */\nfunction color_item() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('color_template_id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Color Template Items [new]');\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tcti.color_template_id, cti.color_template_item_id, cti.sequence, colors.hex\n\t\t\tFROM color_template_items AS cti\n\t\t\tLEFT JOIN colors\n\t\t\tON cti.color_id=colors.id\n\t\t\tWHERE cti.color_template_id = ?\n\t\t\tORDER BY cti.sequence ASC',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM color_templates\n\t\t\tWHERE color_template_id = ?',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$header_label = __esc('Color Template Items [edit: %s]', $name);\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'color_templates.php?action=item_edit&color_template_id=' . html_escape_request_var('color_template_id'));\n\n\tdraw_color_template_items_list($template_item_list, 'color_templates.php', 'color_template_id=' . html_escape_request_var('color_template_id'), false);\n\n\thtml_end_box();\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#color_templates_template_edit2_child').attr('id', 'color_item');\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#color_item').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'color_templates.php?action=ajax_dnd&id=<?php isset_request_var('color_template_id') ? print get_request_var('color_template_id') : print 0;?>&'+$.tableDnD.serialize()})\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'color_templates.php?action=item_remove_confirm&id='+id[0]+'&color_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Color Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\t</script>\n\t<?php\n}\n\n/**\n * color_template_edit\tedit the color template\n */\nfunction color_template_edit() {\n\tglobal $config, $image_types, $fields_color_template_template_edit, $struct_aggregate;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('color_template_id')) {\n\t\t$template     = db_fetch_row_prepared('SELECT * FROM color_templates WHERE color_template_id = ?', array(get_request_var('color_template_id')));\n\t\t$header_label = __esc('Color Template [edit: %s]', $template['name']);\n\t} else {\n\t\t$header_label = __('Color Template [new]');\n\t}\n\n\tform_start('color_templates.php', 'color_template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_color_template_template_edit, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('color_template_id', (isset($template['color_template_id']) ? $template['color_template_id'] : '0'), '');\n\tform_hidden_box('save_component_color', '1', '');\n\n\t/* color item list goes here */\n\tif (!isempty_request_var('color_template_id')) {\n\t\tcolor_item();\n\t}\n\n\tform_save_button('color_templates.php', 'return', 'color_template_id');\n}\n\nfunction sync_color_templates($color_template) {\n\tglobal $config;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/api_aggregate.php');\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM color_templates\n\t\tWHERE color_template_id = ?',\n\t\tarray($color_template));\n\n\t$aggregate_templates = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT DISTINCT aggregate_template_id\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tWHERE color_template = ?',\n\t\t\tarray($color_template)),\n\t\t'aggregate_template_id', 'aggregate_template_id'\n\t);\n\n\t$found     = false;\n\t$templates = 0;\n\t$graphs    = 0;\n\n\tif (cacti_sizeof($aggregate_templates)) {\n\t\t$found     = true;\n\t\t$templates = cacti_sizeof($aggregate_templates);\n\n\t\tforeach ($aggregate_templates as $id) {\n\t\t\tpush_out_aggregates($id);\n\t\t}\n\t}\n\n\t$aggregate_graphs = db_fetch_assoc_prepared('SELECT DISTINCT ag.aggregate_template_id, ag.local_graph_id\n\t\tFROM aggregate_graphs_graph_item AS agi\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.id=agi.aggregate_graph_id\n\t\tWHERE (ag.aggregate_template_id > 0 AND ag.template_propogation = \"\")\n\t\tOR ag.aggregate_template_id = 0\n\t\tAND agi.color_template = ?',\n\t\tarray($color_template));\n\n\tif (cacti_sizeof($aggregate_graphs)) {\n\t\t$found  = true;\n\t\t$graphs = cacti_sizeof($aggregate_graphs);\n\n\t\tforeach ($aggregate_templates as $id) {\n\t\t\tpush_out_aggregates($id['aggregate_template_id'], $id['local_graph_id']);\n\t\t}\n\t}\n\n\tif ($found) {\n\t\traise_message('color_template_sync', __('Color Template \\'%s\\' had %d Aggregate Templates pushed out and %d Non-Templated Aggregates pushed out', $name, $templates, $graphs), MESSAGE_LEVEL_INFO);\n\t} else {\n\t\traise_message('color_template_sync', __('Color Template \\'%s\\' had no Aggregate Templates or Graphs using this Color Template.', $name, $templates, $graphs), MESSAGE_LEVEL_INFO);\n\t}\n}\n\n/**\n * color_template maintain color templates\n */\nfunction color_template() {\n\tglobal $actions, $item_rows, $config;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/api_aggregate.php');\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Color Templates'), 'color_templates.php', 'form_template', 'sess_ct', 'color_templates.php?action=edit');\n\n\t$pageFilter->rows_label = __('Templates');\n\t$pageFilter->has_graphs = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (ct.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' (templates>0 OR graphs>0)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM color_templates AS ct\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT *\n\t\tFROM color_templates AS ct\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('color_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Color Templates'), 'page', 'main');\n\n\tform_start('color_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Template Title'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Color Templates that are in use cannot be Deleted. In use is defined as being referenced by an Aggregate Template.')\n\t\t),\n\t\t'graphs'    => array(\n\t\t\t'display' => __('Graphs'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['templates'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['color_template_id'], true);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'color_templates.php?action=template_edit&color_template_id=' . $template['color_template_id'] . '&page=1'), $template['color_template_id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['color_template_id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graphs']), $template['color_template_id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['templates']), $template['color_template_id'], '', 'right');\n\n\t\t\tform_checkbox_cell($template['name'], $template['color_template_id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Color Templates Found') .\"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'color_templates.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\tloadUrl({url:strURL})\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'color_templates.php?clear=1';\n\t\tloadUrl({url:strURL})\n\t}\n\n\t$(function() {\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_template').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.462890625,
          "content": "{\n    \"_copyright\": {\n        \"01\": \"+-------------------------------------------------------------------------+\",\n        \"02\": \"| Copyright (C) 2004-2023 The Cacti Group                                 |\",\n        \"03\": \"|                                                                         |\",\n        \"04\": \"| This program is free software; you can redistribute it and/or           |\",\n        \"05\": \"| modify it under the terms of the GNU General Public License             |\",\n        \"06\": \"| as published by the Free Software Foundation; either version 2          |\",\n        \"07\": \"| of the License, or (at your option) any later version.                  |\",\n        \"08\": \"|                                                                         |\",\n        \"09\": \"| This program is distributed in the hope that it will be useful,         |\",\n        \"10\": \"| but WITHOUT ANY WARRANTY; without even the implied warranty of          |\",\n        \"11\": \"| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\",\n        \"12\": \"| GNU General Public License for more details.                            |\",\n        \"13\": \"+-------------------------------------------------------------------------+\",\n        \"14\": \"| Cacti: The Complete RRDtool-based Graphing Solution                     |\",\n        \"15\": \"+-------------------------------------------------------------------------+\",\n        \"16\": \"| This code is designed, written, and maintained by the Cacti Group. See  |\",\n        \"17\": \"| about.php and/or the AUTHORS file for specific developer information.   |\",\n        \"18\": \"+-------------------------------------------------------------------------+\",\n        \"19\": \"| http://www.cacti.net/                                                   |\",\n        \"20\": \"+-------------------------------------------------------------------------+\"\n    },\n    \"name\": \"cacti/cacti\",\n    \"description\": \"Cacti Network Monitoring Framework\",\n    \"type\": \"composer-plugin\",\n    \"license\": \"GPL2\",\n    \"require\": {\n        \"php\": \">=8.0\",\n        \"ext-PDO\": \"*\",\n        \"ext-Phar\": \"*\",\n        \"ext-dom\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-gmp\": \"*\",\n        \"ext-intl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-ldap\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-mysqlnd\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-pcntl\": \"*\",\n        \"ext-pdo_mysql\": \"*\",\n        \"ext-posix\": \"*\",\n        \"ext-sockets\": \"*\",\n        \"ext-sqlite3\": \"*\",\n        \"ext-xml\": \"*\",\n        \"greew/oauth2-azure-provider\": \"^2.0\",\n        \"hayageek/oauth2-yahoo\": \"^2.0\",\n        \"league/oauth2-client\": \"^2.7\",\n        \"league/oauth2-google\": \"^4.0\",\n        \"lipis/flag-icons\": \"^6.11.0\",\n        \"php-mqtt/client\": \"^2.2\",\n        \"phpmailer/phpmailer\": \"^6.7.1\",\n        \"stevenmaguire/oauth2-keycloak\": \"^5.1\",\n        \"stevenmaguire/oauth2-microsoft\": \"^2.2\"\n    },\n\t\"suggest\": {\n        \"friendsofphp/php-cs-fixer\": \"^3.13\"\n\t},\n    \"authors\": [\n        {\n            \"name\": \"The Cacti Group\",\n            \"email\": \"developers@cacti.net\"\n        }\n    ],\n    \"funding\": [\n        {\n            \"url\": \"https://github.com/sponsors/Cacti\",\n            \"type\": \"github\"\n        }\n    ],\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"config\": {\n        \"sort-packages\": true,\n\t\t\"vendor-dir\": \"./include/vendor\"\n    },\n    \"scripts\": {\n        \"lint\": \"phplint --no-cache src/\",\n        \"phpcsfixer\": \"php-cs-fixer fix --diff --dry-run --ansi\",\n        \"phpcsfixit\": \"php-cs-fixer fix --ansi\"\n    }\n}\n"
        },
        {
          "name": "composer.lock",
          "type": "blob",
          "size": 47.130859375,
          "content": "{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n        \"This file is @generated automatically\"\n    ],\n    \"content-hash\": \"34f1ae13f314fa0628a505258127079e\",\n    \"packages\": [\n        {\n            \"name\": \"firebase/php-jwt\",\n            \"version\": \"v6.10.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/firebase/php-jwt.git\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/firebase/php-jwt/zipball/30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"reference\": \"30c19ed0f3264cb660ea496895cfb6ef7ee3653b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^8.0\"\n            },\n            \"require-dev\": {\n                \"guzzlehttp/guzzle\": \"^7.4\",\n                \"phpspec/prophecy-phpunit\": \"^2.0\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"psr/cache\": \"^2.0||^3.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"psr/http-factory\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"ext-sodium\": \"Support EdDSA (Ed25519) signatures\",\n                \"paragonie/sodium_compat\": \"Support EdDSA (Ed25519) signatures when libsodium is not present\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Firebase\\\\JWT\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Neuman Vong\",\n                    \"email\": \"neuman+pear@twilio.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Anant Narayanan\",\n                    \"email\": \"anant@php.net\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.\",\n            \"homepage\": \"https://github.com/firebase/php-jwt\",\n            \"keywords\": [\n                \"jwt\",\n                \"php\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/firebase/php-jwt/issues\",\n                \"source\": \"https://github.com/firebase/php-jwt/tree/v6.10.2\"\n            },\n            \"time\": \"2024-11-24T11:22:49+00:00\"\n        },\n        {\n            \"name\": \"greew/oauth2-azure-provider\",\n            \"version\": \"v2.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/greew/oauth2-azure-provider.git\",\n                \"reference\": \"92078ba8c76003e8164da2b4c02104a833d8391b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/greew/oauth2-azure-provider/zipball/92078ba8c76003e8164da2b4c02104a833d8391b\",\n                \"reference\": \"92078ba8c76003e8164da2b4c02104a833d8391b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"guzzlehttp/psr7\": \"^2.4\",\n                \"league/oauth2-client\": \"^2.6\",\n                \"php\": \"^7.3 || ^8.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"require-dev\": {\n                \"friendsofphp/php-cs-fixer\": \"^3.64\",\n                \"phpunit/phpunit\": \"^9.5\",\n                \"roave/security-advisories\": \"dev-latest\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Greew\\\\OAuth2\\\\Client\\\\Provider\\\\\": \"src/Provider/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-3.0-or-later\"\n            ],\n            \"description\": \"An OAuth2 client provider for Microsoft Azure to be used with thephpleague/oauth2-client\",\n            \"support\": {\n                \"issues\": \"https://github.com/greew/oauth2-azure-provider/issues\",\n                \"source\": \"https://github.com/greew/oauth2-azure-provider/tree/v2.0.0\"\n            },\n            \"time\": \"2024-10-15T08:12:46+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/guzzle\",\n            \"version\": \"7.9.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/guzzle.git\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/guzzle/zipball/d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"reference\": \"d281ed313b989f213357e3be1a179f02196ac99b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/promises\": \"^1.5.3 || ^2.0.3\",\n                \"guzzlehttp/psr7\": \"^2.7.0\",\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-client\": \"^1.0\",\n                \"symfony/deprecation-contracts\": \"^2.2 || ^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-client-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"ext-curl\": \"*\",\n                \"guzzle/client-integration-tests\": \"3.0.2\",\n                \"php-http/message-factory\": \"^1.1\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\",\n                \"psr/log\": \"^1.1 || ^2.0 || ^3.0\"\n            },\n            \"suggest\": {\n                \"ext-curl\": \"Required for CURL handler support\",\n                \"ext-intl\": \"Required for Internationalized Domain Name (IDN) support\",\n                \"psr/log\": \"Required for using the Log middleware\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"src/functions_include.php\"\n                ],\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Jeremy Lindblom\",\n                    \"email\": \"jeremeamia@gmail.com\",\n                    \"homepage\": \"https://github.com/jeremeamia\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle is a PHP HTTP client library\",\n            \"keywords\": [\n                \"client\",\n                \"curl\",\n                \"framework\",\n                \"http\",\n                \"http client\",\n                \"psr-18\",\n                \"psr-7\",\n                \"rest\",\n                \"web service\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/guzzle/issues\",\n                \"source\": \"https://github.com/guzzle/guzzle/tree/7.9.2\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-24T11:22:20+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/promises\",\n            \"version\": \"2.0.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/promises.git\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/promises/zipball/f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"reference\": \"f9c436286ab2892c7db7be8c8da4ef61ccf7b455\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Promise\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                }\n            ],\n            \"description\": \"Guzzle promises library\",\n            \"keywords\": [\n                \"promise\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/promises/issues\",\n                \"source\": \"https://github.com/guzzle/promises/tree/2.0.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/promises\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-10-17T10:06:22+00:00\"\n        },\n        {\n            \"name\": \"guzzlehttp/psr7\",\n            \"version\": \"2.7.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/guzzle/psr7.git\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/guzzle/psr7/zipball/a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"reference\": \"a70f5c95fb43bc83f07c9c948baa0dc1829bf201\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2.5 || ^8.0\",\n                \"psr/http-factory\": \"^1.0\",\n                \"psr/http-message\": \"^1.1 || ^2.0\",\n                \"ralouphie/getallheaders\": \"^3.0\"\n            },\n            \"provide\": {\n                \"psr/http-factory-implementation\": \"1.0\",\n                \"psr/http-message-implementation\": \"1.0\"\n            },\n            \"require-dev\": {\n                \"bamarni/composer-bin-plugin\": \"^1.8.2\",\n                \"http-interop/http-factory-tests\": \"0.9.0\",\n                \"phpunit/phpunit\": \"^8.5.39 || ^9.6.20\"\n            },\n            \"suggest\": {\n                \"laminas/laminas-httphandlerrunner\": \"Emit PSR-7 responses\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"bamarni-bin\": {\n                    \"bin-links\": true,\n                    \"forward-command\": false\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"GuzzleHttp\\\\Psr7\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Graham Campbell\",\n                    \"email\": \"hello@gjcampbell.co.uk\",\n                    \"homepage\": \"https://github.com/GrahamCampbell\"\n                },\n                {\n                    \"name\": \"Michael Dowling\",\n                    \"email\": \"mtdowling@gmail.com\",\n                    \"homepage\": \"https://github.com/mtdowling\"\n                },\n                {\n                    \"name\": \"George Mponos\",\n                    \"email\": \"gmponos@gmail.com\",\n                    \"homepage\": \"https://github.com/gmponos\"\n                },\n                {\n                    \"name\": \"Tobias Nyholm\",\n                    \"email\": \"tobias.nyholm@gmail.com\",\n                    \"homepage\": \"https://github.com/Nyholm\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://github.com/sagikazarmark\"\n                },\n                {\n                    \"name\": \"Tobias Schultze\",\n                    \"email\": \"webmaster@tubo-world.de\",\n                    \"homepage\": \"https://github.com/Tobion\"\n                },\n                {\n                    \"name\": \"Márk Sági-Kazár\",\n                    \"email\": \"mark.sagikazar@gmail.com\",\n                    \"homepage\": \"https://sagikazarmark.hu\"\n                }\n            ],\n            \"description\": \"PSR-7 message implementation that also provides common utility methods\",\n            \"keywords\": [\n                \"http\",\n                \"message\",\n                \"psr-7\",\n                \"request\",\n                \"response\",\n                \"stream\",\n                \"uri\",\n                \"url\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/guzzle/psr7/issues\",\n                \"source\": \"https://github.com/guzzle/psr7/tree/2.7.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/GrahamCampbell\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://github.com/Nyholm\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/guzzlehttp/psr7\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-07-18T11:15:46+00:00\"\n        },\n        {\n            \"name\": \"hayageek/oauth2-yahoo\",\n            \"version\": \"2.0.5\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/hayageek/oauth2-yahoo.git\",\n                \"reference\": \"57fb5b979fdca93bd087e62a3a3c67d2e31c0cfd\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/hayageek/oauth2-yahoo/zipball/57fb5b979fdca93bd087e62a3a3c67d2e31c0cfd\",\n                \"reference\": \"57fb5b979fdca93bd087e62a3a3c67d2e31c0cfd\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/oauth2-client\": \"^2.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~0.9\",\n                \"phpunit/phpunit\": \"~4.0\",\n                \"squizlabs/php_codesniffer\": \"~2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Hayageek\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ravishanker Kusuma\",\n                    \"email\": \"hayageek@gmail.com\",\n                    \"homepage\": \"http://hayageek.com\"\n                },\n                {\n                    \"name\": \"Timothy Asp\",\n                    \"email\": \"tim@asp.consulting\"\n                }\n            ],\n            \"description\": \"Yahoo OAuth 2.0 Client Provider for The PHP League OAuth2-Client\",\n            \"keywords\": [\n                \"Authentication\",\n                \"authorization\",\n                \"client\",\n                \"oauth\",\n                \"oauth2\",\n                \"yahoo\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/hayageek/oauth2-yahoo/issues\",\n                \"source\": \"https://github.com/hayageek/oauth2-yahoo/tree/master\"\n            },\n            \"time\": \"2018-10-30T07:19:33+00:00\"\n        },\n        {\n            \"name\": \"league/oauth2-client\",\n            \"version\": \"2.8.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/oauth2-client.git\",\n                \"reference\": \"3d5cf8d0543731dfb725ab30e4d7289891991e13\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/oauth2-client/zipball/3d5cf8d0543731dfb725ab30e4d7289891991e13\",\n                \"reference\": \"3d5cf8d0543731dfb725ab30e4d7289891991e13\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"guzzlehttp/guzzle\": \"^6.5.8 || ^7.4.5\",\n                \"php\": \"^7.1 || >=8.0.0 <8.5.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"^1.3.5\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.4\",\n                \"phpunit/phpunit\": \"^7 || ^8 || ^9 || ^10 || ^11\",\n                \"squizlabs/php_codesniffer\": \"^3.11\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Alex Bilbie\",\n                    \"email\": \"hello@alexbilbie.com\",\n                    \"homepage\": \"http://www.alexbilbie.com\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"Woody Gilk\",\n                    \"homepage\": \"https://github.com/shadowhand\",\n                    \"role\": \"Contributor\"\n                }\n            ],\n            \"description\": \"OAuth 2.0 Client Library\",\n            \"keywords\": [\n                \"Authentication\",\n                \"SSO\",\n                \"authorization\",\n                \"identity\",\n                \"idp\",\n                \"oauth\",\n                \"oauth2\",\n                \"single sign on\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/oauth2-client/issues\",\n                \"source\": \"https://github.com/thephpleague/oauth2-client/tree/2.8.0\"\n            },\n            \"time\": \"2024-12-11T05:05:52+00:00\"\n        },\n        {\n            \"name\": \"league/oauth2-google\",\n            \"version\": \"4.0.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/thephpleague/oauth2-google.git\",\n                \"reference\": \"1b01ba18ba31b29e88771e3e0979e5c91d4afe76\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/thephpleague/oauth2-google/zipball/1b01ba18ba31b29e88771e3e0979e5c91d4afe76\",\n                \"reference\": \"1b01ba18ba31b29e88771e3e0979e5c91d4afe76\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/oauth2-client\": \"^2.0\",\n                \"php\": \"^7.3 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"eloquent/phony-phpunit\": \"^6.0 || ^7.1\",\n                \"phpunit/phpunit\": \"^8.0 || ^9.0\",\n                \"squizlabs/php_codesniffer\": \"^3.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"League\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Woody Gilk\",\n                    \"email\": \"hello@shadowhand.com\",\n                    \"homepage\": \"https://shadowhand.com\"\n                }\n            ],\n            \"description\": \"Google OAuth 2.0 Client Provider for The PHP League OAuth2-Client\",\n            \"keywords\": [\n                \"Authentication\",\n                \"authorization\",\n                \"client\",\n                \"google\",\n                \"oauth\",\n                \"oauth2\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/thephpleague/oauth2-google/issues\",\n                \"source\": \"https://github.com/thephpleague/oauth2-google/tree/4.0.1\"\n            },\n            \"time\": \"2023-03-17T15:20:52+00:00\"\n        },\n        {\n            \"name\": \"lipis/flag-icons\",\n            \"version\": \"v6.15.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/lipis/flag-icons.git\",\n                \"reference\": \"be01befd268ae71183d339901cd2ea64e0da4307\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/lipis/flag-icons/zipball/be01befd268ae71183d339901cd2ea64e0da4307\",\n                \"reference\": \"be01befd268ae71183d339901cd2ea64e0da4307\",\n                \"shasum\": \"\"\n            },\n            \"type\": \"library\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Panayiotis Lipiridis\",\n                    \"email\": \"lipiridis@gmail.com\",\n                    \"role\": \"Lead\"\n                }\n            ],\n            \"description\": \"A curated collection of all country flags in SVG — plus the CSS for easier integration.\",\n            \"homepage\": \"https://flagicons.lipis.dev\",\n            \"keywords\": [\n                \"country\",\n                \"country-flags\",\n                \"css\",\n                \"icon-css\",\n                \"svg\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/lipis/flag-icons/issues\",\n                \"source\": \"https://github.com/lipis/flag-icons/tree/v6.15.0\"\n            },\n            \"time\": \"2023-11-09T10:49:39+00:00\"\n        },\n        {\n            \"name\": \"myclabs/php-enum\",\n            \"version\": \"1.8.4\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/myclabs/php-enum.git\",\n                \"reference\": \"a867478eae49c9f59ece437ae7f9506bfaa27483\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/myclabs/php-enum/zipball/a867478eae49c9f59ece437ae7f9506bfaa27483\",\n                \"reference\": \"a867478eae49c9f59ece437ae7f9506bfaa27483\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \"^7.3 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^9.5\",\n                \"squizlabs/php_codesniffer\": \"1.*\",\n                \"vimeo/psalm\": \"^4.6.2\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"MyCLabs\\\\Enum\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"stubs/Stringable.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP Enum contributors\",\n                    \"homepage\": \"https://github.com/myclabs/php-enum/graphs/contributors\"\n                }\n            ],\n            \"description\": \"PHP Enum implementation\",\n            \"homepage\": \"http://github.com/myclabs/php-enum\",\n            \"keywords\": [\n                \"enum\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/myclabs/php-enum/issues\",\n                \"source\": \"https://github.com/myclabs/php-enum/tree/1.8.4\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/mnapoli\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/myclabs/php-enum\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2022-08-04T09:53:51+00:00\"\n        },\n        {\n            \"name\": \"php-mqtt/client\",\n            \"version\": \"v2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-mqtt/client.git\",\n                \"reference\": \"8042ad93e72da8666e27168dc90670e45bdea274\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-mqtt/client/zipball/8042ad93e72da8666e27168dc90670e45bdea274\",\n                \"reference\": \"8042ad93e72da8666e27168dc90670e45bdea274\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"myclabs/php-enum\": \"^1.7\",\n                \"php\": \"^8.0\",\n                \"psr/log\": \"^1.1|^2.0|^3.0\"\n            },\n            \"require-dev\": {\n                \"phpunit/php-invoker\": \"^3.0\",\n                \"phpunit/phpunit\": \"^9.0\",\n                \"squizlabs/php_codesniffer\": \"^3.5\"\n            },\n            \"suggest\": {\n                \"ext-redis\": \"Required for the RedisRepository\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PhpMqtt\\\\Client\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marvin Mall\",\n                    \"email\": \"marvin-mall@msn.com\",\n                    \"role\": \"developer\"\n                }\n            ],\n            \"description\": \"An MQTT client written in and for PHP.\",\n            \"keywords\": [\n                \"client\",\n                \"mqtt\",\n                \"publish\",\n                \"subscribe\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/php-mqtt/client/issues\",\n                \"source\": \"https://github.com/php-mqtt/client/tree/v2.2.0\"\n            },\n            \"time\": \"2024-11-24T20:54:32+00:00\"\n        },\n        {\n            \"name\": \"phpmailer/phpmailer\",\n            \"version\": \"v6.9.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/PHPMailer/PHPMailer.git\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/PHPMailer/PHPMailer/zipball/2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"reference\": \"2f5c94fe7493efc213f643c23b1b1c249d40f47e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"ext-filter\": \"*\",\n                \"ext-hash\": \"*\",\n                \"php\": \">=5.5.0\"\n            },\n            \"require-dev\": {\n                \"dealerdirect/phpcodesniffer-composer-installer\": \"^1.0\",\n                \"doctrine/annotations\": \"^1.2.6 || ^1.13.3\",\n                \"php-parallel-lint/php-console-highlighter\": \"^1.0.0\",\n                \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n                \"phpcompatibility/php-compatibility\": \"^9.3.5\",\n                \"roave/security-advisories\": \"dev-latest\",\n                \"squizlabs/php_codesniffer\": \"^3.7.2\",\n                \"yoast/phpunit-polyfills\": \"^1.0.4\"\n            },\n            \"suggest\": {\n                \"decomplexity/SendOauth2\": \"Adapter for using XOAUTH2 authentication\",\n                \"ext-mbstring\": \"Needed to send email in multibyte encoding charset or decode encoded addresses\",\n                \"ext-openssl\": \"Needed for secure SMTP sending and DKIM signing\",\n                \"greew/oauth2-azure-provider\": \"Needed for Microsoft Azure XOAUTH2 authentication\",\n                \"hayageek/oauth2-yahoo\": \"Needed for Yahoo XOAUTH2 authentication\",\n                \"league/oauth2-google\": \"Needed for Google XOAUTH2 authentication\",\n                \"psr/log\": \"For optional PSR-3 debug logging\",\n                \"symfony/polyfill-mbstring\": \"To support UTF-8 if the Mbstring PHP extension is not enabled (^1.2)\",\n                \"thenetworg/oauth2-azure\": \"Needed for Microsoft XOAUTH2 authentication\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"PHPMailer\\\\PHPMailer\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"LGPL-2.1-only\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Marcus Bointon\",\n                    \"email\": \"phpmailer@synchromedia.co.uk\"\n                },\n                {\n                    \"name\": \"Jim Jagielski\",\n                    \"email\": \"jimjag@gmail.com\"\n                },\n                {\n                    \"name\": \"Andy Prevost\",\n                    \"email\": \"codeworxtech@users.sourceforge.net\"\n                },\n                {\n                    \"name\": \"Brent R. Matzelle\"\n                }\n            ],\n            \"description\": \"PHPMailer is a full-featured email creation and transfer class for PHP\",\n            \"support\": {\n                \"issues\": \"https://github.com/PHPMailer/PHPMailer/issues\",\n                \"source\": \"https://github.com/PHPMailer/PHPMailer/tree/v6.9.3\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://github.com/Synchro\",\n                    \"type\": \"github\"\n                }\n            ],\n            \"time\": \"2024-11-24T18:04:13+00:00\"\n        },\n        {\n            \"name\": \"psr/http-client\",\n            \"version\": \"1.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-client.git\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"reference\": \"bb5906edc1c324c9a05aa0873d40117941e5fa90\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.0 || ^8.0\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP clients\",\n            \"homepage\": \"https://github.com/php-fig/http-client\",\n            \"keywords\": [\n                \"http\",\n                \"http-client\",\n                \"psr\",\n                \"psr-18\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-client\"\n            },\n            \"time\": \"2023-09-23T14:17:50+00:00\"\n        },\n        {\n            \"name\": \"psr/http-factory\",\n            \"version\": \"1.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-factory.git\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-factory/zipball/2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"reference\": \"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.1\",\n                \"psr/http-message\": \"^1.0 || ^2.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"PSR-17: Common interfaces for PSR-7 HTTP message factories\",\n            \"keywords\": [\n                \"factory\",\n                \"http\",\n                \"message\",\n                \"psr\",\n                \"psr-17\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-factory\"\n            },\n            \"time\": \"2024-04-15T12:06:14+00:00\"\n        },\n        {\n            \"name\": \"psr/http-message\",\n            \"version\": \"2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/http-message.git\",\n                \"reference\": \"402d35bcb92c70c026d1a6a9883f06b2ead23d71\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/http-message/zipball/402d35bcb92c70c026d1a6a9883f06b2ead23d71\",\n                \"reference\": \"402d35bcb92c70c026d1a6a9883f06b2ead23d71\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"2.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Http\\\\Message\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for HTTP messages\",\n            \"homepage\": \"https://github.com/php-fig/http-message\",\n            \"keywords\": [\n                \"http\",\n                \"http-message\",\n                \"psr\",\n                \"psr-7\",\n                \"request\",\n                \"response\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/http-message/tree/2.0\"\n            },\n            \"time\": \"2023-04-04T09:54:51+00:00\"\n        },\n        {\n            \"name\": \"psr/log\",\n            \"version\": \"3.0.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/php-fig/log.git\",\n                \"reference\": \"f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/php-fig/log/zipball/f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\",\n                \"reference\": \"f16e1d5863e37f8d8c2a01719f5b34baa2b714d3\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.0.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Psr\\\\Log\\\\\": \"src\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"PHP-FIG\",\n                    \"homepage\": \"https://www.php-fig.org/\"\n                }\n            ],\n            \"description\": \"Common interface for logging libraries\",\n            \"homepage\": \"https://github.com/php-fig/log\",\n            \"keywords\": [\n                \"log\",\n                \"psr\",\n                \"psr-3\"\n            ],\n            \"support\": {\n                \"source\": \"https://github.com/php-fig/log/tree/3.0.2\"\n            },\n            \"time\": \"2024-09-11T13:17:53+00:00\"\n        },\n        {\n            \"name\": \"ralouphie/getallheaders\",\n            \"version\": \"3.0.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/ralouphie/getallheaders.git\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822\",\n                \"reference\": \"120b605dfeb996808c31b6477290a714d356e822\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"require-dev\": {\n                \"php-coveralls/php-coveralls\": \"^2.1\",\n                \"phpunit/phpunit\": \"^5 || ^6.5\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/getallheaders.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Ralph Khattar\",\n                    \"email\": \"ralph.khattar@gmail.com\"\n                }\n            ],\n            \"description\": \"A polyfill for getallheaders.\",\n            \"support\": {\n                \"issues\": \"https://github.com/ralouphie/getallheaders/issues\",\n                \"source\": \"https://github.com/ralouphie/getallheaders/tree/develop\"\n            },\n            \"time\": \"2019-03-08T08:55:37+00:00\"\n        },\n        {\n            \"name\": \"stevenmaguire/oauth2-keycloak\",\n            \"version\": \"5.1.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/stevenmaguire/oauth2-keycloak.git\",\n                \"reference\": \"1b690b7377dfe7a23e1590373f37e12cf40a6d75\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/stevenmaguire/oauth2-keycloak/zipball/1b690b7377dfe7a23e1590373f37e12cf40a6d75\",\n                \"reference\": \"1b690b7377dfe7a23e1590373f37e12cf40a6d75\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"firebase/php-jwt\": \"^6.0\",\n                \"league/oauth2-client\": \"^2.0\",\n                \"php\": \"~7.2 || ~8.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~1.5.0\",\n                \"phpunit/phpunit\": \"~9.6.4\",\n                \"squizlabs/php_codesniffer\": \"~3.7.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.0.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Stevenmaguire\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steven Maguire\",\n                    \"email\": \"stevenmaguire@gmail.com\",\n                    \"homepage\": \"https://github.com/stevenmaguire\"\n                }\n            ],\n            \"description\": \"Keycloak OAuth 2.0 Client Provider for The PHP League OAuth2-Client\",\n            \"keywords\": [\n                \"authorisation\",\n                \"authorization\",\n                \"client\",\n                \"keycloak\",\n                \"oauth\",\n                \"oauth2\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/stevenmaguire/oauth2-keycloak/issues\",\n                \"source\": \"https://github.com/stevenmaguire/oauth2-keycloak/tree/5.1.0\"\n            },\n            \"time\": \"2023-10-24T06:10:44+00:00\"\n        },\n        {\n            \"name\": \"stevenmaguire/oauth2-microsoft\",\n            \"version\": \"2.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/stevenmaguire/oauth2-microsoft.git\",\n                \"reference\": \"f24f79d8c47224d24a1240270ca3b0a4c1521ed4\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/stevenmaguire/oauth2-microsoft/zipball/f24f79d8c47224d24a1240270ca3b0a4c1521ed4\",\n                \"reference\": \"f24f79d8c47224d24a1240270ca3b0a4c1521ed4\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"league/oauth2-client\": \"^2.0\"\n            },\n            \"require-dev\": {\n                \"mockery/mockery\": \"~0.9\",\n                \"phpunit/phpunit\": \"~4.0\",\n                \"squizlabs/php_codesniffer\": \"~2.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Stevenmaguire\\\\OAuth2\\\\Client\\\\\": \"src/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Steven Maguire\",\n                    \"email\": \"stevenmaguire@gmail.com\",\n                    \"homepage\": \"https://github.com/stevenmaguire\"\n                }\n            ],\n            \"description\": \"Microsoft OAuth 2.0 Client Provider for The PHP League OAuth2-Client\",\n            \"keywords\": [\n                \"authorisation\",\n                \"authorization\",\n                \"client\",\n                \"microsoft\",\n                \"oauth\",\n                \"oauth2\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/stevenmaguire/oauth2-microsoft/issues\",\n                \"source\": \"https://github.com/stevenmaguire/oauth2-microsoft/tree/master\"\n            },\n            \"time\": \"2017-06-07T13:42:47+00:00\"\n        },\n        {\n            \"name\": \"symfony/deprecation-contracts\",\n            \"version\": \"v3.5.1\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/symfony/deprecation-contracts.git\",\n                \"reference\": \"74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/symfony/deprecation-contracts/zipball/74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\",\n                \"reference\": \"74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=8.1\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"thanks\": {\n                    \"url\": \"https://github.com/symfony/contracts\",\n                    \"name\": \"symfony/contracts\"\n                },\n                \"branch-alias\": {\n                    \"dev-main\": \"3.5-dev\"\n                }\n            },\n            \"autoload\": {\n                \"files\": [\n                    \"function.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nicolas Grekas\",\n                    \"email\": \"p@tchwork.com\"\n                },\n                {\n                    \"name\": \"Symfony Community\",\n                    \"homepage\": \"https://symfony.com/contributors\"\n                }\n            ],\n            \"description\": \"A generic function and convention to trigger deprecation notices\",\n            \"homepage\": \"https://symfony.com\",\n            \"support\": {\n                \"source\": \"https://github.com/symfony/deprecation-contracts/tree/v3.5.1\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://symfony.com/sponsor\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/fabpot\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://tidelift.com/funding/github/packagist/symfony/symfony\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"time\": \"2024-09-25T14:20:29+00:00\"\n        }\n    ],\n    \"packages-dev\": [],\n    \"aliases\": [],\n    \"minimum-stability\": \"dev\",\n    \"stability-flags\": [],\n    \"prefer-stable\": true,\n    \"prefer-lowest\": false,\n    \"platform\": {\n        \"php\": \">=8.0\",\n        \"ext-pdo\": \"*\",\n        \"ext-phar\": \"*\",\n        \"ext-dom\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-gmp\": \"*\",\n        \"ext-intl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-ldap\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-mysqlnd\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-pcntl\": \"*\",\n        \"ext-pdo_mysql\": \"*\",\n        \"ext-posix\": \"*\",\n        \"ext-sockets\": \"*\",\n        \"ext-sqlite3\": \"*\",\n        \"ext-xml\": \"*\"\n    },\n    \"platform-dev\": [],\n    \"plugin-api-version\": \"2.3.0\"\n}\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "data_debug.php",
          "type": "blob",
          "size": 32.794921875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('include/auth.php');\ninclude_once('lib/rrd.php');\ninclude_once('lib/dsdebug.php');\n\n$actions = array(\n\t1 => __('Run Check'),\n\t2 => __('Delete Check')\n);\n\nini_set('memory_limit', '-1');\n\nset_default_action();\n\nprocess_sanitize_draw_filter(false);\n\nswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'run_debug':\n\t\t$id = get_filter_request_var('id');\n\n\t\tif ($id > 0) {\n\t\t\t$selected_items = array($id);\n\t\t\tdebug_delete($selected_items);\n\t\t\tdebug_rerun($selected_items);\n\t\t\traise_message('rerun', __('Data Source debug started.'), MESSAGE_LEVEL_INFO);\n\t\t\theader('Location: data_debug.php?action=view&id=' . get_filter_request_var('id'));\n\t\t} else {\n\t\t\traise_message('repair_error', __('Data Source debug received an invalid Data Source ID.'), MESSAGE_LEVEL_ERROR);\n\t\t}\n\n\t\tbreak;\n\tcase 'run_repair':\n\t\t$id = get_filter_request_var('id');\n\n\t\tif ($id > 0) {\n\t\t\tif (dsdebug_run_repair($id)) {\n\t\t\t\traise_message('repair', __('All RRDfile repairs succeeded.'), MESSAGE_LEVEL_INFO);\n\t\t\t} else {\n\t\t\t\traise_message('repair', __('One or more RRDfile repairs failed.  See Cacti log for errors.'), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\n\t\t\t$selected_items = array($id);\n\n\t\t\tdebug_delete($selected_items);\n\t\t\tdebug_rerun($selected_items);\n\n\t\t\traise_message('rerun', __('Automatic Data Source debug being rerun after repair.'), MESSAGE_LEVEL_INFO);\n\n\t\t\theader('Location: data_debug.php?action=view&id=' . get_filter_request_var('id'));\n\t\t} else {\n\t\t\traise_message('repair_error', __('Data Source repair received an invalid Data Source ID.'), MESSAGE_LEVEL_ERROR);\n\t\t}\n\n\t\tbreak;\n\tcase 'view':\n\t\t$id = get_filter_request_var('id');\n\n\t\t$debug_status = debug_process_status($id);\n\n\t\tif ($debug_status == 'notset') {\n\t\t\t$selected_items = array($id);\n\t\t\tdebug_delete($selected_items);\n\t\t\tdebug_rerun($selected_items);\n\t\t\t$debug_status = 'waiting';\n\t\t}\n\n\t\tif ($debug_status == 'waiting' || $debug_status == 'analysis') {\n\t\t\t$refresh = array(\n\t\t\t\t'seconds' => 30,\n\t\t\t\t'page'    => 'data_debug.php?action=view&id=' . $id,\n\t\t\t\t'logout'  => 'false'\n\t\t\t);\n\n\t\t\tset_page_refresh($refresh);\n\t\t}\n\n\t\ttop_header();\n\t\tdebug_view();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'runall':\n\t\tdebug_runall_filtered();\n\n\tdefault:\n\t\t$refresh = array(\n\t\t\t'seconds' => get_request_var('refresh'),\n\t\t\t'page'    => 'data_debug.php',\n\t\t\t'logout'  => 'false'\n\t\t);\n\n\t\tset_page_refresh($refresh);\n\n\t\ttop_header();\n\t\tdebug_wizard();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction debug_runall_filtered() {\n\t$info = array(\n\t\t'rrd_folder_writable' => '',\n\t\t'rrd_exists'          => '',\n\t\t'rrd_writable'        => '',\n\t\t'active'              => '',\n\t\t'owner'               => '',\n\t\t'runas_poller'        => '',\n\t\t'runas_website'       => get_running_user(),\n\t\t'last_result'         => '',\n\t\t'valid_data'          => '',\n\t\t'rra_timestamp'       => '',\n\t\t'rra_timestamp2'      => '',\n\t\t'rrd_match'           => ''\n\t);\n\n\t$info = serialize($info);\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\t$dd_join    = '';\n\t$now        = time();\n\n\tdebug_get_filter($sql_where, $sql_params, $dd_join);\n\n\tdb_execute_prepared(\"DELETE dd\n\t\tFROM data_debug AS dd\n\t\tINNER JOIN data_local AS dl\n\t\tON dd.datasource = dl.id\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$new_params = array($now, $info, $_SESSION[SESS_USER_ID]);\n\n\t$sql_params = $new_params + $sql_params;\n\n\tdb_execute_prepared(\"INSERT INTO data_debug\n\t\t(started, done, info, user, datasource)\n\t\tSELECT ?, '0', ?, ?, dl.id\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where\",\n\t\t$sql_params);\n}\n\nfunction debug_process_status($id) {\n\t$status = db_fetch_row_prepared('SELECT done, IFNULL(issue, \"waiting\") AS issue\n\t\tFROM data_debug\n\t\tWHERE datasource = ?',\n\t\tarray($id));\n\n\tif (cacti_sizeof($status) == 0) {\n\t\treturn 'notset';\n\t}\n\n\tif ($status['issue'] == 'waiting') {\n\t\treturn 'waiting';\n\t}\n\n\tif ($status['done'] == 1) {\n\t\treturn 'complete';\n\t} else {\n\t\treturn 'analysis';\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions, $assoc_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ================= input validation ================= */\n\n\t$selected_items = array();\n\n\tif (isset_request_var('save_list')) {\n\t\t/* loop through each of the lists selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var=>$val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$selected_items[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t/* if we are to save this form, instead of display it */\n\t\tif (isset_request_var('save_list')) {\n\t\t\tif (get_request_var('drp_action') == '2') { /* delete */\n\t\t\t\tdebug_delete($selected_items);\n\t\t\t\theader('Location: data_debug.php?debug=-1');\n\t\t\t} elseif (get_request_var('drp_action') == '1') { /* Rerun */\n\t\t\t\tdebug_rerun($selected_items);\n\t\t\t\theader('Location: data_debug.php?debug=1');\n\t\t\t}\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\nfunction debug_rerun($selected_items) {\n\t$info = array(\n\t\t'rrd_folder_writable' => '',\n\t\t'rrd_exists'          => '',\n\t\t'rrd_writable'        => '',\n\t\t'active'              => '',\n\t\t'owner'               => '',\n\t\t'runas_poller'        => '',\n\t\t'runas_website'       => get_running_user(),\n\t\t'last_result'         => '',\n\t\t'valid_data'          => '',\n\t\t'rra_timestamp'       => '',\n\t\t'rra_timestamp2'      => '',\n\t\t'rrd_match'           => ''\n\t);\n\n\t$info = serialize($info);\n\n\tif (!empty($selected_items)) {\n\t\tforeach ($selected_items as $id) {\n\t\t\t$exists = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM data_debug\n\t\t\t\tWHERE datasource = ?',\n\t\t\t\tarray($id));\n\n\t\t\tif (!$exists) {\n\t\t\t\t$save               = array();\n\t\t\t\t$save['id']         = 0;\n\t\t\t\t$save['datasource'] = $id;\n\n\t\t\t\t$save['info']       = $info;\n\t\t\t\t$save['started']    = time();\n\t\t\t\t$save['user']       = intval($_SESSION[SESS_USER_ID]);\n\n\t\t\t\t$id = sql_save($save, 'data_debug');\n\t\t\t} else {\n\t\t\t\t$stime = time();\n\n\t\t\t\tdb_execute_prepared('UPDATE data_debug\n\t\t\t\t\tSET started = ?,\n\t\t\t\t\tdone = 0,\n\t\t\t\t\tinfo = ?,\n\t\t\t\t\tissue = \"\"\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($stime, $info, $exists));\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction debug_delete($selected_items) {\n\tif (!empty($selected_items)) {\n\t\tforeach ($selected_items as $id) {\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM data_debug\n\t\t\t\tWHERE datasource = ?',\n\t\t\t\tarray($id));\n\t\t}\n\t}\n}\n\nfunction debug_get_filter(&$sql_where, &$sql_params, &$dd_join) {\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where    = 'WHERE (dtd.name_cache RLIKE ? OR dtd.local_data_id RLIKE ? OR dt.name RLIKE ?)';\n\n\t\t$sql_params[] = get_request_var('rfilter');\n\t\t$sql_params[] = get_request_var('rfilter');\n\t\t$sql_params[] = get_request_var('rfilter');\n\t}\n\n\tif (isempty_request_var('host_id')) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' (dl.host_id = 0 OR dl.host_id IS NULL)';\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' dl.host_id = ?';\n\t\t$sql_params[] = get_request_var('host_id');\n\t}\n\n\tif (isempty_request_var('site_id')) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' (h.site_id = 0 OR h.site_id IS NULL)';\n\t} elseif (get_request_var('site_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' h.site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '0') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' dtd.data_template_id = 0';\n\t} elseif (get_request_var('template_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND':'WHERE') . ' dtd.data_template_id = ?';\n\t\t$sql_params[] = get_request_var('template_id');\n\t}\n\n\tif (get_request_var('profile') > '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' dtd.data_source_profile_id = ?';\n\t\t$sql_params[] = get_request_var('profile');\n\t}\n\n\tif (get_request_var('status') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' dd.issue != \"\"';\n\t} elseif (get_request_var('status') == '1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' dtd.active = \"on\"';\n\t} elseif (get_request_var('status') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' dtd.active = \"\"';\n\t}\n\n\tif (get_request_var('debug') == '-1') {\n\t\t$dd_join = 'LEFT';\n\t} elseif (get_request_var('debug') == 0) {\n\t\t$dd_join = 'LEFT';\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' dd.datasource IS NULL';\n\t} else {\n\t\t$dd_join = 'INNER';\n\t}\n}\n\nfunction debug_wizard() {\n\tglobal $actions;\n\n\t$display_text = array(\n\t\t'name_cache' => array(\n\t\t\t'display' => __('Data Source'),\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Data Source to Debug'),\n\t\t\t),\n\t\t'username' => array(\n\t\t\t'display' => __('User'),\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The User who requested the Debug.'),\n\t\t\t),\n\t\t'started' => array(\n\t\t\t'display' => __('Started'),\n\t\t\t'sort'    => 'DESC',\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The Date that the Debug was Started.'),\n\t\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'sort'    => 'ASC',\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The Data Source internal ID.'),\n\t\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'sort'    => 'ASC',\n\t\t\t'align'   => 'center',\n\t\t\t'tip'     => __('The Status of the Data Source Debug Check.'),\n\t\t\t),\n\t\t'nosort2' => array(\n\t\t\t'display' => __('Writable'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the Data Collector or the Web Site have Write access.'),\n\t\t),\n\t\t'nosort3' => array(\n\t\t\t'display' => __('Exists'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the Data Source is located in the Poller Cache.'),\n\t\t),\n\t\t'nosort4' => array(\n\t\t\t'display' => __('Active'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the Data Source is Enabled.'),\n\t\t),\n\t\t'nosort5' => array(\n\t\t\t'display' => __('RRD Match'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the RRDfile matches the Data Source Template.'),\n\t\t),\n\t\t'nosort6' => array(\n\t\t\t'display' => __('Valid Data'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the RRDfile has been getting good recent Data.'),\n\t\t),\n\t\t'nosort7' => array(\n\t\t\t'display' => __('RRD Updated'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Determines if the RRDfile has been written to properly.'),\n\t\t),\n\t\t'nosort8' => array(\n\t\t\t'display' => __('Issues'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Summary of issues found for the Data Source.'),\n\t\t)\n\t);\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute('TRUNCATE TABLE data_debug');\n\t}\n\n\t/* fill in the current date for printing in the log */\n\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t$datefmt = CACTI_DATE_TIME_FORMAT;\n\t} else {\n\t\t$datefmt = 'Y-m-d H:i:s';\n\t}\n\n\tprocess_sanitize_draw_filter(true);\n\n\t$total_rows = 0;\n\t$checks     = array();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\t$dd_join    = '';\n\n\tdebug_get_filter($sql_where, $sql_params, $dd_join);\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$dd_join JOIN data_debug AS dd\n\t\tON dl.id = dd.datasource\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$checks = db_fetch_assoc_prepared(\"SELECT dd.*, dtd.local_data_id,\n\t\tdtd.name_cache, u.username\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$dd_join JOIN data_debug AS dd\n\t\tON dl.id = dd.datasource\n\t\tLEFT JOIN user_auth AS u\n\t\tON u.id = dd.user\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$nav = html_nav_bar('data_debug.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Data Sources'), 'page', 'main');\n\n\tform_start('data_debug.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($checks)) {\n\t\tforeach ($checks as $check) {\n\t\t\tif (isset($check['info']) && $check['info'] != '') {\n\t\t\t\t$info = cacti_unserialize($check['info']);\n\t\t\t} else {\n\t\t\t\t$info = '';\n\t\t\t}\n\n\t\t\tif (isset($check['issue']) && $check['issue'] != '') {\n\t\t\t\t$issues = explode(\"\\n\", $check['issue']);\n\t\t\t} else {\n\t\t\t\t$issues = array();\n\t\t\t}\n\n\t\t\t$iline  = '';\n\n\t\t\tif (cacti_sizeof($issues)) {\n\t\t\t\t$iline = $issues[0];\n\t\t\t}\n\n\t\t\t$issue_title = implode('<br/>',$issues);\n\n\t\t\tform_alternate_row('line' . $check['local_data_id']);\n\n\t\t\t$url = 'data_debug.php?action=view&id=' . $check['local_data_id'];\n\n\t\t\tform_selectable_cell(filter_value($check['name_cache'], get_request_var('rfilter'), $url), $check['local_data_id']);\n\n\t\t\tif (!empty($check['datasource'])) {\n\t\t\t\tform_selectable_ecell($check['username'], $check['local_data_id']);\n\t\t\t\tform_selectable_cell(date($datefmt, $check['started']), $check['local_data_id'], '', 'right');\n\t\t\t\tform_selectable_cell($check['local_data_id'], $check['local_data_id'], '', 'right');\n\t\t\t\tform_selectable_cell(debug_icon(($check['done'] ? ($iline != '' ? 'off' : 'on'):'')), $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell(debug_icon($info['rrd_writable']), $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell(debug_icon($info['rrd_exists']), $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell(debug_icon($info['active']), $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell(debug_icon($info['rrd_match']), $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell(debug_icon($info['valid_data']), $check['local_data_id'], '', 'center');\n\n\t\t\t\tif ($check['done'] && $info['rrd_writable'] == '') {\n\t\t\t\t\tform_selectable_cell(debug_icon('blah'), $check['local_data_id'], '', 'center');\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell(debug_icon(($info['rra_timestamp2'] != '' ? 1 : '')), $check['local_data_id'], '', 'center');\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell(filter_value($iline != '' ? __('Issues') : __('N/A'), '', '#', $issue_title), $check['local_data_id'], '', 'right');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell('-', $check['local_data_id']);\n\t\t\t\tform_selectable_cell(__('Not Debugging'), $check['local_data_id'], '', 'right');\n\t\t\t\tform_selectable_cell($check['local_data_id'], $check['local_data_id'], '', 'right');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'center');\n\t\t\t\tform_selectable_cell('-', $check['local_data_id'], '', 'right');\n\t\t\t}\n\n\t\t\tform_checkbox_cell($check['local_data_id'], $check['local_data_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Source Checks Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($checks)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('save_list', '1', '');\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction debug_view() {\n\tglobal $config, $refresh;\n\n\t$refresh = 60;\n\n\t$id = get_filter_request_var('id');\n\n\t$check = db_fetch_row_prepared('SELECT *\n\t\tFROM data_debug\n\t\tWHERE datasource = ?',\n\t\tarray($id));\n\n\t$check_exists = cacti_sizeof($check);\n\n\tif (isset($check) && is_array($check)) {\n\t\t$check['info'] = cacti_unserialize($check['info']);\n\t}\n\n\t$dtd = db_fetch_row_prepared('SELECT *\n\t\tFROM data_template_data\n\t\tWHERE local_data_id = ?',\n\t\tarray($id));\n\n\tif (cacti_sizeof($dtd)) {\n\t\t$real_path = html_escape(str_replace('<path_rra>', $config['rra_path'], $dtd['data_source_path']));\n\t} else {\n\t\t$real_path = __('Not Found');\n\t}\n\n\t$poller_data = array();\n\n\tif (!empty($check['info']['last_result'])) {\n\t\tforeach ($check['info']['last_result'] as $a => $l) {\n\t\t\t$poller_data[] = \"$a = $l\";\n\t\t}\n\t}\n\t$poller_data = implode('<br>', $poller_data);\n\n\t$rra_updated = '';\n\n\tif (isset($check['info']['rra_timestamp2'])) {\n\t\t$rra_updated = $check['info']['rra_timestamp2'] != '' ? __('Yes') : '';\n\t}\n\n\t$rrd_exists = '';\n\n\tif (isset($check['info']['rrd_exists'])) {\n\t\t$rrd_exists = $check['info']['rrd_exists'] == '1' ? __('Yes') : __('Not Checked Yet');\n\t}\n\n\t$active = '';\n\n\tif (isset($check['info']['active'])) {\n\t\t$active = $check['info']['active'] == 'on' ? __('Yes') : __('Not Checked Yet');\n\t}\n\n\t$issue = '';\n\n\tif (isset($check['issue'])) {\n\t\t$issue = $check['issue'];\n\t}\n\n\tif ($check['done'] == 1) {\n\t\tif ($issue != '') {\n\t\t\t$issue_icon = debug_icon(0);\n\t\t} else {\n\t\t\t$issue_icon = debug_icon(1);\n\t\t}\n\t} else {\n\t\tif (isset($check['info']['rrd_match_array']['ds'])) {\n\t\t\tif ($check['info']['rrd_match'] == 0) {\n\t\t\t\t$issue_icon = debug_icon('blah');\n\t\t\t\t$issue      = __('Issues found!  Waiting on RRDfile update');\n\t\t\t} else {\n\t\t\t\t$issue_icon = debug_icon('');\n\t\t\t\t$issue      = __('No Initial found!  Waiting on RRDfile update');\n\t\t\t}\n\t\t} else {\n\t\t\t$issue_icon = debug_icon('');\n\t\t\t$issue      = __('Waiting on analysis and RRDfile update');\n\t\t}\n\t}\n\n\t$fields = array(\n\t\tarray(\n\t\t\t'name'  => 'owner',\n\t\t\t'title' => __('RRDfile Owner'),\n\t\t\t'icon'  => '-'\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'runas_website',\n\t\t\t'title' => __('Website runs as'),\n\t\t\t'icon'  => '-'\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'runas_poller',\n\t\t\t'title' => __('Poller runs as'),\n\t\t\t'icon'  => '-'\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rrd_folder_writable',\n\t\t\t'title' => __('Is RRA Folder writeable by poller?'),\n\t\t\t'value' => dirname($real_path)\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rrd_writable',\n\t\t\t'title' => __('Is RRDfile writeable by poller?'),\n\t\t\t'value' => $real_path\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rrd_exists',\n\t\t\t'title' => __('Does the RRDfile Exist?'),\n\t\t\t'value' => $rrd_exists\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'active',\n\t\t\t'title' => __('Is the Data Source set as Active?'),\n\t\t\t'value' => $active\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'last_result',\n\t\t\t'title' => __('Did the poller receive valid data?'),\n\t\t\t'value' => $poller_data\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rra_updated',\n\t\t\t'title' => __('Was the RRDfile updated?'),\n\t\t\t'value' => '',\n\t\t\t'icon'  => $rra_updated\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rra_timestamp',\n\t\t\t'title' => __('First Check TimeStamp'),\n\t\t\t'icon'  => '-'\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rra_timestamp2',\n\t\t\t'title' => __('Second Check TimeStamp'),\n\t\t\t'icon'  => '-'\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'convert_name',\n\t\t\t'title' => __('Were we able to convert the title?'),\n\t\t\t'value' => html_escape(get_data_source_title($check['datasource']))\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'rrd_match',\n\t\t\t'title' => __('Data Source matches the RRDfile?'),\n\t\t\t'value' => ''\n\t\t),\n\t\tarray(\n\t\t\t'name'  => 'issue',\n\t\t\t'title' => __('Issues'),\n\t\t\t'value' => $issue,\n\t\t\t'icon'  => $issue_icon\n\t\t),\n\t);\n\n\t$debug_status = debug_process_status($id);\n\n\tif ($debug_status == 'waiting') {\n\t\thtml_start_box(__('Data Source Troubleshooter [ Auto Refreshing till Complete ] %s', '<i class=\"reloadquery ti ti-refresh\" data-id=\"' . $id . '\" title=\"' . __esc('Refresh Now') . '\"></i>'), '100%', '', '3', 'center', '');\n\t} elseif ($debug_status == 'analysis') {\n\t\thtml_start_box(__('Data Source Troubleshooter [ Auto Refreshing till RRDfile Update ] %s', '<i class=\"reloadquery ti ti-refresh\" data-id=\"' . $id . '\" title=\"' . __esc('Refresh Now') . '\"></i>'), '100%', '', '3', 'center', '');\n\t} else {\n\t\thtml_start_box(__('Data Source Troubleshooter [ Analysis Complete! %s ]', '<a href=\"#\" class=\"rerun linkEditMain\" data-id=\"' . $id . '\" style=\"cursor:pointer;\">' . __('Rerun Analysis') . '</a>'), '100%', '', '3', 'center', '');\n\t}\n\n\thtml_header(\n\t\tarray(\n\t\t\t__('Check'),\n\t\t\t__('Value'),\n\t\t\t__('Results')\n\t\t)\n\t);\n\n\t$i = 1;\n\n\tforeach ($fields as $field) {\n\t\t$field_name = $field['name'];\n\n\t\tform_alternate_row('line' . $i);\n\t\tform_selectable_ecell($field['title'], $i);\n\n\t\t$value = __('<not set>');\n\t\t$icon  = '';\n\n\t\tif (array_key_exists($field_name, $check['info'])) {\n\t\t\t$value = $check['info'][$field_name];\n\n\t\t\tif ($field_name == 'last_result') {\n\t\t\t\t$icon  = debug_icon_valid_result($value);\n\t\t\t} else {\n\t\t\t\t$icon  = debug_icon($value);\n\t\t\t}\n\t\t}\n\n\t\tif (array_key_exists('value', $field)) {\n\t\t\t$value = $field['value'];\n\t\t}\n\n\t\tif (array_key_exists('icon', $field)) {\n\t\t\t$icon = $field['icon'];\n\t\t}\n\n\t\t$value_title = $value;\n\n\t\tif (strlen($value) > 100) {\n\t\t\t$value = substr($value, 0, 100);\n\t\t}\n\n\t\tform_selectable_ecell($value, $i, '', '', $value_title);\n\t\tform_selectable_cell($icon, $i);\n\n\t\tform_end_row();\n\t\t$i++;\n\t}\n\n\thtml_end_box();\n\n\tif ($check_exists > 0 && isset($check['info']['rrd_match_array']['ds']) && $check['info']['rrd_match'] == 0) {\n\t\thtml_start_box(__('Data Source Repair Recommendations'), '', '', '2', 'center', '');\n\n\t\thtml_header(\n\t\t\tarray(\n\t\t\t\t__('Data Source'),\n\t\t\t\t__('Issue')\n\t\t\t)\n\t\t);\n\n\t\tif (isset($check['info']['rrd_match_array']['ds'])) {\n\t\t\t$i = 0;\n\n\t\t\tforeach ($check['info']['rrd_match_array']['ds'] as $data_source => $details) {\n\t\t\t\tform_alternate_row('line2_' . $i, true);\n\t\t\t\tform_selectable_ecell($data_source, $i);\n\n\t\t\t\t$output = '';\n\n\t\t\t\tforeach ($details as $attribute => $recommendation) {\n\t\t\t\t\t$output .= __('For attribute \\'%s\\', issue found \\'%s\\'', $attribute, $recommendation);\n\t\t\t\t}\n\n\t\t\t\tform_selectable_ecell($output, 'line_2' . $i);\n\t\t\t\tform_end_row();\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tif (isset($check['info']['rrd_match_array']['tune'])) {\n\t\t\t$path = get_data_source_path($id, true);\n\n\t\t\tif (is_writeable($path)) {\n\t\t\t\thtml_start_box(__('Repair Steps [ %s ]', '<a href=\"#\" class=\"repairme linkEditMain\" data-id=\"' . $id . '\" style=\"cursor:pointer;\">' . __('Apply Suggested Fixes') . '</a>'), '', '', '2', 'center', '');\n\t\t\t} else {\n\t\t\t\thtml_start_box(__('Repair Steps [ Run Fix from Command Line ]', $path), '', '', '2', 'center', '');\n\t\t\t}\n\n\t\t\thtml_header(array(__('Command')));\n\t\t\t$rrdtool_path = read_config_option('path_rrdtool');\n\n\t\t\t$i = 0;\n\n\t\t\tforeach ($check['info']['rrd_match_array']['tune'] as $options) {\n\t\t\t\tform_alternate_row('line3_' . $i, true);\n\t\t\t\tform_selectable_ecell($rrdtool_path . ' tune ' . $options, 'line3_' . $i);\n\t\t\t\tform_end_row();\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\thtml_end_box();\n\t\t}\n\t} else {\n\t\thtml_start_box(__('Data Source Repair Recommendations'), '', '', '2', 'center', '');\n\t\tform_alternate_row('line3_0', true);\n\t\tform_selectable_cell(__('Waiting on Data Source Check to Complete'), 'line3_0');\n\t\tform_end_row();\n\t\thtml_end_box();\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.repairme').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tid = $(this).attr('data-id');\n\t\t\tloadUrl({url:'data_debug.php?action=run_repair&id=' + id})\n\t\t});\n\n\t\t$('.reloadquery').click(function() {\n\t\t\tid = $(this).attr('data-id');\n\t\t\tloadUrl({url:'data_debug.php?action=view&id=' + id})\n\t\t});\n\n\t\t$('.rerun').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tid = $(this).attr('data-id');\n\t\t\tloadUrl({url:'data_debug.php?action=run_debug&id=' + id})\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction debug_icon_valid_result($result) {\n\tif ($result === '' || $result === false) {\n\t\treturn '<i class=\"ti ti-loader fa-pulse fa-fw\"></i>';\n\t}\n\n\tif ($result === '-') {\n\t\treturn '<i class=\"ti ti-info-circle-filled\"></i>';\n\t}\n\n\tif (is_array($result)) {\n\t\tforeach ($result as $variable => $value) {\n\t\t\tif (!prepare_validate_result($value)) {\n\t\t\t\treturn '<i class=\"ti ti-x\" style=\"color:red\"></i>';\n\t\t\t}\n\t\t}\n\n\t\treturn '<i class=\"ti ti-check\" style=\"color:green\"></i>';\n\t}\n\n\tif (prepare_validate_result($result)) {\n\t\treturn '<i class=\"ti ti-check\" style=\"color:green\"></i>';\n\t} else {\n\t\treturn '<i class=\"ti ti-x\" style=\"color:red\"></i>';\n\t}\n}\n\nfunction debug_icon($result) {\n\tif ($result === '' || $result === false) {\n\t\treturn '<i class=\"ti ti-loader fa-pulse fa-fw\"></i>';\n\t}\n\n\tif ($result === '-') {\n\t\treturn '<i class=\"ti ti-info-circle-filled\"></i>';\n\t}\n\n\tif ($result === 1 || $result === 'on') {\n\t\treturn '<i class=\"ti ti-check\" style=\"color:green\"></i>';\n\t}\n\n\tif ($result === 0 || $result === 'off') {\n\t\treturn '<i class=\"ti ti-x\" style=\"color:red\"></i>';\n\t}\n\n\treturn '<i class=\"ti ti-alert-triangle-filled\" style=\"color:orange\"></i>';\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $page_refresh_interval;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\t$deleted = array('-2' => __('Deleted/Invalid'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $sites;\n\n\t$profiles = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM data_source_profiles\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$profiles = $all + $profiles;\n\n\t$status = array(\n\t\t'-1' => __('All'),\n\t\t'0'  => __('Failed'),\n\t\t'1'  => __('Enabled'),\n\t\t'2'  => __('Disabled')\n\t);\n\n\t$debugging = array(\n\t\t'-1' => __('All'),\n\t\t'1'  => __('Debugging'),\n\t\t'0'  => __('Not Debugging')\n\t);\n\n\tunset($page_refresh_interval[5]);\n\tunset($page_refresh_interval[10]);\n\tunset($page_refresh_interval[20]);\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$host_id = get_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where    = 'AND h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == 0) {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t} else {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t}\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$sql_where    = 'AND site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\t$templates = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT dt.id, dt.name\n\t\t\tFROM data_template AS dt\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dt.id = dtd.data_template_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON dl.host_id = h.id\n\t\t\tWHERE dtd.local_data_id > 0\n\t\t\t$sql_where\n\t\t\tORDER BY dt.name\",\n\t\t\t$sql_params),\n\t\t'id', 'name'\n\t);\n\n\t$templates = $any + $templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Site'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sites,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'        => 'drop_callback',\n\t\t\t\t\t'friendly_name' => __('Device'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'sql'           => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'        => 'ajax_hosts',\n\t\t\t\t\t'id'            => $host_id,\n\t\t\t\t\t'value'         => $hostname,\n\t\t\t\t\t'on_change'     => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'profile' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Profile'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $profiles,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'debug' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Debug'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $debugging,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'refresh' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Refresh'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '30',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $page_refresh_interval,\n\t\t\t\t\t'value'         => '30'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'rfilter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_IS_REGEX,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '55',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Attempts'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Purge'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Purge User log of all but the last login attempt'),\n\t\t\t),\n\t\t\t'runall' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Run All'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Run a Debug Check on all Data Sources'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name_cache',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$hostname = db_fetch_cell_prepared('SELECT CONCAT(description, \" ( \", hostname, \" )\")\n\t\t\tFROM host WHERE id = ?',\n\t\t\tarray(get_request_var('host_id')));\n\t} else {\n\t\t$hostname = '';\n\t}\n\n\tif (empty($hostname)) {\n\t\tif (get_request_var('host_id') == -1) {\n\t\t\t$header = __('All Devices');\n\t\t} else {\n\t\t\t$header = __('No Devices');\n\t\t}\n\t} else {\n\t\t$header = html_escape($hostname);\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'data_debug.php', 'form_data_debug', 'sess_data_debug');\n\n\t$pageFilter->rows_label = __('Data Sources');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "data_input.php",
          "type": "blob",
          "size": 28.1953125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'field_remove_confirm':\n\t\tfield_remove_confirm();\n\n\t\tbreak;\n\tcase 'field_remove':\n\t\tfield_remove();\n\n\t\theader('Location: data_input.php?action=edit&id=' . get_filter_request_var('data_input_id'));\n\n\t\tbreak;\n\tcase 'field_edit':\n\t\ttop_header();\n\n\t\tfield_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tdata();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/**\n * form_save - Saves the data input method\n */\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_data_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']           = get_nfilter_request_var('id');\n\t\t$save['hash']         = get_hash_data_input(get_nfilter_request_var('id'));\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['input_string'] = form_input_validate(get_nfilter_request_var('input_string'), 'input_string', '', true, 3);\n\t\t$save['type_id']      = form_input_validate(get_nfilter_request_var('type_id'), 'type_id', '^[0-9]+$', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_id = sql_save($save, 'data_input');\n\n\t\t\tif ($data_input_id) {\n\t\t\t\tdata_input_save_message($data_input_id);\n\n\t\t\t\t/* get a list of each field so we can note their sequence of occurrence in the database */\n\t\t\t\tif (!isempty_request_var('id')) {\n\t\t\t\t\tdb_execute_prepared('UPDATE data_input_fields SET sequence = 0 WHERE data_input_id = ?', array(get_nfilter_request_var('id')));\n\n\t\t\t\t\tgenerate_data_input_field_sequences(get_nfilter_request_var('input_string'), get_nfilter_request_var('id'));\n\n\t\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t\t}\n\n\t\t\t\tpush_out_data_input_method($data_input_id);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php?action=edit&id=' . (empty($data_input_id) ? get_nfilter_request_var('id') : $data_input_id));\n\t} elseif (isset_request_var('save_component_field')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('sequence');\n\t\tget_filter_request_var('input_output', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t\t/* ==================================================== */\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_input(get_nfilter_request_var('id'), 'data_input_field');\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('fname'), 'fname', '', false, 3);\n\t\t$save['data_name']     = form_input_validate(get_nfilter_request_var('data_name'), 'data_name', '', false, 3);\n\t\t$save['input_output']  = get_nfilter_request_var('input_output');\n\t\t$save['update_rra']    = form_input_validate((isset_request_var('update_rra') ? get_nfilter_request_var('update_rra') : ''), 'update_rra', '', true, 3);\n\t\t$save['sequence']      = get_request_var('sequence');\n\t\t$save['type_code']     = form_input_validate((isset_request_var('type_code') ? get_nfilter_request_var('type_code') : ''), 'type_code', '', true, 3);\n\t\t$save['regexp_match']  = form_input_validate((isset_request_var('regexp_match') ? get_nfilter_request_var('regexp_match') : ''), 'regexp_match', '', true, 3);\n\t\t$save['allow_nulls']   = form_input_validate((isset_request_var('allow_nulls') ? get_nfilter_request_var('allow_nulls') : ''), 'allow_nulls', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_field_id = sql_save($save, 'data_input_fields');\n\n\t\t\tif ($data_input_field_id) {\n\t\t\t\tdata_input_save_message(get_request_var('data_input_id'), 'field');\n\n\t\t\t\tif ((!empty($data_input_field_id)) && (get_request_var('input_output') == 'in')) {\n\t\t\t\t\tgenerate_data_input_field_sequences(db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(get_request_var('data_input_id'))), get_request_var('data_input_id'));\n\t\t\t\t}\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_input.php?action=field_edit&data_input_id=' . get_request_var('data_input_id') . '&id=' . (empty($data_input_field_id) ? get_request_var('id') : $data_input_field_id) . (!isempty_request_var('input_output') ? '&type=' . get_request_var('input_output') : ''));\n\t\t} else {\n\t\t\theader('Location: data_input.php?action=edit&id=' . get_request_var('data_input_id'));\n\t\t}\n\t}\n}\n\nfunction data_input_save_message($data_input_id, $type = 'input') {\n\t$counts = db_fetch_row_prepared('SELECT\n\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_input AS di\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON di.id=dtd.data_input_id\n\t\tWHERE di.id = ?',\n\t\tarray($data_input_id));\n\n\tif ($counts['templates'] == 0 && $counts['data_sources'] == 0) {\n\t\traise_message(1);\n\t} elseif ($counts['templates'] > 0 && $counts['data_sources'] == 0) {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_wo_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_wo_ds');\n\t\t}\n\t} else {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_w_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_w_ds');\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_input_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_input_duplicate($selected_items[$i], get_nfilter_request_var('input_title'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the data inputs and process them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_input WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'data_input.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Data Input Method.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Data Input Methods.'),\n\t\t\t\t\t'scont'    => __('Delete Data Input Method'),\n\t\t\t\t\t'pcont'    => __('Delete Data Input Methods')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Data Input Method.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Data Input Methods.'),\n\t\t\t\t\t'scont'    => __('Duplicate Data Input Method'),\n\t\t\t\t\t'pcont'    => __('Duplicate Data Input Methods'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'input_title' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Input Name'),\n\t\t\t\t\t\t\t'default' => '<input_title> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction field_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\tform_start('data_input.php?action=edit&id' . get_request_var('data_input_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$field = db_fetch_row_prepared('SELECT *\n\t\tFROM data_input_fields\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Input Field.');?></p>\n\t\t\t<p><?php print __esc('Field Name: %s', $field['data_name']);?><br>\n\t\t\t<p><?php print __esc('Friendly Name: %s', $field['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').unbind('click').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'data_input.php?action=field_remove',\n\t\t\t\tfuncEnd: 'removeDataInputFieldFinalize'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tdata_input_id: <?php print get_request_var('data_input_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t});\n\n\tfunction removeDataInputFieldFinalize(data) {\n\t\tloadUrl({url:'data_input.php?action=edit&id=<?php print get_request_var('data_input_id');?>'})\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction field_remove() {\n\tglobal $registered_cacti_names;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\t/* get information about the field we're going to delete so we can re-order the seqs */\n\t$field = db_fetch_row_prepared('SELECT input_output, data_input_id\n\t\tFROM data_input_fields\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE FROM data_input_fields WHERE id = ?', array(get_request_var('id')));\n\tdb_execute_prepared('DELETE FROM data_input_data WHERE data_input_field_id = ?', array(get_request_var('id')));\n\n\t/* when a field is deleted; we need to re-order the field sequences */\n\tif (($field['input_output'] == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array($field['data_input_id'])), $matches))) {\n\t\t$j = 0;\n\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names, true) == false) {\n\t\t\t\t$j++;\n\t\t\t\tdb_execute_prepared(\"UPDATE data_input_fields SET sequence = ? WHERE data_input_id = ? AND input_output = 'in' AND data_name = ?\", array($j, $field['data_input_id'], $matches[1][$i]));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n}\n\nfunction field_edit() {\n\tglobal $registered_cacti_names, $fields_data_input_field_edit_1, $fields_data_input_field_edit_2, $fields_data_input_field_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\tget_filter_request_var('type', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t/* ==================================================== */\n\n\t$array_field_names = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$field = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif (!isempty_request_var('type')) {\n\t\t$current_field_type = get_request_var('type');\n\t} else {\n\t\t$current_field_type = $field['input_output'];\n\t}\n\n\t$data_input = db_fetch_row_prepared('SELECT type_id, name\n\t\tFROM data_input\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('data_input_id')));\n\n\t/* obtain a list of available fields for this given field type (input/output) */\n\tif (($current_field_type == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(!isempty_request_var('data_input_id') ? get_request_var('data_input_id') : $field['data_input_id'])), $matches))) {\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names, true) == false) {\n\t\t\t\t$current_field_name                     = $matches[1][$i];\n\t\t\t\t$array_field_names[$current_field_name] = $current_field_name;\n\n\t\t\t\tif (!isset($field)) {\n\t\t\t\t\t$field_id = db_fetch_cell_prepared('SELECT id FROM data_input_fields\n\t\t\t\t\t\tWHERE data_name = ?\n\t\t\t\t\t\tAND data_input_id = ?',\n\t\t\t\t\t\tarray($current_field_name, get_filter_request_var('data_input_id')));\n\n\t\t\t\t\tif (!$field_id > 0) {\n\t\t\t\t\t\t$field              = array();\n\t\t\t\t\t\t$field['name']      = ucwords($current_field_name);\n\t\t\t\t\t\t$field['data_name'] = $current_field_name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* if there are no input fields to choose from, complain */\n\tif ((!isset($array_field_names)) && (isset_request_var('type') ? get_request_var('type') == 'in' : false) && ($data_input['type_id'] == '1')) {\n\t\traise_message('invalid_inputs', __('This script appears to have no input values, therefore there is nothing to add.'), MESSAGE_LEVEL_WARN);\n\t\theader('Location: data_input.php?action=edit&id=' . get_filter_request_var('data_input_id'));\n\n\t\texit;\n\t}\n\n\tif ($current_field_type == 'out') {\n\t\t$header_name = __esc('Output Fields [edit: %s]', $data_input['name']);\n\t\t$dfield      = __('Output Field');\n\t} elseif ($current_field_type == 'in') {\n\t\t$header_name = __esc('Input Fields [edit: %s]', $data_input['name']);\n\t\t$dfield      = __('Input Field');\n\t}\n\n\tif (isset($field)) {\n\t\t$dfield .= ' ' . html_escape($field['data_name']);\n\t}\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_name, '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\t/* field name */\n\tif ((($data_input['type_id'] == '1') || ($data_input['type_id'] == '5')) && ($current_field_type == 'in')) { /* script */\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_1, $dfield, $array_field_names, (isset($field) ? $field : array()));\n\t} elseif ($current_field_type == 'out' || ($data_input['type_id'] != 1 && $data_input['type_id'] != 5)) {\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_2, $dfield, (isset($field) ? $field : array()));\n\t}\n\n\t/* ONLY if the field is an input */\n\tif ($current_field_type == 'in') {\n\t\tunset($fields_data_input_field_edit['update_rra']);\n\t} elseif ($current_field_type == 'out') {\n\t\tunset($fields_data_input_field_edit['regexp_match']);\n\t\tunset($fields_data_input_field_edit['allow_nulls']);\n\t\tunset($fields_data_input_field_edit['type_code']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + inject_form_variables($fields_data_input_field_edit, (isset($field) ? $field : array()), $current_field_type, $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('data_input.php?action=edit&id=' . get_request_var('data_input_id'));\n}\n\nfunction data_edit() {\n\tglobal $config, $fields_data_input_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_id = get_nonsystem_data_input(get_request_var('id'));\n\n\t\tif ($data_id == 0 || $data_id == null) {\n\t\t\theader('Location: data_input.php');\n\n\t\t\treturn;\n\t\t}\n\n\t\t$data_input = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Data Input Method [edit: %s]', $data_input['name']);\n\t} else {\n\t\t$data_input = array();\n\n\t\t$header_label = __('Data Input Method [new]');\n\t}\n\n\tif (!isset($config['input_whitelist'])) {\n\t\tunset($fields_data_input_edit['whitelist_verification']);\n\t}\n\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_input)) {\n\t\tswitch ($data_input['type_id']) {\n\t\t\tcase DATA_INPUT_TYPE_SNMP:\n\t\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP] = __('SNMP Get');\n\n\t\t\t\tbreak;\n\t\t\tcase DATA_INPUT_TYPE_SNMP_QUERY:\n\t\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP_QUERY] = __('SNMP Query');\n\n\t\t\t\tbreak;\n\t\t\tcase DATA_INPUT_TYPE_SCRIPT_QUERY:\n\t\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SCRIPT_QUERY] = __('Script Query');\n\n\t\t\t\tbreak;\n\t\t\tcase DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER:\n\t\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER] = __('Script Server Query');\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (isset($config['input_whitelist']) && isset($data_input['hash'])) {\n\t\t\t$aud = verify_data_input_whitelist($data_input['hash'], $data_input['input_string']);\n\n\t\t\tif ($aud === true) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Succeeded.');\n\t\t\t} elseif ($aud == false) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Failed.  Run CLI script input_whitelist.php to correct.');\n\t\t\t} elseif ($aud == '-1') {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('Input String does not exist in White List.  Run CLI script input_whitelist.php to correct.');\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_input_edit, $data_input)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\tif (api_data_input_more_inputs(get_request_var('id'), $data_input['input_string'])) {\n\t\t\t$url = 'data_input.php?action=field_edit&type=in&data_input_id=' . get_request_var('id');\n\t\t} else {\n\t\t\t$url = '';\n\t\t}\n\n\t\t$display_text = array(\n\t\t\t__('Name'),\n\t\t\t__('Friendly Name'),\n\t\t\t__('Field Order')\n\t\t);\n\n\t\thtml_start_box(__('Input Fields'), '100%', '', '3', 'center', $url);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, data_name, name, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$counts = db_fetch_row_prepared('SELECT\n\t\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_input AS di\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON di.id=dtd.data_input_id\n\t\t\tWHERE di.id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$output_disabled  = false;\n\t\t$save_alt_message = false;\n\n\t\tif (!cacti_sizeof($counts)) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = false;\n\t\t} elseif ($counts['data_sources'] > 0) {\n\t\t\t$output_disabled  = true;\n\t\t\t$save_alt_message = true;\n\t\t} elseif ($counts['templates'] > 0) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = true;\n\t\t}\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('line' . $i, true);\n\n\t\t\t\t$url = 'data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id');\n\n\t\t\t\tform_selectable_cell(filter_value($field['data_name'], '', $url), $i);\n\n\t\t\t\tform_selectable_ecell($field['name'], $i);\n\n\t\t\t\tif ($field['sequence'] == '0') {\n\t\t\t\t\t$field['sequence'] .= ' ' . __('(Not In Use)');\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($field['sequence'], $i);\n\n\t\t\t\tform_selectable_cell(\"<a class='delete deleteMarker ti ti-x' href='\" . html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id')) . \"' title='\" . __esc('Delete') . \"'></a>\", $i, '', 'right');\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"4\"><em>' . __('No Input Fields') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\t$display_text = array(\n\t\t\t__('Name'),\n\t\t\t__('Friendly Name'),\n\t\t\t__('Update RRA')\n\t\t);\n\n\t\thtml_start_box(__('Output Fields'), '100%', '', '3', 'center', 'data_input.php?action=field_edit&type=out&data_input_id=' . get_request_var('id'));\n\n\t\thtml_header($display_text, 2);\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, name, data_name, update_rra, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'out'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('line' . $i, true);\n\n\t\t\t\t$url = 'data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id');\n\n\t\t\t\tform_selectable_cell(filter_value($field['data_name'], '', $url), $i);\n\n\t\t\t\tform_selectable_ecell($field['name'], $i);\n\n\t\t\t\tform_selectable_cell(html_boolean_friendly($field['update_rra']), $i);\n\n\t\t\t\tif ($output_disabled) {\n\t\t\t\t\tform_selectable_cell(\"<a class='deleteMarkerDisabled ti ti-x' href='#' title='\" . __esc('Output Fields can not be removed when Data Sources are present') . \"'></a>\", $i);\n\t\t\t\t} else {\n\t\t\t\t\t$url = html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));\n\n\t\t\t\t\tform_selectable_cell(\"<a class='delete deleteMarker ti ti-x' href='$url' title='\" . __esc('Delete') . \"'></a>\", $id, '', 'right');\n\t\t\t\t}\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"4\"><em>' . __('No Output Fields') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_input.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div id='cdialog' class='cdialog'></div>\");\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Input Field');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tmodal: false,\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data() {\n\tglobal $input_types, $actions, $item_rows, $hash_system_data_inputs;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Data Input Methods'), 'data_input.php', 'form_data_input', 'sess_data_input', 'data_input.php?action=edit');\n\n\t$pageFilter->rows_label = __('Input Methods');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (di.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . ' (di.hash NOT IN (\"' . implode('\",\"', $hash_system_data_inputs) . '\"))';\n\n\t$sql_where  = api_plugin_hook_function('data_input_sql_where', $sql_where);\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM data_input AS di\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$data_inputs = db_fetch_assoc(\"SELECT di.*\n\t\tFROM data_input AS di\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_input.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Input Methods'), 'page', 'main');\n\n\tform_start('data_input.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'         => array('display' => __('Data Input Name'),    'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Input Method.')),\n\t\t'id'           => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Data Input Method.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Data Inputs that are in use cannot be Deleted. In use is defined as being referenced either by a Data Source or a Data Template.')\n\t\t),\n\t\t'data_sources' => array(\n\t\t\t'display' => __('Data Sources Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Data Sources that use this Data Input Method.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Data Templates that use this Data Input Method.')\n\t\t),\n\t\t'type_id' => array(\n\t\t\t'display' => __('Data Input Method'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The method used to gather information for this Data Input Method.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($data_inputs)) {\n\t\tforeach ($data_inputs as $data_input) {\n\t\t\t/* hide system types */\n\t\t\tif ($data_input['templates'] > 0 || $data_input['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $data_input['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($data_input['name'], get_request_var('filter'), 'data_input.php?action=edit&id=' . $data_input['id']), $data_input['id']);\n\t\t\tform_selectable_cell($data_input['id'], $data_input['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $data_input['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['data_sources'], '-1'), $data_input['id'],'', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['templates'], '-1'), $data_input['id'],'', 'right');\n\t\t\tform_selectable_cell($input_types[$data_input['type_id']], $data_input['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($data_input['name'], $data_input['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Data Input Methods Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_inputs)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "data_queries.php",
          "type": "blob",
          "size": 45.884765625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_moveup_dssv':\n\t\tdata_query_item_moveup_dssv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_movedown_dssv':\n\t\tdata_query_item_movedown_dssv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_remove_dssv':\n\t\tdata_query_item_remove_dssv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_moveup_gsv':\n\t\tdata_query_item_moveup_gsv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_movedown_gsv':\n\t\tdata_query_item_movedown_gsv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_remove_gsv':\n\t\tdata_query_item_remove_gsv();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tdata_query_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tdata_query_item_remove();\n\n\t\theader('Location: data_queries.php?action=edit&id=' . get_filter_request_var('snmp_query_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\tdata_query_item_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'remove':\n\t\tdata_query_remove();\n\n\t\theader('Location: data_queries.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_query_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tdata_query();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_snmp_query')) {\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_query(get_nfilter_request_var('id'));\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['description']   = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['xml_path']      = form_input_validate(trim(get_nfilter_request_var('xml_path')), 'xml_path', '', false, 3);\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\n\t\t// Detect changing input id\n\t\tif (!empty($save['id'])) {\n\t\t\t$previous_input_id = db_fetch_cell_prepared('SELECT data_input_id\n\t\t\t\tFROM snmp_query\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($save['id']));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$snmp_query_id = sql_save($save, 'snmp_query');\n\n\t\t\tif ($snmp_query_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tif (isset($previous_input_id) && $previous_input_id > 0) {\n\t\t\t\t\tdata_query_update_input_method($snmp_query_id, $previous_input_id, $save['data_input_id']);\n\t\t\t\t}\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?action=edit&id=' . (empty($snmp_query_id) ? get_request_var('id') : $snmp_query_id));\n\t} elseif (isset_request_var('save_component_snmp_query_item') && !isset_request_var('svg_x') && !isset_request_var('svds_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']                = get_request_var('id');\n\t\t$save['hash']              = get_hash_data_query(get_nfilter_request_var('id'), 'data_query_graph');\n\t\t$save['snmp_query_id']     = get_request_var('snmp_query_id');\n\t\t$save['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['graph_template_id'] = get_request_var('graph_template_id');\n\n\t\t$errors = false;\n\n\t\tif (!is_error_message()) {\n\t\t\tif ($save['id'] > 0) {\n\t\t\t\t$errors = api_data_query_errors($save['id'], $_POST);\n\t\t\t}\n\n\t\t\tif ($errors === false) {\n\t\t\t\t$snmp_query_graph_id = sql_save($save, 'snmp_query_graph');\n\n\t\t\t\tif ($snmp_query_graph_id) {\n\t\t\t\t\traise_message(1);\n\n\t\t\t\t\t/* if the user changed the graph template, go through and delete everything that\n\t\t\t\t\twas associated with the old graph template */\n\t\t\t\t\tif (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\t\tFROM snmp_query_graph_sv\n\t\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\t\tarray($snmp_query_graph_id));\n\t\t\t\t\t}\n\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\t\t\tif (preg_match('/^dsdt_([0-9]+)_([0-9]+)_check/i', $var)) {\n\t\t\t\t\t\t\t$data_template_id     = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', '\\\\1', $var);\n\t\t\t\t\t\t\t$data_template_rrd_id = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', '\\\\2', $var);\n\t\t\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\t\t\tinput_validate_input_number($data_template_id, 'dsdt->data_template_id');\n\t\t\t\t\t\t\tinput_validate_input_number($data_template_rrd_id, 'dsdt->data_template_rrd_id');\n\t\t\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO snmp_query_graph_rrd\n\t\t\t\t\t\t\t\t(snmp_query_graph_id, data_template_id, data_template_rrd_id, snmp_field_name)\n\t\t\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t$snmp_query_graph_id,\n\t\t\t\t\t\t\t\t\t$data_template_id,\n\t\t\t\t\t\t\t\t\t$data_template_rrd_id,\n\t\t\t\t\t\t\t\t\tget_nfilter_request_var('dsdt_' .\n\t\t\t\t\t\t\t\t\t$data_template_id . '_' .\n\t\t\t\t\t\t\t\t\t$data_template_rrd_id . '_snmp_field_output')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . (empty($snmp_query_graph_id) ? get_request_var('id') : $snmp_query_graph_id) . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('save_component_svg')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isempty_request_var('svg_text')) {\n\t\t\traise_message(39);\n\t\t\theader('Location: data_queries.php?action=item_edit&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (isempty_request_var('svg_field')) {\n\t\t\traise_message(38);\n\t\t\theader('Location: data_queries.php?action=item_edit&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\treturn;\n\t\t}\n\n\t\t/* suggested values -- graph templates */\n\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_sv', 'snmp_query_graph_id = ' . get_filter_request_var('id') . ' AND field_name = ' . db_qstr(get_nfilter_request_var('svg_field')));\n\n\t\t$hash = get_hash_data_query(0, 'data_query_sv_graph');\n\n\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_sv\n\t\t\t(hash, snmp_query_graph_id, sequence, field_name, text)\n\t\t\tVALUES (?, ?, ?, ?, ?)',\n\t\t\tarray(\n\t\t\t\t$hash,\n\t\t\t\tget_request_var('id'),\n\t\t\t\t$sequence,\n\t\t\t\tget_nfilter_request_var('svg_field'),\n\t\t\t\tget_nfilter_request_var('svg_text')\n\t\t\t)\n\t\t);\n\n\t\tdb_execute_prepared('UPDATE snmp_query\n\t\t\tSET last_updated = NOW()\n\t\t\tWHERE id = ?',\n\t\t\tget_request_var('id'));\n\n\t\tclear_messages();\n\n\t\theader('Location: data_queries.php?action=item_edit&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('save_component_svds')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('svds_id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isset_request_var('svds_id')) {\n\t\t\t$svds_id = get_request_var('svds_id');\n\n\t\t\tif (isempty_request_var('svds_text')) {\n\t\t\t\traise_message(39);\n\t\t\t\theader('Location: data_queries.php?action=item_edit&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isempty_request_var('svds_field')) {\n\t\t\t\traise_message(38);\n\t\t\t\theader('Location: data_queries.php?action=item_edit&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_rrd_sv', 'snmp_query_graph_id = ' . get_request_var('id')  . ' AND data_template_id = ' . $svds_id . ' AND field_name = ' . db_qstr(get_nfilter_request_var('svds_field')));\n\n\t\t\t$hash = get_hash_data_query(0, 'data_query_sv_data_source');\n\n\t\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_rrd_sv\n\t\t\t\t(hash, snmp_query_graph_id, data_template_id, sequence, field_name, text)\n\t\t\t\tVALUES (?, ?, ?, ?, ?, ?)',\n\t\t\t\tarray(\n\t\t\t\t\t$hash,\n\t\t\t\t\tget_request_var('id'),\n\t\t\t\t\t$svds_id,\n\t\t\t\t\t$sequence,\n\t\t\t\t\tget_nfilter_request_var('svds_field'),\n\t\t\t\t\tget_nfilter_request_var('svds_text')\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tdb_execute_prepared('UPDATE snmp_query\n\t\t\t\tSET last_updated = NOW()\n\t\t\t\tWHERE id = ?',\n\t\t\t\tget_request_var('id'));\n\n\t\t\tclear_messages();\n\n\t\t\theader('Location: data_queries.php?action=item_edit?id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tdata_query_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t data_query_duplicate($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\traise_message(40);\n\t\t}\n\n\t\theader('Location: data_queries.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the data queries and process them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM snmp_query\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($matches[1]));\n\n\t\t\t\t$ilist .= '<li>' . html_escape($name) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'data_queries.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Data Query.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Data Queries.'),\n\t\t\t\t\t'scont'    => __('Delete Data Query'),\n\t\t\t\t\t'pcont'    => __('Delete Data Queries')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Data Query.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Data Queries.'),\n\t\t\t\t\t'scont'    => __('Duplicate Data Query'),\n\t\t\t\t\t'pcont'    => __('Duplicate Data Queries'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'name_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Name Format'),\n\t\t\t\t\t\t\t'default' => '<dataquery_name> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction data_query_item_movedown_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . ' AND field_name = ' . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . ' AND field_name = ' . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_remove_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM snmp_query_graph_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_movedown_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . ' AND field_name = ' . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . ' AND field_name = ' . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_sv_check_sequences($type, $snmp_query_graph_id, $field_name) {\n\tif ($type == 'ds' || $type == 'gr') {\n\t\tif ($type == 'ds') {\n\t\t\t$table = 'snmp_query_graph_rrd_sv';\n\t\t} else {\n\t\t\t$table = 'snmp_query_graph_sv';\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\t$bad_seq = db_fetch_cell_prepared(\"SELECT COUNT(sequence)\n\t\tFROM $table\n\t\tWHERE sequence <= 0\n\t\tAND field_name = ?\n\t\tAND snmp_query_graph_id = ?\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t$dup_seq = db_fetch_cell_prepared(\"SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM $table\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t// report any bad or duplicate sequences to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . \" Bad Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . \" Duplicated Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute_prepared(\"SET @seq = 0;\n\t\t\tUPDATE $table\n\t\t\tSET sequence = (@seq:=@seq+1)\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tORDER BY sequence, id;\",\n\t\t\tarray($field_name, $snmp_query_graph_id));\n\t}\n}\n\nfunction data_query_item_remove_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tform_start('data_queries.php?action=edit&id' . get_request_var('snmp_query_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Query Graph Association.');?></p>\n\t\t\t<p><?php print __esc('Graph Name: %s', $graph_template['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Query Graph Template');?>'>\n\t\t\t<input type='hidden' id='snmp_query_graph_id' value='<?php print get_request_var('id');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'data_queries.php?action=item_remove',\n\t\t\t\tfuncEnd: 'removeDataQueryItemFinalize',\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tsnmp_query_id: <?php print get_request_var('snmp_query_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\n\t\t});\n\t});\n\n\tfunction removeDataQueryItemFinalize(data) {\n\t\t$('#cdialog').dialog('close');\n\t\tloadUrl({url:'data_queries.php?action=edit&id=<?php print get_request_var('snmp_query_id');?>'})\n\t}\n\t</script>\n\t<?php\n}\n\nfunction data_query_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_edit() {\n\tglobal $fields_data_query_item_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t$snmp_query   = db_fetch_row_prepared('SELECT name, xml_path\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('snmp_query_id')));\n\n\tif (cacti_sizeof($snmp_query)) {\n\t\t$header_label = __esc('Associated Graph/Data Templates [edit: %s]', $snmp_query['name']);\n\t} else {\n\t\t$header_label = __('Associated Graph/Data Templates [new]');\n\t}\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_item_edit, (isset($snmp_query_item) ? $snmp_query_item : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction assignDataQueryGraphName(init) {\n\t\tif (init == false || $('#name').val() == '') {\n\t\t\t$('#name').val($('#graph_template_id').children(':selected').text());\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('form#data_queries').find('#graph_template_id').change(function() {\n\t\t\tassignDataQueryGraphName(false);\n\t\t});\n\t\tassignDataQueryGraphName(true);\n\t});\n\n\t</script>\n\t<?php\n\n\tif (!empty($snmp_query_item['id'])) {\n\t\thtml_start_box(__('Associated Data Templates'), '100%', '', '3', 'center', '');\n\n\t\t$data_templates = db_fetch_assoc_prepared('SELECT data_template.id, data_template.name\n\t\t\tFROM (data_template, data_template_rrd, graph_templates_item)\n\t\t\tWHERE graph_templates_item.task_item_id = data_template_rrd.id\n\t\t\tAND data_template_rrd.data_template_id = data_template.id\n\t\t\tAND data_template_rrd.local_data_id = 0\n\t\t\tAND graph_templates_item.local_graph_id = 0\n\t\t\tAND graph_templates_item.graph_template_id = ?\n\t\t\tGROUP BY data_template.id\n\t\t\tORDER BY data_template.name', array($snmp_query_item['graph_template_id']));\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\tprint \"<tr class='tableHeader'>\n\t\t\t\t\t<th class='tableSubHeaderColumn'>\" . __esc('Data Template - %s', $data_template['name']) . '</th>\n\t\t\t\t</tr>';\n\n\t\t\t\t$data_template_rrds = db_fetch_assoc_prepared('SELECT dtr.id, dtr.data_source_name,\n\t\t\t\t\tsqgr.snmp_field_name, sqgr.snmp_query_graph_id\n\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\tLEFT JOIN snmp_query_graph_rrd AS sqgr\n\t\t\t\t\tON sqgr.data_template_rrd_id = dtr.id\n\t\t\t\t\tAND sqgr.snmp_query_graph_id = ?\n\t\t\t\t\tAND sqgr.data_template_id = ?\n\t\t\t\t\tWHERE dtr.data_template_id = ?\n\t\t\t\t\tAND dtr.local_data_id = 0\n\t\t\t\t\tORDER BY dtr.data_source_name',\n\t\t\t\t\tarray(get_request_var('id'), $data_template['id'], $data_template['id']));\n\n\t\t\t\t$i = 0;\n\n\t\t\t\tif (cacti_sizeof($data_template_rrds)) {\n\t\t\t\t\tforeach ($data_template_rrds as $data_template_rrd) {\n\t\t\t\t\t\tif (empty($data_template_rrd['snmp_query_graph_id'])) {\n\t\t\t\t\t\t\t$old_value = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$old_value = 'on';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print __('Data Source');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print $data_template_rrd['data_source_name'];?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$snmp_queries = get_data_query_array(get_request_var('snmp_query_id'));\n\t\t\t\t\t\t$xml_outputs      = array();\n\n\t\t\t\t\t\tif (isset($snmp_queries['fields']) && cacti_sizeof($snmp_queries['fields'])) {\n\t\t\t\t\t\t\tforeach ($snmp_queries['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'output' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t\t$xml_outputs[$field_name] = $field_name . ' (' . $field_array['name'] . ')';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tform_dropdown('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_snmp_field_output',$xml_outputs,'','',empty($data_template_rrd['snmp_field_name'])?$data_template_rrd['data_source_name']:$data_template_rrd['snmp_field_name'],'','');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t\t\t\t<?php form_checkbox('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_check', $old_value, '', '', '', get_request_var('id'), '', __('If this Graph Template requires the Data Template Data Source to the left, select the correct XML output column and then to enable the mapping either check or toggle here.'));\n\t\t\t\t\t\tprint '<br>';?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Suggested Values - Graphs'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for graphs templates */\n\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\tFROM snmp_query_graph_sv\n\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\tORDER BY field_name, sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_header(array(\n\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t), 2);\n\n\t\t$i            = 0;\n\t\t$total_values = cacti_sizeof($suggested_values);\n\n\t\tif ($total_values) {\n\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\tdata_query_sv_check_sequences('gr', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\t$show_up   = false;\n\t\t\t\t$show_down = false;\n\n\t\t\t\t// Handle up true\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$show_up = true;\n\t\t\t\t}\n\n\t\t\t\t// Handle down true\n\t\t\t\tif ($total_values > 1 && $i < $total_values - 1) {\n\t\t\t\t\t$show_down = true;\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='center'>\n\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t<a class='remover ti ti-caret-down-filled moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t<a class='remover ti ti-caret-up-filled moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<a class='remover deleteMarker ti ti-x' title='<?php print html_escape(__('Delete'));?>' href='<?php print html_escape('data_queries.php?action=item_remove_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id'));?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr class='tableRow odd'><td colspan='4'><em>\" . __('No Suggested Values Found') . '</em></td></tr>';\n\t\t}\n\n\t\tform_alternate_row();\n\t\t?>\n\t\t<td colspan='4'>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_field' size='15'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_text' size='60'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='svg_x' name='svg_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Graph Title Suggested Name');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t<?php\n\t\tform_end_row();\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Suggested Values - Data Sources'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for data templates */\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\t\t\tAND data_template_id = ?\n\t\t\t\t\tORDER BY field_name, sequence', array(get_request_var('id'), $data_template['id']));\n\n\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\tFROM data_template\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($data_template['id']));\n\n\t\t\t\tprint \"<tr class='tableHeader'><td colspan='4'>\" . html_escape($name) . '</td></tr><tr>';\n\n\t\t\t\thtml_header(array(\n\t\t\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t\t\t), 2);\n\n\t\t\t\t$i            = 0;\n\t\t\t\t$total_values = cacti_sizeof($suggested_values);\n\n\t\t\t\tif ($total_values) {\n\t\t\t\t\t$prev_name = '';\n\n\t\t\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\t\t\tdata_query_sv_check_sequences('ds', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\t\t\tform_alternate_row();\n\n\t\t\t\t\t\t$show_up   = false;\n\t\t\t\t\t\t$show_down = false;\n\n\t\t\t\t\t\t// Handle up true\n\t\t\t\t\t\tif ($i != 0) {\n\t\t\t\t\t\t\t$show_up = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle down true\n\t\t\t\t\t\tif ($total_values > 1 && $i < $total_values - 1) {\n\t\t\t\t\t\t\t$show_down = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='center'>\n\t\t\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t\t\t<a class='remover ti ti-caret-down-filled moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id='. $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t\t\t<a class='remover ti ti-caret-up-filled moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='nowrap left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='remover deleteMarker ti ti-x' title='<?php print __('Delete');?>' href='<?php print html_escape('data_queries.php?action=item_remove_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id']);?>'></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\tform_end_row();\n\n\t\t\t\t\t\t$prev_name = $suggested_value['field_name'];\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr class='tableRow odd'><td colspan='4'><em>\" . __('No Suggested Values Found') . '</em></td></tr>';\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\t\t\t\t?>\n\t\t\t\t<td colspan='4'>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_field ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_field' size='15'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_text ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_text' size='60'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='button' class='svds_x ui-button ui-corner-all ui-widget' id='svds_<?php print $data_template['id'];?>_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Data Source Name Suggested Name');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (isset($snmp_query_item['graph_template_id'])) {\n\t\t$item = $snmp_query_item['graph_template_id'];\n\t} else {\n\t\t$item = 0;\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar graph_template_id_prev=<?php print $item;?>;\n\n\t$('.remover').click(function(event) {\n\t\tevent.preventDefault();\n\t\thref=$(this).attr('href');\n\t\t$.get(href)\n\t\t\t.done(function(data) {\n\t\t\t\t$('form[action=\"data_queries.php\"]').unbind();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t});\n\n\t$('input[id=\"svg_x\"]').click(function() {\n\t\tvar options = {\n\t\t\turl:'data_queries.php'\n\t\t}\n\n\t\tvar data = {\n\t\t\tgraph_template_id_prev:graph_template_id_prev,\n\t\t\taction: 'save',\n\t\t\tsave_component_svg: '1',\n\t\t\tid: $('#id').val(),\n\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\tsvg_field: $('#svg_field').val(),\n\t\t\tsvg_text: $('#svg_text').val(),\n\t\t\tsvg_x:'Add',\n\t\t\t__csrf_magic: csrfMagicToken\n\t\t}\n\n\t\tpostUrl(options, data);\n\t});\n\n\t$('input.svds_x').click(function() {\n\t\t// Get the dsid value\n\t\tvar id    = $(this).attr('id');\n\t\tvar parts = id.split('_');\n\t\tvar sid   = parts[1];\n\n\t\tif (sid != '') {\n\t\t\tvar data = {\n\t\t\t\taction: 'save',\n\t\t\t\tsave_component_svds: '1',\n\t\t\t\tid: $('#id').val(),\n\t\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\t\t'svds_field': $('#svds_'+sid+'_field').val(),\n\t\t\t\t'svds_text': $('#svds_'+sid+'_text').val(),\n\t\t\t\t'svds_id': sid,\n\t\t\t\theader: 'false',\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t};\n\n\t\t\tpostURL({url:'data_queries.php'}, data);\n\t\t}\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('data_queries.php?action=edit&id=' . get_request_var('snmp_query_id'), 'return');\n}\n\nfunction data_query_remove($id) {\n\t$snmp_query_graph = db_fetch_assoc_prepared('SELECT id\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tif (cacti_sizeof($snmp_query_graph)) {\n\t\tforeach ($snmp_query_graph as $item) {\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\tarray($item['id']));\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_cache\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n}\n\nfunction data_query_edit() {\n\tglobal $fields_data_query_edit, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query = db_fetch_row_prepared('SELECT *\n\t\t\tFROM snmp_query WHERE\n\t\t\tid = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (!cacti_sizeof($snmp_query)) {\n\t\t\traise_message('data_query_missing', __('The Data Query ID [%s] that you are trying to Edit does not exist.  Please run the repair_database.php CLI script to resolve this database issue.', get_request_var('id')), MESSAGE_LEVEL_ERROR);\n\t\t\theader('Location: data_queries.php');\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __esc('Data Queries [edit: %s]', $snmp_query['name']);\n\t} else {\n\t\t$header_label = __('Data Queries [new]');\n\t}\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_edit, (isset($snmp_query) ? $snmp_query : array()))\n\t\t)\n\t);\n\n\thtml_end_box(false, true);\n\n\tif (!empty($snmp_query['id'])) {\n\t\t$search       = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t\t$replace      = array(CACTI_PATH_BASE, read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t\t$xml_filename = str_replace($search, $replace, $snmp_query['xml_path']);\n\n\t\tif ((file_exists($xml_filename)) && (is_file($xml_filename))) {\n\t\t\t$text            = \"<span class='deviceUp'>\" . __('Successfully located XML file') . '</span>';\n\t\t\t$xml_file_exists = true;\n\t\t} else {\n\t\t\t$text            = \"<span class='deviceDown'>\" . __('Could not locate XML file.') . '</span>';\n\t\t\t$xml_file_exists = false;\n\t\t}\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tprint \"<tr class='tableRow debug'><td>$text</td></tr>\";\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Name'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Graph Template Name'),\n\t\t\t\t'align'   => 'left'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Graphs Using'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Mapping ID'),\n\t\t\t\t'align'   => 'right'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Action'),\n\t\t\t\t'align' => 'right'\n\t\t\t)\n\t\t);\n\n\t\thtml_start_box(__('Associated Graph Templates'), '100%', '', '3', 'center', 'data_queries.php?action=item_edit&snmp_query_id=' . $snmp_query['id']);\n\n\t\thtml_header($display_text, 1);\n\n\t\t$snmp_query_graphs = db_fetch_assoc_prepared('SELECT sqg.id,\n\t\t\tgt.name AS graph_template_name, sqg.name, COUNT(gl.id) AS graphs\n\t\t\tFROM snmp_query_graph AS sqg\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON sqg.graph_template_id = gt.id\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gl.snmp_query_graph_id = sqg.id\n\t\t\tAND gl.graph_template_id = sqg.graph_template_id\n\t\t\tWHERE sqg.snmp_query_id = ?\n\t\t\tGROUP BY sqg.id\n\t\t\tORDER BY sqg.name',\n\t\t\tarray($snmp_query['id']));\n\n\t\tif (cacti_sizeof($snmp_query_graphs)) {\n\t\t\t$i = 0;\n\n\t\t\tforeach ($snmp_query_graphs as $snmp_query_graph) {\n\t\t\t\tform_alternate_row('line' . $i, true);\n\n\t\t\t\tif ($xml_file_exists) {\n\t\t\t\t\t$url = 'data_queries.php?action=item_edit&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id'];\n\n\t\t\t\t\tform_selectable_cell(filter_value($snmp_query_graph['name'], '', $url), $i);\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell(filter_value($snmp_query_graph['name'], '', '', __('Association Read Only until XML file located')), $i);\n\t\t\t\t}\n\n\t\t\t\tform_selectable_ecell($snmp_query_graph['graph_template_name'], $i);\n\n\t\t\t\tform_selectable_cell(number_format_i18n($snmp_query_graph['graphs'], '-1'), $i, '', 'right');\n\t\t\t\tform_selectable_cell($snmp_query_graph['id'], $i, '', 'right');\n\n\t\t\t\tif ($snmp_query_graph['graphs'] == 0) {\n\t\t\t\t\t$url = html_escape('data_queries.php?action=item_remove_confirm&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id']);\n\n\t\t\t\t\tform_selectable_cell(\"<a class='delete deleteMarker ti ti-x' title='\" . __('Delete') . \"' href='\" . $url . \"'</a>\", $i, '', 'right');\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell(\"<a class='deleteMarkerDisabled ti ti-x' title='\" . __esc('Mapped Graph Templates with Graphs are read only') . \"' href='#'></a>\", $i, '', 'right');\n\t\t\t\t}\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr class='tableRow odd'><td colspan='\" . cacti_sizeof($display_text) . \"'><em>\" . __('No Graph Templates Defined.') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_queries.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar snmp_query_id = '<?php print isset($snmp_query['id']) ? $snmp_query['id']:'0';?>';\n\tvar snmp_query_graph_id = '<?php print isset($snmp_query_graph['id']) ? $snmp_query_graph['id']:'0';?>';\n\n\t$(function() {\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div id='cdialog' class='cdialog'></div>\");\n\n\t\t$('.noLinkEditMain').tooltip();\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#continue').click(function(data) {\n\t\t\t\t\t\t$.post('data_queries.php?action=item_remove', {\n\t\t\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\t\t\tsnmp_query_id: snmp_query_id,\n\t\t\t\t\t\t\tid: $('#snmp_query_graph_id').val()\n\t\t\t\t\t\t}, function(data) {\n\t\t\t\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t\t\t\tloadUrl({url:'data_queries.php?action=edit&id='+snmp_query_id});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Associated Graph');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data_query() {\n\tglobal $actions, $item_rows;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Data Queries'), 'data_queries.php', 'form_data_queries', 'sess_dq', 'data_queries.php?action=edit');\n\n\t$pageFilter->rows_label = __('Data Queries');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (sq.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR di.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM snmp_query AS sq\n\t\tINNER JOIN data_input AS di\n\t\tON sq.data_input_id=di.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$snmp_queries = db_fetch_assoc(\"SELECT sq.id, sq.name, sq.graphs, sq.templates, sq.last_updated,\n\t\tdi.name AS data_input_method\n\t\tFROM snmp_query AS sq\n\t\tLEFT JOIN data_input AS di\n\t\tON sq.data_input_id=di.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Data Query Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Data Query.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Data Queries that are in use cannot be Deleted. In use is defined as being referenced by either a Graph or a Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs using this Data Query.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs Templates using this Data Query.')\n\t\t),\n\t\t'data_input_method' => array(\n\t\t\t'display' => __('Data Input Method'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Data Input Method used to collect data for Data Sources associated with this Data Query.')\n\t\t),\n\t\t'last_updated' => array(\n\t\t\t'display' => __('Last Updated'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The last time this Template was updated.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('data_queries.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Data Queries'), 'page', 'main');\n\n\tform_start('data_queries.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\tif ($snmp_query['graphs'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $snmp_query['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($snmp_query['name'], get_request_var('filter'), 'data_queries.php?action=edit&id=' . $snmp_query['id']), $snmp_query['id']);\n\t\t\tform_selectable_cell($snmp_query['id'], $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['graphs'], '-1'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['templates'], '-1'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($snmp_query['data_input_method'], get_request_var('filter')), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell($snmp_query['last_updated'], $snmp_query['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($snmp_query['name'], $snmp_query['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Queries Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "data_source_profiles.php",
          "type": "blob",
          "size": 44.79296875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Export')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tif (isset_request_var('save_component_import')) {\n\t\t\tprofile_import_process();\n\t\t} else {\n\t\t\tform_save();\n\t\t}\n\n\t\tbreak;\n\tcase 'import':\n\t\ttop_header();\n\t\tprofile_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'export':\n\t\tprofile_export();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tprofile_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tprofile_item_remove();\n\n\t\tbreak;\n\tcase 'ajax_span':\n\t\tget_filter_request_var('profile_id');\n\t\tget_filter_request_var('span');\n\t\tget_filter_request_var('rows');\n\n\t\tif (is_numeric(get_request_var('rows')) && get_request_var('rows') > 0) {\n\t\t\tget_filter_request_var('rows');\n\n\t\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\t\tFROM data_source_profiles\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('profile_id')));\n\n\t\t\tif (get_request_var('span') == 1) {\n\t\t\t\tprint get_span(get_request_var('rows') * $sampling_interval);\n\t\t\t} else {\n\t\t\t\tprint get_span(get_request_var('rows') * get_request_var('span'));\n\t\t\t}\n\t\t} else {\n\t\t\tprint __('N/A');\n\t\t}\n\n\t\tbreak;\n\tcase 'ajax_size':\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cfs');\n\t\tget_filter_request_var('rows');\n\t\tprint get_size(get_request_var('id'), get_nfilter_request_var('type'), get_request_var('cfs'), get_request_var('rows'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tprofile_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tprofile();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction profile_export() {\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif(cacti_sizeof($selected_items) == 1) {\n\t\t\t\t$export_data = profile_export_execute($selected_items[0]);\n\t\t\t} else {\n\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t$profiles[] = $id;\n\t\t\t\t}\n\n\t\t\t\t$export_data = profile_export_execute($profiles);\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($export_data)) {\n\t\t\t\t$export_file_name = $export_data['export_name'];\n\n\t\t\t\theader('Content-type: application/json');\n\t\t\t\theader('Content-Disposition: attachment; filename=' . $export_file_name);\n\n\t\t\t\t$output = json_encode($export_data, JSON_PRETTY_PRINT);\n\n\t\t\t\tprint $output;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction profile_import() {\n\t$form_data = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Import Data Source Profile from Local File',),\n\t\t\t'description' => __('If the JSON file containing the Data Source Profile data is located on your local machine, select it here.'),\n\t\t\t'method' => 'file',\n\t\t\t'accept' => '.json'\n\t\t),\n\t\t'import_text' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Import Data Source Profile from Text'),\n\t\t\t'description' => __('If you have the JSON file containing the Data Source Profile data as text, you can paste it into this box to import it.'),\n\t\t\t'value' => '',\n\t\t\t'default' => '',\n\t\t\t'textarea_rows' => '10',\n\t\t\t'textarea_cols' => '80',\n\t\t\t'class' => 'textAreaNotes'\n\t\t)\n\t);\n\n\tform_start('data_source_profiles.php', 'chk', true);\n\n\tif ((isset($_SESSION['import_debug_info'])) && (is_array($_SESSION['import_debug_info']))) {\n\t\thtml_start_box(__('Import Results'), '80%', '', '3', 'center', '');\n\n\t\tprint '<tr class=\"tableHeader\"><th>' . __('Cacti has imported the following items:'). '</th></tr>';\n\n\t\tforeach ($_SESSION['import_debug_info'] as $line) {\n\t\t\tprint '<tr><td>' . $line . '</td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tkill_session_var('import_debug_info');\n\t}\n\n\thtml_start_box(__('Import Data Source Profiles'), '80%', false, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_data\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_import', '1', '');\n\n\tprint \"\t<tr><td><hr/></td></tr><tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t<input type='submit' value='\" . __esc('Import') . \"' title='\" . __esc('Import Data Source Profiles') . \"' class='ui-button ui-corner-all ui-widget ui-state-active'>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\tPace.stop();\n\t\t\tclearAllTimeouts();\n\t\t});\n\t\t</script>\n\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction profile_import_execute($json_data) {\n\tglobal $config;\n\n\t$debug_data = array();\n\n\t/**\n\t * This version of the import process does not need to concern itself with\n\t * hashes, so we will use a top down approach.\n\t */\n\tif (is_array($json_data) && cacti_sizeof($json_data) && isset($json_data['profile'])) {\n\t\t$error = false;\n\t\t$save  = array();\n\n\t\tforeach ($json_data['profile'] as $data) {\n\t\t\t$perror = false;\n\t\t\t$name   = $data['name'];\n\n\t\t\t/* mark the columns in the data that need to be excluded */\n\t\t\t$exclude[] = 'rras';\n\t\t\t$exclude[] = 'cfs';\n\n\t\t\tif (!profile_validate_import_columns('data_source_profiles', $data, $debug_data, $exclude)) {\n\t\t\t\t$debug_data['errors'][] = __('The Data Source Profile import columns do not match the database schema');\n\t\t\t\t$error = true;\n\t\t\t\t$perror = true;\n\t\t\t}\n\n\t\t\tif (!cacti_sizeof($data['cfs'])) {\n\t\t\t\t$error = true;\n\t\t\t\t$debug_data['errors'][] = __('The Data Source Profile export %s did not include any CFs!', $data['name']);\n\t\t\t\t$perror = true;\n\t\t\t}\n\n\t\t\tif (!cacti_sizeof($data['rras'])) {\n\t\t\t\t$error = true;\n\t\t\t\t$debug_data['errors'][] = __('The Data Source Profile export %s did not include any RRAs!', $data['name']);\n\t\t\t\t$perror = true;\n\t\t\t}\n\n\t\t\t/* skip the import if there were precheck errors */\n\t\t\tif ($perror) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* check to see if the profile exists already */\n\t\t\t$id = db_fetch_cell_prepared('SELECT id\n\t\t\t\tFROM data_source_profiles\n\t\t\t\tWHERE hash = ?',\n\t\t\t\tarray($data['hash']));\n\n\t\t\t/* save the core data */\n\t\t\t$save = $data;\n\n\t\t\t/* unset the related data */\n\t\t\tunset($save['id']);\n\t\t\tunset($save['rras']);\n\t\t\tunset($save['cfs']);\n\n\t\t\tif ($id > 0) {\n\t\t\t\t$exists = true;\n\t\t\t\t$save['id'] = $id;\n\t\t\t} else {\n\t\t\t\t$exists = false;\n\t\t\t\t$save['id'] = 0;\n\t\t\t}\n\n\t\t\t$data_source_profile_id = sql_save($save, 'data_source_profiles');\n\n\t\t\t/**\n\t\t\t * next we will update the consolidation functions\n\t\t\t * and then remove any that were not present\n\t\t\t * in the import file.\n\t\t\t */\n\t\t\tforeach($data['cfs'] as $cf) {\n\t\t\t\tdb_execute_prepared('REPLACE INTO data_source_profiles_cf\n\t\t\t\t\t(data_source_profile_id, consolidation_function_id)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($data_source_profile_id, $cf));\n\t\t\t}\n\n\t\t\t/* next do the removal of non-found cfs */\n\t\t\tdb_execute_prepared('DELETE FROM data_source_profiles_cf\n\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\tAND consolidation_function_id NOT IN (' . implode(',', array_values($data['cfs'])) . ')',\n\t\t\t\tarray($data_source_profile_id));\n\n\t\t\t/**\n\t\t\t * next we will do the RRA's one at a time noting their id if they exist\n\t\t\t * and the ID's of those that were added.\n\t\t\t */\n\t\t\t$ids = array();\n\n\t\t\tforeach($data['rras'] as $rra) {\n\t\t\t\t$id = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\tFROM data_source_profiles_rra\n\t\t\t\t\tWHERE name = ?\n\t\t\t\t\tAND steps = ?\n\t\t\t\t\tAND `rows` = ?\n\t\t\t\t\tAND timespan = ?\n\t\t\t\t\tAND data_source_profile_id = ?',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t$rra['name'],\n\t\t\t\t\t\t$rra['steps'],\n\t\t\t\t\t\t$rra['rows'],\n\t\t\t\t\t\t$rra['timespan'],\n\t\t\t\t\t\t$data_source_profile_id\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t$save = $rra;\n\t\t\t\t$save['data_source_profile_id'] = $data_source_profile_id;\n\n\t\t\t\tif ($id > 0) {\n\t\t\t\t\t$save['id'] = $id;\n\t\t\t\t\t$ids[$id] = $id;\n\t\t\t\t} else {\n\t\t\t\t\t$save['id'] = 0;\n\t\t\t\t}\n\n\t\t\t\t$rra_id = sql_save($save, 'data_source_profiles_rra');\n\n\t\t\t\t$ids[$rra_id] = $rra_id;\n\t\t\t}\n\n\t\t\t/* finally, remove any rras that were not updated */\n\t\t\tdb_execute_prepared('DELETE FROM data_source_profiles_rra\n\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\tAND id NOT IN (' . implode(',', array_values($ids)) . ')',\n\t\t\t\tarray($data_source_profile_id));\n\n\t\t\tif ($data_source_profile_id > 0) {\n\t\t\t\tif ($config['is_web']) {\n\t\t\t\t\t$debug_data['success'][] = __esc('Data Source Profile \\'%s\\' %s!', $name, ($save['id'] > 0 ? __('Updated'):__('Imported')));\n\t\t\t\t} else {\n\t\t\t\t\t$debug_data['success'][] = __('Data Source Profile \\'%s\\' %s!', $name, ($save['id'] > 0 ? __('Updated'):__('Imported')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($config['is_web']) {\n\t\t\t\t\t$debug_data['failure'][] = __esc('Data Source Profile \\'%s\\' %s Failed!', $name, ($save['id'] > 0 ? __('Update'):__('Import')));\n\t\t\t\t} else {\n\t\t\t\t\t$debug_data['failure'][] = __('Data Source Profile \\'%s\\' %s Failed!', $name, ($save['id'] > 0 ? __('Update'):__('Import')));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$debug_data['failure'][] = __('Data Source Profile Import data is either for another object type or not JSON formatted.');\n\t}\n\n\treturn $debug_data;\n}\n\nfunction profile_validate_import_columns($table, &$data, &$debug_data, $exclude = array()) {\n\tif (cacti_sizeof($data)) {\n\t\tforeach($data as $column => $cdata) {\n\t\t\tif (!db_column_exists($table, $column) && !in_array($column, $exclude, true)) {\n\t\t\t\t$debug_data['errors'][] = __('Template column \\'' . $column . '\\' is not valid column.');\n\n\t\t\t\tcacti_log('Template column \\'' . $column . '\\' is not valid column.', false, 'AUTOM8');\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction profile_import_process() {\n\t$json_data = json_decode(get_nfilter_request_var('import_text'), true);\n\n\t// If we have text, then we were trying to import text, otherwise we are uploading a file for import\n\tif (empty($json_data)) {\n\t\t$json_data = profile_validate_upload();\n\t}\n\n\t$return_data = profile_import_execute($json_data);\n\n\tif (sizeof($return_data) && isset($return_data['success'])) {\n\t\tforeach ($return_data['success'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceUp\">' . __('NOTE:') . '</span> ' . $message;\n\t\t\tcacti_log('NOTE: Data Source Profile Import Succeeded!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (isset($return_data['errors'])) {\n\t\tforeach ($return_data['errors'] as $error) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $error;\n\t\t\tcacti_log('NOTE: Data Source Profile Import Error!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (isset($return_data['failure'])) {\n\t\tforeach ($return_data['failure'] as $message) {\n\t\t\t$debug_data[] = '<span class=\"deviceDown\">' . __('ERROR:') . '</span> ' . $message;\n\t\t\tcacti_log('NOTE: Data Source Profile Import Failed!.  Message: '. $message, false, 'AUTOM8');\n\t\t}\n\t}\n\n\tif (cacti_sizeof($debug_data)) {\n\t\t$_SESSION['import_debug_info'] = $debug_data;\n\t}\n\n\theader('Location: data_source_profiles.php?action=import');\n\n\texit();\n}\n\nfunction profile_validate_upload() {\n\t/* check file transfer if used */\n\tif (isset($_FILES['import_file'])) {\n\t\t/* check for errors first */\n\t\tif ($_FILES['import_file']['error'] != 0) {\n\t\t\tswitch ($_FILES['import_file']['error']) {\n\t\t\t\tcase 1:\n\t\t\t\t\traise_message('ftb', __('The file is too big.'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\traise_message('ftb2', __('The file is too big.'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\traise_message('ift', __('Incomplete file transfer.'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\traise_message('nfu', __('No file uploaded.'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\traise_message('tfm', __('Temporary folder missing.'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\traise_message('ftwf', __('Failed to write file to disk'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\traise_message('fusbe', __('File upload stopped by extension'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (is_error_message()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/* check mine type of the uploaded file */\n\t\tif ($_FILES['import_file']['type'] != 'application/json') {\n\t\t\traise_message('ife', __('Invalid file extension.'), MESSAGE_LEVEL_ERROR);\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn json_decode(file_get_contents($_FILES['import_file']['tmp_name']), true);\n\t}\n\n\traise_message('nfu2', __('No file uploaded.'), MESSAGE_LEVEL_ERROR);\n\n\treturn false;\n}\n\nfunction profile_export_execute($profile_ids) {\n\t/**\n\t * Tables for export include:\n\t *\n\t * data_source_profiles\n\t * data_source_profiles_cf\n\t * data_source_profiles_rra\n\t *\n\t * There are no hashes in the sub-tables.  On import\n\t * we will simply remove any non-matching entries\n\t * in the sub-tables if the hash of the data source\n\t * profile is found on the foreign system.\n\t *\n\t */\n\tif (!is_array($profile_ids)) {\n\t\t$export_name = db_fetch_cell_prepared(\"SELECT CONCAT('profile_', name)\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?\",\n\t\t\tarray($profile_ids));\n\n\t\t$profile_ids = array($profile_ids);\n\t} else {\n\t\t$export_name = 'profiles_multiple';\n\t}\n\n\t$json_array = array();\n\n\t$json_array['name']        = clean_up_name(strtolower($export_name));\n\t$json_array['export_name'] = $json_array['name'] . '.json';\n\n\tif (cacti_sizeof($profile_ids)) {\n\t\t$profiles = array();\n\n\t\tforeach($profile_ids as $id) {\n\t\t\t/* get the row of data */\n\t\t\t$profile = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_source_profiles\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($id));\n\n\t\t\tunset($profile['id']);\n\t\t\tunset($profile['default']);\n\t\t\tunset($profile['data_sources']);\n\t\t\tunset($profile['templates']);\n\n\t\t\t$tmp_cfs = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT consolidation_function_id AS id\n\t\t\t\t\tFROM data_source_profiles_cf\n\t\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\t\tarray($id)),\n\t\t\t\t'id', 'id'\n\t\t\t);\n\n\t\t\t$consolidations = array_values($tmp_cfs);\n\n\t\t\t$rras = db_fetch_assoc_prepared('SELECT name, steps, `rows`, timespan\n\t\t\t\tFROM data_source_profiles_rra\n\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\tarray($id));\n\n\t\t\t$profile['cfs']  = $consolidations;\n\t\t\t$profile['rras'] = $rras;\n\n\t\t\t$profiles[] = $profile;\n\t\t}\n\n\t\t$json_array['profile'] = $profiles;\n\t}\n\n\treturn $json_array;\n}\n\nfunction form_save() {\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('profile_id') && ! is_numeric(get_filter_request_var('profile_id'))) {\n\t\tset_request_var('profile_id', 0);\n\t}\n\n\tif (get_request_var('id') > 0) {\n\t\t$prev_heartbeat = db_fetch_cell_prepared('SELECT heartbeat\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t} else {\n\t\t$prev_heartbeat = get_request_var('heartbeat');\n\t}\n\n\tif (isset_request_var('save_component_profile')) {\n\t\t$save['id']             = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']           = get_hash_data_source_profile(get_request_var('id'));\n\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (isset_request_var('step')) {\n\t\t\t$save['step']           = form_input_validate(get_nfilter_request_var('step'), 'step', '', false, 3);\n\t\t\t$save['heartbeat']      = form_input_validate(get_nfilter_request_var('heartbeat'), 'heartbeat', '', false, 3);\n\t\t\t$save['x_files_factor'] = form_input_validate(get_nfilter_request_var('x_files_factor'), 'x_files_factor', '', false, 3);\n\t\t}\n\n\t\tif (isset_request_var('default')) {\n\t\t\t$save['default'] = (isset_request_var('default') ? 'on':'');\n\t\t\tdb_execute('UPDATE data_source_profiles SET `default` = \"\"');\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_id = sql_save($save, 'data_source_profiles');\n\n\t\t\tif ($profile_id) {\n\t\t\t\tif (isset_request_var('step')) {\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach ($cfs as $cf) {\n\t\t\t\t\t\t\tinput_validate_input_number($cf, 'consolidation_function_id');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_source_profiles_cf\n\t\t\t\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\t\t\t\tAND consolidation_function_id NOT IN (' . implode(',', $cfs) . ')', array($profile_id));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach ($cfs as $cf) {\n\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO data_source_profiles_cf\n\t\t\t\t\t\t\t\t(data_source_profile_id, consolidation_function_id)\n\t\t\t\t\t\t\t\tVALUES (?, ?)', array($profile_id, $cf));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($prev_heartbeat != get_request_var('heartbeat')) {\n\t\t\t\t\t$existing = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\tFROM data_template_data\n\t\t\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\t\t\tAND local_data_id > 0',\n\t\t\t\t\t\tarray(get_request_var('id')));\n\n\t\t\t\t\tif ($existing) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE data_template_rrd AS dtr\n\t\t\t\t\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\t\t\t\t\tON dtd.local_data_id = dtr.local_data_id\n\t\t\t\t\t\t\tSET dtr.rrd_heartbeat = ?\n\t\t\t\t\t\t\tWHERE dtd.data_source_profile_id = ?',\n\t\t\t\t\t\t\tarray(get_request_var('heartbeat'), get_request_var('id')));\n\n\t\t\t\t\t\traise_message('heartbeat_change', __('Changing the Heartbeat from this page, does not change the Heartbeat for your existing Data Sources.  Use RRDtool\\'s \\'tune\\' function to make that change to your existing RRDfiles heartbeats, or run the CLI utility update_heartbeat.php to correct.<br>'), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php?action=edit&id=' . (empty($profile_id) ? get_request_var('id') : $profile_id));\n\t} elseif (isset_request_var('save_component_rra')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('profile_id');\n\t\t/* ==================================================== */\n\n\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\t$save['id']                      = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['name']                    = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['data_source_profile_id']  = form_input_validate(get_request_var('profile_id'), 'profile_id', '^[0-9]+$', false, 3);\n\t\t$save['timespan']                = form_input_validate(get_nfilter_request_var('timespan'), 'timespan', '^[0-9]+$', false, 3);\n\n\t\tif (isset_request_var('steps')) {\n\t\t\t$save['steps'] = form_input_validate(get_nfilter_request_var('steps'), 'steps', '^[0-9]+$', false, 3);\n\n\t\t\tif ($save['steps'] != '1') {\n\t\t\t\t$save['steps'] /= $sampling_interval;\n\t\t\t}\n\t\t}\n\n\t\tif (isset_request_var('rows')) {\n\t\t\t$save['rows'] = form_input_validate(get_nfilter_request_var('rows'), 'rows', '^[0-9]+$', false, 3);\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_rra_id = sql_save($save, 'data_source_profiles_rra');\n\n\t\t\tif ($profile_rra_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_source_profiles.php?action=item_edit&profile_id=' . get_request_var('profile_id') . '&id=' . (empty($profile_rra_id) ? get_request_var('id') : $profile_rra_id));\n\t\t} else {\n\t\t\theader('Location: data_source_profiles.php?action=edit&id=' . get_request_var('profile_id'));\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_rra WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_cf WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tduplicate_data_source_profile($selected_items, get_nfilter_request_var('title_format'));\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // export\n\t\t\t\ttop_header();\n\n\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tloadUrl({ url: \"data_source_profiles.php\" });\n\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(function() {\n\t\t\t\t\t\t//debugger;\n\t\t\t\t\t\tDownloadStart(\\'data_source_profiles.php?action=export&selected_items=' . get_nfilter_request_var('selected_items') . '\\');\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\tbottom_footer();\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_source_profiles WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'data_source_profiles.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Data Source Profile.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Data Source Profiles.'),\n\t\t\t\t\t'scont'    => __('Delete Data Source Profile'),\n\t\t\t\t\t'pcont'    => __('Delete Data Source Profiles')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Data Source Profile.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Data Source Profiles.'),\n\t\t\t\t\t'scont'    => __('Duplicate Data Source Profile'),\n\t\t\t\t\t'pcont'    => __('Duplicate Data Source Profiles'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<profile_title> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Export the following Data Source Profile.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Export following Data Source Profiles.'),\n\t\t\t\t\t'scont'    => __('Export Data Source Profile'),\n\t\t\t\t\t'pcont'    => __('Export Data Source Profiles')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction duplicate_data_source_profile($source_profile, $title_format) {\n\tif (!is_array($source_profile)) {\n\t\t$source_profile = array($source_profile);\n\t}\n\n\tforeach ($source_profile as $id) {\n\t\t$profile = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($profile)) {\n\t\t\t$save = array();\n\n\t\t\t$save['id']   = 0;\n\n\t\t\tforeach ($profile as $column => $value) {\n\t\t\t\tif ($column == 'id') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ($column == 'hash') {\n\t\t\t\t\t$save['hash'] = get_hash_data_source_profile(0);\n\t\t\t\t} elseif ($column == 'name') {\n\t\t\t\t\t$save['name'] = str_replace('<profile_title>', $value, $title_format);\n\t\t\t\t} elseif ($column == 'default') {\n\t\t\t\t\t$save['default'] = '';\n\t\t\t\t} else {\n\t\t\t\t\t$save[$column] = $value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$newid = sql_save($save, 'data_source_profiles');\n\n\t\t\tif ($newid > 0) {\n\t\t\t\tdb_execute_prepared(\"INSERT INTO data_source_profiles_cf\n\t\t\t\t\tSELECT '$newid' AS data_source_profile_id, consolidation_function_id\n\t\t\t\t\tFROM data_source_profiles_cf\n\t\t\t\t\tWHERE data_source_profile_id = ?\",\n\t\t\t\t\tarray($id));\n\n\t\t\t\tdb_execute_prepared(\"INSERT INTO data_source_profiles_rra\n\t\t\t\t\t(`data_source_profile_id`, `name`, `steps`, `rows`, `timespan`)\n\t\t\t\t\tSELECT '$newid', `name`, `steps`, `rows`, `timespan`\n\t\t\t\t\tFROM data_source_profiles_rra\n\t\t\t\t\tWHERE data_source_profile_id = ?\",\n\t\t\t\t\tarray($id));\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t} else {\n\t\t\traise_message('profile_error', __('Unable to duplicate Data Source Profile.  Check Cacti Log for errors.'), MESSAGE_LEVEL_ERROR);\n\t\t}\n\t}\n}\n\nfunction profile_item_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\tform_start('data_source_profiles.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$profile = db_fetch_row_prepared('SELECT *\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Source Profile RRA.');?></p>\n\t\t\t<p><?php print __esc('Profile Name: %s', $profile['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' title='<?php print __esc('Remove Data Source Profile RRA');?>'>\n\t\t\t<input type='hidden' id='rra_profile_id' value='<?php print $profile['data_source_profile_id'];?>'>\n\t\t\t<input type='hidden' id='rra_id' value='<?php print get_request_var('id');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'data_source_profiles.php?action=item_remove',\n\t\t\t\tfuncEnd: 'removeDataSourceProfilesItemFinalize'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t});\n\n\tfunction removeDataSourceProfilesItemFinalize(data) {\n\t\t$('#cdialog').dialog('close');\n\t\tloadUrl({url:'data_source_profiles.php?action=edit&id=<?php print $profile['data_source_profile_id'];?>'})\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction profile_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_source_profiles_rra WHERE id = ?', array(get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $fields_profile_rra_edit, $aggregation_levels;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\tFROM data_source_profiles\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('profile_id')));\n\n\t$readonly = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM data_template_data AS dtd\n\t\tWHERE data_source_profile_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('profile_id')));\n\n\tif (!isempty_request_var('id')) {\n\t\t$rra = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif ($rra['steps'] == '1') {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\tforeach ($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $sampling_interval) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\n\t\t$fields_profile_rra_edit['steps']['value'] = $rra['steps'] * $sampling_interval;\n\t} else {\n\t\t$oneguy = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND steps = 1',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\tif (empty($oneguy)) {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\t$max = db_fetch_cell_prepared('SELECT MAX(steps) * ?\n\t\t\t\tFROM data_source_profiles_rra\n\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\tarray($sampling_interval, get_request_var('profile_id')));\n\n\t\t\tforeach ($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $max) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\t}\n\n\tform_start('data_source_profiles.php', 'form_rra');\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\thtml_start_box(__esc('RRA [edit: %s %s]', $name, ($readonly ? __('(Some Elements Read Only)'):'')), '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_rra_edit, (isset($rra) ? $rra : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('profile_id', get_request_var('profile_id'), '');\n\n\tform_save_button('data_source_profiles.php?action=edit&id=' . get_request_var('profile_id'));\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('profile_id') != '' ? get_request_var('profile_id'):0;?>;\n\tvar readonly = <?php print($readonly ? 'true':'false');?>;\n\n\t$(function() {\n\t\tget_span();\n\t\tget_size();\n\n\t\t$('#steps').change(function() {\n\t\t\tget_span();\n\t\t\tget_size();\n\t\t});\n\n        $('#rows').delayKeyup(function() {\n            get_span();\n\t\t\tget_size();\n        });\n\n\t\tif (readonly) {\n\t\t\t$('#steps').prop('disabled', true);\n\t\t\tif ($('#steps').selectmenu('instance')) {\n\t\t\t\t$('#steps').selectmenu('disable');\n\t\t\t}\n\n\t\t\t$('#rows').prop('disabled', true);\n\t\t\tif ($('#rows').selectmenu('instance')) {\n\t\t\t\t$('#rows').selectmenu('disable');\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction get_size() {\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=rra&id='+profile_id+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\tfunction get_span() {\n\t\t$.get('data_source_profiles.php?action=ajax_span&profile_id='+profile_id+'&span='+$('#steps').val()+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_retention').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\t}\n\t</script>\n\t<?php\n}\n\nfunction profile_edit() {\n\tglobal $fields_profile_edit, $timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$profile = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$readonly     = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_template_data AS dtd\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND local_data_id > 0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Data Source Profile [edit: %s]', $profile['name'] . ($readonly ? ' (Read Only)':''));\n\t} else {\n\t\t$header_label = __('Data Source Profile [new]');\n\t\t$readonly     = false;\n\t}\n\n\tform_start('data_source_profiles.php', 'profile');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_edit, (isset($profile) ? $profile : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\tif (!$readonly) {\n\t\t\thtml_start_box(__('Data Source Profile RRAs (press save to update timespans)'), '100%', '', '3', 'center', 'data_source_profiles.php?action=item_edit&profile_id=' . $profile['id']);\n\t\t} else {\n\t\t\thtml_start_box(__('Data Source Profile RRAs (Read Only)'), '100%', '', '3', 'center', '');\n\t\t}\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Name'),           'align' => 'left'),\n\t\t\tarray('display' => __('Data Retention'), 'align' => 'left'),\n\t\t\tarray('display' => __('Graph Timespan'), 'align' => 'left'),\n\t\t\tarray('display' => __('Steps'),          'align' => 'left'),\n\t\t\tarray('display' => __('Rows'),           'align' => 'left'),\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$profile_rras = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tORDER BY steps',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($profile_rras)) {\n\t\t\tforeach ($profile_rras as $rra) {\n\t\t\t\tform_alternate_row('line' . $rra['id']);\n\n\t\t\t\t$url = 'data_source_profiles.php?action=item_edit&id=' . $rra['id'] . '&profile_id=' . $rra['data_source_profile_id'];\n\n\t\t\t\tform_selectable_cell(filter_value($rra['name'], '', $url), $i);\n\n\t\t\t\tform_selectable_cell('<em>' . get_span($profile['step'] * $rra['steps'] * $rra['rows']) . '</em>', $i);\n\t\t\t\tform_selectable_cell('<em>' . isset($timespans[$rra['timespan']]) ? $timespans[$rra['timespan']]:get_span($rra['timespan']) . '</em>', $i);\n\t\t\t\tform_selectable_cell('<em>' . $rra['steps'] . '</em>', $i);\n\t\t\t\tform_selectable_cell('<em>' . $rra['rows'] . '</em>', $i);\n\n\t\t\t\tif (!$readonly) {\n\t\t\t\t\tform_selectable_cell(\"<a id='\" . $profile['id'] . '_' . $rra['id'] . \"' class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='#'></a>\", $i, '', 'right');\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell('', $i, '', 'right');\n\t\t\t\t}\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_source_profiles.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('id') != '' ? get_request_var('id'):0;?>;\n\n\t$(function() {\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n        $('#consolidation_function_id').multiselect({\n            selectedList: 4,\n            noneSelectedText: '<?php print __('Select Consolidation Function(s)');?>',\n            header: false,\n            groupColumns: true,\n            groupColumnsWidth: 90,\n            height: 28,\n            menuWidth: 400,\n\t\t\tclick: function(event, ui){\n\t\t\t\tget_size();\n\t\t\t}\n        });\n\n\t\tget_size();\n\t\t$('consolidation_function_id').change(function() {\n\t\t\tget_size();\n\t\t});\n\n\t\t<?php if (!$readonly) {?>\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'data_source_profiles.php?action=item_remove_confirm&id='+id[1]+'&profile_id='+id[0];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#continue').off('click').on('click', function(data) {\n\t\t\t\t\t\t$.post('data_source_profiles.php?action=item_remove', {\n\t\t\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\t\t\tid: $('#rra_id').val()\n\t\t\t\t\t\t}).done(function(data) {\n\t\t\t\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t\t\t\tloadUrl({url:'data_source_profiles.php?action=edit&id=' + $('#rra_profile_id').val()});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Source Profile Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t\t<?php } else { ?>\n\t\t$('#step').prop('disabled', true);\n\t\tif ($('#step').selectmenu('instance')) {\n\t\t\t$('#step').selectmenu('disable')\n\t\t}\n\n\t\t$('#x_files_factor').prop('disabled', true);\n\n\t\t$('#consolidation_function_id').prop('disabled', true);\n\t\tif ($('#consolidation_function_id').multiselect('instance')) {\n\t\t\t$('#consolidation_function_id').multiselect('disable');\n\t\t}\n\t\t<?php } ?>\n\t});\n\n\tfunction get_size() {\n\t\tchecked = $('#consolidation_function_id').multiselect('getChecked').length;\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=profile&id='+profile_id+'&cfs='+checked)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction get_size($id, $type, $cfs = '', $rows = 1) {\n\t// On x86_64 platform, here is the equation\n\t// file_size = $header + (# data sources * 300) + (# cfs * #rows in all RRAs)\n\t$header   = 284;\n\t$dsheader = 300;\n\t$row      = 8;\n\n\tif ($type == 'profile') {\n\t\tif (empty($cfs)) {\n\t\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM data_source_profiles_cf\n\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\tarray($id));\n\t\t}\n\n\t\t$rows = db_fetch_cell_prepared('SELECT SUM(`rows`)\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\treturn __('%s KBytes per Data Sources and %s Bytes for the Header', number_format_i18n(($rows * $row * $cfs + $dsheader) / 1000), $header);\n\t}\n\n\tif ($rows > 0) {\n\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_source_profiles_cf\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\treturn __('%s KBytes per Data Source', number_format_i18n(($rows * $row * $cfs) / 1000));\n\t} else {\n\t\treturn __('Enter a valid number of Rows to obtain the RRA size.');\n\t}\n}\n\nfunction get_span($duration) {\n\t$years  = '';\n\t$months = '';\n\t$weeks  = '';\n\t$days   = '';\n\t$output = '';\n\n\tif ($duration > 31536000) {\n\t\tif (floor($duration / 31536000) > 0) {\n\t\t\t$years     = floor($duration / 31536000);\n\t\t\t$years\t    = ($years == 1) ? __('1 Year') : __('%d Years', $years);\n\t\t\t$duration %= 31536000;\n\t\t\t$output    = $years;\n\t\t}\n\t}\n\n\tif ($duration > 2592000) {\n\t\tif (floor($duration / 2592000)) {\n\t\t\t$months    = floor($duration / 2592000);\n\t\t\t$months    = ($months == 1) ? __('%d Month', 1) : __('%d Months', $months);\n\t\t\t$duration %= 2592000;\n\t\t\t$output .= ($output != '' ? ', ' : '') . $months;\n\t\t}\n\t}\n\n\tif ($duration > 604800) {\n\t\tif (floor($duration / 604800) > 0) {\n\t\t\t$weeks     = floor($duration / 604800);\n\t\t\t$weeks     = ($weeks == 1) ? __('%d Week', 1) : __('%d Weeks', $weeks);\n\t\t\t$duration %= 604800;\n\t\t\t$output .= ($output != '' ? ', ' : '') . $weeks;\n\t\t}\n\t}\n\n\tif ($duration > 86400) {\n\t\tif (floor($duration / 86400) > 0) {\n\t\t\t$days      = floor($duration / 86400);\n\t\t\t$days      = ($days == 1) ? __('%d Day', 1) : __('%d Days', $days);\n\t\t\t$duration %= 86400;\n\t\t\t$output .= ($output != '' ? ', ' : '') . $days;\n\t\t}\n\t}\n\n\tif (floor($duration / 3600) > 0) {\n\t\t$hours   = floor($duration / 3600);\n\t\t$hours   = ($hours == 1) ? __('1 Hour') : __('%d Hours', $hours);\n\t\t$output .= ($output != '' ? ', ' : '') . $hours;\n\t}\n\n\treturn $output;\n}\n\nfunction profile() {\n\tglobal $actions, $item_rows, $sampling_intervals, $heartbeats, $config;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Data Source Profiles'), 'data_source_profiles.php', 'snmp_dsp', 'sess_dsp', 'data_source_profiles.php?action=edit');\n\n\t$pageFilter->rows_label = __('Profiles');\n\t$pageFilter->set_sort_array('step', 'ASC');\n\t$pageFilter->has_data   = true;\n\t$pageFilter->has_import = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (dsp.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (dsp.data_sources > 0)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM data_source_profiles AS dsp\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$profile_list = db_fetch_assoc(\"SELECT *\n\t\tFROM data_source_profiles AS dsp\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Data Source Profile Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this CDEF.')\n\t\t),\n\t\t'nosort00' => array(\n\t\t\t'display' => __('Default'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Is this the default Profile for all new Data Templates?')\n\t\t),\n\t\t'nosort01' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Profiles that are in use cannot be Deleted. In use is defined as being referenced by a Data Source or a Data Template.')\n\t\t),\n\t\t'nosort02' => array(\n\t\t\t'display' => __('Read Only'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Profiles that are in use by Data Sources become read only for now.')\n\t\t),\n\t\t'step' => array(\n\t\t\t'display' => __('Poller Interval'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Polling Frequency for the Profile')\n\t\t),\n\t\t'heartbeat' => array(\n\t\t\t'display' => __('Heartbeat'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Amount of Time, in seconds, without good data before Data is stored as Unknown')\n\t\t),\n\t\t'data_sources' => array(\n\t\t\t'display' => __('Data Sources Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Data Sources using this Profile.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Data Templates using this Profile.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('data_source_profiles.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Profiles'), 'page', 'main');\n\n\tform_start('data_source_profiles.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($profile_list)) {\n\t\tforeach ($profile_list as $profile) {\n\t\t\tif ($profile['data_sources'] == 0 && $profile['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources']) {\n\t\t\t\t$readonly = true;\n\t\t\t} else {\n\t\t\t\t$readonly = false;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources'] > 0) {\n\t\t\t\t$ds = '<a class=\"linkEditMain\" href=\"' . CACTI_PATH_URL . 'data_sources.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['data_sources'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$ds = number_format_i18n($profile['data_sources'], '-1');\n\t\t\t}\n\n\t\t\tif ($profile['templates'] > 0) {\n\t\t\t\t$dt = '<a class=\"linkEditMain\" href=\"' . CACTI_PATH_URL . 'data_templates.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['templates'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$dt = number_format_i18n($profile['templates'], '-1');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $profile['id'], false, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($profile['name'], get_request_var('filter'), 'data_source_profiles.php?action=edit&id=' . $profile['id']), $profile['id']);\n\t\t\tform_selectable_cell($profile['default'] == 'on' ? __('Yes'):'', $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($readonly ? __('Yes'):__('No'), $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($sampling_intervals[$profile['step']], $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($heartbeats[$profile['heartbeat']], $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($ds, $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($dt, $profile['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($profile['name'], $profile['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Source Profiles Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($profile_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "data_sources.php",
          "type": "blob",
          "size": 62.0947265625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Change Device'),\n\t5 => __('Reapply Suggested Names'),\n);\n\n$actions = api_plugin_hook_function('data_source_action_array', $actions);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\tds_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\tds_rrd_remove();\n\n\t\tbreak;\n\tcase 'data_edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ds_disable':\n\t\tds_disable();\n\n\t\tbreak;\n\tcase 'ds_enable':\n\t\tds_enable();\n\n\t\tbreak;\n\tcase 'ds_remove':\n\t\tds_remove();\n\n\t\theader('Location: data_sources.php');\n\n\t\tbreak;\n\tcase 'ds_edit':\n\t\tds_edit();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tdata_sources();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif ((isset_request_var('save_component_data_source_new')) && (!isempty_request_var('data_template_id'))) {\n\t\t$save['id']               = get_filter_request_var('local_data_id');\n\t\t$save['host_id']          = get_filter_request_var('host_id');\n\t\t$save['data_template_id'] = get_filter_request_var('data_template_id');\n\n\t\t$local_data_id = sql_save($save, 'data_local');\n\n\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\n\t\t/* update the title cache */\n\t\tupdate_data_source_title_cache($local_data_id);\n\n\t\t/* update host data */\n\t\tif (!isempty_request_var('host_id')) {\n\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\t\t}\n\n\t\tif (empty($save['id'])) {\n\t\t\t/**\n\t\t\t * Save the last time a data source was created/updated\n\t\t\t * for Caching.\n\t\t\t */\n\t\t\tset_config_option('time_last_change_data_source', time());\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_template_data_id');\n\t\t/* ==================================================== */\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT dtd.data_input_id, dl.host_id, dif.id, dif.input_output,\n\t\t\tdif.data_name, dif.regexp_match, dif.allow_nulls, dif.type_code, dtd.data_template_id, dl.id AS local_data_id\n\t\t\tFROM data_template_data AS dtd\n\t\t\tLEFT JOIN data_input_fields AS dif\n\t\t\tON dif.data_input_id = dtd.data_input_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tWHERE dtd.id = ?\n\t\t\tAND dif.input_output='in'\",\n\t\t\tarray(get_request_var('data_template_data_id')));\n\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\tif (isset_request_var('value_' . $input_field['id'])) {\n\t\t\t\t\t/* save the data into the 'data_input_data' table */\n\t\t\t\t\t$form_value = get_nfilter_request_var('value_' . $input_field['id']);\n\n\t\t\t\t\t/* we shouldn't enforce rules on fields the user cannot see (ie. templated ones) */\n\t\t\t\t\t$data_template_id = db_fetch_cell_prepared('SELECT local_data_template_data_id\n\t\t\t\t\t\tFROM data_template_data\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_request_var('data_template_data_id'))\n\t\t\t\t\t);\n\n\t\t\t\t\t$is_templated = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\tarray($input_field['id'], $data_template_id)\n\t\t\t\t\t);\n\n\t\t\t\t\tif ($is_templated == '') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif (empty($input_field['allow_nulls'])) {\n\t\t\t\t\t\t$allow_nulls = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* run regexp match on input string */\n\t\t\t\t\t$form_value = form_input_validate($form_value, 'value_' . $input_field['id'], $input_field['regexp_match'], $allow_nulls, 3);\n\n\t\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO data_input_data\n\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, data_template_id, local_data_id, host_id, t_value, value)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t(?, ?, ?, ?, ?, '', ?)\",\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t$input_field['id'],\n\t\t\t\t\t\t\t\tget_request_var('data_template_data_id'),\n\t\t\t\t\t\t\t\t$input_field['data_template_id'],\n\t\t\t\t\t\t\t\t$input_field['local_data_id'],\n\t\t\t\t\t\t\t\t$input_field['host_id'],\n\t\t\t\t\t\t\t\t$form_value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data_source')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('current_rrd');\n\t\tget_filter_request_var('rrd_step');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('host_id');\n\t\tget_filter_request_var('_host_id');\n\t\tget_filter_request_var('_data_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save1['id']               = get_filter_request_var('local_data_id');\n\t\t$save1['data_template_id'] = get_filter_request_var('data_template_id');\n\t\t$save1['host_id']          = get_filter_request_var('host_id');\n\n\t\t$save2['id']                          = get_filter_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = get_filter_request_var('local_data_template_data_id');\n\t\t$save2['data_template_id']            = get_filter_request_var('data_template_id');\n\t\t$save2['data_input_id']               = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['name']                        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save2['data_source_path']            = form_input_validate(get_nfilter_request_var('data_source_path'), 'data_source_path', '', true, 3);\n\t\t$save2['active']                      = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\t\t$save2['data_source_profile_id']      = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', false, 3);\n\t\t$save2['rrd_step']                    = form_input_validate(get_request_var('rrd_step'), 'rrd_step', '^[0-9]+$', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$local_data_id = sql_save($save1, 'data_local');\n\n\t\t\t$save2['local_data_id'] = $local_data_id;\n\t\t\t$data_template_data_id  = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tif (empty($save['id'])) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Save the last time a data source was created/updated\n\t\t\t\t\t * for Caching.\n\t\t\t\t\t */\n\t\t\t\t\tset_config_option('time_last_change_data_source', time());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t/* if this is a new data source and a template has been selected, skip item creation this time\n\t\t\totherwise it throws off the template creation because of the NULL data */\n\t\t\tif (!isempty_request_var('local_data_id') || isempty_request_var('data_template_id')) {\n\t\t\t\t/* if no template was set before the save, there will be only one data source item to save;\n\t\t\t\totherwise there might be >1 */\n\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t$rrds[0]['id'] = get_nfilter_request_var('current_rrd');\n\t\t\t\t} else {\n\t\t\t\t\t$rrds = db_fetch_assoc_prepared('SELECT id\n\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\tWHERE local_data_id = ?',\n\t\t\t\t\t\tarray(get_filter_request_var('local_data_id')));\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($rrds)) {\n\t\t\t\t\tforeach ($rrds as $rrd) {\n\t\t\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t\t\t$name_modifier = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$name_modifier = '_' . $rrd['id'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$save3['id']            = $rrd['id'];\n\t\t\t\t\t\t$save3['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t$save3['local_data_template_rrd_id'] = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($rrd['id']));\n\n\t\t\t\t\t\t$save3['data_template_id'] = get_filter_request_var('data_template_id');\n\n\t\t\t\t\t\t$save3['rrd_maximum'] = form_input_validate(get_nfilter_request_var(\"rrd_maximum$name_modifier\"), \"rrd_maximum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\n\t\t\t\t\t\t$save3['rrd_minimum'] = form_input_validate(get_nfilter_request_var(\"rrd_minimum$name_modifier\"), \"rrd_minimum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\n\t\t\t\t\t\t$save3['rrd_heartbeat'] = form_input_validate(get_nfilter_request_var(\"rrd_heartbeat$name_modifier\"), \"rrd_heartbeat$name_modifier\", '^[0-9]+$', false, 3);\n\n\t\t\t\t\t\t$save3['data_source_type_id'] = form_input_validate(get_nfilter_request_var(\"data_source_type_id$name_modifier\"), \"data_source_type_id$name_modifier\", '^[0-9]+$', false, 3);\n\n\t\t\t\t\t\t$save3['data_source_name'] = form_input_validate(get_nfilter_request_var(\"data_source_name$name_modifier\"), \"data_source_name$name_modifier\", '^[a-zA-Z0-9_-]{1,19}$', false, 3);\n\n\t\t\t\t\t\t$save3['data_input_field_id'] = form_input_validate((isset_request_var(\"data_input_field_id$name_modifier\") ? get_nfilter_request_var(\"data_input_field_id$name_modifier\") : '0'), \"data_input_field_id$name_modifier\", '', true, 3);\n\n\t\t\t\t\t\tif ($save3['rrd_minimum'] != 'U' && $save3['rrd_maximum'] != 'U') {\n\t\t\t\t\t\t\tif ($save3['rrd_minimum'] >= $save3['rrd_maximum']) {\n\t\t\t\t\t\t\t\traise_message(43);\n\n\t\t\t\t\t\t\t\t$_SESSION[SESS_ERROR_FIELDS]['rrd_maximum'] = 'rrd_maximum';\n\n\t\t\t\t\t\t\t\theader('Location: data_sources.php?action=ds_edit&id=' . (empty($local_data_id) ? get_filter_request_var('local_data_id') : $local_data_id) . '&host_id=' . get_request_var('host_id') . '&view_rrd=' . (isset_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : '0'));\n\n\t\t\t\t\t\t\t\texit;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$data_template_rrd_id = sql_save($save3, 'data_template_rrd');\n\n\t\t\t\t\t\tif ($data_template_rrd_id) {\n\t\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (get_request_var('data_template_id') != get_request_var('_data_template_id')) {\n\t\t\t\t/* update all necessary template information */\n\t\t\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\t\t\t} elseif (!isempty_request_var('data_template_id')) {\n\t\t\t\tupdate_data_source_data_query_cache($local_data_id);\n\t\t\t}\n\n\t\t\tif (get_request_var('host_id') != get_request_var('_host_id')) {\n\t\t\t\t/* push out all necessary host information */\n\t\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\n\t\t\t\t/* reset current host for display purposes */\n\t\t\t\t$_SESSION['sess_data_source_current_host_id'] = get_request_var('host_id');\n\t\t\t}\n\n\t\t\t/* if no data source path has been entered, generate one */\n\t\t\tif (isempty_request_var('data_source_path')) {\n\t\t\t\tgenerate_data_source_path($local_data_id);\n\t\t\t}\n\n\t\t\t/* update the title cache */\n\t\t\tupdate_data_source_title_cache($local_data_id);\n\t\t}\n\t}\n\n\t/* update the poller cache last to make sure everything is fresh */\n\tif ((!is_error_message()) && (!empty($local_data_id))) {\n\t\tupdate_poller_cache($local_data_id, true);\n\t}\n\n\tif (isset_request_var('save_component_data_source_new') && isempty_request_var('data_template_id')) {\n\t\theader('Location: data_sources.php?action=ds_edit&host_id=' . get_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (get_filter_request_var('data_template_id') != get_filter_request_var('_data_template_id')) || (get_filter_request_var('data_input_id') != get_filter_request_var('_data_input_id')) || (get_filter_request_var('host_id') != get_filter_request_var('_host_id'))) {\n\t\theader('Location: data_sources.php?action=ds_edit&id=' . (empty($local_data_id) ? get_filter_request_var('local_data_id') : $local_data_id) . '&host_id=' . get_request_var('host_id') . '&view_rrd=' . (isset_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : '0'));\n\t} else {\n\t\theader('Location: data_sources.php');\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t} else {\n\t\t\t\t\tget_filter_request_var('delete_type');\n\t\t\t\t}\n\n\t\t\t\tswitch (get_request_var('delete_type')) {\n\t\t\t\t\tcase '2': /* delete all graph items tied to this data source */\n\t\t\t\t\t\t$data_template_rrds = array_rekey(db_fetch_assoc('SELECT id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'local_data_id')), 'id', 'id');\n\n\t\t\t\t\t\t$poller_ids = db_fetch_assoc('SELECT DISTINCT poller_id\n\t\t\t\t\t\t\tFROM host AS h\n\t\t\t\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\t\t\t\tON dl.host_id=h.id\n\t\t\t\t\t\t\tWHERE poller_id > 1\n\t\t\t\t\t\t\tAND id IN (' . implode(', ', $selected_items) . ')');\n\n\t\t\t\t\t\tapi_plugin_hook_function('graph_items_remove', $data_template_rrds);\n\n\t\t\t\t\t\t/* loop through each data source item */\n\t\t\t\t\t\tif (cacti_sizeof($data_template_rrds) > 0) {\n\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\tAND local_graph_id > 0');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($poller_ids)) {\n\t\t\t\t\t\t\t\tforeach ($poller_ids as $poller_id) {\n\t\t\t\t\t\t\t\t\tif (($rcnn_id = poller_push_to_remote_db_connect($poller_id, true)) !== false) {\n\t\t\t\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\t\t\t\tAND local_graph_id > 0', true, $rcnn_id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3': /* delete all graphs tied to this data source */\n\t\t\t\t\t\t$graphs = array_rekey(db_fetch_assoc('SELECT\n\t\t\t\t\t\t\tgraph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tAND ' . array_to_sql_or($selected_items, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id'), 'local_graph_id', 'local_graph_id');\n\n\t\t\t\t\t\tif (cacti_sizeof($graphs) > 0) {\n\t\t\t\t\t\t\tapi_graph_remove_multi($graphs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tapi_data_source_remove_multi($selected_items);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // data source disable\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // data source enable\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\n\t\t\t\tapi_data_source_change_host($selected_items, get_request_var('host_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { // reapply suggested data source naming\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_data_source_data($selected_items[$i]);\n\t\t\t\t\tupdate_data_source_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('data_source_action_execute', get_nfilter_request_var('drp_action'));\n\t\t\t}\n\t\t}\n\n\t\t/* update snmpcache */\n\t\tsnmpagent_data_source_action_bottom(array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\tapi_plugin_hook_function('data_source_action_bottom', array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\theader('Location: data_sources.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* some global defaults */\n\t\t$graphs = array();\n\t\t$flist  = '';\n\t\t$hosts  = array_rekey(\n\t\t\tdb_fetch_assoc(\"SELECT id, CONCAT_WS('',description,' (',hostname,')') AS name\n\t\t\t\tFROM host\n\t\t\t\tORDER BY description, hostname\"),\n\t\t\t'id', 'name'\n\t\t);\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(get_data_source_title($matches[1])) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (isset($iarray) && cacti_sizeof($iarray)) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\t$graphs = db_fetch_assoc('SELECT\n\t\t\t\t\tgraph_templates_graph.local_graph_id,\n\t\t\t\t\tgraph_templates_graph.title_cache\n\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\tAND ' . array_to_sql_or($iarray, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id\n\t\t\t\t\tORDER BY graph_templates_graph.title_cache');\n\n\t\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\t\tforeach($graphs as $g) {\n\t\t\t\t\t\t$flist .= '<li>' . html_escape($g['title_cache']) . '</li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// For use by plugins\n\t\t$save['drp_action'] = $drpval;\n\t\t$save['ds_list']    = $ilist;\n\t\t$save['ds_array']   = $iarray;\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'data_sources.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage'  => __('Click \\'Continue\\' to Delete the following Data Source.'),\n\t\t\t\t\t'pmessage'  => __('Click \\'Continue\\' to Delete following Data Sources.'),\n\t\t\t\t\t'scont'     => __('Delete Data Source'),\n\t\t\t\t\t'pcont'     => __('Delete Data Sources'),\n\t\t\t\t\t'flist'     => $flist,\n\t\t\t\t\t'sfmessage' => __n('The following Graph is using this Data Source.', 'The following Graphs are using this Data Source.', cacti_sizeof($graphs)),\n\t\t\t\t\t'pfmessage' => __n('The following Graph is using these Data Sources.', 'The following Graphs are using these Data Sources.', cacti_sizeof($graphs)),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'delete_type' => array(\n\t\t\t\t\t\t\t'method' => 'radio_button',\n\t\t\t\t\t\t\t'options' => array(\n\t\t\t\t\t\t\t\t'1' => array(\n\t\t\t\t\t\t\t\t\t'default' => 3,\n\t\t\t\t\t\t\t\t\t'title' => __n('Leave the Graph Untouched', 'Leave all Graphs untouched.', cacti_sizeof($graphs))\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'2' => array(\n\t\t\t\t\t\t\t\t\t'default' => 3,\n\t\t\t\t\t\t\t\t\t'title' => __n('Delete all Graph Items that reference this Data Source.', 'Delete all Graph Items that reference these Data Sources', cacti_sizeof($iarray))\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'3' => array(\n\t\t\t\t\t\t\t\t\t'default' => 3,\n\t\t\t\t\t\t\t\t\t'title' => __n('Delete all Graphs that reference this Data Source.', 'Delete all Graphs that reference these Data Sources', cacti_sizeof($iarray))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Data Source.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Data Sources.'),\n\t\t\t\t\t'scont'    => __('Disable Data Source'),\n\t\t\t\t\t'pcont'    => __('Disable Data Sources')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Data Source.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Data Sources.'),\n\t\t\t\t\t'scont'    => __('Enable Data Source'),\n\t\t\t\t\t'pcont'    => __('Enable Data Sources')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Change the Device for the following Data Source.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Change the Device for the following Data Sources.'),\n\t\t\t\t\t'scont'    => __('Change Device for Data Source'),\n\t\t\t\t\t'pcont'    => __('Change Device for Data Sources'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'host_id' => array(\n\t\t\t\t\t\t\t'method' => 'drop_array',\n\t\t\t\t\t\t\t'title'  => __('New Device'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'array' => $hosts\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Reapply Suggested Names the following Data Source.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Reapply Suggested Names for the following Data Sources.'),\n\t\t\t\t\t'scont'    => __('Reapply Suggested Names for Data Source'),\n\t\t\t\t\t'pcont'    => __('Reapply Suggested Names for Data Sources')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\t$form_data = api_plugin_hook_function('data_source_confirmation_form', $form_data);\n\n\t\tform_continue_confirmation($form_data, 'data_source_action_prepare', $save);\n\t}\n}\n\nfunction data_edit($incform = true) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_data = db_fetch_row_prepared('SELECT id, data_input_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0',\n\t\t\tarray($data['data_template_id']));\n\n\t\t$host = db_fetch_row_prepared('SELECT host.id, host.hostname\n\t\t\tFROM (data_local, host)\n\t\t\tWHERE data_local.host_id = host.id\n\t\t\tAND data_local.id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif ($incform) {\n\t\tform_start('data_sources.php', 'data_source_edit');\n\t}\n\n\t$i = 0;\n\n\tif (!empty($data['data_input_id'])) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = \"in\"\n\t\t\tORDER BY name',\n\t\t\tarray($data['data_input_id'])\n\t\t);\n\n\t\t$data_input_name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($data_input_name)), '100%', '', '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields) > 0) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($data['id'], $field['id'])\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($data_input_data) > 0) {\n\t\t\t\t\t$old_value = $data_input_data['value'];\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\t/* if data template then get t_value FROM template, else always allow user input */\n\t\t\t\tif (empty($data['data_template_id'])) {\n\t\t\t\t\t$can_template = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$can_template = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\t\tarray($template_data['id'], $field['id'])\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\tif ((!empty($host['id'])) && (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']))) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Device: %s)', html_escape($host['hostname'])) . '</td>';\n\t\t\t\t\tprint '<td><em>' . html_escape($old_value) . '</em></td>';\n\t\t\t\t} elseif (empty($can_template)) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Data Template)') . '</td>';\n\t\t\t\t\tprint '<td><em>' . (empty($old_value) ? __('Nothing Entered') : html_escape($old_value)) . '</em></td>';\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong></td>';\n\t\t\t\t\tprint '<td>';\n\n\t\t\t\t\tdraw_custom_data_row('value_' . $field['id'], $field['id'], $data['id'], $old_value);\n\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\n\t\t\t\tprint '</tr>';\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif ($incform) {\n\t\tform_hidden_box('local_data_id', (isset($data) ? $data['local_data_id'] : '0'), '');\n\t\tform_hidden_box('data_template_data_id', (isset($data) ? $data['id'] : '0'), '');\n\t}\n\n\tform_hidden_box('save_component_data', '1', '');\n}\n\nfunction ds_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_template_rrd\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('UPDATE graph_templates_item\n\t\tSET task_item_id = 0\n\t\tWHERE task_item_id = ?',\n\t\tarray(get_request_var('id')));\n\n\theader('Location: data_sources.php?action=ds_edit&id=' . get_request_var('local_data_id'));\n}\n\nfunction ds_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"INSERT INTO data_template_rrd\n\t\t(local_data_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\tVALUES (?, 100, 0, 600, 1, 'ds')\",\n\t\tarray(get_request_var('id')));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\theader('Location: data_sources.php?action=ds_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction ds_disable() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tapi_data_source_disable(get_request_var('id'));\n\theader('Location: data_sources.php?action=ds_edit&id=' . get_request_var('id'));\n}\n\nfunction ds_enable() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tapi_data_source_enable(get_request_var('id'));\n\theader('Location: data_sources.php?action=ds_edit&id=' . get_request_var('id'));\n}\n\nfunction ds_edit() {\n\tglobal $struct_data_source, $struct_data_source_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\tapi_plugin_hook('data_source_edit_top');\n\n\t$use_data_template = true;\n\t$data_template     = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_local = db_fetch_row_prepared('SELECT host_id, data_template_id\n\t\t\tFROM data_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$data = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (isset($data_local['data_template_id']) && $data_local['data_template_id'] >= 0) {\n\t\t\t$data_template = db_fetch_row_prepared('SELECT id, name\n\t\t\t\tFROM data_template\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($data_local['data_template_id']));\n\n\t\t\t$data_template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_data\n\t\t\t\tWHERE data_template_id = ?\n\t\t\t\tAND local_data_id = 0',\n\t\t\t\tarray($data_local['data_template_id']));\n\t\t} else {\n\t\t\traise_message(11);\n\t\t\theader('Location: data_sources.php');\n\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __esc('Data Template Selection [edit: %s]', get_data_source_title(get_request_var('id')));\n\n\t\tif (empty($data_local['data_template_id'])) {\n\t\t\t$use_data_template = false;\n\t\t}\n\t} else {\n\t\t$header_label = __('Data Template Selection [new]');\n\n\t\t$use_data_template = false;\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('ds_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['ds_debug_mode'] = true;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('info')) {\n\t\tif (get_nfilter_request_var('info') == '0') {\n\t\t\tkill_session_var('ds_info_mode');\n\t\t} elseif (get_nfilter_request_var('info') == '1') {\n\t\t\t$_SESSION['ds_info_mode'] = true;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tif (!isempty_request_var('id')) {\n\t\t$local_graph_ids = db_fetch_assoc_prepared('SELECT DISTINCT local_graph_id\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON dtr.id = gti.task_item_id\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape(get_data_source_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['ds_debug_mode']) ? '0' : '1'));?>'><?php print(isset($_SESSION['ds_debug_mode']) ? __('Turn Off Data Source Debug Mode.') : __('Turn On Data Source Debug Mode.'));?></a><br>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&info=' . (isset($_SESSION['ds_info_mode']) ? '0' : '1'));?>'><?php print(isset($_SESSION['ds_info_mode']) ? __('Turn Off Data Source Info Mode.') : __('Turn On Data Source Info Mode.'));?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (cacti_sizeof($local_graph_ids)) {\n\t\t\t\t\t\t\tforeach ($local_graph_ids as $id) {\n\t\t\t\t\t\t\t\t$name = db_fetch_cell_prepared('SELECT title_cache\n\t\t\t\t\t\t\t\t\tFROM graph_templates_graph\n\t\t\t\t\t\t\t\t\tWHERE local_graph_id = ?',\n\t\t\t\t\t\t\t\t\tarray($id['local_graph_id']));\n\n\t\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graphs.php?action=graph_edit&id=' . $id['local_graph_id']);?>'><?php print __esc('Edit Graph: \\'%s\\'.', $name);?></a><br><?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($data_local['host_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . $data_local['host_id']);?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!empty($data_template['id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_templates.php?action=template_edit&id=' . (isset($data_template['id']) ? $data_template['id'] : '0'));?>'><?php print __('Edit Data Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isset_request_var('id') && get_request_var('id') > 0) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_' . ($data['active'] == 'on' ? 'dis' : 'en') . 'able&id=' . get_request_var('id')) ?>'><?php print($data['active'] == 'on' ? __('Disable Data Source.') : __('Enable Data Source.'));?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t}\n\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tform_start('data_sources.php', 'data_source');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_template)) {\n\t\t$data_sources = db_fetch_cell_prepared('SELECT\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tGROUP BY data_template_id\n\t\t\tORDER BY data_source_names',\n\t\t\tarray($data_template['id'])\n\t\t);\n\n\t\t$dts = db_fetch_assoc_prepared('SELECT data_template_id,\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id=0\n\t\t\tGROUP BY data_template_id\n\t\t\tHAVING data_source_names = ?',\n\t\t\tarray($data_sources)\n\t\t);\n\n\t\tif (cacti_sizeof($dts)) {\n\t\t\tforeach ($dts as $dtid) {\n\t\t\t\t$dtids[] = $dtid['data_template_id'];\n\t\t\t}\n\n\t\t\t$dtsql = 'SELECT id, name FROM data_template WHERE id IN(' . implode(',', $dtids) . ') ORDER BY name';\n\t\t} else {\n\t\t\t$dtsql = 'SELECT id, name FROM data_template ORDER BY name';\n\t\t}\n\t} else {\n\t\t$dtsql = 'SELECT id, name FROM data_template ORDER BY name';\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id'))\n\t\t);\n\t} elseif (isset($data_local['host_id'])) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($data_local['host_id'])\n\t\t);\n\t} else {\n\t\t$hostDescription = '';\n\t}\n\n\t$form_array = array(\n\t\t'data_template_id' => array(\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Data Template'),\n\t\t\t'description'   => __('The name given to this data template.  Please note that you may only change Graph Templates to a 100%$ compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value'         => (cacti_sizeof($data_template) ? $data_template['id'] : '0'),\n\t\t\t'none_value'    => (cacti_sizeof($data_template) ? '' : 'None'),\n\t\t\t'sql'           => $dtsql\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method'        => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description'   => __('Choose the Device that this Data Source belongs to.'),\n\t\t\t'none_value'    => __('None'),\n\t\t\t'sql'           => 'SELECT id, description AS name FROM host ORDER BY name',\n\t\t\t'action'        => 'ajax_hosts_noany',\n\t\t\t'id'            => (isset($data_local['host_id']) ? $data_local['host_id'] : 0),\n\t\t\t'value'         => $hostDescription\n\t\t\t),\n\t\t'_data_template_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data_template['id']) ? $data_template['id'] : '0')\n\t\t\t),\n\t\t'_host_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data_local['host_id']) ? $data_local['host_id'] : '0')\n\t\t\t),\n\t\t'_data_input_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data['data_input_id']) ? $data['data_input_id'] : '0')\n\t\t\t),\n\t\t'data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data['id']) ? $data['id'] : '0')\n\t\t\t),\n\t\t'local_data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data['local_data_template_data_id']) ? $data['local_data_template_data_id'] : '0')\n\t\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($data['local_data_id']) ? $data['local_data_id'] : '0')\n\t\t\t),\n\t\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a data template for this data source */\n\tif (!empty($data['data_template_id'])) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id = ?\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_start_box(__('Supplemental Data Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_data_source($data['data_template_id'], $data['local_data_id'], $data, '|field|', __('Data Source Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_data_source_item($data['data_template_id'], $template_data_rrds, '|field|_|id|', __('Data Source Item Fields'), true, true, true, 0);\n\t\tdraw_nontemplated_fields_custom_data($data['id'], 'value_|id|', __('Custom Data'), true, true, 0);\n\n\t\tform_hidden_box('save_component_data','1','');\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($data['data_template_id']))) {\n\t\thtml_start_box(__('Data Source'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer')) {\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value']   = (isset($data[$field_name]) ? $data[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (empty($data['id']) ? '0' : $data['id']);\n\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($form_array, (isset($data) ? $data : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* fetch ALL rrd's for this data source */\n\t\tif (!isempty_request_var('id')) {\n\t\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE local_data_id = ?\n\t\t\t\tORDER BY data_source_name',\n\t\t\t\tarray(get_request_var('id')));\n\t\t}\n\n\t\t/* select the first \"rrd\" of this data source by default */\n\t\tif (isempty_request_var('view_rrd')) {\n\t\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t\t}\n\n\t\t/* get more information about the rrd we chose */\n\t\tif (!isempty_request_var('view_rrd')) {\n\t\t\t$local_data_template_rrd_id = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd_template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($local_data_template_rrd_id));\n\n\t\t\t$header_label = __('[edit: %s]', $rrd['data_source_name']);\n\t\t} else {\n\t\t\t$header_label = '';\n\t\t}\n\n\t\t$i = 0;\n\n\t\tif (isset($template_data_rrds)) {\n\t\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\t\tprint \"\t<table class='tabs'><tr>\";\n\n\t\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tprint '\t<td ' . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='even'\" : \"class='odd'\") . \" style='width:\" . ((strlen($template_data_rrd['data_source_name']) * 9) + 50) . \";text-align:center;' class='tab'>\n\t\t\t\t\t\t<span class='textHeader'><a href='\" . html_escape('data_sources.php?action=ds_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>$i: \" . html_escape($template_data_rrd['data_source_name']) . '</a>' . (($use_data_template == false) ? \" <a class='pic deleteMarker ti ti-x' href='\" . html_escape('data_sources.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&local_data_id=' . get_request_var('id')) . \"' title='\" . __esc('Delete') . \"'></a>\" : '') . '</span>\n\t\t\t\t\t\t</td>';\n\t\t\t\t\tprint \"<td style='width:1px;'></td>\";\n\t\t\t\t}\n\n\t\t\t\tprint '<td></td></tr></table>';\n\t\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t\t}\n\t\t}\n\n\t\thtml_start_box('', '100%', true, '3', 'center', '');\n\n\t\tprint \"<div class='tableHeader'>\n\t\t\t<div class='tableSubHeaderColumn left'>\n\t\t\t\t\" . __esc('Data Source Item %s', $header_label) . \"\n\t\t\t</div>\n\t\t\t<div class='tableSubHeaderColumn right'>\n\t\t\t\t\" . ((!isempty_request_var('id') && (empty($data_template['id']))) ? \"<a class='linkOverDark' href='\" . html_escape('data_sources.php?action=rrd_add&id=' . get_request_var('id')) . \"'>\" . __('New') . '</a>&nbsp;' : '') . '\n\t\t\t</div>\n\t\t</div>';\n\n\t\t/* data input fields list */\n\t\tif ((empty($data['data_input_id'])) || (db_fetch_cell_prepared('SELECT type_id FROM data_input WHERE id = ?', array($data['data_input_id'])) > '1')) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id,CONCAT(data_name,' - ',name) as name FROM data_input_fields WHERE data_input_id=\" . $data['data_input_id'] . \" and input_output='out' and update_rra='on' order by data_name,name\";\n\t\t}\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer')) {\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = (isset($rrd) ? $rrd[$field_name] : '');\n\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => array(\n\t\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value'  => (isset($rrd) ? $rrd['id'] : '0')\n\t\t\t\t\t),\n\t\t\t\t\t'local_data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value'  => (isset($rrd) ? $rrd['local_data_template_rrd_id'] : '0')\n\t\t\t\t\t)\n\t\t\t\t) + $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* data source data goes here */\n\t\tdata_edit(false);\n\n\t\tform_hidden_box('current_rrd', get_request_var('view_rrd'), '0');\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_debug_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<span class='textInfo'><?php print __('Data Source Debug');?></span><br>\n\t\t\t\t\t<pre><?php print html_escape(rrdtool_function_create(get_request_var('id'), true));?></pre>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_info_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td><?php\n\t\t\t\t$rrd_info = rrdtool_function_info(get_request_var('id'));\n\n\t\t\t\tif (cacti_sizeof($rrd_info['rra'])) {\n\t\t\t\t\t$diff = rrdtool_cacti_compare(get_request_var('id'), $rrd_info);\n\n\t\t\t\t\trrdtool_info2html($rrd_info, $diff);\n\n\t\t\t\t\tif (cacti_sizeof($diff)) {\n\t\t\t\t\t\thtml_start_box(__('RRDtool Tune Info'), '100%', '', '3', 'center', '');\n\n\t\t\t\t\t\trrdtool_tune($rrd_info['filename'], $diff, true);\n\n\t\t\t\t\t\thtml_end_box();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_data_source','1','');\n\t} else {\n\t\tform_hidden_box('save_component_data_source_new','1','');\n\t}\n\n\tform_save_button('data_sources.php');\n\n\tapi_plugin_hook('data_source_edit_bottom');\n\n\tbottom_footer();\n}\n\nfunction get_poller_interval($seconds, $data_source_profile_id) {\n\tif ($seconds == 0 || $data_source_profile_id == 0) {\n\t\treturn '<em>' . __('External') . '</em>';\n\t}\n\n\tif ($seconds < 60) {\n\t\treturn '<em>' . __('%d Seconds', $seconds) . '</em>';\n\t}\n\n\tif ($seconds == 60) {\n\t\treturn __('1 Minute');\n\t} else {\n\t\treturn '<em>' . __('%d Minutes', ($seconds / 60)) . '</em>';\n\t}\n}\n\nfunction data_sources() {\n\tglobal $actions, $item_rows, $sampling_intervals;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$host = db_fetch_row_prepared('SELECT hostname\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id')));\n\t} else {\n\t\t$host = array();\n\t}\n\n\t$sql_where1  = '';\n\t$sql_where2  = '';\n\t$sql_params1 = array();\n\t$sql_params2 = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where1 = 'WHERE\n\t\t(\n\t\t\tdtd.name_cache RLIKE ? OR\n\t\t\tdtd.local_data_id RLIKE ? OR\n\t\t\tdt.name RLIKE ? OR\n\t\t\tdl.id = ?\n\t\t)';\n\n\t\t$sql_params1[] = get_request_var('rfilter');\n\t\t$sql_params1[] = get_request_var('rfilter');\n\t\t$sql_params1[] = get_request_var('rfilter');\n\t\t$sql_params1[] = get_request_var('rfilter');\n\t}\n\n\tif (isempty_request_var('host_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dl.host_id = 0 OR dl.host_id IS NULL)';\n\t\t$sql_where2 .= ' AND (gl.host_id = 0 OR gl.host_id IS NULL)';\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$sql_where1   .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.host_id = ?';\n\t\t$sql_params1[] = get_request_var('host_id');\n\t\t$sql_where2   .= ' AND gl.host_id = ?';\n\t\t$sql_params2[] = get_request_var('host_id');\n\t}\n\n\tif (isset_request_var('errored') && get_request_var('errored') == 'true') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.errored = 1';\n\t}\n\n\tif (isempty_request_var('site_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (h.site_id=0 OR h.site_id IS NULL)';\n\t\t$sql_where2 .= ' AND (h.site_id=0 OR h.site_id IS NULL)';\n\t} elseif (get_request_var('site_id') > 0) {\n\t\t$sql_where1   .= ($sql_where1 != '' ? ' AND':'WHERE') . ' h.site_id = ?';\n\t\t$sql_params1[] = get_request_var('site_id');\n\t\t$sql_where2   .= ' AND h.site_id = ?';\n\t\t$sql_params2[] = get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '0') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id = 0';\n\t} elseif (get_request_var('template_id') > 0) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id = ?';\n\t\t$sql_params1[] = get_request_var('template_id');\n\t}\n\n\tif (get_request_var('profile') > 0) {\n\t\t$sql_where1   .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_source_profile_id = ?';\n\t\t$sql_params1[] = get_request_var('profile');\n\t}\n\n\tif (get_request_var('status') == '1') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dtd.active = \"on\" AND h.disabled = \"\")';\n\t} elseif (get_request_var('status') == '2') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dtd.active = \"\" OR h.disabled != \"\")';\n\t} elseif (get_request_var('status') == '3') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dl.snmp_index = \"\" AND dl.snmp_query_id > 0)';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\tif (get_request_var('orphans') == 'true') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND ':'WHERE ') . '((dl.snmp_index = \"\" AND dl.snmp_query_id > 0) OR graph_items = 0 IS NULL OR dl.orphan = 1)';\n\n\t\t$orphan_join = \"LEFT JOIN (\n\t\t\tSELECT dtr.local_data_id, COUNT(DISTINCT gti.task_item_id) AS graph_items\n\t\t\tFROM data_template_rrd AS dtr\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON dtr.id = gti.task_item_id\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gti.local_graph_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\tWHERE dtr.local_data_id > 0\n\t\t\t$sql_where2\n\t\t\tGROUP BY local_data_id\n\t\t) AS dtr\n\t\tON dl.id = dtr.local_data_id\";\n\n\t\t$sql = \"SELECT COUNT(*)\n\t\t\tFROM data_local AS dl\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dl.id = dtd.local_data_id\n\t\t\tINNER JOIN data_template AS dt\n\t\t\tON dt.id = dl.data_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = dl.host_id\n\t\t\t$orphan_join\n\t\t\t$sql_where1\";\n\n\t\tif (cacti_sizeof($sql_params2)) {\n\t\t\t$merged_params = array_merge($sql_params2, $sql_params1);\n\t\t} else {\n\t\t\t$merged_params = $sql_params1;\n\t\t}\n\n\t\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $merged_params, 'data_source');\n\n\t\t$data_sources = db_fetch_assoc_prepared(\"SELECT dtd.local_data_id,\n\t\t\tdtd.name_cache, dtd.active, dtd.rrd_step, dt.name AS data_template_name,\n\t\t\tdl.host_id, dtd.data_source_profile_id\n\t\t\tFROM data_local AS dl\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dl.id = dtd.local_data_id\n\t\t\tINNER JOIN data_template AS dt\n\t\t\tON dt.id = dl.data_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = dl.host_id\n\t\t\t$orphan_join\n\t\t\t$sql_where1\n\t\t\t$sql_order\n\t\t\t$sql_limit\",\n\t\t\t$merged_params);\n\t} else {\n\t\t$sql = \"SELECT COUNT(*)\n\t\t\tFROM data_local AS dl\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tLEFT JOIN data_template AS dt\n\t\t\tON dt.id = dl.data_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = dl.host_id\n\t\t\t$sql_where1\";\n\n\t\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $sql_params1, 'data_source');\n\n\t\t$data_sources = db_fetch_assoc_prepared(\"SELECT dtd.local_data_id, dtd.name_cache, dtd.active,\n\t\t\tdtd.rrd_step, dt.name AS data_template_name, dl.host_id, dtd.data_source_profile_id\n\t\t\tFROM data_local AS dl\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tLEFT JOIN data_template AS dt\n\t\t\tON dt.id = dl.data_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = dl.host_id\n\t\t\t$sql_where1\n\t\t\t$sql_order\n\t\t\t$sql_limit\",\n\t\t\t$sql_params1);\n\t}\n\n\t$nav = html_nav_bar('data_sources.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Sources'), 'page', 'main');\n\n\tform_start('data_sources.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name_cache' => array(\n\t\t\t'display' => __('Data Source Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Data Source. Generally programmatically generated from the Data Template definition.')\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Data Source. Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort0' => array(\n\t\t\t'display' => __('Graphs'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('The number of Graphs and Aggregate Graphs that are using the Data Source.')\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Poller Interval'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The frequency that data is collected for this Data Source.')\n\t\t),\n\t\t'nosort2' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('If this Data Source is no long in use by Graphs, it can be Deleted.')\n\t\t),\n\t\t'active' => array(\n\t\t\t'display' => __('Active'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Whether or not data will be collected for this Data Source. Controlled at the Data Template level.')\n\t\t),\n\t\t'data_template_name' => array(\n\t\t\t'display' => __('Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Data Template that this Data Source was based upon.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($data_sources)) {\n\t\tforeach ($data_sources as $data_source) {\n\t\t\tif (api_data_source_deletable($data_source['local_data_id'])) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\t$data_source['data_template_name'] = html_escape($data_source['data_template_name']);\n\n\t\t\t/* keep copy of data source for comparison */\n\t\t\t$data_source_orig = $data_source;\n\t\t\t$data_source      = api_plugin_hook_function('data_sources_table', $data_source);\n\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tif (empty($data_source['data_template_name'])) {\n\t\t\t\t$data_template_name = '<em>' . __('None') . '</em>';\n\t\t\t} elseif ($data_source_orig['data_template_name'] != $data_source['data_template_name']) {\n\t\t\t\t/* was changed by plugin, plugin has to take care for html-escaping */\n\t\t\t\t$data_template_name = $data_source['data_template_name'];\n\t\t\t} elseif (get_request_var('rfilter') != '') {\n\t\t\t\t$data_template_name = filter_value($data_source['data_template_name'], get_request_var('rfilter'));\n\t\t\t} else {\n\t\t\t\t$data_template_name = html_escape($data_source['data_template_name']);\n\t\t\t}\n\n\t\t\t$graphs_aggregates_url = get_graphs_aggregates_url($data_source['local_data_id']);\n\n\t\t\tif ($data_source['name_cache'] == '') {\n\t\t\t\t$name = __('Damaged Data Source Name');\n\t\t\t} else {\n\t\t\t\t$name = $data_source['name_cache'];\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $data_source['local_data_id'], true, $disabled);\n\n\t\t\t$url = 'data_sources.php?action=ds_edit&id=' . $data_source['local_data_id'];\n\n\t\t\tform_selectable_cell(filter_value($name, get_request_var('rfilter'), $url), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_source['local_data_id'], $data_source['local_data_id'], '', 'right');\n\n\t\t\t// Show link to Graphs and Aggregates\n\t\t\tform_selectable_cell($graphs_aggregates_url, $data_source['local_data_id'], '', 'center');\n\n\t\t\tform_selectable_cell(get_poller_interval($data_source['rrd_step'], $data_source['data_source_profile_id']), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(api_data_source_deletable($data_source['local_data_id']) ? __('Yes') : __('No'), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(($data_source['active'] == 'on' ? __('Yes'):__('No')), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_template_name, $data_source['local_data_id']);\n\t\t\tform_checkbox_cell($name, $data_source['local_data_id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Sources Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_sources)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction get_graphs_aggregates_url($local_data_id) {\n\t$graphs = db_fetch_row_prepared('SELECT GROUP_CONCAT(DISTINCT gl.id) AS graphs, COUNT(DISTINCT gl.id) AS total\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON dl.id = dtr.local_data_id\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gti.task_item_id = dtr.id\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id = gti.local_graph_id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id = gl.id\n\t\tWHERE dl.id = ?\n\t\tAND ag.local_graph_id IS NULL',\n\t\tarray($local_data_id));\n\n\t$aggregates = db_fetch_row_prepared('SELECT GROUP_CONCAT(DISTINCT gl.id) AS graphs, COUNT(DISTINCT gl.id) AS total\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON dl.id = dtr.local_data_id\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gti.task_item_id = dtr.id\n\t\tINNER JOIN graph_local AS gl\n\t\tON gl.id = gti.local_graph_id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id = gl.id\n\t\tWHERE dl.id = ?',\n\t\tarray($local_data_id));\n\n\t$url = '';\n\n\tif (cacti_sizeof($graphs) && $graphs['total'] > 0) {\n\t\t$url .= '<a class=\"linkEditMain\" title=\"' . __('Graphs') . '\" href=\"graphs.php?reset=1&custom=true&local_graph_ids=' . $graphs['graphs'] . '\">' . $graphs['total'] . '</a>';\n\t} else {\n\t\t$url .= '<span title=\"' . __('No Graphs') . '\">0</span>';\n\t}\n\n\tif (cacti_sizeof($aggregates) && $aggregates['total'] > 0) {\n\t\t$url .= ' / <a class=\"linkEditMain\" title=\"' . __('Aggregates') . '\" href=\"aggregate_graphs.php?reset=1&custom=true&local_graph_ids=' . $aggregates['graphs'] . '\">' . $aggregates['total'] . '</a>';\n\t} else {\n\t\t$url .= ' / <span title=\"' . __('No Aggregates') . '\">0</span>';\n\t}\n\n\treturn $url;\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $page_refresh_interval;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\t$deleted = array('-2' => __('Deleted/Invalid'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $sites;\n\n\t$profiles = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM data_source_profiles\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$profiles = $all + $profiles;\n\n\t$status = array(\n\t\t'-1' => __('All'),\n\t\t'1'  => __('Enabled'),\n\t\t'2'  => __('Disabled'),\n\t\t'3'  => __('Bad Indexes')\n\t);\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$host_id = get_filter_request_var('host_id');\n\tif (get_request_var('host_id') == '') {\n\t\t$host_id = -1;\n\t}\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where    = 'AND h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == 0) {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t} else {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t}\n\n\tif (get_filter_request_var('site_id') > 0) {\n\t\t$sql_where    = 'AND site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\t$templates = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT dt.id, dt.name\n\t\t\tFROM data_template AS dt\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dt.id = dtd.data_template_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON dl.host_id = h.id\n\t\t\tWHERE dtd.local_data_id > 0\n\t\t\t$sql_where\n\t\t\tORDER BY dt.name\",\n\t\t\t$sql_params),\n\t\t'id', 'name'\n\t);\n\n\t$templates = $any + $templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Site'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sites,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'        => 'drop_callback',\n\t\t\t\t\t'friendly_name' => __('Device'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'sql'           => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'        => 'ajax_hosts',\n\t\t\t\t\t'id'            => $host_id,\n\t\t\t\t\t'value'         => $hostname,\n\t\t\t\t\t'on_change'     => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'profile' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Profile'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $profiles,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'orphans' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Orphaned'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => get_nfilter_request_var('orphans')\n\t\t\t\t),\n\t\t\t\t'errored' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Errored'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => get_nfilter_request_var('errored')\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'rfilter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_IS_REGEX,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '55',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Data Sources'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name_cache',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\tif (read_config_option('grds_creation_method') == 1) {\n\t\tif (get_request_var('host_id') == '-1') {\n\t\t\t$new_host_id = 0;\n\t\t} else {\n\t\t\t$new_host_id = get_request_var('host_id');\n\t\t}\n\n\t\t$add_url = html_escape('data_sources.php?action=ds_edit&host_id=' . $new_host_id);\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\tif (get_request_var('host_id') == -1) {\n\t\t$header = __('Data Sources [ All Devices ]');\n\t} elseif (get_request_var('host_id') == 0) {\n\t\t$header = __('Data Sources [ Non Device Based ]');\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$description = db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array(get_request_var('host_id')));\n\t\t$header      = __esc('Data Sources [ %s ]', $description);\n\t} else {\n\t\t$header = __('Data Sources [ All Devices ]');\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'data_sources.php', 'form_data_sources', 'sess_ds', $add_url);\n\n\t$pageFilter->rows_label = __('Data Sources');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "data_templates.php",
          "type": "blob",
          "size": 47.26953125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Change Profile')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\ttemplate_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\ttemplate_rrd_remove();\n\n\t\tbreak;\n\tcase 'template_remove':\n\t\ttemplate_remove();\n\n\t\theader('Location: data_templates.php');\n\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\t\ttemplate_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tdata_templates();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_template_id');\n\t\tget_filter_request_var('data_template_data_id');\n\t\tget_filter_request_var('data_template_rrd_id');\n\t\tget_filter_request_var('data_source_type_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('rrd_heartbeat');\n\t\t/* ==================================================== */\n\n\t\t/* save: data_template */\n\t\t$save1['id']   = get_request_var('data_template_id');\n\t\t$save1['hash'] = get_hash_data_template(get_request_var('data_template_id'));\n\t\t$save1['name'] = form_input_validate(get_nfilter_request_var('template_name'), 'template_name', '', false, 3);\n\n\t\t/* save: data_template_data */\n\t\t$save2['id']                          = get_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = 0;\n\t\t$save2['local_data_id']               = 0;\n\n\t\t$save2['data_input_id'] = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_name']        = form_input_validate((isset_request_var('t_name') ? get_nfilter_request_var('t_name') : ''), 't_name', '', true, 3);\n\t\t$save2['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', (isset_request_var('t_name') ? true : false), 3);\n\t\t$save2['t_active']      = form_input_validate((isset_request_var('t_active') ? get_nfilter_request_var('t_active') : ''), 't_active', '', true, 3);\n\t\t$save2['active']        = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\n\t\t$rrd_step = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('data_source_profile_id')));\n\n\t\t$rrd_heartbeat = db_fetch_cell_prepared('SELECT heartbeat\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('data_source_profile_id')));\n\n\t\t$save2['rrd_step'] = $rrd_step;\n\n\t\t$save2['t_data_source_profile_id'] = form_input_validate((isset_request_var('t_data_source_profile_id') ? get_nfilter_request_var('t_data_source_profile_id') : ''), 't_data_source_profile_id', '', true, 3);\n\t\t$save2['data_source_profile_id']   = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', (isset_request_var('data_source_profile_id') ? true : false), 3);\n\n\t\t/* save: data_template_rrd */\n\t\t$save3['id']                         = get_request_var('data_template_rrd_id');\n\t\t$save3['hash']                       = get_hash_data_template(get_request_var('data_template_rrd_id'), 'data_template_item');\n\t\t$save3['local_data_template_rrd_id'] = 0;\n\t\t$save3['local_data_id']              = 0;\n\n\t\t$save3['t_rrd_maximum']         = form_input_validate((isset_request_var('t_rrd_maximum') ? get_nfilter_request_var('t_rrd_maximum') : ''), 't_rrd_maximum', '', true, 3);\n\n\t\t$save3['rrd_maximum']           = form_input_validate(get_nfilter_request_var('rrd_maximum'), 'rrd_maximum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U|\\|query_ifSpeed\\|$', (isset_request_var('t_rrd_maximum') ? true : false), 3);\n\n\t\t$save3['t_rrd_minimum']         = form_input_validate((isset_request_var('t_rrd_minimum') ? get_nfilter_request_var('t_rrd_minimum') : ''), 't_rrd_minimum', '', true, 3);\n\n\t\t$save3['rrd_minimum']           = form_input_validate(get_nfilter_request_var('rrd_minimum'), 'rrd_minimum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', (isset_request_var('t_rrd_minimum') ? true : false), 3);\n\n\t\t$save3['rrd_heartbeat']         = $rrd_heartbeat;\n\n\t\t$save3['t_data_source_type_id'] = form_input_validate((isset_request_var('t_data_source_type_id') ? get_nfilter_request_var('t_data_source_type_id') : ''), 't_data_source_type_id', '', true, 3);\n\n\t\t$save3['data_source_type_id']   = form_input_validate(get_request_var('data_source_type_id'), 'data_source_type_id', '^[0-9]+$', true, 3);\n\n\t\t$save3['t_data_source_name']    = form_input_validate((isset_request_var('t_data_source_name') ? get_nfilter_request_var('t_data_source_name') : ''), 't_data_source_name', '', true, 3);\n\n\t\t$save3['data_source_name']      = form_input_validate(get_nfilter_request_var('data_source_name'), 'data_source_name', '^[a-zA-Z0-9_]{1,19}$', (isset_request_var('t_data_source_name') ? true : false), 3);\n\n\t\t$save3['t_data_input_field_id'] = form_input_validate((isset_request_var('t_data_input_field_id') ? get_nfilter_request_var('t_data_input_field_id') : ''), 't_data_input_field_id', '', true, 3);\n\n\t\t$save3['data_input_field_id']   = form_input_validate((isset_request_var('data_input_field_id') ? get_nfilter_request_var('data_input_field_id') : '0'), 'data_input_field_id', '', true, 3);\n\n\t\tif ($save3['rrd_minimum'] != 'U' && $save3['rrd_maximum'] != 'U') {\n\t\t\tif ($save3['rrd_minimum'] >= $save3['rrd_maximum']) {\n\t\t\t\traise_message(43);\n\n\t\t\t\t$_SESSION[SESS_ERROR_FIELDS]['rrd_maximum'] = 'rrd_maximum';\n\n\t\t\t\theader('Location: data_templates.php?action=template_edit&id=' . (empty($data_template_id) ? get_request_var('data_template_id') : $data_template_id) . (isempty_request_var('current_rrd') ? '' : '&view_rrd=' . (get_nfilter_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : get_request_var('data_template_rrd_id'))));\n\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT id, input_output, regexp_match,\n\t\t\tallow_nulls, type_code, data_name\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\",\n\t\t\tarray(get_request_var('data_input_id')));\n\n\t\t/* pass 1 for validation */\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\tif ((isset_request_var($form_value)) && ($input_field['type_code'] == '')) {\n\t\t\t\t\tif ((isset_request_var('t_' . $form_value)) &&\n\t\t\t\t\t\t(get_nfilter_request_var('t_' . $form_value) == 'on')) {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$not_required = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tform_input_validate(get_nfilter_request_var($form_value), 'value_' . $input_field['data_name'], $input_field['regexp_match'], $not_required, 3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save1['last_updated'] = date('Y-m-d H:i:s');\n\n\t\t\t$data_template_id = sql_save($save1, 'data_template');\n\n\t\t\tif ($data_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['data_template_id'] = $data_template_id;\n\t\t\t$data_template_data_id     = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\t/* update actual host template information for live hosts */\n\t\tif ((!is_error_message()) && ($save2['id'] > 0)) {\n\t\t\tdb_execute_prepared('UPDATE data_template_data\n\t\t\t\tSET data_input_id = ?\n\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\tarray(get_request_var('data_input_id'), $data_template_id));\n\n\t\t\tdb_execute_prepared('UPDATE data_template_rrd\n\t\t\t\tSET rrd_heartbeat = ?\n\t\t\t\tWHERE data_template_id = ?\n\t\t\t\tAND local_data_id = 0',\n\t\t\t\tarray($rrd_heartbeat, $data_template_id));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save3['data_template_id'] = $data_template_id;\n\t\t\t$data_template_rrd_id      = sql_save($save3, 'data_template_rrd');\n\n\t\t\tif ($data_template_rrd_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t/* Lets make sure we don't have any fields not set */\n\t\t\t$data_template_fields = db_fetch_assoc_prepared('SELECT\n\t\t\t\tdt.id, dt.name, dtd.name, di.hash, di.name, di.type_id,\n\t\t\t\tdtr.id dtr_id, dtr.data_source_name, dif.id dif_id, dif.name, dif.data_name,\n\t\t\t\tdif.input_output, dif.update_rra\n\t\t\t\tFROM data_template dt\n\t\t\t\tINNER JOIN data_template_data dtd\n\t\t\t\tON dt.id = dtd.data_template_id\n\t\t\t\tINNER JOIN data_input di\n\t\t\t\tON dtd.data_input_id = di.id\n\t\t\t\tINNER JOIN data_template_rrd dtr\n\t\t\t\tON dt.id = dtr.data_template_id\n\t\t\t\tLEFT OUTER JOIN data_input_fields dif\n\t\t\t\tON dtr.data_input_field_id = dif.id\n\t\t\t\tWHERE di.type_id in (1,5) AND dt.id = ? AND dif.id IS NULL',\n\t\t\t\tarray($data_template_id));\n\n\t\t\tif (cacti_sizeof($data_template_fields)) {\n\t\t\t\tforeach ($data_template_fields as $data_template_field) {\n\t\t\t\t\traise_message('data_template_rrd_' . $data_template_field['dtr_id'], __('Field \"%s\" is missing an Output Field.  Select the Output Field associated with this Data Source, and press Save again.', $data_template_field['data_source_name']), MESSAGE_LEVEL_WARN);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (!isempty_request_var('data_template_id')) {\n\t\t\t\t/* push out all data source settings to child data source using this template */\n\t\t\t\tpush_out_data_source($data_template_data_id);\n\t\t\t\tpush_out_data_source_item($data_template_rrd_id);\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?',\n\t\t\t\t\tarray($data_template_data_id));\n\n\t\t\t\tif (cacti_sizeof($input_fields)) {\n\t\t\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\t\t\tif (isset_request_var($form_value)) {\n\t\t\t\t\t\t\t/* save the data into the 'host_template_data' table */\n\t\t\t\t\t\t\tif (isset_request_var('t_value_' . $input_field['data_name'])) {\n\t\t\t\t\t\t\t\t$template_this_item = 'on';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$template_this_item = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ((!empty($form_value)) || (!isempty_request_var('t_value_' . $input_field['data_name']))) {\n\t\t\t\t\t\t\t\t/* unusual case where a form value comes back as an array\n\t\t\t\t\t\t\t\t * this should be cleaned up in the database repair script. */\n\t\t\t\t\t\t\t\t$value = get_nfilter_request_var($form_value);\n\n\t\t\t\t\t\t\t\tif (is_array($value)) {\n\t\t\t\t\t\t\t\t\t$value = trim($value[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$value = trim($value);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdb_execute_prepared('INSERT INTO data_input_data\n\t\t\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, data_template_id, local_data_id, host_id, t_value, value)\n\t\t\t\t\t\t\t\t\tVALUES (?, ?, ?, ?, ?, ?, ?)',\n\t\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t\t$input_field['id'],\n\t\t\t\t\t\t\t\t\t\t$data_template_data_id,\n\t\t\t\t\t\t\t\t\t\t$data_template_id,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t$template_this_item,\n\t\t\t\t\t\t\t\t\t\t$value\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* push out all \"custom data\" for this data source template */\n\t\t\t\tpush_out_data_source_custom_data($data_template_id);\n\n\t\t\t\t/* push out the hosts that use the data template */\n\t\t\t\t$hosts = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT host_id\n\t\t\t\t\t\tFROM data_local\n\t\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\t\tarray($data_template_id)),\n\t\t\t\t\t'host_id', 'host_id'\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($hosts)) {\n\t\t\t\t\tforeach ($hosts as $host_id) {\n\t\t\t\t\t\tpush_out_host($host_id, 0, $data_template_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* push out field mappings for the data collector */\n\t\t\t\t/* its important to delete first due to the possibility that\n\t\t\t\t * the field names were changed */\n\t\t\t\tdb_execute_prepared('DELETE FROM poller_data_template_field_mappings\n\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\tarray($data_template_id));\n\n\t\t\t\tdb_execute_prepared('REPLACE INTO poller_data_template_field_mappings\n\t\t\t\t\tSELECT dtr.data_template_id, dif.data_name,\n\t\t\t\t\tGROUP_CONCAT(DISTINCT dtr.data_source_name ORDER BY dtr.data_source_name) AS data_source_names,\n\t\t\t\t\tNOW() AS last_updated\n\t\t\t\t\tFROM graph_templates_item AS gti\n\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\tON gti.task_item_id = dtr.id\n\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\tON dtr.data_input_field_id = dif.id\n\t\t\t\t\tWHERE dtr.local_data_id = 0\n\t\t\t\t\tAND gti.local_graph_id = 0\n\t\t\t\t\tAND dtr.data_template_id = ?\n\t\t\t\t\tGROUP BY dtr.data_template_id, dif.data_name',\n\t\t\t\t\tarray($data_template_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php?action=template_edit&id=' . (empty($data_template_id) ? get_request_var('data_template_id') : $data_template_id) . (isempty_request_var('current_rrd') ? '' : '&view_rrd=' . (get_nfilter_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : $data_template_rrd_id)));\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t$data_template_data_ids = db_fetch_cell('SELECT GROUP_CONCAT(id)\n\t\t\t\t\tFROM data_template_data\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'data_template_id') . '\n\t\t\t\t\tAND local_data_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM data_template_data WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM data_template_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM data_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t/* \"undo\" any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE data_template_data\n\t\t\t\t\tSET local_data_template_data_id = 0, data_template_id = 0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\n\t\t\t\tdb_execute('UPDATE data_template_rrd\n\t\t\t\t\tSET local_data_template_rrd_id = 0, data_template_id = 0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\n\t\t\t\tdb_execute('UPDATE data_local\n\t\t\t\t\tSET data_template_id = 0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\n\t\t\t\t/* delete data_input_data information */\n\t\t\t\tif ($data_template_data_ids != '') {\n\t\t\t\t\tdb_execute('DELETE FROM data_input_data WHERE data_template_data_id IN(' . $data_template_data_ids . ')');\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_data_source(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change data source profile\n\t\t\t\t$step = db_fetch_cell_prepared('SELECT step\n\t\t\t\t\tFROM data_source_profiles\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id')));\n\n\t\t\t\t$heartbeat = db_fetch_cell_prepared('SELECT heartbeat\n\t\t\t\t\tFROM data_source_profiles\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id')));\n\n\t\t\t\tif (!empty($step)) {\n\t\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t\t$push_out = false;\n\t\t\t\t\t\tif (isset_request_var('update_data_sources') && get_nfilter_request_var('update_data_sources') == 'on') {\n\t\t\t\t\t\t\t$sql_where = ' AND local_data_id >= 0';\n\t\t\t\t\t\t\t$push_out = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$sql_where = ' AND local_data_id = 0';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared(\"UPDATE data_template_data\n\t\t\t\t\t\t\tSET data_source_profile_id = ?,\n\t\t\t\t\t\t\trrd_step = ?\n\t\t\t\t\t\t\tWHERE data_template_id = ?\n\t\t\t\t\t\t\t$sql_where\",\n\t\t\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id'), $step, $selected_items[$i]));\n\n\t\t\t\t\t\tdb_execute_prepared(\"UPDATE data_template_rrd\n\t\t\t\t\t\t\tSET rrd_heartbeat = ?\n\t\t\t\t\t\t\tWHERE data_template_id = ?\n\t\t\t\t\t\t\t$sql_where\",\n\t\t\t\t\t\t\tarray($heartbeat, $selected_items[$i]));\n\n\t\t\t\t\t\tif ($push_out) {\n\t\t\t\t\t\t\t$php_binary = read_config_option('path_php_binary');\n\t\t\t\t\t\t\texec_background($php_binary, CACTI_PATH_CLI . '/rebuild_poller_cache.php --data-template-id=' . $selected_items[$i]);\n\n\t\t\t\t\t\t\traise_message('repopulate_' . $i, __('The Poller Cache operation has been launched in background for Data Template ID %d.', $selected_items[$i]), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$available_profiles = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT id, name\n\t\t\t\tFROM data_source_profiles\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'data_templates.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist,\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Data Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Data Templates.'),\n\t\t\t\t\t'scont'    => __('Delete Data Template'),\n\t\t\t\t\t'pcont'    => __('Delete Data Templates')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Data Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Data Templates.'),\n\t\t\t\t\t'scont'    => __('Duplicate Data Template'),\n\t\t\t\t\t'pcont'    => __('Duplicate Data Templates'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<template_title> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Change Profile the following Data Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Change Profile following Data Templates.'),\n\t\t\t\t\t'scont'    => __('Change Profile for Data Template'),\n\t\t\t\t\t'pcont'    => __('Change Profile for Data Templates'),\n\t\t\t\t\t'footer'   => __('NOTE: This change only will affect future Data Sources and does not alter existing Data Sources.'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'data_source_profile_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('New Data Source Profile'),\n\t\t\t\t\t\t\t'array'   => $available_profiles,\n\t\t\t\t\t\t\t'default' => ''\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'update_data_sources' => array(\n\t\t\t\t\t\t\t'method'  => 'checkbox',\n\t\t\t\t\t\t\t'title'   => __('Update database for existing Data Sources?'),\n\t\t\t\t\t\t\t'description' => __('WARNING: This change will not change either the step or the heartbeat of existing RRDfiles.  After this change, a Rebuild Poller Cache operation will take place in background to update the data collection cycle for the impacted Data Sources.  It is strongly suggested that you either delete all the impacted RRDfiles afterwards, or use the splice_rrd.php CLI script to preserve old data and repopulate the new RRDfiles with the legacy data.  Otherwise, this change will have no on the data and may in fact lead to a loss of fidelity if you are increasing the time between data collection cycles.'),\n\t\t\t\t\t\t\t'default' => ''\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction template_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\t/* ==================================================== */\n\n\t$children = db_fetch_assoc_prepared('SELECT id\n\t\tFROM data_template_rrd\n\t\tWHERE local_data_template_rrd_id = ?\n\t\tOR id = ?',\n\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('DELETE FROM data_template_rrd WHERE id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('DELETE FROM snmp_query_graph_rrd WHERE data_template_rrd_id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('UPDATE graph_templates_item SET task_item_id = 0 WHERE task_item_id = ?', array($item['id']));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('data_template_id'));\n}\n\nfunction template_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_data_id');\n\t/* ==================================================== */\n\n\t$hash = get_hash_data_template(0, 'data_template_item');\n\n\t/* check for duplicated data source name */\n\t$i      = 0;\n\t$dsname = 'ds';\n\n\twhile (true) {\n\t\t$exists = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_source_name = ?\n\t\t\tAND data_template_id = ?',\n\t\t\tarray($dsname, get_request_var('id')));\n\n\t\tif (empty($exists)) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\t$i++;\n\t\t\t$dsname = 'ds (' . $i . ')';\n\n\t\t\tif ($i > 100) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t(hash, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t    VALUES (?, ?, \"U\", 0, 600, 1, ?)', array($hash, get_request_var('id'), $dsname));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\t/* add this data template item to each data source using this data template */\n\t$children = db_fetch_assoc_prepared('SELECT local_data_id\n\t\tFROM data_template_data\n\t\tWHERE data_template_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t\t\t(local_data_template_rrd_id, local_data_id, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\t\t\tVALUES (?, ?, ?, 0, 0, 600, 1, ?)',\n\t\t\t\tarray($data_template_rrd_id, $item['local_data_id'], get_request_var('id'), $dsname));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction data_template_is_stream($data_input_id) {\n\t$id = db_fetch_cell_prepared('SELECT id\n\t\tFROM data_input\n\t\tWHERE hash = \"7ed649bfa9cd627d7482b7700e88db53\"\n\t\tAND id = ?',\n\t\tarray($data_input_id));\n\n\treturn !empty($id) ? true:false;\n}\n\nfunction data_template_is_snmp($data_input_id) {\n\t$id = db_fetch_cell_prepared('SELECT id\n\t\tFROM data_input\n\t\tWHERE hash = \"3eb92bb845b9660a7445cf9740726522\"\n\t\tAND id = ?',\n\t\tarray($data_input_id));\n\n\treturn !empty($id) ? true:false;\n}\n\nfunction template_edit() {\n\tglobal $struct_data_source, $struct_data_source_item, $data_source_types, $fields_data_template_template_edit, $fields_host_edit, $hash_system_data_inputs;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('view_rrd');\n\t/* ==================================================== */\n\n\t$isSNMPGet = false;\n\t$isStream  = false;\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_data = db_fetch_row_prepared('SELECT dtd.*, data_sources\n\t\t\tFROM (\n\t\t\t\tSELECT COUNT(*) AS data_sources FROM data_local AS dl\n\t\t\t\tLEFT JOIN data_template_data AS idtd ON dl.id=idtd.local_data_id\n\t\t\t\tWHERE idtd.data_template_id = ?\n\t\t\t) AS ds\n\t\t\tINNER JOIN (\n\t\t\t\tSELECT * FROM data_template_data\n\t\t\t\tWHERE data_template_id = ? AND local_data_id = 0\n\t\t\t) AS dtd',\n\t\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($template_data)) {\n\t\t\t$isSNMPGet = data_template_is_snmp($template_data['data_input_id']);\n\t\t\t$isStream  = data_template_is_stream($template_data['data_input_id']);\n\t\t}\n\n\t\t$header_label = __esc('Data Templates [edit: %s]', $template['name']);\n\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape($template['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t$data_input_id = 0;\n\n\t\tif (!empty($template_data['data_input_id'])) {\n\t\t\t$data_input_id = get_nonsystem_data_input($template_data['data_input_id']);\n\n\t\t\tif (!isset($data_input_id) || $data_input_id == null) {\n\t\t\t\t$data_input_id = 0;\n\t\t\t}\n\t\t}\n\n\t\tif ($data_input_id > 0) {\n\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print htmlspecialchars('data_input.php?action=edit&id=' . $data_input_id);?>'><?php print __('Edit Data Input Method.');?></a><br><?php\n\t\t}\n\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t} else {\n\t\t$header_label = __('Data Templates [new]');\n\t}\n\n\tform_start('data_templates.php', 'data_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => 'true'),\n\t\t'fields' => inject_form_variables($fields_data_template_template_edit, (isset($template) ? $template : array()), (isset($template_data) ? $template_data : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Data Source'), '100%', true, '3', 'center', '');\n\n\t/* make sure 'data source path' doesn't show up for a template... we should NEVER template this field */\n\tunset($struct_data_source['data_source_path']);\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_data[$field_name]) ? $template_data[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_data) ? $template_data['data_template_id'] : '0');\n\n\t\tif ($field_array['flags'] == 'ALWAYSTEMPLATE') {\n\t\t\t$form_array[$field_name]['description'] .= '<br><em>' . __('This field is always templated.') . '</em>';\n\t\t} else {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name'          => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t\t'value'         => (isset($template_data['t_' . $field_name]) ? $template_data['t_' . $field_name] : ''),\n\t\t\t\t'default'       => ''\n\t\t\t);\n\t\t}\n\t}\n\n\t$form_array['data_source_profile_id']['sql'] = 'SELECT id, name FROM data_source_profiles ORDER BY name';\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_array, (isset($template_data) ? $template_data : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* fetch ALL rrd's for this data source */\n\tif (!isempty_request_var('id')) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t/* select the first \"rrd\" of this data source by default */\n\tif (isempty_request_var('view_rrd')) {\n\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t}\n\n\t/* get more information about the rrd we chose */\n\tif (!isempty_request_var('view_rrd')) {\n\t\t$template_rrd = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('view_rrd')));\n\t}\n\n\t$i = 0;\n\n\tif (isset($template_data_rrds)) {\n\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\tprint \"<div class='tabs' style='float:left;'><nav><ul role='tablist'>\";\n\n\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='pic selected'\" : \"class='pic'\") . \" href='\" . html_escape('data_templates.php?action=template_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>\" . ($i + 1) . ': ' . html_escape($template_data_rrd['data_source_name']) . '</a>' . ($template_data['data_sources'] == 0 ? \"<a class='pic deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='\" . html_escape('data_templates.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&data_template_id=' . get_request_var('id')) . \"'></a>\":\"<a class='deleteMarkerDisabled ti ti-x' href='#' title='\" . __esc('Data Templates in use can not be modified') . \"'></a>\") . \"</li>\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint \"</ul></nav></div>\";\n\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t}\n\t}\n\n\tif (get_request_var('id') > 0) {\n\t\t$readOnly = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_local\n\t\t\tWHERE data_template_id = ?\n\t\t\tLIMIT 1',\n\t\t\tarray(get_request_var('id')));\n\t} else {\n\t\t$readOnly = false;\n\t}\n\n\tif (!$isSNMPGet && !$readOnly) {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', (!isempty_request_var('id') ? 'data_templates.php?action=rrd_add&id=' . get_request_var('id'):''), __('New'));\n\t} else {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', '', '');\n\t}\n\n\t/* data input fields list */\n\tif (empty($template_data['data_input_id'])) {\n\t\tunset($struct_data_source_item['data_input_field_id']);\n\t} else {\n\t\t$input_type = db_fetch_cell_prepared('SELECT type_id\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\tif ($input_type != 1 && $input_type != 5) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id, CONCAT(data_name, ' - ', name) AS name FROM data_input_fields WHERE data_input_id=\" . $template_data['data_input_id'] . \" AND input_output='out' AND update_rra='on' ORDER BY data_name, name\";\n\t\t}\n\t}\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t$form_array[$field_name]['value']        = (isset($template_rrd[$field_name]) ? $template_rrd[$field_name] : '');\n\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t'name'          => 't_' . $field_name,\n\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t'value'         => (isset($template_rrd['t_' . $field_name]) ? $template_rrd['t_' . $field_name] : ''),\n\t\t\t'default'       => ''\n\t\t);\n\t}\n\n\tif ($isStream) {\n\t\tunset($form_array['data_input_field_id']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + array(\n\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t'value'  => (isset($template_rrd) ? $template_rrd['id'] : '0')\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$i = 0;\n\n\tif (!isempty_request_var('id') && !$isStream) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\" ORDER BY name',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($name)), '100%', true, '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields)) {\n\t\t\t$class = 'odd';\n\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT t_value, value\n\t\t\t\t\tFROM data_input_data AS did\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($template_data['id'], $field['id']));\n\n\t\t\t\t// Data Query Key fields\n\t\t\t\tif (data_input_field_always_checked($field['id'])) {\n\t\t\t\t\t$message = __esc('This value is disabled due to it either it value being derived from the Device or special Data Query object that keeps track of critical data Data Query associations.');\n\n\t\t\t\t\tif (cacti_sizeof($data_input_data)) {\n\t\t\t\t\t\t$old_value  = $data_input_data['value'];\n\t\t\t\t\t\t$old_tvalue = 'on';\n\t\t\t\t\t\t$disable    = 'disable';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$old_value  = '';\n\t\t\t\t\t\t$old_tvalue = 'on';\n\t\t\t\t\t\t$disable    = 'disable';\n\t\t\t\t\t}\n\t\t\t\t} elseif ($field['type_code'] == 'host_id') {\n\t\t\t\t\t$message = __esc('This value is disabled due to it being derived from the Device and read only.');\n\n\t\t\t\t\t$old_value  = $data_input_data['value'];\n\t\t\t\t\t$old_tvalue = '';\n\t\t\t\t\t$disable    = 'disable';\n\t\t\t\t} else {\n\t\t\t\t\t$message = __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.');\n\n\t\t\t\t\tif (cacti_sizeof($data_input_data)) {\n\t\t\t\t\t\t$old_value  = $data_input_data['value'];\n\t\t\t\t\t\t$old_tvalue = $data_input_data['t_value'];\n\t\t\t\t\t\t$disable    = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$old_value  = '';\n\t\t\t\t\t\t$old_tvalue = '';\n\t\t\t\t\t\t$disable    = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($field['data_name'] == 'management_ip') {\n\t\t\t\t\t$help = $fields_host_edit['hostname']['description'];\n\t\t\t\t} elseif (isset($fields_host_edit[$field['data_name']])) {\n\t\t\t\t\t$help = $fields_host_edit[$field['data_name']]['description'];\n\t\t\t\t} else {\n\t\t\t\t\t$help = $field['name'];\n\t\t\t\t}\n\n\t\t\t\tprint \"<div class='formRow $class'>\";\n\n\t\t\t\tif ($class == 'odd') {\n\t\t\t\t\t$class = 'even';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'odd';\n\t\t\t\t}\n\n\t\t\t\tif (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']) && $old_tvalue == '') {\n\t\t\t\t\t$title = __esc('Value will be derived from the Device if this field is left empty.');\n\t\t\t\t} else {\n\t\t\t\t\t$title = '';\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<div class='formColumnLeft'>\n\t\t\t\t\t<div class='formFieldName customDataCheckbox <?php print $disable;?>'><?php form_checkbox('t_value_' . $field['data_name'], $old_tvalue, '', '', '', get_request_var('id'), '', $message);?><?php print html_escape($field['name']);?><div class='formTooltip'><?php print display_tooltip($help);?></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='formColumnRight <?php print $disable;?>'>\n\t\t\t\t\t<?php form_text_box('value_' . $field['data_name'], $old_value, '', '', 30, 'text', 0, '', $title);?>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\tprint '</div>';\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<div style=\"width:100%;float:left;\"><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></div>';\n\t\t}\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tform_save_button('data_templates.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar readOnly = <?php print $readOnly ? 'true':'false';?>;\n\n\t$(function() {\n\t\tif (readOnly) {\n\t\t\t// Data Source\n\t\t\t$('#data_input_id').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_data_input_id').prop('disabled', true).addClass('ui-state-disabled');\n\n\t\t\tif ($('#data_input_id').selectmenu('instance')) {\n\t\t\t\t$('#data_input_id').selectmenu('disable');\n\t\t\t}\n\n\t\t\t// Data source attributes\n\t\t\t$('#data_source_name').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_data_source_name').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#data_source_type_id').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_data_source_type_id').prop('disabled', true).addClass('ui-state-disabled');\n\n\t\t\t// Custom Data\n\t\t\t$('#value_index_type').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_value_index_type').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#value_index_value').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_value_index_value').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#value_output_type').prop('disabled', true).addClass('ui-state-disabled');\n\t\t\t$('#t_value_output_type').prop('disabled', true).addClass('ui-state-disabled');\n\n\t\t\tif ($('#data_source_type_id').selectmenu('instance')) {\n\t\t\t\t$('#data_source_type_id').selectmenu('disable');\n\t\t\t}\n\t\t}\n\n\t\t// Disable Data Query Input Field Changes\n\t\t$('.disable').find('input').each(function() {\n\t\t\t$(this).prop('disabled', true).addClass('ui-stat-disabled');\n\t\t});\n\n\t\t$('.customDataCheckbox').find('input').on('change', function() {\n\t\t\tif ($(this).prop('checked') == false) {\n\t\t\t\traiseMessage(\n\t\t\t\t\t'<?= __('Custom Data Warning Message');?>',\n\t\t\t\t\t'<?= __esc('WARNING: Data Loss can Occur');?>',\n\t\t\t\t\t'<?= __esc('After you uncheck this checkbox and then Save the Data Template, any existing Data Sources based on this Data Template will lose their Custom Data.  This can result in broken Data Collection and Graphs');?>',\n\t\t\t\t\tMESSAGE_LEVEL_MIXED\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data_templates() {\n\tglobal $actions, $item_rows;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$rows_where = '';\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where    = ' WHERE dt.name LIKE ?';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('profile') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_source_profile_id = ?';\n\t\t$sql_params[] = get_request_var('profile');\n\t}\n\n\tif (get_request_var('method') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_input_id = ?';\n\t\t$sql_params[] = get_request_var('method');\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dt.data_sources > 0';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM data_template AS dt\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dt.id = dtd.data_template_id\n\t\tAND dtd.local_data_id = 0\n\t\tINNER JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id = dsp.id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$template_list_sql = \"SELECT dt.id, dt.name, dt.data_sources, dt.last_updated,\n\t\tdi.name AS data_input_method, dtd.active AS active, dsp.name AS profile_name\n\t\tFROM data_template AS dt\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dt.id = dtd.data_template_id\n\t\tAND dtd.local_data_id = 0\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id = dsp.id\n\t\tLEFT JOIN data_input AS di\n\t\tON dtd.data_input_id = di.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\t$template_list = db_fetch_assoc_prepared($template_list_sql, $sql_params);\n\n\t$display_text = array(\n\t\t'dt.name' => array(\n\t\t\t'display' => __('Data Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Data Template.')\n\t\t),\n\t\t'dt.id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Data Template.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Data Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Data Source.')\n\t\t),\n\t\t'data_sources' => array(\n\t\t\t'display' => __('Data Sources Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Data Sources using this Data Template.')\n\t\t),\n\t\t'dtd.data_input_method' => array(\n\t\t\t'display' => __('Input Method'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The method that is used to place Data into the Data Source RRDfile.')\n\t\t),\n\t\t'profile_name' => array(\n\t\t\t'display' => __('Profile Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The default Data Source Profile for this Data Template.')\n\t\t),\n\t\t'active' => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Data Sources based on Inactive Data Templates will not be updated when the poller runs.')\n\t\t),\n\t\t'last_updated' => array(\n\t\t\t'display' => __('Last Updated'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The last time this Template was updated.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('data_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Data Templates'), 'page', 'main');\n\n\tform_start('data_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\t$ds_url = 'data_sources.php?reset=true&template_id=' . $template['id'];\n\n\t\t\tif (get_request_var('profile') != '-1') {\n\t\t\t\t$ds_url .= '&profile=' . get_request_var('profile');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'data_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($template['data_sources']), '', $ds_url), $template['id'], '', 'right');\n\n\t\t\tform_selectable_cell((empty($template['data_input_method']) ? '<em>' . __('None') .'</em>': html_escape($template['data_input_method'])), $template['id']);\n\t\t\tform_selectable_cell((empty($template['profile_name']) ? __('External'):html_escape($template['profile_name'])), $template['id']);\n\t\t\tform_selectable_cell((($template['active'] == 'on') ? __('Active'):__('Disabled')), $template['id']);\n\t\t\tform_selectable_cell($template['last_updated'], $template['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Templates Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $page_refresh_interval;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\tif (isset_request_var('has_data')) {\n\t\t$value = get_nfilter_request_var('has_data');\n\t} else {\n\t\t$value = read_config_option('default_has') == 'on' ? 'true':'false';\n\t}\n\n\t$profiles = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM data_source_profiles\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$profiles = $all + $profiles;\n\n\t$methods = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT id, name\n\t\t\tFROM data_input\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$methods = $all + $methods;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'method' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Method'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $methods,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'profile' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Profile'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $profiles,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n                'has_data' => array(\n                    'method'         => 'filter_checkbox',\n                    'friendly_name'  => __('Has Data Sources'),\n                    'filter'         => FILTER_VALIDATE_REGEXP,\n                    'filter_options' => array('options' => array('regexp' => '(true|false)')),\n                    'default'        => '',\n                    'pageset'        => true,\n                    'value'          => $value\n                )\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Data Templates'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'dt.name',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Data Templates'), 'data_templates.php', 'form_data', 'sess_dt', 'data_templates.php?action=edit');\n\n\t$pageFilter->rows_label = __('Data Templates');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "formats",
          "type": "tree",
          "content": null
        },
        {
          "name": "gprint_presets.php",
          "type": "blob",
          "size": 9.2958984375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tgprint_presets_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tgprint_presets();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_gprint_presets')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']          = get_request_var('id');\n\t\t$save['hash']        = get_hash_gprint(get_request_var('id'));\n\t\t$save['name']        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['gprint_text'] = form_input_validate(get_nfilter_request_var('gprint_text'), 'gprint_text', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$gprint_preset_id = sql_save($save, 'graph_templates_gprint');\n\n\t\t\tif ($gprint_preset_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: gprint_presets.php?action=edit&id=' . (empty($gprint_preset_id) ? get_nfilter_request_var('id') : $gprint_preset_id));\n\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: gprint_presets.php');\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM graph_templates_gprint WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: gprint_presets.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates_gprint WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'gprint_presets.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following GPRINT Preset.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following GPRINT Presets.'),\n\t\t\t\t\t'scont'    => __('Delete GPRINT Preset'),\n\t\t\t\t\t'pcont'    => __('Delete GPRINT Presets')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction gprint_presets_edit() {\n\tglobal $fields_grprint_presets_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$gprint_preset = db_fetch_row_prepared('SELECT * FROM graph_templates_gprint WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label  = __esc('GPRINT Presets [edit: %s]', $gprint_preset['name']);\n\t} else {\n\t\t$header_label = __('GPRINT Presets [new]');\n\t}\n\n\tform_start('gprint_presets.php', 'gprint_presets');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_grprint_presets_edit, (isset($gprint_preset) ? $gprint_preset : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('gprint_presets.php');\n}\n\nfunction gprint_presets() {\n\tglobal $actions, $item_rows;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('GRPRINT Presets'), 'gprint_presets.php', 'form_gprint', 'sess_gp', 'gprint_presets.php?action=edit');\n\n\t$pageFilter->rows_label = __('GPRINTs');\n\t$pageFilter->has_graphs = true;\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (name LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM graph_templates_gprint\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$gprint_list = db_fetch_assoc(\"SELECT *\n\t\tFROM graph_templates_gprint\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('GPRINT Preset Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this GPRINT Preset.')\n\t\t),\n\t\t'gprint_text' => array(\n\t\t\t'display' => __('Format'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The GPRINT format string.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('GPRINTs that are in use cannot be Deleted.  In use is defined as being referenced by either a Graph or a Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs using this GPRINT.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs Templates using this GPRINT.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('gprint_presets.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('GPRINTs'), 'page', 'main');\n\n\tform_start('gprint_presets.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($gprint_list)) {\n\t\tforeach ($gprint_list as $gp) {\n\t\t\tif ($gp['graphs'] == 0 && $gp['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $gp['id'], false, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($gp['name'], get_request_var('filter'), 'gprint_presets.php?action=edit&id=' . $gp['id']), $gp['id']);\n\t\t\tform_selectable_ecell($gp['gprint_text'], $gp['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $gp['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($gp['graphs'], '-1'), $gp['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($gp['templates'], '-1'), $gp['id'], '', 'right');\n\t\t\tform_checkbox_cell($gp['name'], $gp['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No GPRINT Presets') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($gprint_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "graph.php",
          "type": "blob",
          "size": 2.0263671875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\ninclude('./include/auth.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/html_tree.php');\n\n/* set default action */\nset_default_action('view');\n\nif (!isset_request_var('view_type')) {\n\tset_request_var('view_type', '');\n}\n\napi_plugin_hook_function('graph');\n\nswitch (get_request_var('action')) {\n\tcase 'view':\n\t\thtml_graph_single_view();\n\n\t\tbreak;\n\tcase 'zoom':\n\t\thtml_graph_zoom();\n\n\t\tbreak;\n\tcase 'properties':\n\t\thtml_graph_properties();\n\n\t\tbreak;\n}\n\n"
        },
        {
          "name": "graph_image.php",
          "type": "blob",
          "size": 6.486328125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* since we'll have additional headers, tell php when to flush them */\nob_start();\n\n$guest_account = true;\n$auth_text     = true;\n$gtype         = 'png';\n\ninclude('./include/auth.php');\ninclude_once('./lib/rrd.php');\n\n/* ================= input validation ================= */\nget_filter_request_var('graph_start');\nget_filter_request_var('graph_end');\nget_filter_request_var('graph_height');\nget_filter_request_var('graph_width');\nget_filter_request_var('local_graph_id');\n\nif (isset_request_var('graph_nolegend')) {\n\tset_request_var('graph_nolegend', 'true');\n}\n\nget_filter_request_var('graph_theme', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n/* ==================================================== */\n\napi_plugin_hook_function('graph_image');\n\n$graph_data_array = array();\n\n// Determine the graph type of the output\nif (!isset_request_var('image_format')) {\n\t$type   = db_fetch_cell_prepared('SELECT image_format_id\n\t\tFROM graph_templates_graph\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('local_graph_id')));\n\n\tswitch($type) {\n\t\tcase '1':\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t\tcase '3':\n\t\t\t$gtype = 'svg+xml';\n\n\t\t\tbreak;\n\t}\n} else {\n\tswitch(strtolower(get_nfilter_request_var('image_format'))) {\n\t\tcase 'png':\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\t$gtype = 'svg+xml';\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t}\n}\n\n$graph_data_array['image_format'] = $gtype;\n\ncacti_session_close();\n\n/* override: graph start time (unix time) */\nif (!isempty_request_var('graph_start') && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n}\n\n/* override: graph end time (unix time) */\nif (!isempty_request_var('graph_end') && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n}\n\n/* override: graph height (in pixels) */\nif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n}\n\n/* override: graph width (in pixels) */\nif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n}\n\n/* override: skip drawing the legend? */\nif (!isempty_request_var('graph_nolegend')) {\n\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n}\n\n/* print RRDtool graph source? */\nif (!isempty_request_var('show_source')) {\n\t$graph_data_array['print_source'] = get_request_var('show_source');\n}\n\n/* disable cache check */\nif (isset_request_var('disable_cache')) {\n\t$graph_data_array['disable_cache'] = true;\n}\n\n/* set the theme */\nif (isset_request_var('graph_theme')) {\n\t$graph_data_array['graph_theme'] = get_request_var('graph_theme');\n}\n\nif (isset_request_var('rra_id')) {\n\tif (get_nfilter_request_var('rra_id') == 'all') {\n\t\t$rra_id = 'all';\n\t} else {\n\t\t$rra_id = get_filter_request_var('rra_id');\n\t}\n} else {\n\t$rra_id = null;\n}\n\nif ($config['poller_id'] == 1 || read_config_option('storage_location')) {\n\t$null_param = array();\n\t$output = rrdtool_function_graph(get_request_var('local_graph_id'), $rra_id, $graph_data_array, '', $null_param, $_SESSION['sess_user_id']);\n} else {\n\t$url  = CACTI_PATH_URL . 'remote_agent.php?action=graph_json';\n\t$url .= '&local_graph_id=' . get_request_var('local_graph_id');\n\t$url .= '&rra_id=' . $rra_id;\n\n\tforeach($graph_data_array as $variable => $value) {\n\t\t$url .= '&' . $variable . '=' . $value;\n\t}\n\n\t$output = call_remote_data_collector(1, $url);\n\n\tif (is_array($output) && isset($output['image'])) {\n\t\t$output = $output['image'];\n\t}\n\n\t// Find the beginning of the image definition row\n\t$image_begin_pos  = strpos($output, 'image = ');\n\t// Find the end of the line of the image definition row, after this the raw image data will come\n\t$image_data_pos   = strpos($output, \"\\n\" , $image_begin_pos) + 1;\n\t// Insert the raw image data to the array\n\t$output  = substr($output, $image_data_pos);\n}\n\nif ($output !== false && $output != '') {\n\t/* flush the headers now */\n\tob_end_clean();\n\n\theader('Content-type: image/'. $gtype);\n\theader('Cache-Control: max-age=15');\n\n\tprint $output;\n} else {\n\tob_start();\n\n\t/* get the error string */\n\t$graph_data_array['get_error'] = true;\n\n\t$null_param = array();\n\n\trrdtool_function_graph(get_request_var('local_graph_id'), $rra_id, $graph_data_array, null, $null_param, $_SESSION['sess_user_id']);\n\n\t$error = ob_get_contents();\n\n\tif (read_config_option('stats_poller') == '') {\n\t\t$error = __('The Cacti Poller has not run yet.');\n\t}\n\n\tif (isset($graph_data_array['graph_width']) && isset($graph_data_array['graph_height'])) {\n\t\t$image = rrdtool_create_error_image($error, $graph_data_array['graph_width'], $graph_data_array['graph_height']);\n\t} else {\n\t\t$image = rrdtool_create_error_image($error);\n\t}\n\n\tob_end_clean();\n\n\theader('Content-type: image/png');\n\theader('Cache-Control: max-age=15');\n\n\tif ($image !== false) {\n\t\tprint $image;\n\t} else {\n\t\tprint file_get_contents(__DIR__ . '/images/cacti_error_image.png');\n\t}\n}\n"
        },
        {
          "name": "graph_json.php",
          "type": "blob",
          "size": 10.716796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* since we'll have additional headers, tell php when to flush them */\nob_start();\n\n$guest_account = true;\n$auth_json     = true;\n$gtype         = 'png';\n\ninclude('./include/auth.php');\ninclude_once('./lib/rrd.php');\n\napi_plugin_hook_function('graph_image');\n\n/* set the json variable for request validation handling */\nset_request_var('json', true);\n\n$debug = false;\n\nif ($debug == false) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('graph_start');\n\tget_filter_request_var('graph_end');\n\tget_filter_request_var('graph_height');\n\tget_filter_request_var('graph_width');\n\tget_filter_request_var('local_graph_id');\n\n\tif (isset_request_var('graph_nolegend')) {\n\t\tset_request_var('graph_nolegend', 'true');\n\t}\n\n\tget_filter_request_var('graph_theme', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\t/* ==================================================== */\n} else {\n\tset_request_var('graph_width', 700);\n\tset_request_var('graph_height', 200);\n\tset_request_var('title_font_size', 10);\n\tset_request_var('view_type', 'tree');\n\tset_request_var('graph_start', -1600);\n\tset_request_var('graph_end', 0);\n\tset_request_var('local_graph_id', 53);\n\tset_request_var('rra_id', 0);\n}\n\ncacti_session_close();\n\n$graph_data_array = array();\n\n/* override: graph start time (unix time) */\nif (!isempty_request_var('graph_start') && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n}\n\n/* override: graph end time (unix time) */\nif (!isempty_request_var('graph_end') && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n}\n\n/* override: graph height (in pixels) */\nif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n}\n\n/* override: graph width (in pixels) */\nif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n}\n\n/* override: skip drawing the legend? */\nif (!isempty_request_var('graph_nolegend')) {\n\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n}\n\n/* print RRDtool graph source? */\nif (!isempty_request_var('show_source')) {\n\t$graph_data_array['print_source'] = get_request_var('show_source');\n}\n\n/* disable cache check */\nif (isset_request_var('disable_cache')) {\n\t$graph_data_array['disable_cache'] = true;\n}\n\n/* set the theme */\nif (isset_request_var('graph_theme')) {\n\t$graph_data_array['graph_theme'] = get_request_var('graph_theme');\n}\n\nif (isset_request_var('rra_id')) {\n\tif (get_nfilter_request_var('rra_id') == 'all') {\n\t\t$rra_id = 'all';\n\t} else {\n\t\t$rra_id = get_filter_request_var('rra_id');\n\t}\n} else {\n\t$rra_id = null;\n}\n\n$graph_data_array['graphv'] = true;\n\n// Determine the graph type of the output\nif (!isset_request_var('image_format')) {\n\t$type   = db_fetch_cell_prepared('SELECT image_format_id\n\t\tFROM graph_templates_graph\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('local_graph_id')));\n\n\tswitch($type) {\n\t\tcase '1':\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t\tcase '3':\n\t\t\t$gtype = 'svg+xml';\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t}\n} else {\n\tswitch(strtolower(get_nfilter_request_var('image_format'))) {\n\t\tcase 'png':\n\t\t\t$graph_data_array['image_format'] = 'png';\n\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\t$gtype = 'svg+xml';\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$gtype = 'png';\n\n\t\t\tbreak;\n\t}\n}\n\n$graph_data_array['image_format'] = $gtype;\n\nif ($config['poller_id'] == 1 || read_config_option('storage_location')) {\n\t$xport_meta = array();\n\n\t$output = rrdtool_function_graph(get_request_var('local_graph_id'), $rra_id, $graph_data_array, null, $xport_meta, $_SESSION[SESS_USER_ID]);\n\n\tob_end_clean();\n} else {\n\tif (isset_request_var('rra_id')) {\n\t\tif (get_nfilter_request_var('rra_id') == 'all') {\n\t\t\t$rra_id = 'all';\n\t\t} else {\n\t\t\t$rra_id = get_filter_request_var('rra_id');\n\t\t}\n\t}\n\n\t/* get the theme */\n\tif (!isset_request_var('graph_theme')) {\n\t\t$graph_data_array['graph_theme'] = get_selected_theme();\n\t}\n\n\tif (isset($_SESSION[SESS_USER_ID])) {\n\t\t$graph_data_array['effective_user'] = $_SESSION[SESS_USER_ID];\n\t}\n\n\t$url  = CACTI_PATH_URL . 'remote_agent.php?action=graph_json';\n\t$url .= '&local_graph_id=' . get_request_var('local_graph_id');\n\t$url .= '&rra_id=' . $rra_id;\n\n\tforeach ($graph_data_array as $variable => $value) {\n\t\t$url .= '&' . $variable . '=' . $value;\n\t}\n\n\t$output = call_remote_data_collector(1, $url);\n}\n\n$output = trim($output);\n$oarray = array('type' => $gtype, 'local_graph_id' => get_request_var('local_graph_id'), 'rra_id' => $rra_id);\n\n// Check if we received back something populated from rrdtool\nif ($output !== false && $output != '' && strpos($output, 'image = ') !== false) {\n\t// Find the beginning of the image definition row\n\t$image_begin_pos = strpos($output, 'image = ');\n\n\t// Parse and populate everything before the image definition row\n\t$header_lines = explode(\"\\n\", substr($output, 0, $image_begin_pos - 1));\n\n\t// Check for additional data points from graphv output\n\t$graph_start_pos = strpos($output, 'graph_start =', $image_begin_pos);\n\n\tif (!$graph_start_pos) {\n\t\t// Find the end of the line of the image definition row, after this the raw image data will come\n\t\t$image_data_pos = strpos($output, \"\\n\" , $image_begin_pos) + 1;\n\n\t\t// Insert the raw image data to the array\n\t\t$oarray['image'] = base64_encode(substr($output, $image_data_pos));\n\t} else {\n\t\t// Find the end of the line of the image definition row, after this the raw image data will come\n\t\t$image_data_pos = strpos($output, \"\\n\" , $image_begin_pos) + 1;\n\n\t\t// Insert the raw image data to the array\n\t\t$oarray['image'] = base64_encode(substr($output, $image_data_pos, $graph_start_pos - $image_data_pos));\n\n\t\t// Get the datapoints to the end of the file.\n\t\t$datapoints_start_pos = strpos($output, 'datapoints =');\n\n\t\t$datapoints = substr($output, $datapoints_start_pos);\n\n\t\t// Get rid of the 'datapoints =' line\n\t\t$dp_output = explode(\"\\n\", $datapoints);\n\t\tunset($dp_output[0]);\n\n\t\t$datapoints = json_decode(implode(\"\\n\", $dp_output), true);\n\n\t\tforeach($datapoints as $name => $value) {\n\t\t\t$oarray[$name] = $value;\n\t\t}\n\t}\n\n\tforeach ($header_lines as $line) {\n\t\t$parts = explode(' = ', $line);\n\t\t$oarray[$parts[0]] = trim($parts[1]);\n\t}\n\n\tif (isset($oarray['meta'])) {\n\t\tif(isset($oarray['meta']['legend']) & isset($xport_meta['legend'])) {\n\t\t\tforeach ($oarray['meta']['legend'] as $key => $value) {\n\t\t\t\t$legend = trim(preg_replace( '/[^a-z0-9 _()]/i', '', $value ));\n\t\t\t\tif($legend) {\n\t\t\t\t\t$color = (isset($xport_meta['legend'][$legend])) ? $xport_meta['legend'][$legend] : '';\n\t\t\t\t\t$oarray['meta']['legend'][$key] = array('legend' => $legend, 'color' => $color);\n\t\t\t\t}else{\n\t\t\t\t\tunset($oarray['meta']['legend'][$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$replacement_legend = rrdtool_replacement_legend(get_request_var('local_graph_id'));\n\n\tif (cacti_sizeof($replacement_legend) && isset($oarray['meta']['legend'])) {\n\t\t$oarray['meta']['legend'] = $replacement_legend;\n\t}\n\n\t/**\n\t * remove the unknown data and business hours columns from the\n\t * output data as it interferes with the hover output.\n\t */\n\tif (isset($oarray['data']) && isset($xport_meta['ignoreItems'])) {\n\t\t$new_array = array();\n\n\t\tforeach($oarray['data'] as $index => $data) {\n\t\t\tforeach($data as $i => $value) {\n\t\t\t\tif ($i == 0 || $i > $xport_meta['ignoreItems']) {\n\t\t\t\t\t$new_array[$index][] = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$oarray['data'] = $new_array;\n\t}\n} else {\n\t/* image type now png */\n\t$oarray['type'] = 'png';\n\n\tob_start();\n\n\t$graph_data_array['get_error'] = true;\n\n\t$null_param = array();\n\n\trrdtool_function_graph(get_request_var('local_graph_id'), $rra_id, $graph_data_array, null, $null_param, $_SESSION[SESS_USER_ID]);\n\n\t$error = ob_get_contents();\n\n\tob_end_clean();\n\n\tif (read_config_option('stats_poller') == '') {\n\t\t$error = __('The Cacti Poller has not run yet.');\n\t}\n\n\tif (isset($graph_data_array['graph_width']) && isset($graph_data_array['graph_height'])) {\n\t\t$image = rrdtool_create_error_image($error, $graph_data_array['graph_width'], $graph_data_array['graph_height']);\n\t} else {\n\t\t$image = rrdtool_create_error_image($error);\n\t}\n\n\tif (isset($graph_data_array['graph_width'])) {\n\t\tif (isset($graph_data_array['graph_nolegend'])) {\n\t\t\t$oarray['image_width']  = round($graph_data_array['graph_width'] * 1.24, 0);\n\t\t\t$oarray['image_height'] = round($graph_data_array['graph_height'] * 1.45, 0);\n\t\t} else {\n\t\t\t$oarray['image_width']  = round($graph_data_array['graph_width'] * 1.15, 0);\n\t\t\t$oarray['image_height'] = round($graph_data_array['graph_height'] * 1.8, 0);\n\t\t}\n\t} else {\n\t\t$oarray['image_width'] = round(db_fetch_cell_prepared('SELECT width\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('local_graph_id'))), 0);\n\n\t\t$oarray['image_height'] = round(db_fetch_cell_prepared('SELECT height\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('local_graph_id'))), 0);\n\t}\n\n\tif ($image !== false) {\n\t\t$oarray['image'] = base64_encode($image);\n\t} else {\n\t\t$oarray['image'] = base64_encode(file_get_contents(__DIR__ . '/images/cacti_error_image.png'));\n\t}\n}\n\nheader('Content-Type: application/json');\nheader('Cache-Control: max-age=15');\n$json = json_encode($oarray);\nheader('Content-Length: ' . strlen($json));\nprint $json;\n"
        },
        {
          "name": "graph_realtime.php",
          "type": "blob",
          "size": 17.4306640625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/rrd.php');\n\n$config['force_storage_location_local'] = true;\n\n/* ================= input validation ================= */\nget_filter_request_var('graph_start');\nget_filter_request_var('graph_end');\nget_filter_request_var('graph_height');\nget_filter_request_var('graph_width');\nget_filter_request_var('graph_nolegend', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '(true|false)')));\nget_filter_request_var('local_graph_id');\nget_filter_request_var('size');\nget_filter_request_var('ds_step');\nget_filter_request_var('count');\nget_filter_request_var('top');\nget_filter_request_var('left');\n/* ==================================================== */\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'init':\n\tcase 'timespan':\n\tcase 'interval':\n\tcase 'countdown':\n\t\tob_start();\n\n\t\t$guest_account = true;\n\n\t\tswitch (get_request_var('action')) {\n\t\t\tcase 'init':\n\t\t\t\tload_current_session_value('ds_step',        'sess_realtime_ds_step',     read_user_setting('realtime_interval', 10));\n\t\t\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\t\t\t\tload_current_session_value('size',           'sess_realtime_size',        read_user_setting('realtime_size', 100));\n\t\t\t\tload_current_session_value('graph_nolegend', 'sess_realtime_nolegend',    read_user_setting('realtime_nolegend', 'false'));\n\n\t\t\t\tbreak;\n\t\t\tcase 'timespan':\n\t\t\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\n\t\t\t\tbreak;\n\t\t\tcase 'interval':\n\t\t\t\tload_current_session_value('ds_step',        'sess_realtime_ds_step',     read_user_setting('realtime_interval', 10));\n\t\t\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\t\t\t\tload_current_session_value('size',           'sess_realtime_size',        read_user_setting('realtime_size', 100));\n\t\t\t\tload_current_session_value('graph_nolegend', 'sess_realtime_nolegend',    read_user_setting('realtime_nolegend', 'false'));\n\n\t\t\t\tbreak;\n\t\t\tcase 'countdown':\n\t\t\t\tload_current_session_value('ds_step',        'sess_realtime_ds_step',     read_user_setting('realtime_interval', 10));\n\t\t\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\t\t\t\tload_current_session_value('size',           'sess_realtime_size',        read_user_setting('realtime_size', 100));\n\t\t\t\tload_current_session_value('graph_nolegend', 'sess_realtime_nolegend',    read_user_setting('realtime_nolegend', 'false'));\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tload_current_session_value('ds_step',        'sess_realtime_ds_step',     read_user_setting('realtime_interval', 10));\n\t\t\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\t\t\t\tload_current_session_value('size',           'sess_realtime_size',        read_user_setting('realtime_size', 100));\n\t\t\t\tload_current_session_value('graph_nolegend', 'sess_realtime_nolegend',    read_user_setting('realtime_nolegend', 'false'));\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$graph_data_array = array();\n\n\t\t/* ds */\n\t\t$graph_data_array['ds_step'] = read_user_setting('realtime_interval', 10);\n\n\t\tif (!isempty_request_var('ds_step')) {\n\t\t\t$graph_data_array['ds_step']      = get_request_var('ds_step');\n\t\t\t$_SESSION['sess_realtime_dsstep'] = get_request_var('ds_step');\n\t\t}\n\n\t\t/* override: graph height (in pixels) */\n\t\tif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t\t\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n\t\t} else {\n\t\t\t$graph_data_array['graph_height'] = 125;\n\t\t}\n\n\t\t/* override: graph width (in pixels) */\n\t\tif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t\t\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n\t\t} else {\n\t\t\t$graph_data_array['graph_width'] = 425;\n\t\t}\n\n\t\t/* override: skip drawing the legend? */\n\t\tif (get_request_var('graph_nolegend') == 'true') {\n\t\t\t$graph_data_array['graph_nolegend'] = 'true';\n\t\t}\n\n\t\tif (isset_request_var('size') && get_request_var('size') > 0) {\n\t\t\t$_SESSION['sess_realtime_size'] = get_request_var('size');\n\t\t\t$size                           = get_request_var('size');\n\t\t} elseif (isset($_SESSION['sess_realtime_size']) && $_SESSION['sess_realtime_size'] != '') {\n\t\t\t$size = $_SESSION['sess_realtime_size'];\n\t\t} else {\n\t\t\t$size = 100;\n\t\t}\n\n\t\tif (isset_request_var('local_graph_id')) {\n\t\t\t$graph_data = db_fetch_row_prepared('SELECT width, height\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\t\tarray(get_request_var('local_graph_id')));\n\n\t\t\tif (cacti_sizeof($graph_data)) {\n\t\t\t\t$graph_data_array['graph_height'] = $graph_data['height'];\n\t\t\t\t$graph_data_array['graph_width']  = $graph_data['width'];\n\t\t\t}\n\t\t}\n\n\t\tif (isset_request_var('size') && get_request_var('size') < 100) {\n\t\t\t$graph_data_array['graph_height'] = $graph_data_array['graph_height'] * $size / 100;\n\t\t\t$graph_data_array['graph_width']  = $graph_data_array['graph_width'] * $size / 100;\n\t\t}\n\n\t\t/* override: graph start */\n\t\tif (!isempty_request_var('graph_start')) {\n\t\t\t$graph_data_array['graph_start']  = get_request_var('graph_start');\n\n\t\t\tif ($graph_data_array['graph_start'] < 0) {\n\t\t\t\t$graph_data_array['graph_start'] = time() + $graph_data_array['graph_start'];\n\t\t\t}\n\t\t\t$_SESSION['sess_realtime_window'] = abs(get_request_var('graph_start'));\n\t\t}\n\n\t\t/* override: graph end */\n\t\tif (!isempty_request_var('graph_end')) {\n\t\t\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n\t\t} else {\n\t\t\t$graph_data_array['graph_end'] = time();\n\t\t}\n\n\t\t/* print RRDtool graph source? */\n\t\tif (!isempty_request_var('show_source')) {\n\t\t\t$graph_data_array['print_source'] = get_request_var('show_source');\n\t\t}\n\n\t\t/* check ds */\n\t\tif ($graph_data_array['ds_step'] < 1) {\n\t\t\t$graph_data_array['ds_step'] = read_user_setting('realtime_interval', 10);\n\t\t}\n\n\t\t// Determine the graph type of the output\n\t\tif (!isset_request_var('image_format')) {\n\t\t\t$type   = db_fetch_cell_prepared('SELECT image_format_id\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\t\tarray(get_request_var('local_graph_id')));\n\n\t\t\tswitch($type) {\n\t\t\t\tcase '1':\n\t\t\t\t\t$gtype = 'png';\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase '3':\n\t\t\t\t\t$gtype = 'svg+xml';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$gtype = 'png';\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch(strtolower(get_nfilter_request_var('image_format'))) {\n\t\t\t\tcase 'png':\n\t\t\t\t\t$graph_data_array['image_format'] = 'png';\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'svg':\n\t\t\t\t\t$gtype = 'svg+xml';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$gtype = 'png';\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$graph_data_array['image_format'] = $gtype;\n\n\t\t/* call poller */\n\t\t$graph_rrd = read_config_option('realtime_cache_path') . '/user_' . hash('sha256', session_id()) . '_lgi_' . get_request_var('local_graph_id') . '.png';\n\t\t$command   = read_config_option('path_php_binary');\n\t\t$args      = sprintf('poller_realtime.php --graph=%s --interval=%d --poller_id=' . hash('sha256',session_id()), get_request_var('local_graph_id'), $graph_data_array['ds_step']);\n\n\t\tshell_exec(\"$command $args\");\n\n\t\t/* construct the image name  */\n\t\t$graph_data_array['export_realtime'] = $graph_rrd;\n\t\t$graph_data_array['output_flag']     = RRDTOOL_OUTPUT_GRAPH_DATA;\n\t\t$null_param                          = array();\n\n\t\t$output = rrdtool_function_graph(get_request_var('local_graph_id'), '', $graph_data_array, '', $null_param, $_SESSION[SESS_USER_ID]);\n\n\t\t$error = '';\n\n\t\tif (file_exists($graph_rrd)) {\n\t\t\t$graph_contents = file_get_contents($graph_rrd);\n\n\t\t\tif (preg_match('/^ERROR/',$graph_contents)) {\n\t\t\t\t$error  = $graph_contents;\n\t\t\t\t$output = '';\n\t\t\t}\n\t\t}\n\n\t\tif (empty($output) && empty($error)) {\n\t\t\t$graph_data_array['get_error'] = true;\n\t\t\t$null_param                    = array();\n\t\t\trrdtool_function_graph(get_request_var('local_graph_id'), '', $graph_data_array, '', $null_param, $_SESSION[SESS_USER_ID]);\n\n\t\t\t$error = ob_get_contents();\n\n\t\t\tif (read_config_option('stats_poller') == '') {\n\t\t\t\t$error = __('The Cacti Poller has not run yet.');\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($error)) {\n\t\t\t$graph_data_array['get_error'] = true;\n\n\t\t\tif (isset($graph_data_array['graph_width']) && isset($graph_data_array['graph_height'])) {\n\t\t\t\t$graph_contents = rrdtool_create_error_image($error, $graph_data_array['graph_width'], $graph_data_array['graph_height']);\n\t\t\t} else {\n\t\t\t\t$graph_contents = rrdtool_create_error_image($error);\n\t\t\t}\n\n\t\t\tob_end_clean();\n\n\t\t\tif ($graph_contents === false) {\n\t\t\t\t$graph_contents = file_get_contents(__DIR__ . '/images/cacti_error_image.png');\n\t\t\t}\n\t\t}\n\n\t\tif (isset($graph_contents)) {\n\t\t\t$data = base64_encode($graph_contents);\n\t\t} else {\n\t\t\t$data = '';\n\t\t}\n\n\t\t/* save user preferences */\n\t\tset_user_setting('realtime_interval', get_request_var('ds_step'));\n\t\tset_user_setting('realtime_gwindow', abs(get_request_var('graph_start')));\n\t\tset_user_setting('realtime_size', get_request_var('size'));\n\t\tset_user_setting('realtime_nolegend', get_request_var('graph_nolegend'));\n\n\t\t$_SESSION['sess_realtime_ds_step']     = get_request_var('ds_step');\n\t\t$_SESSION['sess_realtime_graph_start'] = get_request_var('graph_start');\n\t\t$_SESSION['sess_realtime_size']        = get_request_var('size');\n\t\t$_SESSION['sess_realtime_nolegend']    = get_request_var('graph_nolegend');\n\n\t\t/* send text information back to browser as well as image information */\n\t\t$return_array = array(\n\t\t\t'local_graph_id' => get_request_var('local_graph_id'),\n\t\t\t'top'            => get_request_var('top'),\n\t\t\t'left'           => get_request_var('left'),\n\t\t\t'ds_step'        => html_escape(isset($_SESSION['sess_realtime_ds_step']) ? $_SESSION['sess_realtime_ds_step']:$graph_data_array['ds_step']),\n\t\t\t'graph_start'    => html_escape(isset($_SESSION['sess_realtime_graph_start']) ? $_SESSION['sess_realtime_graph_start']:$graph_data_array['graph_start']),\n\t\t\t'size'           => html_escape(isset($_SESSION['sess_realtime_size']) ? $_SESSION['sess_realtime_size']:read_user_setting('realtime_size', 100)),\n\t\t\t'thumbnails'     => html_escape(isset($_SESSION['sess_realtime_nolegend']) ? $_SESSION['sess_realtime_nolegend']:'false'),\n\t\t\t'data'           => (isset($data) ? $data:''),\n\t\t\t'image_format'   => $graph_data_array['image_format']\n\t\t);\n\n\t\tprint json_encode($return_array);\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'view':\n\t\t$graph_rrd = read_config_option('realtime_cache_path') . '/user_' . hash('sha256',session_id()) . '_lgi_' . get_request_var('local_graph_id') . '.png';\n\n\t\tif (file_exists($graph_rrd)) {\n\t\t\tprint base64_encode(file_get_contents($graph_rrd));\n\t\t}\n\n\t\texit;\n\n\t\tbreak;\n\n\tdefault:\n\t\tload_current_session_value('ds_step',        'sess_realtime_ds_step',     read_user_setting('realtime_interval', 10));\n\t\tload_current_session_value('graph_start',    'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n\t\tload_current_session_value('size',           'sess_realtime_size',        read_user_setting('realtime_size', 100));\n\t\tload_current_session_value('graph_nolegend', 'sess_realtime_nolegend',    read_user_setting('realtime_nolegend', 'false'));\n\n\t\tbreak;\n}\n\n/* ================= input validation ================= */\nget_filter_request_var('ds_step');\nget_filter_request_var('local_graph_id');\nget_filter_request_var('graph_start');\nget_filter_request_var('size');\n/* ==================================================== */\n\n$init = '';\n\nif (!isset($_SESSION['sess_realtime_ds_step'])) {\n\tload_current_session_value('ds_step', 'sess_realtime_ds_step', read_user_setting('realtime_interval', 10));\n} else {\n\tset_request_var('ds_step', $_SESSION['sess_realtime_ds_step']);\n}\n\nif (!isset($_SESSION['sess_realtime_graph_start'])) {\n\tload_current_session_value('graph_start', 'sess_realtime_graph_start', read_user_setting('realtime_gwindow', 60));\n} else {\n\tset_request_var('graph_start', $_SESSION['sess_realtime_graph_start']);\n}\n\n/* save user preferences */\nset_user_setting('realtime_interval', get_request_var('ds_step'));\nset_user_setting('realtime_gwindow', abs(get_request_var('graph_start')));\nset_user_setting('realtime_size', get_request_var('size'));\nset_user_setting('realtime_nolegend', get_request_var('graph_nolegend'));\n\nif (read_config_option('realtime_enabled') == '') {\n\tprint \"<html>\\n\";\n\tprint \"<body>\\n\";\n\tprint '\t<p><strong>' . __('Real-time has been disabled by your administrator.') . \"</strong></p>\\n\";\n\tprint \"</body>\\n\";\n\tprint \"</html>\\n\";\n\n\texit;\n}\n\nif (!is_dir(read_config_option('realtime_cache_path'))) {\n\tprint \"<html>\\n\";\n\tprint \"<body>\\n\";\n\tprint '\t<p><strong>' . __('The Image Cache Directory does not exist.  Please first create it and set permissions and then attempt to open another Real-time graph.') . \"</strong></p>\\n\";\n\tprint \"</body>\\n\";\n\tprint \"</html>\\n\";\n\n\texit;\n}\n\nif (!is_writable(read_config_option('realtime_cache_path'))) {\n\tprint \"<html>\\n\";\n\tprint \"<body>\\n\";\n\tprint '\t<p><strong>' . __('The Image Cache Directory is not writable.  Please set permissions and then attempt to open another Real-time graph.') . \"</strong></p>\\n\";\n\tprint \"</body>\\n\";\n\tprint \"</html>\\n\";\n\n\texit;\n}\n\n$selectedTheme = get_selected_theme();\n\n$sizes = array(\n\t'100' => '100%',\n\t'90'  => '90%',\n\t'80'  => '80%',\n\t'70'  => '70%',\n\t'60'  => '60%',\n\t'50'  => '50%',\n\t'40'  => '40%'\n);\n\n?>\n<html>\n<head>\n\t<?php html_common_header(__('Cacti Real-time Graphing'));?>\n    <?php include(CACTI_PATH_INCLUDE . '/global_session.php'); ?>\n</head>\n<body style='font-size:12px;'>\n\t<form method='post' action='graph_realtime.php' id='gform'>\n\t\t<div id='rtfilter' class='cactiTable center'>\n\t\t\t<div class='filterTable even'>\n\t\t\t\t<select id='graph_start' onChange='imageOptionsChanged(\"timespan\")'>\n\t\t\t\t\t<?php\n\t\t\t\t\tforeach ($realtime_window as $interval => $text) {\n\t\t\t\t\t\tprintf('<option value=\"%d\"%s>%s</option>',\n\t\t\t\t\t\t\t$interval, $interval == abs(get_request_var('graph_start')) ? ' selected=\"selected\"' : '', $text\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t\t<select id='ds_step' onChange='imageOptionsChanged(\"interval\")'>\n\t\t\t\t\t<?php\n\t\t\t\t\t$min_refresh = read_config_option('realtime_interval');\n\n\t\t\t\t\tforeach ($realtime_refresh as $interval => $text) {\n\t\t\t\t\t\tif ($interval >= $min_refresh) {\n\t\t\t\t\t\t\tprintf('<option value=\"%d\"%s>%s</option>',\n\t\t\t\t\t\t\t\t$interval, $interval == get_request_var('ds_step') ? ' selected=\"selected\"' : '', $text\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t\t<select id='size' onChange='imageOptionsChanged(\"interval\")'>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach ($sizes as $key => $value) {\n\t\t\t\t\t\t\tprintf('<option value=\"%d\"%s>%s</option>',\n\t\t\t\t\t\t\t\t$key, $key == get_request_var('size') ? ' selected=\"selected\"' : '', $value\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</select>\n\t\t\t\t<input type='checkbox' id='thumbnails' onChange='imageOptionsChanged(\"interval\")' <?php print get_request_var('graph_nolegend') == 'true' ? 'checked':'';?>>\n\t\t\t\t<label for='thumbnails'><?php print __('Thumbnails');?></label>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class='cactiTable center'>\n\t\t\t<span id='countdown'><?php print __('%d seconds left.',  get_request_var('ds_step')); ?></span>\n\t\t</div>\n\t\t<div id='image' class='center' style='padding:2px;'></div>\n\t\t<input type='hidden' id='url_path' name='url_path' value='<?php print CACTI_PATH_URL;?>'/>\n\t\t<input type='hidden' id='local_graph_id' name='local_graph_id' value='<?php print get_request_var('local_graph_id'); ?>'/>\n\t\t<script type='text/javascript'>\n\n\t\tvar url;\n\t\tvar ds_step = 0;\n\t\tvar sizeset = false;\n\t\tvar count   = 0;\n\t\tvar realtimePopout = true;\n\t\tvar refreshIsLogout= false;\n\t\tvar refreshPage=urlPath+'/graph_realtime.php?action=countdown&size='+$('#size').val();\n\t\tvar refreshMSeconds=999999999;\n\t\tvar myCountdown = {};\n\t\tvar secondsLeft = '<?php print __(' seconds left.');?>';\n\n\t\tfunction countdown_update() {\n\t\t\tds_step--;\n\n\t\t\tif (ds_step < 0) {\n\t\t\t\tds_step = $('#ds_step').val();\n\t\t\t\timageOptionsChanged('countdown');\n\t\t\t\tsizeset = false;\n\t\t\t}\n\n\t\t\tsetRealtimeWindowSize();\n\n\t\t\t$('#countdown').empty().html(ds_step + secondsLeft);\n\n\t\t\tcount++;\n\n\t\t\tdestroy(myCountdown);\n\n\t\t\tmyCountdown = setTimeout(function() {\n\t\t\t\tcountdown_update();\n\t\t\t}, 1000);\n\t\t}\n\n\t\t$(function() {\n\t\t\timageOptionsChanged('init');\n\t\t\tmyCountdown = setTimeout(function() {\n\t\t\t\tcountdown_update();\n\t\t\t}, 1000);\n\t\t});\n\n\t\t</script>\n\t</form>\n</body>\n</html>\n\n"
        },
        {
          "name": "graph_templates.php",
          "type": "blob",
          "size": 78.931640625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\nini_set('max_execution_time', '0');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Change Settings'),\n\t4 => __('Full Sync Graphs'),\n\t5 => __('Quick Sync Graphs')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_data_sources':\n\t\t$data_template_id  = get_filter_request_var('data_template_id');\n\t\t$task_item_id      = get_filter_request_var('task_item_id');\n\t\t$orig_task_item_id = get_filter_request_var('_task_item_id');\n\n\t\t$data_sources = db_fetch_assoc_prepared(\"SELECT dtr.id,\n\t\t\tCONCAT_WS('', dt.name,' - ',' (', dtr.data_source_name,')') AS name\n\t\t\tFROM data_template_rrd AS dtr\n\t\t\tINNER JOIN data_template AS dt\n\t\t\tON dtr.data_template_id = dt.id\n\t\t\tWHERE dtr.local_data_id = 0\n\t\t\tAND (dtr.data_template_id = ? OR dtr.id = ?)\n\t\t\tORDER BY dt.name, dtr.data_source_name\",\n\t\t\tarray($data_template_id, $task_item_id)\n\t\t);\n\n\t\t$output = '';\n\n\t\tif (cacti_sizeof($data_sources)) {\n\t\t\tforeach ($data_sources as $ds) {\n\t\t\t\tif ($orig_task_item_id == $ds['id']) {\n\t\t\t\t\t$output .= '<option value=\"' . $ds['id'] . '\" selected>' . html_escape($ds['name']) . '</option>';\n\t\t\t\t} elseif ($task_item_id == $ds['id']) {\n\t\t\t\t\t$output .= '<option value=\"' . $ds['id'] . '\" selected>' . html_escape($ds['name']) . '</option>';\n\t\t\t\t} else {\n\t\t\t\t\t$output .= '<option value=\"' . $ds['id'] . '\">' . html_escape($ds['name']) . '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$output .= '<option value=\"0\">' . __('None') . '</option>';\n\t\t}\n\n\t\tprint $output;\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\t$graph_template_id = get_filter_request_var('id');\n\t\t$sequences         = get_nfilter_request_var('item_ids');\n\n\t\tif (cacti_sizeof($sequences)) {\n\t\t\tforeach($sequences as $index => $s) {\n\t\t\t\t$new_seq = $index++;\n\n\t\t\t\t/* graph template first */\n\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE local_graph_template_item_id = ?\n\t\t\t\t\tAND graph_template_id = ?',\n\t\t\t\t\tarray($new_seq, $s, $graph_template_id));\n\n\t\t\t\t/* graphs next */\n\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND local_graph_id = 0\n\t\t\t\t\tAND graph_template_id = ?',\n\t\t\t\t\tarray($new_seq, $s, $graph_template_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\titem_remove();\n\n\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'item':\n\t\ttop_header();\n\n\t\titem();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'input_remove':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\tinput_remove();\n\n\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n\n\t\tbreak;\n\tcase 'input_edit':\n\t\ttop_header();\n\n\t\tinput_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tgraph_templates();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\t// sanitize ids\n\tif (isset_request_var('graph_template_id') && !is_numeric(get_nfilter_request_var('graph_template_id'))) {\n\t\t$graph_template_id = 0;\n\t} else {\n\t\t$graph_template_id = get_filter_request_var('graph_template_id');\n\t}\n\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_graph_id');\n\t\t/* ==================================================== */\n\n\t\t$push_title = true;\n\n\t\tif ($graph_template_id > 0) {\n\t\t\t$prev_title = db_fetch_cell_prepared('SELECT title\n\t\t\t\tFROM graph_templates_graph\n\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\tAND local_graph_id = 0',\n\t\t\t\tarray($graph_template_id));\n\n\t\t\tif ($prev_title == get_nfilter_request_var('title')) {\n\t\t\t\t$push_title = false;\n\t\t\t}\n\t\t}\n\n\t\t$save1['id']          = $graph_template_id;\n\t\t$save1['hash']        = get_hash_graph_template($graph_template_id);\n\t\t$save1['name']        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save1['class']       = form_input_validate(get_nfilter_request_var('class'), 'class', '', true, 3);\n\t\t$save1['version']     = form_input_validate(get_nfilter_request_var('version'), 'version', '', true, 3);\n\t\t$save1['multiple']    = isset_request_var('multiple') ? 'on':'';\n\t\t$save1['test_source'] = isset_request_var('test_source') ? 'on':'';\n\n\t\t$save2['id']                            = get_nfilter_request_var('graph_template_graph_id');\n\t\t$save2['local_graph_template_graph_id'] = 0;\n\t\t$save2['local_graph_id']                = 0;\n\t\t$save2['t_image_format_id']             = (isset_request_var('t_image_format_id') ? get_nfilter_request_var('t_image_format_id') : '');\n\t\t$save2['image_format_id']               = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_title']                       = form_input_validate((isset_request_var('t_title') ? get_nfilter_request_var('t_title') : ''), 't_title', '', true, 3);\n\t\t$save2['title']                         = form_input_validate(get_nfilter_request_var('title'), 'title', '', (isset_request_var('t_title') ? true : false), 3);\n\t\t$save2['t_height']                      = form_input_validate((isset_request_var('t_height') ? get_nfilter_request_var('t_height') : ''), 't_height', '', true, 3);\n\t\t$save2['height']                        = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', (isset_request_var('t_height') ? true : false), 3);\n\t\t$save2['t_width']                       = form_input_validate((isset_request_var('t_width') ? get_nfilter_request_var('t_width') : ''), 't_width', '', true, 3);\n\t\t$save2['width']                         = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', (isset_request_var('t_width') ? true : false), 3);\n\t\t$save2['t_upper_limit']                 = form_input_validate((isset_request_var('t_upper_limit') ? get_nfilter_request_var('t_upper_limit') : ''), 't_upper_limit', '', true, 3);\n\t\t$save2['upper_limit']                   = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_upper_limit') || (strlen(get_nfilter_request_var('upper_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_lower_limit']                 = form_input_validate((isset_request_var('t_lower_limit') ? get_nfilter_request_var('t_lower_limit') : ''), 't_lower_limit', '', true, 3);\n\t\t$save2['lower_limit']                   = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_lower_limit') || (strlen(get_nfilter_request_var('lower_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_vertical_label']              = form_input_validate((isset_request_var('t_vertical_label') ? get_nfilter_request_var('t_vertical_label') : ''), 't_vertical_label', '', true, 3);\n\t\t$save2['vertical_label']                = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t$save2['t_slope_mode']                  = form_input_validate((isset_request_var('t_slope_mode') ? get_nfilter_request_var('t_slope_mode') : ''), 't_slope_mode', '', true, 3);\n\t\t$save2['slope_mode']                    = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t$save2['t_auto_scale']                  = form_input_validate((isset_request_var('t_auto_scale') ? get_nfilter_request_var('t_auto_scale') : ''), 't_auto_scale', '', true, 3);\n\t\t$save2['auto_scale']                    = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t$save2['t_auto_scale_opts']             = form_input_validate((isset_request_var('t_auto_scale_opts') ? get_nfilter_request_var('t_auto_scale_opts') : ''), 't_auto_scale_opts', '', true, 3);\n\t\t$save2['auto_scale_opts']               = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t$save2['t_auto_scale_log']              = form_input_validate((isset_request_var('t_auto_scale_log') ? get_nfilter_request_var('t_auto_scale_log') : ''), 't_auto_scale_log', '', true, 3);\n\t\t$save2['auto_scale_log']                = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t$save2['t_scale_log_units']             = form_input_validate((isset_request_var('t_scale_log_units') ? get_nfilter_request_var('t_scale_log_units') : ''), 't_scale_log_units', '', true, 3);\n\t\t$save2['scale_log_units']               = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t$save2['t_auto_scale_rigid']            = form_input_validate((isset_request_var('t_auto_scale_rigid') ? get_nfilter_request_var('t_auto_scale_rigid') : ''), 't_auto_scale_rigid', '', true, 3);\n\t\t$save2['auto_scale_rigid']              = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t$save2['t_auto_padding']                = form_input_validate((isset_request_var('t_auto_padding') ? get_nfilter_request_var('t_auto_padding') : ''), 't_auto_padding', '', true, 3);\n\t\t$save2['auto_padding']                  = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t$save2['t_base_value']                  = form_input_validate((isset_request_var('t_base_value') ? get_nfilter_request_var('t_base_value') : ''), 't_base_value', '', true, 3);\n\t\t$save2['base_value']                    = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', (isset_request_var('t_base_value') ? true : false), 3);\n\t\t$save2['t_unit_value']                  = form_input_validate((isset_request_var('t_unit_value') ? get_nfilter_request_var('t_unit_value') : ''), 't_unit_value', '', true, 3);\n\t\t$save2['unit_value']                    = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t$save2['t_unit_exponent_value']         = form_input_validate((isset_request_var('t_unit_exponent_value') ? get_nfilter_request_var('t_unit_exponent_value') : ''), 't_unit_exponent_value', '', true, 3);\n\t\t$save2['unit_exponent_value']           = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t$save2['t_alt_y_grid']                  = form_input_validate((isset_request_var('t_alt_y_grid') ? get_nfilter_request_var('t_alt_y_grid') : ''), 't_alt_y_grid', '', true, 3);\n\t\t$save2['alt_y_grid']                    = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t$save2['t_right_axis']                  = form_input_validate((isset_request_var('t_right_axis') ? get_nfilter_request_var('t_right_axis') : ''), 't_right_axis', '', true, 3);\n\t\t$save2['right_axis']                    = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+):-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)$', true, 3);\n\t\t$save2['t_right_axis_label']            = form_input_validate((isset_request_var('t_right_axis_label') ? get_nfilter_request_var('t_right_axis_label') : ''), 't_right_axis_label', '', true, 3);\n\t\t$save2['right_axis_label']              = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t$save2['t_right_axis_format']           = form_input_validate((isset_request_var('t_right_axis_format') ? get_nfilter_request_var('t_right_axis_format') : ''), 't_right_axis_format', '', true, 3);\n\t\t$save2['right_axis_format']             = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['t_no_gridfit']                  = form_input_validate((isset_request_var('t_no_gridfit') ? get_nfilter_request_var('t_no_gridfit') : ''), 't_no_gridfit', '', true, 3);\n\t\t$save2['no_gridfit']                    = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t$save2['t_unit_length']                 = form_input_validate((isset_request_var('t_unit_length') ? get_nfilter_request_var('t_unit_length') : ''), 't_unit_length', '', true, 3);\n\t\t$save2['unit_length']                   = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t$save2['t_tab_width']                   = form_input_validate((isset_request_var('t_tab_width') ? get_nfilter_request_var('t_tab_width') : ''), 't_tab_width', '', true, 3);\n\t\t$save2['tab_width']                     = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t$save2['t_dynamic_labels']              = form_input_validate((isset_request_var('t_dynamic_labels') ? get_nfilter_request_var('t_dynamic_labels') : ''), 't_dynamic_labels', '', true, 3);\n\t\t$save2['dynamic_labels']                = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t$save2['t_force_rules_legend']          = form_input_validate((isset_request_var('t_force_rules_legend') ? get_nfilter_request_var('t_force_rules_legend') : ''), 't_force_rules_legend', '', true, 3);\n\t\t$save2['force_rules_legend']            = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t$save2['t_legend_position']             = form_input_validate((isset_request_var('t_legend_position') ? get_nfilter_request_var('t_legend_position') : ''), 't_legend_position', '', true, 3);\n\t\t$save2['legend_position']               = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t$save2['t_legend_direction']            = form_input_validate((isset_request_var('t_legend_direction') ? get_nfilter_request_var('t_legend_direction') : ''), 't_legend_direction', '', true, 3);\n\t\t$save2['legend_direction']              = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t$save2['t_right_axis_formatter']        = form_input_validate((isset_request_var('t_right_axis_formatter') ? get_nfilter_request_var('t_right_axis_formatter') : ''), 't_right_axis_formatter', '', true, 3);\n\t\t$save2['right_axis_formatter']          = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t$save2['t_left_axis_format']            = form_input_validate((isset_request_var('t_left_axis_format') ? get_nfilter_request_var('t_left_axis_format') : ''), 't_left_axis_format', '', true, 3);\n\t\t$save2['left_axis_format']              = form_input_validate((isset_request_var('left_axis_format') ? get_nfilter_request_var('left_axis_format') : ''), 'left_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['t_left_axis_formatter']         = form_input_validate((isset_request_var('t_left_axis_formatter') ? get_nfilter_request_var('t_left_axis_formatter') : ''), 't_left_axis_formatter', '', true, 3);\n\t\t$save2['left_axis_formatter']           = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$save1['last_updated'] = date('Y-m-d H:i:s');\n\n\t\t\t$graph_template_id = sql_save($save1, 'graph_templates');\n\n\t\t\tif ($graph_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['graph_template_id'] = $graph_template_id;\n\t\t\t$graph_template_graph_id    = sql_save($save2, 'graph_templates_graph');\n\n\t\t\tif ($graph_template_graph_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tpush_out_graph($graph_template_graph_id, $push_title);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_id');\n\t\tget_filter_request_var('task_item_id');\n\t\tget_filter_request_var('sequence');\n\t\tget_filter_request_var('color_id');\n\t\tget_filter_request_var('color2_id');\n\t\tget_filter_request_var('gradheight');\n\t\tget_filter_request_var('graph_template_item_id');\n\t\t/* ==================================================== */\n\n\t\tglobal $graph_item_types;\n\n\t\t$items[0] = array();\n\n\t\tif ($graph_item_types[get_nfilter_request_var('graph_type_id')] == 'LEGEND') {\n\t\t\t/* this can be a major time saver when creating lots of graphs with the typical\n\t\t\tGPRINT LAST/AVERAGE/MAX legends */\n\t\t\t$items = array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '4',\n\t\t\t\t\t'text_format'               => __('Cur:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '1',\n\t\t\t\t\t'text_format'               => __('Avg:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '3',\n\t\t\t\t\t'text_format'               => __('Max:'),\n\t\t\t\t\t'hard_return'               => 'on'\n\t\t\t\t)\n\t\t\t);\n\t\t} elseif ($graph_item_types[get_nfilter_request_var('graph_type_id')] == 'LEGEND_CAMM') {\n\t\t\t/* this can be a major time saver when creating lots of graphs with the typical\n\t\t\t\tGPRINT LAST/AVERAGE/MAX legends */\n\t\t\t$items = array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '4',\n\t\t\t\t\t'text_format'               => __('Cur:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '1',\n\t\t\t\t\t'text_format'               => __('Avg:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '2',\n\t\t\t\t\t'text_format'               => __('Min:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '3',\n\t\t\t\t\t'text_format'               => __('Max:'),\n\t\t\t\t\t'hard_return'               => 'on'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$sequence = get_request_var('sequence');\n\n\t\tforeach ($items as $item) {\n\t\t\t/* generate a new sequence if needed */\n\t\t\tif (empty($sequence)) {\n\t\t\t\t$sequence = get_sequence(0, 'sequence', 'graph_templates_item', 'graph_template_id=' . get_request_var('graph_template_id') . ' AND local_graph_id=0');\n\t\t\t}\n\n\t\t\t$task_item_changed = true;\n\n\t\t\tif (get_request_var('graph_template_item_id') > 0) {\n\t\t\t\t$task_item_id = db_fetch_cell_prepared('SELECT task_item_id\n\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_request_var('graph_template_item_id'))\n\t\t\t\t);\n\n\t\t\t\tif (get_nfilter_request_var('task_item_id') == get_nfilter_request_var('_task_item_id')) {\n\t\t\t\t\t$task_item_changed = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$save['id']                = get_request_var('graph_template_item_id');\n\t\t\t$save['hash']              = get_hash_graph_template(get_request_var('graph_template_item_id'), 'graph_template_item');\n\t\t\t$save['graph_template_id'] = get_request_var('graph_template_id');\n\t\t\t$save['local_graph_id']    = 0;\n\t\t\t$save['task_item_id']      = form_input_validate(get_request_var('task_item_id'), 'task_item_id', '^[0-9]+$', true, 3);\n\t\t\t$save['color_id']          = form_input_validate((isset($item['color_id']) ? $item['color_id'] : get_request_var('color_id')), 'color_id', '', true, 3);\n\t\t\t$save['color2_id']         = form_input_validate((isset($item['color2_id']) ? $item['color2_id'] : get_request_var('color2_id')), 'color2_id', '', true, 3);\n\n\t\t\t/* if alpha is disabled, use invisible_alpha instead */\n\t\t\tif (!isset_request_var('alpha')) {\n\t\t\t\tset_request_var('alpha', get_nfilter_request_var('invisible_alpha'));\n\t\t\t}\n\n\t\t\tif (!isset_request_var('alpha2')) {\n\t\t\t\tset_request_var('alpha2', get_nfilter_request_var('invisible_alpha'));\n\t\t\t}\n\n\t\t\t$save['alpha']             = form_input_validate((isset($item['alpha']) ? $item['alpha'] : get_nfilter_request_var('alpha')), 'alpha', '', true, 3);\n\t\t\t$save['alpha2']            = form_input_validate((isset($item['alpha2']) ? $item['alpha2'] : get_nfilter_request_var('alpha2')), 'alpha2', '', true, 3);\n\t\t\t$save['gradheight']        = form_input_validate((isset($item['gradheight']) ? $item['gradheight'] : get_nfilter_request_var('gradheight')), 'gradheight', '', true, 3);\n\n\t\t\t$save['graph_type_id']     = form_input_validate((isset($item['graph_type_id']) ? $item['graph_type_id'] : get_filter_request_var('graph_type_id')), 'graph_type_id', '^[0-9]+$', true, 3);\n\n\t\t\tif (isset_request_var('line_width') || isset($item['line_width'])) {\n\t\t\t\t$save['line_width']    = form_input_validate((isset($item['line_width']) ? $item['line_width'] : get_nfilter_request_var('line_width')), 'line_width', '(^[0-9]+[\\.,0-9]+$|^[0-9]+$)', true, 3);\n\t\t\t} else {\n\t\t\t\t// make sure to transfer old LINEx style into line_width on save\n\t\t\t\tswitch ($save['graph_type_id']) {\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE1:\n\t\t\t\t\t\t$save['line_width'] = 1;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE2:\n\t\t\t\t\t\t$save['line_width'] = 2;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE3:\n\t\t\t\t\t\t$save['line_width'] = 3;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$save['line_width'] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$save['dashes']                    = form_input_validate((isset_request_var('dashes') ? get_nfilter_request_var('dashes') : ''), 'dashes', '^[0-9]+[,0-9]*$', true, 3);\n\t\t\t$save['dash_offset']               = form_input_validate((isset_request_var('dash_offset') ? get_nfilter_request_var('dash_offset') : ''), 'dash_offset', '^[0-9]+$', true, 3);\n\t\t\t$save['cdef_id']                   = form_input_validate(get_nfilter_request_var('cdef_id'), 'cdef_id', '^[0-9]+$', true, 3);\n\t\t\t$save['vdef_id']                   = form_input_validate(get_nfilter_request_var('vdef_id'), 'vdef_id', '^[0-9]+$', true, 3);\n\t\t\t$save['shift']                     = form_input_validate((isset_request_var('shift') ? get_nfilter_request_var('shift') : ''), 'shift', '^((on)|)$', true, 3);\n\t\t\t$save['consolidation_function_id'] = form_input_validate((isset($item['consolidation_function_id']) ? $item['consolidation_function_id'] : get_nfilter_request_var('consolidation_function_id')), 'consolidation_function_id', '^[0-9]+$', true, 3);\n\n\t\t\t$save['textalign']                 = form_input_validate((isset_request_var('textalign') ? get_nfilter_request_var('textalign') : ''), 'textalign', '^[a-z]+$', true, 3);\n\n\t\t\t$save['text_format']               = form_input_validate((isset($item['text_format']) ? $item['text_format'] : get_nfilter_request_var('text_format')), 'text_format', '', true, 3);\n\t\t\t$save['legend']                    = form_input_validate((isset($item['legend']) ? $item['legend'] : get_nfilter_request_var('legend')), 'legend', '', true, 3);\n\n\t\t\t$save['value']                     = form_input_validate(get_nfilter_request_var('value'), 'value', '', true, 3);\n\n\t\t\t$save['hard_return']               = form_input_validate(((isset($item['hard_return']) ? $item['hard_return'] : (isset_request_var('hard_return') ? get_nfilter_request_var('hard_return') : ''))), 'hard_return', '', true, 3);\n\n\t\t\t$save['gprint_id']                 = form_input_validate(get_nfilter_request_var('gprint_id'), 'gprint_id', '^[0-9]+$', true, 3);\n\t\t\t$save['sequence']                  = $sequence;\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t/* Before we save the item, let's get a look at task_item_id <-> input associations */\n\t\t\t\t$orig_data_source_graph_inputs = db_fetch_assoc_prepared(\"SELECT\n\t\t\t\t\tgtin.id, gtin.name, gti.task_item_id\n\t\t\t\t\tFROM graph_template_input AS gtin\n\t\t\t\t\tINNER JOIN graph_template_input_defs AS gtid\n\t\t\t\t\tON gtin.id = gtid.graph_template_input_id\n\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\tON gtid.graph_template_item_id = gti.id\n\t\t\t\t\tWHERE gtin.graph_template_id = ?\n\t\t\t\t\tAND gtin.column_name = 'task_item_id'\n\t\t\t\t\tGROUP BY gti.task_item_id\", array($save['graph_template_id']));\n\n\t\t\t\t$orig_data_source_to_input = array_rekey($orig_data_source_graph_inputs, 'task_item_id', 'id');\n\n\t\t\t\t$graph_template_item_id = sql_save($save, 'graph_templates_item');\n\n\t\t\t\tif ($graph_template_item_id) {\n\t\t\t\t\traise_message(1);\n\n\t\t\t\t\tif (!empty($save['task_item_id'])) {\n\t\t\t\t\t\t/* old item clean-up.  Don't delete anything if the item <-> task_item_id association remains the same. */\n\t\t\t\t\t\tif (get_nfilter_request_var('_task_item_id') != get_nfilter_request_var('task_item_id')) {\n\t\t\t\t\t\t\t/* It changed.  Delete any old associations */\n\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input_defs\n\t\t\t\t\t\t\t\tWHERE graph_template_item_id = ?',\n\t\t\t\t\t\t\t\tarray($graph_template_item_id)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t/* Input for current data source exists and has changed.  Update the association */\n\t\t\t\t\t\t\tif (isset($orig_data_source_to_input[$save['task_item_id']])) {\n\t\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO graph_template_input_defs\n\t\t\t\t\t\t\t\t\t(graph_template_input_id, graph_template_item_id)\n\t\t\t\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\t\t\t\tarray($orig_data_source_to_input[$save['task_item_id']], $graph_template_item_id)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* an input for the current data source does NOT currently exist, let's create one */\n\t\t\t\t\t\tif (!isset($orig_data_source_to_input[$save['task_item_id']])) {\n\t\t\t\t\t\t\t$ds_name = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('task_item_id'))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO graph_template_input\n\t\t\t\t\t\t\t\t(hash, graph_template_id, name, column_name)\n\t\t\t\t\t\t\t\tVALUES (?, ?, ?, 'task_item_id')\",\n\t\t\t\t\t\t\t\tarray(get_hash_graph_template(0, 'graph_template_input'), $save['graph_template_id'], \"Data Source [$ds_name]\")\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t$graph_template_input_id = db_fetch_insert_id();\n\n\t\t\t\t\t\t\t$graph_items = db_fetch_assoc_prepared('SELECT id\n\t\t\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\t\t\t\tAND task_item_id = ?',\n\t\t\t\t\t\t\t\tarray($save['graph_template_id'], get_nfilter_request_var('task_item_id'))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_items)) {\n\t\t\t\t\t\t\t\tforeach ($graph_items as $graph_item) {\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO graph_template_input_defs\n\t\t\t\t\t\t\t\t\t\t(graph_template_input_id, graph_template_item_id)\n\t\t\t\t\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\t\t\t\t\tarray($graph_template_input_id, $graph_item['id'])\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpush_out_graph_item($graph_template_item_id, $task_item_changed);\n\n\t\t\t\t\tif (isset($orig_data_source_to_input[get_nfilter_request_var('task_item_id')])) {\n\t\t\t\t\t\t/* make sure all current graphs using this graph input are aware of this change */\n\t\t\t\t\t\tpush_out_graph_input($orig_data_source_to_input[get_nfilter_request_var('task_item_id')], $graph_template_item_id, array($graph_template_item_id => $graph_template_item_id));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sequence = 0;\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: graph_templates.php?action=item_edit&graph_template_item_id=' . (empty($graph_template_item_id) ? get_nfilter_request_var('graph_template_item_id') : $graph_template_item_id) . '&id=' . get_nfilter_request_var('graph_template_id'));\n\n\t\t\texit;\n\t\t} else {\n\t\t\tdb_execute_prepared('UPDATE graph_templates\n\t\t\t\tSET last_updated = NOW()\n\t\t\t\tWHERE id = ?',\n\t\t\t\tget_nfilter_request_var('graph_template_id'));\n\n\t\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_nfilter_request_var('graph_template_id'));\n\n\t\t\texit;\n\t\t}\n\t} elseif ((isset_request_var('save_component_input')) && (!is_error_message())) {\n\t\t$graph_input_values   = array();\n\t\t$selected_graph_items = array();\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_input_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']                = get_nfilter_request_var('graph_template_input_id');\n\t\t$save['hash']              = get_hash_graph_template(get_nfilter_request_var('graph_template_input_id'), 'graph_template_input');\n\t\t$save['graph_template_id'] = get_nfilter_request_var('graph_template_id');\n\t\t$save['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['description']       = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['column_name']       = form_input_validate(get_nfilter_request_var('column_name'), 'column_name', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$graph_template_input_id = sql_save($save, 'graph_template_input');\n\n\t\t\tif ($graph_template_input_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* list all graph items from the db so we can compare them with the current form */\n\t\t\t\t$db_selected_graph_item = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT graph_template_item_id\n\t\t\t\t\t\tFROM graph_template_input_defs\n\t\t\t\t\t\tWHERE graph_template_input_id = ?',\n\t\t\t\t\t\tarray($graph_template_input_id)),\n\t\t\t\t\t'graph_template_item_id', 'graph_template_item_id'\n\t\t\t\t);\n\n\t\t\t\t/* list all select graph items for use down below */\n\t\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\t\tif (preg_match('/^i_(\\d+)$/', $var, $matches)) {\n\t\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\t\tinput_validate_input_number($matches[1], 'i[1]');\n\t\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t\t$selected_graph_items[$matches[1]] = $matches[1];\n\n\t\t\t\t\t\tif (isset($db_selected_graph_item[$matches[1]])) {\n\t\t\t\t\t\t\t/* is selected and exists in the db; old item */\n\t\t\t\t\t\t\t$old_members[$matches[1]] = $matches[1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* is selected and does not exist the db; new item */\n\t\t\t\t\t\t\t$new_members[$matches[1]] = $matches[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((isset($new_members)) && (cacti_sizeof($new_members) > 0)) {\n\t\t\t\t\tforeach ($new_members as $item_id) {\n\t\t\t\t\t\tpush_out_graph_input($graph_template_input_id, $item_id, (isset($new_members) ? $new_members : array()));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input_defs WHERE graph_template_input_id = ?', array($graph_template_input_id));\n\n\t\t\t\tif (cacti_sizeof($selected_graph_items) > 0) {\n\t\t\t\t\tforeach ($selected_graph_items as $graph_template_item_id) {\n\t\t\t\t\t\tdb_execute_prepared('INSERT INTO graph_template_input_defs (graph_template_input_id, graph_template_item_id) VALUES (?, ?)', array($graph_template_input_id, $graph_template_item_id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: graph_templates.php?action=input_edit&graph_template_input_id=' . (empty($graph_template_input_id) ? get_nfilter_request_var('graph_template_input_id') : $graph_template_input_id) . '&graph_template_id=' . get_nfilter_request_var('graph_template_id'));\n\n\t\t\texit;\n\t\t} else {\n\t\t\tdb_execute_prepared('UPDATE graph_templates\n\t\t\t\tSET last_updated = NOW()\n\t\t\t\tWHERE id = ?',\n\t\t\t\tget_nfilter_request_var('graph_template_id'));\n\n\t\t\theader('Location: graph_templates.php?action=template_edit&id=' . get_nfilter_request_var('graph_template_id'));\n\n\t\t\texit;\n\t\t}\n\t}\n\n\theader('Location: graph_templates.php?action=template_edit&id=' . (empty($graph_template_id) ? get_nfilter_request_var('graph_template_id') : $graph_template_id));\n}\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tglobal $graph_item_types;\n\n\t$arr        = get_graph_group(get_request_var('id'));\n\t$next_id    = get_graph_parent(get_request_var('id'), 'next');\n\n\t$graph_type = db_fetch_cell_prepared('SELECT graph_type_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id'))\n\t);\n\n\t$text_type  = $graph_item_types[$graph_type];\n\n\tif (!empty($next_id) && isset($arr[get_request_var('id')])) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $next_id, 'next');\n\t} elseif (!preg_match('/(AREA|STACK|LINE)/', $text_type)) {\n\t\t/* this is so we know the \"other\" graph item to propagate the changes to */\n\t\t$next_item = get_item('graph_templates_item', 'sequence', get_request_var('id'), 'graph_template_id=' . get_request_var('graph_template_id') . ' AND local_graph_id=0', 'next');\n\n\t\tmove_item_down('graph_templates_item', get_request_var('id'), 'graph_template_id=' . get_request_var('graph_template_id') . ' AND local_graph_id=0');\n\t}\n\n\tif (!isempty_request_var('graph_template_id')) {\n\t\tresequence_graphs_simple(get_request_var('graph_template_id'));\n\t}\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tglobal $graph_item_types;\n\n\t$arr     = get_graph_group(get_request_var('id'));\n\t$next_id = get_graph_parent(get_request_var('id'), 'previous');\n\n\t$graph_type = db_fetch_cell_prepared('SELECT graph_type_id\n\t\tFROM graph_templates_item\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id'))\n\t);\n\n\t$text_type  = $graph_item_types[$graph_type];\n\n\tif (!empty($next_id) && isset($arr[get_request_var('id')])) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $next_id, 'previous');\n\t} elseif (!preg_match('/(AREA|STACK|LINE)/', $text_type)) {\n\t\t/* this is so we know the \"other\" graph item to propagate the changes to */\n\t\t$last_item = get_item('graph_templates_item', 'sequence', get_request_var('id'), 'graph_template_id=' . get_request_var('graph_template_id') . ' AND local_graph_id=0', 'previous');\n\n\t\tmove_item_up('graph_templates_item', get_request_var('id'), 'graph_template_id=' . get_request_var('graph_template_id') . ' AND local_graph_id=0');\n\t}\n\n\tif (!isempty_request_var('graph_template_id')) {\n\t\tresequence_graphs_simple(get_request_var('graph_template_id'));\n\t}\n}\n\nfunction item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM graph_templates_item WHERE id = ?', array(get_request_var('id')));\n\tdb_execute_prepared('DELETE FROM graph_templates_item WHERE local_graph_template_item_id = ?', array(get_request_var('id')));\n\n\t/* delete the graph item input if it is empty */\n\t$graph_item_inputs = db_fetch_assoc_prepared('SELECT graph_template_input.id\n\t\tFROM (graph_template_input, graph_template_input_defs)\n\t\tWHERE graph_template_input.id = graph_template_input_defs.graph_template_input_id\n\t\tAND graph_template_input.graph_template_id = ?\n\t\tAND graph_template_input_defs.graph_template_item_id = ?\n\t\tGROUP BY graph_template_input.id', array(get_request_var('graph_template_id'), get_request_var('id')));\n\n\tif (cacti_sizeof($graph_item_inputs) > 0) {\n\t\tforeach ($graph_item_inputs as $graph_item_input) {\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT graph_template_input_id FROM graph_template_input_defs WHERE graph_template_input_id = ?', array($graph_item_input['id']))) == 1) {\n\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input WHERE id = ?', array($graph_item_input['id']));\n\t\t\t}\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE FROM graph_template_input_defs WHERE graph_template_item_id = ?', array(get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $struct_graph_item, $graph_item_types, $consolidation_functions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\tget_filter_request_var('data_template_id');\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'data_template_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '0'\n\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gti_' . get_filter_request_var('graph_template_id'));\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('graph_template_id') > 0 || isset_request_var('id')) {\n\t\t$sql_where  = '';\n\t\t$sql_params = array();\n\n\t\tif (get_request_var('id') > 0) {\n\t\t\t$sql_where .= ' AND gti.id = ?';\n\t\t\t$sql_params[] = get_request_var('id');\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') > 0) {\n\t\t\t$sql_where .= ' AND gti.graph_template_id = ?';\n\t\t\t$sql_params[] = get_request_var('graph_template_id');\n\t\t}\n\n\t\t$data_templates = array_rekey(\n\t\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT dtr.data_template_id\n\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\tON dtr.id = gti.task_item_id\n\t\t\t\tWHERE dtr.local_data_id = 0\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY dtr.data_template_id\",\n\t\t\t\t$sql_params\n\t\t\t),\n\t\t\t'data_template_id',\n\t\t\t'data_template_id'\n\t\t);\n\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tif (!isset($data_templates[get_request_var('data_template_id')])) {\n\t\t\t\tforeach ($data_templates as $dt) {\n\t\t\t\t\tset_request_var('data_template_id', $dt);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tform_start('graph_templates.php', 'graph_items');\n\n\t$header_label = __esc('Graph Template Items [edit graph: %s]', db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array(get_request_var('graph_template_id'))));\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\t}\n\n\t/* by default, select the LAST DS chosen to make everyone's lives easier */\n\tif (!isempty_request_var('graph_template_id')) {\n\t\t$default = db_fetch_row_prepared('SELECT task_item_id\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE graph_template_id = ?\n\t\t\tAND local_graph_id = 0\n\t\t\tORDER BY sequence DESC',\n\t\t\tarray(get_request_var('graph_template_id'))\n\t\t);\n\n\t\tif (cacti_sizeof($default) > 0) {\n\t\t\t$struct_graph_item['task_item_id']['default'] = $default['task_item_id'];\n\t\t} else {\n\t\t\t$struct_graph_item['task_item_id']['default'] = 0;\n\t\t}\n\t}\n\n\tif (isset_request_var('data_template_id')) {\n\t\t$sql_where = ' AND dtr.data_template_id = ' . get_filter_request_var('data_template_id');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$data_template_helper = array(\n\t\t'data_template_id' => array(\n\t\t\t'friendly_name' => __('Data Template Filter'),\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'sql'           => 'SELECT id, name FROM data_template ORDER BY name',\n\t\t\t'default'       => '0',\n\t\t\t'value'         => (isset_request_var('data_template_id') ? get_filter_request_var('data_template_id') : '0'),\n\t\t\t'none_value'    => __('Any'),\n\t\t\t'description'   => __('This filter will limit the Data Sources visible in the Data Source dropdown.')\n\t\t)\n\t);\n\n\t/* modifications to the default graph items array */\n\t$struct_graph_item['task_item_id']['sql'] = \"SELECT dtr.id,\n\t\tCONCAT_WS('', dt.name,' - ',' (', dtr.data_source_name,')') AS name\n\t\tFROM data_template_rrd AS dtr\n\t\tINNER JOIN data_template AS dt\n\t\tON dtr.data_template_id = dt.id\n\t\tWHERE dtr.local_data_id = 0\n\t\t$sql_where\n\t\tORDER BY dt.name, dtr.data_source_name\";\n\n\t$mystruct_graph_item = array_merge($data_template_helper, $struct_graph_item);\n\n\t$form_array = array();\n\n\tforeach ($mystruct_graph_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $mystruct_graph_item[$field_name]);\n\n\t\tif ($field_name != 'data_template_id') {\n\t\t\t$form_array[$field_name]['value']   = (isset($template_item) ? $template_item[$field_name] : '');\n\t\t\t$form_array[$field_name]['form_id'] = (isset($template_item) ? $template_item['id'] : '0');\n\t\t} else {\n\t\t\t$form_array[$field_name]['value']   = get_request_var('data_template_id');\n\t\t\t$form_array[$field_name]['form_id'] = (isset($template_item) ? $template_item['id'] : '0');\n\t\t}\n\t}\n\n\tif (cacti_sizeof($template_item) && $template_item['legend'] == '') {\n\t\tswitch ($template_item['graph_type_id']) {\n\t\t\tcase 7:\n\t\t\tcase 8:\n\t\t\tcase 2:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 20:\n\t\t\t\t$data_source = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\tWHERE id = ? AND local_data_id = 0',\n\t\t\t\t\tarray($template_item['task_item_id']));\n\n\t\t\t\tif ($data_source != '') {\n\t\t\t\t\tswitch($template_item['consolidation_function_id']) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t$data_source .= ' (AVG)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t$data_source .= ' (MIN)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t$data_source .= ' (MAX)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t$data_source .= ' (LAST)';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array['legend']['value'] = $data_source;\n\t\t\t\t}\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('graph_template_item_id', (isset($template_item) ? $template_item['id'] : '0'), '');\n\tform_hidden_box('graph_template_id', get_request_var('graph_template_id'), '0');\n\tform_hidden_box('_graph_type_id', (isset($template_item) ? $template_item['graph_type_id'] : '0'), '');\n\tform_hidden_box('_task_item_id', (isset($template_item) ? $template_item['task_item_id'] : '0'), '');\n\tform_hidden_box('save_component_item', '1', '');\n\tform_hidden_box('invisible_alpha', $form_array['alpha']['value'], 'FF');\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\tform_save_button('graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t$('#shift').click(function(data) {\n\t\t\t\ttoggleFields({\n\t\t\t\t\tvalue: $('#shift').is(':checked'),\n\t\t\t\t})\n\t\t\t});\n\n\t\t\t$('#data_template_id').change(function() {\n\t\t\t\t$.get(urlPath + 'graph_templates.php' +\n\t\t\t\t\t'?action=ajax_data_sources' +\n\t\t\t\t\t'&data_template_id=' + $('#data_template_id').val() +\n\t\t\t\t\t'&task_item_id=' + $('#task_item_id').val() +\n\t\t\t\t\t'&_task_item_id=' + $('#_task_item_id').val(),\n\t\t\t\t\tfunction(data) {\n\n\t\t\t\t\t\t$('#task_item_id').empty().append(data);\n\n\t\t\t\t\t\tif ($('#task_item_id').selectmenu('instance')) {\n\t\t\t\t\t\t\t$('#task_item_id').selectmenu('refresh');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tsetRowVisibility();\n\t\t\t$('#graph_type_id').change(function(data) {\n\t\t\t\tsetRowVisibility();\n\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * columns - task_item_id color_id alpha color2_id alpha2graph_type_id consolidation_function_id cdef_id value gprint_id text_format hard_return\n\t\t *\n\t\t * graph_type_ids - 1 - Comment 2 - HRule 3 - Vrule 4 - Line1 5 - Line2 6 - Line3 7 - Area 8 - Stack 9 - Gprint 10 - Legend\n\t\t */\n\n\t\tfunction changeColorId() {\n\t\t\t$('#alpha').prop('disabled', true);\n\n\t\t\tif ($('#color_id').val() != 0) {\n\t\t\t\t$('#alpha').prop('disabled', false);\n\t\t\t}\n\n\t\t\tswitch ($('#graph_type_id').val()) {\n\t\t\t\tcase '4':\n\t\t\t\tcase '5':\n\t\t\t\tcase '6':\n\t\t\t\tcase '7':\n\t\t\t\tcase '8':\n\t\t\t\t\t$('#alpha').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction changeColor2Id() {\n\t\t\t$('#alpha2').prop('disabled', true);\n\n\t\t\tif ($('#color2_id').val() != 0) {\n\t\t\t\t$('#alpha2').prop('disabled', false);\n\t\t\t}\n\n\t\t\tswitch ($('#graph_type_id').val()) {\n\t\t\t\tcase '7':\n\t\t\t\tcase '8':\n\t\t\t\t\t$('#alpha2').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction setRowVisibility() {\n\t\t\tvar graphType = $('#graph_type_id').val();\n\t\t\ttoggleFields({\n\t\t\t\tdata_template_id: graphType != 3 && graphType != 40,\n\t\t\t\ttask_item_id: graphType != 3 && graphType != 40,\n\t\t\t\tcolor_id: (graphType > 1 && graphType < 9) || graphType == 20 || graphType == 30,\n\t\t\t\tcolor2_id: graphType == 7 || graphType == 8,\n\t\t\t\talpha2: graphType == 7 || graphType == 8,\n\t\t\t\tgradheight: graphType == 7 || graphType == 8,\n\t\t\t\tline_width: (graphType > 3 && graphType < 7) || graphType == 20,\n\t\t\t\tdashes: (graphType > 1 && graphType < 7) || graphType == 20,\n\t\t\t\tdash_offset: (graphType > 1 && graphType < 7) || graphType == 20,\n\t\t\t\ttextalign: graphType == 40,\n\t\t\t\tshift: (graphType > 3 && graphType < 9) || graphType == 20,\n\t\t\t\talpha: (graphType > 3 && graphType < 9) || graphType == 20 || graphType == 40,\n\t\t\t\tconsolidation_function_id: graphType == 1 || (graphType > 3 && graphType != 10 && graphType != 15 && graphType != 30 && graphType != 40),\n\t\t\t\tcdef_id: graphType > 3 && graphType != 40,\n\t\t\t\tvdef_id: graphType > 3 && graphType != 40,\n\t\t\t\tvalue: graphType == 2 || graphType == 3 || graphType == 30,\n\t\t\t\tgprint_id: graphType > 8 && graphType < 16,\n\t\t\t\ttext_format: graphType >= 1 && graphType != 10 && graphType != 15 && graphType != 40,\n\t\t\t\tlegend: (graphType > 1 && graphType < 9) || graphType == 20 || graphType == 30,\n\t\t\t\thard_return: graphType >= 1 && graphType != 10 && graphType != 15 && graphType != 40,\n\t\t\t});\n\n\t\t\tchangeColorId();\n\t\t\tchangeColor2Id();\n\t\t}\n\t</script>\n\t<?php\n}\n\nfunction form_actions() {\n\tglobal $actions, $config, $image_types, $graph_template_classes;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_templates\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t$snmp_graph_ids = array_rekey(\n\t\t\t\t\tdb_fetch_assoc('SELECT id\n\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id')),\n\t\t\t\t\t'id', 'id'\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($snmp_graph_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\t\t\t\t}\n\n\t\t\t\t$graph_template_input = db_fetch_assoc('SELECT id\n\t\t\t\t\tFROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tif (cacti_sizeof($graph_template_input) > 0) {\n\t\t\t\t\tforeach ($graph_template_input as $item) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input_defs\n\t\t\t\t\t\t\tWHERE graph_template_input_id = ?', array($item['id']));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdb_execute('DELETE FROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM host_template_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t/* 'undo' any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE graph_templates_graph\n\t\t\t\t\tSET local_graph_template_graph_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_templates_item\n\t\t\t\t\tSET local_graph_template_item_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_local\n\t\t\t\t\tSET graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // change settings\n\t\t\t\tget_filter_request_var('graph_width');\n\t\t\t\tget_filter_request_var('graph_height');\n\t\t\t\tget_filter_request_var('image_format_id');\n\n\t\t\t\tforeach($selected_items as $graph_template_id) {\n\t\t\t\t\t$variables = array('height', 'width', 'image_format_id');\n\n\t\t\t\t\tforeach($variables as $v) {\n\t\t\t\t\t\tif (isset_request_var($v) && isset_request_var(\"t_$v\")) {\n\t\t\t\t\t\t\tdb_execute_prepared(\"UPDATE graph_templates_graph\n\t\t\t\t\t\t\t\tSET $v = ?\n\t\t\t\t\t\t\t\tWHERE graph_template_id = ?\",\n\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\tget_nfilter_request_var($v),\n\t\t\t\t\t\t\t\t\t$graph_template_id\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset_request_var('class') && isset_request_var('t_class')) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates\n\t\t\t\t\t\t\tSET class = ?\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\tget_nfilter_request_var('class'),\n\t\t\t\t\t\t\t\t$graph_template_id\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // retemplate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tretemplate_graphs($selected_items[$i]);\n\n\t\t\t\t\t$graph_template_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\tFROM graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\n\t\t\t\t\tif (isset($_SESSION['sess_gt_repairs']) && $_SESSION['sess_gt_repairs'] > 0) {\n\t\t\t\t\t\traise_message('gt_repair' . $selected_items[$i], __('Sync of Graph Template \\'%s\\' Resulted in %s Repairs!', $graph_template_name, $_SESSION['sess_gt_repairs']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('gt_repair' . $selected_items[$i], __('Sync of Graph Template \\'%s\\' Resulted in no Repairs.', $graph_template_name), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // resequence graphs with sequences off\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tretemplate_graphs($selected_items[$i], 0, true);\n\n\t\t\t\t\t$graph_template_name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\tFROM graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\n\t\t\t\t\tif (isset($_SESSION['sess_gt_repairs']) && $_SESSION['sess_gt_repairs'] > 0) {\n\t\t\t\t\t\traise_message('gt_repair' . $selected_items[$i], __('Sync of Graph Template \\'%s\\' Resulted in %s Repairs!', $graph_template_name, $_SESSION['sess_gt_repairs']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('gt_repair' . $selected_items[$i], __('Sync of Graph Template \\'%s\\' Resulted in no Repairs.', $graph_template_name), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: graph_templates.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'graph_templates.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Graph Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Graph Templates.'),\n\t\t\t\t\t'scont'    => __('Delete Graph Template'),\n\t\t\t\t\t'pcont'    => __('Delete Graph Templates')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Graph Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Graph Templates.'),\n\t\t\t\t\t'scont'    => __('Duplicate Graph Template'),\n\t\t\t\t\t'pcont'    => __('Duplicate Graph Templates'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<template_title> (1)',\n\t\t\t\t\t\t\t'width'   => 45\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Resize the following Graph Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Resize following Graph Templates.'),\n\t\t\t\t\t'scont'    => __('Resize Graph Template'),\n\t\t\t\t\t'pcont'    => __('Resize Graph Templates'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'class' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Template Class'),\n\t\t\t\t\t\t\t'default' => 'unspecified',\n\t\t\t\t\t\t\t'array'   => $graph_template_classes,\n\t\t\t\t\t\t\t'confirm' => true\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'height' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Graph Height'),\n\t\t\t\t\t\t\t'default' => read_config_option('default_graph_height'),\n\t\t\t\t\t\t\t'width'   => 5,\n\t\t\t\t\t\t\t'size'    => 5,\n\t\t\t\t\t\t\t'confirm' => true\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'width' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Graph Width'),\n\t\t\t\t\t\t\t'default' => read_config_option('default_graph_width'),\n\t\t\t\t\t\t\t'width'   => 5,\n\t\t\t\t\t\t\t'size'    => 5,\n\t\t\t\t\t\t\t'confirm' => true\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'image_format_id' => array(\n\t\t\t\t\t\t\t'method'   => 'drop_array',\n\t\t\t\t\t\t\t'title'    => __('Image Format'),\n\t\t\t\t\t\t\t'array'    => $image_types,\n\t\t\t\t\t\t\t'default'  => read_config_option('default_image_format'),\n\t\t\t\t\t\t\t'confirm' => true\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to perform a Full Synchronization between your Graphs and the chosen Graph Template. If you simply have a situation where the Graph Items don\\'t match the Graph Template, try the Quick Sync Graphs option first as it will take much less time.  This function is important if you have Graphs that exist with multiple versions of a Graph Template and wish to make them all common in appearance.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to perform a Full Synchronization between your Graphs and the chosen Graph Templates. If you simply have a situation where the Graph Items don\\'t match the Graph Template, try the Quick Sync Graphs option first as it will take much less time.  This function is important if you have Graphs that exist with multiple versions of a Graph Template and wish to make them all common in appearance.'),\n\t\t\t\t\t'scont'   => __('Synchronize Graphs to Graph Template'),\n\t\t\t\t\t'pcont'   => __('Synchronize Graphs to Graph Templates'),\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' =>  __('Click \\'Continue\\' to perform a Quick Synchronization of your Graphs for the following Graph Template. Use this option if your Graphs have Graph Items that do not match your Graph Template.  If this option does not work, use the Full Sync Graphs option, which will take more time to complete.'),\n\t\t\t\t\t'pmessage' =>  __('Click \\'Continue\\' to perform a Quick Synchronization of your Graphs for the following Graph Templates. Use this option if your Graphs have Graph Items that do not match your Graph Template.  If this option does not work, use the Full Sync Graphs option, which will take more time to complete.'),\n\t\t\t\t\t'scont'   => __('Synchronize Graphs to Graph Template'),\n\t\t\t\t\t'pcont'   => __('Synchronize Graphs to Graph Templates'),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = 'Graph Template Items [new]';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared(\"SELECT gti.id, gti.sequence, gti.text_format, gti.alpha, gti.alpha2,\n\t\t\tgti.value, gti.hard_return, gti.graph_type_id, gti.consolidation_function_id, gti.textalign, gti.legend,\n\t\t\tCONCAT(IFNULL(dt.name, ''), ' (', dtr.data_source_name, ')') AS data_source_name,\n\t\t\tcdef.name AS cdef_name, vdef.name as vdef_name, colors.hex, colors2.hex AS hex2, gtgp.name as gprint_name\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id=dtr.id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtr.local_data_id=dl.id\n\t\t\tLEFT JOIN data_template AS dt\n\t\t\tON dt.id=dtr.data_template_id\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tLEFT JOIN graph_templates_gprint as gtgp\n\t\t\tON gtgp.id=gti.gprint_id\n\t\t\tLEFT JOIN cdef\n\t\t\tON cdef_id=cdef.id\n\t\t\tLEFT JOIN vdef\n\t\t\tON vdef_id=vdef.id\n\t\t\tLEFT JOIN colors\n\t\t\tON color_id = colors.id\n\t\t\tLEFT JOIN colors AS colors2\n\t\t\tON color2_id = colors2.id\n\t\t\tWHERE gti.graph_template_id = ?\n\t\t\tAND gti.local_graph_id = 0\n\t\t\tORDER BY gti.sequence\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Graph Template Items [edit: %s]', db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array(get_request_var('id'))));\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'graph_templates.php?action=item_edit&graph_template_id=' . get_request_var('id'));\n\tdraw_graph_items_list($template_item_list, 'graph_templates.php', 'graph_template_id=' . get_request_var('id'), false);\n\thtml_end_box();\n\n\thtml_start_box(__('Graph Item Inputs'), '100%', '', '3', 'center', 'graph_templates.php?action=input_edit&graph_template_id=' . get_request_var('id'));\n\n\tprint \"<tr class='tableHeader'>\";\n\tDrawMatrixHeaderItem(__('Name'),'',2);\n\tprint '</tr>';\n\n\t$database = utilities_get_mysql_info();\n\n\t$sql_order = 'ORDER BY name';\n\tif ($database['database'] == 'MariaDB') {\n\t\tif (cacti_version_compare($database['version'], '10.7', '>')) {\n\t\t\t$sql_order = 'ORDER BY NATURAL_SORT_KEY(name)';\n\t\t}\n\t}\n\n\t$template_item_list = db_fetch_assoc_prepared(\"SELECT id, name\n\t\tFROM graph_template_input\n\t\tWHERE graph_template_id = ?\n\t\t$sql_order\",\n\t\tarray(get_request_var('id')));\n\n\t$i = 0;\n\n\tif (cacti_sizeof($template_item_list) > 0) {\n\t\tforeach ($template_item_list as $item) {\n\t\t\tform_alternate_row('', true);\n\t\t\t?>\n\t\t\t<td>\n\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('graph_templates.php?action=input_edit&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id'));?>'><?php print html_escape($item['name']);?></a>\n\t\t\t</td>\n\t\t\t<td class='right'>\n\t\t\t\t<a class='deleteMarker ti ti-x' title='<?php print __esc('Delete');?>' href='<?php print html_escape('graph_templates.php?action=input_remove&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id') . '&nostate=true');?>'></a>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='2'><em>\" . __('No Inputs') . '</em></td></tr>';\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadUrl({url:$(this).attr('href')})\n\t\t});\n\n\t\t$('#graph_templates_template_edit1_child').attr('id', 'item_ids');\n\t\t$('#item_ids').find('tr:first').addClass('nodrag').addClass('nodrop');\n\t\t$('#item_ids').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'graph_templates.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize()});\n\t\t\t}\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction template_edit() {\n\tglobal $struct_graph, $image_types, $fields_graph_template_template_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* graph item list goes here */\n\tif (!isempty_request_var('id')) {\n\t\titem();\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE graph_template_id = ?\n\t\t\tAND local_graph_id=0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Graph Template [edit: %s]', $template['name']);\n\t} else {\n\t\t$header_label = __('Graph Template [new]');\n\t}\n\n\tif (isset($template['version']) && $template['version'] == '') {\n\t\t$template['version'] = CACTI_VERSION;\n\t}\n\n\tform_start('graph_templates.php', 'graph_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_graph_template_template_edit, (isset($template) ? $template : array()), (isset($template_graph) ? $template_graph : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Graph Template Options'), '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_graph[$field_name]) ? $template_graph[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_graph['id']) ? $template_graph['id'] : '0');\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name'          => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Graph creation.'),\n\t\t\t\t'value'         => (isset($template_graph['t_' . $field_name]) ? $template_graph['t_' . $field_name] : '')\n\t\t\t);\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\thtml_end_box(true, true);\n\n\tform_save_button('graph_templates.php', 'return');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\tdynamic();\n\t});\n\n\tfunction dynamic() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction graph_templates() {\n\tglobal $actions, $item_rows, $image_types, $graph_template_classes;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE gt.name LIKE ?';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('vdef_id') > '0') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gti.vdef_id = ?';\n\t\t$sql_params[] = get_request_var('vdef_id');\n\t}\n\n\tif (get_request_var('cdef_id') > '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gti.cdef_id = ?';\n\t\t$sql_params[] = get_request_var('cdef_id');\n\t}\n\n\tif (get_request_var('class') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gt.class = ?';\n\t\t$sql_params[] = get_request_var('class');\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gt.graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(DISTINCT gt.id)\n\t\tFROM graph_templates AS gt\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gti.graph_template_id = gt.id\n\t\tAND gti.local_graph_id = 0\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$cacti_version = CACTI_VERSION;\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc_prepared(\"SELECT DISTINCT gt.id, gt.name, gt.graphs,\n\t\tIF(gt.version = '', '$cacti_version', gt.version) AS version,\n\t\tIF(gt.class = '', 'unassigned', gt.class) AS class, graph_items, last_updated,\n\t\tCONCAT(gtg.height, 'x', gtg.width) AS size, gtg.vertical_label, gtg.image_format_id\n\t\tFROM graph_templates AS gt\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gtg.graph_template_id = gt.id\n\t\tAND gtg.local_graph_id = 0\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gti.graph_template_id = gt.id\n\t\tAND gti.local_graph_id = 0\n\t\tLEFT JOIN (\n\t\t\tSELECT graph_template_id, COUNT(*) AS graph_items\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE local_graph_id = 0\n\t\t\tGROUP BY graph_template_id\n\t\t) AS items\n\t\tON gt.id = items.graph_template_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Graph Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Graph Template.')\n\t\t),\n\t\t'gt.id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'class' => array(\n\t\t\t'display' => __('Class'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Class of this Graph Template')\n\t\t),\n\t\t'version' => array(\n\t\t\t'display' => __('Version'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Version of this Graph Template')\n\t\t),\n\t\t'nosort3' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('Graph Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Graph.')\n\t\t),\n\t\t'graph_items' => array(\n\t\t\t'display' => __('Graph Items'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graph Items in this Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Graphs using this Graph Template.')\n\t\t),\n\t\t'image_format_id' => array(\n\t\t\t'display' => __('Image Format'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The default image format for the resulting Graphs.')\n\t\t),\n\t\t'size' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The default size of the resulting Graphs.')\n\t\t),\n\t\t'vertical_label' => array(\n\t\t\t'display' => __('Vertical Label'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The vertical label for the resulting Graphs.')\n\t\t),\n\t\t'last_updated' => array(\n\t\t\t'display' => __('Last Updated'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The last time this Template was updated.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('graph_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Graph Templates'), 'page', 'main');\n\n\tform_start('graph_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'graph_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($graph_template_classes[$template['class']], $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['version'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graph_items'], '-1'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graphs'], '-1'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell($image_types[$template['image_format_id']], $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['size'], $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['vertical_label'], $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['last_updated'], $template['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Graph Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction input_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM graph_template_input WHERE id = ?', array(get_request_var('id')));\n\tdb_execute_prepared('DELETE FROM graph_template_input_defs WHERE graph_template_input_id = ?', array(get_request_var('id')));\n}\n\nfunction input_edit() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item, $fields_graph_template_input_edit;\n\n\t// Remove filter item\n\tunset($struct_graph_item['data_template_id']);\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\t$header_label = __esc('Graph Item Inputs [edit graph: %s]', db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array(get_request_var('graph_template_id'))));\n\n\t/* get a list of all graph item field names and populate an array for user display */\n\tforeach ($struct_graph_item as $field_name => $field_array) {\n\t\tif ($field_array['method'] != 'view') {\n\t\t\t$graph_template_items[$field_name] = $field_array['friendly_name'];\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$graph_template_input = db_fetch_row_prepared('SELECT * FROM graph_template_input WHERE id = ?', array(get_request_var('id')));\n\t}\n\n\tform_start('graph_templates.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_graph_template_input_edit, (isset($graph_template_input) ? $graph_template_input : array()), (isset($graph_template_items) ? $graph_template_items : array()), $_REQUEST)\n\t\t)\n\t);\n\n\tif (!isset_request_var('id')) {\n\t\tset_request_var('id', 0);\n\t}\n\n\thtml_end_box(true, true);\n\n\t$item_list = db_fetch_assoc_prepared(\"SELECT CONCAT_WS(' - ', dtd.name, dtr.data_source_name) AS data_source_name,\n\t\tgti.text_format, gti.id AS graph_templates_item_id, gti.graph_type_id,\n\t\tgti.consolidation_function_id, gtid.graph_template_input_id\n\t\tFROM graph_templates_item AS gti\n\t\tLEFT JOIN graph_template_input_defs AS gtid\n\t\tON gtid.graph_template_item_id = gti.id\n\t\tAND gtid.graph_template_input_id = ?\n\t\tLEFT JOIN data_template_rrd AS dtr\n\t\tON gti.task_item_id = dtr.id\n\t\tLEFT JOIN data_local AS dl\n\t\tON dtr.local_data_id = dl.id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dl.id = dtd.local_data_id\n\t\tWHERE gti.local_graph_id = 0\n\t\tAND gti.graph_template_id = ?\n\t\tORDER BY gti.sequence\",\n\t\tarray(get_request_var('id'), get_request_var('graph_template_id')));\n\n\thtml_start_box(__('Associated Graph Items'), '100%', false, '3', 'center', '');\n\n\t$i = 0;\n\n\t$any_selected_item = '';\n\n\tif (cacti_sizeof($item_list)) {\n\t\tforeach ($item_list as $item) {\n\t\t\tform_alternate_row();\n\n\t\t\tif ($item['graph_template_input_id'] == '') {\n\t\t\t\t$old_value = '';\n\t\t\t} else {\n\t\t\t\t$old_value = 'on';\n\n\t\t\t\t$any_selected_item = $item['graph_templates_item_id'];\n\t\t\t}\n\n\t\t\tif ($graph_item_types[$item['graph_type_id']] == 'GPRINT') {\n\t\t\t\t$start_bold = '';\n\t\t\t\t$end_bold   = '';\n\t\t\t} else {\n\t\t\t\t$start_bold = '<strong>';\n\t\t\t\t$end_bold   = '</strong>';\n\t\t\t}\n\n\t\t\tprint '<td>';\n\n\t\t\t$name = $start_bold . __esc('Item #%s', $i + 1) . ': ' . $graph_item_types[$item['graph_type_id']] . ' (' . $consolidation_functions[$item['consolidation_function_id']] . ')' . $end_bold;\n\n\t\t\tform_checkbox('i_' . $item['graph_templates_item_id'], $old_value, '', '', '', get_request_var('graph_template_id'));\n\t\t\tprint \"<label for='i_\" . $item['graph_templates_item_id'] . \"'>\" . $name . '</label>';\n\n\t\t\tprint '</td>';\n\n\t\t\t$i++;\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td><em>' . __('No Items') . '</em></td></tr>';\n\t}\n\n\tform_hidden_box('any_selected_item', $any_selected_item, '');\n\n\thtml_end_box(true, true);\n\n\tform_save_button('graph_templates.php?action=template_edit&id=' . get_request_var('graph_template_id'));\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $graph_template_classes;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\tif (isset_request_var('has_graphs')) {\n\t\t$value = get_nfilter_request_var('has_graphs');\n\t} else {\n\t\t$value = read_config_option('default_has') == 'on' ? 'true':'false';\n\t}\n\n\t$graph_template_classes = $all + $graph_template_classes;\n\n\tif ($value == 'false') {\n\t\t$cdefs = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT DISTINCT c.id, c.name\n\t\t\t\tFROM cdef AS c\n\t\t\t\tINNER JOIN (SELECT DISTINCT cdef_id FROM graph_templates_item WHERE cdef_id > 0 AND local_graph_id = 0) AS gti\n\t\t\t\tON c.id = gti.cdef_id\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\t} else {\n\t\t$cdefs = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT DISTINCT c.id, c.name\n\t\t\t\tFROM cdef AS c\n\t\t\t\tINNER JOIN (SELECT DISTINCT cdef_id FROM graph_templates_item WHERE cdef_id > 0 AND local_graph_id > 0) AS gti\n\t\t\t\tON c.id = gti.cdef_id\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\t}\n\n\t$cdefs = $all + $cdefs;\n\n\tif ($value == 'false') {\n\t\t$vdefs = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT DISTINCT v.id, v.name\n\t\t\t\tFROM vdef AS v\n\t\t\t\tINNER JOIN (SELECT DISTINCT vdef_id FROM graph_templates_item WHERE vdef_id > 0 AND local_graph_id = 0) AS gti\n\t\t\t\tON gti.vdef_id = v.id\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\t} else {\n\t\t$vdefs = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT DISTINCT v.id, v.name\n\t\t\t\tFROM vdef AS v\n\t\t\t\tINNER JOIN (SELECT DISTINCT vdef_id FROM graph_templates_item WHERE vdef_id > 0 AND local_graph_id > 0) AS gti\n\t\t\t\tON gti.vdef_id = v.id\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\t}\n\n\t$vdefs = $all + $vdefs;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'class' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Class'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $graph_template_classes,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'cdef_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('CDEFs'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $cdefs,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'vdef_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('VDEFs'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $vdefs,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'has_graphs' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Has Graphs'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => $value\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_IS_REGEX,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Graph Templates'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Graph Templates'), 'graph_templates.php', 'form_graphs', 'sess_gt', 'graph_templates.php?action=edit');\n\n\t$pageFilter->rows_label = __('Graph Templates');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "graph_view.php",
          "type": "blob",
          "size": 3.0126953125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/graphs.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/timespan_settings.php');\ninclude_once('./lib/rrd.php');\n\n/* set the default graph action */\nset_default_graph_action();\n\n/* perform spikekill action */\nhtml_spikekill_actions();\n\n/* process tree settings */\nprocess_tree_settings();\n\n/* setup realtime defaults if they are not set */\ninitialize_realtime_step_and_window();\n\nswitch (get_nfilter_request_var('action')) {\n\tcase 'ajax_hosts':\n\t\t$sql_where = html_make_device_where();\n\t\tget_allowed_ajax_hosts(true, true, $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_search':\n\t\tget_matching_nodes();\n\n\t\tbreak;\n\tcase 'ajax_reports':\n\t\thtml_graph_get_reports();\n\n\t\tbreak;\n\tcase 'update_timespan':\n\t\thtml_graph_update_timespan();\n\n\t\tbreak;\n\tcase 'save':\n\t\thtml_save_graph_settings();\n\n\t\tbreak;\n\tcase 'tree':\n\t\thtml_tree_init();\n\n\t\tbreak;\n\tcase 'get_node':\n\t\thtml_tree_get_node();\n\n\t\tbreak;\n\tcase 'tree_content':\n\t\thtml_tree_get_content();\n\n\t\tbreak;\n\tcase 'preview':\n\t\thtml_graph_preview_view();\n\n\t\tbreak;\n\tcase 'list':\n\t\thtml_graph_list_view();\n\n\t\tbreak;\n\tcase 'view-preview':\n\tcase 'view-tree':\n\tcase 'view':\n\t\thtml_graph_single_view();\n\n\t\tbreak;\n\tcase 'zoom-preview':\n\tcase 'zoom-tree':\n\tcase 'zoom':\n\t\thtml_graph_zoom();\n\n\t\tbreak;\n\tcase 'properties-preview':\n\tcase 'properties-tree':\n\tcase 'properties':\n\t\thtml_graph_properties();\n\n\t\tbreak;\n}\n"
        },
        {
          "name": "graph_xport.php",
          "type": "blob",
          "size": 12.8349609375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* since we'll have additional headers, tell php when to flush them */\nob_start();\n\n$guest_account = true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/rrd.php');\n\n/* ================= input validation ================= */\nget_filter_request_var('graph_start');\nget_filter_request_var('graph_end');\nget_filter_request_var('graph_height');\nget_filter_request_var('graph_width');\nget_filter_request_var('local_graph_id');\nget_filter_request_var('rra_id');\nget_filter_request_var('stdout');\n/* ==================================================== */\n\n/* flush the headers now */\nob_end_clean();\n\ncacti_session_close();\n\n$graph_data_array = array();\n\n/* override: graph start time (unix time) */\nif (!isempty_request_var('graph_start') && is_numeric(get_request_var('graph_start')) && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n}\n\n/* override: graph end time (unix time) */\nif (!isempty_request_var('graph_end') && is_numeric(get_request_var('graph_end')) && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n}\n\n/* override: graph height (in pixels) */\nif (!isempty_request_var('graph_height') && is_numeric(get_request_var('graph_height')) && get_request_var('graph_height') < 3000) {\n\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n}\n\n/* override: graph width (in pixels) */\nif (!isempty_request_var('graph_width') && is_numeric(get_request_var('graph_width')) && get_request_var('graph_width') < 3000) {\n\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n}\n\n/* override: skip drawing the legend? */\nif (!isempty_request_var('graph_nolegend')) {\n\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n}\n\n/* print RRDtool graph source? */\nif (!isempty_request_var('show_source')) {\n\t$graph_data_array['print_source'] = get_request_var('show_source');\n}\n\n$graph_info = db_fetch_row_prepared('SELECT *\n\tFROM graph_templates_graph\n\tWHERE local_graph_id = ?',\n\tarray(get_request_var('local_graph_id')));\n\n/* for bandwidth, NThPercentile */\n$xport_meta = array();\n\n/* tell function we are csv */\n$graph_data_array['export_csv'] = true;\n\n/* Get graph export */\n$xport_array = rrdtool_function_xport(get_request_var('local_graph_id'), get_request_var('rra_id'), $graph_data_array, $xport_meta, $_SESSION[SESS_USER_ID]);\n\n/* Make graph title the suggested file name */\nif (is_array($xport_array['meta'])) {\n\t$filename = $xport_array['meta']['title_cache'] . '.csv';\n} else {\n\t$filename = 'graph_export.csv';\n}\n\nheader('Content-type: application/vnd.ms-excel; charset=UTF-8');\nheader('Content-Transfer-Encoding: binary');\n\nif (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {\n\theader('Pragma: cache');\n}\n\nheader('Cache-Control: max-age=15');\n\nif (!isset_request_var('stdout')) {\n\theader('Content-Disposition: attachment; filename=\"' . $filename . '\"');\n}\n\nif (isset_request_var('format') && get_nfilter_request_var('format') == 'table') {\n\t$html = true;\n} else {\n\t$html = false;\n}\n\nif (is_array($xport_array['meta']) && isset($xport_array['meta']['start'])) {\n\tif (!$html) {\n\t\t$output  = '\"' . __('Title') . '\",\"'          . $xport_array['meta']['title_cache']    . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('Vertical Label') . '\",\"' . $xport_array['meta']['vertical_label'] . '\"' . \"\\n\";\n\n\t\t$output .= '\"' . __('Start Date') . '\",\"'     . date('Y-m-d H:i:s', $xport_array['meta']['start']) . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('End Date') . '\",\"'       . date('Y-m-d H:i:s', ($xport_array['meta']['end'] == $xport_array['meta']['start']) ? $xport_array['meta']['start'] + $xport_array['meta']['step'] * ($xport_array['meta']['rows'] - 1) : $xport_array['meta']['end']) . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('Step') . '\",\"'           . $xport_array['meta']['step']                       . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('Total Rows') . '\",\"'     . $xport_array['meta']['rows']                       . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('Graph ID') . '\",\"'       . $xport_array['meta']['local_graph_id']             . '\"' . \"\\n\";\n\t\t$output .= '\"' . __('Host ID') . '\",\"'        . $xport_array['meta']['host_id']                    . '\"' . \"\\n\";\n\n\t\tif (isset($xport_meta['NthPercentile'])) {\n\t\t\tforeach ($xport_meta['NthPercentile'] as $item) {\n\t\t\t\t$output .= '\"' . __('Nth Percentile') . '\",\"' . $item['value'] . '\",\"' . $item['format'] . '\"' . \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (isset($xport_meta['Summation'])) {\n\t\t\tforeach ($xport_meta['Summation'] as $item) {\n\t\t\t\t$output .= '\"' . __('Summation') . '\",\"' . $item['value'] . '\",\"' . $item['format'] . '\"' . \"\\n\";\n\t\t\t}\n\t\t}\n\n\t\t$output .= '\"\"' . \"\\n\";\n\n\t\t$header = '\"' . __('Date') . '\"';\n\n\t\tfor ($i = 1; $i <= $xport_array['meta']['columns']; $i++) {\n\t\t\t$header .= ',\"' . $xport_array['meta']['legend']['col' . $i] . '\"';\n\t\t}\n\n\t\t$output .= $header . \"\\n\";\n\n\t\tif (isset($xport_array['data']) && is_array($xport_array['data'])) {\n\t\t\t$j = 0;\n\n\t\t\tforeach ($xport_array['data'] as $row) {\n\t\t\t\t$data = '\"' . date('Y-m-d H:i:s', (isset($row['timestamp']) ? $row['timestamp'] : $xport_array['meta']['start'] + $j * $xport_array['meta']['step'])) . '\"';\n\n\t\t\t\tfor ($i = 1; $i <= $xport_array['meta']['columns']; $i++) {\n\t\t\t\t\t$data .= ',\"' . $row['col' . $i] . '\"';\n\t\t\t\t}\n\n\t\t\t\t$output .= $data . \"\\n\";\n\t\t\t\t$j++;\n\t\t\t}\n\n\t\t\t// Full UTF-8 Output\n\t\t\tprint \"\\xEF\\xBB\\xBF\";\n\t\t\tprint $output;\n\t\t}\n\t} else {\n\t\tprint \"<div class='cactiTable'>\";\n\n\t\tprint \"<div class='cactiTableTitleRow'>\n\t\t\t<div class='cactiTableTitle'>\" . __('Summary Details') . \"</div>\n\t\t\t<div class='cactiTableButton'>\n\t\t\t\t<span><a href='#' role='link' class='download linkOverDark' id='graph_\" . $xport_array['meta']['local_graph_id'] . \"'>\" . __('Download as CSV') . \"</a></span>\n\t\t\t</div>\n\t\t</div>\";\n\n\t\t/* print the header information */\n\t\tprint \"<table class='cactiTable selectable'>\";\n\n\t\tprint \"<tr class='even'>\";\n\t\tprint '<td style=\"width:25%\">' . __('Title') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . html_escape($xport_array['meta']['title_cache']) . '</td>';\n\t\tprint '<td style=\"width:25%\">' . __('Vertical Label') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . html_escape($xport_array['meta']['vertical_label']) . '</td>';\n\t\tprint '</tr>';\n\n\t\tprint \"<tr class='odd'>\";\n\t\tprint '<td style=\"width:25%\">' . __('Start Date') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . date('Y-m-d H:i:s', $xport_array['meta']['start']) . '</td>';\n\t\tprint '<td style=\"width:25%\">' . __('End Date') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . date('Y-m-d H:i:s', ($xport_array['meta']['end'] == $xport_array['meta']['start']) ? $xport_array['meta']['start'] + $xport_array['meta']['step'] * ($xport_array['meta']['rows'] - 1) : $xport_array['meta']['end']) . '</td>';\n\t\tprint '</tr>';\n\n\t\tprint \"<tr class='even'>\";\n\t\tprint '<td style=\"width:25%\">' . __('Step') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . $xport_array['meta']['step'] . '</td>';\n\t\tprint '<td style=\"width:25%\">' . __('Total Rows') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . $xport_array['meta']['rows'] . '</td>';\n\t\tprint '</tr>';\n\n\t\tprint \"<tr class='odd'>\";\n\t\tprint '<td style=\"width:25%\">' . __('Graph ID') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . $xport_array['meta']['local_graph_id'] . '</td>';\n\t\tprint '<td style=\"width:25%\">'  . __('Host ID') . '</td>';\n\t\tprint '<td style=\"width:25%\">' . $xport_array['meta']['host_id'] . '</td>';\n\t\tprint '</tr>';\n\n\t\t$class = 'even';\n\n\t\tif (isset($xport_meta['NthPercentile'])) {\n\t\t\tforeach ($xport_meta['NthPercentile'] as $index => $item) {\n\t\t\t\tif ($class == 'even') {\n\t\t\t\t\t$class = 'odd';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'even';\n\t\t\t\t}\n\n\t\t\t\tif ($index % 2 == 0) {\n\t\t\t\t\tif ($index > 0) {\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint \"<tr class='$class'>\";\n\t\t\t\t}\n\n\t\t\t\tprint '<td style=\"width:25%\">' . __('Nth Percentile') . ' [ ' . html_escape($item['format']) . ' ]</td>';\n\t\t\t\tprint '<td style=\"width:25%\">' . html_escape($item['value']) . '</td>';\n\t\t\t}\n\n\t\t\tif ($index % 2 != 0) {\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\t\t}\n\n\t\tif (isset($xport_meta['Summation'])) {\n\t\t\tforeach ($xport_meta['Summation'] as $index => $item) {\n\t\t\t\tif ($class == 'even') {\n\t\t\t\t\t$class = 'odd';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'even';\n\t\t\t\t}\n\n\t\t\t\tif ($index % 2 == 0) {\n\t\t\t\t\tif ($index > 0) {\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint \"<tr class='$class'>\";\n\t\t\t\t}\n\n\t\t\t\tprint '<td style=\"width:25%\">' . __('Summation') . ' [ ' . html_escape($item['format']) . ' ]</td>';\n\t\t\t\tprint '<td style=\"width:25%\">' . html_escape($item['value']) . '</td>';\n\t\t\t}\n\n\t\t\tif ($index % 2 != 0) {\n\t\t\t\tprint '</tr>';\n\t\t\t}\n\t\t}\n\n\t\tprint '</table>';\n\t\tprint '</div><br>';\n\n\t\t/* end of CSV header information */\n\n\t\tprint \"<div class='wrapperTop'><div class='fake'></div></div>\";\n\t\tprint \"<div class='wrapperMain' style='display:none;'>\";\n\n\t\tprint \"<table id='csvExport' class='cactiTable'><thead>\";\n\n\t\tprint \"<tr class='tableHeader'>\n\t\t\t<th class='tableSubHeaderColumn left ui-resizable'>\" . __('Date') . '</th>';\n\n\t\tfor ($i = 1; $i <= $xport_array['meta']['columns']; $i++) {\n\t\t\tprint \"<th class='{sorter: \\\"numberFormat\\\"} tableSubHeaderColumn right ui-resizable'>\" . $xport_array['meta']['legend']['col' . $i] . '</th>';\n\t\t}\n\n\t\tprint '</tr></thead>';\n\n\t\tif (isset($xport_array['data']) && is_array($xport_array['data'])) {\n\t\t\t$j = 0;\n\n\t\t\tforeach ($xport_array['data'] as $row) {\n\t\t\t\tprint \"<tr><td class='left'>\" . date('Y-m-d H:i:s', (isset($row['timestamp']) ? $row['timestamp'] : $xport_array['meta']['start'] + $j * $xport_array['meta']['step'])) . '</td>';\n\n\t\t\t\tfor ($i = 1; $i <= $xport_array['meta']['columns']; $i++) {\n\t\t\t\t\t$row_data = floatval($row['col'. $i]);\n\n\t\t\t\t\tif ($row_data > 1) {\n\t\t\t\t\t\t$row_data = trim(number_format_i18n(round($row_data, 3), 2, $graph_info['base_value']));\n\t\t\t\t\t} elseif ($row_data == 0) {\n\t\t\t\t\t\t$row_data = '-';\n\n\t\t\t\t\t\tif (!is_numeric($row['col'.$i])) {\n\t\t\t\t\t\t\t$row_data .= '(unexpected: ' . $row['col' . $i] . ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif (is_numeric($row_data)) {\n\t\t\t\t\t\t$row_data = trim(number_format_i18n(round($row_data, 5), 4));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$row_data = 'U';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint \"<td class='right'>$row_data</td>\";\n\t\t\t\t}\n\n\t\t\t\tprint '</tr>';\n\t\t\t\t$j++;\n\t\t\t}\n\n\t\t\tprint '<tr><td>';\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t$(function() {\n\t\t\t\t$('#csvExport').tablesorter({\n\t\t\t\t\twidgets: ['zebra'],\n\t\t\t\t\twidgetZebra: { css: ['even', 'odd'] },\n\t\t\t\t\theaderTemplate: '<div class=\"textSubHeaderDark\">{content} {icon}</div>',\n\t\t\t\t\tcssIconAsc: 'fa-sort-up',\n\t\t\t\t\tcssIconDesc: 'fa-sort-down',\n\t\t\t\t\tcssIconNone: 'fa-sort',\n\t\t\t\t\tcssIcon: 'fa'\n\t\t\t\t});\n\n  \t\t\t\t$('.wrapperTop').on('scroll', function(){\n\t\t\t\t\t$('.wrapperMain').scrollLeft($('.wrapperTop').scrollLeft());\n\t\t\t\t});\n\t\t\t\t$('.wrapperMain').on('scroll', function(){\n\t\t\t\t\t$('.wrapperTop').scrollLeft($('.wrapperMain').scrollLeft());\n\t\t\t\t});\n\n\t\t\t\t$(window).resize(function() {\n\t\t\t\t\tresizeWrapper();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction resizeWrapper() {\n\t\t\t\tmainWidth = $(window).width() - $('#navigation').outerWidth() - 40;\n\t\t\t\tcsvWidth = $('.wrapperMain').outerWidth();\n\n\t\t\t\tif (csvWidth > mainWidth) {\n\t\t\t\t\t$('.wrapperMain, .wrapperTop').css('width', mainWidth).css('overflow-x', 'scroll');\n\t\t\t\t\t$('.fake').css('width', csvWidth).css('height', '20px');\n\t\t\t\t\t$('.wrapperTop').css('height', '20px');\n\t\t\t\t} else {\n\t\t\t\t\t$('.wrapperTop').hide();\n\t\t\t\t\t$('.wrapperMain').css('width', '100%');\n\t\t\t\t}\n\t\t\t\t$('.wrapperMain').show();\n\t\t\t}\n\t\t\t</script>\n\t\t\t<?php\n\n\t\t\tprint '</td></tr></table></div>';\n\t\t}\n\t}\n}\n\n/* log the memory usage */\ncacti_log(\"The Peak Graph XPORT Memory Usage was '\" . memory_get_peak_usage() . \"'\", false, 'WEBUI', POLLER_VERBOSITY_MEDIUM);\n"
        },
        {
          "name": "graphs.php",
          "type": "blob",
          "size": 112.029296875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/graphs.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\n$actions = array(\n\t1  => __('Delete')\n);\n\nif ((get_nfilter_request_var('template_id') != '' &&\n\tget_nfilter_request_var('template_id') != '-1' &&\n\tget_nfilter_request_var('template_id') != '0') || get_nfilter_request_var('drp_action') == 2) {\n\t$actions += array(\n\t\t2  => __('Change Graph Template')\n\t);\n}\n\nif (read_config_option('grds_creation_method') == 1) {\n\t$actions += array(\n\t\t3 => __('Duplicate'),\n\t\t4 => __('Convert to Graph Template')\n\t);\n}\n\n$actions += array(\n\t5  => __('Change Device'),\n\t6  => __('Reapply Suggested Names'),\n\t8  => __('Apply Automation Rules'),\n\t9  => __('Create Aggregate Graph'),\n\t10 => __('Create Aggregate from Template'),\n);\n\n$reports = db_fetch_cell_prepared('SELECT COUNT(*)\n\tFROM reports\n\tWHERE user_id = ?\n\tORDER BY name',\n\tarray($_SESSION[SESS_USER_ID])\n);\n\nif ($reports > 0) {\n\t$actions += array(\n\t\t11 => __('Place Graphs on Report')\n\t);\n}\n\n$actions = api_plugin_hook_function('graphs_action_array', $actions);\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item':\n\t\ttop_header();\n\t\titem();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_graph_items':\n\t\tget_ajax_graph_items();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_filter_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_filter_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_graph_items':\n\t\t$sql_where = '';\n\n\t\tif (!isempty_request_var('host_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'dl.host_id=' . get_filter_request_var('host_id');\n\t\t}\n\n\t\tif (!isempty_request_var('data_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'dtd.data_template_id=' . get_filter_request_var('data_template_id');\n\t\t}\n\n\t\tget_allowed_ajax_graph_items(true, $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\t$local_graph_id = get_filter_request_var('id');\n\t\t$sequences      = get_nfilter_request_var('item_ids');\n\n\t\tif (cacti_sizeof($sequences)) {\n\t\t\tforeach($sequences as $index => $s) {\n\t\t\t\t$new_seq = $index++;\n\n\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tAND local_graph_id = ?\n\t\t\t\t\tAND graph_template_id = 0',\n\t\t\t\t\tarray($new_seq, $s, $local_graph_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: graphs.php?action=graph_edit&id=' . get_filter_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('local_graph_id');\n\n\t\titem_remove();\n\n\t\theader('Location: graphs.php?action=graph_edit&id=' . get_request_var('local_graph_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('local_graph_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: graphs.php?action=graph_edit&id=' . get_request_var('local_graph_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('local_graph_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: graphs.php?action=graph_edit&id=' . get_request_var('local_graph_id'));\n\n\t\tbreak;\n\tcase 'lock':\n\tcase 'unlock':\n\t\t$_SESSION['sess_graph_lock_id'] = get_filter_request_var('id');\n\t\t$_SESSION['sess_graph_locked']  = (get_request_var('action') == 'lock' ? true:false);\n\tcase 'graph_edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tgraphs();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction get_ajax_graph_items() {\n\t$rrd_id  = get_filter_request_var('rrd_id');\n\t$host_id = get_filter_request_var('host_id');\n\n\t$sql_where    = '';\n\t$sql_params   = array();\n\t$sql_params[] = $rrd_id;\n\n\tif ($host_id > 0) {\n\t\t$sql_where = ' AND data_local.host_id = ?';\n\t\t$sql_params[] = $host_id;\n\t}\n\n\tif (get_nfilter_request_var('term') != '') {\n\t\t$sql_where .= ' HAVING name LIKE ?';\n\t\t$sql_params[] = '%' . get_nfilter_request_var('term') . '%';\n\t}\n\n\t$items  = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN '\" . __esc('No Device - ') . \"'\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\tAND data_template_rrd.id = ?\n\t\t) AS a\n\t\tUNION\n\t\tSELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN '\" . __esc('No Device - ') . \"'\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t) AS b\n\t\tLIMIT \" . read_config_option('autocomplete_rows'),\n\t\t$sql_params);\n\n\tforeach ($items as $key => $item) {\n\t\t$items[$key]['label'] = $item['name'];\n\t}\n\n\tprint json_encode($items);\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id, name\n\t\tFROM graph_tree\n\t\tORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$actions['tr_' . $tree['id']] = __esc('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\nfunction parse_validate_graph_template_id($variable) {\n\t$output_type_id = 0;\n\n\tif (strpos(get_nfilter_request_var($variable), '_') !== false) {\n\t\t$template_parts = explode('_', get_nfilter_request_var($variable));\n\n\t\tif (is_numeric($template_parts[0]) && is_numeric($template_parts[1])) {\n\t\t\tset_request_var('graph_template_id', $template_parts[0]);\n\t\t\t$output_type_id = $template_parts[1];\n\t\t} else {\n\t\t\tcacti_log('ERROR: Unable to parse graph_template_id with value ' . get_nfilter_request_var($variable), false, 'WEBUI');\n\n\t\t\texit;\n\t\t}\n\t} else {\n\t\tget_filter_request_var($variable);\n\t}\n\n\treturn $output_type_id;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_graph_new') || isset_request_var('save_component_graph') || isset_request_var('save_component_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('local_graph_id');\n\t\tget_filter_request_var('host_id_prev');\n\t\tget_filter_request_var('graph_template_graph_id');\n\t\tget_filter_request_var('local_graph_template_graph_id');\n\t\t/* ==================================================== */\n\n\t\t/* handle special case of callback on host_id */\n\t\tif (!is_numeric(get_nfilter_request_var('host_id'))) {\n\t\t\tset_request_var('host_id', get_request_var('host_id_prev'));\n\t\t} else {\n\t\t\tget_filter_request_var('host_id');\n\t\t}\n\n\t\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\t\tparse_validate_graph_template_id('graph_template_id');\n\n\t\tif (isset_request_var('save_component_graph_new') && !isempty_request_var('graph_template_id')) {\n\t\t\t$snmp_query_array  = array();\n\t\t\t$suggested_values  = array();\n\t\t\t$graph_template_id = get_request_var('graph_template_id');\n\t\t\t$host_id           = get_request_var('host_id');\n\n\t\t\tif ($host_id > 0) {\n\t\t\t\tobject_cache_get_totals('device_state', $host_id);\n\t\t\t}\n\n\t\t\t$return_array = create_complete_graph_from_template($graph_template_id, $host_id, $snmp_query_array, $suggested_values);\n\n\t\t\tif ($return_array !== false) {\n\t\t\t\tdebug_log_insert('new_graphs', __esc('Created graph: %s', get_graph_title($return_array['local_graph_id'])));\n\n\t\t\t\t/* lastly push host-specific information to our data sources */\n\t\t\t\tif (cacti_sizeof($return_array['local_data_id'])) { # we expect at least one data source associated\n\t\t\t\t\tforeach ($return_array['local_data_id'] as $item) {\n\t\t\t\t\t\tpush_out_host($host_id, $item);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdebug_log_insert('new_graphs', __esc('ERROR: No Data Source associated. Check Template'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($host_id > 0) {\n\t\t\t\tobject_cache_get_totals('device_state', $host_id, true);\n\t\t\t\tobject_cache_update_totals('diff');\n\t\t\t}\n\n\t\t\tif (isset($return_array['local_graph_id'])) {\n\t\t\t\t$local_graph_id = $return_array['local_graph_id'];\n\t\t\t\theader('Location: graphs.php?action=graph_edit&id=' . $local_graph_id);\n\t\t\t} else {\n\t\t\t\theader('Location: graphs.php');\n\t\t\t}\n\n\t\t\texit;\n\t\t}\n\n\t\tif (isset_request_var('save_component_graph')) {\n\t\t\tif (get_filter_request_var('host_id') == '-1') {\n\t\t\t\tset_request_var('host_id', '0');\n\t\t\t}\n\n\t\t\tif (get_request_var('host_id') > 0) {\n\t\t\t\tobject_cache_get_totals('device_state', get_request_var('host_id'));\n\t\t\t}\n\n\t\t\t$save1['id']                   = get_nfilter_request_var('local_graph_id');\n\t\t\t$save1['host_id']              = get_request_var('host_id');\n\t\t\t$save1['graph_template_id']    = get_nfilter_request_var('graph_template_id');\n\n\t\t\t$save2['id']                            = get_nfilter_request_var('graph_template_graph_id');\n\t\t\t$save2['local_graph_template_graph_id'] = get_nfilter_request_var('local_graph_template_graph_id');\n\t\t\t$save2['graph_template_id']             = get_nfilter_request_var('graph_template_id');\n\t\t\t$save2['image_format_id']               = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t\t$save2['title']                         = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t\t\t$save2['height']                        = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', false, 3);\n\t\t\t$save2['width']                         = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', false, 3);\n\t\t\t$save2['upper_limit']                   = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('upper_limit')) === 0) ? true : false), 3);\n\t\t\t$save2['lower_limit']                   = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('lower_limit')) === 0) ? true : false), 3);\n\t\t\t$save2['vertical_label']                = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t\t$save2['slope_mode']                    = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t\t$save2['auto_scale']                    = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t\t$save2['auto_scale_opts']               = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t\t$save2['auto_scale_log']                = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t\t$save2['scale_log_units']               = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t\t$save2['auto_scale_rigid']              = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t\t$save2['auto_padding']                  = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t\t$save2['base_value']                    = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', false, 3);\n\t\t\t$save2['unit_value']                    = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t\t$save2['unit_exponent_value']           = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t\t$save2['alt_y_grid']                    = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t\t$save2['right_axis']                    = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+):-?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)$', true, 3);\n\t\t\t$save2['right_axis_label']              = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t\t$save2['right_axis_format']             = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t\t$save2['no_gridfit']                    = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t\t$save2['unit_length']                   = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t\t$save2['tab_width']                     = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t\t$save2['dynamic_labels']                = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t\t$save2['force_rules_legend']            = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t\t$save2['legend_position']               = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t\t$save2['legend_direction']              = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t\t$save2['right_axis_formatter']          = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t\t$save2['left_axis_format']              = form_input_validate((isset_request_var('left_axis_format') ? get_nfilter_request_var('left_axis_format') : ''), 'left_axis_format', '^[0-9]+$', true, 3);\n\t\t\t$save2['left_axis_formatter']           = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$local_graph_id = sql_save($save1, 'graph_local');\n\n\t\t\t\t/**\n\t\t\t\t * Save the last time a graph was created/updated\n\t\t\t\t * for Caching.\n\t\t\t\t */\n\t\t\t\tset_config_option('time_last_change_graph', time());\n\t\t\t}\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$save2['local_graph_id']  = $local_graph_id;\n\t\t\t\t$graph_templates_graph_id = sql_save($save2, 'graph_templates_graph');\n\n\t\t\t\tif ($graph_templates_graph_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\n\t\t\t\t/* update the title cache */\n\t\t\t\tupdate_graph_title_cache($local_graph_id);\n\n\t\t\t\t/* if the host id changes, then update the graph items association too */\n\t\t\t\tif (get_request_var('host_id') != get_request_var('host_id_prev')) {\n\t\t\t\t\tif (!api_graph_change_device($local_graph_id, get_request_var('host_id'))) {\n\t\t\t\t\t\traise_message(34);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$lg_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($local_graph_id)\n\t\t\t\t);\n\n\t\t\t\tif ($lg_template_id > 0) {\n\t\t\t\t\tchange_graph_template($local_graph_id, $gt_id_unparsed, true);\n\n\t\t\t\t\t$lg_dq_id = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\t\t\t\tFROM graph_local\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($local_graph_id)\n\t\t\t\t\t);\n\n\t\t\t\t\tif ($lg_dq_id > 0) {\n\t\t\t\t\t\tupdate_graph_data_query_cache($local_graph_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (get_request_var('host_id') > 0) {\n\t\t\t\tobject_cache_get_totals('device_state', get_request_var('host_id'), true);\n\t\t\t\tobject_cache_update_totals('diff');\n\t\t\t}\n\t\t}\n\n\t\tif (isset_request_var('save_component_input')) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('local_graph_id');\n\t\t\t/* ==================================================== */\n\n\t\t\t/* first; get the current graph template id */\n\t\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\t\tFROM graph_local\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('local_graph_id')));\n\n\t\t\t/* get all inputs that go along with this graph template, if templated */\n\t\t\tif ($graph_template_id > 0) {\n\t\t\t\t$input_list = db_fetch_assoc_prepared('SELECT id, column_name\n\t\t\t\t\tFROM graph_template_input\n\t\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\t\tarray($graph_template_id));\n\n\t\t\t\tif (cacti_sizeof($input_list)) {\n\t\t\t\t\tforeach ($input_list as $input) {\n\t\t\t\t\t\t/* we need to find out which graph items will be affected by saving this particular item */\n\t\t\t\t\t\t$item_list = db_fetch_assoc_prepared('SELECT gti.id\n\t\t\t\t\t\t\tFROM graph_template_input_defs AS gtid\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON gtid.graph_template_item_id=gti.local_graph_template_item_id\n\t\t\t\t\t\t\tWHERE gti.local_graph_id = ?\n\t\t\t\t\t\t\tAND gtid.graph_template_input_id = ?',\n\t\t\t\t\t\t\tarray(get_nfilter_request_var('local_graph_id'), $input['id']));\n\n\t\t\t\t\t\t/* loop through each item affected and update column data */\n\t\t\t\t\t\tif (cacti_sizeof($item_list)) {\n\t\t\t\t\t\t\tforeach ($item_list as $item) {\n\t\t\t\t\t\t\t\t/* if we are changing templates, the POST vars we are searching for here will not exist.\n\t\t\t\t\t\t\t\t this is because the db and form are out of sync here, but it is ok to just skip over saving\n\t\t\t\t\t\t\t\t the inputs in this case. */\n\t\t\t\t\t\t\t\tif (isset_request_var($input['column_name'] . '_' . $input['id'])) {\n\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\t\t\t\tSET ' . $input['column_name'] . ' = ?\n\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\tarray(get_nfilter_request_var($input['column_name'] . '_' . $input['id']), $item['id']));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_item')) {\n\t\tglobal $graph_item_types;\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('sequence');\n\t\tget_filter_request_var('graph_type_id');\n\t\tget_filter_request_var('local_graph_id');\n\t\tget_filter_request_var('graph_template_item_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\tget_filter_request_var('local_graph_template_item_id');\n\t\t/* ==================================================== */\n\n\t\t$items[0] = array();\n\n\t\tif ($graph_item_types[get_nfilter_request_var('graph_type_id')] == 'LEGEND') {\n\t\t\t/* this can be a major time saver when creating lots of graphs with the typical\n\t\t\tGPRINT LAST/AVERAGE/MAX legends */\n\t\t\t$items = array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '4',\n\t\t\t\t\t'text_format'               => 'Cur:',\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '1',\n\t\t\t\t\t'text_format'               => 'Avg:',\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '3',\n\t\t\t\t\t'text_format'               => 'Max:',\n\t\t\t\t\t'hard_return'               => 'on'\n\t\t\t\t)\n\t\t\t);\n\t\t} elseif ($graph_item_types[get_nfilter_request_var('graph_type_id')] == 'LEGEND_CAMM') {\n\t\t\t/* this can be a major time saver when creating lots of graphs with the typical\n\t\t\t\tGPRINT LAST/AVERAGE/MAX legends */\n\t\t\t$items = array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '4',\n\t\t\t\t\t'text_format'               => __('Cur:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '1',\n\t\t\t\t\t'text_format'               => __('Avg:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '2',\n\t\t\t\t\t'text_format'               => __('Min:'),\n\t\t\t\t\t'hard_return'               => ''\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'color_id'                  => '0',\n\t\t\t\t\t'graph_type_id'             => '9',\n\t\t\t\t\t'consolidation_function_id' => '3',\n\t\t\t\t\t'text_format'               => __('Max:'),\n\t\t\t\t\t'hard_return'               => 'on'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$sequence = get_nfilter_request_var('sequence');\n\n\t\tif (empty($sequence) || !is_numeric($sequence)) {\n\t\t\t$sequence = 1;\n\t\t}\n\n\t\tforeach ($items as $item) {\n\t\t\t/* generate a new sequence if needed */\n\t\t\tif (empty($sequence)) {\n\t\t\t\t$sequence = get_sequence($sequence, 'sequence', 'graph_templates_item', 'local_graph_id=' . get_nfilter_request_var('local_graph_id'));\n\t\t\t}\n\n\t\t\t$save['id']                           = get_nfilter_request_var('graph_template_item_id');\n\t\t\t$save['graph_template_id']            = get_nfilter_request_var('graph_template_id');\n\t\t\t$save['local_graph_template_item_id'] = get_nfilter_request_var('local_graph_template_item_id');\n\t\t\t$save['local_graph_id']               = get_nfilter_request_var('local_graph_id');\n\t\t\t$save['task_item_id']                 = form_input_validate(get_nfilter_request_var('task_item_id'), 'task_item_id', '^[0-9]+$', true, 3);\n\t\t\t$save['color_id']                     = form_input_validate((isset($item['color_id']) ? $item['color_id'] : get_nfilter_request_var('color_id')), 'color_id', '^[0-9]+$', true, 3);\n\t\t\t$save['color2_id']                    = form_input_validate((isset($item['color2_id']) ? $item['color2_id'] : get_nfilter_request_var('color2_id')), 'color2_id', '^[0-9]+$', true, 3);\n\n\t\t\t/* if alpha is disabled, use invisible_alpha instead */\n\t\t\tif (!isset_request_var('alpha')) {\n\t\t\t\tset_request_var('alpha', get_nfilter_request_var('invisible_alpha'));\n\t\t\t}\n\n\t\t\tif (!isset_request_var('alpha2')) {\n\t\t\t\tset_request_var('alpha2', get_nfilter_request_var('invisible_alpha'));\n\t\t\t}\n\n\t\t\t$save['alpha']          = form_input_validate((isset($item['alpha']) ? $item['alpha'] : get_nfilter_request_var('alpha')), 'alpha', '', true, 3);\n\t\t\t$save['alpha2']         = form_input_validate((isset($item['alpha2']) ? $item['alpha2'] : get_nfilter_request_var('alpha2')), 'alpha2', '', true, 3);\n\t\t\t$save['gradheight']     = form_input_validate((isset($item['gradheight']) ? $item['gradheight'] : get_nfilter_request_var('gradheight')), 'gradheight', '', true, 3);\n\n\t\t\t$save['graph_type_id']  = form_input_validate((isset($item['graph_type_id']) ? $item['graph_type_id'] : get_nfilter_request_var('graph_type_id')), 'graph_type_id', '^[0-9]+$', true, 3);\n\n\t\t\tif (isset_request_var('line_width') || isset($item['line_width'])) {\n\t\t\t\t$save['line_width'] = form_input_validate((isset($item['line_width']) ? $item['line_width'] : get_nfilter_request_var('line_width')), 'line_width', '(^[0-9]+[\\.,0-9]+$|^[0-9]+$)', true, 3);\n\t\t\t} else { # make sure to transfer old LINEx style into line_width on save\n\t\t\t\tswitch ($save['graph_type_id']) {\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE1:\n\t\t\t\t\t\t$save['line_width'] = 1;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE2:\n\t\t\t\t\t\t$save['line_width'] = 2;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GRAPH_ITEM_TYPE_LINE3:\n\t\t\t\t\t\t$save['line_width'] = 3;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$save['line_width'] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$save['dashes']                    = form_input_validate((isset_request_var('dashes') ? get_nfilter_request_var('dashes') : ''), 'dashes', '', true, 3);\n\t\t\t$save['dash_offset']               = form_input_validate((isset_request_var('dash_offset') ? get_nfilter_request_var('dash_offset') : ''), 'dash_offset', '^[0-9]+$', true, 3);\n\t\t\t$save['cdef_id']                   = form_input_validate(get_nfilter_request_var('cdef_id'), 'cdef_id', '^[0-9]+$', true, 3);\n\t\t\t$save['vdef_id']                   = form_input_validate(get_nfilter_request_var('vdef_id'), 'vdef_id', '^[0-9]+$', true, 3);\n\t\t\t$save['shift']                     = form_input_validate((isset_request_var('shift') ? get_nfilter_request_var('shift') : ''), 'shift', '^((on)|)$', true, 3);\n\t\t\t$save['consolidation_function_id'] = form_input_validate((isset($item['consolidation_function_id']) ? $item['consolidation_function_id'] : get_nfilter_request_var('consolidation_function_id')), 'consolidation_function_id', '^[0-9]+$', true, 3);\n\t\t\t$save['textalign']                 = form_input_validate((isset_request_var('textalign') ? get_nfilter_request_var('textalign') : ''), 'textalign', '^[a-z]+$', true, 3);\n\t\t\t$save['text_format']               = form_input_validate((isset($item['text_format']) ? $item['text_format'] : get_nfilter_request_var('text_format')), 'text_format', '', true, 3);\n\t\t\t$save['legend']                    = form_input_validate((isset($item['legend']) ? $item['legend'] : get_nfilter_request_var('legend')), 'legend', '', true, 3);\n\n\t\t\t$save['value']                     = form_input_validate(get_nfilter_request_var('value'), 'value', '', true, 3);\n\t\t\t$save['hard_return']               = form_input_validate(((isset($item['hard_return']) ? $item['hard_return'] : (isset_request_var('hard_return') ? get_nfilter_request_var('hard_return') : ''))), 'hard_return', '', true, 3);\n\t\t\t$save['gprint_id']                 = form_input_validate(get_nfilter_request_var('gprint_id'), 'gprint_id', '^[0-9]+$', true, 3);\n\t\t\t$save['sequence']                  = $sequence;\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$graph_template_item_id = sql_save($save, 'graph_templates_item');\n\n\t\t\t\tif ($graph_template_item_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sequence = 0;\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: graphs.php?action=item_edit&graph_template_item_id=' . (empty($graph_template_item_id) ? get_nfilter_request_var('graph_template_item_id') : $graph_template_item_id) . '&id=' . get_nfilter_request_var('local_graph_id'));\n\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: graphs.php?action=graph_edit&id=' . get_nfilter_request_var('local_graph_id'));\n\n\t\t\texit;\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_graph_new')) && (isempty_request_var('graph_template_id'))) {\n\t\theader('Location: graphs.php?action=graph_edit&host_id=' . get_nfilter_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (isempty_request_var('local_graph_id')) || (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) || (get_nfilter_request_var('host_id') != get_nfilter_request_var('host_id_prev'))) {\n\t\theader('Location: graphs.php?action=graph_edit&id=' . (empty($local_graph_id) ? get_nfilter_request_var('local_graph_id') : $local_graph_id) . (isset_request_var('host_id') ? '&host_id=' . get_nfilter_request_var('host_id') : ''));\n\t} elseif (!empty($local_graph_id)) {\n\t\theader('Location: graphs.php?action=graph_edit&id=' . $local_graph_id);\n\t} else {\n\t\theader('Location: graphs.php');\n\t}\n\n\texit;\n}\n\nfunction item_movedown() {\n\tglobal $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_graph_id');\n\t/* ==================================================== */\n\n\t$arr     = get_graph_group(get_request_var('id'));\n\t$next_id = get_graph_parent(get_request_var('id'), 'next');\n\n\tif ((!empty($next_id)) && (isset($arr[get_request_var('id')]))) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $next_id, 'next');\n\t} elseif (preg_match('/(GPRINT|VRULE|HRULE|COMMENT)/', $graph_item_types[db_fetch_cell_prepared('SELECT graph_type_id FROM graph_templates_item WHERE id = ?', array(get_request_var('id')))])) {\n\t\tmove_item_down('graph_templates_item', get_request_var('id'), 'local_graph_id=' . get_request_var('local_graph_id'));\n\t}\n}\n\nfunction item_moveup() {\n\tglobal $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_graph_id');\n\t/* ==================================================== */\n\n\t$arr         = get_graph_group(get_request_var('id'));\n\t$previous_id = get_graph_parent(get_request_var('id'), 'previous');\n\n\tif ((!empty($previous_id)) && (isset($arr[get_request_var('id')]))) {\n\t\tmove_graph_group(get_request_var('id'), $arr, $previous_id, 'previous');\n\t} elseif (preg_match('/(GPRINT|VRULE|HRULE|COMMENT)/', $graph_item_types[db_fetch_cell_prepared('SELECT graph_type_id FROM graph_templates_item WHERE id = ?', array(get_request_var('id')))])) {\n\t\tmove_item_up('graph_templates_item', get_request_var('id'), 'local_graph_id=' . get_request_var('local_graph_id'));\n\t}\n}\n\nfunction item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM graph_templates_item WHERE id = ?', array(get_request_var('id')));\n}\n\nfunction validate_item_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'host_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '0'\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '0'\n\t\t),\n\t\t'data_template_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '0'\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gitems');\n\t/* ================= input validation ================= */\n}\n\nfunction create_item_filter() {\n\tglobal $item_rows;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\t$host_id = get_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where    = 'AND h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == 0) {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t} else {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t}\n\n\tif (get_request_var('host_id') <= 0) {\n\t\t$data_templates = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT id, name\n\t\t\t\tFROM data_template\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\t} else {\n\t\t$data_templates = array_rekey(\n\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dt.id, dt.name\n\t\t\t\tFROM data_template AS dt\n\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\tON dl.data_template_id=dt.id\n\t\t\t\tWHERE dl.host_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray(get_request_var('host_id'))),\n\t\t\t'id', 'name'\n\t\t);\n\t}\n\n\t$data_templates = $any + $none + $data_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'         => 'drop_callback',\n\t\t\t\t\t'friendly_name'  => __('Device'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'sql'            => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'         => 'ajax_hosts',\n\t\t\t\t\t'id'             => $host_id,\n\t\t\t\t\t'value'          => $hostname,\n\t\t\t\t\t'on_change'      => 'applyFilter()'\n\t\t\t\t),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'data_template_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'array'          => $data_templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'id' => array(\n\t\t\t\t\t'method'         => 'validate',\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'value'          => get_filter_request_var('id')\n\t\t\t\t),\n\t\t\t\t'local_graph_id' => array(\n\t\t\t\t\t'method'         => 'validate',\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'value'          => get_filter_request_var('host_id')\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_item_filter($render = false, $host) {\n\t$filters = create_item_filter();\n\n\tif (empty($host['hostname'])) {\n\t\t$header = __('Data Sources [No Device]');\n\t} else {\n\t\t$header = __esc('Data Sources [%s]', $host['hostname']);\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'graphs.php?action=item_edit&local_graph_id=' . get_request_var('local_graph_id'), 'form_graphs', 'sess_graphs', '', '', false);\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction item_edit() {\n\tglobal $struct_graph_item, $graph_item_types, $consolidation_functions;\n\n\t$id = (!isempty_request_var('id') ? '&id=' . get_request_var('id') : '');\n\n\t$host = db_fetch_row_prepared('SELECT hostname\n\t\tFROM host\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('host_id'))\n\t);\n\n\tprocess_sanitize_draw_item_filter(true, $host);\n\n\t// This column is for Graph Templates\n\tunset($struct_graph_item['data_template_id']);\n\n\tvalidate_item_vars();\n\n\tif (empty($host['hostname'])) {\n\t\t$header = __('Data Sources [No Device]');\n\t} else {\n\t\t$header = __esc('Data Sources [%s]', $host['hostname']);\n\t}\n\n\tload_current_session_value('host_id', 'sess_graph_items_hi', '-1');\n\tload_current_session_value('data_template_id', 'sess_graph_items_dti', '-1');\n\n\t$sql_where = '';\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$sql_where = 'h.id = ' . get_request_var('host_id');\n\t} elseif (get_request_var('host_id') == 0) {\n\t\t$sql_where = 'h.id IS NULL';\n\t}\n\n\tif (get_request_var('data_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'dl.data_template_id=0';\n\t} elseif (get_request_var('data_template_id') > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : '') . 'dl.data_template_id = ' . get_request_var('data_template_id');\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\t} else {\n\t\t$template_item = array();\n\n\t\tkill_session_var('sess_graph_items_dti');\n\t}\n\n\t$title = db_fetch_cell_prepared(\n\t\t'SELECT title_cache\n\t\tFROM graph_templates_graph\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('local_graph_id'))\n\t);\n\n\t$header_label = __esc('Graph Items [graph: %s]', $title);\n\n\tform_start('graphs.php', 'graph_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t/* by default, select the LAST DS chosen to make everyone's lives easier */\n\tif (!isempty_request_var('local_graph_id')) {\n\t\t$struct_graph_item['task_item_id']['default'] = 0;\n\n\t\tif (isset($template_item['task_item_id'])) {\n\t\t\t$task_item_id = $template_item['task_item_id'];\n\n\t\t\t$value = db_fetch_cell_prepared(\"SELECT CONCAT_WS('', dtd.name_cache,' (', dtr.data_source_name, ')') as name\n\t\t\t\tFROM data_local AS dl\n\t\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\t\tON dtd.local_data_id=dl.id\n\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\tON dtr.local_data_id=dl.id\n\t\t\t\tLEFT JOIN host AS h\n\t\t\t\tON dl.host_id=h.id\n\t\t\t\tWHERE dtr.id = ?\",\n\t\t\t\tarray($task_item_id)\n\t\t\t);\n\t\t} else {\n\t\t\t$task_item_id = 0;\n\n\t\t\t$value = '';\n\t\t}\n\n\t\tif (read_config_option('autocomplete_enabled') > 0) {\n\t\t\t$action = 'ajax_graph_items';\n\n\t\t\tif (get_request_var('host_id') > 0) {\n\t\t\t\t$action .= '&host_id=' . get_filter_request_var('host_id');\n\t\t\t}\n\n\t\t\tif (get_request_var('data_template_id') > 0) {\n\t\t\t\t$action .= '&data_template_id=' . get_filter_request_var('data_template_id');\n\t\t\t}\n\n\t\t\t$struct_graph_item['task_item_id'] = array(\n\t\t\t\t'method'        => 'drop_callback',\n\t\t\t\t'friendly_name' => __('Data Source'),\n\t\t\t\t'description'   => __('Choose the Data Source to associate with this Graph Item.'),\n\t\t\t\t'sql'           => '',\n\t\t\t\t'action'        => $action,\n\t\t\t\t'none_value'    => __('None'),\n\t\t\t\t'id'            => $task_item_id,\n\t\t\t\t'value'         => $value\n\t\t\t);\n\t\t}\n\n\t\t/* modifications to the default graph items array */\n\t\t$struct_graph_item['task_item_id']['sql'] = \"SELECT\n\t\t\tCONCAT_WS('', dtd.name_cache,' (', dtr.data_source_name, ')') as name, dtr.id\n\t\t\tFROM data_local AS dl\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dtd.local_data_id=dl.id\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON dtr.local_data_id=dl.id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON dl.host_id=h.id\";\n\n\t\t/* Make sure we don't limit the list so that the selected DS isn't in the list in edit mode */\n\t\tif ($sql_where != '') {\n\t\t\tif (!isempty_request_var('id')) {\n\t\t\t\t$struct_graph_item['task_item_id']['sql'] .= \" WHERE ($sql_where) OR (dtr.id=\" . $template_item['task_item_id'] . ')';\n\t\t\t} else {\n\t\t\t\t$struct_graph_item['task_item_id']['sql'] .= \" WHERE $sql_where\";\n\t\t\t}\n\t\t}\n\n\t\t$struct_graph_item['task_item_id']['sql'] .= ' ORDER BY name';\n\t}\n\n\t$form_array = array();\n\n\tforeach ($struct_graph_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_graph_item[$field_name]);\n\n\t\tif (read_config_option('autocomplete_enabled')) {\n\t\t\tif ($field_name != 'task_item_id') {\n\t\t\t\t$form_array[$field_name]['value'] = (isset($template_item[$field_name]) ? $template_item[$field_name] : '');\n\t\t\t}\n\t\t} else {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_item[$field_name]) ? $template_item[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_item['id']) ? $template_item['id'] : '0');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\tform_hidden_box('local_graph_id', get_request_var('local_graph_id'), '0');\n\tform_hidden_box('graph_template_item_id', (!empty($template_item) ? $template_item['id'] : '0'), '');\n\tform_hidden_box('local_graph_template_item_id', (!empty($template_item) ? $template_item['local_graph_template_item_id'] : '0'), '');\n\tform_hidden_box('graph_template_id', (!empty($template_item) ? $template_item['graph_template_id'] : '0'), '');\n\tform_hidden_box('_graph_type_id', (!empty($template_item) ? $template_item['graph_type_id'] : '0'), '');\n\tform_hidden_box('save_component_item', '1', '');\n\tform_hidden_box('invisible_alpha', $form_array['alpha']['value'], 'FF');\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\thtml_end_box(true, true);\n\n\tform_save_button('graphs.php?action=graph_edit&id=' . get_request_var('local_graph_id'));\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t$('#shift').click(function(data) {\n\t\t\t\ttoggleFields({\n\t\t\t\t\tvalue: $('#shift').is(':checked'),\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsetRowVisibility();\n\t\t\tcdefAlignment();\n\n\t\t\tif ($('#cdef_id').selectmenu('instance') !== undefined) {\n\t\t\t\t$('#cdef_id').selectmenu('destroy');\n\t\t\t\t$('#cdef_id').selectmenu({\n\t\t\t\t\topen: function() {\n\t\t\t\t\t\tcdefAlignment();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#cdef_id').click(function() {\n\t\t\t\t\tcdefAlignment();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#graph_type_id').change(function(data) {\n\t\t\t\tsetRowVisibility();\n\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * columns - task_item_id color_id alpha graph_type_id consolidation_function_id cdef_id value gprint_id text_format hard_return\n\t\t *\n\t\t * graph_type_ids\n\t\t *   1  - Comment\n\t\t *   2  - HRule\n\t\t *   3  - Vrule\n\t\t *   4  - Line1\n\t\t *   5  - Line2\n\t\t *   6  - Line3\n\t\t *   7  - Area\n\t\t *   8  - Stack\n\t\t *   9  - Gprint\n\t\t *   10 - Legend\n\t\t *\n\t\t */\n\n\t\tfunction changeColorId() {\n\t\t\t$('#alpha').prop('disabled', true);\n\n\t\t\tif ($('#color_id').val() != 0) {\n\t\t\t\t$('#alpha').prop('disabled', false);\n\t\t\t}\n\n\t\t\tswitch ($('#graph_type_id').val()) {\n\t\t\t\tcase '4':\n\t\t\t\tcase '5':\n\t\t\t\tcase '6':\n\t\t\t\tcase '7':\n\t\t\t\tcase '8':\n\t\t\t\t\t$('#alpha').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction changeColor2Id() {\n\t\t\t$('#alpha2').prop('disabled', true);\n\n\t\t\tif ($('#color2_id').val() != 0) {\n\t\t\t\t$('#alpha2').prop('disabled', false);\n\t\t\t}\n\n\t\t\tswitch ($('#graph_type_id').val()) {\n\t\t\t\tcase '7':\n\t\t\t\tcase '8':\n\t\t\t\t\t$('#alpha2').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction cdefAlignment() {\n\t\t\tif ($('#task_item_id').val() == '0') {\n\t\t\t\t$('#cdef_id option').each(function() {\n\t\t\t\t\tif ($(this).text().indexOf('_AGGREGATE') >= 0) {\n\t\t\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#cdef_id option').each(function() {\n\t\t\t\t\tif ($(this).text().indexOf('_AGGREGATE') >= 0) {\n\t\t\t\t\t\t$(this).prop('disabled', false);\n\t\t\t\t\t\t$(this).removeAttr('disabled');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ($('#cdef_id').selectmenu('instance') !== undefined) {\n\t\t\t\t$('#cdef_id').selectmenu('refresh');\n\t\t\t}\n\t\t}\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL = 'graphs.php?action=item_edit<?php print $id; ?>' +\n\t\t\t\t'&local_graph_id=<?php print get_request_var('local_graph_id'); ?>' +\n\t\t\t\t'&data_template_id=' + $('#data_template_id').val() +\n\t\t\t\t'&host_id=' + $('#host_id').val();\n\n\t\t\tloadUrl({\n\t\t\t\turl: strURL\n\t\t\t})\n\t\t}\n\n\t\tvar graphType = $('#graph_type_id').val();\n\t\tfunction setRowVisibility() {\n\t\t\ttoggleFields({\n\t\t\t\tdata_template_id: graphType != 3 && graphType != 40,\n\t\t\t\ttask_item_id: graphType != 3 && graphType != 40,\n\t\t\t\tcolor_id: (graphType > 1 && graphType < 9) || graphType == 20 || graphType == 30,\n\t\t\t\tcolor2_id: graphType == 7 || graphType == 8,\n\t\t\t\tline_width: (graphType > 3 && graphType < 7) || graphType == 20,\n\t\t\t\tdashes: (graphType > 1 && graphType < 7) || graphType == 20,\n\t\t\t\tdash_offset: (graphType > 1 && graphType < 7) || graphType == 20,\n\t\t\t\ttextalign: graphType == 40,\n\t\t\t\tshift: (graphType > 3 && graphType < 9) || graphType == 20,\n\t\t\t\talpha: (graphType > 3 && graphType < 9) || graphType == 20 || graphType == 40,\n\t\t\t\talpha2: graphType == 7 || graphType == 8,\n\t\t\t\tgradheight: graphType == 7 || graphType == 8,\n\t\t\t\tconsolidation_function_id: graphType == 1 || (graphType > 3 && graphType != 10 && graphType != 15 && graphType != 30 && graphType != 40),\n\t\t\t\tcdef_id: graphType > 3 && graphType != 40,\n\t\t\t\tvdef_id: graphType > 3 && graphType != 40,\n\t\t\t\tvalue: graphType == 2 || graphType == 3 || graphType == 30,\n\t\t\t\tgprint_id: graphType > 8 && graphType < 16,\n\t\t\t\ttext_format: graphType >= 1 && graphType != 10 && graphType != 15 && graphType != 40,\n\t\t\t\tlegend: (graphType > 1 && graphType < 9) || graphType == 20 || graphType == 30,\n\t\t\t\thard_return: graphType >= 1 && graphType != 10 && graphType != 15 && graphType != 40,\n\t\t\t});\n\n\t\t\tchangeColorId();\n\t\t\tchangeColor2Id();\n\t\t\tcdefAlignment();\n\t\t}\n\t</script>\n<?php\n}\n\nfunction get_current_graph_template($local_graph_id) {\n\t$graph_local = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_local\n\t\tWHERE id = ?',\n\t\tarray($local_graph_id));\n\n\t$task_items = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT task_item_id) AS items\n\t\tFROM graph_templates_item\n\t\tWHERE local_graph_id = ?',\n\t\tarray($local_graph_id));\n\n\tif ($task_items != '') {\n\t\t$local_data_id = db_fetch_cell(\"SELECT DISTINCT local_data_id\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id IN($task_items)\");\n\t} else {\n\t\t$local_data_id = 0;\n\t}\n\n\tif ($local_data_id > 0) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray($local_data_id));\n\n\t\t/* get each INPUT field for this data input source */\n\t\t$output_type_field_id = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\"\n\t\t\tAND type_code=\"output_type\"\n\t\t\tORDER BY sequence',\n\t\t\tarray($data['data_input_id']));\n\n\t\t$snmp_query_graph_id = db_fetch_cell_prepared('SELECT value\n\t\t\tFROM data_input_data\n\t\t\tWHERE data_template_data_id = ?\n\t\t\tAND data_input_field_id = ?',\n\t\t\tarray($data['id'], $output_type_field_id));\n\n\t\tif (!empty($snmp_query_graph_id)) {\n\t\t\treturn $graph_local['graph_template_id'] . '_' . $snmp_query_graph_id;\n\t\t} else {\n\t\t\treturn $graph_local['graph_template_id'];\n\t\t}\n\t} else {\n\t\treturn $graph_local['graph_template_id'];\n\t}\n}\n\nfunction get_common_graph_templates(&$graph) {\n\t$dqid = 0;\n\n\tif (cacti_sizeof($graph)) {\n\t\t$dqid = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray($graph['local_graph_id']));\n\t}\n\n\t// Default in worst case\n\t$gtsql = 'SELECT gt.id, gt.name FROM graph_templates AS gt ORDER BY name';\n\n\tif ($dqid > 0) {\n\t\t$sqgi = db_fetch_cell_prepared('SELECT GROUP_CONCAT(id) AS id\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE snmp_query_id = ?\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($dqid, $graph['graph_template_id']));\n\n\t\tif ($sqgi != '') {\n\t\t\t$query_fields = array_rekey(db_fetch_assoc_prepared('SELECT snmp_query_graph_id,\n\t\t\t\tGROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id IN (' . $sqgi . ')\n\t\t\t\tGROUP BY snmp_query_graph_id'), 'snmp_query_graph_id', 'columns');\n\n\t\t\tif (cacti_sizeof($query_fields)) {\n\t\t\t\t$ids = array_to_sql_or(array_values($query_fields), 'columns');\n\n\t\t\t\t$common_graph_ids = array_rekey(db_fetch_assoc_prepared('SELECT\n\t\t\t\t\tsnmp_query_graph_id, GROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\t\tGROUP BY snmp_query_graph_id\n\t\t\t\t\tHAVING ' . $ids), 'snmp_query_graph_id', 'columns');\n\n\t\t\t\tif (cacti_sizeof($common_graph_ids)) {\n\t\t\t\t\t$ids = implode(',', array_keys($common_graph_ids));\n\n\t\t\t\t\t$gtids = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT graph_template_id) AS gtids\n\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\tWHERE snmp_query_id = ?\n\t\t\t\t\t\tAND id IN (' . $ids . ')',\n\t\t\t\t\t\tarray($dqid));\n\n\t\t\t\t\tif ($gtids != '') {\n\t\t\t\t\t\t$gtsql = \"SELECT CONCAT_WS('', graph_template_id, '_', id, '') AS id, name\n\t\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\t\tWHERE (snmp_query_id = $dqid AND id IN ($ids))\n\t\t\t\t\t\t\tOR graph_template_id IN ($gtids) ORDER BY name\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$gtsql = \"SELECT CONCAT_WS('', graph_template_id, '_', id, '') AS id, name\n\t\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\t\tWHERE (snmp_query_id = $dqid AND id IN ($ids))\n\t\t\t\t\t\t\tORDER BY name\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $gtsql;\n}\n\nfunction form_actions() {\n\tglobal $actions, $struct_aggregate;\n\tglobal $alignment, $graph_timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t}\n\n\t\t\t\tapi_delete_graphs($selected_items, get_filter_request_var('delete_type'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\t\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t\t\t\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\t\t\t\tparse_validate_graph_template_id('graph_template_id');\n\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tchange_graph_template($selected_items[$i], $gt_id_unparsed, true);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // duplicate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph($selected_items[$i], 0, get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // graph -> graph template\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tgraph_to_graph_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\t\t\t\t$failures = false;\n\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!api_graph_change_device($selected_items[$i], get_request_var('host_id'))) {\n\t\t\t\t\t\t$failures = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($failures) {\n\t\t\t\t\t\traise_message(33);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '6') { // reapply suggested naming\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_graph_title($selected_items[$i]);\n\t\t\t\t\tupdate_graph_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '9' || get_request_var('drp_action') == '10') {\n\t\t\t\t/* get common info - not dependant on template/no template*/\n\t\t\t\t$local_graph_id = 0; // this will be a new graph\n\t\t\t\t$member_graphs  = $selected_items;\n\t\t\t\t$graph_title    = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', true, 3);\n\n\t\t\t\t/* future aggregate_graphs entry */\n\t\t\t\t$ag_data                 = array();\n\t\t\t\t$ag_data['id']           = 0;\n\t\t\t\t$ag_data['title_format'] = $graph_title;\n\t\t\t\t$ag_data['user_id']      = $_SESSION[SESS_USER_ID];\n\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\tif (!isset_request_var('aggregate_total_type')) {\n\t\t\t\t\t\tset_request_var('aggregate_total_type', 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isset_request_var('aggregate_total')) {\n\t\t\t\t\t\tset_request_var('aggregate_total', 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isset_request_var('aggregate_total_prefix')) {\n\t\t\t\t\t\tset_request_var('aggregate_total_prefix', '');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isset_request_var('aggregate_order_type')) {\n\t\t\t\t\t\tset_request_var('aggregate_order_type', 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t$item_no = form_input_validate(get_nfilter_request_var('item_no'), 'item_no', '^[0-9]+$', true, 3);\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = 0;\n\t\t\t\t\t$ag_data['template_propogation']  = '';\n\t\t\t\t\t$ag_data['graph_template_id']     = form_input_validate(get_nfilter_request_var('graph_template_id'), 'graph_template_id', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['gprint_prefix']         = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['graph_type']            = form_input_validate(get_nfilter_request_var('aggregate_graph_type'), 'aggregate_graph_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total']                 = form_input_validate(get_nfilter_request_var('aggregate_total'), 'aggregate_total', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_type']            = form_input_validate(get_nfilter_request_var('aggregate_total_type'), 'aggregate_total_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_prefix']          = form_input_validate(get_nfilter_request_var('aggregate_total_prefix'), 'aggregate_total_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['order_type']            = form_input_validate(get_nfilter_request_var('aggregate_order_type'), 'aggregate_order_type', '^[0-9]+$', true, 3);\n\t\t\t\t} else {\n\t\t\t\t\t$template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$item_no = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = get_nfilter_request_var('aggregate_template_id');\n\t\t\t\t\t$ag_data['template_propogation']  = 'on';\n\t\t\t\t\t$ag_data['graph_template_id']     = $template_data['graph_template_id'];\n\t\t\t\t\t$ag_data['gprint_prefix']         = $template_data['gprint_prefix'];\n\t\t\t\t\t$ag_data['graph_type']            = $template_data['graph_type'];\n\t\t\t\t\t$ag_data['total']                 = $template_data['total'];\n\t\t\t\t\t$ag_data['total_type']            = $template_data['total_type'];\n\t\t\t\t\t$ag_data['total_prefix']          = $template_data['total_prefix'];\n\t\t\t\t\t$ag_data['order_type']            = $template_data['order_type'];\n\t\t\t\t}\n\n\t\t\t\t/* create graph in cacti tables */\n\t\t\t\t$local_graph_id = aggregate_graph_save(\n\t\t\t\t\t$local_graph_id,\n\t\t\t\t\t$ag_data['graph_template_id'],\n\t\t\t\t\t$graph_title,\n\t\t\t\t\t$ag_data['aggregate_template_id']\n\t\t\t\t);\n\n\t\t\t\t$ag_data['local_graph_id']     = $local_graph_id;\n\t\t\t\t$aggregate_graph_id            = sql_save($ag_data, 'aggregate_graphs');\n\t\t\t\t$ag_data['aggregate_graph_id'] = $aggregate_graph_id;\n\n\t\t\t\t// \t/* save member graph info */\n\t\t\t\t// \t$i = 1;\n\t\t\t\t// \tforeach($member_graphs as $graph_id) {\n\t\t\t\t// \t\tdb_execute(\"INSERT INTO aggregate_graphs_items\n\t\t\t\t// \t\t\t(aggregate_graph_id, local_graph_id, sequence)\n\t\t\t\t// \t\t\tVALUES\n\t\t\t\t// \t\t\t($aggregate_graph_id, $graph_id, $i)\"\n\t\t\t\t// \t\t);\n\t\t\t\t// \t\t$i++;\n\t\t\t\t// \t}\n\n\t\t\t\t/* save aggregate graph - graph items */\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\t\tWHERE local_graph_id=0\n\t\t\t\t\t\t\tAND graph_template_id = ?',\n\t\t\t\t\t\t\tarray($ag_data['graph_template_id'])),\n\t\t\t\t\t\t'id', array('sequence')\n\t\t\t\t\t);\n\n\t\t\t\t\t/* update graph template item values with posted values */\n\t\t\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t\t\t$aggregate_graph_items = array();\n\n\t\t\t\t\tforeach ($graph_templates_items as $item_id => $data) {\n\t\t\t\t\t\t$item_new                            = array();\n\t\t\t\t\t\t$item_new['aggregate_graph_id']      = $aggregate_graph_id;\n\t\t\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t\t\t$item_new['color_template']          = isset($data['color_template']) ? $data['color_template'] : 0;\n\t\t\t\t\t\t$item_new['item_skip']               = isset($data['item_skip']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['item_total']              = isset($data['item_total']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['sequence']                = isset($data['sequence']) ? $data['sequence'] : 0;\n\n\t\t\t\t\t\t$aggregate_graph_items[]             = $item_new;\n\t\t\t\t\t}\n\n\t\t\t\t\taggregate_graph_items_save($aggregate_graph_items, 'aggregate_graphs_graph_item');\n\t\t\t\t} else {\n\t\t\t\t\t$aggregate_graph_items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray($ag_data['aggregate_template_id']));\n\t\t\t\t}\n\n\t\t\t\t$attribs                    = $ag_data;\n\t\t\t\t$attribs['graph_title']     = $ag_data['title_format'];\n\t\t\t\t$attribs['reorder']         = $ag_data['order_type'];\n\t\t\t\t$attribs['item_no']         = $item_no;\n\t\t\t\t$attribs['color_templates'] = array();\n\t\t\t\t$attribs['skipped_items']   = array();\n\t\t\t\t$attribs['total_items']     = array();\n\t\t\t\t$attribs['graph_item_types']= array();\n\t\t\t\t$attribs['cdefs']           = array();\n\n\t\t\t\tforeach ($aggregate_graph_items as $item) {\n\t\t\t\t\tif (isset($item['color_template']) && $item['color_template'] > 0) {\n\t\t\t\t\t\t$attribs['color_templates'][$item['sequence']] = $item['color_template'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($item['item_skip']) && $item['item_skip'] == 'on') {\n\t\t\t\t\t\t$attribs['skipped_items'][$item['sequence']] = $item['sequence'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($item['item_total']) && $item['item_total'] == 'on') {\n\t\t\t\t\t\t$attribs['total_items'][$item['sequence']] = $item['sequence'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($item['cdef_id']) && isset($item['t_cdef_id']) && $item['t_cdef_id'] == 'on') {\n\t\t\t\t\t\t$attribs['cdefs'][$item['sequence']] = $item['cdef_id'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($item['graph_type_id']) && isset($item['t_graph_type_id']) && $item['t_graph_type_id'] == 'on') {\n\t\t\t\t\t\t$attribs['graph_item_types'][$item['sequence']] = $item['graph_type_id'];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* create actual graph items */\n\t\t\t\taggregate_create_update($local_graph_id, $member_graphs, $attribs);\n\n\t\t\t\theader(\"Location: aggregate_graphs.php?action=edit&tab=details&id=$local_graph_id\");\n\n\t\t\t\texit;\n\t\t\t} elseif (get_request_var('drp_action') == '8') { // automation\n\t\t\t\tcacti_log('automation_graph_action_execute called: ' . get_request_var('drp_action'), true, 'AUTM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t/* work on all selected graphs */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_execute_graph_create_tree($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '11') {\n\t\t\t\t// Add to a report\n\t\t\t\t$good = true;\n\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t\t$good = false;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($good) {\n\t\t\t\t\traise_message('reports_graphs_added');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('graphs_action_execute', get_request_var('drp_action'));\n\t\t\t}\n\n\t\t\t/* update snmpcache */\n\t\t\tsnmpagent_graphs_action_bottom(array(get_request_var('drp_action'), $selected_items));\n\t\t\tapi_plugin_hook_function('graphs_action_bottom', array(get_request_var('drp_action'), $selected_items));\n\t\t}\n\n\t\tif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\theader('Location: graphs.php?template_id=-1');\n\t\t} else {\n\t\t\theader('Location: graphs.php');\n\t\t}\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\t\t$i      = 0;\n\n\t\t/* global variables */\n\t\t$flist    = '';\n\t\t$footer   = '';\n\t\t$rbutton1 = '';\n\t\t$rbutton2 = '';\n\t\t$return   = false;\n\t\t$rmessage = '';\n\n\t\t$garray       = array();\n\t\t$devices      = array();\n\t\t$atemplates   = array();\n\t\t$reports      = array();\n\t\t$data_sources = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\n\t\t\t\tif ($i == 0) {\n\t\t\t\t\t$graph = db_fetch_row_prepared('SELECT id AS local_graph_id, graph_template_id\n\t\t\t\t\t\tFROM graph_local\n\t\t\t\t\t\tWHERE id = ?\n\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\tarray($matches[1]));\n\n\t\t\t\t\t$gtsql = db_fetch_assoc(get_common_graph_templates($graph));\n\n\t\t\t\t\tif (cacti_sizeof($gtsql)) {\n\t\t\t\t\t\t$gtarray = array_rekey($gtsql, 'id', 'name');\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($iarray)) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\t$ds_preselected_delete = read_config_option('ds_preselected_delete');\n\n\t\t\t\tif ($ds_preselected_delete == 'on') {\n\t\t\t\t\t$rbutton1 = '2';\n\t\t\t\t\t$rbutton2 = '1';\n\t\t\t\t} else {\n\t\t\t\t\t$rbutton1 = '1';\n\t\t\t\t\t$rbutton2 = '2';\n\t\t\t\t}\n\n\t\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\t\tif (isset($iarray) && cacti_sizeof($iarray)) {\n\t\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\tWHERE ' . array_to_sql_or($iarray, 'gti.local_graph_id') . '\n\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\n\t\t\t\t\t/* data sources to delete */\n\t\t\t\t\t$data_array = array_keys($data_sources);\n\n\t\t\t\t\tif (cacti_sizeof($data_array)) {\n\t\t\t\t\t\t$not_deletable = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id\n\t\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\t\tWHERE gti.local_graph_id NOT IN(' . implode(',', $iarray) . ')\n\t\t\t\t\t\t\t\tAND gti.local_graph_id NOT IN(SELECT local_graph_id FROM aggregate_graphs)\n\t\t\t\t\t\t\t\tAND dtr.local_data_id IN(' . implode(',', $data_array) . ')\n\t\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t\t'local_data_id', 'local_data_id');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$not_deletable = array();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cacti_sizeof($not_deletable)) {\n\t\t\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\t\tWHERE gti.local_graph_id IN (' . implode(',', $iarray) . ')\n\t\t\t\t\t\t\t\tAND gti.local_graph_id NOT IN(SELECT local_graph_id FROM aggregate_graphs)\n\t\t\t\t\t\t\t\tAND dtr.local_data_id NOT IN (' . implode(',', $not_deletable) . ')\n\t\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($data_sources)) {\n\t\t\t\t\tforeach($data_sources as $id => $data) {\n\t\t\t\t\t\t$flist .= '<li>' . html_escape($data['name_cache']) . '</li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') {\n\t\t\t\t$devices = array_rekey(\n\t\t\t\t\tdb_fetch_assoc(\"SELECT id, CONCAT_WS('', description, ' (',hostname,')') AS name\n\t\t\t\t\t\tFROM host\n\t\t\t\t\t\tORDER BY description, hostname\"),\n\t\t\t\t\t'id', 'name'\n\t\t\t\t);\n\t\t\t} elseif (get_request_var('drp_action') == '9') {\n\t\t\t\t$return_code    = false;\n\t\t\t\t$data_sources   = array();\n\t\t\t\t$graph_template = '';\n\t\t\t\t$message        = '';\n\n\t\t\t\tif (aggregate_get_data_sources($iarray, $data_sources, $graph_template, $message)) {\n\t\t\t\t\tforeach($data_sources as $ds) {\n\t\t\t\t\t\t$flist .= '<li>' . html_escape($ds['name_cache']) . '</li>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$gprint_prefix  = '|host_description|';\n\t\t\t\t\t$ttitle         = $iarray[0];\n\n\t\t\t\t\t/* aggregate form */\n\t\t\t\t\t$_aggregate_defaults = array(\n\t\t\t\t\t\t'title_format'      => auto_title($ttitle),\n\t\t\t\t\t\t'graph_template_id' => $graph_template,\n\t\t\t\t\t\t'gprint_prefix'     => $gprint_prefix\n\t\t\t\t\t);\n\n\t\t\t\t\t$helper_string = '|host_description|';\n\n\t\t\t\t\tif ($graph_template > 0) {\n\t\t\t\t\t\t$data_query = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\t\t\t\tarray($graph_template));\n\n\t\t\t\t\t\tif ($data_query > 0) {\n\t\t\t\t\t\t\t$data_query_info = get_data_query_array($data_query);\n\n\t\t\t\t\t\t\tforeach ($data_query_info['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t$helper_string .= ($helper_string != '' ? ', ':'') . '|query_' . $field_name . '|';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Append the helper string\n\t\t\t\t\t$struct_aggregate['suggestions'] = array(\n\t\t\t\t\t\t'method'        => 'other',\n\t\t\t\t\t\t'friendly_name' => __('Prefix Replacement Values'),\n\t\t\t\t\t\t'description'   => __('You may use these replacement values for the Prefix in the Aggregate Graph'),\n\t\t\t\t\t\t'value'         => $helper_string\n\t\t\t\t\t);\n\n\t\t\t\t\t// We are storing the stdout to a variable here\n\t\t\t\t\tob_start();\n\n\t\t\t\t\tdraw_edit_form(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate, $_aggregate_defaults)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\t# draw all graph items of first graph, including a html_start_box\n\t\t\t\t\tdraw_aggregate_graph_items_list(0, $graph_template);\n\n\t\t\t\t\tgraph_aggregate_javascript();\n\n\t\t\t\t\t$footer = ob_get_clean();\n\t\t\t\t} else {\n\t\t\t\t\t$return   = true;\n\t\t\t\t\t$rmessage = $message;\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '10') { // aggregate template\n\t\t\t\t/* initialize return code and graphs array */\n\t\t\t\t$data_sources   = array();\n\t\t\t\t$graph_template = '';\n\t\t\t\t$message        = '';\n\n\t\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\t\tif (aggregate_get_data_sources($iarray, $data_sources, $graph_template, $message)) {\n\t\t\t\t\t$atemplates = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\t\tORDER BY name', array($graph_template));\n\n\t\t\t\t\tif (cacti_sizeof($atemplates)) {\n\t\t\t\t\t\t$atemplates = array_rekey($atemplates, 'id', 'name');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$return   = true;\n\t\t\t\t\t\t$rmessage = __('There were not Aggregate Templates found for the selected Graphs');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$return   = true;\n\t\t\t\t\t$rmessage = $message;\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '11') { // add to report\n\t\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM reports\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($_SESSION[SESS_USER_ID]));\n\n\t\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\t\t$reports = array_rekey($reports, 'id', 'name');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* for use by plugins */\n\t\t$save['drp_action']  = get_nfilter_request_var('drp_action');\n\t\t$save['graph_list']  = $ilist;\n\t\t$save['graph_array'] = (isset($iarray) ? $iarray : array());\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'graphs.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage'  => __('Click \\'Continue\\' to Delete the following Graph.'),\n\t\t\t\t\t'pmessage'  => __('Click \\'Continue\\' to Delete following Graphs.'),\n\t\t\t\t\t'scont'     => __('Delete Graph'),\n\t\t\t\t\t'pcont'     => __('Delete Graphs'),\n\t\t\t\t\t'flist'     => $flist,\n\t\t\t\t\t'sfmessage' => __n('The following Data Source is used by this Graph.', 'The following Data Sources are used by this Graph.', cacti_sizeof($data_sources)),\n\t\t\t\t\t'pfmessage' => __n('The following Data Source is used by these Graphs.', 'The following Data Sources are used by these Graphs.', cacti_sizeof($iarray)),\n\t\t\t\t\t'extra'     => array(\n\t\t\t\t\t\t'delete_type' => array(\n\t\t\t\t\t\t\t'method' => 'radio',\n\t\t\t\t\t\t\t'title' => __('Delete Method'),\n\t\t\t\t\t\t\t'default' => 1,\n\t\t\t\t\t\t\t'items' => array(\n\t\t\t\t\t\t\t\t0 => array(\n\t\t\t\t\t\t\t\t\t'radio_value' => '1',\n\t\t\t\t\t\t\t\t\t'radio_caption' => __n('Delete the Data Sources referenced by this Graph', 'Delete the Data Sources reference by these Graphs.', cacti_sizeof($iarray))\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t1 => array(\n\t\t\t\t\t\t\t\t\t'radio_value' => '2',\n\t\t\t\t\t\t\t\t\t'radio_caption' => __n('Leave the Data Source untouched.', 'Leave the Data Sources untouched', cacti_sizeof($data_sources))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Choose a Graph Template and click \\'Continue\\' to Change the Graph Template for the following Graph.  Note that only compatible Graph Templates will be displayed.  Compatible is identified by those having identical Data Sources.'),\n\t\t\t\t\t'pmessage' => __('Choose a Graph Template and click \\'Continue\\' to Change the Graph Template for the following Graphs.  Note that only compatible Graph Templates will be displayed.  Compatible is identified by those having identical Data Sources.'),\n\t\t\t\t\t'cont'     => __('Change Graph Template'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'graph_template_id' => array(\n\t\t\t\t\t\t\t'method' => 'drop_array',\n\t\t\t\t\t\t\t'title'  => __('New Graph Template'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'array' => $gtarray\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Graphs.'),\n\t\t\t\t\t'scont'    => __('Duplicate Graph'),\n\t\t\t\t\t'pcont'    => __('Duplicate Graphs'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<graph_title> (1)',\n\t\t\t\t\t\t\t'width'   => 255,\n\t\t\t\t\t\t\t'size'    => 30\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Convert the following Graph to a Graph Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Convert the following Graphs to Graph Templates.'),\n\t\t\t\t\t'scont'    => __('Convert Graph to Template'),\n\t\t\t\t\t'pcont'    => __('Convert Graphs to Templates'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<graph_title> Template',\n\t\t\t\t\t\t\t'width'   => 255,\n\t\t\t\t\t\t\t'size'    => 30\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' => __('Choose a Device and click \\'Continue\\' to Change the Graph to the new Device.'),\n\t\t\t\t\t'pmessage' => __('Choose a Device and click \\'Continue\\' to Change the Graphs to the new Device.'),\n\t\t\t\t\t'scont'    => __('Change Graph to new Device'),\n\t\t\t\t\t'pcont'    => __('Change Graphs to new Device'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'host_id' => array(\n\t\t\t\t\t\t\t'method' => 'drop_array',\n\t\t\t\t\t\t\t'title'  => __('New Device'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'array' => $devices\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t6 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Reapply Suggested Names the following Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Reapply Suggested Names for the following Graphs.'),\n\t\t\t\t\t'scont'    => __('Reapply Suggested Names for Graph'),\n\t\t\t\t\t'pcont'    => __('Reapply Suggested Names for Graphs')\n\t\t\t\t),\n\t\t\t\t8 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to apply Automation Rules to the following Graph.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to apply Automation Rules to the following Graphs.'),\n\t\t\t\t\t'scont'    => __('Apply Automation Rules to Graph'),\n\t\t\t\t\t'pcont'    => __('Apply Automation Rules to Graphs')\n\t\t\t\t),\n\t\t\t\t9 => array(\n\t\t\t\t\t'smessage'  => __('Click \\'Continue\\' to Create an Aggregate Graph from the selected Graph.'),\n\t\t\t\t\t'pmessage'  => __('Click \\'Continue\\' to Create an Aggregate Graph from the selected Graphs.'),\n\t\t\t\t\t'cont'      => __('Create Aggregate Graph'),\n\t\t\t\t\t'return'    => $return,\n\t\t\t\t\t'rmessage'  => $rmessage,\n\t\t\t\t\t'footer'    => $footer,\n\t\t\t\t\t'flist'     => $flist,\n\t\t\t\t\t'sfmessage' => __n('The following Data Source is in use by this Graph.', 'The following Data Sources are in use by these Graphs.', cacti_sizeof($data_sources)),\n\t\t\t\t\t'pfmessage' => __n('The following Data Source is in use by these Graphs.', 'The following Data Sources are in use by these Graphs.', cacti_sizeof($data_sources)),\n\t\t\t\t),\n\t\t\t\t10 => array(\n\t\t\t\t\t'smessage' => __('Choose an Aggregate Template and click \\'Continue\\' to Create the Aggregate Graph from the following Graph.'),\n\t\t\t\t\t'pmessage' => __('Choose an Aggregate Template and click \\'Continue\\' to Create the Aggregate Graph from the following Graphs.'),\n\t\t\t\t\t'cont'     => __('Create Aggregate Graph'),\n\t\t\t\t\t'return'   => $return,\n\t\t\t\t\t'rmessage' => $rmessage,\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'aggregate_template_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Aggregate Template'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'array'   => $atemplates,\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t11 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Place the following Graph on a Report.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Place the following Graphs on a Report.'),\n\t\t\t\t\t'scont'    => __('Place Graph on Report'),\n\t\t\t\t\t'pcont'    => __('Place Graphs on Report'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'report_id' => array(\n                            'method'  => 'drop_array',\n                            'title'   => __('Report Name'),\n                            'array'   => $reports,\n                            'default' => array_key_first($reports)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'timespan' => array(\n                            'method'  => 'drop_array',\n                            'title'   => __('Timespan'),\n                            'array'   => $graph_timespans,\n                            'default' => read_user_setting('default_timespan')\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'align' => array(\n                            'method'  => 'drop_array',\n                            'title'   => __('Align'),\n                            'array'   => $alignment,\n                            'default' => REPORTS_ALIGN_CENTER\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n        $trees = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach($trees as $tree) {\n\t\t\t\t$form_data['options']['tr_' . $tree['id']] = array(\n\t\t\t\t\t'smessage' => __esc('Click \\'Continue\\' to Place the following Graph on Tree %s.', $tree['name']),\n\t\t\t\t\t'pmessage' => __esc('Click \\'Continue\\' to Duplicate following Graphs on Tree %s.', $tree['name']),\n\t\t\t\t\t'scont'    => __('Place Graph on Tree'),\n\t\t\t\t\t'pcont'    => __('Place Graphs on Tree'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'tree_item_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_branch',\n\t\t\t\t\t\t\t'title'   => __('Destination Branch'),\n\t\t\t\t\t\t\t'id'      => $tree['id']\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t'eaction'   => 'tree_id',\n\t\t\t\t\t'eactionid' => $tree['id'],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t$form_data = api_plugin_hook_function('graphs_confirmation_form', $form_data);\n\n\t\tform_continue_confirmation($form_data, 'graphs_action_prepare', $save);\n\t}\n}\n\nfunction graph_aggregate_javascript() {\n\t?>\n\t<script type='text/javascript'>\n\tfunction changeTotals() {\n\t\tswitch ($('#aggregate_total').val()) {\n\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t$('#aggregate_total_type').prop('disabled', true);\n\t\t\t\tif ($('#aggregate_total_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_type').selectmenu('disable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_total_prefix').prop('disabled', true);\n\t\t\t\tif ($('#aggregate_total_prefix').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_prefix').selectmenu('disable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_order_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_order_type').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_total_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_type').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_total_prefix').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_prefix').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_order_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_order_type').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_total_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_type').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\tif ($('#aggregate_total_prefix').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_total_prefix').selectmenu('enable');\n\t\t\t\t}\n\n\t\t\t\t$('#aggregate_order_type').prop('disabled', true);\n\t\t\t\tif ($('#aggregate_order_type').selectmenu('instance')) {\n\t\t\t\t\t$('#aggregate_order_type').selectmenu('disable');\n\t\t\t\t}\n\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction changeTotalsType() {\n\t\tif (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>)) {\n\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('Total');?>');\n\t\t} else if (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>)) {\n\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('All Items');?>');\n\t\t}\n\t}\n\n\tfunction checkSubmit() {\n\t\tif ($('input[id^=\"agg_total\"]:checked').length == 0) {\n\t\t\t$('input[type=\"submit\"]').prop('disable', true).addClass('ui-state-disabled');;\n\t\t} else {\n\t\t\t$('input[type=\"submit\"]').prop('disable', true).removeClass('ui-state-disabled');;\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('#aggregate_total').change(function() {\n\t\t\tchangeTotals();\n\t\t});\n\n\t\t$('#aggregate_total_type').change(function() {\n\t\t\tchangeTotalsType();\n\t\t});\n\n\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\tid = $(this).attr('id');\n\n\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t} else {\n\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t}\n\n\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t} else {\n\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t}\n\n\t\t\tcheckSubmit();\n\t\t});\n\n\t\t$('input[id^=\"agg_skip\"]').each(function() {\n\t\t\t$(this).prop('checked', true);\n\t\t});\n\n\t\tchangeTotals();\n\t\tcheckSubmit();\n\t});\n\t</script>\n\t<?php\n}\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Graph Items [new]');\n\t\t$add_text     = '';\n\t\t$anchor_link  = '';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared(\"SELECT\n\t\t\tgti.id, gti.text_format, gti.value, gti.hard_return, gti.graph_type_id, gti.alpha, gti.alpha2, gti.textalign,\n\t\t\tgti.consolidation_function_id, gti.sequence,\n\t\t\tCONCAT(dtd.name_cache, ' (',  dtr.data_source_name, ')') AS data_source_name,\n\t\t\tcd.name AS cdef_name, c.hex, c2.hex AS hex2, gti.legend,\n\t\t\tvd.name AS vdef_name, gtgp.name AS gprint_name\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id = dtr.id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtr.local_data_id = dl.id\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dl.id = dtd.local_data_id\n\t\t\tLEFT JOIN graph_templates_gprint AS gtgp\n\t\t\tON gprint_id = gtgp.id\n\t\t\tLEFT JOIN cdef AS cd\n\t\t\tON cdef_id = cd.id\n\t\t\tLEFT JOIN vdef AS vd\n\t\t\tON vdef_id = vd.id\n\t\t\tLEFT JOIN colors AS c\n\t\t\tON color_id = c.id\n\t\t\tLEFT JOIN colors AS c2\n\t\t\tON color_id = c2.id\n\t\t\tWHERE gti.local_graph_id = ?\n\t\t\tORDER BY gti.sequence\", array(get_request_var('id')));\n\n\t\t$template_item_list = api_plugin_hook_function('graphs_item_array', $template_item_list);\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Graph Items [edit: %s]', get_graph_title(get_request_var('id')));\n\t\t$add_text     = 'graphs.php?action=item_edit' . (!empty($host_id) ? '&host_id=' . $host_id:'') . '&local_graph_id=' . get_request_var('id');\n\t\t$anchor_link  = 'host_id=' . $host_id . '&local_graph_id=' . get_request_var('id');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', $add_text);\n\n\tdraw_graph_items_list($template_item_list, 'graphs.php', $anchor_link, (empty($graph_template_id) || empty($host_id) ? false : true));\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').unbind().click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadUrl({url:$(this).attr('href')})\n\t\t});\n\n\t\t$('#graphs_graph_edit2_child').attr('id', 'item_ids');\n\t\t$('#item_ids').find('tr:first').addClass('nodrag').addClass('nodrop');\n\t\t$('#item_ids').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'graphs.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize()});\n\t\t\t}\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction is_multi_device_graph($local_graph_id) {\n\t$devices = db_fetch_cell_prepared('SELECT COUNT(DISTINCT host_id)\n\t\tFROM data_template_rrd AS dtr\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gti.task_item_id = dtr.id\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id = dtr.local_data_id\n\t\tWHERE gti.local_graph_id = ?',\n\t\tarray($local_graph_id));\n\n\treturn $devices > 1 ? true : false;\n}\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $image_types, $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$use_graph_template = true;\n\n\t$locked = 'false';\n\t$graph  = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$_SESSION['sess_graph_lock_id'] = get_request_var('id');\n\n\t\t$local_graph_template_graph_id = db_fetch_cell_prepared('SELECT local_graph_template_graph_id\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$auto_unlock = read_config_option('graphs_auto_unlock');\n\n\t\tif (get_request_var('id') != $_SESSION['sess_graph_lock_id'] && !empty($local_graph_template_graph_id)) {\n\t\t\tif ($auto_unlock == 'on') {\n\t\t\t\t$locked = false;\n\t\t\t} else {\n\t\t\t\t$locked = true;\n\t\t\t}\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (empty($local_graph_template_graph_id)) {\n\t\t\t$locked                        = false;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (isset($_SESSION['sess_graph_locked'])) {\n\t\t\t$locked = $_SESSION['sess_graph_locked'];\n\t\t} else {\n\t\t\tif ($auto_unlock == 'on') {\n\t\t\t\t$locked = false;\n\t\t\t} else {\n\t\t\t\t$locked = true;\n\t\t\t}\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t}\n\n\t\t$graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray($local_graph_template_graph_id));\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t/* case of a deleted graph */\n\t\tif (!cacti_sizeof($graph)) {\n\t\t\traise_message(31);\n\t\t\theader('Location: graphs.php');\n\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __esc('Graph [edit: %s]', get_graph_title(get_request_var('id')));\n\n\t\tif ($graph['graph_template_id'] == '0') {\n\t\t\t$use_graph_template = 'false';\n\t\t}\n\t} else {\n\t\t$header_label       = __('Graph [new]');\n\t\t$use_graph_template = false;\n\n\t\tif (isset_request_var('host_id') && get_filter_request_var('host_id') > 0) {\n\t\t\t$host_id = get_request_var('host_id');\n\t\t} else {\n\t\t\t$host_id = 0;\n\t\t}\n\n\t\tif (isempty_request_var('graph_template_id')) {\n\t\t\t$locked = false;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t\t$message = __('Turn Off Graph Debug Mode.');\n\t\t} else {\n\t\t\t$message = __('Turn On Graph Debug Mode.');\n\t\t}\n\n\t\t$data_sources = db_fetch_assoc_prepared('SELECT DISTINCT local_data_id\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON dtr.id = gti.task_item_id\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t?>\n\t\t<table style='width:100%;'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top'>\n\t\t\t\t\t<?php print html_escape(get_graph_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graphs.php?action=graph_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1'));?>'><?php print $message;?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (!empty($graph['graph_template_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graph_templates.php?action=template_edit&id=' . (isset($graph['graph_template_id']) ? $graph['graph_template_id'] : '0'));?>'><?php print __('Edit Graph Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cacti_sizeof($data_sources)) {\n\t\t\t\t\t\t\tforeach ($data_sources as $ds) {\n\t\t\t\t\t\t\t\t$name = db_fetch_cell_prepared('SELECT name_cache\n\t\t\t\t\t\t\t\t\tFROM data_template_data\n\t\t\t\t\t\t\t\t\tWHERE local_data_id = ?',\n\t\t\t\t\t\t\t\t\tarray($ds['local_data_id']));\n\n\t\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . $ds['local_data_id']);?>'><?php print __esc('Edit Data Source: \\'%s\\'.', $name);?></a><br><?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!isempty_request_var('host_id') || !empty($host_id)) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . ($host_id > 0 ? $host_id : get_request_var('host_id')));?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($locked) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='unlockid'><?php print __('Unlock Graph.');?></a><br/><?php\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='lockid'><?php print __('Lock Graph.');?></a><br/><?php\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!isempty_request_var('id')) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graph.php?rra_id=0&local_graph_id=' . get_request_var('id'));?>'><?php print __('View Timespans.');?></a><?php\n\t\t\t\t\t\t}\n\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tform_start('graphs.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!empty($graph['local_graph_id'])) {\n\t\t$graph_template_id = get_current_graph_template($graph['local_graph_id']);\n\n\t\t$gtsql = get_common_graph_templates($graph);\n\t} else {\n\t\t$graph_template_id = 0;\n\n\t\t$gtsql = 'SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tWHERE id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\tORDER BY name';\n\t}\n\n\t$form_array = array(\n\t\t'graph_template_id' => array(\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Graph Template'),\n\t\t\t'description'   => __('Choose a Graph Template to apply to this Graph. Please note that you may only change Graph Templates to a 100%% compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value'         => $graph_template_id,\n\t\t\t'none_value'    => (!isset($graph['graph_template_id']) || $graph['graph_template_id'] == 0 ? __('None'):''),\n\t\t\t'sql'           => $gtsql\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method'        => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description'   => __('Choose the Device that this Graph belongs to.'),\n\t\t\t'sql'           => 'SELECT id, description as name FROM host ORDER BY name',\n\t\t\t'action'        => 'ajax_hosts_noany',\n\t\t\t'none_value'    => __('None'),\n\t\t\t'id'            => $host_id,\n\t\t\t'value'         => db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($host_id)),\n\t\t\t),\n\t\t'graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($graph['id']) ? $graph['id'] : '0')\n\t\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($graph['local_graph_id']) ? $graph['local_graph_id'] : '0')\n\t\t\t),\n\t\t'local_graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($graph['local_graph_template_graph_id']) ? $graph['local_graph_template_graph_id'] : '0')\n\t\t\t),\n\t\t'graph_template_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => $graph_template_id\n\t\t\t),\n\t\t'host_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => (isset($host_id) ? $host_id : '0')\n\t\t\t)\n\t\t);\n\n\tif (cacti_sizeof($graph)) {\n\t\tif ($graph['graph_template_id'] == 0) {\n\t\t\t$form_array['graph_template_id']['method'] = 'hidden';\n\t\t\t$form_array['graph_template_id']['value']  = '0';\n\t\t}\n\n\t\tif ($graph['graph_template_id'] > 0 && $host_id > 0) {\n\t\t\t$form_array['graph_template_id']['method'] = 'hidden';\n\t\t\t$form_array['host_id']['method']           = 'hidden';\n\t\t}\n\n\t\tif (is_multi_device_graph($graph['local_graph_id'])) {\n\t\t\t$form_array['host_id']['method'] = 'hidden';\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a graph template for this graph */\n\tif (!empty($graph['graph_template_id'])) {\n\t\thtml_start_box(__('Supplemental Graph Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_graph($graph['graph_template_id'], $graph, '|field|', __('Graph Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_graph_item($graph['graph_template_id'], get_request_var('id'), '|field|_|id|', __('Graph Item Fields'), true, $locked);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t/* graph item list goes here */\n\tif ((!isempty_request_var('id')) && (empty($graph['graph_template_id']))) {\n\t\titem();\n\t}\n\n\t$graph_start = -86400;\n\t$graph_end   = '-' . read_config_option('poller_interval');\n\n\t$graph['src'] = html_escape(CACTI_PATH_URL . 'graph_json.php?local_graph_id=' . get_request_var('id') . '&rra_id=0&graph_start=' . $graph_start . '&graph_end=' . $graph_end . '&v=' . mt_rand());\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n\t\t<div class='cactiTable'>\n\t\t\t<div id='graphLocation' class='center'></div>\n\t\t<?php\n\t\tif ((isset($_SESSION['graph_debug_mode'])) && (isset_request_var('id'))) {\n\t\t\t$graph_data_array['output_flag']  = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\t\t\t$graph_data_array['graph_end']    = $graph_end;\n\t\t\t$graph_data_array['graph_start']  = $graph_start;\n\n\t\t\t$null_param = array();\n\t\t\t?>\n\t\t</div>\n\t\t<div class='cactiTable'>\n\t\t\t<div style='float:left'>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:');?></span><br>\n\t\t\t\t<pre><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array, null, $null_param, $_SESSION[SESS_USER_ID]);?></pre>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:');?></span><br>\n\t\t\t\t<?php unset($graph_data_array['print_source']);?>\n\t\t\t\t<pre><?php print($config['poller_id'] == 1 ? @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array, null, $null_param, $_SESSION[SESS_USER_ID]):__esc('Not Checked'));?></pre>\n\t\t\t</div>\n\t\t<?php\n\t\t}\n\t\t?>\n\t\t</div>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($graph['graph_template_id']))) {\n\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer')) {\n\t\t\t\t$form_array[$field_name]['value']   = (isset($graph[$field_name]) ? $graph[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graph[$field_name]) ? $graph['id'] : '0');\n\n\t\t\t\tif ($use_graph_template == true && isset($graph_template['t_' . $field_name]) && ($graph_template['t_' . $field_name] == 'on')) {\n\t\t\t\t\t$form_array[$field_name]['method']      = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_graph','1','');\n\t\tform_hidden_box('save_component_input','1','');\n\t} else {\n\t\tform_hidden_box('save_component_graph_new','1','');\n\t}\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\tform_save_button('graphs.php', 'return');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\tvar locked         = <?php print($locked ? 'true':'false');?>;\n\tvar imageSource    = '<?php print $graph['src'];?>';\n\tvar originalWidth  = null;\n\tvar originalHeight = null;\n\n\tfunction dynamic() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tdynamic();\n\n\t\t$('#unlockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\t$('body').append(\"<div id='modal' class='ui-widget-overlay ui-front' style='z-index: 100;'><i style='position:absolute;top:50%;left:50%;' class='ti fa-spin ti-loader-2'/></div>\");\n\n\t\t\t$.get('graphs.php?action=unlock&id='+$('#local_graph_id').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#modal').remove();\n\t\t\t\t\t$('#main').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\n\t\t$.getJSON(imageSource)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#graphLocation').html(\"<img class='cactiGraphImage' src='data:image/\"+data.type+\";base64,\"+data.image+\"' graph_start='\"+data.graph_start+\"' graph_end='\"+data.graph_end+\"' graph_left='\"+data.graph_left+\"' graph_top='\"+data.graph_top+\"' graph_width='\"+data.graph_width+\"' graph_height='\"+data.graph_height+\"' width='\"+data.image_width+\"' height='\"+data.image_height+\"' image_width='\"+data.image_width+\"' image_height='\"+data.image_height+\"' value_min='\"+data.value_min+\"' value_max='\"+data.value_max+\"'>\");\n\t\t\t\t$(window).trigger('resize');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\t\t$('#lockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\tloadUrl({url:'graphs.php?action=lock&id='+$('#local_graph_id').val()})\n\t\t});\n\n\t\t$(window).resize(function() {\n\t\t\tvar imageWidth  = $('.cactiGraphImage').width();\n\t\t\tvar imageHeight = $('.cactiGraphImage').height();\n\t\t\tvar aspectRatio = imageWidth/imageHeight;\n\n\t\t\tif (imageWidth > 0 && originalWidth == null) {\n\t\t\t\toriginalWidth = imageWidth;\n\t\t\t\toriginalHeight = imageHeight;\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').hide();\n\n\t\t\tvar mainSize = $('#main').width();\n\n\t\t\tif (imageWidth > mainSize || mainSize < originalWidth) {\n\t\t\t\tvar newWidth = mainSize - 40;\n\n\t\t\t\taspectRatio = imageWidth / imageHeight;\n\t\t\t\timageWidth  = newWidth;\n\t\t\t\timageHeight = newWidth / aspectRatio;\n\t\t\t\t$('.cactiGraphImage').css({ width: imageWidth, height: imageHeight });\n\t\t\t} else if (mainSize > originalWidth) {\n\t\t\t\t$('.cactiGraphImage').css({ width: originalWidth, height: originalHeight });\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').show();\n\t\t}).trigger('resize');\n\n\t\t$('.ui-selectmenu-button').css('width', '360px');\n\t\t$('.ui-autocomplete-input').css('width', '340px');\n\t});\n\n\tif (locked) {\n\t\t$('input, select').not('input[value=\"<?php print __('Cancel');?>\"]').prop('disabled', true);\n\t\t$('.moveArrow, .deleteMarker, .linkOverDark, .linkEditMain').attr('href', '#').removeClass('moveArrow').removeClass('deleteMarker');\n\t\tif ($('#submit').button('instance')) {\n\t\t\t$('#submit').button('disable');\n\t\t} else {\n\t\t\t$('#submit').prop('disabled', true);\n\t\t}\n\t\t$('#host_id_wrap').addClass('ui-selectmenu-disabled ui-state-disabled');\n\t\t$('#host_id_input').addClass('ui-state-disabled');\n\t}\n\t</script>\n\t<?php\n\tif (isset_request_var('id')) {\n\t\tapi_plugin_hook_function('graph_edit_after', get_request_var('id'));\n\t} else {\n\t\tapi_plugin_hook_function('graph_edit_after');\n\t}\n}\n\nfunction validate_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'custom' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'local_graph_ids' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_graph_custom');\n\t/* ================= input validation ================= */\n}\n\nfunction graphs() {\n\tglobal $actions, $graph_sources, $item_rows, $image_types, $config;\n\n\t/* for custom non-stored request vars */\n\tvalidate_graph_request_vars();\n\n\t/* for main filter variables */\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where   = '';\n\t$sql_where2  = '';\n\t$sql_params  = array();\n\t$sql_params2 = array();\n\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where = ' WHERE\n\t\t(\n\t\t\tgtg.title_cache RLIKE ? OR\n\t\t\tgt.name RLIKE ? OR\n\t\t\tgl.id = ?\n\t\t)';\n\n\t\t$sql_params[] = get_request_var('rfilter');\n\t\t$sql_params[] = get_request_var('rfilter');\n\t\t$sql_params[] = get_request_var('rfilter');\n\n\t\t$sql_where2    = ' AND (gl.id = ?)';\n\t\t$sql_params2[] = get_request_var('rfilter');\n\t}\n\n\tif (isempty_request_var('host_id')) {\n\t\t$sql_where  .= ($sql_where != '' ? ' AND ':'WHERE ') . ' IFNULL(gl.host_id, 0) = 0';\n\t\t$sql_where2 .= ' AND gl.host_id = 0';\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.host_id = ?';\n\t\t$sql_params[]  = get_request_var('host_id');\n\t\t$sql_where2   .= ' AND gl.host_id = ?';\n\t\t$sql_params2[] = get_request_var('host_id');\n\t}\n\n\tif (get_request_var('vdef_id') > 0) {\n\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gti.vdef_id = ?';\n\t\t$sql_params[]  = get_request_var('vdef_id');\n\t\t$sql_where2   .= ' AND gti.vdef_id = ?';\n\t\t$sql_params2[] = get_request_var('vdef_id');\n\t}\n\n\tif (get_request_var('cdef_id') > 0) {\n\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gti.cdef_id = ?';\n\t\t$sql_params[]  = get_request_var('cdef_id');\n\t\t$sql_where2   .= ' AND gti.cdef_id = ?';\n\t\t$sql_params2[] = get_request_var('cdef_id');\n\t}\n\n\tif (isempty_request_var('site_id')) {\n\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' IFNULL(h.site_id, 0) = 0';\n\t\t$sql_where2   .= ' AND h.site_id = 0';\n\t} elseif (get_request_var('site_id') > 0) {\n\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.site_id = ?';\n\t\t$sql_params[]  = get_request_var('site_id');\n\t\t$sql_where2   .= ' AND h.site_id = ?';\n\t\t$sql_params2[] = get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' IFNULL(gtg.graph_template_id, 0) = 0';\n\t\t$sql_where2 .= ' AND gtg.graph_template_id = 0';\n\t} elseif (!isempty_request_var('template_id') && get_request_var('template_id') != '-1') {\n\t\t$parts = explode('_', get_request_var('template_id'));\n\n\t\tinput_validate_input_number($parts[1], 'template_id[1]');\n\n\t\tif ($parts[0] == 'cg') {\n\t\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.graph_template_id = ?';\n\t\t\t$sql_params[]  = $parts[1];\n\t\t\t$sql_where2   .= ' AND gl.graph_template_id = ?';\n\t\t\t$sql_params2[] = $parts[1];\n\t\t} else {\n\t\t\t$sql_where    .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.snmp_query_graph_id = ?';\n\t\t\t$sql_params[]  = $parts[1];\n\t\t\t$sql_where2   .= ' AND gl.snmp_query_graph_id = ?';\n\t\t\t$sql_params2[] = $parts[1];\n\t\t}\n\t}\n\n\tif (get_request_var('local_graph_ids') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.id IN(' . get_request_var('local_graph_ids') . ')';\n\t\t$sql_where2 .= ' AND gl.id IN(' . get_request_var('local_graph_ids') . ')';\n\t}\n\n\tif (get_request_var('source') >= 0) {\n\t\tif (get_request_var('source') == 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.graph_template_id = 0';\n\t\t} elseif (get_request_var('source') == 1) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (gl.graph_template_id > 0 AND gl.snmp_query_id = 0)';\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.snmp_query_id > 0';\n\t\t}\n\t}\n\n\tif (get_request_var('orphans') == 'true') {\n\t\t$orphan_join = \"INNER JOIN (\n\t\t\tSELECT DISTINCT gti.local_graph_id, dtr.local_data_id\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gti.local_graph_id\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON dtr.id = gti.task_item_id\n\t\t\tINNER JOIN data_local AS dl\n\t\t\tON dl.id = dtr.local_data_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\tWHERE graph_type_id IN (4,5,6,7,8,20)\n\t\t\tAND cdef_id NOT IN (\n\t\t\t\tSELECT c.id\n\t\t\t\tFROM cdef AS c\n\t\t\t\tINNER JOIN cdef_items AS ci\n\t\t\t\tON c.id = ci.cdef_id\n\t\t\t\tWHERE (ci.type = 4 OR (ci.type = 6 AND value LIKE '%DATA_SOURCE%'))\n\t\t\t)\n\t\t\tAND (dl.orphan = 1 OR dtr.id IS NULL OR (gl.snmp_query_id > 0 AND gl.snmp_index = ''))\n\t\t\t$sql_where2\n\t\t) AS dtr\n\t\tON gl.id = dtr.local_graph_id\";\n\t} else {\n\t\t$orphan_join = '';\n\t\t$sql_params2 = array();\n\t}\n\n\t/* don't allow aggregates to be view here */\n\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ag.local_graph_id IS NULL';\n\n\t/* allow plugins to modify sql_where */\n\t$sql_where = api_plugin_hook_function('graphs_sql_where', $sql_where);\n\n\t$rows_sql = \"SELECT\n\t\tCOUNT(DISTINCT gtg.id)\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id = gtg.local_graph_id\n\t\tLEFT JOIN graph_templates_item AS gti\n\t\tON gl.graph_template_id = gti.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id = gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id = gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id=s.id\n\t\t$orphan_join\n\t\t$sql_where\";\n\n\tif ($orphan_join == '' || !cacti_sizeof($sql_params2)) {\n\t\t$merged_params = $sql_params;\n\t} elseif (cacti_sizeof($sql_params2)) {\n\t\t$merged_params = array_merge($sql_params2, $sql_params);\n\t} else {\n\t\t$merged_params = $sql_params;\n\t}\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $rows_sql, $merged_params, 'graph');\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$sql = \"SELECT gtg.id, gl.id AS local_graph_id,\n\t\tgtg.height, gtg.width, gtg.title_cache, gtg.image_format_id, gt.name, gl.host_id,\n\t\tIF(gl.graph_template_id = 0, 0, IF(gl.snmp_query_id = 0, 2, 1)) AS graph_source\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id = gtg.local_graph_id\n\t\tLEFT JOIN graph_templates_item AS gti\n\t\tON gl.graph_template_id = gti.id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id = gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id = gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id = gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id = s.id\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON gl.snmp_query_id = sqg.snmp_query_id\n\t\tAND gl.graph_template_id = sqg.graph_template_id\n\t\tAND gl.snmp_query_graph_id = sqg.id\n\t\t$orphan_join\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\t$graph_list = db_fetch_assoc_prepared($sql, $merged_params);\n\n\t$nav = html_nav_bar('graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tform_start('graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'title_cache' => array(\n\t\t\t'display' => __('Graph Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Title of this Graph.  Generally programmatically generated from the Graph Template definition or Suggested Naming rules.  The max length of the Title is controlled under Settings->Visual.')\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Graph.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'graph_source' => array(\n\t\t\t'display' => __('Source Type'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The underlying source that this Graph was based upon.')\n\t\t),\n\t\t'source_name' => array(\n\t\t\t'display' => __('Source Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Graph Template or Data Query that this Graph was based upon.')\n\t\t),\n\t\t'image_format_id' => array(\n\t\t\t'display' => __('Image Format'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The image format of the Graph.')\n\t\t),\n\t\t'height' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The size of this Graph when not in Preview mode.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t$template_details = get_graph_template_details($graph['local_graph_id']);\n\n\t\t\tif ($graph['graph_source'] == '0') { //Not Templated, customize graph source and template details.\n\t\t\t\t$template_details = api_plugin_hook_function('customize_template_details', $template_details);\n\t\t\t\t$graph            = api_plugin_hook_function('customize_graph', $graph);\n\t\t\t}\n\n\t\t\tif (isset($template_details['graph_name'])) {\n\t\t\t\t$graph['name'] = $template_details['graph_name'];\n\t\t\t}\n\n\t\t\tif (isset($template_details['graph_description'])) {\n\t\t\t\t$graph['description'] = $template_details['graph_description'];\n\t\t\t}\n\n\t\t\tif (empty($graph['title_cache'])) {\n\t\t\t\t$graph['title_cache'] = __('Empty Graph');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('rfilter'), 'graphs.php?action=graph_edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($graph_sources[$graph['graph_source']], get_request_var('rfilter')), $graph['local_graph_id'], '', 'center');\n\t\t\tform_selectable_cell(filter_value($template_details['name'], get_request_var('rfilter'), $template_details['url']), $graph['local_graph_id'], '', 'left');\n\t\t\tform_selectable_ecell($image_types[$graph['image_format_id']], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Graphs Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $sites;\n\n\tif (get_filter_request_var('host_id') == 0) {\n\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=0', 'name', '', $total_rows);\n\t} elseif (get_filter_request_var('host_id') > 0) {\n\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=' . get_filter_request_var('host_id'), 'name', '', $total_rows);\n\t} else {\n\t\t$templates = get_allowed_graph_templates_normalized('', 'name', '', $total_rows);\n\t}\n\n\t$normalized_templates = array();\n\tif (cacti_sizeof($templates)) {\n\t\tforeach($templates as $t) {\n\t\t\t$normalized_templates[$t['id']] = $t['name'];\n\t\t}\n\t}\n\n\t$normalized_templates = $any + $none + $normalized_templates;\n\n\t$sources = array(\n\t\t'-1' => __('All'),\n\t\t'0'  => __('Non Templated'),\n\t\t'1'  => __('Graph Template'),\n\t\t'2'  => __('Data Query'),\n\t);\n\n\t$cdefs = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT c.id, c.name\n\t\t\tFROM cdef AS c\n\t\t\tINNER JOIN (SELECT DISTINCT cdef_id FROM graph_templates_item WHERE cdef_id > 0) AS gti\n\t\t\tON c.id = gti.cdef_id\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$cdefs = $all + $cdefs;\n\n\t$vdefs = array_rekey(\n\t\tdb_fetch_assoc('SELECT v.id, v.name\n\t\t\tFROM vdef AS v\n\t\t\tINNER JOIN (SELECT DISTINCT vdef_id FROM graph_templates_item WHERE vdef_id > 0) AS gti\n\t\t\tON gti.vdef_id = v.id\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$vdefs = $all + $vdefs;\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$host_id = get_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where    = 'AND h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == 0) {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t} else {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t}\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Site'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $sites,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'         => 'drop_callback',\n\t\t\t\t\t'friendly_name'  => __('Device'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'sql'            => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'         => 'ajax_hosts',\n\t\t\t\t\t'id'             => $host_id,\n\t\t\t\t\t'value'          => $hostname,\n\t\t\t\t\t'on_change'      => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'template_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(cg_[0-9]|dq_[0-9]|[\\-0-9])')),\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $normalized_templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'orphans' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Orphaned'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => get_nfilter_request_var('orphans')\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'source' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Source'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sources,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'cdef_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('CDEFs'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $cdefs,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'vdef_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('VDEFs'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $vdefs,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'rfilter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_IS_REGEX,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '55',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Graphs'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'title_cache',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\tif (read_config_option('grds_creation_method') == 1) {\n\t\t$add_url = html_escape('graphs.php?action=graph_edit&host_id=' . get_request_var('host_id'));\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\tif (get_request_var('local_graph_ids') != '') {\n\t\t$header = __('Graph Management [ Custom Graphs List Applied - Clear to Reset ]');\n\t} elseif (get_request_var('host_id') == -1) {\n\t\t$header = __('Graph Management [ All Devices ]');\n\t} elseif (get_request_var('host_id') == 0) {\n\t\t$header = __('Graph Management [ Non Device Based ]');\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$description = db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array(get_request_var('host_id')));\n\t\t$header      = __esc('Graph Management [ %s ]', $description);\n\t} else {\n\t\t$header      = __esc('Graph Management [ All Devices ]');\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'graphs.php', 'form_graphs', 'sess_graphs', $add_url);\n\n\t$pageFilter->rows_label = __('Data Sources');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "graphs_new.php",
          "type": "blob",
          "size": 34.2734375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/sort.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'query_reload':\n\t\thost_reload_query();\n\n\t\theader('Location: graphs_new.php?host_id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\tget_allowed_ajax_hosts(false, false);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\tget_allowed_ajax_hosts(false);\n\n\t\tbreak;\n\tcase 'ajax_save':\n\t\tsave_default_query_option();\n\n\t\tbreak;\n\tcase 'ajax_save_filter':\n\t\tsave_user_filter();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tgraphs();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction save_default_query_option() {\n\t$data_query = get_filter_request_var('query');\n\t$default    = get_filter_request_var('item');\n\n\tset_user_setting('default_sgg_' . $data_query, $default);\n\n\tprint __('Default Settings Saved') . \"\\n\";\n}\n\nfunction save_user_filter() {\n\t$rows = get_filter_request_var('rows');\n\n\tif ($rows == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t}\n\n\t$graph_type = get_filter_request_var('graph_type');\n\n\tset_user_setting('num_rows_table', $rows);\n\tset_user_setting('graph_type', $graph_type);\n}\n\nfunction store_get_selected_dq_index($snmp_query_id) {\n\t// Always restore the last used filter, otherwise, use the default\n\tif (!is_numeric($snmp_query_id)) {\n\t\treturn false;\n\t}\n\n\tif (isset_request_var('sgg_' . $snmp_query_id)) {\n\t\t$selected = get_filter_request_var('sgg_' . $snmp_query_id);\n\t} elseif (isset($_SESSION['sess_sgg_' . $snmp_query_id])) {\n\t\t$selected = $_SESSION['sess_sgg_' . $snmp_query_id];\n\t} else {\n\t\t$selected = read_user_setting('default_sgg_' . $snmp_query_id);\n\t}\n\n\t$_SESSION['sess_sgg_' . $snmp_query_id] = $selected;\n\n\treturn $selected;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_graph')) {\n\t\t$form_data = array();\n\n\t\t/* summarize the 'create graph from host template/snmp index' stuff into an array */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\t/* save form data */\n\t\t\t$form_data[$var] = $val;\n\n\t\t\tif (preg_match('/^cg_(\\d+)$/', $var, $matches)) {\n\t\t\t\t$selected_graphs['cg'][$matches[1]][$matches[1]] = true;\n\t\t\t} elseif (preg_match('/^cg_g$/', $var)) {\n\t\t\t\tif (get_nfilter_request_var('cg_g') > 0) {\n\t\t\t\t\t$selected_graphs['cg'][get_nfilter_request_var('cg_g')][get_nfilter_request_var('cg_g')] = true;\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^sg_(\\d+)_([a-f0-9]{32})$/', $var, $matches)) {\n\t\t\t\t$selected_graphs['sg'][$matches[1]][get_nfilter_request_var('sgg_' . $matches[1])][$matches[2]] = true;\n\t\t\t}\n\n\t\t\tif (strpos($var, 'sgg_') !== false) {\n\t\t\t\t$snmp_query_id = str_replace('sgg_', '', $var);\n\n\t\t\t\tinput_validate_input_number($snmp_query_id, 'sgg');\n\n\t\t\t\tstore_get_selected_dq_index($snmp_query_id);\n\t\t\t}\n\t\t}\n\n\t\t/* save the json_encoded form data in case of an error */\n\t\t$form_data['header'] = false;\n\n\t\t$_SESSION['sess_graphs_new_form'] = json_encode($form_data);\n\t\t$_SESSION['sess_grn_returnto']    = 'graphs_new.php';\n\n\t\tif (!isset_request_var('host_id')) {\n\t\t\t$host_id = 0;\n\t\t} else {\n\t\t\t$host_id = get_filter_request_var('host_id');\n\t\t}\n\n\t\tif (!isset_request_var('host_template_id')) {\n\t\t\t$host_template_id = 0;\n\t\t} else {\n\t\t\t$host_template_id = get_filter_request_var('host_template_id');\n\t\t}\n\n\t\tif (isset($selected_graphs)) {\n\t\t\ttop_header();\n\t\t\thtml_graph_new_graphs('graphs_new.php', $host_id, $host_template_id, $selected_graphs);\n\t\t\tbottom_footer();\n\n\t\t\texit;\n\t\t}\n\n\t\theader('Location: graphs_new.php?host_id=' . $host_id);\n\t}\n\n\tif (isset_request_var('save_component_new_graphs')) {\n\t\thost_new_graphs_save(get_filter_request_var('host_id'));\n\n\t\theader('Location: graphs_new.php?host_id=' . get_filter_request_var('host_id'));\n\t}\n}\n\nfunction host_reload_query() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\trun_data_query(get_request_var('host_id'), get_request_var('id'));\n}\n\nfunction host_new_graphs_save($host_id) {\n\t$selected_graphs_array = cacti_unserialize(stripslashes(get_nfilter_request_var('selected_graphs_array')));\n\n\t$values    = array();\n\t$form_data = array();\n\n\t/* form an array that contains all of the data on the previous form */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^g_(\\d+)_(\\d+)_(\\w+)/', $var, $matches)) { // 1: snmp_query_id, 2: graph_template_id, 3: field_name\n\t\t\tif (empty($matches[1])) { // this is a new graph from template field\n\t\t\t\t$values['cg'][$matches[2]]['graph_template'][$matches[3]] = $val;\n\t\t\t} else { // this is a data query field\n\t\t\t\t$values['sg'][$matches[1]][$matches[2]]['graph_template'][$matches[3]] = $val;\n\t\t\t}\n\t\t} elseif (preg_match('/^gi_(\\d+)_(\\d+)_(\\d+)_(\\w+)/', $var, $matches)) { // 1: snmp_query_id, 2: graph_template_id, 3: graph_template_input_id, 4:field_name\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[3], 'gi[3]');\n\t\t\t/* ==================================================== */\n\n\t\t\t/* we need to find out which graph items will be affected by saving this particular item */\n\t\t\t$item_list = db_fetch_assoc_prepared('SELECT\n\t\t\t\tgraph_template_item_id\n\t\t\t\tFROM graph_template_input_defs\n\t\t\t\tWHERE graph_template_input_id = ?',\n\t\t\t\tarray($matches[3]));\n\n\t\t\t/* loop through each item affected and update column data */\n\t\t\tif (cacti_sizeof($item_list)) {\n\t\t\t\tforeach ($item_list as $item) {\n\t\t\t\t\tif (empty($matches[1])) { // this is a new graph from template field\n\t\t\t\t\t\t$values['cg'][$matches[2]]['graph_template_item'][$item['graph_template_item_id']][$matches[4]] = $val;\n\t\t\t\t\t} else { // this is a data query field\n\t\t\t\t\t\t$values['sg'][$matches[1]][$matches[2]]['graph_template_item'][$item['graph_template_item_id']][$matches[4]] = $val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif (preg_match('/^d_(\\d+)_(\\d+)_(\\d+)_(\\w+)/', $var, $matches)) { // 1: snmp_query_id, 2: graph_template_id, 3: data_template_id, 4:field_name\n\t\t\tif (empty($matches[1])) { // this is a new graph from template field\n\t\t\t\t$values['cg'][$matches[2]]['data_template'][$matches[3]][$matches[4]] = $val;\n\t\t\t} else { // this is a data query field\n\t\t\t\t$values['sg'][$matches[1]][$matches[2]]['data_template'][$matches[3]][$matches[4]] = $val;\n\t\t\t}\n\t\t} elseif (preg_match('/^c_(\\d+)_(\\d+)_(\\d+)_(\\d+)/', $var, $matches)) {\n\t\t\t/**\n\t\t\t * Custom Data.  Need to validate these against the input regular expressions\n\t\t\t *\n\t\t\t * Index offsets\n\t\t\t * 1: snmp_query_id, 2: graph_template_id, 3: data_template_id, 4:data_input_field_id\n\t\t\t */\n\t\t\t$input_field_id = $matches[4];\n\t\t\t$idata          = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($input_field_id));\n\n\t\t\t$val = form_input_validate($val, $var, $idata['regexp_match'], $idata['allow_nulls'], 3);\n\n\t\t\tif (empty($matches[1])) { // this is a new graph from template field\n\t\t\t\t$values['cg'][$matches[2]]['custom_data'][$matches[3]][$matches[4]] = $val;\n\t\t\t} else { // this is a data query field\n\t\t\t\t$values['sg'][$matches[1]][$matches[2]]['custom_data'][$matches[3]][$matches[4]] = $val;\n\t\t\t}\n\t\t} elseif (preg_match('/^di_(\\d+)_(\\d+)_(\\d+)_(\\d+)_(\\w+)/', $var, $matches)) { // 1: snmp_query_id, 2: graph_template_id, 3: data_template_id, 4:local_data_template_rrd_id, 5:field_name\n\t\t\tif (empty($matches[1])) { // this is a new graph from template field\n\t\t\t\t$values['cg'][$matches[2]]['data_template_item'][$matches[4]][$matches[5]] = $val;\n\t\t\t} else { // this is a data query field\n\t\t\t\t$values['sg'][$matches[1]][$matches[2]]['data_template_item'][$matches[4]][$matches[5]] = $val;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!is_error_message()) {\n\t\tdebug_log_clear('new_graphs');\n\n\t\tforeach ($selected_graphs_array as $form_type => $form_array) {\n\t\t\t$current_form_type = $form_type;\n\n\t\t\tforeach ($form_array as $form_id1 => $form_array2) {\n\t\t\t\t/* enumerate information from the arrays stored in post variables */\n\t\t\t\tcreate_save_graph($host_id, $form_type, $form_id1, $form_array2, $values);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$form_data = $_SESSION['sess_graphs_new_form'];\n\t\tkill_session_var('sess_graphs_new_form');\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\tvar formData=<?php print $form_data;?>;\n\n\t\t$(function() {\n\t\t\tloadPageUsingPost('graphs_new.php', formData);\n\t\t});\n\t\t</script>\n\t\t<?php\n\n\t\texit;\n\t}\n}\n\nfunction create_filter($host, $snmp_queries) {\n\tglobal $item_rows;\n\n\t$all = array('-2' => __('All'));\n\t$gt  = array('-1' => __('Graph Template Based'));\n\n\t$graph_types = array_rekey($snmp_queries, 'id', 'name');\n\n\t$graph_types = $all + $gt + $graph_types;\n\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'         => 'drop_callback',\n\t\t\t\t\t'friendly_name'  => __('Device'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'sql'            => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'         => 'ajax_hosts',\n\t\t\t\t\t'id'             => $host['id'],\n\t\t\t\t\t'value'          => $host['description'],\n\t\t\t\t\t'on_change'      => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'graph_type' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Graph Type'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => read_user_setting('graph_type', read_config_option('default_graphs_new_dropdown'), true),\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $graph_types,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Rows'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t),\n\t\t\t'save' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Save'),\n\t\t\t\t'title'   => __('Save the Filter for the User'),\n\t\t\t\t'url'     => 'graphs_new.php?action=ajax_save_filter',\n\t\t\t\t'status'  => __('Filter Settings Saved')\n\t\t\t)\n\t\t),\n\t\t'links' => array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Edit this Device'),\n\t\t\t\t'url'     => 'host.php?action=edit&id=' . get_request_var('host_id'),\n\t\t\t\t'class'   => 'ti ti-tool newDevice'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Create New Device'),\n\t\t\t\t'url'     => 'host.php?action=edit',\n\t\t\t\t'class'   => 'ti ti-device-cog editDevice'\n\t\t\t),\n\t\t)\n\t);\n\n\t/* process plugin links */\n\tob_start();\n\n\t/**\n\t * Prototype - We will convert links into nice glyphs potentially\n\t *\n\t * <span class=\"linkMarker\">*</span>\n\t * <a\n\t *   class=\"autocreate linkEditMain\"\n\t *   href=\"plugins/thold/thold.php?action=autocreate&host_id=99\"\n\t * >Auto-create Thresholds</a>\n\t * <br>';\n\t */\n\tapi_plugin_hook('graphs_new_top_links');\n\n\t$new_links = ob_get_clean();\n\n\t/**\n\t * Now that we have anchors, let's add them to the\n\t * filter array.\n\t */\n\tif ($new_links != '') {\n\t\t$links = new DOMDocument();\n\t\t$links->loadHTML($new_links);\n\t\t$anchors = $links->getElementsByTagName('a');\n\n\t\tif (cacti_sizeof($anchors)) {\n\t\t\tforeach($anchors as $a) {\n\t\t\t\t$name = $a->textContent;\n\t\t\t\t$href = $a->getAttribute('href');\n\n\t\t\t\t$filters['links'][] = array(\n\t\t\t\t\t'display' => $name,\n\t\t\t\t\t'url'     => $href,\n\t\t\t\t\t'class'   => 'fa fa-funny'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $filters;\n}\n\nfunction process_sanitize_draw_filter($render = false, $header_label = '', $host = array(), $snmp_queries = array()) {\n\t$filters = create_filter($host, $snmp_queries);\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header_label, 'graphs_new.php', 'form_gn', 'sess_gn', '', '', false);\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction graphs() {\n\tglobal $config, $item_rows;\n\n\tif (isempty_request_var('host_id')) {\n\t\t$host = db_fetch_row('SELECT id, description, hostname, host_template_id\n\t\t\tFROM host\n\t\t\tORDER BY description ASC\n\t\t\tLIMIT 1');\n\n\t\tset_request_var('host_id', $host['id']);\n\t} else {\n\t\t$host = db_fetch_row_prepared('SELECT id, description, hostname, host_template_id\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id')));\n\t}\n\n\tif (cacti_sizeof($host)) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM host_template\n\t\t\tWHERE id = ?',\n\t\t\tarray($host['host_template_id']));\n\n\t\t$header_label = __esc('New Graphs [ %s - %s ] [ %s ]', $host['description'], $host['hostname'], (!empty($host['host_template_id']) ? $name:''));\n\t} else {\n\t\t$header_label = __('New Graphs [ Search for a Device First ]');\n\t}\n\n\t$snmp_queries = db_fetch_assoc_prepared('SELECT sq.id, sq.name\n\t\tFROM snmp_query AS sq\n\t\tINNER JOIN host_snmp_query AS hsq\n\t\tON hsq.snmp_query_id = sq.id\n\t\tWHERE hsq.host_id = ?\n\t\tORDER BY sq.name',\n\t\tarray($host['id']));\n\n\tprocess_sanitize_draw_filter(true, $header_label, $host, $snmp_queries);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_user_setting('num_rows_table', read_config_option('num_rows_table'), true);\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tform_start('graphs_new.php', 'chk');\n\n\t$total_rows = cacti_sizeof(db_fetch_assoc_prepared('SELECT graph_template_id\n\t\tFROM host_graph\n\t\tWHERE host_id = ?',\n\t\tarray(get_request_var('host_id'))));\n\n\t$i = 0;\n\n\tif (get_request_var('changed')) {\n\t\tforeach ($snmp_queries as $query) {\n\t\t\tkill_session_var('sess_grn_page' . $query['id']);\n\t\t\tunset_request_var('page' . $query['id']);\n\t\t\tload_current_session_value('page' . $query['id'], 'sess_grn_page' . $query['id'], '1');\n\t\t}\n\t}\n\n\tif (get_request_var('graph_type') > 0) {\n\t\t/* validate the page filter */\n\t\tif (isset_request_var('page' . get_request_var('graph_type'))) {\n\t\t\tget_filter_request_var('page' . get_request_var('graph_type'));\n\t\t}\n\n\t\tload_current_session_value('page' . get_request_var('graph_type'), 'sess_grn_page' . get_request_var('graph_type'), '1');\n\t} elseif (get_request_var('graph_type') == -2) {\n\t\tforeach ($snmp_queries as $query) {\n\t\t\t/* validate the page filter */\n\t\t\tif (isset_request_var('page' . $query['id'])) {\n\t\t\t\tget_filter_request_var('page' . $query['id']);\n\t\t\t}\n\n\t\t\tload_current_session_value('page' . $query['id'], 'sess_grn_page' . $query['id'], '1');\n\t\t}\n\t}\n\n\t$script = \"<script type='text/javascript'>\\nvar created_graphs = new Array();\\n\";\n\n\tif (get_request_var('graph_type') < 0) {\n\t\thtml_start_box(__('New Graph Template'), '100%', '', '3', 'center', '');\n\n\t\t$available_graph_templates = db_fetch_assoc_prepared('SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\t\tON sqg.graph_template_id = gt.id\n\t\t\tWHERE sqg.name IS NULL\n\t\t\tAND gt.id NOT IN (SELECT graph_template_id FROM host_graph WHERE host_id = ?)\n\t\t\tAND gt.multiple = \"\"\n\t\t\tUNION\n\t\t\tSELECT id, name\n\t\t\tFROM graph_templates AS gt\n\t\t\tWHERE multiple = \"on\"\n\t\t\tORDER BY name',\n\t\t\tarray(get_request_var('host_id'))\n\t\t);\n\n\t\t/* create a row at the bottom that lets the user create any graph they choose */\n\t\tprint \"<tr class='even'>\n\t\t\t<td class='left' style='width:1%'>\";\n\n\t\tform_dropdown('cg_g', $available_graph_templates, 'name', 'id', '', __('(Select a graph type to create)'), '', 'textArea');\n\n\t\tprint '</td>\n\t\t\t<td class=\"left\">\n\t\t\t\t<input type=\"submit\" class=\"create ui-button ui-corner-all ui-widget ui-state-active\" id=\"submit\" value=\"' . __('Create') . '\" role=\"button\">\n\t\t\t</td>\n\t\t</tr>';\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Graph Templates'), '100%', '', '3', 'center', '');\n\n\t\tprint \"<tr class='tableHeader'>\n\t\t\t<th class='tableSubHeaderColumn'>\" . __('Graph Template Name') . \"</th>\n\t\t\t<th class='tableSubHeaderCheckbox'><input class='checkbox' type='checkbox' id='all_cg' title='\" . __esc('Select All') . \"' onClick='selectAll(\\\"sg\\\",this.checked)'><label class='formCheckboxLabel' title='\" . __esc('Select All Rows'). \"' for='all_cg'></label></th>\n\t\t</tr>\";\n\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = 'AND gt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (!isempty_request_var('host_id')) {\n\t\t\t$template_graphs = db_fetch_assoc_prepared('SELECT\n\t\t\t\tDISTINCT gl.graph_template_id\n\t\t\t\tFROM graph_local AS gl\n\t\t\t\tINNER JOIN graph_templates AS gt\n\t\t\t\tON gt.id=gl.graph_template_id\n\t\t\t\tWHERE gl.host_id = ?\n\t\t\t\tAND gt.multiple = \"\"\n\t\t\t\tAND gl.snmp_query_id = 0\n\t\t\t\tGROUP BY gl.graph_template_id',\n\t\t\t\tarray($host['id']));\n\n\t\t\tif (cacti_sizeof($template_graphs)) {\n\t\t\t\t$script .= 'var gt_created_graphs = new Array(';\n\n\t\t\t\t$cg_ctr = 0;\n\n\t\t\t\tforeach ($template_graphs as $template_graph) {\n\t\t\t\t\t$script .= (($cg_ctr > 0) ? ',' : '') . \"'\" . $template_graph['graph_template_id'] . \"'\";\n\n\t\t\t\t\t$cg_ctr++;\n\t\t\t\t}\n\n\t\t\t\t$script .= \");\\n\";\n\t\t\t} else {\n\t\t\t\t$script .= 'var gt_created_graphs = new Array();';\n\t\t\t}\n\t\t}\n\n\t\t$graph_templates = db_fetch_assoc_prepared(\"SELECT\n\t\t\tgt.id AS graph_template_id,\n\t\t\tgt.name AS graph_template_name\n\t\t\tFROM host_graph AS hg\n\t\t\tINNER JOIN graph_templates AS gt\n\t\t\tON hg.graph_template_id=gt.id\n\t\t\tWHERE hg.host_id = ?\n\t\t\t$sql_where\n\t\t\tORDER BY gt.name\",\n\t\t\tarray(get_request_var('host_id'))\n\t\t);\n\n\t\t/* create a row for each graph template associated with the host template */\n\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\tforeach ($graph_templates as $graph_template) {\n\t\t\t\t$query_row = $graph_template['graph_template_id'];\n\n\t\t\t\tprint \"<tr id='gt_line$query_row' style='display:table-row' class='selectable \" . (($i % 2 == 0) ? 'odd' : 'even') . \"'>\";\n\n\t\t\t\t$i++;\n\n\t\t\t\tprint \"<td>\n\t\t\t\t\t<span id='gt_text$query_row\" . \"_0'>\" . filter_value($graph_template['graph_template_name'], get_request_var('filter')) . \"</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='checkbox' style='width:1%;'>\n\t\t\t\t\t\t<input class='checkbox' type='checkbox' name='cg_$query_row' id='cg_$query_row'>\n\t\t\t\t\t\t<label class='formCheckboxLabel' for='cg_$query_row'></label>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (get_request_var('graph_type') != -1 && !isempty_request_var('host_id')) {\n\t\t$params   = array();\n\t\t$params[] = $host['id'];\n\n\t\tif (get_request_var('graph_type') != -2) {\n\t\t\t$params[] = get_request_var('graph_type');\n\t\t\t$sql      = ' AND sq.id = ?';\n\t\t} else {\n\t\t\t$sql = '';\n\t\t}\n\n\t\t$snmp_queries = db_fetch_assoc_prepared(\"SELECT sq.id, sq.name\n\t\t\tFROM snmp_query AS sq\n\t\t\tINNER JOIN host_snmp_query AS hsq\n\t\t\tON hsq.snmp_query_id = sq.id\n\t\t\tWHERE hsq.host_id = ?\n\t\t\t$sql\n\t\t\tORDER BY sq.name\",\n\t\t\t$params);\n\n\t\tif (cacti_sizeof($snmp_queries)) {\n\t\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\t\tunset($total_rows);\n\n\t\t\t\tif (!get_request_var('changed')) {\n\t\t\t\t\t$page = get_filter_request_var('page' . $snmp_query['id']);\n\t\t\t\t} else {\n\t\t\t\t\t$page = 1;\n\t\t\t\t}\n\n\t\t\t\t$xml_array = get_data_query_array($snmp_query['id']);\n\n\t\t\t\t$num_input_fields   = 0;\n\t\t\t\t$num_visible_fields = 0;\n\t\t\t\t$message_raised     = false;\n\n\t\t\t\tif (cacti_sizeof($xml_array)) {\n\t\t\t\t\t/* loop through once so we can find out how many input fields there are */\n\t\t\t\t\tif (isset($xml_array['fields'])) {\n\t\t\t\t\t\tforeach ($xml_array['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\tif (!is_array($field_array)) {\n\t\t\t\t\t\t\t\tif (!$message_raised) {\n\t\t\t\t\t\t\t\t\traise_message('xmlerror', __('Error Parsing Data Query Resource XML file for Data Query \\'%s\\' with id of \\'%s\\'', $snmp_query['id']), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t\t\t\t$message_raised = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} elseif (isset($field_array['direction'])) {\n\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t\t$num_input_fields++;\n\n\t\t\t\t\t\t\t\t\tif (!isset($total_rows)) {\n\t\t\t\t\t\t\t\t\t\t$total_rows = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\t\t\tFROM host_snmp_cache\n\t\t\t\t\t\t\t\t\t\t\tWHERE host_id = ?\n\t\t\t\t\t\t\t\t\t\t\tAND snmp_query_id = ?\n\t\t\t\t\t\t\t\t\t\t\tAND field_name = ?',\n\t\t\t\t\t\t\t\t\t\t\tarray($host['id'], $snmp_query['id'], $field_name));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\traise_message('xmlfielderr' . $field_name, __('Error Parsing Data Query Resource XML file for Data Query \\'%s\\' with id \\'%s\\'.  Field Name \\'%s\\' missing a \\'direction\\' attribute', $snmp_query['name'], $snmp_query['id'], $field_name), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif (!$message_raised) {\n\t\t\t\t\t\traise_message('xmlerror', __('Error Parsing Data Query Resource XML file for Data Query \\'%s\\' with id \\'%s\\'', $snmp_query['name'], $snmp_query['id']), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t$message_raised = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!isset($total_rows)) {\n\t\t\t\t\t$total_rows = 0;\n\t\t\t\t}\n\n\t\t\t\t$snmp_query_graphs = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\tWHERE snmp_query_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($snmp_query['id']));\n\n\t\t\t\tif (cacti_sizeof($snmp_query_graphs)) {\n\t\t\t\t\tforeach ($snmp_query_graphs as $snmp_query_graph) {\n\t\t\t\t\t\t$created_graphs = db_fetch_assoc_prepared('SELECT DISTINCT snmp_index\n\t\t\t\t\t\t\tFROM graph_local\n\t\t\t\t\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\t\t\t\t\tAND host_id = ?',\n\t\t\t\t\t\t\tarray($snmp_query_graph['id'], $host['id']));\n\n\t\t\t\t\t\t$script .= 'created_graphs[' . $snmp_query_graph['id'] . '] = new Array(';\n\n\t\t\t\t\t\t$cg_ctr = 0;\n\n\t\t\t\t\t\tif (cacti_sizeof($created_graphs)) {\n\t\t\t\t\t\t\tforeach ($created_graphs as $created_graph) {\n\t\t\t\t\t\t\t\t$script .= ($cg_ctr > 0 ? ',' : '') . \"'\" . encode_data_query_index($created_graph['snmp_index']) . \"'\";\n\t\t\t\t\t\t\t\t++$cg_ctr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$script .= \")\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint \"<div class='cactiTable'>\n\t\t\t\t\t<div class='cactiTableTitleRow'>\n\t\t\t\t\t\t<div class='cactiTableTitle'>\n\t\t\t\t\t\t\t<span>\" . __esc('Data Query [%s]', $snmp_query['name']) . \"</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class='cactiTableButton'>\n\t\t\t\t\t\t\t<span class='reloadquery ti ti-refresh' id='reload\" . $snmp_query['id'] . \"' data-id='\" . $snmp_query['id'] . \"'></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\";\n\n\t\t\t\tif (cacti_sizeof($xml_array)) {\n\t\t\t\t\t$html_dq_header = '';\n\n\t\t\t\t\t/* if there is a where clause, get the matching snmp_indexes */\n\t\t\t\t\t$sql_where = '';\n\n\t\t\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t\t\t$sql_where = '';\n\t\t\t\t\t\t$indexes   = db_fetch_assoc_prepared('SELECT DISTINCT snmp_index\n\t\t\t\t\t\t\tFROM host_snmp_cache\n\t\t\t\t\t\t\tWHERE field_value LIKE ?\n\t\t\t\t\t\t\tAND snmp_query_id = ?\n\t\t\t\t\t\t\tAND host_id = ?',\n\t\t\t\t\t\t\tarray('%' . get_request_var('filter') . '%', $snmp_query['id'], $host['id']));\n\n\t\t\t\t\t\tif (cacti_sizeof($indexes)) {\n\t\t\t\t\t\t\tforeach ($indexes as $index) {\n\t\t\t\t\t\t\t\tif ($sql_where != '') {\n\t\t\t\t\t\t\t\t\t$sql_where .= \", '\" . $index['snmp_index'] . \"'\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$sql_where .= \" AND snmp_index IN('\" . $index['snmp_index'] . \"'\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$sql_where .= ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (get_request_var('filter') == '' || (get_request_var('filter') != '' && cacti_sizeof($indexes))) {\n\t\t\t\t\t\t/* determine the sort order */\n\t\t\t\t\t\tif (isset($xml_array['index_order_type'])) {\n\t\t\t\t\t\t\tif ($xml_array['index_order_type'] == 'numeric') {\n\t\t\t\t\t\t\t\t$sql_order = 'ORDER BY CAST(snmp_index AS unsigned)';\n\t\t\t\t\t\t\t} elseif ($xml_array['index_order_type'] == 'alphabetic') {\n\t\t\t\t\t\t\t\t$sql_order = 'ORDER BY snmp_index';\n\t\t\t\t\t\t\t} elseif ($xml_array['index_order_type'] == 'natural') {\n\t\t\t\t\t\t\t\t$sql_order = 'ORDER BY INET_ATON(snmp_index)';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$sql_order = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$sql_order = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* get the unique field values from the database */\n\t\t\t\t\t\t$field_names = db_fetch_assoc_prepared('SELECT DISTINCT field_name\n\t\t\t\t\t\t\tFROM host_snmp_cache\n\t\t\t\t\t\t\tWHERE host_id = ?\n\t\t\t\t\t\t\tAND snmp_query_id = ?',\n\t\t\t\t\t\t\tarray($host['id'], $snmp_query['id']));\n\n\t\t\t\t\t\t/* build magic query */\n\t\t\t\t\t\t$sql_query          = 'SELECT host_id, snmp_query_id, snmp_index';\n\t\t\t\t\t\t$num_visible_fields = cacti_sizeof($field_names);\n\t\t\t\t\t\t$i                  = 0;\n\n\t\t\t\t\t\tif (cacti_sizeof($field_names)) {\n\t\t\t\t\t\t\tforeach ($field_names as $column) {\n\t\t\t\t\t\t\t\t$field_name = $column['field_name'];\n\t\t\t\t\t\t\t\t$sql_query .= \", MAX(CASE WHEN field_name='$field_name' THEN field_value ELSE NULL END) AS '$field_name'\";\n\t\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$sql_query_worder = $sql_query . ' FROM host_snmp_cache\n\t\t\t\t\t\t\tWHERE host_id=' . $host['id'] . '\n\t\t\t\t\t\t\tAND snmp_query_id=' . $snmp_query['id'] . \"\n\t\t\t\t\t\t\t$sql_where\n\t\t\t\t\t\t\tGROUP BY host_id, snmp_query_id, snmp_index\n\t\t\t\t\t\t\t$sql_order\n\t\t\t\t\t\t\tLIMIT \" . ($rows * ($page - 1)) . ',' . $rows;\n\n\t\t\t\t\t\t$sql_query .= ' FROM host_snmp_cache\n\t\t\t\t\t\t\tWHERE host_id=' . $host['id'] . '\n\t\t\t\t\t\t\tAND snmp_query_id=' . $snmp_query['id'] . \"\n\t\t\t\t\t\t\t$sql_where\n\t\t\t\t\t\t\tGROUP BY host_id, snmp_query_id, snmp_index\n\t\t\t\t\t\t\tLIMIT \" . ($rows * ($page - 1)) . ',' . $rows;\n\n\t\t\t\t\t\t$rows_query = 'SELECT host_id, snmp_query_id, snmp_index\n\t\t\t\t\t\t\tFROM host_snmp_cache\n\t\t\t\t\t\t\tWHERE host_id=' . $host['id'] . '\n\t\t\t\t\t\t\tAND snmp_query_id=' . $snmp_query['id'] . \"\n\t\t\t\t\t\t\t$sql_where\n\t\t\t\t\t\t\tGROUP BY host_id, snmp_query_id, snmp_index\";\n\n\t\t\t\t\t\t$snmp_query_indexes = db_fetch_assoc($sql_query);\n\n\t\t\t\t\t\tif (cacti_sizeof($snmp_query_indexes)) {\n\t\t\t\t\t\t\t$snmp_query_indexes = db_fetch_assoc($sql_query_worder);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$total_rows = cacti_sizeof(db_fetch_assoc($rows_query));\n\n\t\t\t\t\t\tif (($page - 1) * $rows > $total_rows) {\n\t\t\t\t\t\t\t$page = 1;\n\t\t\t\t\t\t\tset_request_var('page' . $query['id'], $page);\n\t\t\t\t\t\t\tload_current_session_value('page' . $query['id'], 'sess_grn_page' . $query['id'], '1');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$nav = html_nav_bar('graphs_new.php', MAX_DISPLAY_PAGES, $page, $rows, $total_rows, 15, __('Items'), 'page' . $snmp_query['id']);\n\n\t\t\t\t\t\tprint $nav;\n\n\t\t\t\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t\t\t\tforeach ($xml_array['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\tif (($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') && cacti_sizeof($field_names)) {\n\t\t\t\t\t\t\t\tforeach ($field_names as $row) {\n\t\t\t\t\t\t\t\t\tif ($row['field_name'] == $field_name) {\n\t\t\t\t\t\t\t\t\t\t$html_dq_header .= \"<th class='tableSubHeaderColumn'>\" . $field_array['name'] . '</th>';\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!cacti_sizeof($snmp_query_indexes)) {\n\t\t\t\t\t\t\tprint \"<tr class='odd'><td>\" . __('This Data Query returned 0 rows, perhaps there was a problem executing this Data Query.') . \"<a href='\" . html_escape('host.php?action=query_verbose&id=' . $snmp_query['id'] . '&host_id=' . $host['id']) . \"'>\" . __('You can run this Data Query in debug mode') . '</a> ' . __('From there you can get more information.') . '</td></tr>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprint \"<tr class='tableHeader'>\n\t\t\t\t\t\t\t\t\t$html_dq_header\n\t\t\t\t\t\t\t\t\t<th class='tableSubHeaderCheckbox'><input class='checkbox' id='all_\" . $snmp_query['id'] . \"' type='checkbox' name='all_\" . $snmp_query['id'] . \"' title='\" . __esc('Select All') . \"' onClick='selectAll(\\\"sg_\" . $snmp_query['id'] . \"\\\",this.checked)'><label class='formCheckboxLabel' title='\" . __esc('Select All Rows'). \"' for='all_\" . $snmp_query['id'] . \"'></label></th>\n\t\t\t\t\t\t\t\t</tr>\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* disable graph creation if there are no associated Graph Templates */\n\t\t\t\t\t\t$enabled = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\t\tWHERE snmp_query_id = ?',\n\t\t\t\t\t\t\tarray($snmp_query['id']));\n\n\t\t\t\t\t\tif (!$enabled) {\n\t\t\t\t\t\t\t$disabled_text = __esc('The index is disabled due to the Data Query having no associated Graph Templates.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$disabled_text = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$row_counter    = 0;\n\t\t\t\t\t\t$column_counter = 0;\n\t\t\t\t\t\t$fields         = array_rekey($field_names, 'field_name', 'field_name');\n\n\t\t\t\t\t\tif (cacti_sizeof($snmp_query_indexes)) {\n\t\t\t\t\t\t\tforeach ($snmp_query_indexes as $row) {\n\t\t\t\t\t\t\t\t$query_row = $snmp_query['id'] . '_' . encode_data_query_index($row['snmp_index']);\n\n\t\t\t\t\t\t\t\tif ($enabled) {\n\t\t\t\t\t\t\t\t\tprint \"<tr id='dqline$query_row' class='selectable \" . (($row_counter % 2 == 0) ? 'odd' : 'even') . \"'>\";\n\t\t\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint \"<tr id='nodqline$query_row' title='$disabled_text' class='selectable notemplate \" . (($row_counter % 2 == 0) ? 'odd' : 'even') . \"'>\";\n\t\t\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$column_counter = 0;\n\n\t\t\t\t\t\t\t\tforeach ($xml_array['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'input' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t\t\tif (in_array($field_name, $fields, true)) {\n\t\t\t\t\t\t\t\t\t\t\tif (isset($row[$field_name])) {\n\t\t\t\t\t\t\t\t\t\t\t\tprint \"<td><span class='textOverflow' id='text$query_row\" . '_' . $column_counter . \"'>\" . filter_value($row[$field_name], get_request_var('filter')) . '</span></td>';\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tprint \"<td><span class='textOverflow' id='text$query_row\" . '_' . $column_counter . \"'></span></td>\";\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t$column_counter++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tprint \"<td style='width:1%;' class='checkbox'>\";\n\n\t\t\t\t\t\t\t\tif ($enabled) {\n\t\t\t\t\t\t\t\t\tprint \"<input class='checkbox' type='checkbox' name='sg_$query_row' id='sg_$query_row'><label class='formCheckboxLabel' for='sg_$query_row'></label>\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprint \"<input class='checkbox' type='checkbox' disabled name='sg_$query_row' id='sg_$query_row'><label class='formCheckboxLabel' for='sg_$query_row'></label>\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\t\t\tprint '</tr>';\n\n\t\t\t\t\t\t\t\t$row_counter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t\t\t\tprint \"<tr class='odd'><td class='textError'>\" . __('Search Returned no Rows.') . '</td></tr>';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t\t\tprint \"<tr class='odd'><td class='textError'>\" . __('Error in Data Query.  This could be due to the following: File Permissions, or a missing or improperly formatted Data Query XML file.') . '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\thtml_end_box();\n\n\t\t\t\t/* draw the graph template drop down here */\n\t\t\t\t$data_query_graphs = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\tWHERE snmp_query_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($snmp_query['id']));\n\n\t\t\t\tif (cacti_sizeof($data_query_graphs) == 1) {\n\t\t\t\t\tprint \"<input type='hidden' id='sgg_\" . $snmp_query['id'] . \"' name='sgg_\" . $snmp_query['id'] . \"' value='\" . $data_query_graphs[0]['id'] . \"'>\";\n\t\t\t\t} elseif (cacti_sizeof($data_query_graphs) > 1) {\n\t\t\t\t\tprint \"<div class='break'></div>\";\n\n\t\t\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t\t\t$selected = store_get_selected_dq_index($snmp_query['id']);\n\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<img src='\" . CACTI_PATH_URL . \"images/arrow.gif' alt=''>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right' style='width:100%'>\n\t\t\t\t\t\t\t\" . __('Select a Graph Type to Create') . \"\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget default' id='default_\" .  $snmp_query['id'] . \"' value='\" . __esc('Set Default') . \"' title='\" . __esc('Make selection default') . \"'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<select class='dqselect' name='sgg_\" . $snmp_query['id'] . \"' id='sgg_\" . $snmp_query['id'] . \"' onChange='dqUpdateDeps(\" . $snmp_query['id'] . ',' . (isset($column_counter) ? $column_counter:'') . \");'>\n\t\t\t\t\t\t\t\t\";\n\t\t\t\t\thtml_create_list($data_query_graphs, 'name', 'id', $selected);\n\t\t\t\t\tprint '\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>';\n\n\t\t\t\t\thtml_end_box();\n\t\t\t\t}\n\n\t\t\t\t$script .= 'dqUpdateDeps(' . $snmp_query['id'] . ',' . $num_visible_fields . \");\\n\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($script != '') {\n\t\t$script .= \"$('.default').click(function() { $.get('graphs_new.php?action=ajax_save&query=\" . (isset($snmp_query['id']) ? $snmp_query['id']:'') . \"'+'&item='+$(\\\".dqselect\\\").val()).fail(function(data) { getPresentHTTPError(data); });}); $('tr.notemplate').tooltip();</script>\";\n\t\tprint $script;\n\t}\n\n\tform_hidden_box('save_component_graph', '1', '');\n\n\tif (!isempty_request_var('host_id')) {\n\t\tform_hidden_box('host_id', $host['id'], '0');\n\t\tform_hidden_box('host_template_id', $host['host_template_id'], '0');\n\t}\n\n\tif (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER'] != '') {\n\t\t$referer_url = parse_url($_SERVER['HTTP_REFERER']);\n\n\t\tif ($_SERVER['SERVER_NAME'] != $referer_url['host']) {\n\t\t\t/* Potential security exploit 1 */\n\t\t\tset_request_var('returnto', 'host.php');\n\t\t} elseif (strpos($_SERVER['HTTP_REFERER'], 'graphs_new') === false) {\n\t\t\tset_request_var('returnto', basename($_SERVER['HTTP_REFERER']));\n\t\t} else {\n\t\t\tset_request_var('returnto', 'host.php');\n\t\t}\n\t} elseif (isset_request_var('returnto') && get_nfilter_request_var('returnto') != '') {\n\t\t$returnto_url = parse_url(get_nfilter_request_var('returnto'));\n\n\t\tif ($_SERVER['SERVER_NAME'] != $returnto_url['host']) {\n\t\t\t/* Potential security exploit 2 */\n\t\t\tset_request_var('returnto', 'host.php');\n\t\t}\n\t}\n\n\tload_current_session_value('returnto', 'sess_grn_returnto', '');\n\n\tif (strpos(get_nfilter_request_var('returnto'), 'host.php') === false) {\n\t\tset_request_var('returnto', '');\n\t}\n\n\tform_save_button(get_nfilter_request_var('returnto'), 'create');\n}\n"
        },
        {
          "name": "help.php",
          "type": "blob",
          "size": 4.2255859375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\n\ninclude('./include/auth.php');\n\nif (isset_request_var('error')) {\n\t$page  = basename(get_nfilter_request_var('page'));\n\t$error = get_filter_request_var('error');\n\n\tif (isset($_SESSION['sess_user_id'])) {\n\t\t$username = get_username($_SESSION['sess_user_id']);\n\t} else {\n\t\t$username = 'unknown';\n\t}\n\n\t$message = sprintf('WARNING: Cacti Page:%s for User:%s Generated a Fatal Error:%d', $page, $username, $error);\n\n\tcacti_log($message, false);\n\n\tif (debounce_run_notification('page_error_' . $page)) {\n\t\tadmin_email(__('Cacti System Warning'), __('WARNING: Cacti Page:%s for User:%s Generated a Fatal Error %d!', $page, $username, $error));\n\t}\n} elseif (isset_request_var('page')) {\n\tget_filter_request_var('page', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\n\t$page = str_replace('.html', '.md', get_request_var('page'));\n\n\t$fgc_contextoption = array(\n\t\t'ssl' => array(\n\t\t\t'verify_peer'       => false,\n\t\t\t'verify_peer_name'  => false,\n\t\t\t'allow_self_signed' => true,\n\t\t\t'timeout'           => 2,\n\t\t\t'ignore_errors'     => true\n\t\t)\n\t);\n\n\tif (read_config_option('local_documentation') != 'on') {\n\t\t$fgc_context   = stream_context_create($fgc_contextoption);\n\t\t$contents      = @file_get_contents('https://docs.cacti.net/' . $page, false, $fgc_context);\n\t\t$response_code = http_response_code();\n\t} else {\n\t\t$contents      = '';\n\t\t$response_code = 200;\n\t}\n\n\tif ($response_code != 200) {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'status'  => 'Not Reachable',\n\t\t\t\t'message' => __('The Document page \\'%s\\' count not be reached.  The Cacti Documentation site is not reachable.  The http error was \\'%s\\'.  Consider downloading an official release to obtain the latest documentation and hosting the documentation locally.', $page, $response_code)\n\t\t\t)\n\t\t);\n\t} elseif ($contents != '' && !preg_match('/does not appear to exist/i', $contents)) {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'status'   => 'Success',\n\t\t\t\t'location' => 'https://docs.cacti.net/' . $page\n\t\t\t)\n\t\t);\n\t} elseif ($contents != '' && preg_match('/does not appear to exist/i', $contents)) {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'status'   => 'Not Found',\n\t\t\t\t'location' => __esc('The Help File %s was not located on the Cacti Documentation Website.', $page) . '<br><br>' . __esc('Open a ticket at ') . '<a target=\"_blank\" href=\"https://github.com/cacti/cacti/issues\">' . __esc('Cacti GitHub Site') . '</a>.'\n\t\t\t)\n\t\t);\n\t} elseif (file_exists(CACTI_PATH_DOCS . '/' . $page)) {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'status'   => 'Success',\n\t\t\t\t'location' => CACTI_PATH_URL . 'docs/' . $page\n\t\t\t)\n\t\t);\n\t} else {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'status'  => 'Not Reachable',\n\t\t\t\t'message' => __('The Document page \\'%s\\' count not be reached locally.', $page, $response_code)\n\t\t\t)\n\t\t);\n\t}\n}\n"
        },
        {
          "name": "host.php",
          "type": "blob",
          "size": 65.578125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/ping.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Enable'),\n\t3 => __('Disable'),\n\t4 => __('Change Device Settings'),\n\t5 => __('Clear Statistics'),\n\t6 => __('Apply Automation Rules'),\n\t7 => __('Sync to Device Template')\n);\n\n$reports = db_fetch_cell_prepared('SELECT COUNT(*)\n\tFROM reports\n\tWHERE user_id = ?\n\tORDER BY name',\n\tarray($_SESSION[SESS_USER_ID])\n);\n\nif ($reports > 0) {\n\t$actions += array(\n\t\t8 => __('Place Device on Report')\n\t);\n}\n\n$actions = api_plugin_hook_function('device_action_array', $actions);\n\n/* set default action */\nset_default_action();\n\napi_plugin_hook('device_top');\n\nswitch (get_request_var('action')) {\n\tcase 'export':\n\t\thost_export();\n\n\t\tbreak;\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'reindex':\n\t\thost_reindex();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'gt_add':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_add_gt();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'gt_remove':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_remove_gt();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'query_add':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_add_query();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'query_remove':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_remove_query();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'query_change':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_change_query();\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'query_reload':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_reload_query();\n\t\traise_message('query_reloaded', __('Data Query Re-indexed.'), MESSAGE_LEVEL_INFO);\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'query_verbose':\n\t\tget_filter_request_var('host_id');\n\n\t\thost_reload_query();\n\t\traise_message('query_reloaded', __('Device Data Query Re-indexed.  Verbose output displayed.'), MESSAGE_LEVEL_INFO);\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id') . '&display_dq_details=true');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\thost_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ping_host':\n\t\t$host_id = get_filter_request_var('id');\n\t\tapi_device_ping_device($host_id);\n\n\t\tbreak;\n\tcase 'enable_debug':\n\t\tenable_device_debug(get_filter_request_var('host_id'));\n\t\traise_message('enable_debug', __('Device Debugging Enabled for Device.'), MESSAGE_LEVEL_INFO);\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'disable_debug':\n\t\tdisable_device_debug(get_filter_request_var('host_id'));\n\t\traise_message('disable_debug', __('Device Debugging Disabled for Device.'), MESSAGE_LEVEL_INFO);\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'repopulate':\n\t\tif (get_filter_request_var('host_id') > 0) {\n\t\t\tpush_out_host(get_request_var('host_id'));\n\t\t\traise_message('repopulate_message', __('Poller Cache for Device Refreshed.'), MESSAGE_LEVEL_INFO);\n\t\t} else {\n\t\t\traise_message('repopulate_error', __('ERROR: Invalid Device ID.'), MESSAGE_LEVEL_ERROR);\n\t\t}\n\n\t\theader('Location: host.php?action=edit&id=' . get_request_var('host_id'));\n\n\t\tbreak;\n\tcase 'ajax_locations':\n\t\tget_site_locations();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\thost();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction host_reindex() {\n\tglobal $config;\n\n\t$start = microtime(true);\n\n\tshell_exec(read_config_option('path_php_binary') . ' -q ' . CACTI_PATH_CLI . '/poller_reindex_hosts.php --qid=all --id=' . get_filter_request_var('host_id'));\n\n\t$end = microtime(true);\n\n\t$total_time = $end - $start;\n\n\t$items = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM host_snmp_cache\n\t\tWHERE host_id = ?',\n\t\tarray(get_filter_request_var('host_id'))\n\t);\n\n\traise_message('host_reindex', __('Device Reindex Completed in %0.2f seconds.  There were %d items updated.', $total_time, $items), MESSAGE_LEVEL_INFO);\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$actions['tr_' . $tree['id']] = __esc('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\nfunction get_site_locations() {\n\t$return  = array();\n\t$term    = get_nfilter_request_var('term');\n\t$host_id = $_SESSION['cur_device_id'];\n\n\t$sql_params = [\"%$term%\"];\n\t$sql_where = '';\n\n\tif (read_config_option('site_location_filter') && $_SESSION['cur_device_id']) {\n\t\t$site_id = db_fetch_cell_prepared('SELECT site_id\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\n\t\t$sql_params[] = $site_id;\n\t\t$sql_where    = 'AND site_id = ?';\n\t}\n\n\t$locations = db_fetch_assoc_prepared(\"SELECT DISTINCT location\n\t\tFROM host\n\t\tWHERE location LIKE ?\n\t\tAND location != ''\n\t\tAND location IS NOT NULL\n\t\t$sql_where\n\t\tORDER BY location\",\n\t\t$sql_params);\n\n\tif (cacti_sizeof($locations)) {\n\t\tforeach ($locations as $l) {\n\t\t\t$return[] = array('label' => $l['location'], 'value' => $l['location'], 'id' => $l['location']);\n\t\t}\n\t}\n\n\tif (!cacti_sizeof($return)) {\n\t\t$return[] = array('label' => __('None'), 'value' => '', 'id' => __('None'));\n\t}\n\n\tprint json_encode($return);\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_host')) {\n\t\tif (get_nfilter_request_var('snmp_version') == 3 && (get_nfilter_request_var('snmp_password') != get_nfilter_request_var('snmp_password_confirm'))) {\n\t\t\traise_message(14);\n\t\t} elseif (get_nfilter_request_var('snmp_version') == 3 && (get_nfilter_request_var('snmp_priv_passphrase') != get_nfilter_request_var('snmp_priv_passphrase_confirm'))) {\n\t\t\traise_message(13);\n\t\t} else {\n\t\t\tget_filter_request_var('id');\n\t\t\tget_filter_request_var('host_template_id');\n\n\t\t\t$host_id = api_device_save(\n\t\t\t\tget_nfilter_request_var('id'),\n\t\t\t\tget_nfilter_request_var('host_template_id'),\n\t\t\t\tget_nfilter_request_var('description'),\n\t\t\t\ttrim(get_nfilter_request_var('hostname')),\n\t\t\t\tget_nfilter_request_var('snmp_community'),\n\t\t\t\tget_nfilter_request_var('snmp_version'),\n\t\t\t\tget_nfilter_request_var('snmp_username'),\n\t\t\t\tget_nfilter_request_var('snmp_password'),\n\t\t\t\tget_nfilter_request_var('snmp_port'),\n\t\t\t\tget_nfilter_request_var('snmp_timeout'),\n\t\t\t\t(isset_request_var('disabled') ? get_nfilter_request_var('disabled') : ''),\n\t\t\t\tget_nfilter_request_var('availability_method'),\n\t\t\t\tget_nfilter_request_var('ping_method'),\n\t\t\t\tget_nfilter_request_var('ping_port'),\n\t\t\t\tget_nfilter_request_var('ping_timeout'),\n\t\t\t\tget_nfilter_request_var('ping_retries'),\n\t\t\t\tget_nfilter_request_var('notes'),\n\t\t\t\tget_nfilter_request_var('snmp_auth_protocol'),\n\t\t\t\tget_nfilter_request_var('snmp_priv_passphrase'),\n\t\t\t\tget_nfilter_request_var('snmp_priv_protocol'),\n\t\t\t\tget_nfilter_request_var('snmp_context'),\n\t\t\t\tget_nfilter_request_var('snmp_engine_id'),\n\t\t\t\tget_nfilter_request_var('max_oids'),\n\t\t\t\tget_nfilter_request_var('device_threads'),\n\t\t\t\tget_nfilter_request_var('poller_id'),\n\t\t\t\tget_nfilter_request_var('site_id'),\n\t\t\t\tget_nfilter_request_var('external_id'),\n\t\t\t\tget_nfilter_request_var('location'),\n\t\t\t\tget_nfilter_request_var('bulk_walk_size'),\n\t\t\t\tget_nfilter_request_var('snmp_options'),\n\t\t\t\tget_nfilter_request_var('snmp_retries')\n\t\t\t);\n\n\t\t\tif ($host_id !== false) {\n\t\t\t\tapi_plugin_hook_function('host_save', array('host_id' => $host_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host.php?action=edit&id=' . (empty($host_id) ? get_nfilter_request_var('id') : $host_id));\n\t}\n}\n\nfunction form_actions() {\n\tglobal $actions, $device_change_fields, $fields_host_edit;\n\tglobal $alignment, $graph_timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '2') { // Enable Selected Devices\n\t\t\t\tapi_device_enable_devices($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // Disable Selected Devices\n\t\t\t\tapi_device_disable_devices($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // change device options\n\t\t\t\tini_set('max_execution_time', '-1');\n\n\t\t\t\tapi_device_change_options($selected_items, $_POST);\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // Clear Statistics for Selected Devices\n\t\t\t\tapi_device_clear_statistics($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '7') { // sync to device template\n\t\t\t\tini_set('max_execution_time', '-1');\n\n\t\t\t\tapi_device_sync_device_templates($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '8') { // place device on report\n\t\t\t\tif (!reports_add_devices(get_filter_request_var('report_id'), $selected_items, get_filter_request_var('timespan'), get_filter_request_var('align'))) {\n\t\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\tFROM reports\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_request_var('report_id'))\n\t\t\t\t\t);\n\n\t\t\t\t\traise_message('reports_add_error', __('Unable to add some Devices to Report \\'%s\\'', $name), MESSAGE_LEVEL_WARN);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tini_set('max_execution_time', '-1');\n\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 2);\n\t\t\t\t}\n\n\t\t\t\tapi_device_remove_multi($selected_items, get_filter_request_var('delete_type'));\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\n\t\t\t\tforeach ($selected_items as $selected_item) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_HOST, get_nfilter_request_var('tree_item_id'), '', 0, $selected_item, 0, 1, 1, false);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == 6) { // automation\n\t\t\t\tautomation_log(__FUNCTION__ . ' called, action: ' . get_request_var('drp_action'), AUTOMATION_LOG_HIGH);\n\n\t\t\t\tautomation_log(__FUNCTION__ . ', items: ' . get_nfilter_request_var('selected_items'), AUTOMATION_LOG_HIGH);\n\n\t\t\t\t/* work on all selected hosts */\n\t\t\t\tforeach ($selected_items as $host_id) {\n\t\t\t\t\tautomation_update_device($host_id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('device_action_execute', get_nfilter_request_var('drp_action'));\n\t\t\t}\n\t\t}\n\n\t\t/* update snmpcache */\n\t\tsnmpagent_device_action_bottom(array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\tapi_plugin_hook_function('device_action_bottom', array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\theader('Location: host.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist   = '';\n\t\t$iarray  = array();\n\t\t$footer  = '';\n\t\t$reports = array();\n\n\t\tadd_tree_names_to_actions_array();\n\n\t\t/* loop through each of the host templates selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (get_nfilter_request_var('drp_action') == '4') { // Change Device options\n\t\t\t$form_array = array();\n\n\t\t\tforeach ($fields_host_edit as $field_name => $field_array) {\n\t\t\t\tif (api_device_change_field_match($field_name)) {\n\t\t\t\t\t$form_array += array($field_name => $fields_host_edit[$field_name]);\n\n\t\t\t\t\t$form_array[$field_name]['value'] = '';\n\n\t\t\t\t\tif (read_config_option('hide_form_description') == 'on') {\n\t\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['form_id']      = 0;\n\t\t\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t\t\t'name'          => 't_' . $field_name,\n\t\t\t\t\t\t'friendly_name' => __('Update this Field'),\n\t\t\t\t\t\t'class'         => 'ui-state-disabled',\n\t\t\t\t\t\t'value'         => ''\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tob_start();\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tdevice_change_javascript();\n\t\t\tdevice_javascript();\n\n\t\t\t$footer = ob_get_clean();\n\t\t} elseif (get_request_var('drp_action') == '8') { // Place on Report\n\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\tFROM reports\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($_SESSION[SESS_USER_ID])\n\t\t\t);\n\n\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\t$reports = array_rekey($reports, 'id', 'name');\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'host.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete the following Devices.'),\n\t\t\t\t\t'scont'    => __('Delete Device'),\n\t\t\t\t\t'pcont'    => __('Delete Devices'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'delete_type' => array(\n\t\t\t\t\t\t\t'method' => 'radio_button',\n\t\t\t\t\t\t\t'options' => array(\n\t\t\t\t\t\t\t\t'1' => array(\n\t\t\t\t\t\t\t\t\t'default' => 2,\n\t\t\t\t\t\t\t\t\t'title' => __('Leave all Graph(s) and Data Source(s) untouched.  Data Source(s) will be disabled however.')\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'2' => array(\n\t\t\t\t\t\t\t\t\t'default' => 2,\n\t\t\t\t\t\t\t\t\t'title' => __('Delete all associated Graph(s) and Data Source(s).')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable the following Devices.'),\n\t\t\t\t\t'scont'    => __('Enable Device'),\n\t\t\t\t\t'pcont'    => __('Enable Devices')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable the following Devices.'),\n\t\t\t\t\t'scont'    => __('Disable Device'),\n\t\t\t\t\t'pcont'    => __('Disable Devices')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Change settings for the following Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Change settings for the following Devices.'),\n\t\t\t\t\t'scont'    => __('Change Device'),\n\t\t\t\t\t'pcont'    => __('Change Devices'),\n\t\t\t\t\t'footer'   => $footer,\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Clear Statistics the following Device.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Clear Statistics the following Devices.'),\n\t\t\t\t\t'scont'    => __('Clear Statistics for Device'),\n\t\t\t\t\t'pcont'    => __('Clear Statistics for Devices')\n\t\t\t\t),\n\t\t\t\t7 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Synchronize Device to its Device Template.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Synchronize Devices to their Device Templates.'),\n\t\t\t\t\t'scont'    => __('Synchronize Device Template'),\n\t\t\t\t\t'pcont'    => __('Synchronize Devices Templates')\n\t\t\t\t),\n                8 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Place the following Device on a Report.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Place the following Devices on a Report.'),\n\t\t\t\t\t'scont'    => __('Place Device on Report'),\n\t\t\t\t\t'pcont'    => __('Place Devices on Report'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'report_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Report Name'),\n\t\t\t\t\t\t\t'array'   => $reports,\n\t\t\t\t\t\t\t'default' => array_key_first($reports)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'timespan' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Timespan'),\n\t\t\t\t\t\t\t'array'   => $graph_timespans,\n\t\t\t\t\t\t\t'default' => read_user_setting('default_timespan')\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'align' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Align'),\n\t\t\t\t\t\t\t'array'   => $alignment,\n\t\t\t\t\t\t\t'default' => REPORTS_ALIGN_CENTER\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\t$trees = db_fetch_assoc('SELECT id, name FROM graph_tree ORDER BY name');\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach($trees as $tree) {\n\t\t\t\t$form_data['options']['tr_' . $tree['id']] = array(\n\t\t\t\t\t'smessage' => __esc('Click \\'Continue\\' to Place the following Device on Tree %s.', $tree['name']),\n\t\t\t\t\t'pmessage' => __esc('Click \\'Continue\\' to Duplicate following Devices on Tree %s.', $tree['name']),\n\t\t\t\t\t'scont'    => __('Place Device on Tree'),\n\t\t\t\t\t'pcont'    => __('Place Devices on Tree'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'tree_item_id' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_branch',\n\t\t\t\t\t\t\t'title'   => __('Destination Branch'),\n\t\t\t\t\t\t\t'id'      => $tree['id']\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t'eaction'   => 'tree_id',\n\t\t\t\t\t'eactionid' => $tree['id'],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Legacy support for old version plugins\n\t\tif (!isset($form_data['options'][get_request_var('drp_action')])) {\n\t\t\t$save['drp_action'] = get_request_var('drp_action');\n\t\t\t$save['host_list']  = $ilist;\n\t\t\t$save['host_array'] = $iarray;\n\t\t} else {\n\t\t\t$save = array();\n\t\t}\n\n\t\t$form_data = api_plugin_hook_function('device_confirmation_form', $form_data);\n\n\t\tform_continue_confirmation($form_data, 'device_action_prepare', $save);\n\t}\n}\n\nfunction host_export() {\n\tprocess_sanitize_draw_filter(false);\n\n\t$hosts = get_device_records($total_rows, 9999999);\n\n\t$stdout = fopen('php://output', 'w');\n\n\theader('Content-type: application/excel');\n\theader('Content-Disposition: attachment; filename=cacti-devices-' . time() . '.csv');\n\n\tif (cacti_sizeof($hosts)) {\n\t\t$columns = array_keys($hosts[0]);\n\n\t\tfputcsv($stdout, $columns);\n\n\t\tforeach($hosts as $h) {\n\t\t\tforeach(array_keys($h) as $hc) {\n\t\t\t\tif ($h[$hc] != '' && (strpos($h[$hc], \"\\n\") !== false || strpos($h[$hc], \"\\r\") !== false)) {\n\t\t\t\t\t$h[$hc] = str_replace(array(\"\\n\", \"\\r\"), ' ', $h[$hc]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfputcsv($stdout, $h);\n\t\t}\n\t}\n\n\tfclose($stdout);\n}\n\nfunction host_add_query() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_id');\n\tget_filter_request_var('snmp_query_id');\n\tget_filter_request_var('reindex_method');\n\t/* ==================================================== */\n\n\tapi_device_dq_add(get_request_var('host_id'), get_request_var('snmp_query_id'), get_request_var('reindex_method'));\n}\n\nfunction host_reload_query() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\trun_data_query(get_request_var('host_id'), get_request_var('id'));\n}\n\nfunction host_remove_query() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\tapi_device_dq_remove(get_request_var('host_id'), get_request_var('id'));\n}\n\nfunction host_change_query() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('data_query_id');\n\tget_filter_request_var('host_id');\n\tget_filter_request_var('reindex_method');\n\t/* ==================================================== */\n\n\tapi_device_dq_change(get_request_var('host_id'), get_request_var('data_query_id'), get_request_var('reindex_method'));\n}\n\nfunction host_add_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('REPLACE INTO host_graph\n\t\t(host_id, graph_template_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_nfilter_request_var('host_id'), get_nfilter_request_var('graph_template_id'))\n\t);\n\n\tif (get_request_var('host_id') > 0) {\n\t\tobject_cache_get_totals('device_state', get_request_var('host_id'));\n\t}\n\n\tautomation_hook_graph_template(get_nfilter_request_var('host_id'), get_nfilter_request_var('graph_template_id'));\n\n\tapi_plugin_hook_function('add_graph_template_to_host', array('host_id' => get_nfilter_request_var('host_id'), 'graph_template_id' => get_nfilter_request_var('graph_template_id')));\n\n\tif (get_request_var('host_id') > 0) {\n\t\tobject_cache_get_totals('device_state', get_request_var('host_id'), true);\n\t\tobject_cache_update_totals('diff');\n\t}\n}\n\nfunction host_remove_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\tapi_device_gt_remove(get_request_var('host_id'), get_request_var('id'));\n}\n\nfunction create_host_edit_filter($host, $content = '') {\n\tglobal $item_rows;\n\n\t$debug = is_device_debug_enabled($host['id']);\n\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'pingdata' => array(\n\t\t\t\t\t'method'  => 'content',\n\t\t\t\t\t'filter'  => FILTER_DEFAULT,\n\t\t\t\t\t'content' => $content,\n\t\t\t\t),\n\t\t\t\t'id' => array(\n\t\t\t\t\t'method'  => 'validate',\n\t\t\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default' => '',\n\t\t\t\t),\n\t\t\t\t'host_template_id' => array(\n\t\t\t\t\t'method'  => 'validate',\n\t\t\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default' => '0'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'links' => array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Create New Device'),\n\t\t\t\t'url'     => 'host.php?action=edit',\n\t\t\t\t'class'   => 'ti ti-devices-plus newDevice'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Create New Graphs'),\n\t\t\t\t'url'     => 'graphs_new.php?reset=true&host_id=' . $host['id'],\n\t\t\t\t'class'   => 'ti ti-chart-area-line-filled newGraph'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Re-Index Device'),\n\t\t\t\t'url'     => 'host.php?action=reindex&host_id=' . $host['id'],\n\t\t\t\t'class'   => 'ti ti-refresh reindexDevice'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => ($debug ? __('Disable Device Debug'):__('Enable Device Debug')),\n\t\t\t\t'url'     => 'host.php?action=' . ($debug ? 'disable_debug':'enable_debug') . '&host_id=' . $host['id'],\n\t\t\t\t'class'   => ($debug ? 'ti ti-bug disableDebug':'ti ti-bug enableDebug')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Repopulate Poller Cache'),\n\t\t\t\t'url'     => 'host.php?action=repopulate&host_id=' . $host['id'],\n\t\t\t\t'class'   => 'ti ti-hammer repopulateCache'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('View Poller Cache'),\n\t\t\t\t'url'     => 'utilities.php?poller_action=-1&action=view_poller_cache&host_id=' . $host['id'] . '&template_id=-1&filter=&rows=-1',\n\t\t\t\t'class'   => 'ti ti-list-search viewCache'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('View Data Source List'),\n\t\t\t\t'url'     => 'data_sources.php?reset=true&host_id=' . $host['id'] . '&ds_rows=30&filter=&template_id=-1&method_id=-1&page=1',\n\t\t\t\t'class'   => 'ti ti-brand-databricks viewSources'\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('View Graphs List'),\n\t\t\t\t'url'     => 'graphs.php?reset=true&host_id=' . $host['id'] . '&graph_rows=30&filter=&template_id=-1&page=1',\n\t\t\t\t'class'   => 'ti ti-graph-filled viewGraphs'\n\t\t\t),\n\t\t)\n\t);\n\n\t/* process plugin links */\n\tob_start();\n\n\t/**\n\t * Prototype - We will convert links into nice glyphs potentially\n\t *\n\t * <span class=\"linkMarker\">*</span>\n\t * <a\n\t *   class=\"autocreate linkEditMain\"\n\t *   href=\"plugins/thold/thold.php?action=autocreate&host_id=99\"\n\t * >Auto-create Thresholds</a>\n\t * <br>';\n\t */\n\tapi_plugin_hook('device_edit_top_links');\n\n\t$new_links = ob_get_clean();\n\n\t/**\n\t * Now that we have anchors, let's add them to the\n\t * filter array.\n\t */\n\tif ($new_links != '') {\n\t\t$links = new DOMDocument();\n\t\t$links->loadHTML($new_links);\n\t\t$anchors = $links->getElementsByTagName('a');\n\n\t\tif (cacti_sizeof($anchors)) {\n\t\t\tforeach($anchors as $a) {\n\t\t\t\t$name = $a->textContent;\n\t\t\t\t$href = $a->getAttribute('href');\n\n\t\t\t\t$filters['links'][] = array(\n\t\t\t\t\t'display' => $name,\n\t\t\t\t\t'url'     => $href,\n\t\t\t\t\t'class'   => 'ti ti-plug'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $filters;\n}\n\nfunction host_edit() {\n\tglobal $fields_host_edit, $reindex_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tapi_plugin_hook('host_edit_top');\n\n\t$header_label = __('Device [new]');\n\n\t$host = array();\n\n\tif (get_request_var('id') > 0) {\n\t\t$host = db_fetch_row_prepared('SELECT *\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\tif (cacti_sizeof($host)) {\n\t\t\t$header_label = __esc('Device [edit: %s]', $host['description']);\n\t\t}\n\t} else {\n\t\t$host['id']          = 0;\n\t\t$host['description'] = __('New Device');\n\t}\n\n\tif (cacti_sizeof($host)) {\n\t\t$content  = \"<div class='pingRow'>\";\n\t\t$content .= \"<div id='ping_results'>\" . __('Contacting Device') . \"&nbsp;<i style='font-size:12px;' class='ti fa-spin ti-loader'></i></div>\";\n\t\t$content .= \"</div>\";\n\n\t\t$filters = create_host_edit_filter($host, $content);\n\n\t\t$_SESSION['cur_device_id'] = get_request_var('id');\n\t} else {\n\t\t$content = '';\n\t\t$filters = create_host_edit_filter($host, $content);\n\n\t\t$_SESSION['cur_device_id'] = 0;\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header_label, 'host.php', 'form_host', 'sess_host_edit', '', '', false);\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tform_start('host.php', 'host_form');\n\n\thtml_start_box('', '100%', true, '3', 'center', '');\n\n\t/* preserve the host template id if passed in via a GET variable */\n\tif (!isempty_request_var('host_template_id')) {\n\t\t$fields_host_edit['host_template_id']['value'] = get_filter_request_var('host_template_id');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_host_edit, (isset($host) ? $host : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tdevice_javascript(!empty($host['id']));\n\n\tif (!empty($host['id'])) {\n\t\thtml_start_box(__('Associated Graph Templates'), '100%', '', '3', 'center', '');\n\n\t\thtml_header(\n\t\t\tarray(\n\t\t\t\tarray('display' => __('Graph Template Name'), 'align' => 'left', 'nohide' => true),\n\t\t\t\tarray('display' => __('Status'), 'align' => 'left', 'nohide' => true)\n\t\t\t), 2, false\n\t\t);\n\n\t\t$selected_graph_templates = db_fetch_assoc_prepared('SELECT result.id, result.name, graph_local.id AS graph_local_id\n\t\t\tFROM (\n\t\t\t\tSELECT DISTINCT gt.id, gt.name\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_graph AS hg\n\t\t\t\tON gt.id = hg.graph_template_id\n\t\t\t\tWHERE hg.host_id = ?\n\t\t\t) AS result\n\t\t\tLEFT JOIN graph_local\n\t\t\tON graph_local.graph_template_id = result.id\n\t\t\tAND graph_local.host_id = ?\n\t\t\tORDER BY result.name',\n\t\t\tarray(get_request_var('id'), get_request_var('id'))\n\t\t);\n\n\t\t$available_graph_templates = db_fetch_assoc_prepared('SELECT DISTINCT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\t\tON sqg.graph_template_id = gt.id\n\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\tON gti.graph_template_id = gt.id\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id = dtr.id\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dtd.data_template_id = dtr.data_template_id\n\t\t\tWHERE sqg.name IS NULL\n\t\t\tAND gti.local_graph_id = 0\n\t\t\tAND dtr.local_data_id = 0\n\t\t\tAND gt.id NOT IN (SELECT graph_template_id FROM host_graph WHERE host_id = ?)\n\t\t\tORDER BY gt.name',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\t$i                   = 0;\n\t\t$displayed_templates = array();\n\n\t\tif (cacti_sizeof($selected_graph_templates)) {\n\t\t\tforeach ($selected_graph_templates as $item) {\n\t\t\t\tif (isset($displayed_templates[$item['id']])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t$displayed_templates[$item['id']] = true;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\n\t\t\t\tform_alternate_row(\"gt$i\", true);\n\n\t\t\t\t/* get status information for this graph template */\n\t\t\t\t$is_being_graphed = $item['graph_local_id'] > 0;\n\t\t\t\t?>\n\t\t\t\t<td class='nowrap' style=\"padding: 4px;\">\n\t\t\t\t\t<strong><?php print $i; ?>)</strong> <?php print html_escape($item['name']); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t<?php print(($is_being_graphed == true) ? \"<span class='beingGraphed'>\" . __('Is Being Graphed') . \"</span> (<a class='linkEditMain' href='\" . html_escape('graphs.php?action=graph_edit&id=' . $item['graph_local_id']) . \"'>\" . __('Edit') . '</a>)' : \"<span class='notBeingGraphed'>\" . __('Not Being Graphed') . '</span>'); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='nowrap right'>\n\t\t\t\t\t<span title='<?php print __esc('Delete Graph Template Association'); ?>' class='deletequery ti ti-x' id='gtremove<?php print $item['id']; ?>' data-id='<?php print $item['id']; ?>'></span>\n\t\t\t\t</td>\n\t\t<?php\n\n\t\t\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr class='tableRow'><td colspan='3'><em>\" . __('No associated graph templates.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td class='saveRow' colspan='3'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px;'>\n\t\t\t\t\t\t<td class='nowrap templateAdd' style='padding-right:15px;'>\n\t\t\t\t\t\t\t<?php print __('Add Graph Template'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('graph_template_id', $available_graph_templates, 'name', 'id', '', '', ''); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add'); ?>' id='add_gt' title='<?php print __esc('Add Graph Template to Device'); ?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\t\thtml_end_box();\n\n\t\tif ((isset_request_var('display_dq_details')) && (isset($_SESSION['debug_log']['data_query']))) {\n\t\t\t$dbg_copy_uid = generate_hash();\n\t\t\t?>\n\t\t\t<div id='dqdebug' class='cactiTable'>\n\t\t\t\t<div class='cactiTableTitleRow' id='clipboardHeader<?php print $dbg_copy_uid; ?>'>\n\t\t\t\t\t<div class='cactiTableTitle'>\n\t\t\t\t\t\t<span style='padding:3px;'><?php print __('Data Query Debug Information'); ?></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='cactiTableButton'>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<a class='linkCopyDark cactiTableCopy' id='copyToClipboard<?php print $dbg_copy_uid; ?>'><?php print __('Copy'); ?></a>\n\t\t\t\t\t\t\t<a id='dbghide' class='ti ti-x' href='#'><?php print __('Hide'); ?></a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<table class='cactiTable' id='clipboardData<?php print $dbg_copy_uid; ?>'>\n\t\t\t\t\t\t<tr class='tableRow'>\n\t\t\t\t\t\t\t<td class='debug'>\n\t\t\t\t\t\t\t\t<span><?php print debug_log_return('data_query'); ?></span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<?php\n\t\t}\n\n\t\thtml_start_box(__('Associated Data Queries'), '100%', '', '3', 'center', '');\n\n\t\thtml_header(\n\t\t\tarray(\n\t\t\t\tarray('display' => __('Data Query Name'), 'align' => 'left', 'nohide' => true),\n\t\t\t\tarray('display' => __('Re-Index Method'), 'align' => 'left', 'nohide' => true),\n\t\t\t\tarray('display' => __('Status'), 'align' => 'left'),\n\t\t\t\tarray('display' => __('Actions'), 'align' => 'right')\n\t\t\t), 1, false\n\t\t);\n\n\t\t$sql_params2 = array();\n\n\t\tif ($host['snmp_version'] == 0) {\n\t\t\t$sql_where1 = ' AND snmp_query.data_input_id != 2';\n\t\t\t$sql_where2 = ' WHERE snmp_query.data_input_id != 2 AND';\n\t\t} else {\n\t\t\t$sql_where1 = '';\n\t\t\t$sql_where2 = ' WHERE';\n\t\t}\n\n\t\t$sql_where2   .= ' snmp_query.id NOT IN(SELECT snmp_query_id FROM host_snmp_query WHERE host_id = ?)';\n\t\t$sql_params2[] = get_request_var('id');\n\n\t\t$selected_data_queries = db_fetch_assoc_prepared(\"SELECT snmp_query.id,\n\t\t\tsnmp_query.name, host_snmp_query.reindex_method, IFNULL(`items`.`itemCount`, 0) AS itemCount, IFNULL(`rows`.`rowCount`, 0) AS rowCount\n\t\t\tFROM snmp_query\n\t\t\tINNER JOIN host_snmp_query\n\t\t\tON snmp_query.id = host_snmp_query.snmp_query_id\n\t\t\tAND host_snmp_query.host_id = ?\n\t\t\tLEFT JOIN (\n\t\t\t\tSELECT snmp_query_id, COUNT(*) AS `itemCount`\n\t\t\t\tFROM host_snmp_cache\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tGROUP BY snmp_query_id\n\t\t\t) AS `items`\n\t\t\tON items.snmp_query_id = snmp_query.id\n\t\t\tLEFT JOIN (\n\t\t\t\tSELECT snmp_query_id, COUNT(DISTINCT snmp_index) AS `rowCount`\n\t\t\t\tFROM host_snmp_cache\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tGROUP BY snmp_query_id\n\t\t\t) AS `rows`\n\t\t\tON rows.snmp_query_id = snmp_query.id\n\t\t\t$sql_where1\n\t\t\tORDER BY snmp_query.name\",\n\t\t\tarray(get_request_var('id'), get_request_var('id'), get_request_var('id'))\n\t\t);\n\n\t\t$available_data_queries = db_fetch_assoc_prepared(\"SELECT snmp_query.id, snmp_query.name\n\t\t\tFROM snmp_query\n\t\t\t$sql_where2\n\t\t\tORDER BY snmp_query.name\",\n\t\t\t$sql_params2);\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($selected_data_queries)) {\n\t\t\tforeach ($selected_data_queries as $item) {\n\t\t\t\t$i++;\n\n\t\t\t\tform_alternate_row(\"dg$i\", true);\n\n\t\t\t\t$status = 'success';\n\n\t\t\t\t?>\n\t\t\t\t<td style='padding:4px;'>\n\t\t\t\t\t<strong><?php print $i; ?>)</strong> <?php print html_escape($item['name']); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t<?php device_reindex_methods($item, $host); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print(($status == 'success') ? \"<span class='success'>\" . __('Success') . '</span>' : \"<span class='failed'>\" . __('Fail')) . '</span>' . __(' [%d Items, %d Rows]', $item['itemCount'], $item['rowCount']); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='nowrap right' style='vertical-align:middle;'>\n\t\t\t\t\t<span class='reloadquery ti ti-refresh' id='reload<?php print $item['id']; ?>' title='<?php print __esc('Reload Query'); ?>' data-id='<?php print $item['id']; ?>'></span>\n\t\t\t\t\t<span class='verbosequery ti ti-refresh' id='verbose<?php print $item['id']; ?>' title='<?php print __esc('Verbose Query'); ?>' data-id='<?php print $item['id']; ?>'></span>\n\t\t\t\t\t<span class='deletequery ti ti-x' id='remove<?php print $item['id']; ?>' title='<?php print __esc('Remove Query'); ?>' data-id='<?php print $item['id']; ?>'></span>\n\t\t\t\t</td>\n\t\t<?php\n\t\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr class='tableRow odd'><td colspan='4'><em>\" . __('No Associated Data Queries.') . '</em></td></tr>';\n\t\t}\n\n\t\tif ($host['snmp_version'] == 0) {\n\t\t\tunset($reindex_types[1]);\n\t\t\t$default = 0;\n\t\t} else {\n\t\t\t$default = read_config_option('reindex_method');\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td class='saveRow' colspan='4'>\n\t\t\t\t<table style='width:20%'>\n\t\t\t\t\t<tr style='line-height:10px;'>\n\t\t\t\t\t\t<td class='nowrap queryAdd' style='padding-right:15px;'>\n\t\t\t\t\t\t\t<?php print __('Add Data Query'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php form_dropdown('snmp_query_id', $available_data_queries, 'name', 'id', '', '', ''); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='nowrap' style='padding-right:15px;'>\n\t\t\t\t\t\t\t<?php print __('Re-Index Method'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php form_dropdown('reindex_method', $reindex_types, '', '', $default, '', ''); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add'); ?>' id='add_dq' title='<?php print __esc('Add Data Query to Device'); ?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<a style='display:none;' id='dqtop'></a>\n\t\t\t</td>\n\t\t</tr>\n\n\t<?php\n\t\thtml_end_box();\n\n\t\tapi_plugin_hook('device_edit_pre_bottom');\n\t}\n\n\tform_save_button('host.php', 'return');\n\n\tapi_plugin_hook('host_edit_bottom');\n}\n\nfunction device_reindex_methods($item, $host) {\n\tglobal $config, $reindex_types, $reindex_types_tips;\n\n\t$selectedTheme = get_selected_theme();\n\n\t$i = 0;\n\n\tforeach ($reindex_types as $key => $type) {\n\t\tif ($i == 0) {\n\t\t\tprint \"<fieldset class='reindex_methods'>\";\n\t\t}\n\t\tprint \"<input name='reindex_radio_\" . $item['id'] . \"' type='radio' data-device-id='\" . $host['id'] . \"' data-query-id='\" . $item['id'] . \"' data-reindex-method='\" . $key . \"' id='reindex_\" . $item['id'] . '_' . $key . \"'\" . ($item['reindex_method'] == $key ? ' checked=\"checked\"' : '') . ' />';\n\t\tprint \"<label title='\" . html_escape($reindex_types_tips[$key]) . \"' for='reindex_\" . $item['id'] . '_' . $key . \"'>\" . $type . '</label>';\n\n\t\t$i++;\n\t}\n\n\tprint '</fieldset>';\n}\n\nfunction device_change_javascript() {\n\t?>\n\t<script type=\"text/javascript\">\n\t\tfunction disableField(id) {\n\t\t\t$('#' + id).prop('disabled', true).addClass('ui-state-disabled');\n\n\t\t\tif (id == 'location') {\n\t\t\t\t$('#location_wrap').prop('disabled', true).addClass('ui-selectmenu-disabled ui-state-disabled');\n\t\t\t}\n\n\t\t\tif ($('#' + id).button('instance')) {\n\t\t\t\t$('#' + id).button('disable');\n\t\t\t} else if ($('#' + id).selectmenu('instance')) {\n\t\t\t\t$('#' + id).selectmenu('disable');\n\t\t\t}\n\t\t}\n\n\t\tfunction enableField(id) {\n\t\t\t$('#' + id).prop('disabled', false).removeClass('ui-state-disabled');\n\n\t\t\tif (id == 'location') {\n\t\t\t\t$('#location_wrap').prop('disabled', false).removeClass('ui-selectmenu-disabled ui-state-disabled');\n\t\t\t}\n\n\t\t\tif ($('#' + id).button('instance')) {\n\t\t\t\t$('#' + id).button('enable');\n\t\t\t} else if ($('#' + id).selectmenu('instance')) {\n\t\t\t\t$('#' + id).selectmenu('enable');\n\t\t\t}\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('input[id^=\"t_\"]').click(function() {\n\t\t\t\tid = $(this).attr('id').substring(2);\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tenableField(id);\n\t\t\t\t} else {\n\t\t\t\t\tdisableField(id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('input[id^=\"t_\"]').each(function() {\n\t\t\t\tid = $(this).attr('id').substring(2);\n\t\t\t\tdisableField(id);\n\t\t\t});\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction device_javascript(bool $hasHost = true) {\n\t?>\n\t<script type='text/javascript'>\n\t\t// default snmp information\n\t\tvar snmp_community = $('#snmp_community').val();\n\t\tvar snmp_username = $('#snmp_username').val();\n\t\tvar snmp_password = $('#snmp_password').val();\n\t\tvar snmp_auth_protocol = $('#snmp_auth_protocol').val();\n\t\tvar snmp_priv_passphrase = $('#snmp_priv_passphrase').val();\n\t\tvar snmp_priv_protocol = $('#snmp_priv_protocol').val();\n\t\tvar snmp_context = $('#snmp_context').val();\n\t\tvar snmp_engine_id = $('#snmp_engine_id').val();\n\t\tvar snmp_port = $('#snmp_port').val();\n\t\tvar snmp_timeout = $('#snmp_timeout').val();\n\t\tvar max_oids = $('#max_oids').val();\n\n\t\t// default ping methods\n\t\tvar ping_method = $('#ping_method').val();\n\t\tvar ping_port = $('#ping_port').val();\n\t\tvar ping_timeout = $('#ping_timeout').val();\n\t\tvar ping_retries = $('#ping_retries').val();\n\n\t\tfunction changeHostForm() {\n\t\t\tsetSNMP();\n\t\t\tsetAvailability();\n\t\t\tsetPing();\n\t\t}\n\n\t\t$(function() {\n\t\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\t\tsnmp_security_initialized = false;\n\n\t\t\t$('#cdialog').remove();\n\t\t\t$('#main').append(\"<div id='cdialog' class='cdialog'></div>\");\n\n\t\t\t$('.delete').click(function (event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\trequest = $(this).attr('href');\n\t\t\t\t$.get(request)\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\t\ttitle: '<?php print __('Delete Item from Device Template');?>',\n\t\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t}).css('cursor', 'pointer');\n\n\t\t\t<?php if (!$hasHost) { ?>\n\t\t\t$('#row_created').hide();\n\t\t\t<?php } ?>\n\t\t\tif (typeof hostInfoHeight != 'undefined') {\n\t\t\t\tif ($(window).scrollTop() == 0) {\n\t\t\t\t\t$('.hostInfoHeader').css('height', '');\n\t\t\t\t} else {\n\t\t\t\t\t$('.hostInfoHeader').css('height', hostInfoHeight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($('#snmp_version').val() == '3') {\n\t\t\t\tif ($('#snmp_auth_protocol').val() == '[None]') {\n\t\t\t\t\tif ($('#snmp_priv_protocol').val() == '[None]') {\n\t\t\t\t\t\t$('#snmp_security_level').val('noAuthNoPriv');\n\t\t\t\t\t\t$('#snmp_priv_passphrase').val('');\n\t\t\t\t\t\t$('#snmp_priv_passphrase_confirm').val('');\n\t\t\t\t\t\t$('#snmp_password').val('');\n\t\t\t\t\t\t$('#snmp_password_confirm').val('');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#snmp_security_level').val('authNoPriv');\n\t\t\t\t\t\t$('#snmp_priv_passphrase').val('');\n\t\t\t\t\t\t$('#snmp_priv_passphrase_confirm').val('');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('#snmp_security_level').val('authPriv');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($('#availability_method').val() != 7) {\n\t\t\t\t$('[id^=\"reload\"]').click(function(data) {\n\t\t\t\t\t$(this).addClass('fa-spin');\n\t\t\t\t\tstrURL = 'host.php?action=query_reload&id=' + $(this).attr('data-id') + '&host_id=' + $('#id').val();\n\t\t\t\t\tloadUrl({\n\t\t\t\t\t\turl: strURL,\n\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\tnostate: true\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$('[id^=\"verbose\"]').click(function(data) {\n\t\t\t\t\t$(this).addClass('fa-spin');\n\t\t\t\t\tstrURL = 'host.php?action=query_verbose&id=' + $(this).attr('data-id') + '&host_id=' + $('#id').val();\n\t\t\t\t\tloadUrl({\n\t\t\t\t\t\turl: strURL,\n\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\tnostate: true\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$('[id^=\"remove\"]').click(function(data) {\n\t\t\t\t\tstrURL = 'host.php?action=query_remove&id=' + $(this).attr('data-id') + '&host_id=' + $('#id').val();\n\t\t\t\t\tloadUrl({\n\t\t\t\t\t\turl: strURL,\n\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\tnostate: true\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$('[id^=\"gtremove\"]').click(function(data) {\n\t\t\t\t\tstrURL = 'host.php?action=gt_remove&id=' + $(this).attr('data-id') + '&host_id=' + $('#id').val();\n\t\t\t\t\tloadUrl({\n\t\t\t\t\t\turl: strURL,\n\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\tnostate: true\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$('#add_dq').click(function() {\n\t\t\t\t\tvar options = {\n\t\t\t\t\t\turl: 'host.php?action=query_add',\n\t\t\t\t\t\tscrollTop: $(window).scrollTop()\n\t\t\t\t\t}\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\thost_id: $('#id').val(),\n\t\t\t\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\t\t\t\treindex_method: $('#reindex_method').val(),\n\t\t\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t\t\t}\n\n\t\t\t\t\tpostUrl(options, data);\n\t\t\t\t});\n\n\t\t\t\t$('#add_gt').click(function() {\n\t\t\t\t\tvar options = {\n\t\t\t\t\t\turl: 'host.php?action=gt_add',\n\t\t\t\t\t\tscrollTop: $(window).scrollTop()\n\t\t\t\t\t}\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\thost_id: $('#id').val(),\n\t\t\t\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t\t\t}\n\n\t\t\t\t\tpostUrl(options, data);\n\t\t\t\t});\n\n\t\t\t\t$('input[id^=\"reindex_\"]').change(function() {\n\t\t\t\t\tstrURL = urlPath + 'host.php?action=query_change';\n\t\t\t\t\tstrURL += '&host_id=' + $(this).attr('data-device-id');\n\t\t\t\t\tstrURL += '&data_query_id=' + $(this).attr('data-query-id');\n\t\t\t\t\tstrURL += '&reindex_method=' + $(this).attr('data-reindex-method');\n\n\t\t\t\t\theight = $('.hostInfoHeader').height();\n\n\t\t\t\t\tloadUrl({\n\t\t\t\t\t\turl: strURL,\n\t\t\t\t\t\tnoState: true,\n\t\t\t\t\t\tscroll: true\n\t\t\t\t\t})\n\n\t\t\t\t\t$('.hostInfoHeader').css('height', height);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('#add_gt, #add_dq').button('disable');\n\t\t\t}\n\n\t\t\tchangeHostForm();\n\t\t\t$('#dbghide').click(function(data) {\n\t\t\t\t$('#dqdebug').empty().fadeOut('fast');\n\t\t\t});\n\n\t\t\tif ($('#dbghide').length) {\n\t\t\t\tvar dbgloc = parseInt($('#dbghide').offset().top - $('.breadCrumbBar').outerHeight() - $('.cactiPageHead').outerHeight());\n\t\t\t\t$('.cactiConsoleContentArea').scrollTop(dbgloc);\n\t\t\t}\n\n\t\t\t$('[id$=\"spacer\"]').click(function() {\n\t\t\t\tchangeHostForm();\n\t\t\t});\n\n\t\t\t$('#snmp_version').change(function() {\n\t\t\t\tsetAvailability();\n\t\t\t\tsetPing();\n\t\t\t});\n\n\t\t\t$('#location_input').keyup(function() {\n\t\t\t\t$('#location').val($('#location_input').val());\n\t\t\t}).mouseup(function() {\n\t\t\t\t$('#location').val($('#location_input').val());\n\t\t\t});\n\n\t\t\t//ToDo: Load URL breaks dropdown's on the host page\n\n\t\t\tif ($('#id').val() > 0) {\n\t\t\t\t$.get(urlPath + 'host.php?action=ping_host&id=' + $('#id').val(), function(data) {\n\t\t\t\t\t$('#ping_results').html(data);\n\t\t\t\t\thostInfoHeight = $('.hostInfoHeader').height();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t\t$('#ping_results').html('<?php print __('Device Status will appear once created');?>');\n\t\t\t}\n\t\t});\n\n\t\tfunction ping_results_finalize(options, html) {\n\t\t\thostInfoHeight = $('.hostInfoHeader').height();\n\t\t}\n\t</script>\n\t<?php\n}\n\nfunction get_device_records(&$total_rows, $rows) {\n\t$sql_where  = '';\n\t$sql_params = array();\n\t$maint_devices = '';\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE (deleted = \"\"\n\t\t\tAND (host.hostname LIKE ?\n\t\t\t\tOR host.description LIKE ?\n\t\t\t\tOR host.notes LIKE ?\n\t\t\t\tOR s.name LIKE ?\n\t\t\t\tOR host.external_id LIKE ?\n\t\t\t\tOR host.id = ?))';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t} else {\n\t\t$sql_where = \"WHERE deleted = ''\";\n\t}\n\n\tif (get_request_var('location') == '' || get_request_var('location') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : ' WHERE') . ' IFNULL(host.location,\"\") = \"\"';\n\t} elseif (get_request_var('location') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND' : ' WHERE') . ' host.location = ?';\n\t\t$sql_params[] = get_request_var('location');\n\t}\n\n\tif (db_column_exists('sites', 'disabled')) {\n\t\t$host_where_disabled = \"(IFNULL(TRIM(s.disabled), '') = 'on' OR IFNULL(TRIM(host.disabled),'') = 'on')\";\n\t} else {\n\t\t$host_where_disabled = \"(IFNULL(TRIM(host.disabled), '') = 'on')\";\n\t}\n\n\t$status = get_request_var('host_status');\n\n\tif ($status == '-2') {\n\t\t$sql_where .= ($sql_where == '' ? ' WHERE ' : ' AND ') . \"$host_where_disabled\";\n\t} elseif ($status == '-3') {\n\t\t$sql_where .= ($sql_where == '' ? ' WHERE ' : ' AND ') . \"NOT $host_where_disabled\";\n\t} elseif ($status == '-4') {\n\t\tif (db_column_exists('host', 'thold_failure_count')) {\n\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') .\n\t\t\t\t\"(host.status != '3' OR $host_where_disabled OR (host.status != 2\n\t\t\t\t\tAND thold_failure_count > 0\n\t\t\t\t\tAND status_event_count >= thold_failure_count))\";\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') . \" (host.status != '3' OR host.disabled = 'on')\";\n\t\t}\n\t} elseif ($status == -5 && api_plugin_is_enabled('maint')) {\n\t\t$t = time();\n\t\t$schedules = array();\n\n\t\t$all_sch = db_fetch_assoc(\"SELECT *\n\t\t\tFROM plugin_maint_schedules\n\t\t\tWHERE enabled = 'on'\");\n\n\t\tif (cacti_sizeof($all_sch)) {\n\t\t\tforeach ($all_sch as $sch) {\n\n\t\t\t\tif ($sch['mtype'] == 1 && ($t > $sch['stime'] && $t < $sch['etime'])) {\n\t\t\t\t\t$schedules[] = $sch['id'];\n\t\t\t\t}\n\n\t\t\t\tif ($sch['mtype'] == 2) {\n\t\t\t\t\tif ($sch['etime'] < $t) {\n\t\t\t\t\t\t/* convert start and end to local so that hour stays same for\n\t\t\t\t\t\tadd days across daylight saving time change */\n\t\t\t\t\t\t$starttimelocal = (new DateTime('@' . strval($sch['stime'])))->setTimezone( new DateTimeZone( date_default_timezone_get()));\n\t\t\t\t\t\t$endtimelocal   = (new DateTime('@' . strval($sch['etime'])))->setTimezone( new DateTimeZone( date_default_timezone_get()));\n\t\t\t\t\t\t$nowtime        = new DateTime();\n\t\t\t\t\t\t/* add interval days */\n\t\t\t\t\t\t$addday = new DateInterval( 'P' . strval($sch['minterval'] / 86400) . 'D');\n\t\t\t\t\t\twhile ($endtimelocal < $nowtime) {\n\t\t\t\t\t\t\t$starttimelocal = $starttimelocal->add( $addday );\n\t\t\t\t\t\t\t$endtimelocal   = $endtimelocal->add( $addday );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$sch['stime'] = $starttimelocal->getTimestamp();\n\t\t\t\t\t\t$sch['etime'] = $endtimelocal->getTimestamp();\n\t\t\t\t\t}\n\t\t\t\t\tif ($t > $sch['stime'] && $t < $sch['etime']) {\n\t\t\t\t\t\t$schedules[] = $sch['id'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($schedules)) {\n\t\t\t\t$maint_device_ids = db_fetch_row('SELECT host\n\t\t\t\t\tFROM plugin_maint_hosts\n\t\t\t\t\tWHERE type = 1 AND\n\t\t\t\t\tschedule in (' . implode(',', $schedules) . ')');\n\n\t\t\t\tif (cacti_sizeof($maint_device_ids)) { /* need later for all hosts */\n\t\t\t\t\t$maint_devices = implode(',', $maint_device_ids);\n\t\t\t\t}\n\n\t\t\t\tif ($status == '-5') {\n\t\t\t\t\tif (cacti_sizeof($maint_device_ids)) {\n\n\t\t\t\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') . 'host.id in (' . $maint_devices . ')';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') . 'host.id = -1 ';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif ($status != '-1') {\n\t\tif (db_column_exists('host', 'thold_failure_count')) {\n\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') .\n\t\t\t\t\"(host.status = ? OR (status != 2\n\t\t\t\t\tAND thold_failure_count > 0\n\t\t\t\t\tAND status_event_count >= thold_failure_count)\n\t\t\t\t\tAND NOT $host_where_disabled)\";\n\n\t\t\t$sql_params[] = $status;\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where == '' ? ' WHERE ':' AND ') . \"(host.status = ? AND NOT $host_where_disabled)\";\n\n\t\t\t$sql_params[] = $status;\n\t\t}\n\t}\n\n\tif (get_request_var('availability_method') != '-1') {\n\t\t$sql_where .= ($sql_where == '' ? ' WHERE ' : ' AND ') . 'host.availability_method = ?';\n\t\t$sql_params[] = get_request_var('availability_method');\n\t}\n\n\tif (get_request_var('host_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id = 0';\n\t} elseif (get_request_var('host_template_id') > '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'host.host_template_id = ?';\n\t\t$sql_params[] = get_request_var('host_template_id');\n\t}\n\n\tif (get_request_var('site_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'host.site_id = 0';\n\t} elseif (get_request_var('site_id') > '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'host.site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\tif (get_request_var('poller_id') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' host.poller_id = ?';\n\t\t$sql_params[] = get_request_var('poller_id');\n\t}\n\n\t$sql_where = api_plugin_hook_function('device_sql_where', $sql_where);\n\n\t$sql = \"SELECT COUNT(host.id)\n\t\tFROM host\n\t\tLEFT JOIN sites s\n\t\tON s.id = host.site_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $sql_params, 'device');\n\n\t$poller_interval = read_config_option('poller_interval');\n\n\t$sql_order = get_order_string();\n\t$sql_limit = 'LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$sql_query = \"SELECT host.*,\n\t\tCAST(IF(availability_method = 0, '0',\n\t\t\tIF(status_event_count > 0 AND status IN (1, 2), status_event_count*$poller_interval,\n\t\t\tIF(UNIX_TIMESTAMP(status_rec_date) < 943916400 AND status IN (0, 3), total_polls*$poller_interval,\n\t\t\tIF(UNIX_TIMESTAMP(status_rec_date) > 943916400, UNIX_TIMESTAMP() - UNIX_TIMESTAMP(status_rec_date),\n\t\t\tIF(snmp_sysUptimeInstance>0 AND snmp_version > 0, snmp_sysUptimeInstance/100, UNIX_TIMESTAMP()\n\t\t))))) AS unsigned) AS instate, \" .\n\t\t($maint_devices != '' ? \"IF(host.id in($maint_devices), 1,0) as maint, \" : \"0 as maint, \") .\n\t\t\"s.name as site_name,\n\t\ts.disabled as site_disabled\n\t\tFROM host\n\t\tLEFT JOIN sites AS s\n\t\tON host.site_id = s.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\treturn db_fetch_assoc_prepared($sql_query, $sql_params);\n}\n\nfunction host() {\n\tglobal $actions, $item_rows, $config, $availability_options;\n\n\tprocess_sanitize_draw_filter(true);\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$display_text = array(\n\t\t'description' => array(\n\t\t\t'display' => __('Device Description'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name by which this Device will be referred to.')\n\t\t),\n\t\t'hostname' => array(\n\t\t\t'display' => __('Hostname'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Either an IP address, or hostname.  If a hostname, it must be resolvable by either DNS, or from your hosts file.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Device.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'device_threads' => array(\n\t\t\t'display' => __('Threads'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The number of threads to use to collect information for this Device.  Applies to spine only.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of Graphs generated from this Device.')\n\t\t),\n\t\t'data_sources' => array(\n\t\t\t'display' => __('Data Sources'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of Data Sources generated from this Device.')\n\t\t),\n\t\t'current_errors' => array(\n\t\t\t'display' => __('Errors'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number current data collection errors on this Device.  Enable Device Debug to track them.')\n\t\t),\n\t\t'status' => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The monitoring status of the Device based upon ping results.  If this Device is a special type Device, by using the hostname \"localhost\", or due to the setting to not perform an Availability Check, it will always remain Up.  When using cmd.php data collector, a Device with no Graphs, is not pinged by the data collector and will remain in an \"Unknown\" state.')\n\t\t),\n\t\t'site_name' => array(\n\t\t\t'display' => __('Site'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The site associated to this Device'),\n\t\t),\n\t\t'availability_method' => array(\n\t\t\t'display' => __('Service Check'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Availability/Reachability method used to communicate with the device.  In some cases, the Availability/Reachability method will be \\'none\\', which is not uncommon for some devices'),\n\t\t),\n\t\t'instate' => array(\n\t\t\t'display' => __('In State'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The amount of time that this Device has been in its current state.')\n\t\t),\n\t\t'snmp_sysUpTimeInstance' => array(\n\t\t\t'display' => __('Uptime'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The current amount of time that the host has been up.')\n\t\t),\n\t\t'polling_time' => array(\n\t\t\t'display' => __('Poll Time'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The amount of time it takes to collect data from this Device.')\n\t\t),\n\t\t'cur_time' => array(\n\t\t\t'display' => __('Current (ms)'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The current ping time in milliseconds to reach the Device.')\n\t\t),\n\t\t'avg_time' => array(\n\t\t\t'display' => __('Average (ms)'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The average ping time in milliseconds to reach the Device since the counters were cleared for this Device.')\n\t\t),\n\t\t'availability' => array(\n\t\t\t'display' => __('Availability'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The availability percentage based upon ping results since the counters were cleared for this Device.')\n\t\t),\n\t\t'created' => array(\n\t\t\t'display' => __('Create Date'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Date that the Device was added to Cacti.')\n\t\t)\n\t);\n\n\t$display_text_size = sizeof($display_text);\n\t$display_text      = api_plugin_hook_function('device_display_text', $display_text);\n\n\t$hosts = get_device_records($total_rows, $rows);\n\n\t$nav = html_nav_bar('host.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Devices'), 'page', 'main');\n\n\tform_start('host.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (sizeof($display_text) != $display_text_size && cacti_sizeof($hosts)) { //display_text changed\n\t\tapi_plugin_hook_function('device_table_replace', $hosts);\n\t} elseif (cacti_sizeof($hosts)) {\n\t\tforeach ($hosts as $host) {\n\t\t\t$disabled = ($host['disabled'] == 'on');\n\n\t\t\tif (isset($host['thold_failure_count'])) {\n\t\t\t\t$host_status = get_colored_device_status($disabled, $host['status'], $host['thold_failure_count'], $host['status_event_count']);\n\t\t\t} else {\n\t\t\t\t$host_status = get_colored_device_status($disabled, $host['status']);\n\t\t\t}\n\n\t\t\tif ($host['disabled'] == '' &&\n\t\t\t\t($host['status'] == HOST_RECOVERING || $host['status'] == HOST_UP) &&\n\t\t\t\t($host['availability_method'] != AVAIL_NONE && $host['availability_method'] != AVAIL_PING)\n\t\t\t) {\n\t\t\t\t$uptime    = get_uptime($host);\n\t\t\t} else {\n\t\t\t\t$uptime    = __('N/A');\n\t\t\t}\n\n\t\t\t$sites_url       = CACTI_PATH_URL . 'host.php?site_id=' . $host['site_id'];\n\t\t\t$graphs_url      = CACTI_PATH_URL . 'graphs.php?reset=1&host_id=' . $host['id'];\n\t\t\t$data_source_url = CACTI_PATH_URL . 'data_sources.php?reset=1&host_id=' . $host['id'];\n\t\t\t$errors_url      = CACTI_PATH_URL . 'data_sources.php?reset=1&errored=true&host_id=' . $host['id'];\n\n\t\t\tif (empty($host['graphs'])) {\n\t\t\t\t$host['graphs'] = 0;\n\t\t\t}\n\n\t\t\tif (empty($host['data_sources'])) {\n\t\t\t\t$host['data_sources'] = 0;\n\t\t\t}\n\n\t\t\tif (empty($host['current_errors'])) {\n\t\t\t\t$host['current_errors'] = 0;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $host['id'], true);\n\n\t\t\t$maint = ($host['maint'] == 1 ? '<i class=\"ti ti-tool\" title=\"' . __('Maintenance') . '\"></i>' : '');\n\n\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter'), 'host.php?action=edit&id=' . $host['id']) . $maint, $host['id']);\n\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\tform_selectable_cell(filter_value($host['id'], get_request_var('filter')), $host['id'], '', 'right');\n\t\t\tform_selectable_cell($host['device_threads'], $host['id'], '', 'right');\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($host['graphs'], '-1'), '', $graphs_url), $host['id'], '', 'right');\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($host['data_sources'], '-1'), '', $data_source_url), $host['id'], '', 'right');\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($host['current_errors'], '-1'), '', $errors_url), $host['id'], '', 'right');\n\n\t\t\tform_selectable_cell($host_status, $host['id'], '', 'center');\n\n\t\t\tif ($host['site_disabled'] == 'on') {\n\t\t\t\t$class = 'deviceDisabled';\n\t\t\t} else {\n\t\t\t\t$class = 'deviceUp';\n\t\t\t}\n\n\t\t\tform_selectable_cell(filter_value($host['site_name'], '', $sites_url), $host['id'], '', $class);\n\n\t\t\tform_selectable_cell($availability_options[$host['availability_method']], $host['id'], '', 'right');\n\n\t\t\tform_selectable_cell(get_timeinstate($host), $host['id'], '', 'right');\n\n\t\t\tif ($host['availability_method'] != AVAIL_STREAM) {\n\t\t\t\tform_selectable_cell($uptime, $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(round($host['polling_time'], 2), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(round(($host['cur_time']), 2), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(round(($host['avg_time']), 2), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(round($host['availability'], 2) . ' %', $host['id'], '', 'right');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('N/A'), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(__('N/A'), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(__('N/A'), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(__('N/A'), $host['id'], '', 'right');\n\t\t\t\tform_selectable_cell(__('N/A'), $host['id'], '', 'right');\n\t\t\t}\n\n\t\t\tform_selectable_cell($host['created'] == '' ? __('Unknown') : substr($host['created'], 0, 10), $host['id'], '', 'right');\n\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Devices Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($hosts)) {\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\tapi_plugin_hook('device_table_bottom');\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $availability_options;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $none + $sites;\n\n\t$status = array(\n\t\t'-1' => __('Any'),\n\t\t'-3' => __('Enabled'),\n\t\t'-2' => __('Disabled'),\n\t\t'-4' => __('Not Up'),\n\t\t'3'  => __('Up'),\n\t\t'1'  => __('Down'),\n\t\t'2'  => __('Recovering'),\n\t\t'0'  => __('Unknown'),\n\t);\n\n\tif (api_plugin_is_enabled('maint')) {\n\t\t$status[-5] = __('Maintenance');\n\t}\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$sql_where    = 'AND site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t} else {\n\t\t$sql_where  = '';\n\t\t$sql_params = array();\n\t}\n\n\t$locations = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT location\n\t\t\tFROM host\n\t\t\tWHERE location != ''\n\t\t\t$sql_where\n\t\t\tORDER BY location\",\n\t\t\t$sql_params),\n\t\t'location', 'location'\n\t);\n\t$locations = $any + $none + $locations;\n\n\t$pollers = array_rekey(\n\t\tdb_fetch_assoc('SELECT p.id, p.name\n\t\t\tFROM poller AS p\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.poller_id = p.id\n\t\t\tORDER BY p.name'),\n\t\t'id', 'name'\n\t);\n\t$pollers = $any + $pollers;\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\tif (get_filter_request_var('host_template_id') > 0) {\n\t\t$sql_where = 'WHERE host_template_id = ?';\n\t\t$sql_params[] = get_request_var('host_template_id');\n\t}\n\n\t$options = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT availability_method AS id\n\t\t\tFROM host $sql_where\",\n\t\t\t$sql_params),\n\t\t'id', 'id'\n\t);\n\n\t$checks = array();\n\tif (cacti_sizeof($options)) {\n\t\tforeach ($options as $option) {\n\t\t\t$checks[$option] = $availability_options[$option];\n\t\t}\n\t}\n\n\t$checks = $any + $checks;\n\n\t$templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT ht.id, ht.name\n\t\t\tFROM host_template ht\n\t\t\tJOIN host h ON h.host_template_id = ht.id\n\t\t\tORDER BY ht.name'),\n\t\t'id', 'name'\n\t);\n\n\t$templates = $any + $none + $templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Site'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sites,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'poller_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Data Collector'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $pollers,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'host_template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'location' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Location'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'         => $locations,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'host_status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'availability_method' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Service Check'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $checks,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Devices'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'export' => array(\n\t\t\t\t'method'   => 'button',\n\t\t\t\t'display'  => __('Export'),\n\t\t\t\t'title'    => __('Export the filtered Devices'),\n\t\t\t\t'callback' => 'document.location = \\'host.php?action=export\\''\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'description',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t/* grab sanifization for plugins */\n\t$hfilters    = array();\n\t$hfilters    = api_plugin_hook_function('device_filters', $hfilters);\n\n\tif (cacti_sizeof($hfilters)) {\n\t\tforeach($hfilters as $id => $filter) {\n\t\t\tif (!isset($filter['method'])) {\n\t\t\t\t$hfilters[$id]['method'] = 'validate';\n\t\t\t}\n\t\t}\n\t}\n\n\t$filters = create_filter();\n\n\tif (get_request_var('host_template_id') > 0) {\n\t\t$url = 'host.php?action=edit&host_template_id=' . get_request_var('host_template_id');\n\t} else {\n\t\t$url = 'host.php?action=edit';\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Devices'), 'host.php', 'form_devices', 'sess_host', $url);\n\t$pageFilter->rows_label = __('Devices');\n\t$pageFilter->set_filter_array($filters);\n\n\t/* add sinitization logic for plugins */\n\tif (cacti_sizeof($hfilters)) {\n\t\tforeach($hfilters as $id => $filter) {\n\t\t\t$pageFilter->add_row_element(0, $id, $filter);\n\t\t}\n\t}\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "host_templates.php",
          "type": "blob",
          "size": 48.6201171875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/export.php');\ninclude_once('./lib/import.php');\ninclude_once('./lib/package.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\ninclude_once('./lib/xml.php');\n\nif (!isset_request_var('action') || get_nfilter_request_var('action') == 'templates' || get_nfilter_request_var('action_type') == 'templates') {\n\t$actions = array(\n\t\t1 => __('Delete'),\n\t\t2 => __('Duplicate'),\n\t\t3 => __('Sync Devices'),\n\t\t4 => __('Archive'),\n\t\t5 => __('Download')\n\t);\n\n\tif (!file_exists(CACTI_PATH_PKI . '/package.pub')) {\n\t\tunset($actions[4]);\n\t\tunset($actions[5]);\n\t}\n} elseif (get_nfilter_request_var('action') == 'archives' || get_nfilter_request_var('action_type') == 'archives') {\n\t$actions = array(\n\t\t1 => __('Delete'),\n\t\t2 => __('Download'),\n\t);\n}\n\n/* set default action */\nset_default_action();\n\napi_plugin_hook('device_template_top');\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'download':\n\t\t$ids  = explode(',', get_nfilter_request_var('ids'));\n\t\t$type = get_nfilter_request_var('action_type');\n\n\t\tapi_device_template_download($type, $ids);\n\n\t\tbreak;\n\tcase 'item_add_gt':\n\t\ttemplate_item_add_gt();\n\n\t\theader('Location: host_templates.php?action=edit&id=' . get_filter_request_var('host_template_id'));\n\n\t\tbreak;\n\tcase 'item_remove_gt_confirm':\n\t\ttemplate_item_remove_gt_confirm();\n\n\t\tbreak;\n\tcase 'item_remove_gt':\n\t\ttemplate_item_remove_gt();\n\n\t\theader('Location: host_templates.php?action=edit&id=' . get_filter_request_var('host_template_id'));\n\n\t\tbreak;\n\tcase 'item_add_dq':\n\t\ttemplate_item_add_dq();\n\n\t\theader('Location: host_templates.php?action=edit&id=' . get_filter_request_var('host_template_id'));\n\n\t\tbreak;\n\tcase 'item_remove_dq_confirm':\n\t\ttemplate_item_remove_dq_confirm();\n\n\t\tbreak;\n\tcase 'item_remove_dq':\n\t\ttemplate_item_remove_dq();\n\n\t\theader('Location: host_templates.php?action=edit&id=' . get_filter_request_var('host_template_id'));\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'archives':\n\t\ttop_header();\n\t\tdevice_archives();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tdevice_templates();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tif (isset_request_var('save_component_template')) {\n\t\t$save['id']           = get_nfilter_request_var('id');\n\t\t$save['hash']         = get_hash_host_template(get_nfilter_request_var('id'));\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['version']      = form_input_validate(get_nfilter_request_var('version'), 'version', '', false, 3);\n\t\t$save['class']        = form_input_validate(get_nfilter_request_var('class'), 'class', '', false, 3);\n\t\t$save['tags']         = form_input_validate(get_nfilter_request_var('tags'), 'tags', '', true, 3);\n\t\t$save['author']       = form_input_validate(get_nfilter_request_var('author'), 'author', '', true, 3);\n\t\t$save['email']        = form_input_validate(get_nfilter_request_var('email'), 'email', '', true, 3);\n\t\t$save['homepage']     = form_input_validate(get_nfilter_request_var('homepage'), 'homepage', '', true, 3);\n\t\t$save['copyright']    = form_input_validate(get_nfilter_request_var('copyright'), 'copyright', '', false, 3);\n\t\t$save['installation'] = form_input_validate(get_nfilter_request_var('installation'), 'installation', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$host_template_id = sql_save($save, 'host_template');\n\n\t\t\tif ($host_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host_templates.php?action=edit&id=' . (empty($host_template_id) ? get_nfilter_request_var('id') : $host_template_id));\n\t}\n}\n\nfunction template_item_add_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\n\t\t'REPLACE INTO host_template_snmp_query\n\t\t(host_template_id, snmp_query_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('snmp_query_id'))\n\t);\n\n\traise_message(41);\n}\n\nfunction template_item_add_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\n\t\t'REPLACE INTO host_template_graph\n\t\t(host_template_id, graph_template_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('graph_template_id'))\n\t);\n\n\traise_message(41);\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\tif (get_nfilter_request_var('action_type') == 'templates') {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tdb_execute('DELETE FROM host_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\t\tdb_execute('DELETE FROM host_template_snmp_query WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t\t\tdb_execute('DELETE FROM host_template_graph WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\n\t\t\t\t\t/* \"undo\" any device that is currently using this template */\n\t\t\t\t\tdb_execute('UPDATE host SET host_template_id = 0 WHERE deleted = \"\" AND ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t\tapi_duplicate_device_template($id, get_nfilter_request_var('title_format'));\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // sync\n\t\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t\tapi_device_template_sync_template($id);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // archive template\n\t\t\t\t\t$archive_note = get_request_var('archive_note');\n\n\t\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t\tapi_device_template_archive($id, $archive_note);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { // download package\n\t\t\t\t\ttop_header();\n\n\t\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tloadUrl({ url: \"host_templates.php?action_type=templates\" });\n\t\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\tDownloadStart(\\'host_templates.php?action=download&action_type=templates&ids=' . implode(',', $selected_items) . '\\');\n\t\t\t\t\t\t});\n\t\t\t\t\t</script>\n\t\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\t\tbottom_footer();\n\t\t\t\t\texit(0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\theader('Location: host_templates.php?action=templates&action=templates');\n\t\t} else {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tforeach($selected_items as $id) {\n\t\t\t\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\t\t\t\tFROM host_template_archive\n\t\t\t\t\t\t\tWHERE id = ?', array($id));\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM host_template_archive WHERE id = ?', array($id));\n\n\t\t\t\t\t\traise_message('archives_removed_' . $id, __('The Device Template Archive %s has been removed.', $name), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == 2) {\n\t\t\t\t\ttop_header();\n\n\t\t\t\t\tprint '<script text=\"text/javascript\">\n\t\t\t\t\t\tfunction DownloadStart(url) {\n\t\t\t\t\t\t\tdocument.getElementById(\"download_iframe\").src = url;\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tloadUrl({ url: \"host_templates.php?action_type=archives\" });\n\t\t\t\t\t\t\t\tPace.stop();\n\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\tDownloadStart(\\'host_templates.php?action=download&action_type=archives&ids=' . implode(',', $selected_items) . '\\');\n\t\t\t\t\t\t});\n\t\t\t\t\t</script>\n\t\t\t\t\t<iframe id=\"download_iframe\" style=\"display:none;\"></iframe>';\n\n\t\t\t\t\tbottom_footer();\n\t\t\t\t\texit(0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\theader('Location: host_templates.php?action=archives');\n\t\t}\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the host templates selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('action_type') == 'templates') {\n\t\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM host_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t} else {\n\t\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM host_template_archive WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t}\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (get_nfilter_request_var('action_type') == 'templates') {\n\t\t\t$form_data = array(\n\t\t\t\t'general' => array(\n\t\t\t\t\t'page'       => 'host_templates.php?action_type=templates',\n\t\t\t\t\t'actions'    => $actions,\n\t\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t\t'item_array' => $iarray,\n\t\t\t\t\t'item_list'  => $ilist\n\t\t\t\t),\n\t\t\t\t'options' => array(\n\t\t\t\t\t1 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Device Template.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Device Templates.'),\n\t\t\t\t\t\t'scont'    => __('Delete Device Template'),\n\t\t\t\t\t\t'pcont'    => __('Delete Device Templates')\n\t\t\t\t\t),\n\t\t\t\t\t2 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Device Template.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Device Templates.'),\n\t\t\t\t\t\t'scont'    => __('Duplicate Device Template'),\n\t\t\t\t\t\t'pcont'    => __('Duplicate Device Templates'),\n\t\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t\t'default' => '<template_title> (1)',\n\t\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t3 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Sync Devices to the following Device Template.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Sync Devices to the following Device Templates.'),\n\t\t\t\t\t\t'scont'    => __('Sync Device Template'),\n\t\t\t\t\t\t'pcont'    => __('Sync Device Templates')\n\t\t\t\t\t),\n\t\t\t\t\t4 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Archive the following Device Template.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Archive the following Device Templates.'),\n\t\t\t\t\t\t'scont'    => __('Archive Device Template'),\n\t\t\t\t\t\t'pcont'    => __('Archive Device Templates'),\n\t\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t\t'archive_note' => array(\n\t\t\t\t\t\t\t\t'method'  => 'textarea',\n\t\t\t\t\t\t\t\t'title'   => __('Archive Note'),\n\t\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t\t'textarea_rows' => 4,\n\t\t\t\t\t\t\t\t'textarea_cols' => 80\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t5 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Download the following Device Template.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Download the following Device Templates.'),\n\t\t\t\t\t\t'scont'    => __('Download Device Template'),\n\t\t\t\t\t\t'pcont'    => __('Download Device Templates')\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t$form_data = array(\n\t\t\t\t'general' => array(\n\t\t\t\t\t'page'       => 'host_templates.php?action_type=archive',\n\t\t\t\t\t'actions'    => $actions,\n\t\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t\t'item_array' => $iarray,\n\t\t\t\t\t'item_list'  => $ilist\n\t\t\t\t),\n\t\t\t\t'options' => array(\n\t\t\t\t\t1 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Device Template Archive.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Device Template Archives.'),\n\t\t\t\t\t\t'scont'    => __('Delete Device Template Archive'),\n\t\t\t\t\t\t'pcont'    => __('Delete Device Templates Archives')\n\t\t\t\t\t),\n\t\t\t\t\t2 => array(\n\t\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Download the following Device Template Archive.'),\n\t\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Download following Device Template Archives.'),\n\t\t\t\t\t\t'scont'    => __('Download Device Template Archive'),\n\t\t\t\t\t\t'pcont'    => __('Download Device Templates Archives')\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction template_item_remove_gt_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$template = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_templates\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Graph Template will be disassociated from the Device Template.'); ?></p>\n\t\t\t<p><?php print __('Graph Template Name: %s', html_escape($template['name'])); ?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel'); ?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue'); ?>' name='continue' title='<?php print __esc('Remove Graph Template'); ?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'host_templates.php?action=item_remove_gt',\n\t\t\t\tnoState: true,\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\thost_template_id: <?php print get_request_var('host_template_id'); ?>,\n\t\t\t\tid: <?php print get_request_var('id'); ?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_graph\n\t\tWHERE graph_template_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id'))\n\t);\n\n\traise_message(41);\n}\n\nfunction template_item_remove_dq_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$query = db_fetch_row_prepared('SELECT * FROM snmp_query WHERE id = ?', array(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Queries will be disassociated from the Device Template.'); ?></p>\n\t\t\t<p><?php print __('Data Query Name: %s', html_escape($query['name'])); ?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel'); ?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue'); ?>' name='continue' title='<?php print __esc('Remove Data Query'); ?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'host_templates.php?action=item_remove_dq',\n\t\t\t\tnoState: true,\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\thost_template_id: <?php print get_request_var('host_template_id'); ?>,\n\t\t\t\tid: <?php print get_request_var('id'); ?>\n\t\t\t}\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id'))\n\t);\n\n\traise_message(41);\n}\n\nfunction template_edit() {\n\tglobal $fields_host_template_edit, $copyrights;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$host_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM host_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\t$header_label = __esc('Device Templates [edit: %s]', $host_template['name']);\n\t} else {\n\t\t$header_label = __('Device Templates [new]');\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (!cacti_sizeof($host_template) || $host_template['version'] == '') {\n\t\t$fields_host_template_edit['version']['default'] = CACTI_VERSION;\n\t}\n\n\tif (!cacti_sizeof($host_template) || $host_template['author'] == '') {\n\t\t$fields_host_template_edit['author']['default'] = read_config_option('packaging_author');\n\t}\n\n\tif (!cacti_sizeof($host_template) || $host_template['email'] == '') {\n\t\t$fields_host_template_edit['email']['default'] = read_config_option('packaging_email');\n\t}\n\n\tif (!cacti_sizeof($host_template) || $host_template['copyright'] == '') {\n\t\t$fields_host_template_edit['copyright']['default'] = read_config_option('packaging_copyright');\n\t}\n\n\tform_start('host_templates.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields_host_template_edit, (isset($host_template) ? $host_template : array()))\n\t\t)\n\t);\n\n\t/* we have to hide this button to make a form change in the main form trigger the correct\n\t * submit action */\n\tprint \"<div style='display:none;'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Default Submit Button') . \"'></div>\";\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box(__('Associated Graph Templates'), '100%', '', '3', 'center', '');\n\n\t\t$selected_graph_templates = db_fetch_assoc_prepared('SELECT graph_templates.id, graph_templates.name\n\t\t\tFROM (graph_templates,host_template_graph)\n\t\t\tWHERE graph_templates.id = host_template_graph.graph_template_id\n\t\t\tAND host_template_graph.host_template_id = ?\n\t\t\tORDER BY graph_templates.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($selected_graph_templates)) {\n\t\t\tforeach ($selected_graph_templates as $item) {\n\t\t\t\tform_alternate_row(\"gt$i\", true);\n\t\t\t\t?>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<strong><?php print $i; ?>)</strong> <?php print html_escape($item['name']); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<a class='delete deleteMarker ti ti-x' title='<?php print __esc('Delete'); ?>' href='<?php print html_escape('host_templates.php?action=item_remove_gt_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id')); ?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"2\"><em>' . __('No Associated Graph Templates.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px'>\n\t\t\t\t\t\t<td class='nowrap templateAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Graph Template'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('graph_template_id', db_fetch_assoc_prepared('SELECT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tLEFT JOIN host_template_graph AS htg\n\t\t\t\t\t\t\t\tON gt.id=htg.graph_template_id\n\t\t\t\t\t\t\t\tAND htg.host_template_id = ?\n\t\t\t\t\t\t\t\tWHERE htg.host_template_id IS NULL\n\t\t\t\t\t\t\t\tAND gt.id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\t\t\t\t\t\tORDER BY gt.name', array(get_request_var('id'))), 'name', 'id', '', '', ''); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add'); ?>' id='add_gt' title='<?php print __esc('Add Graph Template to Device Template'); ?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Associated Data Queries'), '100%', '', '3', 'center', '');\n\n\t\t$selected_data_queries = db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\tFROM (snmp_query, host_template_snmp_query)\n\t\t\tWHERE snmp_query.id = host_template_snmp_query.snmp_query_id\n\t\t\tAND host_template_snmp_query.host_template_id = ?\n\t\t\tORDER BY snmp_query.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($selected_data_queries)) {\n\t\t\tforeach ($selected_data_queries as $item) {\n\t\t\t\tform_alternate_row(\"dq$i\", true);\n\t\t\t\t?>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<strong><?php print $i; ?>)</strong> <?php print html_escape($item['name']); ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<a class='delete deleteMarker ti ti-x' title='<?php print __esc('Delete'); ?>' href='<?php print html_escape('host_templates.php?action=item_remove_dq_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id')); ?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"2\"><em>' . __('No Associated Data Queries.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px;'>\n\t\t\t\t\t\t<td class='nowrap queryAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Data Query'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('snmp_query_id', db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\t\t\t\t\t\tFROM snmp_query LEFT JOIN host_template_snmp_query\n\t\t\t\t\t\t\t\tON (snmp_query.id = host_template_snmp_query.snmp_query_id AND host_template_snmp_query.host_template_id = ?)\n\t\t\t\t\t\t\t\tWHERE host_template_snmp_query.host_template_id is null\n\t\t\t\t\t\t\t\tORDER BY snmp_query.name', array(get_request_var('id'))), 'name', 'id', '', '', ''); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add'); ?>' id='add_dq' title='<?php print __esc('Add Data Query to Device Template'); ?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tapi_plugin_hook('device_template_edit');\n\t}\n\n\tform_save_button('host_templates.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\t\tfunction deleteFinalize(options, data) {\n\t\t\t$('#cdialog').dialog({\n\t\t\t\ttitle: '<?php print __('Delete Item from Device Template'); ?>',\n\t\t\t\tclose: function() {\n\t\t\t\t\t$('.delete').blur();\n\t\t\t\t\t$('.selectable').removeClass('selected');\n\t\t\t\t},\n\t\t\t\tminHeight: 80,\n\t\t\t\tminWidth: 500\n\t\t\t});\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#cdialog').remove();\n\t\t\t$('#main').append(\"<div id='cdialog' class='cdialog'></div>\");\n\n\t\t\t$('.delete').click(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tvar options = {\n\t\t\t\t\turl: $(this).attr('href'),\n\t\t\t\t\tnoState: true,\n\t\t\t\t\tfuncEnd: 'deleteFinalize',\n\t\t\t\t\telementId: 'cdialog',\n\t\t\t\t};\n\n\t\t\t\tloadUrl(options);\n\t\t\t}).css('cursor', 'pointer');\n\n\t\t\t$('#add_dq').click(function() {\n\t\t\t\tvar options = {\n\t\t\t\t\turl: 'host_templates.php?action=item_add_dq',\n\t\t\t\t\tnoState: true,\n\t\t\t\t}\n\n\t\t\t\tvar data = {\n\t\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\t\t\treindex_method: $('#reindex_method').val(),\n\t\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t\t}\n\n\t\t\t\tpostUrl(options, data);\n\t\t\t});\n\n\t\t\t$('#add_gt').click(function() {\n\t\t\t\tvar options = {\n\t\t\t\t\turl: 'host_templates.php?action=item_add_gt',\n\t\t\t\t\tnoState: true,\n\t\t\t\t}\n\n\t\t\t\tvar data = {\n\t\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t\t}\n\n\t\t\t\tpostUrl(options, data);\n\t\t\t});\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction create_template_filter() {\n\tglobal $item_rows, $device_classes;\n\n\t$all  = array('-1' => __('All'));\n\n\t$device_classes = $all + $device_classes;\n\n\t$action_arr = array(\n\t\t'templates' => __('Templates'),\n\t\t'archives'  => __('Archives')\n\t);\n\n\tif (isset_request_var('has_hosts')) {\n\t\t$value = get_nfilter_request_var('has_hosts');\n\t} else {\n\t\t$value = read_config_option('default_has') == 'on' ? 'true':'false';\n\t}\n\n\tif (get_request_var('class') == '-1' || isempty_request_var('class')) {\n\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT rs.id, rs.name\n\t\t\tFROM (\n\t\t\t\tSELECT gt.id, gt.name\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT gt.id, gt.name\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t\tORDER BY name');\n\t} else {\n\t\t$graph_templates = db_fetch_assoc_prepared('SELECT DISTINCT rs.id, rs.name\n\t\t\tFROM (\n\t\t\t\tSELECT gt.id, gt.name, htg.host_template_id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT gt.id, gt.name, htsq.host_template_id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t\tINNER JOIN host_template AS ht\n\t\t\tON rs.host_template_id = ht.id\n\t\t\tWHERE ht.class = ?\n\t\t\tORDER BY name',\n\t\t\tarray(get_request_var('class')));\n\t}\n\n\t$graph_templates = array_rekey($graph_templates, 'id', 'name');\n\n\t$graph_templates = $all + $graph_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'class' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Class'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $device_classes,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'graph_template' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Graph Templates'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'description'    => __('Search for Device Templates that use this specific Graph Template'),\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $graph_templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'action' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('View'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => 'templates',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $action_arr,\n\t\t\t\t\t'value'          => 'templates'\n\t\t\t\t),\n\t\t\t\t'has_hosts' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Has Devices'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => $value\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Templates'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_template_filter($render = false) {\n\t$filters = create_template_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Device Templates'), 'host_templates.php', 'form_template', 'sess_ht', 'host_templates.php?action=edit');\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction device_templates() {\n\tglobal $actions, $item_rows, $device_classes;\n\n\tprocess_sanitize_draw_template_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where  = '';\n\t$sql_params = array();\n\t$sql_join   = '';\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ht.name LIKE ?';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('class') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ht.class = ?';\n\t\t$sql_params[] = get_request_var('class');\n\t}\n\n\tif (get_request_var('graph_template') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'gt_id = ?';\n\t\t$sql_params[] = get_request_var('graph_template');\n\n\t\t$sql_join   = \"INNER JOIN (\n\t\t\tSELECT DISTINCT host_template_id, id AS gt_id\n\t\t\tFROM (\n\t\t\t\tSELECT htg.host_template_id, gt.id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT htsq.host_template_id, gt.id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t) AS htdata\n\t\tON htdata.host_template_id = ht.id\";\n\t}\n\n\tif (get_request_var('has_hosts') == 'true') {\n\t\t$sql_having = 'HAVING hosts > 0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT\n\t\t\tCOUNT(ht.id) AS `rows`, COUNT(DISTINCT host.id) AS hosts\n\t\t\tFROM host_template AS ht\n\t\t\t$sql_join\n\t\t\tLEFT JOIN host\n\t\t\tON host.host_template_id = ht.id\n\t\t\tLEFT JOIN host_template_archive AS hta\n\t\t\tON hta.host_template_id = ht.id\n\t\t\t$sql_where\n\t\t\tGROUP BY ht.id\n\t\t\t$sql_having\n\t\t) AS rs\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc_prepared(\"SELECT\n\t\tht.id, ht.name, ht.class, ht.version, ht.author, ht.copyright, COUNT(DISTINCT host.id) AS hosts, COUNT(DISTINCT hta.id) AS `archives`\n\t\tFROM host_template AS ht\n\t\t$sql_join\n\t\tLEFT JOIN host\n\t\tON host.host_template_id=ht.id\n\t\tLEFT JOIN host_template_archive AS hta\n\t\tON hta.host_template_id = ht.id\n\t\t$sql_where\n\t\tGROUP BY ht.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Device Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Device Template.')\n\t\t),\n\t\t'ht.class' => array(\n\t\t\t'display' => __('Device Class'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Class of this Device Template.  The Class Name should be representative of it\\'s function.')\n\t\t),\n\t\t'ht.version' => array(\n\t\t\t'display' => __('Version'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The version of this Device Template.')\n\t\t),\n\t\t'archives' => array(\n\t\t\t'display' => __('Archives'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Archived versions of this Device Template on disk.')\n\t\t),\n\t\t'ht.author' => array(\n\t\t\t'display' => __('Author'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The author of this Device Template.')\n\t\t),\n\t\t'ht.copyright' => array(\n\t\t\t'display' => __('Copyright'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The copyright of this Device Template.')\n\t\t),\n\t\t'ht.id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Device Template.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => '',\n\t\t\t'tip'     => __('Device Templates in use cannot be Deleted.  In use is defined as being referenced by a Device.')\n\t\t),\n\t\t'hosts' => array(\n\t\t\t'display' => __('Devices Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Devices using this Device Template.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('host_templates.php?action=templates', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Device Templates'), 'page', 'main');\n\n\tform_start('host_templates.php?action=templates', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'host_templates.php?action=template');\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['hosts'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'host_templates.php?action=edit&id=' . $template['id']), $template['id']);\n\n\t\t\tif ($template['class'] != '') {\n\t\t\t\tform_selectable_cell($device_classes[$template['class']], $template['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('Unassigned'), $template['id']);\n\t\t\t}\n\n\t\t\t$archive_url = 'host_templates.php?action=archives&host_template=' . $template['id'];\n\n\t\t\tform_selectable_ecell($template['version'], $template['id'], '', 'center');\n\t\t\tform_selectable_cell(filter_value($template['archives'], '', $archive_url), $template['id'], '', 'center');\n\t\t\tform_selectable_ecell($template['author'], $template['id'], '', 'left');\n\t\t\tform_selectable_ecell($template['copyright'], $template['copyright'], '', 'left');\n\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $template['id'], '', 'right');\n\n\t\t\t$url = 'host.php?reset=true&host_template_id=' . $template['id'];\n\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($template['hosts'], '-1'), '', $url), $template['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Device Templates Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('action_type', 'templates', '');\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction create_archive_filter() {\n\tglobal $item_rows, $device_classes;\n\n\t$all  = array('-1' => __('All'));\n\n\t$device_classes = $all + $device_classes;\n\n\tif (isset_request_var('has_hosts')) {\n\t\t$value = get_nfilter_request_var('has_hosts');\n\t} else {\n\t\t$value = read_config_option('default_has') == 'on' ? 'true':'false';\n\t}\n\n\t$action_arr = array(\n\t\t'templates' => __('Templates'),\n\t\t'archives'  => __('Archives')\n\t);\n\n\tif (get_request_var('class') == '-1' || isempty_request_var('class')) {\n\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT rs.id, rs.name\n\t\t\tFROM (\n\t\t\t\tSELECT gt.id, gt.name\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT gt.id, gt.name\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t\tORDER BY name');\n\t} else {\n\t\t$graph_templates = db_fetch_assoc_prepared('SELECT DISTINCT rs.id, rs.name\n\t\t\tFROM (\n\t\t\t\tSELECT gt.id, gt.name, htg.host_template_id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT gt.id, gt.name, htsq.host_template_id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t\tINNER JOIN host_template AS ht\n\t\t\tON rs.host_template_id = ht.id\n\t\t\tWHERE ht.class = ?\n\t\t\tORDER BY name',\n\t\t\tarray(get_request_var('class')));\n\t}\n\n\t$graph_templates = array_rekey($graph_templates, 'id', 'name');\n\n\t$graph_templates = $all + $graph_templates;\n\n\tif (!isempty_request_var('class') && get_request_var('class') != '-1') {\n\t\t$sql_where    = 'WHERE ht.class = ?';\n\t\t$sql_params[] = get_request_var('class');\n\t} else {\n\t\t$sql_where    = '';\n\t\t$sql_params   = array();\n\t}\n\n\t$device_templates = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT ht.id, ht.name\n\t\t\tFROM host_template AS ht\n\t\t\tINNER JOIN host_template_archive AS hta\n\t\t\tON ht.id = hta.host_template_id\n\t\t\t$sql_where\n\t\t\tORDER BY ht.name ASC\",\n\t\t\t$sql_params),\n\t\t'id', 'name'\n\t);\n\n\t$device_templates = $all + $device_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'class' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Class'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $device_classes,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'host_template' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Device Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'description'    => __('Search for Device Templates that use this specific Graph Template'),\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $device_templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'graph_template' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Graph Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'description'    => __('Search for Device Templates that use this specific Graph Template'),\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $graph_templates,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'action' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('View'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => 'templates',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $action_arr,\n\t\t\t\t\t'value'          => 'templates'\n\t\t\t\t),\n\t\t\t\t'has_hosts' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Has Devices'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => $value\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Archives'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_archive_filter($render = false) {\n\t$filters = create_archive_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Device Templates Archives'), 'host_templates.php', 'form_template', 'sess_hta');\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction device_archives() {\n\tglobal $actions, $item_rows, $device_classes;\n\n\tprocess_sanitize_draw_archive_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where  = '';\n\t$sql_params = array();\n\t$sql_join   = '';\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ht.name LIKE ? OR ht.archive_note LIKE ?';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('class') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ht.class = ?';\n\t\t$sql_params[] = get_request_var('class');\n\t}\n\n\tif (get_request_var('host_template') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'ht.host_template_id = ?';\n\t\t$sql_params[] = get_request_var('host_template');\n\t}\n\n\tif (get_request_var('graph_template') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'gt_id = ?';\n\t\t$sql_params[] = get_request_var('graph_template');\n\n\t\t$sql_join   = \"INNER JOIN (\n\t\t\tSELECT DISTINCT host_template_id, id AS gt_id\n\t\t\tFROM (\n\t\t\t\tSELECT htg.host_template_id, gt.id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN host_template_graph AS htg\n\t\t\t\tON htg.graph_template_id = gt.id\n\t\t\t\tUNION\n\t\t\t\tSELECT htsq.host_template_id, gt.id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN snmp_query_graph AS sqg\n\t\t\t\tON gt.id = sqg.graph_template_id\n\t\t\t\tINNER JOIN host_template_snmp_query AS htsq\n\t\t\t\tON sqg.snmp_query_id = htsq.snmp_query_id\n\t\t\t) AS rs\n\t\t) AS htdata\n\t\tON htdata.host_template_id = ht.id\";\n\t}\n\n\tif (get_request_var('has_hosts') == 'true') {\n\t\t$sql_having = 'HAVING hosts > 0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT\n\t\t\tCOUNT(ht.id) AS `rows`, COUNT(DISTINCT host.id) AS hosts\n\t\t\tFROM host_template_archive AS ht\n\t\t\t$sql_join\n\t\t\tLEFT JOIN host\n\t\t\tON host.host_template_id = ht.id\n\t\t\t$sql_where\n\t\t\tGROUP BY ht.id\n\t\t\t$sql_having\n\t\t) AS rs\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$archives = db_fetch_assoc_prepared(\"SELECT\n\t\tht.id, ht.name, ht.class, ht.version, ht.author, ht.copyright, archive_note, archive_date, LENGTH(archive) AS size, COUNT(DISTINCT host.id) AS hosts\n\t\tFROM host_template_archive AS ht\n\t\t$sql_join\n\t\tLEFT JOIN host\n\t\tON host.host_template_id=ht.id\n\t\t$sql_where\n\t\tGROUP BY ht.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Device Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Device Template.')\n\t\t),\n\t\t'ht.class' => array(\n\t\t\t'display' => __('Device Class'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Class of this Device Template.  The Class Name should be representative of it\\'s function.')\n\t\t),\n\t\t'ht.version' => array(\n\t\t\t'display' => __('Version'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The version of this Device Template.')\n\t\t),\n\t\t'ht.author' => array(\n\t\t\t'display' => __('Author'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The author of this Device Template.')\n\t\t),\n\t\t'ht.copyright' => array(\n\t\t\t'display' => __('Copyright'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The copyright of this Device Template.')\n\t\t),\n\t\t'ht.archive_note' => array(\n\t\t\t'display' => __('Archive Notes'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Hover over the column to see the archive notes.')\n\t\t),\n\t\t'ht.id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Device Template.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'size' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The size of the Device Template Archive in the Database.')\n\t\t),\n\t\t'ht.archive_date' => array(\n\t\t\t'display' => __('Archive Date'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Device Template.  Useful when performing automation or debugging.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('host_templates.php?action=archives', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Device Templates'), 'page', 'main');\n\n\tform_start('host_templates.php?action=archives', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'host_templates.php?action=archives');\n\n\tif (cacti_sizeof($archives)) {\n\t\tforeach ($archives as $a) {\n\t\t\tform_alternate_row('line' . $a['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($a['name'], get_request_var('filter')), $a['id']);\n\n\t\t\tif ($a['class'] != '') {\n\t\t\t\tform_selectable_cell($device_classes[$a['class']], $a['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('Unassigned'), $a['id']);\n\t\t\t}\n\n\t\t\tform_selectable_ecell($a['version'], $a['id'], '', 'center');\n\t\t\tform_selectable_ecell($a['author'], $a['id'], '', 'left');\n\t\t\tform_selectable_ecell($a['copyright'], $a['id'], '', 'left');\n\n\t\t\tform_selectable_cell(filter_value(__('Notes'), '', '#', $a['archive_note']), $a['id'], '', 'left');\n\n\t\t\tform_selectable_cell($a['id'], $a['id'], '', 'right');\n\n\t\t\tform_selectable_cell(number_format_i18n($a['size'], 2, 1000), $a['id'], '', 'right');\n\t\t\tform_selectable_cell($a['archive_date'], $a['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($a['name'], $a['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Device Template Archives Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($archives)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('action_type', 'archives', '');\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 5.578125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ntop_header();\n\napi_plugin_hook('console_before');\n\nfunction render_external_links($style = 'FRONT') {\n\tglobal $config;\n\n\t$consoles = db_fetch_assoc_prepared('SELECT id, contentfile\n\t\tFROM external_links\n\t\tWHERE enabled = \"on\"\n\t\tAND style = ?', array($style));\n\n\tif (cacti_sizeof($consoles)) {\n\t\tforeach ($consoles as $page) {\n\t\t\tif (is_realm_allowed($page['id'] + 10000)) {\n\t\t\t\tif (preg_match('/^((((ht|f)tp(s?))\\:\\/\\/){1}\\S+)/i', $page['contentfile'])) {\n\t\t\t\t\tprint '<iframe class=\"content\" src=\"' . $page['contentfile'] . '\" frameborder=\"0\"></iframe>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<div id=\"content\">';\n\n\t\t\t\t\t$file = CACTI_PATH_INCLUDE . '/content/' . $page['contentfile'];\n\n\t\t\t\t\tif (file_exists($file)) {\n\t\t\t\t\t\tinclude_once($file);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<h1>The file \\'' . $page['contentfile'] . '\\' does not exist!!</h1>';\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nrender_external_links('FRONTTOP');\n\nif (read_config_option('hide_console') != 'on') {\n\t?>\n<table class='cactiTable'>\n\t<tr class='tableRow'>\n\t\t<td class='textAreaNotes top left'>\n\t\t\t<?php print __('You are now logged into <a href=\"%s\"><b>Cacti</b></a>. You can follow these basic steps to get started.', 'about.php');?>\n\n\t\t\t<ul>\n\t\t\t\t<li><?php print __('<a href=\"%s\">Create devices</a> for network', 'host.php');?></li>\n\t\t\t\t<li><?php print __('<a href=\"%s\">Create graphs</a> for your new devices', 'graphs_new.php');?></li>\n\t\t\t\t<li><?php print __('<a href=\"%s\">View</a> your new graphs', CACTI_PATH_URL . 'graph_view.php');?></li>\n\t\t\t</ul>\n\t\t</td>\n\t\t<td class='textAreaNotes top right'>\n\t\t\t<strong><?php print CACTI_VERSION_TEXT_FULL;?></strong>\n\t\t</td>\n\t</tr>\n\t<?php if ($config['poller_id'] > 1) {?>\n\t<tr class='tableRow'><td colspan='2'><hr></td></tr>\n\t<tr class='tableRow'><td colspan='2'><strong><?php print __('Remote Data Collector Status:');?></strong>  <?php print '<i>' . ($config['connection'] == 'online' ? __('Online') : ($config['connection'] == 'recovery' ? __('Recovery') : __('Offline'))) . '</i>';?></td></tr>\n\t<?php if ($config['connection'] != 'online') {?>\n\t<tr class='tableRow'><td colspan='2'><strong><?php print __('Number of Offline Records:');?></strong>  <?php print '<i>' . number_format_i18n(db_fetch_cell('SELECT COUNT(*) FROM poller_output_boost', '', true, $local_db_cnn_id)) . '</i>';?></td></tr>\n\t<?php }?>\n\t<tr class='tableRow'><td colspan='2'><hr></td></tr>\n\t<tr class='tableRow'>\n\t\t<td class='textAreaNotes top left' colspan='2'>\n\t\t\t<?php print __('<strong>NOTE:</strong> You are logged into a Remote Data Collector.  When <b>\\'online\\'</b>, you will be able to view and control much of the Main Cacti Web Site just as if you were logged into it.  Also, it\\'s important to note that Remote Data Collectors are required to use the Cacti\\'s Performance Boosting Services <b>\\'On Demand Updating\\'</b> feature, and we always recommend using Spine.  When the Remote Data Collector is <b>\\'offline\\'</b>, the Remote Data Collectors Web Site will contain much less information.  However, it will cache all updates until the Main Cacti Database and Web Server are reachable.  Then it will dump it\\'s Boost table output back to the Main Cacti Database for updating.');?>\n\t\t</td>\n\t</tr>\n\t<tr class='tableRow'>\n\t\t<td class='textAreaNotes top left' colspan='2'>\n\t\t\t<?php print __('<strong>NOTE:</strong> None of the Core Cacti Plugins, to date, have been re-designed to work with Remote Data Collectors.  Therefore, Plugins such as MacTrack, and HMIB, which require direct access to devices will not work with Remote Data Collectors at this time.  However, plugins such as Thold will work so long as the Remote Data Collector is in <b>\\'online\\'</b> mode.');?>\n\t\t</td>\n\t</tr>\n\t<?php } ?>\n</table>\n\n<?php\n}\n\nrender_external_links('FRONT');\n\napi_plugin_hook('console_after');\n\n?>\n<script type='text/javascript'>\n$(function() {\n\tresizeWindow();\n\t$(window).resize(function() {\n\t\tresizeWindow();\n\t});\n});\n\nfunction resizeWindow() {\n\theight = parseInt($('#navigation_right').height());\n\twidth  = $('#main').width();\n\t$('.content').css({'height':height+'px', 'width':width, 'margin-top':'-5px'});\n}\n</script>\n<?php\n\nbottom_footer();\n"
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "link.php",
          "type": "blob",
          "size": 3.9091796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/global.php');\n\n$page = db_fetch_row_prepared('SELECT\n\tid, title, style, contentfile, enabled, refresh\n\tFROM external_links AS el\n\tWHERE id = ?',\n\tarray(get_filter_request_var('id')));\n\n// Prevent redirect loops\nif (isset($_SERVER['HTTP_REFERER'])) {\n\tif (strpos($_SERVER['HTTP_REFERER'], 'link.php') === false) {\n\t\t$referer                  = $_SERVER['HTTP_REFERER'];\n\t\t$_SESSION['link_referer'] = $referer;\n\t} elseif (isset($_SESSION['link_referer'])) {\n\t\t$referer = sanitize_uri($_SESSION['link_referer']);\n\t} else {\n\t\t$referer = 'index.php';\n\t}\n} elseif (isset($_SESSION['link_referer'])) {\n\t$referer = sanitize_uri($_SESSION['link_referer']);\n} else {\n\t$referer = 'index.php';\n}\n\nif (!cacti_sizeof($page)) {\n\traise_message('page_not_defined');\n\theader('Location: ' . $referer);\n\n\texit;\n} else {\n\tglobal $link_nav;\n\n\tif (is_realm_allowed($page['id'] + 10000)) {\n\t\tunset($refresh);\n\n\t\tif (!empty($page['refresh'])) {\n\t\t\t$refresh['seconds'] = $page['refresh'];\n\t\t\t$refresh['page']    = CACTI_PATH_URL . 'link.php?id=' . get_request_var('id');\n\t\t}\n\n\t\tif ($page['style'] == 'TAB') {\n\t\t\t$link_nav['link.php:']['title']   = $page['title'];\n\t\t\t$link_nav['link.php:']['mapping'] = '';\n\t\t\tgeneral_header();\n\t\t} else {\n\t\t\t$link_nav['link.php:']['title']   = $page['title'];\n\t\t\t$link_nav['link.php:']['mapping'] = 'index.php:';\n\t\t\ttop_header();\n\t\t}\n\n\t\tif (preg_match('/^((((ht|f)tp(s?))\\:\\/\\/){1}\\S+)/i', $page['contentfile'])) {\n\t\t\tif (filter_var($page['contentfile'], FILTER_VALIDATE_URL)) {\n\t\t\t\tprint '<iframe id=\"content\" src=\"' . html_escape($page['contentfile']) . '\" sandbox=\"allow-scripts allow-popups allow-forms\" frameborder=\"0\"></iframe>';\n\t\t\t} else {\n\t\t\t\t$message = __esc(\"External Link ID '%s' with Title '%s' attempted to inject an invalid URL and was blocked!\", $page['id'], $page['title']);\n\t\t\t\tcacti_log($message, false, 'SECURITY');\n\t\t\t\traise_message('invalid_url', $message, MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<div id=\"content\">';\n\n\t\t\t$basepath = CACTI_PATH_INCLUDE . '/content';\n\t\t\t$file     = realpath($basepath . '/' . $page['contentfile']);\n\n\t\t\tif ($file !== false && substr($file, 0, strlen($basepath)) == $basepath) {\n\t\t\t\tinclude_once($file);\n\t\t\t} else {\n\t\t\t\tprint '<h1>The file \\'' . html_escape($page['contentfile']) . '\\' does not exist!!</h1>';\n\t\t\t}\n\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tbottom_footer();\n\t} else {\n\t\traise_message('permission_denied');\n\t\theader('Location: ' . $referer);\n\n\t\texit;\n\t}\n}\n"
        },
        {
          "name": "links.php",
          "type": "blob",
          "size": 18.515625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t3 => __('Enable'),\n\t2 => __('Disable')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'delete_page':\n\t\tif (isset_request_var('id') && get_filter_request_var('id')) {\n\t\t\tpage_delete(get_request_var('id'));\n\t\t}\n\n\t\theader('Location: links.php');\n\n\t\tbreak;\n\tcase 'move_page_up':\n\t\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\t\tpage_move(get_request_var('id'), get_request_var('order'), '-1');\n\t\t}\n\n\t\theader('Location: links.php');\n\n\t\tbreak;\n\tcase 'move_page_down':\n\t\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\t\tpage_move(get_request_var('id'), get_request_var('order'), '1');\n\t\t}\n\n\t\theader('Location: links.php');\n\n\t\tbreak;\n\tcase 'save':\n\t\t$save['id']      = isset_request_var('id') ? get_filter_request_var('id') : 0;\n\t\t$save['title']   = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t\t$save['style']   = get_nfilter_request_var('style');\n\t\t$save['enabled'] = (isset_request_var('enabled') ? 'on' : '');\n\t\t$save['refresh'] = form_input_validate(get_nfilter_request_var('refresh'), 'refresh', '^[0-9]+$', false, 3);\n\n\t\tif (preg_match('/^((((ht|f)tp(s?))\\:\\/\\/){1}\\S+)/i', get_nfilter_request_var('fileurl')) && get_nfilter_request_var('filename') == '0') {\n\t\t\tif (filter_var(get_nfilter_request_var('fileurl'), FILTER_VALIDATE_URL)) {\n\t\t\t\t$save['contentfile'] = get_nfilter_request_var('fileurl');\n\t\t\t} else {\n\t\t\t\t$_SESSION['sess_error_fields']['contentfile'] = 'contentfile';\n\t\t\t\traise_message('badurl', __('Your contentfile is not a valid URL.  Please enter a value URL'), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\t\t} else {\n\t\t\t$save['contentfile'] = preg_replace('/[^A-Za-z0-9_\\.-]/', '_', get_nfilter_request_var('filename'));\n\t\t}\n\n\t\t$consolesection    = get_nfilter_request_var('consolesection');\n\t\t$consolenewsection = get_nfilter_request_var('consolenewsection');\n\t\t$extendedstyle     = '';\n\t\t$lastsortorder     = db_fetch_cell('SELECT MAX(sortorder) FROM external_links');\n\t\t$save['sortorder'] = $lastsortorder + 1;\n\n\t\tif ($save['style'] == 'CONSOLE') {\n\t\t\tif ($consolesection == '__NEW__') {\n\t\t\t\t$extendedstyle = $consolenewsection;\n\t\t\t} else {\n\t\t\t\t$extendedstyle = $consolesection;\n\t\t\t}\n\n\t\t\tif ($extendedstyle == '') {\n\t\t\t\t$extendedstyle = __('External Links');\n\t\t\t}\n\t\t}\n\t\t$save['extendedstyle'] = $extendedstyle;\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'external_links');\n\n\t\t\t// always give the login account access\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_realm (user_id, realm_id) VALUES (?, ?)', array($_SESSION[SESS_USER_ID], $id + 10000));\n\n\t\t\traise_message(1);\n\n\t\t\theader('Location: links.php');\n\n\t\t\texit;\n\t\t} else {\n\t\t\traise_message(2);\n\n\t\t\theader('Location: links.php?action=edit&id=' . (isset_request_var('id') ? get_filter_request_var('id') : ''));\n\n\t\t\texit;\n\t\t}\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tedit_page();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tpages();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '3') { // Enable Page\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // Disable Page\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '1') { // Delete Page\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($selected_items[$i]));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($selected_items[$i] + 10000));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($selected_items[$i] + 10000));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: links.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the pages selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT title FROM external_links WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'links.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following External Link.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following External Links.'),\n\t\t\t\t\t'scont'    => __('Delete External Link'),\n\t\t\t\t\t'pcont'    => __('Delete External Links')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following External Link.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following External Links.'),\n\t\t\t\t\t'scont'    => __('Disable External Link'),\n\t\t\t\t\t'pcont'    => __('Disable External Links')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following External Link.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following External Links.'),\n\t\t\t\t\t'scont'    => __('Enable External Link'),\n\t\t\t\t\t'pcont'    => __('Enable External Links'),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction pages() {\n\tglobal $item_rows, $config, $actions;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('External Links'), 'links.php', 'links', 'sess_links', 'links.php?action=edit');\n\n\t$pageFilter->rows_label = __('Receivers');\n\t$pageFilter->set_sort_array('sortorder', 'ASC');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ' WHERE title LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR contentfile LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_order = str_replace('sortorder DESC', 'sortorder ASC', $sql_order);\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$pages = db_fetch_assoc(\"SELECT *\n\t\tFROM external_links\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM external_links\n\t\t$sql_where\");\n\n\tform_start('links.php', 'chk');\n\n\t$nav = html_nav_bar('links.php', MAX_DISPLAY_PAGES, get_request_var_request('page'), $rows, $total_rows, 8, __('External Links'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '4', 'center', '');\n\n\t$display_text = array(\n\t\t'nosort0' => array(\n\t\t\t'display' => __('Actions'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => ''\n\t\t),\n\t\t'contentfile' => array(\n\t\t\t'display' => __('Page'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'title' => array(\n\t\t\t'display' => __('Title'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'style' => array(\n\t\t\t'display' => __('Style'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'disabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'sortorder' => array(\n\t\t\t'display' => __('Order'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'));\n\n\t$i = 0;\n\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tform_alternate_row('line' . $page['id']);\n\n\t\t\t$menuicons = '<a class=\"pic\"  href=\"' . html_escape('links.php?action=edit&id=' . $page['id']) . '\" title=\"' . __esc('Edit Page') . '\"><img src=\"' . CACTI_PATH_URL . 'images/application_edit.png\" alt=\"\"></a>';\n\n\t\t\tif ($page['enabled'] == 'on') {\n\t\t\t\t$menuicons .= '<a class=\"pic\" href=\"' . html_escape('link.php?id=' . $page['id']) . '\" title=\"' . __esc('View Page') . '\"><img src=\"' . CACTI_PATH_URL . 'images/view_page.png\" alt=\"\"></a>';\n\t\t\t}\n\n\t\t\tform_selectable_cell($menuicons, $page['id'], '50');\n\t\t\tform_selectable_ecell($page['contentfile'], $page['id']);\n\t\t\tform_selectable_ecell($page['title'], $page['id']);\n\t\t\tform_selectable_ecell($style_translate[$page['style']] . ($page['style'] == 'CONSOLE' ? ' ( ' . ($page['extendedstyle'] == '' ? __('External Links') : $page['extendedstyle']) . ' )' : ''), $page['id']);\n\t\t\tform_selectable_cell(($page['enabled'] == 'on' ? __('Yes') : __('No')), $page['id']);\n\n\t\t\tif (get_request_var('sort_column') == 'sortorder') {\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$sort = '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('links.php?action=move_page_up&order=' . $page['sortorder'] . '&id=' . $page['id']) . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort = '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t}\n\n\t\t\t\tif ($i == cacti_sizeof($pages) - 1) {\n\t\t\t\t\t$sort .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('links.php?action=move_page_down&order=' . $page['sortorder'] . '&id=' . $page['id']) . '\"></a>';\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($sort, $page['id'], '', 'center');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('Sort for Ordering'), $page['id']);\n\t\t\t}\n\n\t\t\tform_checkbox_cell($page['title'], $page['id']);\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($nav) + 1) . \"'><em>\" . __('No Pages Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($pages)) {\n\t\tprint $nav;\n\t}\n\n\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction page_delete($id) {\n\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($id + 10000));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($id + 10000));\n\n\tpage_resort();\n}\n\nfunction page_resort() {\n\t$pages = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$i = 1;\n\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?' . array($i, $page['id']));\n\t\t\t$i++;\n\t\t}\n\t}\n}\n\nfunction page_move($pageid, $junk, $direction) {\n\t$oldorder = db_fetch_cell_prepared('SELECT sortorder FROM external_links WHERE id = ?', array($pageid));\n\t$neworder = $oldorder + $direction;\n\t$otherid  = db_fetch_cell_prepared('SELECT id FROM external_links WHERE sortorder = ?', array($neworder));\n\n\tif (!empty($otherid)) {\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($neworder, $pageid));\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($oldorder, $otherid));\n\t}\n}\n\nfunction edit_page() {\n\tglobal $config, $poller_intervals;\n\n\t$sections = db_fetch_assoc(\"SELECT extendedstyle\n\t\tFROM external_links\n\t\tWHERE style='CONSOLE'\n\t\tGROUP BY extendedstyle\n\t\tORDER BY extendedstyle\");\n\n\t$sec_ar                   = array();\n\t$sec_ar['External Links'] = __('External Links');\n\n\tforeach ($sections as $sec) {\n\t\tif ($sec['extendedstyle'] != '') {\n\t\t\t$sec_ar[$sec['extendedstyle']] = $sec['extendedstyle'];\n\t\t}\n\t}\n\t$sec_ar['__NEW__'] = 'New Name Below';\n\n\tif (isset_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT * FROM external_links WHERE id = ?', array(get_filter_request_var('id')));\n\t} else {\n\t\t$data = array();\n\t}\n\n\t$myrefresh[0] = __('Disabled');\n\t$myrefresh   += $poller_intervals;\n\n\t$field_array = array(\n\t\t'id' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ? get_request_var('id') : 0\n\t\t),\n\t\t'style' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'array'         => array(\n\t\t\t\t'TAB'        => __('Top Tab'),\n\t\t\t\t'CONSOLE'    => __('Console Menu'),\n\t\t\t\t'FRONT'      => __('Bottom of Console Page'),\n\t\t\t\t'FRONTTOP'   => __('Top of Console Page')\n\t\t\t),\n\t\t\t'description' => __('Where should this page appear?'),\n\t\t\t'value'       => (isset($data['style']) ? $data['style'] : '')\n\t\t),\n\t\t'consolesection' => array(\n\t\t\t'friendly_name' => __('Console Menu Section'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'array'         => $sec_ar,\n\t\t\t'description'   => __('Under which Console heading should this item appear? (All External Link menus will appear between Configuration and Utilities)'),\n\t\t\t'value'         => (isset($data['extendedstyle']) ? $data['extendedstyle'] : '')\n\t\t),\n\t\t'consolenewsection' => array(\n\t\t\t'friendly_name' => __('New Console Section'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'max_length'    => 20,\n\t\t\t'description'   => __('If you don\\'t like any of the choices above, type a new title in here.'),\n\t\t\t'value'         => (isset($data['extendedstyle']) ? $data['extendedstyle'] : '')\n\t\t),\n\t\t'title' => array(\n\t\t\t'friendly_name' => __('Tab/Menu Name'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'max_length'    => 20,\n\t\t\t'description'   => __('The text that will appear in the tab or menu.'),\n\t\t\t'value'         => (isset($data['title']) ? $data['title'] : '')\n\t\t),\n\t\t'filename' => array(\n\t\t\t'friendly_name' => __('Content File/URL'),\n\t\t\t'method'        => 'drop_files',\n\t\t\t'directory'     => CACTI_PATH_INCLUDE . '/content',\n\t\t\t'exclusions'    => array('README', 'index.php'),\n\t\t\t'none_value'    => __('Web URL Below'),\n\t\t\t'description'   => __('The file that contains the content for this page. This file needs to be in the Cacti \\'include/content/\\' directory.'),\n\t\t\t'value'         => (isset($data['contentfile']) ? $data['contentfile'] : '')\n\t\t),\n\t\t'fileurl' => array(\n\t\t\t'friendly_name' => __('Web URL Location'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'description'   => __('The valid URL to use for this external link.  Must include the type, for example http://www.cacti.net.  Note that many websites do not allow them to be embedded in an iframe from a foreign site, and therefore External Linking may not work.'),\n\t\t\t'max_length'    => 255,\n\t\t\t'size'          => 80,\n\t\t\t'default'       => 'http://www.cacti.net',\n\t\t\t'value'         => (isset($data['contentfile']) ? $data['contentfile'] : '')\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'description'   => __('If checked, the page will be available immediately to the admin user.'),\n\t\t\t'default'       => 'on',\n\t\t\t'value'         => (isset($data['enabled']) ? 'on' : '')\n\t\t),\n\t\t'refresh' => array(\n\t\t\t'friendly_name' => __('Automatic Page Refresh'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'array'         => $myrefresh,\n\t\t\t'description'   => __('How often do you wish this page to be refreshed automatically.'),\n\t\t\t'value'         => (isset($data['refresh']) ? $data['refresh'] : '')\n\t\t),\n\t);\n\n\tform_start('links.php', 'link_edit');\n\n\tif (isset($data['title'])) {\n\t\thtml_start_box(__('External Links [edit: %s]', html_escape($data['title'])), '100%', true, '3', 'center', '');\n\t} else {\n\t\thtml_start_box(__('External Links [new]'), '100%', true, '3', 'center', '');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $field_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('links.php', 'save');\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t// hide and show the extra console fields when necessary\n\t\t\t$('#style').change(function() {\n\t\t\t\tif ($('#style').val() != 'CONSOLE') {\n\t\t\t\t\t$('#row_consolesection').hide();\n\t\t\t\t\t$('#row_consolenewsection').hide();\n\t\t\t\t} else {\n\t\t\t\t\t$('#row_consolesection').show();\n\t\t\t\t\tsetConsoleNewSectionVisibility();\n\t\t\t\t}\n\t\t\t}).change();\n\n\t\t\t$('#filename').change(function() {\n\t\t\t\tchangeFilename();\n\t\t\t}).change();\n\n\t\t\t// if you change the section, make the 'new' textbox reflect it\n\t\t\t// if you change it to 'new', then clear the textbox, and jump to it\n\t\t\t$('#consolesection').change(function() {\n\t\t\t\tsetConsoleNewSectionVisibility();\n\t\t\t}).change();\n\t\t});\n\n\t\tfunction setConsoleNewSectionVisibility() {\n\t\t\tvar isNew = $('#consolesection').val() == '__NEW__';\n\t\t\ttoggleFields({\n\t\t\t\trow_consolenewsection: isNew,\n\t\t\t});\n\n\t\t\tif (isNew) {\n\t\t\t\t$('#consolenewsection').focus();\n\t\t\t}\n\t\t}\n\n\t\tfunction changeFilename() {\n\t\t\ttoggleFields({\n\t\t\t\tfileurl: $('#filename').val() == 0,\n\t\t\t});\n\t\t}\n\t</script>\n\t<?php\n}\n"
        },
        {
          "name": "locales",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "logout.php",
          "type": "blob",
          "size": 3.1826171875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ndefine('CACTI_IN_INSTALL', 1);\ninclude('./include/auth.php');\n\nglobal $config;\n\n/* forcibly unlock cacti if the user logg's out */\n$admin_user = read_config_option('admin_user');\n$lockout    = read_config_option('cacti_lockout_status', true);\nif ($lockout != '') {\n\t$lockout = json_decode($lockout, true);\n\n\tif ($admin_user == $_SESSION[SESS_USER_ID] && $lockout['session'] == session_id()) {\n\t\tset_config_option('cacti_lockout_status', '');\n\t}\n}\n\nset_default_action();\n\napi_plugin_hook('logout_pre_session_destroy');\n\n/* Clear session */\ncacti_cookie_logout();\ncacti_session_destroy();\n\n$version = CACTI_VERSION;\n\napi_plugin_hook('logout_post_session_destroy');\n\n/* allow for plugin based logout page */\nif (api_plugin_hook_function('custom_logout_message', OPER_MODE_NATIVE) === OPER_MODE_RESKIN) {\n\texit;\n}\n\n/* Check to see if we are using Web Basic Auth */\nif (get_request_var('action') == 'timeout' || get_request_var('action') == 'disabled' || get_request_var('action') == 'remote') {\n\t$hook   = 'logout';\n\t$reason = __('a Session Timeout');\n\n\tif (get_request_var('action') == 'disabled') {\n\t\t$hook   = 'disabled';\n\t\t$reason = __('an Account Suspension');\n\t} elseif (get_request_var('action') == 'remote') {\n\t\t$hook   = 'logout';\n\t\t$reason = __('a change in state of the Remote Data Collector');\n\t}\n\n\thtml_auth_header($hook, __('Logout of Cacti'),  __('Automatic Logout'), __('You have been logged out of Cacti due to %s.', $reason));\n\tprint '<div>' . __('Please close your browser or %sLogin Again%s', '[<a href=\"index.php\">', '</a>]') . '</div>';\n\thtml_auth_footer($hook, __('Cookies have been cleared'), '');\n} else {\n\t/* Default action */\n\tclear_auth_cookie();\n\n\theader('Location: index.php');\n}\n"
        },
        {
          "name": "managers.php",
          "type": "blob",
          "size": 29.490234375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n);\n\n$mactions = array(\n\t1 => __('Disable'),\n\t2 => __('Enable')\n);\n\n$tabs_manager_edit = array(\n\t'general'       => __('General'),\n\t'notifications' => __('Notifications'),\n\t'logs'          => __('Logs'),\n);\n\n/* set default action */\nset_default_action();\n\nget_filter_request_var('tab', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tmanager_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\tmanager();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction manager() {\n\tglobal $config, $actions, $item_rows;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('SNMP Notification Receivers'), 'managers.php', 'form_snmpagent_managers', 'sess_snmp_mgr', 'managers.php?action=edit');\n\n\t$pageFilter->rows_label = __('Receivers');\n\t$pageFilter->set_sort_array('hostname', 'ASC');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = 'WHERE (\n\t\tsm.hostname LIKE '\t   . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\tOR sm.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(sm.id)\n\t\tFROM snmpagent_managers AS sm\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$managers = db_fetch_assoc(\"SELECT sm.id, sm.description,\n\t\tsm.hostname, sm.disabled, smn.count_notify, snl.count_log\n\t\tFROM snmpagent_managers AS sm\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_notify, manager_id\n\t\t\tFROM snmpagent_managers_notifications\n\t\t\tGROUP BY manager_id\n\t\t) AS smn\n\t\tON smn.manager_id = sm.id\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_log, manager_id\n\t\t\tFROM snmpagent_notifications_log\n\t\t\tGROUP BY manager_id\n\t\t) AS snl\n\t\tON snl.manager_id = sm.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'description'  => array( __('Description'), 'ASC'),\n\t\t'id'           => array( __('Id'), 'ASC'),\n\t\t'disabled'     => array( __('Status'), 'ASC'),\n\t\t'hostname'     => array( __('Hostname'), 'ASC'),\n\t\t'count_notify' => array( __('Notifications'), 'ASC'),\n\t\t'count_log'    => array( __('Logs'), 'ASC')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Receivers'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($managers)) {\n\t\tforeach ($managers as $item) {\n\t\t\t$description = filter_value($item['description'], get_request_var('filter'));\n\t\t\t$hostname    = filter_value($item['hostname'], get_request_var('filter'));\n\n\t\t\t$url         = 'managers.php?action=edit&id=' . $item['id'];\n\t\t\t$url1        = 'managers.php?action=edit&tab=notifications&id=' . $item['id'];\n\t\t\t$url2        = 'managers.php?action=edit&tab=logs&id=' . $item['id'];\n\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\n\t\t\tform_selectable_cell(filter_value($description, '', $url), $item['id']);\n\t\t\tform_selectable_cell($item['id'], $item['id']);\n\n\t\t\tform_selectable_cell($item['disabled'] ? '<span class=\"deviceDown\">' . __('Disabled') . '</span>' : '<span class=\"deviceUp\">' . __('Enabled') . '</span>', $item['id']);\n\n\t\t\tform_selectable_ecell($hostname, $item['id']);\n\t\t\tform_selectable_cell(filter_value($item['count_notify'] ? $item['count_notify'] : 0, '', $url1), $item['id']);\n\t\t\tform_selectable_cell(filter_value($item['count_log'] ? $item['count_log'] : 0, '', $url2), $item['id']);\n\n\t\t\tform_checkbox_cell($item['description'], $item['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"7\"><em>' . __('No SNMP Notification Receivers') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($managers)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('action_receivers', '1', '');\n\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction manager_edit() {\n\tglobal $config, $snmp_auth_protocols, $snmp_priv_protocols, $snmp_versions,\n\t$tabs_manager_edit, $fields_manager_edit, $mactions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isset_request_var('tab')) {\n\t\tset_request_var('tab', 'general');\n\t}\n\t$id\t= (isset_request_var('id') ? get_request_var('id') : '0');\n\n\tif ($id) {\n\t\t$manager      = db_fetch_row_prepared('SELECT * FROM snmpagent_managers WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('SNMP Notification Receiver [edit: %s]', $manager['description']);\n\t} else {\n\t\t$header_label = __('SNMP Notification Receiver [new]');\n\t}\n\n\tif (cacti_sizeof($tabs_manager_edit) && isset_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach (array_keys($tabs_manager_edit) as $tab_short_name) {\n\t\t\tif (($id == 0 && $tab_short_name != 'general')) {\n\t\t\t\tprint \"<li class='subTab'><a href='#' \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') . \"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t} else {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') .\n\t\t\t\t\t\" href='\" . html_escape(CACTI_PATH_URL .\n\t\t\t\t\t'managers.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\t\"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\n\t\tprint '</ul></nav></div>';\n\n\t\tif (read_config_option('legacy_menu_nav') != 'on') { ?>\n\t\t<script type='text/javascript'>\n\n\t\t$(function() {\n\t\t\t$('.subTab').find('a').click(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tstrURL  = $(this).attr('href');\n\t\t\t\tstrURL += (strURL.indexOf('?') > 0 ? '&':'?');\n\t\t\t\tloadUrl({url:strURL})\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t<?php }\n\t\t}\n\n\tswitch(get_request_var('tab')) {\n\t\tcase 'notifications':\n\t\t\tmanager_notifications($id, $header_label);\n\n\t\t\tbreak;\n\t\tcase 'logs':\n\t\t\tmanager_logs($id, $header_label);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($fields_manager_edit, (isset($manager) ? $manager : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tform_save_button('managers.php', 'return');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\n\t\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\t\tsnmp_security_initialized = false;\n\n\t\t\t$(function() {\n\t\t\t\tsetSNMP();\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t}\n\n\t?>\n\t<script language='javascript' type='text/javascript' >\n\t\t$('.tooltip').tooltip({\n\t\t\ttrack: true,\n\t\t\tposition: { collision: 'flipfit' },\n\t\t\tcontent: function() { return DOMPurify.sanitize($(this).attr('title')); }\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction create_manager_notification_filter() {\n\tglobal $item_rows;\n\n\t$mibs = array_rekey(\n\t\tdb_fetch_assoc(\"SELECT 'any' AS id, '\" . __esc('Any') . \"' AS name UNION SELECT DISTINCT mib AS id, mib AS name FROM snmpagent_cache\"),\n\t\t'id', 'name'\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'mib' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('MIB'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => 'any',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $mibs,\n\t\t\t\t\t'value'          => 'any'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Entries'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_manager_notification_filter($render = false, $header_label = '') {\n\t$filters = create_manager_notification_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header_label, 'managers.php?action=edit&tab=notifications&id=' . get_filter_request_var('id'), 'form_snmpagent_managers', 'sess_snmp_cache');\n\n\t$pageFilter->rows_label = __('OIDs');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction manager_notifications($id, $header_label) {\n\tglobal $item_rows, $mactions;\n\n\tprocess_sanitize_draw_manager_notification_filter(true, $header_label);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\t$sql_where = \"WHERE `kind`='Notification'\";\n\t$sql_params = array();\n\n\t/* filter by host */\n\tif (get_request_var('mib') != 'any' && get_request_var('mib') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' snmpagent_cache.mib = ?';\n\t\t$sql_params[] = get_request_var('mib');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != 'any') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (`oid` LIKE ? OR `name` LIKE ? OR `mib` LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_order = ' ORDER by `oid`';\n\n\tform_start('managers.php', 'chk');\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM snmpagent_cache\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$snmp_cache_sql = \"SELECT *\n\t\tFROM snmpagent_cache\n\t\t$sql_where\n\t\t$sql_order\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$snmp_cache = db_fetch_assoc_prepared($snmp_cache_sql, $sql_params);\n\n\t$registered_notifications = db_fetch_assoc_prepared('SELECT notification, mib\n\t\tFROM snmpagent_managers_notifications\n\t\tWHERE manager_id = ?',\n\t\tarray($id));\n\n\t$notifications = array();\n\n\tif ($registered_notifications && cacti_sizeof($registered_notifications) > 0) {\n\t\tforeach ($registered_notifications as $registered_notification) {\n\t\t\t$notifications[$registered_notification['mib']][$registered_notification['notification']] = 1;\n\t\t}\n\t}\n\n\t$display_text = array(\n\t\t__('Name'),\n\t\t__('OID'),\n\t\t__('MIB'),\n\t\t__('Kind'),\n\t\t__('Max-Access'),\n\t\t__('Monitored')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?action=edit&id=' . $id . '&tab=notifications&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text) + 1, __('Notifications'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox($display_text, true, 'managers.php?action=edit&tab=notifications&id=' . $id);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\t\t\t$row_id = $item['mib'] . '__' . $item['name'];\n\t\t\t$oid    = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name   = filter_value($item['name'], get_request_var('filter'));\n\t\t\t$mib    = filter_value($item['mib'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $row_id, false);\n\n\t\t\tif ($item['description']) {\n\t\t\t\tform_selectable_cell(filter_value($name, '', '#', $item['description']), $row_id);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell($name, $row_id);\n\t\t\t}\n\n\t\t\tform_selectable_cell($oid, $row_id);\n\t\t\tform_selectable_cell($mib, $row_id);\n\t\t\tform_selectable_ecell($item['kind'], $row_id);\n\t\t\tform_selectable_cell($item['max-access'],$row_id);\n\t\t\tform_selectable_cell(((isset($notifications[$item['mib']]) && isset($notifications[$item['mib']][$item['name']])) ? '<span class=\"deviceUp\">' . __('Enabled'):'<span class=\"deviceDown\">' . __('Disabled')) . '</span>', $row_id);\n\t\t\tform_checkbox_cell($item['oid'], $row_id);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"7\"><em>' . __('No SNMP Notifications') . '</em></td></tr>';\n\t}\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($mactions);\n\n\tform_end();\n}\n\nfunction create_manager_log_filter($severity_levels) {\n\tglobal $item_rows;\n\n\t$all = array('-1' => __('All'));\n\n\t$severity_levels = $all + $severity_levels;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'severity' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Severity'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $severity_levels,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Entries'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Purge'),\n\t\t\t\t'title'   => __('Purge the Notification Receiver Log'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_manager_log_filter($render = false, $severity_levels = '', $header_label = '') {\n\t$filters = create_manager_log_filter($severity_levels);\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header_label, 'managers.php?action=edit&tab=logs&id=' . get_filter_request_var('id'), 'form_log', 'sess_snmp_log');\n\n\t$pageFilter->rows_label = __('Entries');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction manager_logs($id, $header_label) {\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\tif (get_request_var('action') == 'purge') {\n\t\tdb_execute_prepared('DELETE FROM snmpagent_notifications_log WHERE manager_id = ?', array($id));\n\t\tset_request_var('clear', true);\n\t}\n\n\tprocess_sanitize_draw_manager_log_filter(true, $severity_levels, $header_label);\n\t/* ==================================================== */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_params   = array();\n\n\t$sql_where    = 'WHERE snl.manager_id = ?';\n\t$sql_params[] = $id;\n\n\t/* filter by severity */\n\tif (get_request_var('severity') > 0) {\n\t\t$sql_where   .= ' AND snl.severity = ?';\n\t\t$sql_params[] = get_request_var('severity');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ' AND (`varbinds` LIKE ?)';\n\t\t$sql_params[] = '%' . get_request_var('severity') . '%';\n\t}\n\n\t$sql_order = ' ORDER by `id` DESC';\n\n\t$sql_query = \"SELECT snl.*, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\t$sql_where\n\t\t$sql_order\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\tform_start('managers.php', 'chk');\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$logs = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t$display_text = array(\n\t\t__('Data'),\n\t\t__('Time'),\n\t\t__('Notification'),\n\t\t__('Varbinds')\n\t);\n\n\t$nav = html_nav_bar('managers.php?action=exit&id=' . $id . '&tab=logs&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text), __('Receivers'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header($display_text);\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['id'], true);\n\n\t\t\tform_selectable_cell(filter_value('', '', '#', __esc('Severity Level') . ': ' . $severity_levels[$item['severity']]), $item['id'], '', 'width:10px;background-color:' . $severity_colors[$item['severity']] . ';border-top:1px solid white;border-bottom:1px solid white;');\n\t\t\tform_selectable_cell(date('Y/m/d H:i:s', $item['time']), $item['id']);\n\n\t\t\tif ($item['description']) {\n\t\t\t\t$description = '';\n\t\t\t\t$lines       = preg_split('/\\r\\n|\\r|\\n/', $item['description']);\n\n\t\t\t\tforeach ($lines as $line) {\n\t\t\t\t\t$description .= html_escape(trim($line)) . '<br>';\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell(filter_value($item['notification'], '', '#', $item['notification'] . $description), $item['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_ecell($item['notification'], $item['id']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($varbinds, $item['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"4\"><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\t<input type='hidden' name='id' value='<?php print get_filter_request_var('id'); ?>'>\n\t<div style='display:none' id='snmpagentTooltip'></div>\n\t<?php\n}\n\nfunction form_save() {\n\tif (!isset_request_var('tab')) {\n\t\tset_request_var('tab', 'general');\n\t}\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('max_log_size');\n\n\tif (!in_array(get_nfilter_request_var('max_log_size'), range(1,31), true)) {\n\t\tdie_html_input_error('max_log_size');\n\t}\n\t/* ================= input validation ================= */\n\n\tswitch(get_nfilter_request_var('tab')) {\n\t\tcase 'notifications':\n\t\t\theader('Location: managers.php?action=edit&tab=notifications&id=' . get_request_var('id'));\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$save['id']             = get_request_var('id');\n\t\t\t$save['description']    = form_input_validate(trim(get_nfilter_request_var('description')), 'description', '', false, 3);\n\t\t\t$save['hostname']       = form_input_validate(trim(get_nfilter_request_var('hostname')), 'hostname', '', false, 3);\n\t\t\t$save['disabled']       = form_input_validate(get_nfilter_request_var('disabled'), 'disabled', '^on$', true, 3);\n\t\t\t$save['max_log_size']   = get_nfilter_request_var('max_log_size');\n\t\t\t$save['snmp_version']   = form_input_validate(get_nfilter_request_var('snmp_version'), 'snmp_version', '^[1-3]$', false, 3);\n\t\t\t$save['snmp_community'] = form_input_validate(get_nfilter_request_var('snmp_community'), 'snmp_community', '', true, 3);\n\n\t\t\tif ($save['snmp_version'] == 3) {\n\t\t\t\t$save['snmp_username']        = form_input_validate(get_nfilter_request_var('snmp_username'), 'snmp_username', '', true, 3);\n\t\t\t\t$save['snmp_password']        = form_input_validate(get_nfilter_request_var('snmp_password'), 'snmp_password', '', true, 3);\n\t\t\t\t$save['snmp_auth_protocol']   = form_input_validate(get_nfilter_request_var('snmp_auth_protocol'), 'snmp_auth_protocol', \"^\\[None\\]|MD5|SHA|SHA224|SHA256|SHA392|SHA512$\", true, 3);\n\t\t\t\t$save['snmp_priv_passphrase'] = form_input_validate(get_nfilter_request_var('snmp_priv_passphrase'), 'snmp_priv_passphrase', '', true, 3);\n\t\t\t\t$save['snmp_priv_protocol']   = form_input_validate(get_nfilter_request_var('snmp_priv_protocol'), 'snmp_priv_protocol', \"^\\[None\\]|DES|AES|AES128|AES192|AES192C|AES256|AES256C$\", true, 3);\n\t\t\t\t$save['snmp_engine_id']       = form_input_validate(get_request_var_post('snmp_engine_id'), 'snmp_engine_id', '', false, 3);\n\t\t\t} else {\n\t\t\t\t$save['snmp_username']        = '';\n\t\t\t\t$save['snmp_password']        = '';\n\t\t\t\t$save['snmp_auth_protocol']   = '';\n\t\t\t\t$save['snmp_priv_passphrase'] = '';\n\t\t\t\t$save['snmp_priv_protocol']   = '';\n\t\t\t\t$save['snmp_engine_id']       = '';\n\t\t\t}\n\n\t\t\t$save['snmp_port']         = form_input_validate(get_nfilter_request_var('snmp_port'), 'snmp_port', '^[0-9]+$', false, 3);\n\t\t\t$save['snmp_message_type'] = form_input_validate(get_nfilter_request_var('snmp_message_type'), 'snmp_message_type', '^[1-2]$', false, 3);\n\t\t\t$save['notes']             = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_password'] != get_nfilter_request_var('snmp_password_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_priv_passphrase'] != get_nfilter_request_var('snmp_priv_passphrase_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\t$manager_id = 0;\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$manager_id = sql_save($save, 'snmpagent_managers');\n\t\t\t\traise_message(($manager_id)? 1 : 2);\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\theader('Location: managers.php?action=edit&id=' . (empty($manager_id) ? get_nfilter_request_var('id') : $manager_id));\n}\n\nfunction form_actions() {\n\tglobal $actions, $mactions;\n\n\tif (isset_request_var('selected_items')) {\n\t\tif (isset_request_var('action_receivers')) {\n\t\t\t$selected_items = cacti_unserialize(stripslashes(get_nfilter_request_var('selected_graphs_array')));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers WHERE id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers_notifications WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_notifications_log WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = 'on' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = '' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t}\n\n\t\t\t\theader('Location: managers.php');\n\n\t\t\t\texit;\n\t\t\t}\n\t\t} elseif (isset_request_var('action_receiver_notifications')) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('id');\n\t\t\t/* ==================================================== */\n\n\t\t\t$selected_items = cacti_unserialize(stripslashes(get_nfilter_request_var('selected_items')));\n\n\t\t\tif ($selected_items !== false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // disable\n\t\t\t\t\tforeach ($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach ($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM snmpagent_managers_notifications\n\t\t\t\t\t\t\t\tWHERE `manager_id` = ?\n\t\t\t\t\t\t\t\tAND `mib` = ?\n\t\t\t\t\t\t\t\tAND `notification` = ?\n\t\t\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $mib, $notification));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\tforeach ($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach ($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO snmpagent_managers_notifications\n\t\t\t\t\t\t\t\t(`manager_id`, `notification`, `mib`)\n\t\t\t\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $notification, $mib));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\theader('Location: managers.php?action=edit&id=' . get_nfilter_request_var('id') . '&tab=notifications');\n\n\t\t\texit;\n\t\t}\n\t} elseif (isset_request_var('action_receivers')) {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\tforeach ($_POST as $key => $value) {\n\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t/* grep manager's id */\n\t\t\t\t$id = substr($key, 4);\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($id, 'id');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT description FROM snmpagent_managers WHERE id = ?', array($id))) . '</li>';\n\n\t\t\t\t$iarray[] = $id;\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'managers.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'eaction'    => 'action_receivers',\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Notification Receiver.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Notification Receivers.'),\n\t\t\t\t\t'scont'    => __('Delete Notification Receiver'),\n\t\t\t\t\t'pcont'    => __('Delete Notification Receivers')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Notification Receiver.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Notification Receivers.'),\n\t\t\t\t\t'scont'    => __('Disable Notification Receiver'),\n\t\t\t\t\t'pcont'    => __('Disable Notification Receivers')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Notification Receiver.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Notification Receivers.'),\n\t\t\t\t\t'scont'    => __('Enable Notification Receiver'),\n\t\t\t\t\t'pcont'    => __('Enable Notification Receivers'),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\tforeach ($_POST as $key => $value) {\n\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t/* grep mib and notification name */\n\t\t\t\t$row_id = substr($key, 4);\n\n\t\t\t\tlist($mib, $name) = explode('__', $row_id);\n\n\t\t\t\t$ilist .= '<li>' . html_escape($name) . ' (' . html_escape($mib) .')</li>';\n\n\t\t\t\t$iarray[$mib][$name] = 1;\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'managers.php?action=edit&tab=notifications&id=' . get_request_var('id'),\n\t\t\t\t'actions'    => $mactions,\n\t\t\t\t'eaction'    => 'action_receiver_notifications',\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable Forwarding the following Notification Object the following Notification Receiver.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable Forwarding the following Notification Objects to the following Notification Receiver.'),\n\t\t\t\t\t'scont'    => __('Disable Forwarding Object'),\n\t\t\t\t\t'pcont'    => __('Disable Forwarding Objects')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable Forwarding the following Notification Object to this Notification Receiver.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable Forwarding the following Notification Objects Notification Receivers.'),\n\t\t\t\t\t'scont'    => __('Enable Forwarding Object'),\n\t\t\t\t\t'pcont'    => __('Enable Forwarding Objects')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n"
        },
        {
          "name": "mibs",
          "type": "tree",
          "content": null
        },
        {
          "name": "oauth2.php",
          "type": "blob",
          "size": 3.896484375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire('./include/auth.php');\n\nif (read_config_option('settings_how') != 3) {\n\tcacti_log('WARNING: Trying get OAuth2 token but different mail method is configured');\n\tdie('OAuth is not configured');\n}\n\n$clientId = read_config_option('settings_oauth2_client_id');\n$clientSecret = read_config_option('settings_oauth2_client_secret');\n$redirectUri = read_config_option('settings_oauth2_redirect_uri');\n// for azure only\n$tenantId = read_config_option('settings_oauth2_tenant_id');\n\n$params = [\n    'clientId' => $clientId,\n    'clientSecret' => $clientSecret,\n    'redirectUri' => $redirectUri,\n    'accessType' => 'offline'\n];\n\n$options = [];\n\n$providerName = read_config_option('settings_oauth2_provider');\n\nswitch ($providerName) {\n\tcase 'google':\n\t\t$provider = new League\\OAuth2\\Client\\Provider\\Google($params);\n\t\t$options = [\n\t\t\t'scope' => [\n\t\t\t\t'https://mail.google.com/'\n\t\t\t]\n\t\t];\n\n\t\tbreak;\n\tcase 'yahoo':\n\t\t$provider = new Hayageek\\OAuth2\\Client\\Provider\\Yahoo($params);\n\n\t\tbreak;\n\tcase 'microsoft':\n\t\t$provider = new Stevenmaguire\\OAuth2\\Client\\Provider\\Microsoft($params);\n\t\t$options = [\n\t\t\t'scope' => [\n\t\t\t\t'wl.imap',\n\t\t\t\t'wl.offline_access'\n\t\t\t]\n\t\t];\n\n\t\tbreak;\n\tcase 'azure':\n\t\t$params['tenantId'] = $tenantId;\n\n\t\t$provider = new Greew\\OAuth2\\Client\\Provider\\Azure($params);\n\t\t$options = [\n\t\t\t'scope' => [\n\t\t\t\t'https://outlook.office.com/SMTP.Send',\n\t\t\t\t'offline_access'\n\t\t\t]\n\t\t];\n\n\t\tbreak;\n\tdefault:\n\t\tcacti_log('ERROR: Unknown OAuth2 provider');\n\t\tdie('Provider missing');\n\n\t\tbreak;\n}\n\nif (!isset($_GET['code'])) { // If we don't have an authorization code then get one\n\t$authUrl = $provider->getAuthorizationUrl($options);\n\t$_SESSION['oauth2state'] = $provider->getState();\n\theader('Location: ' . $authUrl);\n\texit;\n\n\t//Check given state against previously stored one to mitigate CSRF attack\n} elseif (empty($_GET['state']) || (isset($_SESSION['oauth2state']) && ($_GET['state'] !== $_SESSION['oauth2state']))) {\n\tunset($_SESSION['oauth2state']);\n\texit('Invalid state');\n} else { // Try to get an access token (using the authorization code grant)\n\t$token = $provider->getAccessToken(\n\t\t'authorization_code',\n\t\t[\n\t\t\t'code' => $_GET['code']\n\t\t]\n\t);\n\n\t//Use this to interact with an API on the users behalf\n\t//Use this to get a new access token if the old one expires\n\tprint __('Refresh Token: ') . $token->getRefreshToken();\n\tprint '<br/>' . __('Store this token in Settings -> Mail/Reporting/DNS -> Oauth2 refresh token');\n}\n\n"
        },
        {
          "name": "package.php",
          "type": "blob",
          "size": 15.564453125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDTool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/export.php');\ninclude_once('./lib/import.php');\ninclude_once('./lib/package.php');\ninclude_once('./lib/xml.php');\n\n/* set default action */\nset_default_action();\n\nif (check_get_author_info() === false) {\n\texit;\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'get_contents':\n\t\t$export_type    = get_nfilter_request_var('export_type');\n\t\t$export_item_id = get_nfilter_request_var('export_item_id');\n\t\t$include_deps   = (get_nfilter_request_var('include_deps') == 'true' ? true:false);\n\n\t\tprint get_package_contents($export_type, $export_item_id);\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\texport();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tglobal $export_types, $export_errors, $debug, $package_file;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('export_item_id');\n\t/* ==================================================== */\n\n\t$export_okay = false;\n\n\t$xml_data = get_item_xml(get_nfilter_request_var('export_type'), get_nfilter_request_var('export_item_id'), (((isset_request_var('include_deps') ? get_nfilter_request_var('include_deps') : '') == '') ? false : true));\n\n\t$info                 = array();\n\t$info['name']         = get_nfilter_request_var('name');\n\t$info['author']       = get_nfilter_request_var('author');\n\t$info['homepage']     = get_nfilter_request_var('homepage');\n\t$info['email']        = get_nfilter_request_var('email');\n\t$info['description']  = get_nfilter_request_var('description');\n\t$info['class']        = get_nfilter_request_var('class');\n\t$info['tags']         = get_nfilter_request_var('tags');\n\t$info['installation'] = get_nfilter_request_var('installation');\n\t$info['version']      = get_nfilter_request_var('version');\n\t$info['copyright']    = get_nfilter_request_var('copyright');\n\n\t// Let's store the Template information for subsequent exports\n\t$hash = get_export_hash(get_nfilter_request_var('export_type'), get_nfilter_request_var('export_item_id'));\n\n\t$export_okay = save_packager_metadata($hash, $info);\n\n\t$debug = '';\n\n\tif ($export_okay) {\n\t\t$files = find_dependent_files($xml_data);\n\n\t\t/* search xml files for scripts */\n\t\tif (cacti_sizeof($files)) {\n\t\t\tforeach($files as $file) {\n\t\t\t\tif (strpos($file['file'], '.xml') !== false) {\n\t\t\t\t\t$files = array_merge($files, find_dependent_files(file_get_contents($file['file'])));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$success = package_template($xml_data, $info, $files, $debug);\n\t} else {\n\t\ttop_header();\n\t\tprint __('WARNING: Export Errors Encountered. Refresh Browser Window for Details!') . \"\\n\";\n\t\tprint $xml_data;\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tif ($export_errors || !$success) {\n\t\traise_message('package_error', __('There were errors packaging your Templates.  Errors Follow. ') . str_replace(\"\\n\", '<br>', $debug), MESSAGE_LEVEL_ERROR);\n\t\theader('Location: package.php');\n\t\texit;\n\t} elseif ($package_file != '') {\n\t\theader('Content-Type: application/gzip');\n\t\theader('Content-Disposition: attachment; filename=\"' . basename($package_file) . '\"');\n\t\theader('Content-Length: ' . filesize($package_file));\n\t\theader('Content-Control: no-cache');\n\t\theader('Pragma: public');\n\t\theader('Expires: 0');\n\t\treadfile($package_file);\n\t\tunlink($package_file);\n\t\texit;\n\t}\n}\n\nfunction export() {\n\tglobal $export_types, $config, $device_classes, $graph_template_classes, $copyrights;\n\n\t/* 'graph_template' should be the default */\n\tif (!isset_request_var('export_type')) {\n\t\tset_request_var('export_type', 'host_template');\n\n\t\t$id = db_fetch_cell('SELECT id FROM host_template ORDER BY name LIMIT 1');\n\n\t\tset_request_var('export_item_id', $id);\n\t}\n\n\tunset($export_types['data_template']);\n\tunset($export_types['data_query']);\n\n\tswitch (get_nfilter_request_var('export_type')) {\n\t\tcase 'host_template':\n\t\tcase 'graph_template':\n\t\tcase 'data_query':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tset_request_var('export_type', 'host_template');\n\t}\n\n\thtml_start_box(__('Package Templates'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='tableRow'>\n\t\t<td>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><span class='formItemName'><?php print __('What would you like to Package?');?>&nbsp;</span></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='export_type'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach($export_types as $key => $array) {\n\t\t\t\t\t\t\t\tprint \"<option value='$key'\"; if (get_nfilter_request_var('export_type') == $key) { print ' selected'; } print '>' . html_escape($array['name']) . \"</option>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$info = check_get_author_info();\n\tif ($info === false) {\n\t\texit;\n\t}\n\n\t// Let's get any saved package details from the last time the template was packaged\n\t$data = array();\n\t$hash = get_export_hash(get_nfilter_request_var('export_type'), get_nfilter_request_var('export_item_id'));\n\n\t// Two methods, one with SQLite and one without\n\n\t$data = array();\n\tif (class_exists('SQLite3')) {\n\t\t$data = get_packager_metadata($hash);\n\t}\n\n\t// Legacy support, to be deprecated eventually\n\tif (!cacti_sizeof($data)) {\n\t\t$data = read_config_option('package_export_' . $hash);\n\n\t\tif ($data != '') {\n\t\t\t$data = json_decode($data, true);\n\t\t}\n\t}\n\n\t// If this template has not been saved before, initialize values\n\tswitch(get_nfilter_request_var('export_type')) {\n\t\tcase 'host_template':\n\t\t\t$classes = $device_classes;\n\n\t\t\tif (!isset_request_var('export_item_id')) {\n\t\t\t\t$detail = db_fetch_row('SELECT *\n\t\t\t\t\tFROM host_template\n\t\t\t\t\tORDER BY name\n\t\t\t\t\tLIMIT 1');\n\t\t\t} else {\n\t\t\t\t$detail = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM host_template\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('export_item_id')));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'graph_template':\n\t\t\t$classes = $graph_template_classes;\n\n\t\t\tif (!isset_request_var('export_item_id')) {\n\t\t\t\t$detail = db_fetch_row('SELECT *\n\t\t\t\t\tFROM graph_templates\n\t\t\t\t\tORDER BY name\n\t\t\t\t\tLIMIT 1');\n\t\t\t} else {\n\t\t\t\t$detail = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM graph_templates\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('export_item_id')));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'data_query':\n\t\t\t$classes = $graph_template_classes;\n\n\t\t\tif (!isset_request_var('export_item_id')) {\n\t\t\t\t$detail = db_fetch_row('SELECT id, name\n\t\t\t\t\tFROM snmp_query\n\t\t\t\t\tORDER BY name\n\t\t\t\t\tLIMIT 1');\n\t\t\t} else {\n\t\t\t\t$detail = db_fetch_row_prepared('SELECT id, name\n\t\t\t\t\tFROM snmp_query\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('export_item_id')));\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\tif (cacti_sizeof($detail)) {\n\t\tswitch(get_nfilter_request_var('export_type')) {\n\t\t\tcase 'host_template':\n\t\t\t\t$data['description'] = __('%s Device Package', $detail['name']);\n\t\t\t\tbreak;\n\t\t\tcase 'graph_template':\n\t\t\t\t$data['description'] = __('%s Graph Template Package', $detail['name']);\n\t\t\t\tbreak;\n\t\t\tcase 'data_query':\n\t\t\t\t$data['description'] = __('%s Data Query Package', $detail['name']);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$meta_columns = array('version', 'class', 'author', 'email', 'tags', 'copyright', 'installation');\n\n\t\tforeach($meta_columns as $m) {\n\t\t\tif (isset($detail[$m]) && $detail[$m] != '') {\n\t\t\t\t$data[$m] = $detail[$m];\n\t\t\t} else {\n\t\t\t\t$default = read_config_option(\"package_$m\");\n\n\t\t\t\tif (!empty($default)) {\n\t\t\t\t\t$data[$m] = $default;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$data['name'] = $detail['name'];\n\t}\n\n\tif (cacti_sizeof($data)) {\n\t\t$info = array_merge($info, $data);\n\t}\n\n\tform_start('package.php', 'form_id');\n\n\thtml_start_box(__('Available Templates [%s]', $export_types{get_nfilter_request_var('export_type')}['name']), '100%', '', '3', 'center', '');\n\n\t$package_form = array(\n\t\t'spacer0' => array(\n\t\t\t'method' => 'spacer',\n\t\t\t'friendly_name' => __('Available Templates'),\n\t\t),\n\t\t'export_item_id' => array(\n\t\t\t'method' => 'drop_sql',\n\t\t\t'friendly_name' => __('%s to Export', $export_types{get_nfilter_request_var('export_type')}['name']),\n\t\t\t'description' => __('Choose the exact items to export in the Package.'),\n\t\t\t'value' => (isset_request_var('export_item_id') ? get_filter_request_var('export_item_id'):'|arg1:export_item_id|'),\n\t\t\t'sql' => $export_types[get_nfilter_request_var('export_type')]['dropdown_sql']\n\t\t),\n\t\t'include_deps' => array(\n\t\t\t'method' => 'checkbox',\n\t\t\t'friendly_name' => __('Include Dependencies'),\n\t\t\t'description' => __('Some templates rely on other items in Cacti to function properly. It is highly recommended that you select this box or the resulting import may fail.'),\n\t\t\t'value' => 'on',\n\t\t\t'sql' => $export_types[get_nfilter_request_var('export_type')]['dropdown_sql']\n\t\t),\n\t\t'spacer1' => array(\n\t\t\t'method' => 'spacer',\n\t\t\t'friendly_name' => __('Package Information'),\n\t\t),\n\t\t'description' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Description'),\n\t\t\t'description' => __('The Package Description.'),\n\t\t\t'value' => (isset($info['description']) ? $info['description']:read_config_option('package_description', true)),\n\t\t\t'max_length' => '255',\n\t\t\t'size' => '80'\n\t\t),\n\t\t'copyright' => array(\n\t\t\t'method' => 'drop_array',\n\t\t\t'friendly_name' => __('Copyright'),\n\t\t\t'description' => __('The license type for this package.'),\n\t\t\t'value' => (isset($info['copyright']) ? $info['copyright']:'GNU General Public License'),\n\t\t\t'array' => array(\n\t\t\t\t'Apache License 2.0'                 => __('Apache License 2.0'),\n\t\t\t\t'Creative Commons'                   => __('Creative Commons'),\n\t\t\t\t'GNU General Public License'         => __('GNU General Public License'),\n\t\t\t\t'MIT License'                        => __('MIT License'),\n\t\t\t\t'Eclipse Public License version 2.0' => __('Eclipse Public License version 2.0'),\n\t\t\t),\n\t\t\t'default' => 'GNU General Public License'\n\t\t),\n\t\t'version' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Version'),\n\t\t\t'description' => __('The version number to publish for this Package.'),\n\t\t\t'value' => (isset($info['version']) ? $info['version']:read_config_option('package_version', true)),\n\t\t\t'max_length' => '10',\n\t\t\t'size' => '10'\n\t\t),\n\t\t'class' => array(\n\t\t\t'method' => 'drop_array',\n\t\t\t'friendly_name' => __('Class'),\n\t\t\t'description' => __('The Classification of the Package.'),\n\t\t\t'value' => (isset($info['class']) ? $info['class']:read_config_option('package_class', true)),\n\t\t\t'array' => $classes,\n\t\t\t'default' => 'unassigned'\n\t\t),\n\t\t'tags' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Tags'),\n\t\t\t'description' => __('Assign various searchable attributes to the Package.'),\n\t\t\t'value' => (isset($info['tags']) ? $info['tags']:read_config_option('package_tags', true)),\n\t\t\t'textarea_rows' => '2',\n\t\t\t'textarea_cols' => '80'\n\t\t),\n\t\t'installation' => array(\n\t\t\t'method' => 'textarea',\n\t\t\t'friendly_name' => __('Installation Instructions'),\n\t\t\t'description' => __('Some Packages require additional changes outside of Cacti\\'s scope such as setting up an SNMP Agent Extension on the Devices to be monitored.  You should add those instructions here..'),\n\t\t\t'value' => (isset($info['installation']) ? $info['installation']:read_config_option('package_installation', true)),\n\t\t\t'textarea_rows' => '5',\n\t\t\t'textarea_cols' => '80'\n\t\t),\n\t\t'spacer2' => array(\n\t\t\t'method' => 'spacer',\n\t\t\t'friendly_name' => __('Author Information'),\n\t\t),\n\t\t'author' => array(\n\t\t\t'method' => 'other',\n\t\t\t'friendly_name' => __('Author Name'),\n\t\t\t'description' => __('The Registered Authors Name.'),\n\t\t\t'value' => $info['author'],\n\t\t\t'max_length' => '40',\n\t\t\t'size' => '40'\n\t\t),\n\t\t'homepage' => array(\n\t\t\t'method' => 'other',\n\t\t\t'friendly_name' => __('Homepage'),\n\t\t\t'description' => __('The Registered Authors Home Page.'),\n\t\t\t'value' => $info['homepage'],\n\t\t\t'max_length' => '60',\n\t\t\t'size' => '60'\n\t\t),\n\t\t'email' => array(\n\t\t\t'method' => 'other',\n\t\t\t'friendly_name' => __('Email Address'),\n\t\t\t'description' => __('The Registered Authors Email Address.'),\n\t\t\t'value' => $info['email'],\n\t\t\t'max_length' => '60',\n\t\t\t'size' => '60'\n\t\t),\n\t\t'export_type' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => get_nfilter_request_var('export_type')\n\t\t)\n\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $package_form\n\t\t)\n\t);\n\n\thtml_end_box();\n\n\t?>\n\t<table style='width:100%;text-align:center;'>\n\t\t<tr>\n\t\t\t<td class='saveRow'>\n\t\t\t\t<input type='hidden' name='action' value='save'>\n\t\t\t\t<input type='hidden' id='name' name='name' value='<?php print $detail['name'];?>'>\n\t\t\t\t<input class='export' type='submit' value='<?php print __('Package');?>'>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t</form>\n\t<script type='text/javascript'>\n\tvar stopTimer = null;\n\n\t$(function() {\n\t\t$('#export_type').change(function() {\n\t\t\tstrURL  = urlPath+'package.php';\n\t\t\tstrURL += '?header=false';\n\t\t\tstrURL += '&export_type='+$('#export_type').val();\n\t\t\tstrURL += '&author='+$('#author').val();\n\t\t\tstrURL += '&homepage='+escape($('#homepage').val());\n\t\t\tstrURL += '&email='+$('#email').val();\n\t\t\tstrURL += '&description='+escape($('#description').val());\n\t\t\tstrURL += '&version='+escape($('#version').val());\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\n\t\t$('#export_item_id').change(function() {\n\t\t\tstrURL  = urlPath+'package.php';\n\t\t\tstrURL += '?header=false';\n\t\t\tstrURL += '&export_type='+$('#export_type').val();\n\t\t\tstrURL += '&export_item_id='+$('#export_item_id').val();\n\t\t\tstrURL += '&author='+$('#author').val();\n\t\t\tstrURL += '&homepage='+escape($('#homepage').val());\n\t\t\tstrURL += '&email='+$('#email').val();\n\t\t\tstrURL += '&description='+escape($('#description').val());\n\t\t\tstrURL += '&version='+escape($('#version').val());\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\n\t\tif ($('#details').length) {\n\t\t\tstrURL  = urlPath+'package.php';\n\t\t\tstrURL += '?action=get_contents';\n\t\t\tstrURL += '&export_type='+$('#export_type').val();\n\t\t\tstrURL += '&export_item_id='+$('#export_item_id').val();\n\t\t\tstrURL += '&include_deps='+$('#include_deps').is(':checked');\n\t\t\t$.get(strURL, function(data) {\n\t\t\t\t$('#details').html(data);\n\t\t\t\t$('#name').val($('#export_item_id option:selected').text());\n\t\t\t});\n\t\t}\n\n\t\t$('form#form_id').submit(function(event) {\n\t\t\tstopTimer = setTimeout(function() { Pace.stop() }, 1000);\n\t\t});\n\n\t\tif ($('#name').val() == '') {\n\t\t\t$('#name').val($('#export_item_id option:selected').text());\n\t\t}\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Package Contents Include'), '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('export_type') && isset_request_var('export_item_id')) {\n\t\tprint get_package_contents(get_request_var('export_type'), get_request_var('export_item_id'));\n\t} else {\n\t\tprint '<div id=\"details\" style=\"vertical-align:top\">';\n\t\tprint '</div>';\n\t}\n\n\thtml_end_box();\n}\n\n"
        },
        {
          "name": "package_import.php",
          "type": "blob",
          "size": 56.4951171875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/import.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\ninclude_once('./lib/xml.php');\ninclude_once('./include/vendor/phpdiff/Diff.php');\ninclude_once('./include/vendor/phpdiff/Renderer/Html/Inline.php');\n\n/* set default action */\nset_default_action();\n\ncheck_tmp_dir();\n\n$actions = array(\n\t1 => __('Import'),\n);\n\nswitch(get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'details':\n\t\tpackage_get_details();\n\n\t\tbreak;\n\tcase 'diff':\n\t\tpackage_diff_file();\n\n\t\tbreak;\n\tcase 'verify':\n\t\tpackage_verify_key();\n\n\t\tbreak;\n\tcase 'accept':\n\t\tpackage_accept_key();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tpackage_import();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction check_tmp_dir() {\n\tif (is_tmp_writable()) {\n\t\treturn true;\n\t} else {\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\tvar mixedReasonTitle = '<?php print __('Key Generation Required to Use Tool');?>';\n\t\tvar mixedOnPage      = '<?php print __esc('Packaging Key Information Not Found');?>';\n\n\t\tsessionMessage = {\n\t\t\tmessage: '<?php print __('In order to use this Packaging Tool, you must first run the <b><i class=\"deviceUp\">genkey.php</i></b> script in the cli directory.  Once that is complete, you will have a public and private key used to sign your packages.');?>',\n\t\t\tlevel: MESSAGE_LEVEL_MIXED\n\t\t};\n\n\t\t$(function() {\n\t\t\tdisplayMessages();\n\t\t});\n\t\t</script>\n\t\t<?php\n\n\t\texit;\n\t}\n}\n\nfunction form_actions() {\n\tglobal $config, $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\tget_filter_request_var('data_source_profile');\n\tget_filter_request_var('package_location');\n\tget_filter_request_var('remove_orphans', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/(on)/')));\n\tget_filter_request_var('replace_svalues', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/(on)/')));\n\t/* ==================================================== */\n\n\t$package_location = get_filter_request_var('package_location');\n\t$profile_id       = get_filter_request_var('data_source_profile');\n\t$remove_orphans   = isset_request_var('remove_orphans') ? true:false;\n\t$replace_svalues  = isset_request_var('replace_svalues') ? true:false;\n\t$preview          = false;\n\n\t$package = json_decode(get_repo_manifest_file($package_location), true);\n\n\t$manifest = $package['manifest'];\n\n\t// Import Execution\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items  = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t$hashes = unserialize(stripslashes(get_nfilter_request_var('selected_hashes')), array('allowed_classes' => false));\n\t\t$files  = unserialize(stripslashes(get_nfilter_request_var('selected_files')), array('allowed_classes' => false));\n\n\t\t$import_packages = array();\n\t\t$import_hashes   = array();\n\t\t$import_files    = array();\n\t\t$import_names    = array();\n\n\t\tif (cacti_sizeof($hashes)) {\n\t\t\tforeach($hashes as $h) {\n\t\t\t\tif (is_array($h['files'])) {\n\t\t\t\t\tforeach($h['files'] as $file) {\n\t\t\t\t\t\t$import_hashes[$file][] = $h['hash'];\n\t\t\t\t\t\t$import_packages[$file] = $file;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$import_hashes[$h['files']][] = $h['files'];\n\t\t\t\t\t$import_packages[$h['files']] = $h['files'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($files)) {\n\t\t\tforeach($files as $f) {\n\t\t\t\t$import_files[$f['filename']][]  = $f['pfile'];\n\t\t\t\t$import_packages[$f['filename']] = $f['filename'];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($import_packages)) {\n\t\t\tforeach($import_packages as $filename) {\n\t\t\t\tif (!isset($import_names[$filename])) {\n\t\t\t\t\tforeach($manifest as $index => $item) {\n\t\t\t\t\t\tif ($item['filename'] == $filename) {\n\t\t\t\t\t\t\t$name = $item['name'];\n\n\t\t\t\t\t\t\t$import_names[$filename] = $name;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$name = $import_names[$filename];\n\t\t\t\t}\n\n\t\t\t\tif (get_request_var('drp_action') == 1) { // Import\n\t\t\t\t\t$data = get_repo_file($package_location, $filename);\n\n\t\t\t\t\tif (isset($import_hashes[$filename]) && cacti_sizeof($import_hashes[$filename])) {\n\t\t\t\t\t\t$hashes = $import_hashes[$filename];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$hashes = array();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($import_files[$filename]) && cacti_sizeof($import_files[$filename])) {\n\t\t\t\t\t\t$files = $import_files[$filename];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$files = array();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($data !== false) {\n\t\t\t\t\t\t$tmp_dir = sys_get_temp_dir() . '/package' . $_SESSION[SESS_USER_ID];\n\n\t\t\t\t\t\tif (!is_dir($tmp_dir)) {\n\t\t\t\t\t\t\tif (!mkdir($tmp_dir, true)) {\n\t\t\t\t\t\t\t\traise_message('tmpdir_fail', __('Unable to create package temporary directory %s.', $tmp_dir), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$xmlfile = $tmp_dir . '/' . $filename;\n\n\t\t\t\t\t\tfile_put_contents($xmlfile, $data);\n\n\t\t\t\t\t\t$data = import_package($xmlfile, $profile_id, $remove_orphans, $replace_svalues, $preview, false, true, $hashes, $files);\n\n\t\t\t\t\t\tif ($data !== false && cacti_sizeof($data[0])) {\n\t\t\t\t\t\t\timport_display_results($data[0], array(), true, true);\n\t\t\t\t\t\t\traise_message('import_success_' . md5($xmlfile), __('The Package %s Imported Successfully', $name), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message('import_fail_' . md5($xmlfile), __('The Package %s Import Failed', $name), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunlink($xmlfile);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: package_import.php?package_location=' . $package_location);\n\t\texit;\n\t}\n\n\t// Import Confirm\n\t$pkg_list      = '';\n\t$pkg_array     = array();\n\t$skp_list      = '';\n\t$skp_array     = array();\n\n\t$pkg_import_list  = '';\n\t$pkg_import_array = array();\n\t$found_pkg_array  = array();\n\n\t$pkg_file_list        = '';\n\t$pkg_file_array       = array();\n\t$found_pkg_file_array = array();\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (strpos($var, 'chk_file_') !== false) {\n\t\t\t$id = base64_decode(str_replace('chk_file_', '', $var), true);\n\t\t\t$id = json_decode($id, true);\n\n\t\t\t// Get rid of the basename\n\t\t\t$id['pfile'] = str_replace(CACTI_PATH_BASE . '/', '', $id['pfile']);\n\n\t\t\t$pkg_file_list .= '<tr>' .\n\t\t\t\t'<td style=\"width:50%\">' . html_escape($id['package']) . '</td>' .\n\t\t\t\t'<td style=\"width:50%\">' . html_escape($id['pfile'])   . '</td>' .\n\t\t\t'</td>';\n\n\t\t\t$pkg_file_array[] = $id;\n\n\t\t\t$found_pkg_file_array[$id['package']] = $id['package'];\n\t\t}\n\n\t\tif (strpos($var, 'chk_import_') !== false) {\n\t\t\t$id = base64_decode(str_replace('chk_import_', '', $var), true);\n\t\t\t$id = json_decode($id, true);\n\n\t\t\t$packages = explode('<br>', $id['package']);\n\t\t\t$package  = '';\n\t\t\tforeach($packages as $index => $p) {\n\t\t\t\t$package .= ($index > 0 ? ', ':'') . html_escape($p);\n\n\t\t\t\t$found_pkg_array[$p] = $p;\n\t\t\t}\n\n\t\t\t$statuses = explode('<br>', $id['status']);\n\t\t\t$status   = '';\n\t\t\tforeach($statuses as $index => $s) {\n\t\t\t\t$status .= ($index > 0 ? ', ':'') . html_escape(ucfirst($s));\n\t\t\t}\n\n\t\t\t$pkg_import_list .= '<tr>' .\n\t\t\t\t'<td style=\"width:40%\">' . $package                 . '</td>' .\n\t\t\t\t'<td style=\"width:20%\">' . html_escape($id['type']) . '</td>' .\n\t\t\t\t'<td style=\"width:20%\">' . html_escape($id['name']) . '</td>' .\n\t\t\t\t'<td style=\"width:20%\">' . $status                  . '</td>' .\n\t\t\t'</td>';\n\n\t\t\t$pkg_import_array[] = $id;\n\t\t}\n\t}\n\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_package_([0-9|]+)$/', $var, $matches)) {\n\t\t\t$package = $manifest[$matches[1]]['name'];\n\n\t\t\tif (isset($found_pkg_array[$package]) || isset($found_pkg_file_array[$package])) {\n\t\t\t\t$pkg_list .= '<li>' . html_escape($package) . '</li>';\n\t\t\t\t$pkg_array[] = $matches[1];\n\t\t\t} else {\n\t\t\t\t$skp_list .= '<li>' . html_escape($package) . '</li>';\n\t\t\t\t$skp_array[] = $matches[1];\n\t\t\t}\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('package_import.php');\n\n\thtml_start_box(__('Package %s', $actions[get_nfilter_request_var('drp_action')]), '60%', '', '3', 'center', '');\n\n\tif (isset($pkg_array) && cacti_sizeof($pkg_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* import */\n\t\t\tif ($pkg_file_list != '' || $pkg_import_list != '') {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to Import the following Package.', 'Click \\'Continue\\' to Import all following Packages.', cacti_sizeof($pkg_array)) . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$pkg_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\n\t\t\t\tif ($skp_list != '') {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __n(\n\t\t\t\t\t\t\t\t'The following Selected Package will be skipped as no Files or Template Items were selected.',\n\t\t\t\t\t\t\t\t'The following selected Packages will be skipped as no Files or Template Items were selected.', cacti_sizeof($skp_array)) . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$skp_list</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\";\n\t\t\t\t}\n\n\t\t\t\tif ($pkg_file_list != '') {\n\t\t\t\t\tprint '<tr><td><div class=\"cactiTableTitleRow\">' . __('Files to be Imported') . '</div></td></tr>';\n\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('The Files in the list below will be imported.') . \"</p>\n\t\t\t\t\t\t\t<table class='cactiTable itemlist'>\n\t\t\t\t\t\t\t\t<tr class='tableHeader'>\n\t\t\t\t\t\t\t\t\t<th>\" . __('Package') . \"</th>\n\t\t\t\t\t\t\t\t\t<th>\" . __('File')     . \"</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t$pkg_file_list\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\";\n\t\t\t\t}\n\n\t\t\t\tif ($pkg_import_list != '') {\n\t\t\t\t\tprint '<tr><td><div class=\"cactiTableTitleRow\">' . __('Template Items to be Imported') . '</div></td></tr>';\n\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('The Template Items in the list below will be imported.') . \"</p>\n\t\t\t\t\t\t\t<table class='cactiTable itemlist'>\n\t\t\t\t\t\t\t\t<tr class='tableHeader'>\n\t\t\t\t\t\t\t\t\t<th>\" . __('Package') . \"</th>\n\t\t\t\t\t\t\t\t\t<th>\" . __('Type')     . \"</th>\n\t\t\t\t\t\t\t\t\t<th>\" . __('Name')     . \"</th>\n\t\t\t\t\t\t\t\t\t<th>\" . __('Status')   . \"</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t$pkg_import_list\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\";\n\t\t\t\t}\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Import Package', 'Import Packages', cacti_sizeof($pkg_array)) . \"'>\";\n\t\t\t} else {\n\t\t\t\traise_message('no_selection', __('You must select either a File or a Template Item to import before proceeding'), MESSAGE_LEVEL_ERROR);\n\t\t\t\theader('Location: package_import.php');\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: package_import.php');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='package_location' value='\" . get_request_var('package_location') . \"'>\n\t\t\t<input type='hidden' name='data_source_profile' value='\" . get_request_var('data_source_profile') . \"'>\n\t\t\t<input type='hidden' name='remove_orphans' value='\" . (isset_request_var('remove_orphans') ? 'on':'') . \"'>\n\t\t\t<input type='hidden' name='replace_svalues' value='\" . (isset_request_var('replace_svalues') ? 'on':'') . \"'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($pkg_array) ? serialize($pkg_array) : '') . \"'>\n\t\t\t<input type='hidden' name='selected_hashes' value='\" . (isset($pkg_import_array) ? serialize($pkg_import_array) : '') . \"'>\n\t\t\t<input type='hidden' name='selected_files' value='\" . (isset($pkg_file_array) ? serialize($pkg_file_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction form_save() {\n\tglobal $config, $preview_only;\n\n\tvalidate_request_vars();\n\n\tif (isset_request_var('save_component_import')) {\n\t\tif (isset($_FILES['import_file']['tmp_name']) &&\n\t\t\t($_FILES['import_file']['tmp_name'] != 'none') &&\n\t\t\t($_FILES['import_file']['tmp_name'] != '')) {\n\t\t\t/* file upload */\n\t\t\t$xmlfile = $_FILES['import_file']['tmp_name'];\n\n\t\t\t$_SESSION['sess_import_package'] = file_get_contents($xmlfile);\n\t\t} elseif (isset($_SESSION['sess_import_package'])) {\n\t\t\t$xmlfile = sys_get_temp_dir() . '/package_import_' . rand();\n\n\t\t\tfile_put_contents($xmlfile, $_SESSION['sess_import_package']);\n\n\t\t\tunset($_SESSION['sess_import_package']);\n\t\t} else {\n\t\t\theader('Location: package_import.php');\n\t\t\texit;\n\t\t}\n\n\t\tif (isset_request_var('trust_signer') && get_nfilter_request_var('trust_signer') == 'on') {\n\t\t\timport_validate_public_key($xmlfile, true);\n\t\t}\n\n\t\tif (get_filter_request_var('data_source_profile') == '0') {\n\t\t\t$import_as_new = true;\n\t\t\t$profile_id = db_fetch_cell('SELECT id FROM data_source_profiles ORDER BY `default` DESC LIMIT 1');\n\t\t} else {\n\t\t\t$import_as_new = false;\n\t\t\t$profile_id = get_request_var('data_source_profile');\n\t\t}\n\n\t\tif (get_nfilter_request_var('preview_only') == 'on') {\n\t\t\t$preview_only = true;\n\t\t} elseif (get_nfilter_request_var('import_confirmed') == 'on') {\n\t\t\t$preview_only = false;\n\t\t} else {\n\t\t\t$preview_only = true;\n\t\t}\n\n\t\tif (isset_request_var('remove_orphans') && get_nfilter_request_var('remove_orphans') == 'on') {\n\t\t\t$remove_orphans = true;\n\t\t} else {\n\t\t\t$remove_orphans = false;\n\t\t}\n\n\t\tif (isset_request_var('replace_svalues') && get_nfilter_request_var('replace_svalues') == 'on') {\n\t\t\t$replace_svalues = true;\n\t\t} else {\n\t\t\t$replace_svalues = false;\n\t\t}\n\n\t\t$hashes = array();\n\t\t$files  = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (strpos($var, 'chk_file_') !== false) {\n\t\t\t\t$id = base64_decode(str_replace('chk_file_', '', $var), true);\n\t\t\t\t$id = json_decode($id, true);\n\n\t\t\t\tif (strpos($id['pfile'], '/') !== false) {\n\t\t\t\t\t$parts = explode('/', $id['pfile']);\n\t\t\t\t} elseif (strpos($id['pfile'], '\\\\') !== false) {\n\t\t\t\t\t$parts = explode('\\\\', $id['pfile']);\n\t\t\t\t} else {\n\t\t\t\t\t$parts = array($id['pfile']);\n\t\t\t\t}\n\n\t\t\t\tforeach ($parts as $index => $p) {\n\t\t\t\t\tif ($p == 'scripts') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($p == 'resource') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunset($parts[$index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$id['pfile'] = implode('/', $parts);\n\n\t\t\t\t$files[] = $id['pfile'];\n\t\t\t}\n\n\t\t\tif (strpos($var, 'chk_import_') !== false) {\n\t\t\t\t$id = base64_decode(str_replace('chk_import_', '', $var), true);\n\t\t\t\t$id = json_decode($id, true);\n\n\t\t\t\t$hashes[] = $id['hash'];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($files) && !cacti_sizeof($hashes)) {\n\t\t\t$hashes[] = 'dont import';\n\t\t} elseif (cacti_sizeof($hashes) && !cacti_sizeof($files)) {\n\t\t\t$files[]  = 'dont import';\n\t\t}\n\n\t\tif (file_exists($xmlfile)) {\n\t\t\tcacti_log(\"Importing $xmlfile\");\n\t\t} else {\n\t\t\tcacti_log(\"Unable to import $xmlfile\");\n\t\t}\n\n\t\t$package_name = import_package_get_name($xmlfile);\n\n\t\tcacti_log('Package name is ' . $package_name);\n\n\t\t/* obtain debug information if it's set */\n\t\t$data = import_package($xmlfile, $profile_id, $remove_orphans, $replace_svalues, $preview_only, false, false, $hashes, $files);\n\n\t\tif ($preview_only) {\n\t\t\tpackage_prepare_import_array($templates, $files, $package_name, $xmlfile, $data);\n\n\t\t\timport_display_package_data($templates, $files, $package_name, $xmlfile, $data, false);\n\t\t} else {\n\t\t\tif ($data !== false) {\n\t\t\t\traise_message('import_success_' . md5($xmlfile), __('The Package %s Imported Successfully', $package_name), MESSAGE_LEVEL_INFO);\n\t\t\t} else {\n\t\t\t\traise_message('import_fail_' . md5($xmlfile), __('The Package %s Import Failed', $package_name), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\n\t\t\tunlink($xmlfile);\n\n\t\t\tunset($_SESSION['sess_import_package']);\n\n\t\t\theader('Location: package_import.php?package_location=0');\n\t\t\texit;\n\t\t}\n\t}\n}\n\nfunction package_file_get_contents($package_location, $package_file, $filename) {\n\tif ($package_location > 0) {\n\t\t$repo = json_decode(get_repo_manifest_file($package_location), true);\n\n\t\t$manifest = $repo['manifest'];\n\n\t\t$package_found = false;\n\n\t\tif (cacti_sizeof($manifest)) {\n\t\t\tforeach($manifest as $m) {\n\t\t\t\tif ($m['filename'] == $package_file) {\n\t\t\t\t\t$author   = $m['metadata']['author'];\n\t\t\t\t\t$homepage = $m['metadata']['homepage'];\n\t\t\t\t\t$email    = $m['metadata']['email'];\n\n\t\t\t\t\t$package_found = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['sess_import_package'])) {\n\t\t$xmlfile = sys_get_temp_dir() . '/package_import_' . rand();\n\n\t\tfile_put_contents($xmlfile, $_SESSION['sess_import_package']);\n\n\t\t$data = import_read_package_data($xmlfile, $binary_signature, true);\n\n\t\t$public_key = import_package_get_public_key($xmlfile);\n\n\t\t$fdata = false;\n\n\t\tforeach ($data['files']['file'] as $file) {\n\t\t\tif ($file['name'] == $filename) {\n\t\t\t\t$binary_signature = base64_decode($file['filesignature'], true);\n\n\t\t\t\t$fdata = base64_decode($file['data'], true);\n\n\t\t\t\t/* provide two checks against the public key */\n\t\t\t\t$ok = openssl_verify($fdata, $binary_signature, $public_key, OPENSSL_ALGO_SHA1);\n\n\t\t\t\tif ($ok != 1) {\n\t\t\t\t\t$ok = openssl_verify($fdata, $binary_signature, $public_key, OPENSSL_ALGO_SHA256);\n\t\t\t\t}\n\n\t\t\t\tif ($ok != 1) {\n\t\t\t\t\t$fdata = false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tunlink($xmlfile);\n\n\t\treturn $fdata;\n\t}\n\n\tif ($package_found) {\n\t\t$data = get_repo_file($package_location, $package_file, true);\n\n\t\tif ($data !== false) {\n\t\t\t$tmp_dir = sys_get_temp_dir() . '/package' . $_SESSION[SESS_USER_ID];\n\n\t\t\tif (!is_dir($tmp_dir)) {\n\t\t\t\tmkdir($tmp_dir);\n\t\t\t}\n\n\t\t\t$xmlfile = $tmp_dir . '/' . $package_file;\n\n\t\t\tfile_put_contents($xmlfile, $data);\n\n\t\t\t$public_key = import_package_get_public_key($xmlfile);\n\n\t\t\t$data = import_read_package_data($xmlfile, $binary_signature, true);\n\n\t\t\t$fdata = false;\n\n\t\t\tforeach ($data['files']['file'] as $file) {\n\t\t\t\tif ($file['name'] == $filename) {\n\t\t\t\t\t$binary_signature = base64_decode($file['filesignature'], true);\n\n\t\t\t\t\t$fdata = base64_decode($file['data'], true);\n\n\t\t\t\t\t/* provide two checks against the public key */\n\t\t\t\t\t$ok = openssl_verify($fdata, $binary_signature, $public_key, OPENSSL_ALGO_SHA1);\n\n\t\t\t\t\tif ($ok != 1) {\n\t\t\t\t\t\t$ok = openssl_verify($fdata, $binary_signature, $public_key, OPENSSL_ALGO_SHA256);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($ok != 1) {\n\t\t\t\t\t\t$fdata = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunlink($xmlfile);\n\n\t\t\treturn $fdata;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction package_diff_file() {\n\tglobal $config;\n\n\t$package_location = get_filter_request_var('package_location');\n\t$package_file     = get_request_var('package_file');\n\t$filename         = get_request_var('filename');\n\n\t$options = array(\n\t\t'ignoreWhitespace' => true,\n\t\t'ignoreCase' => false\n\t);\n\n\t$newfile = package_file_get_contents($package_location, $package_file, $filename);\n\n\tif ($newfile !== false) {\n\t\t$newfile = str_replace(\"\\n\\r\", \"\\n\", $newfile);\n\t\t$newfile = explode(\"\\n\", $newfile);\n\t}\n\n\t$oldfile = file_get_contents(CACTI_PATH_BASE . '/' . $filename);\n\n\tif ($oldfile !== false) {\n\t\t$oldfile = str_replace(\"\\n\\r\", \"\\n\", $oldfile);\n\t\t$oldfile = explode(\"\\n\", $oldfile);\n\t}\n\n\tif (cacti_sizeof($oldfile)) {\n\t\tif (cacti_sizeof($newfile)) {\n\t\t\t$diff = new Diff($oldfile, $newfile, $options);\n\n\t\t\t$renderer = new Diff_Renderer_Html_Inline;\n\n\t\t\tprint '<body>' . $diff->render($renderer) . '</body></html>';\n\t\t} else {\n\t\t\tprint \"New file does not exist\";\n\t\t}\n\t} else {\n\t\tprint \"Old file does not exist\";\n\t}\n}\n\nfunction package_verify_key() {\n\t$package_location = get_filter_request_var('package_location');\n\n\t$failed = array();\n\n\tif ($package_location > 0) {\n\t\t$package_ids = get_filter_request_var('package_ids', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\n\t\t$repo = json_decode(get_repo_manifest_file($package_location), true);\n\n\t\t$manifest = $repo['manifest'];\n\n\t\tif ($package_ids != '') {\n\t\t\t$package_ids = explode(',', $package_ids);\n\n\t\t\tforeach($package_ids as $package_id) {\n\t\t\t\t$filename     = $manifest[$package_id]['filename'];\n\t\t\t\t$package_name = $manifest[$package_id]['name'];\n\n\t\t\t\t$data = get_repo_file($package_location, $filename, true);\n\n\t\t\t\tif ($data !== false) {\n\t\t\t\t\t$tmp_dir = sys_get_temp_dir() . '/package' . $_SESSION[SESS_USER_ID];\n\n\t\t\t\t\tif (!is_dir($tmp_dir)) {\n\t\t\t\t\t\tmkdir($tmp_dir);\n\t\t\t\t\t}\n\n\t\t\t\t\t$xmlfile = $tmp_dir . '/' . $filename;\n\n\t\t\t\t\tfile_put_contents($xmlfile, $data);\n\n\t\t\t\t\t$info = import_validate_signature($xmlfile);\n\n\t\t\t\t\tif ($info === false || $info['valid'] === false) {\n\t\t\t\t\t\t$failed[$package_name] = $info;\n\t\t\t\t\t}\n\n\t\t\t\t\tunlink($xmlfile);\n\t\t\t\t} else {\n\t\t\t\t\tprint json_encode(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'title'   => __('Repo File Missing or Damaged'),\n\t\t\t\t\t\t\t'message' => __('The Repo \\'%s\\' is NOT Reachable at the URL Location in the package.manifest.', $package_name),\n\t\t\t\t\t\t\t'header'  => __('Something is wrong with your Package Repository'),\n\t\t\t\t\t\t\t'status'  => 'fileerror'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['sess_import_package'])) {\n\t\t$xmlfile = sys_get_temp_dir() . '/package_import_' . rand();\n\n\t\tfile_put_contents($xmlfile, $_SESSION['sess_import_package']);\n\t\t$vsig  = import_validate_signature($xmlfile);\n\n\t\tif ($vsig === false || empty($vsig['valid'])) {\n\t\t\t$failed[$vsig['name']] = $vsig;\n\t\t}\n\n\t\tunlink($xmlfile);\n\t}\n\n\tif (cacti_sizeof($failed)) {\n\t\t$message = __('There are Signature Trust issues.<br>');\n\t\t$authors  = array();\n\t\t$packages = array();\n\n\t\tforeach($failed as $package) {\n\t\t\t$packages[] = $package['name'];\n\n\t\t\t$authors[$package['author']] = $package['email'];\n\t\t}\n\n\t\tforeach($authors as $author => $email) {\n\t\t\t$message .= ($message != '' ? '<br>':'') . __('<b>Author:</b> &lt;%s&gt; %s.<br>', $package['author'], $package['email']);\n\t\t}\n\n\t\tforeach($packages as $package) {\n\t\t\t$message .= ($message != '' ? '<br>':'') . __('<b>Package:</b> %s', $package);\n\t\t}\n\n\t\t$message .= '<br><br>' . __('Press \\'Ok\\' to start Trusting the Signer.  Press \\'Cancel\\' or hit escape to Cancel.');\n\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'title'   => __('Some Packages Not Trusted'),\n\t\t\t\t'message' => $message,\n\t\t\t\t'status'  => 'error'\n\t\t\t)\n\t\t);\n\t} else {\n\t\tprint json_encode(\n\t\t\tarray(\n\t\t\t\t'title'   => __('All Packages Trusted'),\n\t\t\t\t'message' => __('All Package Signatures Validated'),\n\t\t\t\t'status'  => 'success'\n\t\t\t)\n\t\t);\n\t}\n}\n\nfunction package_accept_key() {\n\t$package_location = get_filter_request_var('package_location');\n\n\tif ($package_location > 0) {\n\t\t$package_ids = get_filter_request_var('package_ids', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\n\t\t$repo = json_decode(get_repo_manifest_file($package_location), true);\n\n\t\t$manifest = $repo['manifest'];\n\n\t\t$failed = array();\n\n\t\tif ($package_ids != '') {\n\t\t\t$package_ids = explode(',', $package_ids);\n\n\t\t\tforeach($package_ids as $package_id) {\n\t\t\t\t$filename     = $manifest[$package_id]['filename'];\n\t\t\t\t$package_name = $manifest[$package_id]['name'];\n\n\t\t\t\t$data = get_repo_file($package_location, $filename, true);\n\n\t\t\t\tif ($data !== false) {\n\t\t\t\t\t$tmp_dir = sys_get_temp_dir() . '/package' . $_SESSION[SESS_USER_ID];\n\n\t\t\t\t\tif (!is_dir($tmp_dir)) {\n\t\t\t\t\t\tmkdir($tmp_dir);\n\t\t\t\t\t}\n\n\t\t\t\t\t$xmlfile = $tmp_dir . '/' . $filename;\n\n\t\t\t\t\tfile_put_contents($xmlfile, $data);\n\n\t\t\t\t\timport_validate_public_key($xmlfile, true);\n\n\t\t\t\t\tunlink($xmlfile);\n\t\t\t\t} else {\n\t\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable at the URL Location or the package.manifest file is missing.', $repo['name']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\theader('Location: package_import.php');\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['sess_import_package'])) {\n\t\t$xmlfile = sys_get_temp_dir() . '/package_import_' . rand();\n\n\t\tfile_put_contents($xmlfile, $_SESSION['sess_import_package']);\n\n\t\timport_validate_public_key($xmlfile, true);\n\n\t\tunlink($xmlfile);\n\t}\n}\n\nfunction package_get_details() {\n\t$package_ids      = get_filter_request_var('package_ids', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\t$package_location = get_filter_request_var('package_location');\n\t$profile_id       = get_filter_request_var('data_source_profile');\n\t$remove_orphans   = isset_request_var('remove_orphans') ? true:false;\n\t$replace_svalues  = isset_request_var('replace_svalues') ? true:false;\n\t$preview          = true;\n\n\t$repo = json_decode(get_repo_manifest_file($package_location), true);\n\n\t$manifest = $repo['manifest'];\n\n\tif ($package_ids != '') {\n\t\t$package_ids = explode(',', $package_ids);\n\n\t\t$templates = array();\n\t\t$files     = array();\n\n\t\tforeach($package_ids as $package_id) {\n\t\t\t$filename     = $manifest[$package_id]['filename'];\n\t\t\t$package_name = $manifest[$package_id]['name'];\n\n\t\t\t$data = get_repo_file($package_location, $filename, false);\n\n\t\t\tif ($data !== false) {\n\t\t\t\t$tmp_dir = sys_get_temp_dir() . '/package' . $_SESSION[SESS_USER_ID];\n\n\t\t\t\tif (!is_dir($tmp_dir)) {\n\t\t\t\t\tmkdir($tmp_dir);\n\t\t\t\t}\n\n\t\t\t\t$xmlfile = $tmp_dir . '/' . $filename;\n\n\t\t\t\tfile_put_contents($xmlfile, $data);\n\n\t\t\t\t$validated = import_validate_public_key($xmlfile, false);\n\n\t\t\t\tif ($validated === false) {\n\t\t\t\t\t$public_key = get_public_key();\n\t\t\t\t} else {\n\t\t\t\t\t$public_key = $validated;\n\t\t\t\t}\n\n\t\t\t\t$data = import_package($xmlfile, $profile_id, $remove_orphans, $replace_svalues, $preview);\n\n\t\t\t\tpackage_prepare_import_array($templates, $files, $package_name, $filename, $data);\n\n\t\t\t\tunlink($xmlfile);\n\t\t\t} else {\n\t\t\t\traise_message_javascript(__('Error in Package'), __('The package \"%s\" download or validation failed', $package_name), __('See the cacti.log for more information.  It could be that you had either an API Key error or the package was tamered with, or the location is not available.'));\n\t\t\t}\n\t\t}\n\n\t\timport_display_package_data($templates, $files, $package_name, $filename, $data);\n\t} else {\n\t\traise_message_javascript(__('Error in Package'), __('The package download or validation failed'), __('See the cacti.log for more information.  It could be that you had either an API Key error or the package was tamered with, or the location is not available'));\n\t}\n}\n\nfunction import_validate_public_key($xmlfile, $accept = false) {\n\t$public_key1 = get_public_key_sha1();\n\t$public_key2 = get_public_key_sha256();\n\n\t$info = import_get_package_info($xmlfile);\n\n\tif ($info !== false) {\n\t\tif ($info['pubkey'] != '') {\n\t\t\t$insert = false;\n\n\t\t\t$accepted = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM package_public_keys\n\t\t\t\tWHERE public_key = ?',\n\t\t\t\tarray($info['pubkey']));\n\n\t\t\tif ($accepted) {\n\t\t\t\treturn $info['pubkey'];\n\t\t\t} elseif ($public_key1 == $info['pubkey']) {\n\t\t\t\t$insert = true;\n\t\t\t} elseif ($public_key2 == $info['pubkey']) {\n\t\t\t\t$insert = true;\n\t\t\t} elseif ($accept) {\n\t\t\t\t$insert = true;\n\t\t\t}\n\n\t\t\tif ($insert) {\n\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO package_public_keys\n\t\t\t\t\t(md5sum, author, homepage, email_address, public_key)\n\t\t\t\t\tVALUES(?, ?, ?, ?, ?)',\n\t\t\t\t\tarray(md5($info['pubkey']), $info['author'], $info['homepage'], $info['email'], $info['pubkey']));\n\n\t\t\t\treturn $info['pubkey'];\n\t\t\t}\n\t\t} else {\n\t\t\traise_message_javascript(__('Error in Package'), __('Package XML File Damaged.'), __('The XML files appears to be invalid and does not contain a public key.  Please contact the package author to obtain a revised package.'));\n\t\t}\n\t} else {\n\t\traise_message_javascript(__('Error in Package'), __('The XML files for the package does not exist'), __('Check the package repository file for files that should exist and find the one that is missing'));\n\t}\n\n\treturn false;\n}\n\nfunction import_display_package_data($templates, $files, $package_name, $filename, $data, $multipackage = true) {\n\tglobal $config, $device_classes;\n\n\tif (!$multipackage) {\n\t\t$details = import_package_get_details($filename);\n\n\t\thtml_start_box(__('Packages Details'), '100%', '', '1', 'center', '');\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Device Class')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Version'),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Copyright')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Author'),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Email')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Homepage'),\n\t\t\t),\n\t\t);\n\n\t\thtml_header($display_text);\n\n\t\t$id = 99;\n\n\t\tform_alternate_row('line_' . $id);\n\n\t\tif (isset($details['class']) && array_key_exists($details['class'], $device_classes)) {\n\t\t\tform_selectable_cell($device_classes[$details['class']], $id);\n\t\t} else {\n\t\t\tform_selectable_cell(__('Unknown'), $id);\n\t\t}\n\n\t\tform_selectable_ecell($details['version'], $id, '', 'center');\n\t\tform_selectable_ecell($details['copyright'], $id);\n\n\t\tform_selectable_ecell($details['author'], $id);\n\t\tform_selectable_ecell($details['email'], $id);\n\t\tform_selectable_cell($details['homepage'], $id);\n\n\t\tform_end_row();\n\n\t\thtml_end_box();\n\t}\n\n\t// Show the filename status'\n\tif (cacti_sizeof($files)) {\n\t\thtml_start_box(__('Import Package Filenames [ None selected imports all, Check to import selectively ]'), '100%', '', '1', 'center', '');\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Package'),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Filename'),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Status')\n\t\t\t)\n\t\t);\n\n\t\thtml_header_checkbox($display_text, false, '', true, 'file');\n\n\t\tforeach($files as $pdata => $pfiles) {\n\t\t\tlist($file_package_file, $file_package_name) = explode('|', $pdata);\n\n\t\t\tforeach($pfiles as $pfile => $status) {\n\t\t\t\t$id = 'file_' . base64_encode(\n\t\t\t\t\tjson_encode(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'package'  => $file_package_name,\n\t\t\t\t\t\t\t'filename' => $file_package_file,\n\t\t\t\t\t\t\t'pfile'    => $pfile,\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tform_alternate_row('line_' . $id);\n\t\t\t\tform_selectable_ecell($file_package_name, $id);\n\t\t\t\tform_selectable_ecell($pfile, $id);\n\n\t\t\t\t$status  = explode(',', $status);\n\t\t\t\t$nstatus = '';\n\n\t\t\t\tforeach($status as $s) {\n\t\t\t\t\t$s = trim($s);\n\n\t\t\t\t\tif ($s == 'differences') {\n\t\t\t\t\t\t$url = 'package_import.php' .\n\t\t\t\t\t\t\t'?action=diff' .\n\t\t\t\t\t\t\t'&package_location=' . get_request_var('package_location') .\n\t\t\t\t\t\t\t'&package_file=' . $file_package_file .\n\t\t\t\t\t\t\t'&package_name=' . $file_package_name .\n\t\t\t\t\t\t\t'&filename=' . str_replace(CACTI_PATH_BASE . '/', '', $pfile);\n\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') .\n\t\t\t\t\t\t\t\"<a class='diffme linkEditMain' href='\" . html_escape($url) . \"'>\" . __('Differences') . '</a>';\n\t\t\t\t\t} elseif ($s == 'identical') {\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') . __('Unchanged');\n\t\t\t\t\t} elseif ($s == 'not writable') {\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') . __('Not Writable');\n\t\t\t\t\t} elseif ($s == 'writable') {\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') . __('Writable');\n\t\t\t\t\t} elseif ($s == 'new') {\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') . __('New');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$nstatus .= ($nstatus != '' ? ', ':'') . __('Unknown');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($nstatus, $id);\n\n\t\t\t\tform_checkbox_cell($pfile, $id);\n\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (cacti_sizeof($templates)) {\n\t\thtml_start_box(__('Import Package Templates [ None selected imports all, Check to import selectively ]'), '100%', '', '1', 'center', '');\n\n\t\tif ($multipackage) {\n\t\t\t$display_text = array(\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Packages'),\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Template Type')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Template Name')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Status')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Changes/Diffferences')\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t$display_text = array(\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Template Type')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Template Name')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Status')\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'display' => __('Changes/Diffferences')\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\thtml_header_checkbox($display_text, false, '', true, 'import');\n\n\t\t$templates = array_reverse($templates);\n\n\t\tforeach($templates as $hash => $detail) {\n\t\t\t$files = explode('<br>', $detail['package_file']);\n\n\t\t\t$id = 'import_' . base64_encode(\n\t\t\t\tjson_encode(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'package' => $detail['package'],\n\t\t\t\t\t\t'hash'    => $hash,\n\t\t\t\t\t\t'type'    => $detail['type_name'],\n\t\t\t\t\t\t'name'    => $detail['name'],\n\t\t\t\t\t\t'status'  => $detail['status'],\n\t\t\t\t\t\t'files'   => $files\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif ($detail['status'] == 'updated') {\n\t\t\t\t$status = \"<span class='updateObject'>\" . __('Updated') . '</span>';\n\t\t\t} elseif ($detail['status'] == 'new') {\n\t\t\t\t$status = \"<span class='newObject'>\" . __('New') . '</span>';\n\t\t\t} else {\n\t\t\t\t$status = \"<span class='deviceUp'>\" . __('Unchanged') . '</span>';\n\t\t\t}\n\n\t\t\tform_alternate_row('line_' . $id);\n\n\t\t\tif ($multipackage) {\n\t\t\t\tform_selectable_ecell($detail['package'], $id);\n\t\t\t}\n\n\t\t\tform_selectable_ecell($detail['type_name'], $id);\n\t\t\tform_selectable_ecell($detail['name'], $id);\n\t\t\tform_selectable_cell($status, $id);\n\n\t\t\tif (isset($detail['vals'])) {\n\t\t\t\t$diff_details = '';\n\t\t\t\t$diff_array   = array();\n\t\t\t\t$orphan_array = array();\n\n\t\t\t\tforeach($detail['vals'] as $package => $diffs) {\n\t\t\t\t\tif (isset($diffs['differences'])) {\n\t\t\t\t\t\tforeach($diffs['differences'] as $item) {\n\t\t\t\t\t\t\t$diff_array[$item] = $item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($diffs['orphans'])) {\n\t\t\t\t\t\tforeach($diffs['orphans'] as $item) {\n\t\t\t\t\t\t\t$orphan_array[$item] = $item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($diff_array)) {\n\t\t\t\t\t$diff_details .= __('Differences') . '<br>' . implode('<br>', $diff_array);\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($orphan_array)) {\n\t\t\t\t\t$diff_details .= ($diff_details != '' ? '<br>':'') . __('Orphans') . '<br>' . implode('<br>', $orphan_array);\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($diff_details, $id, '', 'white-space:pre-wrap');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('None'), $id);\n\t\t\t}\n\n\t\t\tform_checkbox_cell($detail['name'], $id);\n\n\t\t\tform_end_row();\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction getURLVariable(url, varname) {\n\t\tvar urlparts = url.slice(url.indexOf('?') + 1).split('&');\n\n\t\tfor (var i = 0; i < urlparts.length; i++) {\n\t\t\tvar urlvar = urlparts[i].split('=');\n\n\t\t\tif (urlvar[0] == varname) {\n\t\t\t\treturn urlvar[1];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t$(function() {\n\t\tif ($('#package_import_details2_child').length) {\n\t\t\tapplySelectorVisibilityAndActions();\n\n\t\t\t$('#package_import_details2_child').find('tr[id^=\"line_import_new_\"]').each(function(event) {\n\t\t\t\tselectUpdateRow(event, $(this));\n\t\t\t});\n\n\t\t\tmakePackagesClickable();\n\t\t}\n\n\t\t$('.diffme').off('click').on('click', function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar url = $(this).attr('href');\n\n\t\t\t$.get(url, function(data) {\n\t\t\t\t$('#dialog').html(data);\n\n\t\t\t\tvar package_name = getURLVariable(url, 'package_name');\n\t\t\t\tvar filename     = getURLVariable(url, 'filename');\n\n\t\t\t\t$('#dialog').dialog({\n\t\t\t\t\tautoOpen: true,\n\t\t\t\t\ttitle: '<?php print __('File Differences for: ');?>' + filename,\n\t\t\t\t\twidth: '60%',\n\t\t\t\t\tmaxWidth: '90%',\n\t\t\t\t\tmaxHeight: 600\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\t<?php\n}\n\nfunction validate_request_vars() {\n\t$default_profile = get_default_profile();\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'replace_svalues' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(on|true|false)')),\n\t\t\t'default' => read_config_option('replace_svalues')\n\t\t),\n\t\t'remove_orphans' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(on|true|false)')),\n\t\t\t'default' => read_config_option('remove_orphans')\n\t\t),\n\t\t'trust_signer' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(on|true|false)')),\n\t\t\t'default' => read_config_option('trust_signer')\n\t\t),\n\t\t'package_location' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('package_location')\n\t\t),\n\t\t'data_source_profile' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => $default_profile\n\t\t),\n\t\t'image_format' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_image_format')\n\t\t),\n\t\t'graph_width' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_graph_width')\n\t\t),\n\t\t'graph_height' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_graph_height')\n\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_pimport');\n\t/* ================= input validation ================= */\n}\n\nfunction get_import_form($repo_id, $default_profile) {\n\tglobal $image_types;\n\n\tvalidate_request_vars();\n\n\tif (isset_request_var('preview_only') && get_nfilter_request_var('preview_only') == 'on') {\n\t\t$preview_only = 'on';\n\t} else {\n\t\t$preview_only = '';\n\t}\n\n\tif (isset_request_var('replace_svalues') && get_nfilter_request_var('replace_svalues') == 'on') {\n\t\t$replace_svalues = 'on';\n\t} else {\n\t\t$replace_svalues = '';\n\t}\n\n\tif (isset_request_var('remove_orphans') && get_nfilter_request_var('remove_orphans') == 'on') {\n\t\t$remove_orphans = 'on';\n\t} else {\n\t\t$remove_orphans = '';\n\t}\n\n\tif (isset_request_var('trust_signer') && get_nfilter_request_var('trust_signer') == 'on') {\n\t\t$trust_signer = 'on';\n\t} else {\n\t\t$trust_signer = '';\n\t}\n\n\tif (isset_request_var('image_format')) {\n\t\t$image_format = get_filter_request_var('image_format');\n\t} else {\n\t\t$image_format = read_config_option('default_image_format');\n\t}\n\n\tif (isset_request_var('graph_width')) {\n\t\t$graph_width = get_filter_request_var('graph_width');\n\t} else {\n\t\t$graph_width = read_config_option('default_graph_width');\n\t}\n\n\tif (isset_request_var('graph_height')) {\n\t\t$graph_height = get_filter_request_var('graph_height');\n\t} else {\n\t\t$graph_height = read_config_option('default_graph_height');\n\t}\n\n\t$form = array(\n\t\t'import_file' => array(\n\t\t\t'friendly_name' => __('Local Package Import File'),\n\t\t\t'description'   => __('The *.xml.gz file located on your Local machine to Upload and Import.'),\n\t\t\t'accept'        => '.xml.gz',\n\t\t\t'method'        => 'file'\n\t\t),\n\t\t'trust_header' => array(\n\t\t\t'friendly_name' => __('Package Signature'),\n\t\t\t'collapsible'   => 'true',\n\t\t\t'method'        => 'spacer',\n\t\t),\n\t\t'trust_signer' => array(\n\t\t\t'friendly_name' => __('Automatically Trust Signer'),\n\t\t\t'description'   => __('If checked, Cacti will automatically Trust the Signer for this and any future Packages by that author.'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'value'         => $trust_signer,\n\t\t\t'default'       => ''\n\t\t),\n\t);\n\n\t$form2 = array(\n\t\t'data_header' => array(\n\t\t\t'friendly_name' => __('Data Source Overrides'),\n\t\t\t'collapsible'   => 'true',\n\t\t\t'method'        => 'spacer',\n\t\t),\n\t\t'data_source_profile' => array(\n\t\t\t'friendly_name' => __('Data Source Profile'),\n\t\t\t'description'   => __('Select the Data Source Profile.  The Data Source Profile controls polling interval, the data aggregation, and retention policy for the resulting Data Sources.'),\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'sql'           => \"SELECT id, name FROM data_source_profiles ORDER BY name\",\n\t\t\t'none_value'    => __('Create New from Template'),\n\t\t\t'value'         => isset_request_var('import_dsp') ? get_filter_request_var('import_dsp'):'',\n\t\t\t'default'       => $default_profile\n\t\t),\n\t\t'graph_header' => array(\n\t\t\t'friendly_name' => __('Graph/Data Template Overrides'),\n\t\t\t'collapsible'   => 'true',\n\t\t\t'method'        => 'spacer',\n\t\t),\n\t\t'remove_orphans' => array(\n\t\t\t'friendly_name' => __('Remove Orphaned Graph Items'),\n\t\t\t'description'   => __('If checked, Cacti will delete any Graph Items from both the Graph Template and associated Graphs that are not included in the imported Graph Template.'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'value'         => $remove_orphans,\n\t\t\t'default'       => ''\n\t\t),\n\t\t'replace_svalues' => array(\n\t\t\t'friendly_name' => __('Replace Suggested Value Patterns'),\n\t\t\t'description'   => __('Replace Data Source and Graph Template Suggested Value Records.  Graphs and Data Sources will take on new names after either a Data Query Reindex or by using the forced Replace Suggested Values process.'),\n\t\t\t'method'        => 'checkbox',\n\t\t\t'value'         => $replace_svalues,\n\t\t\t'default'       => ''\n\t\t),\n\t\t'image_format' => array(\n\t\t\t'friendly_name' => __('Graph Template Image Format'),\n\t\t\t'description'   => __('The Image Format to be used when importing or updating Graph Templates.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'default'       => read_config_option('default_image_format'),\n\t\t\t'value'         => $image_format,\n\t\t\t'array'         => $image_types,\n\t\t),\n\t\t'graph_height' => array(\n\t\t\t'friendly_name' => __('Graph Template Height', 'pagkage'),\n\t\t\t'description'   => __('The Height to be used when importing or updating Graph Templates.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'default'       => read_config_option('default_graph_height'),\n\t\t\t'size'          => '5',\n\t\t\t'value'         => $graph_height,\n\t\t\t'max_length'    => '5'\n\t\t),\n\t\t'graph_width' => array(\n\t\t\t'friendly_name' => __('Graph Template Width'),\n\t\t\t'description'   => __('The Width to be used when importing or updating Graph Templates.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'default'       => read_config_option('default_graph_width'),\n\t\t\t'size'          => '5',\n\t\t\t'value'         => $graph_width,\n\t\t\t'max_length'    => '5'\n\t\t)\n\t);\n\n\tif ($repo_id == 0) {\n\t\treturn array_merge($form, $form2);\n\t} else {\n\t\treturn $form2;\n\t}\n}\n\nfunction get_default_profile() {\n\t$default_profile = db_fetch_cell('SELECT id\n\t\tFROM data_source_profiles\n\t\tWHERE `default`=\"on\"');\n\n\tif (empty($default_profile)) {\n\t\t$default_profile = db_fetch_cell('SELECT id\n\t\t\tFROM data_source_profiles\n\t\t\tORDER BY id\n\t\t\tLIMIT 1');\n\t}\n\n\treturn $default_profile;\n}\n\nfunction package_import() {\n\tglobal $actions, $hash_type_names, $device_classes;\n\n\tvalidate_request_vars();\n\n\t$display_hideme = false;\n\n\t$default = db_fetch_cell('SELECT id\n\t\tFROM package_repositories\n\t\tWHERE `default` = \"on\"');\n\n\tif (!isset_request_var('package_location')) {\n\t\tset_request_var('package_location', $default);\n\t}\n\n\tif (!isset_request_var('package_class')) {\n\t\tset_request_var('package_class', '0');\n\t}\n\n\t$device_classes = array_merge(array(0 => __('All')), $device_classes);\n\n\tif (get_request_var('package_location') == 0) {\n\t\tform_start('package_import.php', 'import', true);\n\t} else {\n\t\tform_start('package_import.php', 'import');\n\t}\n\n\t$repos = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM package_repositories\n\t\t\tWHERE enabled = \"on\"\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$repos[0] = __('Local Package File');\n\n\t$pform = array(\n\t\t'package_location' => array(\n\t\t\t'friendly_name' => __('Package Location'),\n\t\t\t'description'   => __('Select the Location of the Packages that you wish to Import.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => isset_request_var('package_location') ? get_nfilter_request_var('package_location') : $default,\n\t\t\t'array'         => $repos,\n\t\t\t'default'       => $default\n\t\t)\n\t);\n\n\t$default_profile = db_fetch_cell('SELECT id\n\t\tFROM data_source_profiles\n\t\tWHERE `default`=\"on\"');\n\n\tif (empty($default_profile)) {\n\t\t$default_profile = db_fetch_cell('SELECT id\n\t\t\tFROM data_source_profiles\n\t\t\tORDER BY id\n\t\t\tLIMIT 1');\n\t}\n\n\t$form = get_import_form(get_filter_request_var('package_location'), $default_profile);\n\n\tif (isset_request_var('package_location') && get_nfilter_request_var('package_location') == 0) {\n\t\thtml_start_box(__('Package Import'), '100%', '', '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $pform\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Local Package Import'), '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\tform_hidden_box('save_component_import', '1', '');\n\t\tform_hidden_box('import_confirmed', '', '');\n\n\t\tform_save_button('', 'import', 'import', false);\n\n\t\tprint \"<div id='contents'></div>\";\n\n\t\tform_dialog_box();\n\t} else {\n\t\thtml_start_box( __('Package Import'), '100%', '', '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $pform\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Package Import Preferences'), '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\thtml_start_box(__('Repository Based Package Import'), '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(\n\t\t\t'name' => array(\n\t\t\t\t'display' => __('Name'),\n\t\t\t),\n\t\t\t'class' => array(\n\t\t\t\t'display' => __('Class'),\n\t\t\t),\n\t\t\t'version' => array(\n\t\t\t\t'display' => __('Version'),\n\t\t\t),\n\t\t\t'copyright' => array(\n\t\t\t\t'display' => __('Copyright'),\n\t\t\t),\n\t\t\t'author' => array(\n\t\t\t\t'display' => __('Author'),\n\t\t\t),\n\t\t\t'email' => array(\n\t\t\t\t'display' => __('Email'),\n\t\t\t),\n\t\t);\n\n\t\tunset($repos[0]);\n\n\t\thtml_header_checkbox($display_text, false, '', true);\n\n\t\t$id = get_filter_request_var('package_location');\n\n\t\t$repo = json_decode(get_repo_manifest_file($id), true);\n\n\t\t$i = 0;\n\n\t\tif (cacti_sizeof($repo)) {\n\t\t\t$repos = $repo['manifest'];\n\n\t\t\tforeach($repos as $repo) {\n\t\t\t\t$subid = 'package_' . $i;\n\n\t\t\t\tform_alternate_row('line_' . $subid, true);\n\n\t\t\t\tif (!isset($repo['metadata']['copyright'])) {\n\t\t\t\t\t$copyright = __('Not Set');\n\t\t\t\t} else {\n\t\t\t\t\t$copyright = $repo['metadata']['copyright'];\n\t\t\t\t}\n\n\t\t\t\tif (isset($repo['metadata']['class']) && isset($device_classes[$repo['metadata']['class']])) {\n\t\t\t\t\t$class = $device_classes[$repo['metadata']['class']];\n\t\t\t\t} else {\n\t\t\t\t\t$class = __('Unknown');\n\t\t\t\t}\n\n\t\t\t\tform_selectable_ecell($repo['name'], $subid);\n\t\t\t\tform_selectable_ecell($class, $subid);\n\t\t\t\tform_selectable_ecell($repo['metadata']['version'], $subid);\n\t\t\t\tform_selectable_ecell($copyright, $subid);\n\t\t\t\tform_selectable_ecell($repo['metadata']['author'], $subid);\n\t\t\t\tform_selectable_ecell($repo['metadata']['email'], $subid);\n\n\t\t\t\tform_checkbox_cell($repo['name'], $subid);\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Packages Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(true);\n\n\t\tform_hidden_box('save_component_import', '1', '');\n\t\tform_hidden_box('import_confirmed', '', '');\n\n\t\tdraw_actions_dropdown($actions);\n\t}\n\n\t?>\n\t<div id='contents'></div>\n\t<div id='dialog'></div>\n\n\t<script type='text/javascript'>\n\tfunction switchRepo() {\n\t\tvar package_location    = $('#package_location').val();\n\t\tvar remove_orphans      = $('#remove_orphans').is(':checked');\n\t\tvar replace_svalues     = $('#replace_svalues').is(':checked');\n\t\tvar data_source_profile = $('#data_source_profile').val();\n\t\tvar package_class       = $('#package_class').val();\n\t\tvar image_format        = $('#image_format').val();\n\t\tvar graph_width         = $('#graph_width').val();\n\t\tvar graph_height        = $('#graph_height').val();\n\n\t\tvar strURL = urlPath + 'package_import.php' +\n\t\t\t'?package_location='  + package_location                +\n\t\t\t'&remove_orphans='    + remove_orphans                  +\n\t\t\t'&replace_svalues='   + replace_svalues                 +\n\t\t\t'&import_dsp='        + data_source_profile             +\n\t\t\t'&image_format='      + image_format                    +\n\t\t\t'&graph_height='      + graph_height                    +\n\t\t\t'&graph_width='       + graph_width;\n\n\t\tloadUrl({ url: strURL });\n\t}\n\n\tfunction packagesChanged() {\n\t\tvar checks = ''\n\n\t\t$('input[id^=\"chk_package\"]:checked').each(function() {\n\t\t\tchecks += (checks != '' ? ',':'') + $(this).attr('id').replace('chk_package_', '');\n\t\t});\n\n\t\tif (checks != '') {\n\t\t\t$.get('package_import.php?action=details'                          +\n\t\t\t\t'&package_location='    + $('#package_location').val()         +\n\t\t\t\t'&data_source_profile=' + $('#data_source_profile').val()      +\n\t\t\t\t'&image_format='        + $('#image_format').val()             +\n\t\t\t\t'&graph_height='        + $('#graph_height').val()             +\n\t\t\t\t'&graph_width='         + $('#graph_width').val()              +\n\t\t\t\t'&replace_svalues='     + $('#replace_svalues').is(':checked') +\n\t\t\t\t'&remove_orphans='      + $('#remove_orphans').is(':checked')  +\n\t\t\t\t'&package_ids='         + checks, function(data) {\n\n\t\t\t\t$('#contents').html(data);\n\t\t\t});\n\t\t} else {\n\t\t\t$('#contents').empty();\n\t\t}\n\t}\n\n\tfunction checkSigner() {\n\t\tvar checks = ''\n\n\t\t$('input[id^=\"chk_package\"]:checked').each(function() {\n\t\t\tchecks += (checks != '' ? ',':'') + $(this).attr('id').replace('chk_package_', '');\n\t\t});\n\n\t\tif (checks != '' || $('#package_location').val() == 0) {\n\t\t\t$.getJSON('package_import.php?action=verify'               +\n\t\t\t\t'&package_location=' + $('#package_location').val() +\n\t\t\t\t'&package_ids='      + checks, function(data) {\n\n\t\t\t\tif (data.status == 'error') {\n\t\t\t\t\tif ($('#import_dialog').length == 0) {\n\t\t\t\t\t\t$('body').append('<div id=\"import_dialog\"><div id=\"import_message\"></div></div>');\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#import_message').html(data.message);\n\t\t\t\t\t$('#import_dialog').attr('title', data.title);\n\n\t\t\t\t\t$('#import_dialog').dialog({\n\t\t\t\t\t\tautoOpen: true,\n\t\t\t\t\t\twidth: '400px',\n\t\t\t\t\t\tmaxHeight: '400px',\n\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOk: function() {\n\t\t\t\t\t\t\t\t$('#import_dialog').dialog('close');\n\t\t\t\t\t\t\t\ttrustSigner();\n\n\t\t\t\t\t\t\t\tif ($('#package_location').val() != '0') {\n\t\t\t\t\t\t\t\t\tpackagesChanged();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else if (data.status == 'fileerror') {\n\t\t\t\t\tvar mixedReasonTitle = data.title;\n\t\t\t\t\tvar mixedOnPage      = data.header;\n\t\t\t\t\tsessionMessage   = {\n\t\t\t\t\t\tmessage: data.message,\n\t\t\t\t\t\tlevel: MESSAGE_LEVEL_MIXED\n\t\t\t\t\t};\n\n\t\t\t\t\tdisplayMessages();\n\t\t\t\t} else if ($('#package_location').val() != '0') {\n\t\t\t\t\tpackagesChanged();\n\t\t\t\t}\n\t\t\t});\n\t\t} else if ($('#package_location').val() != '0') {\n\t\t\t$('#contents').empty();\n\t\t}\n\t}\n\n\tfunction trustSigner() {\n\t\tvar checks = ''\n\n\t\t$('input[id^=\"chk_package\"]:checked').each(function() {\n\t\t\tchecks += (checks != '' ? ',':'') + $(this).attr('id').replace('chk_package_', '');\n\t\t});\n\n\t\tif (checks != '' || $('#package_location').val() == 0) {\n\t\t\t$.getJSON('package_import.php?action=accept'               +\n\t\t\t\t'&package_location='    + $('#package_location').val() +\n\t\t\t\t'&package_ids='         + checks, function(data) {\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction makePackagesClickable() {\n\t\t$('#package_import3_child').find('tr[id^=\"line\"]').on('click', function() {\n\t\t\tif (checkSigner()) {\n\t\t\t\tpackagesChanged($(this));\n\t\t\t}\n\t\t});\n\t}\n\n\t$(function() {\n\t\trefreshMSeconds = 9999999;\n\n\t\t$('#package_location').off('change').on('change', function() {\n\t\t\tswitchRepo();\n\t\t});\n\n\t\t$('#import_file').off('change').on('change', function() {\n\t\t\tvar form = $('#import')[0];\n\t\t\tvar data = new FormData(form);\n\t\t\tvar formExtra = '?action=upload&package_location=0&preview_only=on';\n\n\t\t\tif ($('#remove_orphans').is(':checked')) {\n\t\t\t\tformExtra += '&remove_orphans=on';\n\t\t\t} else {\n\t\t\t\tformExtra += '&remove_orphans=';\n\t\t\t}\n\n\t\t\tif ($('#replace_svalues').is(':checked')) {\n\t\t\t\tformExtra += '&replace_svalues=on';\n\t\t\t} else {\n\t\t\t\tformExtra += '&replace_svalues=';\n\t\t\t}\n\n\t\t\tif ($('#trust_signer').is(':checked')) {\n\t\t\t\tformExtra += '&trust_signer=on';\n\t\t\t} else {\n\t\t\t\tformExtra += '&trust_signer=';\n\t\t\t}\n\n\t\t\tPace.start();\n\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t\turl: urlPath + 'package_import.php' + formExtra,\n\t\t\t\tdata: data,\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tcache: false,\n\t\t\t\ttimeout: 10000,\n\t\t\t\tsuccess: function (data) {\n\t\t\t\t\tif ($('#contents').length == 0) {\n\t\t\t\t\t\t$('#main').append('<div id=\"contents\"></div>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#contents').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#contents').html(data);\n\n\t\t\t\t\t$('#import_confirmed').val('on');\n\n\t\t\t\t\tPace.stop();\n\n\t\t\t\t\tcheckSigner()\n\t\t\t\t},\n\t\t\t\terror: function (event) {\n\t\t\t\t\tif ($('#contents').length == 0) {\n\t\t\t\t\t\t$('#main').append('<div id=\"contents\"></div>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#contents').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#contents').html(data);\n\n\t\t\t\t\tPace.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tmakePackagesClickable();\n\n\t\t$('#selectall').change(function() {\n\t\t\tif (checkSigner()) {\n\t\t\t\tpackagesChanged();\n\t\t\t}\n\t\t});\n\n\t\t$('.import_label').button();\n\t\t$('.import_button').change(function() {\n\t\t\ttext=this.value;\n\t\t\tsetImportFile(text);\n\t\t});\n\n\t\tsetImportFile(noFileSelected);\n\n\t\tfunction setImportFile(fileText) {\n\t\t\t$('.import_text').text(fileText);\n\t\t}\n\t});\n\t</script>\n\t<?php\n\n\tform_end();\n}\n\nfunction form_dialog_box() {\n\tprint '<div style=\"display:none\">\n\t\t<div id=\"import_dialog\" title=\"\">\n\t\t\t<div id=\"import_message\"></div>\n\t\t</div>\n\t</div>';\n}\n\nfunction get_repo_file($repo_id, $filename = 'package.manifest', $javascript = false) {\n\t$repo = db_fetch_row_prepared('SELECT *\n\t\tFROM package_repositories\n\t\tWHERE id = ?',\n\t\tarray($repo_id));\n\n\tif (cacti_sizeof($repo)) {\n\t\tif ($repo['repo_type'] == 0) { // GitHub\n\t\t\t$repoloc = str_replace('github.com', 'raw.githubusercontent.com', $repo['repo_location']);\n\t\t\t$file = $repoloc . '/' . $repo['repo_branch'] . '/' . $filename;\n\n\t\t\t$data = file_get_contents($file);\n\n\t\t\tif ($data != '') {\n\t\t\t\treturn $data;\n\t\t\t} elseif (!$javascript) {\n\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable on GitHub or the \\'%s\\' file is missing or it could be an invalid branch.  Valid Package Locations are normally: https://github.com/Author/RepoName/.', $repo['name'], $filename), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\t\t} elseif ($repo['repo_type'] == 2) { // Direct URL\n\t\t\t$file = $repo['repo_location'] . '/' . $filename;\n\n\t\t\t$context = array(\n\t\t\t\t'ssl' =>array(\n\t\t\t\t\t'verify_peer'      => false,\n\t\t\t\t\t'verify_peer_name' => false,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t$data = file_get_contents($file, false, stream_context_create($context));\n\n\t\t\tif ($data != '') {\n\t\t\t\treturn $data;\n\t\t\t} elseif (!$javascript) {\n\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable at the URL Location or the package.manifest file is missing.', $repo['name']), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\t\t} else { // Server Directory\n\t\t\t$file = $repo['repo_location'] . '/' . $filename;\n\n\t\t\tif (file_exists($file)) {\n\t\t\t\t$data = file_get_contents($file);\n\n\t\t\t\tif ($data != '') {\n\t\t\t\t\treturn $data;\n\t\t\t\t} elseif (!$javascript) {\n\t\t\t\t\traise_message('repo_exists', __('The Repo \\'%s\\' is Reachable on the Local Cacti Server.  But not data returned from the manifest file.', $repo['name']), MESSAGE_LEVEL_ERROR);\n\t\t\t\t}\n\t\t\t} elseif (!$javascript) {\n\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable on the Local Cacti Server or the package.manifest file is missing.', $repo['name']), MESSAGE_LEVEL_ERROR);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction get_repo_manifest_file($repo_id) {\n\treturn get_repo_file($repo_id, 'package.manifest');\n}\n\nfunction is_tmp_writable() {\n\t$tmp_dir  = sys_get_temp_dir();\n\t$tmp_len  = strlen($tmp_dir);\n\t$tmp_dir .= ($tmp_len !== 0 && substr($tmp_dir, -$tmp_len) === '/') ? '': '/';\n\t$is_tmp   = is_resource_writable($tmp_dir);\n\n\treturn $is_tmp;\n}\n\nfunction package_prepare_import_array(&$templates, &$files, $package_name, $package_filename, $import_info) {\n\tglobal $hash_type_names;\n\n\t/**\n\t * This function will create an array of item types and their status\n\t * the user will have an option to import select items based upon\n\t * these values.\n\t *\n\t * $templates['template_hash'] = array(\n\t *    'package'      => 'some_package_name',\n\t *    'package_file' => 'some_package_filename',\n\t *    'type'         => 'some_type',\n\t *    'type_name'    => 'some_type_name',\n\t *    'name'         => 'some_name',\n\t *    'status'       => 'some_status'\n\t * );\n\t *\n\t * $files[$package_filename|$package_name] = array(\n\t *    'filename' => 'somefilename'\n\t * );\n\t */\n\n\tif (cacti_sizeof($import_info)) {\n\t\tif (cacti_sizeof($import_info[1])) {\n\t\t\tforeach($import_info[1] as $filename => $status) {\n\t\t\t\t$files[\"$package_filename|$package_name\"][$filename] = $status;\n\t\t\t}\n\t\t}\n\n\t\tforeach ($import_info[0] as $type => $type_array) {\n\t\t\tif ($type == 'files') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach ($type_array as $index => $vals) {\n\t\t\t\t$hash = $vals['hash'];\n\n\t\t\t\tif (!isset($templates[$hash])) {\n\t\t\t\t\t$templates[$hash]['package']      = $package_name;\n\t\t\t\t\t$templates[$hash]['package_file'] = $package_filename;\n\t\t\t\t\t$templates[$hash]['status']       = $vals['type'];;\n\t\t\t\t} else {\n\t\t\t\t\t$templates[$hash]['package']      .= '<br>' . $package_name;\n\t\t\t\t\t$templates[$hash]['package_file'] .= '<br>' . $package_filename;\n\t\t\t\t\t$templates[$hash]['status']       .= '<br>' . $vals['type'];;\n\t\t\t\t}\n\n\t\t\t\t$templates[$hash]['type']      = $type;\n\t\t\t\t$templates[$hash]['type_name'] = $hash_type_names[$type];\n\t\t\t\t$templates[$hash]['name']      = $vals['title'];\n\n\t\t\t\tunset($vals['title']);\n\t\t\t\tunset($vals['result']);\n\t\t\t\tunset($vals['hash']);\n\t\t\t\tunset($vals['type']);\n\n\t\t\t\tif (isset($vals['dep'])) {\n\t\t\t\t\tunset($vals['dep']);\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($vals)) {\n\t\t\t\t\t$templates[$hash]['vals'][$package_name] = $vals;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
        },
        {
          "name": "package_keys.php",
          "type": "blob",
          "size": 7.42578125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tpublic_keys();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tpackage_key_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: package_keys.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$p_list = '';\n\t$p_array = array();\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$p_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT author FROM package_public_keys WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$p_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('package_keys.php');\n\n\thtml_start_box($actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($p_array) && cacti_sizeof($p_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following .', 'Click \\'Continue\\' to delete following Package Repositories.', cacti_sizeof($p_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$p_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Public Key', 'Delete Public Keys', cacti_sizeof($p_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: package_keys.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($p_array) ? serialize($p_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction package_key_remove($id) {\n\tdb_execute_prepared('DELETE FROM package_public_keys WHERE id = ?', array($id));\n}\n\nfunction public_keys() {\n\tglobal $actions, $item_rows, $types;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Public Keys'), 'package_keys.php', 'fors', 'sess_package_keys');\n\n\t$pageFilter->rows_label = __('Keys');\n\t$pageFilter->set_sort_array('author', 'ASC');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(author LIKE ? OR homepage LIKE ? OR email_address LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM package_public_keys\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$keys = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM package_public_keys\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'author' => array(\n\t\t\t'display' => __('Author'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'homepage' => array(\n\t\t\t'display' => __('Home Page'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'email_address' => array(\n\t\t\t'display' => __('Support EMail Address'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Key Type'),\n\t\t),\n\t);\n\n\t$nav = html_nav_bar('package_keys.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, sizeof($display_text)+1, __('Package Public Keys'), 'page', 'main');\n\n\tform_start('package_keys.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($keys)) {\n\t\tforeach ($keys as $key) {\n\t\t\tform_alternate_row('line' . $key['id'], true);\n\n\t\t\t$pkey = $key['public_key'];\n\n\t\t\tform_selectable_cell(filter_value($key['author'], get_request_var('filter')), $key['id']);\n\t\t\tform_selectable_cell($key['id'], $key['id']);\n\t\t\tform_selectable_cell(filter_value($key['homepage'], get_request_var('filter')), $key['id']);\n\t\t\tform_selectable_cell(filter_value($key['email_address'], get_request_var('filter')), $key['id']);\n\t\t\tform_selectable_cell(strlen($pkey) < 200 ? 'SHA1':'SHA256', $key['id']);\n\n\t\t\tform_checkbox_cell($key['author'], $key['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Package Public Keys Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($keys)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\n"
        },
        {
          "name": "package_repos.php",
          "type": "blob",
          "size": 17.529296875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Default')\n);\n\n$types = array(\n\t0 => __('GitHub Based'),\n\t1 => __('File Based'),\n\t2 => __('Direct URL')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\trepo_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\trepos();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_repo')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('repo_type');\n\t\t/* ==================================================== */\n\n\t\t$save['id']            = get_nfilter_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['repo_type']     = get_nfilter_request_var('repo_type');\n\t\t$save['repo_location'] = get_nfilter_request_var('repo_location');\n\t\t$save['repo_branch']   = get_nfilter_request_var('repo_branch');\n\t\t$save['repo_api_key']  = get_nfilter_request_var('repo_api_key');\n\t\t$save['enabled']       = (isset_request_var('enabled') ? 'on':'');\n\t\t$save['default']       = (isset_request_var('default') ? 'on':'');\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'package_repositories', 'id');\n\n\t\t\tif ($id) {\n\t\t\t\tif ($save['repo_type'] == 0) {\n\t\t\t\t\t$repoloc = str_replace('github.com', 'raw.githubusercontent.com', $save['repo_location']);\n\n\t\t\t\t\t$file = $repoloc . '/' . $save['repo_branch'] . '/package.manifest';\n\n\t\t\t\t\t$data = file_get_contents($file);\n\n\t\t\t\t\tif ($data != '') {\n\t\t\t\t\t\traise_message('repo_exists', __('The Repo \\'%s\\' is Reachable on GitHub.', $save['name']), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable on GitHub or the package.manifest file is missing or it could be an invalid branch.  Valid Package Locations are normally: https://github.com/Author/RepoName/.', $save['name']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t}\n\t\t\t\t} elseif ($save['repo_type'] == 2) {\n\t\t\t\t\t$file = $save['repo_location'] . '/package.manifest';\n\n\t\t\t\t\t$context = array(\n\t\t\t\t\t\t'ssl' =>array(\n\t\t\t\t\t\t\t'verify_peer'      => false,\n\t\t\t\t\t\t\t'verify_peer_name' => false,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\t$data = file_get_contents($file, false, stream_context_create($context));\n\n\t\t\t\t\tif ($data != '') {\n\t\t\t\t\t\traise_message('repo_exists', __('The Repo \\'%s\\' is Reachable at the URL Location.', $save['name']), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable at the URL Location or the package.manifest file is missing.', $save['name']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$file = $save['repo_location'] . '/package.manifest';\n\n\t\t\t\t\tif (file_exists($file)) {\n\t\t\t\t\t\traise_message('repo_exists', __('The Repo \\'%s\\' is Reachable on the Local Cacti Server.', $save['name']), MESSAGE_LEVEL_INFO);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message('repo_missing', __('The Repo \\'%s\\' is NOT Reachable on the Local Cacti Server or the package.manifest file is missing.', $save['name']), MESSAGE_LEVEL_WARN);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: package_repos.php?header=false&action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tpackage_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tpackage_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tpackage_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\t\tif (cacti_sizeof($selected_items) > 1) {\n\t\t\t\t\t/* error message */\n\t\t\t\t} else {\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tpackage_default($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: package_repos.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$p_list = '';\n\t$p_array = array();\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$p_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM package_repositories WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$p_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('package_repos.php');\n\n\thtml_start_box($actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($p_array) && cacti_sizeof($p_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following .', 'Click \\'Continue\\' to delete following Package Repositories.', cacti_sizeof($p_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$p_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Package Repository', 'Delete Package Repositories', cacti_sizeof($p_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following Package Repository.', 'Click \\'Continue\\' to disable following Package Repositories.', cacti_sizeof($p_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$p_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable Package Repository', 'Disable Package Repositories', cacti_sizeof($p_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Package Repository.', 'Click \\'Continue\\' to enable following Package Repositories.', cacti_sizeof($p_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$p_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enabled Package Repository', 'Enable Package Repositories', cacti_sizeof($p_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to make the following the following Package Repository the default one.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$p_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Make Selected Repository Default') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: package_repos.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($p_array) ? serialize($p_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction repo_remove($id) {\n\tdb_execute_prepared('DELETE FROM package_repositories WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM package_repositories WHERE id = ?', array($id));\n}\n\nfunction repo_disable($id) {\n\tdb_execute_prepared('UPDATE package_repositories SET enabled = \"\" WHERE id = ?', array($id));\n}\n\nfunction repo_enable($id) {\n\tdb_execute_prepared('UPDATE package_repositories SET enabled = \"on\" WHERE id = ?', array($id));\n}\n\nfunction repo_default($id) {\n\tdb_execute('UPDATE package_repositories SET `default` = \"\"');\n\tdb_execute_prepared('UPDATE package_repositories SET `default` = \"on\" WHERE id = ?', array($id));\n}\n\nfunction repo_edit() {\n\tglobal $types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$repo = db_fetch_row_prepared('SELECT * FROM package_repositories WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('Package Repository [edit: %s]', $repo['name']);\n\t} else {\n\t\t$header_label = __('Package Repository [new]');\n\t\t$repo = array();\n\t}\n\n\tif (cacti_sizeof($repo)) {\n\t\tif ($repo['repo_type'] == 1) { // Local directory\n\t\t\t$method = 'dirpath';\n\t\t} else {\n\t\t\t$method = 'textbox';\n\t\t}\n\t} else {\n\t\t$method = 'textbox';\n\t}\n\n\t$fields_package = array(\n\t\t'name' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description' => __('Enter a meaningful name for this Package Repository.'),\n\t\t\t'value' => '|arg1:name|',\n\t\t\t'max_length' => '32',\n\t\t),\n\t\t'repo_type' => array(\n\t\t\t'method' => 'drop_array',\n\t\t\t'friendly_name' => __('Repository Type'),\n\t\t\t'description' => __('Choose what Package Repository type this is.'),\n\t\t\t'value' => '|arg1:repo_type|',\n\t\t\t'array' => $types,\n\t\t\t'default' => '0'\n\t\t),\n\t\t'repo_location' => array(\n\t\t\t'method' => $method,\n\t\t\t'friendly_name' => __('Location'),\n\t\t\t'description' => __('Either the full path on the Cacti Web Server to the Repository or a URL to the Repository.  For example: https://github.com/Cacti/packages/'),\n\t\t\t'value' => '|arg1:repo_location|',\n\t\t\t'max_length' => '128',\n\t\t\t'size' => '120'\n\t\t),\n\t\t'repo_branch' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Branch'),\n\t\t\t'description' => __('For GitHub based repositories, the branch to include such as \\'develop\\', \\'master\\', etc.'),\n\t\t\t'value' => '|arg1:repo_branch|',\n\t\t\t'max_length' => '128',\n\t\t\t'size' => '10'\n\t\t),\n\t\t'repo_api_key' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('API Key (optional)'),\n\t\t\t'description' => __('For GitHub based repositories, the optional API key required to access the repository.'),\n\t\t\t'value' => '|arg1:repo_api_key|',\n\t\t\t'max_length' => '128',\n\t\t\t'size' => '100'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'method' => 'checkbox',\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'description' => __('If this checkbox is checked, you will be able to import packages from this Repository.'),\n\t\t\t'value' => '|arg1:enabled|',\n\t\t\t'default' => 'on',\n\t\t),\n\t\t'default' => array(\n\t\t\t'method' => 'checkbox',\n\t\t\t'friendly_name' => __('Default'),\n\t\t\t'description' => __('If this checkbox is checked, this will be the first Repository shown to the user.'),\n\t\t\t'value' => '|arg1:default|',\n\t\t\t'default' => '',\n\t\t),\n\t\t'id' => array(\n\t\t\t'method' => 'hidden_zero',\n\t\t\t'value' => '|arg1:id|'\n\t\t),\n\t\t'save_component_repo' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t)\n\t);\n\n\tform_start('package_repos.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array(),\n\t\t\t'fields' => inject_form_variables($fields_package, (isset($repo) ? $repo : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true);\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction initPackageType() {\n\t\tif ($('#repo_type').val() == 0) {\n\t\t\t$('#row_repo_branch').show();\n\t\t\t$('#row_repo_api_key').show();\n\t\t} else {\n\t\t\t$('#row_repo_branch').hide();\n\t\t\t$('#row_repo_api_key').hide();\n\t\t}\n\t}\n\n\t$(function() {\n\t\tinitPackageType();\n\n\t\t$('#repo_type').change(function() {\n\t\t\tinitPackageType();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('package_repos.php', 'return', 'id');\n}\n\nfunction repos() {\n\tglobal $actions, $item_rows, $types;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Package Repositorites'), 'package_repos.php', 'fors', 'sess_package_repos', 'package_repos.php?action=edit');\n\n\t$pageFilter->rows_label = __('Repos');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(name LIKE ? OR repo_branch LIKE ? OR repo_location LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM package_repositories\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$repos = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM package_repositories\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Name'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'repo_type' => array(\n\t\t\t'display' => __('Type'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'repo_location' => array(\n\t\t\t'display' => __('Location'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'repo_branch' => array(\n\t\t\t'display' => __('Branch'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'default' => array(\n\t\t\t'display' => __('Default'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t);\n\n\t$nav = html_nav_bar('package_repos.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, sizeof($display_text)+1, __('Package Repositories'), 'page', 'main');\n\n\tform_start('package_repos.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($repos)) {\n\t\tforeach ($repos as $repo) {\n\t\t\tform_alternate_row('line' . $repo['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($repo['name'], get_request_var('filter'), 'package_repos.php?action=edit&id=' . $repo['id']), $repo['id']);\n\t\t\tform_selectable_cell($types[$repo['repo_type']], $repo['id']);\n\t\t\tform_selectable_cell(filter_value($repo['repo_location'], get_request_var('filter')), $repo['id']);\n\t\t\tform_selectable_ecell($repo['repo_type'] == 0 ? ($repo['repo_branch'] != '' ? $repo['repo_branch']:__('default')):__('N/A'), $repo['id'], '', 'center');\n\t\t\tform_selectable_cell($repo['enabled'] == 'on' ? __('Yes'):__('No'), $repo['id'], '', 'center');\n\t\t\tform_selectable_cell($repo['default'] == 'on' ? __('Yes'):__('No'), $repo['id'], '', 'center');\n\n\t\t\tform_checkbox_cell($repo['name'], $repo['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Package Repositories Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($repos)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "permission_denied.php",
          "type": "blob",
          "size": 2.4794921875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$version = CACTI_VERSION_TEXT;\n\nif (isset($_SERVER['HTTP_REFERER'])) {\n\t$goBack = \"[<a href='\" . sanitize_uri($_SERVER['HTTP_REFERER']) . \"'>\" . __('Return') . \"</a> | <a href='\" . CACTI_PATH_URL . \"logout.php'>\" . __('Login Again') . '</a>]';\n} else {\n\t$goBack = \"[<a href='#' onClick='window.history.back()'>\" . __('Return') . \"</a> | <a href='\" . CACTI_PATH_URL . \"logout.php'>\" . __('Login Again') . '</a>]';\n}\n\n/* allow for plugin based permission denied page */\nif (api_plugin_hook_function('custom_denied', OPER_MODE_NATIVE) === OPER_MODE_RESKIN) {\n\texit;\n}\n\nraise_ajax_permission_denied();\n\nhtml_auth_header('denied', __('Permission Denied'), __('Permission Denied'),\n\t__('You are not permitted to access this section of Cacti.'));\n?>\n\t<tr><td><?php print __('If you feel that this is an error. Please contact your Cacti Administrator.'); ?></td></tr>\n\t<tr><td><center><?php print $goBack; ?></center></td></tr>\n<?php\nhtml_auth_footer('denied');\n"
        },
        {
          "name": "plugins.php",
          "type": "blob",
          "size": 69.7861328125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\n\nglobal $local_db_cnn_id;\n\n/* the list of all known actions */\n$actions = array(\n\t/* list functions */\n\t'list'           => __('Loaded Plugins'),\n\t'avail'          => __('Available Plugins'),\n\n\t/* classic calls */\n\t'install'        => __('Install'),\n\t'enable'         => __('Enable'),\n\t'disable'        => __('Disable'),\n\t'uninstall'      => __('Uninstall'),\n\t'check'          => __('Check Configuration'),\n\t'confirm'        => __('Install Prompt Confirmation'),\n\n\t/* removed plugin data handling */\n\t'remove_data'    => __('Remove Plugin Data'),\n\n\t/* load order switching  */\n\t'moveup'         => __('Move Up'),\n\t'movedown'       => __('Move Down'),\n\n\t/* plugin archiving */\n\t'archive'        => __('Archive'),\n\t'restore'        => __('Archive Restore'),\n\t'delete'         => __('Archive Delete'),\n\n\t/* manage downloaded content */\n\t'load'           => __('Install from Downloaded Plugins'),\n\t'readme'         => __('View the Plugins Readme File'),\n\t'changelog'      => __('View the Plugins ChangeLog File'),\n\t'latest'         => __('Fetch Latest Plugin Archives'),\n\n\t/* remote poller plugin functions */\n\t'remote_enable'  => __('Remote Enable'),\n\t'remote_disable' => __('Remote Disable'),\n\n\t/* drag and drop */\n\t'ajax_dnd'       => __('Drag and Drop'),\n);\n\n$status_names = array(\n\t-1 => __('Not Compatible'),\n\t-2 => __('Disabled Naming Errors'),\n\t-3 => __('Disabled Invalid Directory'),\n\t-4 => __('Disabled No INFO File'),\n\t-5 => __('Disabled Directory Missing'),\n\t0  => __('Loaded, Not Installed'),\n\t1  => __('Installed/Active'),\n\t2  => __('Configuration Issues'),\n\t3  => __('Awaiting Upgrade'),\n\t4  => __('Installed/Inactive'),\n\t5  => __('Installed or Active'),\n\t6  => __('Installable'),\n\t7  => __('Disabled by Error'),\n\t8  => __('Archived'),\n);\n\n/* temporary workaround till project finished */\ndb_execute(\"CREATE TABLE IF NOT EXISTS `plugin_available` (\n\t`plugin` varchar(32) NOT NULL DEFAULT '',\n\t`description` varchar(128) NOT NULL DEFAULT '',\n\t`author` varchar(40) NOT NULL DEFAULT '',\n\t`webpage` varchar(128) NOT NULL DEFAULT '',\n\t`tag_name` varchar(20) NOT NULL DEFAULT '',\n\t`published_at` timestamp NULL DEFAULT NULL,\n\t`compat` varchar(20) NOT NULL DEFAULT '',\n\t`requires` varchar(128) NOT NULL DEFAULT '',\n\t`body` blob DEFAULT NULL,\n\t`info` blob DEFAULT NULL,\n\t`readme` blob DEFAULT NULL,\n\t`changelog` blob DEFAULT NULL,\n\t`archive` longblob DEFAULT NULL,\n\t`last_updated` timestamp NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n\tPRIMARY KEY (`plugin`,`tag_name`))\n\tENGINE=InnoDB\n\tROW_FORMAT=DYNAMIC\");\n\ndb_execute(\"CREATE TABLE IF NOT EXISTS `plugin_archive` (\n\t`id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,\n\t`plugin` varchar(32) NOT NULL DEFAULT '',\n\t`description` varchar(64) NOT NULL DEFAULT '',\n\t`author` varchar(64) NOT NULL DEFAULT '',\n\t`webpage` varchar(255) NOT NULL DEFAULT '',\n\t`user_id` int(10) unsigned NOT NULL DEFAULT 0,\n\t`version` varchar(10) NOT NULL DEFAULT '',\n\t`requires` varchar(128) DEFAULT '',\n\t`compat` varchar(20) NOT NULL DEFAULT '',\n\t`dir_md5sum` varchar(32) NOT NULL DEFAULT '',\n\t`last_updated` timestamp NULL DEFAULT NULL,\n\t`archive` longblob DEFAULT NULL,\n\tPRIMARY KEY (`id`),\n\tKEY `directory` (`plugin`))\n\tENGINE=InnoDB\n\tROW_FORMAT=DYNAMIC\");\n\n/* get the list of installed plugins */\n$pluginslist = plugins_retrieve_plugin_list();\n\nset_default_action('list');\n\n/**\n * this is for legacy support for plugins like syslog\n * that are dependent on the mode request variable\n * to be set.\n */\nif (isset_request_var('mode')) {\n\tset_request_var('action', get_nfilter_request_var('mode'));\n\n\tif (isset_request_var('id')) {\n\t\tset_request_var('plugin', get_nfilter_request_var('id'));\n\t}\n}\n\n$action = get_nfilter_request_var('action');\n\n/* pre-check for actions that will fail by default */\nif (isset_request_var('plugin')) {\n\tget_filter_request_var('plugin', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9 _]+)$/')));\n\n\t$plugin = sanitize_search_string(get_request_var('plugin'));\n\n\t$safe_actions = array(\n\t\t'changelog',\n\t\t'readme',\n\t\t'load',\n\t\t'install',\n\t\t'confirm',\n\t\t'delete',\n\t\t'ajax_dnd',\n\t\t'remove_data'\n\t);\n\n\t$display_action = ucwords(str_replace('_', ' ', $action));\n\n\tif (!in_array($plugin, $pluginslist, true) && !in_array($action, $safe_actions, true)) {\n\t\traise_message('invalid_plugin', __('The action \\'%s\\' on Plugin \\'%s\\' can not be performed due to the Plugin in it\\'s current state.', $display_action, $plugin), MESSAGE_LEVEL_ERROR);\n\t\theader('Location: plugins.php');\n\t\texit;\n\t} elseif (in_array($plugin, $plugins_integrated, true)) {\n\t\traise_message('invalid_plugin_action', __('The action \\'%s\\' \\'%s\\' on Plugin \\'%s\\' can not be taken as the Plugin is integrated.', $display_action, $plugin), MESSAGE_LEVEL_ERROR);\n\t\theader('Location: plugins.php');\n\t\texit;\n\t}\n} else {\n\t$plugin = '';\n}\n\nswitch($action) {\n\tcase 'list':\n\tcase 'avail':\n\t\ttop_header();\n\n\t\tupdate_show_current();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'load':\n\t\t$tag = get_nfilter_request_var('tag');\n\n\t\tapi_plugin_archive_restore($plugin, $tag, 'available');\n\n\t\theader('Location: plugins.php?state=-99');\n\t\texit;\n\n\t\tbreak;\n\tcase 'readme':\n\t\t$tag = get_nfilter_request_var('tag');\n\n\t\tapi_plugin_get_available_file_contents($plugin, $tag, 'readme');\n\n\t\tbreak;\n\tcase 'changelog':\n\t\t$tag = get_nfilter_request_var('tag');\n\n\t\tapi_plugin_get_available_file_contents($plugin, $tag, 'changelog');\n\n\t\tbreak;\n\tcase 'latest':\n\t\t$running = is_process_running('pfetch', 'master', 0);\n\n\t\tif ($running === false) {\n\t\t\t$php_binary = read_config_option('path_php_binary');\n\n\t\t\texec_background($php_binary, CACTI_PATH_CLI . '/fetch_plugins.php');\n\n\t\t\tusleep(300000);\n\n\t\t\traise_message('fetch_background', __('The fetch latest plugins process has been launched into background.'), MESSAGE_LEVEL_INFO);\n\t\t} elseif ($running === true) {\n\t\t\traise_message('fetch_background', __('The fetch latest plugins process has already been started.'), MESSAGE_LEVEL_WARN);\n\t\t}\n\n\t\theader('Location: plugins.php');\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'install':\n\t\tapi_plugin_install($plugin);\n\n\t\tdefine('IN_PLUGIN_INSTALL', 1);\n\n\t\tif ($_SESSION['sess_plugins_state'] >= 0) {\n\t\t\theader('Location: plugins.php?state=5');\n\t\t} else {\n\t\t\theader('Location: plugins.php');\n\t\t}\n\n\t\tbreak;\n\tcase 'uninstall':\n\t\tdefine('IN_PLUGIN_INSTALL', 1);\n\n\t\tapi_plugin_uninstall($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'remove_data':\n\t\tapi_plugin_remove_data($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'disable':\n\t\tapi_plugin_disable($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'enable':\n\t\tapi_plugin_enable($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'check':\n\t\t$response = api_plugin_check_config($plugin);\n\n\t\tif ($response === true) {\n\t\t\t/* set the status as installable again if check passes */\n\t\t\tdb_execute_prepared('UPDATE plugin_config\n\t\t\t\tSET status = 0\n\t\t\t\tWHERE directory = ?',\n\t\t\t\tarray($plugin));\n\n\t\t\traise_message('plugin_good', __('Plugin \\'%s\\' has passed it\\'s Configuration Check test and can not be Installed', $plugin), MESSAGE_LEVEL_INFO);\n\t\t} elseif ($response === null) {\n\t\t\traise_message('plugin_good', __('Plugin \\'%s\\' Check Configuration function returned a null response which is invalid.  Please check with Plugin Developer for an update.', $plugin), MESSAGE_LEVEL_WARN);\n\t\t}\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'moveup':\n\t\tapi_plugin_moveup($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'movedown':\n\t\tapi_plugin_movedown($plugin);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'remote_enable':\n\t\tif ($config['poller_id'] > 1) {\n\t\t\tdb_execute_prepared('UPDATE plugin_config\n\t\t\t\tSET status = 1\n\t\t\t\tWHERE directory = ?',\n\t\t\t\tarray($plugin), false, $local_db_cnn_id);\n\t\t}\n\n\t\theader('Location: plugins.php' . ($option != '' ? '&' . $option:''));\n\n\t\tbreak;\n\tcase 'remote_disable':\n\t\tif ($config['poller_id'] > 1) {\n\t\t\tdb_execute_prepared('UPDATE plugin_config\n\t\t\t\tSET status = 4\n\t\t\t\tWHERE directory = ?',\n\t\t\t\tarray($plugin), false, $local_db_cnn_id);\n\t\t}\n\n\t\theader('Location: plugins.php' . ($option != '' ? '&' . $option:''));\n\n\t\tbreak;\n\tcase 'restore':\n\t\t$id = get_filter_request_var('id');\n\n\t\tapi_plugin_archive_restore($plugin, $id, 'archive');\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'delete':\n\t\t$id = get_filter_request_var('id');\n\n\t\tapi_plugin_archive_remove($plugin, $id);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'archive':\n\t\t$archive_note = get_nfilter_request_var('archive_note');\n\n\t\tapi_plugin_archive($plugin, $archive_note);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\t$new_order = get_nfilter_request_var('dnd');\n\n\t\tapi_plugin_reorder($new_order);\n\n\t\theader('Location: plugins.php');\n\n\t\tbreak;\n}\n\nexit;\n\nfunction plugins_retrieve_plugin_list() {\n\t$pluginslist = array();\n\n\t$temp = db_fetch_assoc('SELECT directory AS plugin FROM plugin_config ORDER BY name');\n\n\tforeach ($temp as $t) {\n\t\t$pluginslist[] = $t['plugin'];\n\t}\n\n\treturn $pluginslist;\n}\n\nfunction plugins_temp_table_exists($table) {\n\treturn cacti_sizeof(db_fetch_row(\"SHOW TABLES LIKE '$table'\"));\n}\n\nfunction plugins_load_temp_table() {\n\tglobal $config, $plugins, $plugins_integrated, $local_db_cnn_id;\n\n\t$table = 'plugin_temp_table_' . rand();\n\n\t$x = 0;\n\n\twhile ($x < 30) {\n\t\tif (!plugins_temp_table_exists($table)) {\n\t\t\t$_SESSION['plugin_temp_table'] = $table;\n\n\t\t\tdb_execute(\"CREATE TEMPORARY TABLE IF NOT EXISTS $table LIKE plugin_config\");\n\t\t\tdb_execute(\"TRUNCATE $table\");\n\t\t\tdb_execute(\"INSERT INTO $table SELECT * FROM plugin_config\");\n\n\t\t\tbreak;\n\t\t} else {\n\t\t\t$table = 'plugin_temp_table_' . rand();\n\t\t}\n\n\t\t$x++;\n\t}\n\n\tif (!db_column_exists($table, 'requires')) {\n\t\tdb_execute(\"ALTER TABLE $table\n\t\t\tCHANGE COLUMN directory plugin varchar(32) NOT NULL default '',\n\t\t\tCHANGE COLUMN name description varchar(64) NOT NULL default '',\n\t\t\tADD COLUMN compat varchar(64) NOT NULL default '',\n\t\t\tADD COLUMN remote_status tinyint(2) DEFAULT '0' AFTER status,\n\t\t\tADD COLUMN capabilities varchar(128) DEFAULT NULL,\n\t\t\tADD COLUMN requires varchar(80) DEFAULT NULL,\n\t\t\tADD COLUMN dir_md5sum varchar(32) DEFAULT NULL\");\n\t}\n\n\tif ($config['poller_id'] > 1) {\n\t\t$status = db_fetch_assoc('SELECT directory AS plugin, status\n\t\t\tFROM plugin_config', false, $local_db_cnn_id);\n\n\t\tif (cacti_sizeof($status)) {\n\t\t\tforeach ($status as $r) {\n\t\t\t\t$exists = db_fetch_cell_prepared(\"SELECT id\n\t\t\t\t\tFROM $table\n\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\tarray($r['plugin']));\n\n\t\t\t\tif ($exists) {\n\t\t\t\t\t$capabilities = api_plugin_remote_capabilities($r['plugin']);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE $table\n\t\t\t\t\t\tSET capabilities = ?\n\t\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\t\tarray($capabilities, $r['plugin']));\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE $table\n\t\t\t\t\t\tSET remote_status = ?\n\t\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\t\tarray($r['status'], $r['plugin']));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE $table\n\t\t\t\t\t\tSET status = -2, remote_status = ?\n\t\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\t\tarray($r['status'], $r['plugin']));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$path  = CACTI_PATH_PLUGINS . '/';\n\t$dh    = opendir($path);\n\t$cinfo = array();\n\n\tif ($dh !== false) {\n\t\twhile (($file = readdir($dh)) !== false) {\n\t\t\tif (is_dir(\"$path$file\") && file_exists(\"$path$file/setup.php\") && !in_array($file, $plugins_integrated, true)) {\n\t\t\t\t$info_file = \"$path$file/INFO\";\n\n\t\t\t\t$md5sum = md5sum_path(\"$path$file\");\n\n\t\t\t\tif (file_exists($info_file)) {\n\t\t\t\t\t$cinfo[$file]  = plugin_load_info_file($info_file);\n\t\t\t\t\t$pluginslist[] = $file;\n\t\t\t\t} else {\n\t\t\t\t\t$cinfo[$file] = plugin_load_info_defaults($info_file, false);\n\t\t\t\t}\n\n\t\t\t\t$exists = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\t\t\t\tFROM $table\n\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\tarray($file));\n\n\t\t\t\t$plugin_name = $cinfo[$file]['name'];\n\n\t\t\t\tif (!$exists) {\n\t\t\t\t\tdb_execute_prepared(\"INSERT INTO $table\n\t\t\t\t\t\t(plugin, description, status, author, webpage, version, requires, compat, dir_md5sum)\n\t\t\t\t\t\tVALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\",\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t$plugin_name,\n\t\t\t\t\t\t\t$cinfo[$file]['longname'],\n\t\t\t\t\t\t\t$cinfo[$file]['status'],\n\t\t\t\t\t\t\t$cinfo[$file]['author'],\n\t\t\t\t\t\t\t$cinfo[$file]['homepage'],\n\t\t\t\t\t\t\t$cinfo[$file]['version'],\n\t\t\t\t\t\t\t$cinfo[$file]['requires'],\n\t\t\t\t\t\t\t$cinfo[$file]['compat'],\n\t\t\t\t\t\t\t$md5sum\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE $table\n\t\t\t\t\t\tSET requires = ?, dir_md5sum = ?, compat = ?\n\t\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\t\tarray($cinfo[$file]['requires'], $md5sum, $cinfo[$file]['compat'], $plugin_name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tclosedir($dh);\n\t}\n\n\t$found_plugins = array_keys($cinfo);\n\n\t$plugins = db_fetch_assoc('SELECT id, directory AS plugin, status FROM plugin_config');\n\n\tif (cacti_sizeof($plugins)) {\n\t\tforeach ($plugins as $plugin) {\n\t\t\tif (!in_array($plugin['plugin'], $found_plugins, true)) {\n\t\t\t\t$plugin['status'] = '-5';\n\n\t\t\t\t$exists = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\t\t\t\tFROM $table\n\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\tarray($plugin['plugin']));\n\n\t\t\t\tif (!$exists) {\n\t\t\t\t\t$md5sum = md5sum_path(\"$path$file\");\n\n\t\t\t\t\tdb_execute_prepared(\"INSERT INTO $table\n\t\t\t\t\t\t(plugin, description, status, author, webpage, version, requires, dir_md5sum)\n\t\t\t\t\t\tVALUES (?, ?, ?, ?, ?, ?, ?, ?)\",\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t$plugin['plugin'],\n\t\t\t\t\t\t\t$plugin['longname'],\n\t\t\t\t\t\t\t$plugin['status'],\n\t\t\t\t\t\t\t$plugin['author'],\n\t\t\t\t\t\t\t$plugin['homepage'],\n\t\t\t\t\t\t\t$plugin['version'],\n\t\t\t\t\t\t\t$plugin['requires'],\n\t\t\t\t\t\t\t$md5sum\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$md5sum = md5sum_path(\"$path$file\");\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE $table\n\t\t\t\t\t\tSET status = ?, dir_md5sum = ?\n\t\t\t\t\t\tWHERE plugin = ?\",\n\t\t\t\t\t\tarray($plugin['status'], $md5sum, $plugin['plugin']));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $table;\n}\n\nfunction update_show_current() {\n\tglobal $plugins, $pluginslist, $config, $status_names, $actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t),\n\t\t'page' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t),\n\t\t'type' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t),\n\t\t'filter' => array(\n\t\t\t'filter'  => FILTER_DEFAULT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter'  => FILTER_CALLBACK,\n\t\t\t'default' => 'pi.plugin',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter'  => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t),\n\t\t'state' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-99'\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_plugins');\n\t/* ================= input validation ================= */\n\n\t$table = plugins_load_temp_table();\n\n\t$uninstall_msg   = __esc('Uninstalling this Plugin and may remove all Plugin Data and Settings.  If you really want to Uninstall the Plugin, click \\'Uninstall\\' below.  Otherwise click \\'Cancel\\'.');\n\t$uninstall_title = __esc('Are you sure you want to Uninstall?');\n\n\t$rmdata_msg   = __esc('Removing Plugin Data and Settings for will remove all Plugin Data and Settings.  If you really want to Remove Data and Settings for this Plugin, click \\'Remove Data\\' below.  Otherwise click \\'Cancel\\'.');\n\t$rmdata_title = __esc('Are you sure you want to Remove all Plugin Data and Settings?');\n\n\t$resarchive_msg   = __esc('Restoring this Plugin Archive will overwrite the current Plugin directory.  If you really want to Restore this Plugin Archive, click \\'Restore\\' below.  Otherwise click \\'Cancel\\'.');\n\t$resarchive_title = __esc('Are you sure you want to Restore this Archive?');\n\n\t$rmarchive_msg   = __esc('Deleting this Plugin Archive is not reversible without a table restore.  If you really want to Delete the Plugin Archive, click \\'Delete\\' below.  Otherwise click \\'Cancel\\'.');\n\t$rmarchive_title = __esc('Are you sure you want to Delete this Archive?');\n\n\t$archive_msg   = __esc('Archiving makes a backup of the plugin that you may restore at a later date.  Before archiving, you may enter an archive note that will be stored with the Archive for later reference.  If you really want to Archive the Plugin, click \\'Delete\\' below.  Otherwise click \\'Cancel\\'.');\n\n\t$archive_form  = '<form name=\"dialogForm\" id=\"dialogForm\"><p><b><label for=\"archive_note\">' . __('Archive Note') . '</label></b>&nbsp;<input type=\"text\" class=\"ui-state-default ui-corner-all\" size=\"80\" value=\"\" name=\"archive_note\" id=\"archive_note\"></p></form>';\n\n\t$archive_title = __esc('Are you sure you want to Archive this Plugin?');\n\n\thtml_filter_start_box(__('Plugin Management'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t\t<form id='form_plugins' method='get' action='plugins.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Status');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='state' name='state' onChange='applyFilter()' data-defaultLabel='<?php print __('Status');?>'>\n\t\t\t\t\t\t\t\t<option value='-99'<?php if (get_request_var('state') == '-99') {?> selected<?php }?>><?php print __('Loaded on Disk');?></option>\n\t\t\t\t\t\t\t\t<option value='0'<?php   if (get_request_var('state') == '0')   {?> selected<?php }?>><?php print __('Loaded and Not Installed');?></option>\n\t\t\t\t\t\t\t\t<option value='1'<?php   if (get_request_var('state') == '1')   {?> selected<?php }?>><?php print __('Installed and Active');?></option>\n\t\t\t\t\t\t\t\t<option value='4'<?php   if (get_request_var('state') == '4')   {?> selected<?php }?>><?php print __('Installed and Inactive');?></option>\n\t\t\t\t\t\t\t\t<option value='5'<?php   if (get_request_var('state') == '5')   {?> selected<?php }?>><?php print __('Installed or Active');?></option>\n\t\t\t\t\t\t\t\t<option value='2'<?php   if (get_request_var('state') == '2')   {?> selected<?php }?>><?php print __('Configuration Issues');?></option>\n\t\t\t\t\t\t\t\t<option value='7'<?php   if (get_request_var('state') == '7')   {?> selected<?php }?>><?php print __('Plugin Errors');?></option>\n\t\t\t\t\t\t\t\t<option value='6'<?php   if (get_request_var('state') == '6')   {?> selected<?php }?>><?php print __('Available for Install');?></option>\n\t\t\t\t\t\t\t\t<option value='8'<?php   if (get_request_var('state') == '8')   {?> selected<?php }?>><?php print __('Archived');?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php if (get_request_var('state') == 6 && read_config_option('github_allow_unsafe', true) == 'on') { ?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Tag Type');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='type' name='type' onChange='applyFilter()' data-defaultLabel='<?php print __('All');?>'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('type') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t\t<option value='1'<?php  if (get_request_var('type') == '1')  {?> selected<?php }?>><?php print __('Non Develop');?></option>\n\t\t\t\t\t\t\t\t<option value='2'<?php  if (get_request_var('type') == '2')  {?> selected<?php }?>><?php print __('Develop');?></option>\n\t\t\t\t\t\t\t\t<option value='3'<?php  if (get_request_var('type') == '3')  {?> selected<?php }?>><?php print __('Newer Than Installed');?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t<td><input type='hidden' id='type' value='-1'></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Plugins');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()' data-defaultLabel='<?php print __('Plugins');?>'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print(get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\" . (get_request_var('rows') == $key ? ' selected':'') . '>' . html_escape($value) . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='latest' value='<?php print __esc('Check Latest');?>' title='<?php print __esc('Fetch the list of the latest Cacti Plugins');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type=\"text/javascript\">\n\t\t\tvar url = '';\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tif ($('#state').val() == 6) {\n\t\t\t\t\tstrURL = 'plugins.php?action=avail';\n\t\t\t\t} else {\n\t\t\t\t\tstrURL = 'plugins.php?action=list';\n\t\t\t\t}\n\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&type='+$('#type').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&state='+$('#state').val();\n\t\t\t\tloadUrl({url:strURL})\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'plugins.php?action=list&clear=1';\n\t\t\t\tloadUrl({url:strURL})\n\t\t\t}\n\n\t\t\tfunction displayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, height, width) {\n\t\t\t\tif ($('#pidialog').dialog('instance')) {\n\t\t\t\t\t$('#pidialog').dialog('close');\n\t\t\t\t}\n\n\t\t\t\tvar btnButtons = {\n\t\t\t\t\t'Cancel': {\n\t\t\t\t\t\ttext: buttonCancel,\n\t\t\t\t\t\tid: 'btnCancel',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'Continue': {\n\t\t\t\t\t\ttext: buttonContinue,\n\t\t\t\t\t\tid: 'btnContinue',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\n\t\t\t\t\t\t\tif ($('#dialogForm').length) {\n\t\t\t\t\t\t\t\tvar post = $('#dialogForm').serializeObject();\n\t\t\t\t\t\t\t\tpost['__csrf_magic'] = csrfMagicToken;\n\t\t\t\t\t\t\t\tpostUrl({url: url, noState: true}, post);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tloadUrl({url: url});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar message = \"<div id='pidialog' style='display:none;'><div><p>\"+dialogMessage+\"</p></div><div>\"+dialogForm+\"</div></div>\";\n\n\t\t\t\tif ($('#pidialog').length == 0) {\n\t\t\t\t\t$('#main').append(message);\n\t\t\t\t} else {\n\t\t\t\t\t$('#pidialog').remove().append(message);\n\t\t\t\t}\n\n\t\t\t\t$('#pidialog').dialog({\n\t\t\t\t\ttitle: dialogTitle,\n\t\t\t\t\tminHeight: height,\n\t\t\t\t\tminWidth: width,\n\t\t\t\t\tbuttons: btnButtons,\n\t\t\t\t\topen: function() {\n\t\t\t\t\t\t$('.ui-dialog-buttonpane > button:last').focus();\n\t\t\t\t\t\t$('#pidialog').offset().top;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction displayFileDialog(url, dialogTitle, height, width) {\n\t\t\t\tif ($('#pidialog').dialog('instance')) {\n\t\t\t\t\t$('#pidialog').dialog('close');\n\t\t\t\t}\n\n\t\t\t\t$.get(url, function(data) {\n\t\t\t\t\tif (data != '') {\n\t\t\t\t\t\tvar message = \"<div id='pidialog' style='display:none;'><div>\"+DOMPurify.sanitize(data)+'</div></div>';\n\n\t\t\t\t\t\tif ($('#pidialog').length == 0) {\n\t\t\t\t\t\t\t$('#main').append(message);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$('#pidialog').remove().append(message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('#pidialog').dialog({\n\t\t\t\t\t\t\ttitle: dialogTitle,\n\t\t\t\t\t\t\tmaxHeight: height,\n\t\t\t\t\t\t\tminWidth: width,\n\t\t\t\t\t\t\topen: function() {\n\t\t\t\t\t\t\t\t\t$('.ui-dialog-buttonpane > button:last').focus();\n\t\t\t\t\t\t\t\t$('#pidialog').offset().top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\tvar sortColumn = '<?php print get_request_var('sort_column');?>';\n\t\t\t\tvar dndActive  = <?php print read_config_option('drag_and_drop') == 'on' ? 'true':'false';?>;\n\t\t\t\tvar tableState = <?php print get_request_var('state');?>\n\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#latest').click(function() {\n\t\t\t\t\tstrURL = 'plugins.php?action=latest';\n\t\t\t\t\tloadUrl({url:strURL});\n\t\t\t\t});\n\n\t\t\t\t$('#form_plugins').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\tif (sortColumn == 'pi.id' && dndActive && tableState == -99) {\n\t\t\t\t\t$('#plugins_list2_child').attr('id', 'dnd');\n\n\t\t\t\t\t$('#dnd').tableDnD({\n\t\t\t\t\t\tonDrag: function(table, row) {\n//\t\t\t\t\t\t\tconsole.log(table);\n//\t\t\t\t\t\t\tconsole.log(row);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\t\t\tloadUrl({url:'plugins.php?action=ajax_dnd&'+$.tableDnD.serialize()})\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t$('.pirestore').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle    = '<?php print $resarchive_title;?>';\n\t\t\t\t\tvar dialogMessage  = '<?php print $resarchive_msg;?>';\n\t\t\t\t\tvar dialogForm     = '';\n\t\t\t\t\tvar buttonContinue = '<?php print __('Restore Archive');?>';\n\t\t\t\t\tvar buttonCancel   = '<?php print __('Cancel');?>';\n\t\t\t\t\tvar url            = $(this).attr('href');\n\n\t\t\t\t\tdisplayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, 80, 400);\n\t\t\t\t});\n\n\t\t\t\t$('.pirmarchive').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle    = '<?php print $rmarchive_title;?>';\n\t\t\t\t\tvar dialogMessage  = '<?php print $rmarchive_msg;?>';\n\t\t\t\t\tvar dialogForm     = '';\n\t\t\t\t\tvar buttonContinue = '<?php print __('Delete Archive');?>';\n\t\t\t\t\tvar buttonCancel   = '<?php print __('Cancel');?>';\n\t\t\t\t\tvar url            = $(this).attr('href');\n\n\t\t\t\t\tdisplayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, 80, 400);\n\t\t\t\t});\n\n\t\t\t\t$('.piarchive').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle    = '<?php print $archive_title;?>';\n\t\t\t\t\tvar dialogMessage  = '<?php print $archive_msg;?>';\n\t\t\t\t\tvar dialogForm     = '<?php print $archive_form;?>';\n\t\t\t\t\tvar buttonContinue = '<?php print __('Archive Plugin');?>';\n\t\t\t\t\tvar buttonCancel   = '<?php print __('Cancel');?>';\n\t\t\t\t\tvar url            = $(this).attr('href');\n\n\t\t\t\t\tdisplayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, 120, 600);\n\t\t\t\t});\n\n\t\t\t\t$('.pirmdata').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle    = '<?php print $rmdata_title;?>';\n\t\t\t\t\tvar dialogMessage  = '<?php print $rmdata_msg;?>';\n\t\t\t\t\tvar dialogForm     = '';\n\t\t\t\t\tvar buttonContinue = '<?php print __('Remove Data');?>';\n\t\t\t\t\tvar buttonCancel   = '<?php print __('Cancel');?>';\n\t\t\t\t\tvar url            = $(this).attr('href');\n\n\t\t\t\t\tdisplayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, 80, 400);\n\t\t\t\t});\n\n\t\t\t\t$('.piuninstall').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle    = '<?php print $uninstall_title;?>';\n\t\t\t\t\tvar dialogMessage  = '<?php print $uninstall_msg;?>';\n\t\t\t\t\tvar dialogForm     = '';\n\t\t\t\t\tvar buttonContinue = '<?php print __('Uninstall');?>';\n\t\t\t\t\tvar buttonCancel   = '<?php print __('Cancel');?>';\n\t\t\t\t\tvar url            = $(this).attr('href');\n\n\t\t\t\t\tdisplayDialog(url, dialogTitle, dialogMessage, dialogForm, buttonContinue, buttonCancel, 80, 400);\n\t\t\t\t});\n\n\t\t\t\t$('.pireadme').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle   = '<?php print __esc('Plugin Reame File');?>';\n\t\t\t\t\tvar url           = $(this).attr('href');\n\n\t\t\t\t\tdisplayFileDialog(url, dialogTitle, 400, 700);\n\t\t\t\t});\n\n\t\t\t\t$('.pichangelog').off('click').on('click', function(event) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tvar dialogTitle = '<?php print __esc('Plugin ChangeLog File');?>';\n\t\t\t\t\tvar url         = $(this).attr('href');\n\n\t\t\t\t\tdisplayFileDialog(url, dialogTitle, 400, 700);\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\tswitch(get_request_var('state')) {\n\t\t\tcase 8:\n\t\t\t\t$sql_where = 'WHERE (\n\t\t\t\t\tpi.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.author LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.plugin LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.webpage LIKE '     . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.author LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.plugin LIKE '      . db_qstr('%' . get_request_var('filter') . '%') .\n\t\t\t\t')';\n\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$sql_where = 'WHERE (\n\t\t\t\t\tpi.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.author LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.plugin LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.webpage LIKE '     . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpa.author LIKE '      . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.plugin LIKE '      . db_qstr('%' . get_request_var('filter') . '%') .\n\t\t\t\t')';\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$sql_where = 'WHERE (\n\t\t\t\t\tpi.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.author LIKE '  . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.webpage LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ' OR\n\t\t\t\t\tpi.plugin LIKE '  . db_qstr('%' . get_request_var('filter') . '%') .\n\t\t\t\t')';\n\t\t}\n\t}\n\n\tif (!isset_request_var('state')) {\n\t\tset_request_var('status', -99);\n\t}\n\n\tswitch (get_request_var('state')) {\n\t\tcase 6:\n\t\t\t/* show all matching plugins */\n\t\t\tif (read_config_option('github_allow_unsafe') == '') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pa.tag_name != \"develop\"';\n\t\t\t} else {\n\t\t\t\tif (get_request_var('type') == '1') {\n\t\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pa.tag_name != \"develop\"';\n\t\t\t\t} elseif (get_request_var('type') == '2') {\n\t\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pa.tag_name = \"develop\"';\n\t\t\t\t} elseif (get_request_var('type') == '3') {\n\t\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . '(pi.last_updated != \"0000-00-00\" AND  pi.last_updated < pa.published_at)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pi.status IN(0,1,2,4,7) OR pi.status IS NULL';\n\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pi.status IN(1,4)';\n\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pi.status NOT IN(1,4) OR pi.status IS NULL';\n\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pi.status = 7';\n\n\t\t\tbreak;\n\t\tcase -99:\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' pi.status = ' . get_request_var('state');\n\n\t\t\tbreak;\n\t}\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tswitch(get_request_var('state')) {\n\t\tcase 8:\n\t\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\t\t\tFROM plugin_archive AS pa\n\t\t\t\tLEFT JOIN $table AS pi\n\t\t\t\tON pa.plugin = pi.plugin\n\t\t\t\t$sql_where\");\n\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\t\t\tFROM plugin_available AS pa\n\t\t\t\tLEFT JOIN $table AS pi\n\t\t\t\tON pa.plugin = pi.plugin\n\t\t\t\t$sql_where\");\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\t\t\tFROM $table AS pi\n\t\t\t\t$sql_where\");\n\n\t\t\tbreak;\n\t}\n\n\t/* set order and limits */\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$sql_order = str_replace('`pa`.`version` ', 'INET_ATON(`pa`.`version`) ', $sql_order);\n\t$sql_order = str_replace('`pi`.`version` ', 'INET_ATON(`pi`.`version`) ', $sql_order);\n\t$sql_order = str_replace('id DESC', 'id ASC', $sql_order);\n\n\tif (get_request_var('state') == 8) {\n\t\t$sql_order = str_replace('`pi`.`plugin` ', '`pa`.`plugin` ', $sql_order);\n\t\t$sql_order = str_replace('pi.plugin ', 'pa.plugin ', $sql_order);\n\t\t$sql_order = str_replace('`pi`.last_updated ', '`pa`.`last_updated` ', $sql_order);\n\t} elseif (get_request_var('state') == 6) {\n\t\t$sql_order = str_replace('`pi`.`plugin` ', '`pa`.`plugin` ', $sql_order);\n\t\t$sql_order = str_replace('pi.plugin ', 'pa.plugin ', $sql_order);\n\t\t$sql_order = str_replace('`pi`.last_updated ', '`pa`.`last_updated` ', $sql_order);\n\t} else {\n\t\t$sql_order = str_replace('`pa`.`plugin` ', '`pi`.`plugin` ', $sql_order);\n\t\t$sql_order = str_replace('pa.plugin ', 'pi.plugin ', $sql_order);\n\t\t$sql_order = str_replace('`pa`.last_updated ', '`pi`.`last_updated` ', $sql_order);\n\t}\n\n\tswitch(get_request_var('state')) {\n\t\tcase 8:\n\t\t\t$sql = \"SELECT pa.id, pa.plugin, pa.description, pi.status, pi.remote_status,\n\t\t\t\tpa.author, pa.webpage, pi.version, pi.capabilities, pi.requires, pi.last_updated,\n\t\t\t\tpa.requires AS archive_requires, pa.compat AS archive_compat, pa.version AS archive_version,\n\t\t\t\tpa.user_id, pa.archive_note, pa.last_updated AS archive_date,\n\t\t\t\tpa.dir_md5sum, LENGTH(archive) AS archive_length\n\t\t\t\tFROM plugin_archive AS pa\n\t\t\t\tLEFT JOIN $table AS pi\n\t\t\t\tON pa.plugin = pi.plugin\n\t\t\t\t$sql_where\n\t\t\t\t$sql_order\n\t\t\t\t$sql_limit\";\n\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t$sql = \"SELECT pi.id, pi.plugin, pi.status, pi.remote_status,\n\t\t\t\tpi.author, pi.webpage, pi.version, pi.capabilities, pi.requires, pi.last_updated,\n\t\t\t\tpa.plugin, pa.description AS avail_description,\n\t\t\t\tpa.author AS avail_author, pa.webpage AS avail_webpage,\n\t\t\t\tpa.compat AS avail_compat, pa.published_at AS avail_published, pa.tag_name AS avail_tag_name,\n\t\t\t\tpa.requires AS avail_requires, LENGTH(pa.changelog) AS changelog, LENGTH(archive) AS archive_length\n\t\t\t\tFROM plugin_available AS pa\n\t\t\t\tLEFT JOIN $table AS pi\n\t\t\t\tON pa.plugin = pi.plugin\n\t\t\t\t$sql_where\n\t\t\t\t$sql_order\n\t\t\t\t$sql_limit\";\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$sql = \"SELECT *\n\t\t\t\tFROM $table AS pi\n\t\t\t\t$sql_where\n\t\t\t\t$sql_order\n\t\t\t\t$sql_limit\";\n\n\t\t\tbreak;\n\t}\n\n\t$plugins = db_fetch_assoc($sql);\n\n\t$nav = html_nav_bar('plugins.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Plugins'), 'page', 'main');\n\n\tform_start('plugins.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\tswitch(get_request_var('state')) {\n\t\tcase 8:\n\t\t\t$display_text = array(\n\t\t\t\t'nosort' => array(\n\t\t\t\t\t'display' => __('Actions'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => '',\n\t\t\t\t\t'tip'     => __('Actions available include \\'Restore\\', \\'Delete\\'.')\n\t\t\t\t),\n\t\t\t\t'pa.plugin' => array(\n\t\t\t\t\t'display' => __('Plugin Name'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The name for this Plugin.  The name is controlled by the directory it resides in.')\n\t\t\t\t),\n\t\t\t\t'pi.description' => array(\n\t\t\t\t\t'display' => __('Plugin Description'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('A description that the Plugins author has given to the Plugin.')\n\t\t\t\t),\n\t\t\t\t'nosort01'  => array(\n\t\t\t\t\t'display' => __('Archive Notes'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'tip'     => __('Hover over the Notes column to see the Archive notes.')\n\t\t\t\t),\n\t\t\t\t'pi.status' => array(\n\t\t\t\t\t'display' => $config['poller_id'] == 1 ? __('Status'):__('Main / Remote Status'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Status of this available Plugin.  Loadable means it is currently not installed and can be loaded.')\n\t\t\t\t),\n\t\t\t\t'pi.author' => array(\n\t\t\t\t\t'display' => __('Author'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The author of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'pa.compat' => array(\n\t\t\t\t\t'display' => __('Cacti'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Cacti version ranges required to use this Plugin.')\n\t\t\t\t),\n\t\t\t\t'nosort02' => array(\n\t\t\t\t\t'display' => __('Versions'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Installed version over the Archived version of the Plugin.')\n\t\t\t\t),\n\t\t\t\t'pa.archive_length' => array(\n\t\t\t\t\t'display' => __('Size'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The compressed size of this Plugin in bytes.')\n\t\t\t\t),\n\t\t\t\t'requires' => array(\n\t\t\t\t\t'display' => __('Requires'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('This Plugin requires the following Plugins be installed first.')\n\t\t\t\t),\n\t\t\t\t'pa.last_updated' => array(\n\t\t\t\t\t'display' => __('Archive Date'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'DESC',\n\t\t\t\t\t'tip'     => __('The date that this Plugin was Archived.')\n\t\t\t\t),\n\t\t\t\t'pi.last_updated' => array(\n\t\t\t\t\t'display' => __('Installed/Upgraded'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'DESC',\n\t\t\t\t\t'tip'     => __('The date that this Plugin was last Installed or Upgraded.')\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t$display_text = array(\n\t\t\t\t'nosort0' => array(\n\t\t\t\t\t'display' => __('Actions'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => '',\n\t\t\t\t\t'tip'     => __('Actions available include \\'Install\\', \\'Activate\\', \\'Disable\\', \\'Enable\\', \\'Uninstall\\'.')\n\t\t\t\t),\n\t\t\t\t'pi.plugin' => array(\n\t\t\t\t\t'display' => __('Plugin Name'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The name for this Plugin.  The name is controlled by the directory it resides in.')\n\t\t\t\t),\n\t\t\t\t'pi.description' => array(\n\t\t\t\t\t'display' => __('Plugin Description'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('A description that the Plugins author has given to the Plugin.')\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'display' => $config['poller_id'] == 1 ? __('Status'):__('Main / Remote Status'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The status of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'author' => array(\n\t\t\t\t\t'display' => __('Author'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The author of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'nosort1' => array(\n\t\t\t\t\t'display' => __('Cacti Releases'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Cacti Releases that are eligible to use this Plugin.  The format of the allowed versions follows common naming.')\n\t\t\t\t),\n\t\t\t\t'pi.version' => array(\n\t\t\t\t\t'display' => __('Installed Version'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The currently installed version of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'nosort2' => array(\n\t\t\t\t\t'display' => __('Version'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Available version for install for this Plugin.')\n\t\t\t\t),\n\t\t\t\t'pa.archive_length' => array(\n\t\t\t\t\t'display' => __('Size'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The compressed size of this Plugin in bytes.')\n\t\t\t\t),\n\t\t\t\t'nosort3' => array(\n\t\t\t\t\t'display' => __('Requires'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('This Plugin requires the following Plugins be installed first.')\n\t\t\t\t),\n\t\t\t\t'pa.published_at' => array(\n\t\t\t\t\t'display' => __('Last Published'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'DESC',\n\t\t\t\t\t'tip'     => __('The date the release was published or develop was last pushed.')\n\t\t\t\t),\n\t\t\t\t'pi.last_updated' => array(\n\t\t\t\t\t'display' => __('Installed/Upgraded'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'DESC',\n\t\t\t\t\t'tip'     => __('The date that this Plugin was last installed or upgraded.')\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$display_text = array(\n\t\t\t\t'nosort' => array(\n\t\t\t\t\t'display' => __('Actions'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => '',\n\t\t\t\t\t'tip'     => __('Actions available include \\'Install\\', \\'Activate\\', \\'Disable\\', \\'Enable\\', \\'Uninstall\\'.')\n\t\t\t\t),\n\t\t\t\t'pi.plugin' => array(\n\t\t\t\t\t'display' => __('Plugin Name'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The name for this Plugin.  The name is controlled by the directory it resides in.')\n\t\t\t\t),\n\t\t\t\t'pi.description' => array(\n\t\t\t\t\t'display' => __('Plugin Description'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('A description that the Plugins author has given to the Plugin.')\n\t\t\t\t),\n\t\t\t\t'pi.status' => array(\n\t\t\t\t\t'display' => $config['poller_id'] == 1 ? __('Status'):__('Main / Remote Status'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Status of this available Plugin.  Loadable means it is currently not installed and can be loaded.')\n\t\t\t\t),\n\t\t\t\t'pi.author' => array(\n\t\t\t\t\t'display' => __('Author'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The author of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'pa.compat' => array(\n\t\t\t\t\t'display' => __('Cacti'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The Cacti version ranges required to use this Plugin.')\n\t\t\t\t),\n\t\t\t\t'pi.requires' => array(\n\t\t\t\t\t'display' => __('Plugin Requires'),\n\t\t\t\t\t'align'   => 'left',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('This Plugin requires the following Plugins be installed first.')\n\t\t\t\t),\n\t\t\t\t'pi.version' => array(\n\t\t\t\t\t'display' => __('Version'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The version of this Plugin.')\n\t\t\t\t),\n\t\t\t\t'pi.last_updated' => array(\n\t\t\t\t\t'display' => __('Installed/Upgraded'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The date that this Plugin was last installed or upgraded.')\n\t\t\t\t),\n\t\t\t\t'pi.id' => array(\n\t\t\t\t\t'display' => __('Load Order'),\n\t\t\t\t\t'align'   => 'right',\n\t\t\t\t\t'sort'    => 'ASC',\n\t\t\t\t\t'tip'     => __('The load order of the Plugin.  You can change the load order by first sorting by it, then moving a Plugin either up or down.')\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tbreak;\n\t}\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($plugins)) {\n\t\t$j = 0;\n\n\t\tforeach ($plugins as $plugin) {\n\t\t\tif ((isset($plugins[$j + 1]) && $plugins[$j + 1]['status'] < 0) || (!isset($plugins[$j + 1]))) {\n\t\t\t\t$last_plugin = true;\n\t\t\t} else {\n\t\t\t\t$last_plugin = false;\n\t\t\t}\n\n\t\t\tif ($plugin['status'] <= 0 || (get_request_var('sort_column') != 'pi.id')) {\n\t\t\t\t$load_ordering = false;\n\t\t\t} else {\n\t\t\t\t$load_ordering = true;\n\t\t\t}\n\n\t\t\tprint \"<tr id='line{$plugin['id']}' class='tableRow selectable\" . ($plugin['status'] <= 0 ? ' nodrag':'') . \"'>\";\n\n\t\t\tswitch(get_request_var('state')) {\n\t\t\t\tcase 8:\n\t\t\t\t\tprint format_archive_plugin_row($plugin, $table);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tprint format_available_plugin_row($plugin, $table);\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tprint format_plugin_row($plugin, $last_plugin, $load_ordering, $table);\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\n\t\t\t$j++;\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . cacti_sizeof($display_text) . '\"><em>' . __('No Plugins Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($plugins)) {\n\t\tprint $nav;\n\t}\n\n\tform_end();\n\n\tdb_execute(\"DROP TABLE $table\");\n}\n\nfunction format_plugin_row($plugin, $last_plugin, $include_ordering, $table) {\n\tglobal $status_names, $config;\n\tstatic $first_plugin = true;\n\tstatic $row_id = 1;\n\n\t$row = plugin_actions($plugin, $table);\n\n\t$uname = strtoupper($plugin['plugin']);\n\tif ($uname == $plugin['plugin']) {\n\t\t$plugin_name = $uname;\n\t} else {\n\t\t$plugin_name = ucfirst($plugin['plugin']);\n\t}\n\n\t$row .= \"<td><a href='\" . html_escape($plugin['webpage']) . \"' target='_blank' rel='noopener'>\" . filter_value($plugin_name, get_request_var('filter')) . '</a></td>';\n\n\t$row .= \"<td class='nowrap'>\" . filter_value($plugin['description'], get_request_var('filter')) . '</td>';\n\n\tif ($plugin['status'] == '-1') {\n\t\t$status = plugin_is_compatible($plugin['plugin']);\n\t\t$row .= \"<td class='nowrap'>\" . __('Not Compatible, \\'%s\\'', $status['requires']);\n\t} elseif ($plugin['status'] < -1) {\n\t\t$row .= \"<td class='nowrap'>\" . __('Plugin Error');\n\t} else {\n\t\t$row .= \"<td class='nowrap'>\" . $status_names[$plugin['status']];\n\t}\n\n\tif ($plugin['last_updated'] != '0000-00-00 00:00:00') {\n\t\tif (read_config_option('github_allow_unsafe') == 'on') {\n\t\t\t$newer = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM plugin_available\n\t\t\t\tWHERE plugin = ?\n\t\t\t\tAND published_at > ?',\n\t\t\t\tarray($plugin['plugin'], $plugin['last_updated']));\n\t\t} else {\n\t\t\t$newer = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM plugin_available\n\t\t\t\tWHERE plugin = ?\n\t\t\t\tAND last_updated > ?\n\t\t\t\tAND tag_name != \"develop\"',\n\t\t\t\tarray($plugin['plugin'], $plugin['last_updated']));\n\t\t}\n\t} else {\n\t\t$newer = 0;\n\t}\n\n\tif ($newer > 0) {\n\t\t$row .= \", <a class='pic deviceUp' href='\" . html_escape('plugins.php?action=list&state=6&type=3&filter=' . $plugin['plugin']) . \"'>\" . __('New Version') . '</a>';\n\t}\n\n\tif ($config['poller_id'] > 1) {\n\t\tif (strpos($plugin['capabilities'], 'remote_collect:1') !== false || strpos($plugin['capabilities'], 'remote_poller:1') !== false) {\n\t\t\tif ($plugin['remote_status'] == '-1') {\n\t\t\t\t$status = plugin_is_compatible($plugin['plugin']);\n\t\t\t\t$row .= ' / ' . __('Not Compatible, \\'%s\\'', $status['requires']);\n\t\t\t} elseif ($plugin['remote_status'] < -1) {\n\t\t\t\t$row .= ' / ' . __('Plugin Error');\n\t\t\t} else {\n\t\t\t\t$row .= ' / ' . $status_names[$plugin['remote_status']];\n\t\t\t}\n\t\t} else {\n\t\t\t$row .= ' / ' . __('N/A');\n\t\t}\n\t}\n\n\t$row .= '</td>';\n\n\tif ($plugin['requires'] != '') {\n\t\t$requires = explode(' ', $plugin['requires']);\n\n\t\tforeach ($requires as $r) {\n\t\t\t$nr[] = ucfirst($r);\n\t\t}\n\n\t\t$requires = implode(', ', $nr);\n\t} else {\n\t\t$requires = $plugin['requires'];\n\t}\n\n\tif ($plugin['last_updated'] == '0000-00-00 00:00:00') {\n\t\t$last_updated = __('N/A');\n\t} elseif (isset($plugin['last_updated'])) {\n\t\t$last_updated = substr($plugin['last_updated'], 0, 16);\n\t} else {\n\t\t$last_updated = __('N/A');\n\t}\n\n\t$plugin['compat'] = plugin_display_compat($plugin['compat']);\n\n\t$row .= \"<td class='prewrap'>\" . filter_value($plugin['author'], get_request_var('filter')) . '</td>';\n\t$row .= \"<td class='left'>\"    . html_escape($plugin['compat'])  . '</td>';\n\t$row .= \"<td class='nowrap'>\"  . html_escape($requires)          . '</td>';\n\t$row .= \"<td class='right'>\"   . html_escape($plugin['version']) . '</td>';\n\t$row .= \"<td class='right'>\"   . $last_updated                   . '</td>';\n\n\tif ($include_ordering) {\n\t\t$row .= \"<td class='nowrap right'>\";\n\n\t\tif (!$first_plugin) {\n\t\t\t$row .= \"<a class='pic ti ti-caret-up-filled moveArrow' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=moveup&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Order Before Previous Plugin') . \"'></a>\";\n\t\t} else {\n\t\t\t$row .= '<span class=\"moveArrowNone\"></span>';\n\t\t}\n\n\t\tif (!$last_plugin) {\n\t\t\t$row .= \"<a class='pic ti ti-caret-down-filled moveArrow' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=movedown&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Order After Next Plugin') . \"'></a>\";\n\t\t} else {\n\t\t\t$row .= '<span class=\"moveArrowNone\"></span>';\n\t\t}\n\t\t$row .= '</td>';\n\t} else {\n\t\t$row .= \"<td></td>\";\n\t}\n\n\tif ($include_ordering) {\n\t\t$first_plugin = false;\n\t}\n\n\t$row_id++;\n\n\treturn $row;\n}\n\nfunction plugin_check_available_status($plugin) {\n\tif (cacti_version_compare(CACTI_VERSION, $plugin['avail_compat'], '<')) {\n\t\t$row .= \"<td class='nowrap'>\" . __('Cacti Upgrade Required') . '</td>';;\n\t} else {\n\t\t$row .= \"<td class='nowrap'>\" . __('Compatible') . '</td>';\n\t}\n}\n\nfunction format_available_plugin_row($plugin, $table) {\n\tglobal $status_names, $config;\n\n\t/* action icons */\n\t$row  = \"<td class='nowrap' style='width:1%'>\";\n\n\t/* remove leading 'v' off tag names for compares */\n\t$avail_version = ltrim($plugin['avail_tag_name'], 'v');\n\n\tif (plugin_valid_version_range($plugin['avail_compat'])) {\n\t\tif (plugin_valid_dependencies($plugin['avail_requires'])) {\n\t\t\tif ($plugin['version'] == '') {\n\t\t\t\tif ($avail_version != 'develop') {\n\t\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Load this Plugin from available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceUp'></i></a>\";\n\t\t\t\t} else {\n\t\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Load this Plugin from the available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceDown'></i></a>\";\n\t\t\t\t}\n\n\t\t\t\t$status = __('Compatible, Loadable');\n\t\t\t} elseif ($avail_version == 'develop') {\n\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Upgrade this Plugin from the available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceDown'></i></a>\";\n\t\t\t\t$status = __('Compatible, Upgrade');\n\t\t\t} elseif (cacti_version_compare($avail_version, $plugin['version'], '<')) {\n\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Downgrade this Plugin from the available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceRecovering'></i></a>\";\n\t\t\t\t$status = __('Compatible, Downgrade');\n\t\t\t} elseif (cacti_version_compare($avail_version, $plugin['version'], '=')) {\n\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Replace Plugin from the available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceUp'></i></a>\";\n\t\t\t\t$status = __('Compatible, Same Version');\n\t\t\t} else {\n\t\t\t\t$row .= \"<a class='piload' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=load&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('Upgrade Plugin from the available Cacti Plugins') . \"' class='linkEditMain'><i class='ti ti-download deviceUp'></i></a>\";\n\t\t\t\t$status = __('Compatible, Upgrade');\n\t\t\t}\n\t\t} else {\n\t\t\t$row .= \"<a class='piload' href='#' title='\" . __esc('Unable to Restore the Archive due to Plugin Dependencies not being met.') . \"' class='linkEditMain'><i class='ti ti-download deviceDisabled'></i></a>\";\n\t\t\t$status = __('Not Compatible, Dependencies');\n\t\t}\n\t} else {\n\t\t$row .= \"<a class='piload' href='#' title='\" . __esc('Unable to Load due to a bad Cacti version.') . \"' class='linkEditMain'><i class='ti ti-download deviceDisabled'></i></a>\";\n\t\t$status = __('Not Compatible, Cacti Version');\n\t}\n\n\t$row .= \"<a class='pireadme' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=readme&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('View the Plugins Readme File') . \"' class='linkEditMain'><i class='ti ti-file deviceDisabled'></i></a>\";\n\n\t/* no link to the changelog unless it exists */\n\tif ($plugin['changelog'] > 0) {\n\t\t$row .= \"<a class='pichangelog' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=changelog&plugin=' . $plugin['plugin'] . '&tag=' . $plugin['avail_tag_name']) . \"' title='\" . __esc('View the Plugins ChangeLog') . \"' class='linkEditMain'><i class='ti ti-file deviceRecovering'></i></a>\";\n\t}\n\n\t$row .= '</td>';\n\n\t$uname = strtoupper($plugin['plugin']);\n\tif ($uname == $plugin['plugin']) {\n\t\t$plugin_name = $uname;\n\t} else {\n\t\t$plugin_name = ucfirst($plugin['plugin']);\n\t}\n\n\t$row .= \"<td><a href='\" . html_escape($plugin['webpage']) . \"' target='_blank' rel='noopener'>\" . filter_value($plugin_name, get_request_var('filter')) . '</a></td>';\n\n\t$row .= \"<td class='nowrap'>\" . filter_value($plugin['avail_description'], get_request_var('filter')) . '</td>';\n\n\t$row .= \"<td class='nowrap'>\" . $status . '</td>';\n\n\tif ($plugin['avail_requires'] != '') {\n\t\t$requires = explode(' ', $plugin['avail_requires']);\n\n\t\tforeach ($requires as $r) {\n\t\t\t$nr[] = ucfirst($r);\n\t\t}\n\n\t\t$requires = implode(', ', $nr);\n\t} else {\n\t\t$requires = $plugin['avail_requires'];\n\t}\n\n\t$plugin['avail_compat'] = plugin_display_compat($plugin['avail_compat']);\n\n\t$row .= \"<td class='prewrap'>\" . filter_value($plugin['avail_author'], get_request_var('filter'))    . '</td>';\n\t$row .= \"<td class='nowrap'>\"  . html_escape($plugin['avail_compat'])    . '</td>';\n\n\tif ($plugin['version'] == '') {\n\t\t$row .= \"<td class='right'>\" . __esc('Not Loaded')             . '</td>';\n\t} else {\n\t\t$row .= \"<td class='right'>\" . html_escape($plugin['version']) . '</td>';\n\t}\n\n\tif ($plugin['last_updated'] == '0000-00-00 00:00:00' || $plugin['last_updated'] == '') {\n\t\t$last_updated = __('N/A');\n\t} else {\n\t\t$last_updated = substr($plugin['last_updated'], 0, 16);\n\t}\n\n\tif ($plugin['avail_tag_name'] !== 'develop') {\n\t\t$tag_version = str_replace('v', '', $plugin['avail_tag_name']);\n\t} else {\n\t\t$tag_version = $plugin['avail_tag_name'];\n\t}\n\n\t$row .= \"<td class='right'>\" . html_escape($tag_version) . '</td>';\n\n\t$size   = $plugin['archive_length'];\n\t$suffix = '';\n\n\tif ($size > 1024) {\n\t\t$suffix = ' KB';\n\t\t$size /= 1024;\n\t}\n\n\tif ($size > 1024) {\n\t\t$suffix = ' MB';\n\t\t$size /= 1024;\n\t}\n\n\t$row .= \"<td class='right'>\"  . number_format_i18n($size, 1) . $suffix   . '</td>';\n\n\t$row .= \"<td class='right'>\" . html_escape($requires)                    . '</td>';\n\n\t$row .= \"<td class='right'>\" . substr($plugin['avail_published'], 0, 16) . '</td>';\n\n\t$row .= \"<td class='right'>\" . $last_updated . '</td>';\n\n\treturn $row;\n}\n\nfunction format_archive_plugin_row($plugin, $table) {\n\tglobal $status_names, $config;\n\tstatic $first_plugin = true;\n\n\t/* action icons */\n\t$row  = \"<td class='nowrap' style='width:1%'>\";\n\n\tif (plugin_valid_version_range($plugin['archive_compat'])) {\n\t\tif (plugin_valid_dependencies($plugin['archive_requires'])) {\n\t\t\tif ($plugin['version'] == '') {\n\t\t\t\t$row .= \"<a class='pirestore' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=restore&plugin=' . $plugin['plugin'] . '&id=' . $plugin['id']) . \"' title='\" . __esc('Load this Plugin from the archive') . \"' class='linkEditMain'><i class='ti ti-download deviceRecovering'></i></a>\";\n\t\t\t\t$status = __('Compatible, Loadable');\n\t\t\t} elseif (cacti_version_compare($plugin['archive_version'], $plugin['version'], '<')) {\n\t\t\t\t$row .= \"<a class='pirestore' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=restore&plugin=' . $plugin['plugin'] . '&id=' . $plugin['id']) . \"' title='\" . __esc('Downgrade this Plugin from the archive') . \"' class='linkEditMain'><i class='ti ti-download deviceRecovering'></i></a>\";\n\t\t\t\t$status = __('Compatible, Downgrade');\n\t\t\t} elseif (cacti_version_compare($plugin['archive_version'], $plugin['version'], '=')) {\n\t\t\t\t$row .= \"<a class='pirestore' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=restore&plugin=' . $plugin['plugin'] . '&id=' . $plugin['id']) . \"' title='\" . __esc('Restore Plugin from the archive') . \"' class='linkEditMain'><i class='ti ti-download deviceUp'></i></a>\";\n\t\t\t\t$status = __('Compatible, Same Version');\n\t\t\t} else {\n\t\t\t\t$row .= \"<a class='pirestore' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=restore&plugin=' . $plugin['plugin'] . '&id=' . $plugin['id']) . \"' title='\" . __esc('Upgrade Plugin from the archive') . \"' class='linkEditMain'><i class='ti ti-download deviceUp'></i></a>\";\n\t\t\t\t$status = __('Compatible, Upgradable');\n\t\t\t}\n\t\t} else {\n\t\t\t$row .= \"<a class='piload' href='#' title='\" . __esc('Unable to Restore the archive due to Plugin Dependencies not being met.') . \"' class='linkEditMain'><i class='ti ti-download deviceDisabled'></i></a>\";\n\t\t\t$status = __('Not Compatible, Dependencies');\n\t\t}\n\t} else {\n\t\t$row .= \"<a class='piload' href='#' title='\" . __esc('Unable to Restore the archive due to a bad Cacti version.') . \"' class='linkEditMain'><i class='ti ti-download deviceDisabled'></i></a>\";\n\t\t$status = __('Not Compatible, Cacti Version');\n\t}\n\n\t$row .= \"<a class='pirmarchive' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=delete&plugin=' . $plugin['plugin'] . '&id=' . $plugin['id']) . \"' title='\" . __esc('Delete this Plugin archive') . \"' class='linkEditMain'><i class='ti ti-trash deviceRecovering'></i></a>\";\n\t$row .= '</td>';\n\n\t$uname = strtoupper($plugin['plugin']);\n\tif ($uname == $plugin['plugin']) {\n\t\t$plugin_name = $uname;\n\t} else {\n\t\t$plugin_name = ucfirst($plugin['plugin']);\n\t}\n\n\t$row .= \"<td><a href='\" . html_escape($plugin['webpage']) . \"' target='_blank' rel='noopener'>\" . filter_value($plugin_name, get_request_var('filter')) . '</a></td>';\n\n\t$row .= \"<td class='nowrap'>\" . filter_value($plugin['description'], get_request_var('filter')) . '</td>';\n\n\tif ($plugin['archive_note'] != '') {\n\t\t$row .= \"<td class='nowrap' title='\" . html_escape($plugin['archive_note']) . \"'>\" . __esc('Notes') . '</td>';\n\t} else {\n\t\t$row .= \"<td class='nowrap'>-</td>\";\n\t}\n\n\t$row .= \"<td class='nowrap'>\" . $status . '</td>';\n\n\tif ($plugin['archive_requires'] != '') {\n\t\t$requires = explode(' ', $plugin['archive_requires']);\n\n\t\tforeach ($requires as $r) {\n\t\t\t$nr[] = ucfirst($r);\n\t\t}\n\n\t\t$requires = implode(', ', $nr);\n\t} else {\n\t\t$requires = $plugin['archive_requires'];\n\t}\n\n\t$plugin['archive_compat'] = plugin_display_compat($plugin['archive_compat']);\n\n\t$row .= \"<td class='prewrap'>\" . filter_value($plugin['author'], get_request_var('filter')) . '</td>';\n\n\t$row .= \"<td class='left'>\"   . html_escape($plugin['archive_compat']) . '</td>';\n\n\tif ($plugin['version'] == '') {\n\t\t$row .= \"<td class='right'>\" . __esc('Not Installed') .\n\t\t\t' / ' . html_escape($plugin['archive_version'])           . '</td>';\n\t} else {\n\t\t$row .= \"<td class='right'>\" . html_escape($plugin['version']) .\n\t\t\t' / ' . html_escape($plugin['archive_version'])           . '</td>';\n\t}\n\n\t$size   = $plugin['archive_length'];\n\t$suffix = '';\n\n\tif ($size > 1024) {\n\t\t$suffix = ' KB';\n\t\t$size /= 1024;\n\t}\n\n\tif ($size > 1024) {\n\t\t$suffix = ' MB';\n\t\t$size /= 1024;\n\t}\n\n\t$row .= \"<td class='right'>\"  . number_format_i18n($size, 1) . $suffix  . '</td>';\n\n\t$row .= \"<td class='right'>\" . html_escape($plugin['archive_requires']) . '</td>';\n\n\tif ($plugin['last_updated'] == '0000-00-00 00:00:00') {\n\t\t$last_updated = __('N/A');\n\t} elseif (!empty($plugin['last_updated'])) {\n\t\t$last_updated = substr($plugin['last_updated'], 0, 16);\n\t} else {\n\t\t$last_updated = __('N/A');\n\t}\n\n\t$archive_date = substr($plugin['archive_date'], 0, 16);\n\n\t$row .= \"<td class='right'>\" . $archive_date . '</td>';\n\n\t$row .= \"<td class='right'>\" . $last_updated . '</td>';\n\n\treturn $row;\n}\n\nfunction plugin_required_for_others($plugin, $table) {\n\t$required_for_others = db_fetch_cell(\"SELECT GROUP_CONCAT(plugin)\n\t\tFROM $table\n\t\tWHERE requires LIKE '%\" . $plugin['plugin'] . \"%'\n\t\tAND status IN (1,4,7)\");\n\n\tif ($required_for_others) {\n\t\t$parts = explode(',', $required_for_others);\n\n\t\tforeach ($parts as $p) {\n\t\t\t$np[] = ucfirst($p);\n\t\t}\n\n\t\treturn implode(', ', $np);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction plugin_required_installed($plugin, $table) {\n\t$not_installed = '';\n\n\tapi_plugin_can_install($plugin['plugin'], $not_installed);\n\n\treturn $not_installed;\n}\n\nfunction plugin_display_compat($compat) {\n\t$compat = explode(' ', $compat);\n\n\tforeach($compat as $index => $c) {\n\t\tif (strpos($c, '>=') !== false) {\n\t\t\t$compat[$index] = str_replace('>=', '>= ', $c);\n\t\t} elseif (strpos($c, '>=') !== false) {\n\t\t\t$compat[$index] = str_replace('>=', '>= ', $c);\n\t\t} elseif (strpos($c, '>') !== false) {\n\t\t\t$compat[$index] = str_replace('>', '> ', $c);\n\t\t} elseif (strpos($c, '<') !== false) {\n\t\t\t$compat[$index] = str_replace('<', '< ', $c);\n\t\t} else {\n\t\t\t$compat[$index] = '>= ' . $c;\n\t\t}\n\t}\n\n\treturn implode(' ', $compat);\n}\n\nfunction plugin_get_install_links($plugin, $table) {\n\t$path = CACTI_PATH_PLUGINS . '/' . $plugin['plugin'];\n\n\t$link = '';\n\n\tif ($plugin['status'] == 0) {\n\t\tif (!file_exists(\"$path/setup.php\")) {\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin directory \\'%s\\' is missing setup.php', $plugin['plugin']) . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t} elseif (!file_exists(\"$path/INFO\")) {\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin is lacking an INFO file') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t} else {\n\t\t\t$not_installed = plugin_required_installed($plugin, $table);\n\n\t\t\tif ($not_installed != '') {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Unable to Install Plugin!  %s', $not_installed) . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceDisabled'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=install&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Install Plugin') . \"' class='piinstall linkEditMain'><i class='ti ti-settings-filled deviceUp'></i></a>\";\n\t\t\t}\n\n\t\t\t$link .= \"<a href='#' class='pidisable'><i class='ti ti-settings-filled' style='color:transparent'></i></a>\";\n\n\t\t}\n\n\t\t$link .= \"<a href='#' title='\" . __esc('Plugin \\'%s\\' can not be archived before it\\'s been Installed.', $plugin['plugin']) . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceDisabled'></i></a>\";\n\n\t\t$setup_file = CACTI_PATH_BASE . '/plugins/' . $plugin['plugin'] . '/setup.php';\n\n\t\tif (file_exists($setup_file)) {\n\t\t\trequire_once($setup_file);\n\n\t\t\t$has_data_function = \"plugin_{$plugin['plugin']}_has_data\";\n\t\t\t$rm_data_function  = \"plugin_{$plugin['plugin']}_remove_data\";\n\n\t\t\tif (function_exists($has_data_function) && function_exists($rm_data_function) && $has_data_function()) {\n\t\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=remove_data&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Remove Plugin Data Tables and Settings') . \"' class='pirmdata'><i class='ti ti-trash deviceDown'></i></a>\";\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $link;\n}\n\nfunction plugin_actions($plugin, $table) {\n\tglobal $config, $pluginslist, $plugins_integrated;\n\n\t$link = '<td style=\"width:1%\" class=\"nowrap\">';\n\n\t$archived = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM plugin_archive\n\t\tWHERE plugin = ?\n\t\tAND dir_md5sum = ?',\n\t\tarray($plugin['plugin'], $plugin['dir_md5sum']));\n\n\tswitch ($plugin['status']) {\n\t\tcase '0': // Not Installed\n\t\t\t$link .= plugin_get_install_links($plugin, $table);\n\n\t\t\tbreak;\n\t\tcase '1':\t// Currently Active\n\t\t\t$required = plugin_required_for_others($plugin, $table);\n\n\t\t\tif ($required != '') {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Unable to Uninstall.  This Plugin is required by: \\'%s\\'', ucfirst($required)) . \"'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a class='piuninstall' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=uninstall&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Uninstall Plugin') . \"'><i class='ti ti-settings-filled deviceDown'></i></a>\";\n\t\t\t}\n\n\t\t\t$link .= \"<a class='pidisable' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=disable&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Disable Plugin') . \"'><i class='ti ti-circle-filled deviceRecovering'></i></a>\";\n\n\t\t\tif ($archived) {\n\t\t\t\t$link .= \"<a href='#' title='\" . __esc('Plugin already archived and is Unchanged in the archive.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceDisabled'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=archive&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('archive the Plugin in its current state.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceUnknown'></i></a>\";\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '2': // Configuration issues\n\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=check&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Check Plugins Configuration') . \"' class='piinstall linkEditMain'><i class='ti ti-settings-filled deviceRecovering'></i></a>\";\n\n\t\t\t$link .= \"<a href='#' class='pidisable'><i class='ti ti-settings-filled' style='color:transparent'></i></a>\";\n\n\t\t\t$link .= \"<a href='#' title='\" . __esc('A Plugin can not be archived when it has Configuration Issues.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceDisabled'></i></a>\";\n\n\t\t\tbreak;\n\t\tcase '4':\t// Installed but not active\n\t\t\t$required = plugin_required_for_others($plugin, $table);\n\n\t\t\tif ($required != '') {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Unable to Uninstall.  This Plugin is required by: \\'%s\\'', ucfirst($required)) . \"'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a class='piuninstall' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=uninstall&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Uninstall Plugin') . \"'><i class='ti ti-settings-filled deviceDown'></i></a>\";\n\t\t\t}\n\n\t\t\t$link .= \"<a class='pienable' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=enable&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Enable Plugin') . \"'><i class='ti ti-circle-filled deviceUp'></i></a>\";\n\n\t\t\tif ($archived) {\n\t\t\t\t$link .= \"<a href='#' title='\" . __esc('Plugin already archived and Unchanged in the archive.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceDisabled'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=archive&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Archive the Plugin in its current state.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceUnknown'></i></a>\";\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '7':\t// Installed but errored\n\t\t\t$required = plugin_required_for_others($plugin, $table);\n\n\t\t\tif ($required != '') {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Unable to Uninstall.  This Plugin is required by: \\'%s\\'', ucfirst($required)) . \"'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a class='piuninstall' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=uninstall&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Uninstall Plugin') . \"'><i class='ti ti-settings-filled deviceDown'></i></a>\";\n\t\t\t}\n\n\t\t\t$link .= \"<a class='pienable' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=enable&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Plugin was Disabled due to a Plugin Error.  Click to Re-enable the Plugin.  Search for \\'DISABLING\\' in the Cacti log to find the reason.') . \"'><i class='ti ti-circle-filled deviceDown'></i></a>\";\n\n\t\t\tif ($archived) {\n\t\t\t\t$link .= \"<a href='#' title='\" . __esc('Plugin already archived and Unchanged in the archive.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceDisabled'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=archive&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Archive the Plugin in its current state.') . \"' class='piarchive linkEditMain'><i class='ti ti-package-export deviceUnknown'></i></a>\";\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase '-5': // Plugin directory missing\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin directory is missing!') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\n\t\t\tbreak;\n\t\tcase '-4': // Plugins should have INFO file since 1.0.0\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin is not compatible (Pre-1.x)') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\n\t\t\tbreak;\n\t\tcase '-3': // Plugins can have spaces in their names\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin directories can not include spaces') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\n\t\t\tbreak;\n\t\tcase '-2': // Naming issues\n\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin directory is not correct.  Should be \\'%s\\' but is \\'%s\\'', strtolower($plugin['plugin']), $plugin['plugin']) . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\n\t\t\tbreak;\n\t\tdefault: // Old PIA\n\t\t\t$path = CACTI_PATH_PLUGINS . '/' . $plugin['plugin'];\n\n\t\t\tif (!file_exists(\"$path/setup.php\")) {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin directory \\'%s\\' is missing setup.php', $plugin['plugin']) . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} elseif (!file_exists(\"$path/INFO\")) {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin is lacking an INFO file') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} elseif (in_array($plugin['plugin'], $plugins_integrated, true)) {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin is integrated into Cacti core') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t} else {\n\t\t\t\t$link .= \"<a class='pierror' href='#' title='\" . __esc('Plugin is not compatible') . \"' class='linkEditMain'><i class='ti ti-settings-filled deviceUnknown'></i></a>\";\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\tif ($config['poller_id'] > 1) {\n\t\tif (strpos($plugin['capabilities'], 'remote_collect:1') !== false || strpos($plugin['capabilities'], 'remote_poller:1') !== false) {\n\t\t\tif ($plugin['remote_status'] == 1) { // Installed and Active\n\t\t\t\t// ToDo: Disabling here does not make much sense as the main will be replicated\n\t\t\t\t// with any change of any other plugin thus undoing.  Fix that moving forward\n\t\t\t\t//$link .= \"<a class='pidisable' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=remote_disable&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Disable Plugin Locally') . \"'><i class='ti ti-settings-filled deviceDown'></i></a>\";\n\t\t\t} elseif ($plugin['remote_status'] == 4) { // Installed but inactive\n\t\t\t\tif ($plugin['status'] == 1) {\n\t\t\t\t\t$link .= \"<a class='pienable' href='\" . html_escape(CACTI_PATH_URL . 'plugins.php?action=remote_enable&plugin=' . $plugin['plugin']) . \"' title='\" . __esc('Enable Plugin Locally') . \"'><i class='ti ti-circle-filled deviceUp'></i></a>\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$link .= '</td>';\n\n\treturn $link;\n}\n\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "poller.php",
          "type": "blob",
          "size": 44.984375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/dsstats.php');\nrequire_once(CACTI_PATH_LIBRARY . '/dsdebug.php');\nrequire_once(CACTI_PATH_LIBRARY . '/boost.php');\nrequire_once(CACTI_PATH_LIBRARY . '/reports.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrdcheck.php');\n\nglobal $poller_db_cnn_id, $remote_db_cnn_id, $logged;\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\nfunction sig_handler($signo) {\n\tglobal $poller_db_cnn_id;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: Cacti Master Poller process terminated by user', true, 'POLLER', POLLER_VERBOSITY_LOW);\n\n\t\t\t$running_processes = db_fetch_assoc('SELECT ' . SQL_NO_CACHE . ' *\n\t\t\t\tFROM poller_time\n\t\t\t\tWHERE end_time=\\'0000-00-00 00:00:00\\'', true, $poller_db_cnn_id);\n\n\t\t\tif (cacti_sizeof($running_processes)) {\n\t\t\t\tforeach ($running_processes as $process) {\n\t\t\t\t\tif (function_exists('posix_kill')) {\n\t\t\t\t\t\tcacti_log(\"WARNING: Termination poller process with pid '\" . $process['pid'] . \"'\", true, 'POLLER', POLLER_VERBOSITY_LOW);\n\t\t\t\t\t\tposix_kill($process['pid'], SIGTERM);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdb_execute('TRUNCATE TABLE poller_time', true, $poller_db_cnn_id);\n\n\t\t\texit;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t// ignore all other signals\n\t}\n}\n\n// initialize some variables\n$force     = false;\n$debug     = false;\n$mibs      = false;\n$logged    = false;\n\n// set the poller_id\n$poller_id = $config['poller_id'];\n$hostname  = php_uname('n');\n\n// requires for remote poller stage out\nchdir(__DIR__);\n\n// process calling arguments\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-p':\n\t\t\tcase '--poller':\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit;\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\tcase '--help':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\n\t\t\tdefault:\n\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n// catch upgrade case\nif (!db_column_exists('poller', 'dbhost')) {\n\tcacti_log('Poller is upgrading from pre Cacti 1.0, exiting till upgraded.', false, 'POLLER');\n\n\texit(0);\n}\n\n$phostname = db_fetch_cell_prepared('SELECT hostname\n\tFROM poller\n\tWHERE id = ?',\n\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n// update the pollers hostname if it is blank, otherwise allow the user to edit it\nif ($phostname == '' || $phostname == 'localhost' || $phostname == '127.0.0.1') {\n\tdb_execute_prepared('UPDATE poller\n\t\tSET hostname = ?\n\t\tWHERE id = ?',\n\t\tarray($hostname, $poller_id), true, $poller_db_cnn_id);\n}\n\n$dbhostname = db_fetch_cell_prepared('SELECT dbhost\n\tFROM poller\n\tWHERE id = ?',\n\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n// update the database hostname based upon the entry\nif ($dbhostname == '' || $dbhostname == 'localhost' || $dbhostname == '127.0.0.1') {\n\tif ($database_hostname != 'localhost' && $database_hostname != '127.0.0.1') {\n\t\t$hostname = $database_hostname;\n\t}\n\n\tdb_execute_prepared('UPDATE poller\n\t\tSET dbhost = ?\n\t\tWHERE id = ?',\n\t\tarray($hostname, $poller_id), true, $poller_db_cnn_id);\n}\n\n// if you have more than one poller, boost must be enabled\n$total_pollers = db_fetch_cell('SELECT COUNT(*) FROM poller');\n\nif ($total_pollers > 1) {\n\tset_config_option('boost_rrd_update_system_enable', 'on');\n\tset_config_option('boost_redirect', 'on');\n}\n\n// check to see if the poller is disabled\npoller_enabled_check($poller_id);\n\n// install signal handlers for UNIX only\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n// record the start time\n$poller_start    = microtime(true);\n$overhead_time   = 0;\n$current_time    = time();\n\npoller_table_maintenance();\n\napi_plugin_hook('poller_top');\n\n// prime the poller_resource_cache for multiple pollers\nif ($config['connection'] == 'online') {\n\tupdate_resource_cache($poller_id);\n}\n\n// get number of polling items from the database\n$poller_interval = read_config_option('poller_interval');\n\n// retrieve the last time the poller ran\n$poller_lastrun  = read_config_option('poller_lastrun_' . $poller_id);\n\n// is boost enabled\n$boost_enabled   = read_config_option('boost_rrd_update_enable') == 'on' ? true:false;\n\n// collect the system mibs every 4 hours\nif ($poller_lastrun % 14440 < $current_time % 14440 || empty($poller_lastrun)) {\n\t$mibs = true;\n}\n\n// get the poller data\n$poller = db_fetch_row_prepared('SELECT *\n\tFROM poller\n\tWHERE id = ?',\n\tarray($poller_id), true, $poller_db_cnn_id);\n\n// get the current cron interval from the database\n$cron_interval = read_config_option('cron_interval');\n\nif ($cron_interval != 60) {\n\t$cron_interval = 300;\n}\n\n// get max step.  If it's not equal to the poller\n// interval, we have to force active profiles\n// greater than 1.\n$max_step = db_fetch_cell('SELECT MAX(dsp.step)\n\tFROM data_source_profiles AS dsp\n\tINNER JOIN data_template_data AS dtd\n\tON dtd.data_source_profile_id = dsp.id');\n\n// see if the user wishes to use process leveling\n$process_leveling = read_config_option('process_leveling');\n\n// retrieve the number of concurrent process settings\nif (cacti_sizeof($poller)) {\n\t$concurrent_processes = $poller['processes'];\n} else {\n\t$concurrent_processes = read_config_option('concurrent_processes');\n}\n\nif (!isset($concurrent_processes) || intval($concurrent_processes) < 1) {\n\t$concurrent_processes = 1;\n}\n\n// correct for possible poller output not empty occurrences\n$ds_needing_fixes = db_fetch_assoc_prepared('SELECT local_data_id,\n\tMIN(rrd_next_step) AS next_step,\n\tCOUNT(DISTINCT rrd_next_step) AS instances\n\tFROM poller_item\n\tWHERE poller_id = ?\n\tAND rrd_num > 1\n\tGROUP BY local_data_id\n\tHAVING instances > 1',\n\tarray($poller_id));\n\nif (cacti_sizeof($ds_needing_fixes)) {\n\tforeach ($ds_needing_fixes as $ds) {\n\t\tdb_execute_prepared('UPDATE poller_item\n\t\t\tSET rrd_next_step = ?\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray($ds['next_step'], $ds['local_data_id']));\n\t}\n}\n\n/**\n * shortcut some expensive logic in spine if possible the\n * order by snmp port is a rare thing to be needed and only\n * needs to occur if your are talking to more than one snmp\n * agent on a host.\n */\n$total_ports = db_fetch_cell('SELECT COUNT(DISTINCT snmp_port)\n\tFROM poller_item\n\tWHERE snmp_port > 0');\n\nset_config_option('total_snmp_ports', $total_ports);\n\n/**\n * determine the number of active profiles to improve poller performance\n * under some circumstances.  Save this data for spine and cmd.php.\n * In the case where the $max_step does not equal the poller interval\n * we have to artificially set the $active_profiles > 1\n */\nif ($poller_interval != $max_step) {\n\t$active_profiles = 2;\n} elseif ($cron_interval == $poller_interval) {\n\t$active_profiles = db_fetch_cell('SELECT COUNT(DISTINCT data_source_profile_id)\n\t\tFROM data_template_data\n\t\tWHERE local_data_id > 0');\n} else {\n\t$active_profiles = db_fetch_cell('SELECT COUNT(DISTINCT rrd_next_step) FROM poller_item');\n}\n\nset_config_option('active_profiles', $active_profiles);\n\n/* assume a scheduled task of either 60 or 300 seconds */\nif (!empty($poller_interval)) {\n\t$poller_runs = intval($cron_interval / $poller_interval);\n\n\tif ($active_profiles != 1) {\n\t\t$sql_where   = \"WHERE rrd_next_step - $poller_interval <= 0 AND h.disabled = '' AND pi.poller_id = $poller_id\";\n\t} else {\n\t\t$sql_where   = \"WHERE pi.poller_id = $poller_id AND h.disabled = ''\";\n\t}\n\n\tdefine('MAX_POLLER_RUNTIME', $poller_runs * $poller_interval - 2);\n} else {\n\t$sql_where       = \"WHERE pi.poller_id = $poller_id AND h.disabled = ''\";\n\n\t$poller_runs     = 1;\n\t$poller_interval = 300;\n\tdefine('MAX_POLLER_RUNTIME', 298);\n}\n\n$num_polling_items = db_fetch_cell('SELECT ' . SQL_NO_CACHE . ' COUNT(*)\n\tFROM poller_item AS pi\n\tINNER JOIN host AS h\n\tON h.id = pi.host_id ' . $sql_where);\n\nif (isset($concurrent_processes) && $concurrent_processes > 1) {\n\t$items_perhost = array_rekey(\n\t\tdb_fetch_assoc('SELECT ' . SQL_NO_CACHE . \" host_id,\n\t\t\tCOUNT(local_data_id) AS data_sources\n\t\t\tFROM poller_item AS pi\n\t\t\tINNER JOIN host AS h\n\t\t\tON h.id = pi.host_id\n\t\t\t$sql_where\n\t\t\tGROUP BY host_id\n\t\t\tORDER BY host_id\"),\n\t\t'host_id', 'data_sources'\n\t);\n}\n\nif (isset($items_perhost) && cacti_sizeof($items_perhost)) {\n\t$items_per_process = floor($num_polling_items / $concurrent_processes);\n\n\tif ($items_per_process == 0) {\n\t\t$process_leveling = 'off';\n\t}\n} else {\n\t$process_leveling = 'off';\n}\n\n// some text formatting for platform specific vocabulary\nif ($config['cacti_server_os'] == 'unix') {\n\t$task_type = 'Cactid/Cron';\n} else {\n\t$task_type = 'Scheduled Task';\n}\n\nif ($debug) {\n\t$level = POLLER_VERBOSITY_NONE;\n} else {\n\t$level = POLLER_VERBOSITY_MEDIUM;\n}\n\n$poller_seconds_sincerun = 'Never';\n\nif (isset($poller_lastrun)) {\n\t$poller_seconds_sincerun = round($poller_start - $poller_lastrun, 2);\n}\n\ncacti_log(\"NOTE: Poller Int: '$poller_interval', $task_type Int: '$cron_interval', Time Since Last: '$poller_seconds_sincerun', Max Runtime '\" . MAX_POLLER_RUNTIME. \"', Poller Runs: '$poller_runs'\", true, 'POLLER', $level);\n\n// our cron can run at either 1 or 5 minute intervals\nif ($poller_interval <= 60) {\n\t$min_period = '60';\n} else {\n\t$min_period = '300';\n}\n\n// get to see if we are polling faster than reported by the settings, if so, exit\nif ((isset($poller_lastrun) && isset($poller_interval) && $poller_lastrun > 0) && (!$force)) {\n\t// give the user some flexibility to run a little moe often\n\tif ((($poller_start - $poller_lastrun) * 1.3) < MAX_POLLER_RUNTIME) {\n\t\tcacti_log(\"NOTE: $task_type is configured to run too often!  The Poller Interval is '$poller_interval' seconds, with a minimum $task_type period of '$min_period' seconds, but only \" . number_format_i18n($poller_start - $poller_lastrun, 1) . ' seconds have passed since the poller last ran.', true, 'POLLER', $level);\n\n\t\texit;\n\t}\n}\n\n/* check to see whether we have the poller interval set lower than\n * the poller is actually ran, if so, issue a warning\n */\nif ((($poller_start - $poller_lastrun - 10) > MAX_POLLER_RUNTIME) && ($poller_lastrun > 0)) {\n\tcacti_log(\"WARNING: $task_type is out of sync with the Poller Interval!  The Poller Interval is '$poller_interval' seconds, with a maximum of a '$min_period' second $task_type, but \" . number_format_i18n($poller_start - $poller_lastrun, 1) . ' seconds have passed since the last poll!', true, 'POLLER');\n\tadmin_email(__('Cacti System Warning'), __('WARNING: %s is out of sync with the Poller Interval for Poller[%d]!  The Poller Interval is %d seconds, with a maximum of a %d seconds, but %d seconds have passed since the last poll!', $task_type, $poller_id, $poller_interval, $min_period, number_format_i18n($poller_start - $poller_lastrun, 1)));\n}\n\n/* used for current implementation for individual pollers */\nset_config_option('poller_lastrun_' . $poller_id, (int)$poller_start);\n\nif ($poller_id == 1) {\n\t/* used for legacy implementation for the main poller */\n\tset_config_option('poller_lastrun', (int)$poller_start);\n}\n\n/* let PHP only run 1 second longer than the max runtime,\n * plus the poller needs lot's of memory\n */\nini_set('max_execution_time', MAX_POLLER_RUNTIME + 1);\nini_set('memory_limit', '-1');\n\n$poller_runs_completed = 0;\n$poller_items_total    = 0;\n\n/**\n * Update poller statistics once per poller run\n */\n$script = $server = $snmp = 0;\n\n$totals = db_fetch_assoc_prepared('SELECT action, COUNT(*) AS totals\n\tFROM poller_item AS pi\n\tWHERE pi.poller_id = ?\n\tGROUP BY action',\n\tarray($poller_id));\n\nif (cacti_sizeof($totals)) {\n\tforeach($totals as $value) {\n\t\tswitch($value['action']) {\n\t\tcase '0': // SNMP\n\t\t\t$snmp = $value['totals'];\n\t\t\tbreak;\n\t\tcase '1': // Script\n\t\t\t$script = $value['totals'];\n\t\t\tbreak;\n\t\tcase '2': // Server\n\t\t\t$server = $value['totals'];\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n$devices = db_fetch_cell_prepared('SELECT COUNT(DISTINCT host_id)\n\tFROM poller_item AS pi\n\tWHERE pi.poller_id = ?',\n\tarray($poller_id));\n\n/**\n * Update poller data source statistics in the poller table\n */\ndb_execute_prepared('INSERT INTO poller (id, devices, snmp, script, server, last_status, status)\n\tVALUES (?, ?, ?, ?, ?, NOW(), 1)\n\tON DUPLICATE KEY UPDATE\n\t\tdevices=VALUES(devices),\n\t\tsnmp=VALUES(snmp),\n\t\tscript=VALUES(script),\n\t\tserver=VALUES(server),\n\t\tlast_status=VALUES(last_status),\n\t\tstatus=VALUES(status)',\n\tarray($poller_id, $devices, $snmp, $script, $server), true, $poller_db_cnn_id);\n\n/**\n * Freshen the field mappings in cases where they\n * may have gotten out of sync\n */\ndb_execute('REPLACE INTO poller_data_template_field_mappings\n\tSELECT dtr.data_template_id, dif.data_name,\n\tGROUP_CONCAT(DISTINCT dtr.data_source_name ORDER BY dtr.data_source_name) AS data_source_names, NOW()\n\tFROM graph_templates_item AS gti\n\tINNER JOIN data_template_rrd AS dtr\n\tON gti.task_item_id = dtr.id\n\tINNER JOIN data_input_fields AS dif\n\tON dtr.data_input_field_id = dif.id\n\tWHERE dtr.local_data_id = 0\n\tAND gti.local_graph_id = 0\n\tGROUP BY dtr.data_template_id, dif.data_name');\n\nwhile ($poller_runs_completed < $poller_runs) {\n\t// record the start time for this loop\n\t$loop_start = microtime(true);\n\n\tif (db_column_exists('sites', 'disabled')) {\n\t\t$sql_where = \"AND IFNULL(s.disabled, '') != 'on'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif ($poller_id == '1') {\n\t\t$polling_hosts = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . \" h.id\n\t\t\tFROM host h\n\t\t\tLEFT JOIN sites s\n\t\t\tON s.id = h.site_id\n\t\t\tWHERE poller_id = ?\n\t\t\tAND h.deleted = ''\n\t\t\tAND IFNULL(h.disabled,'') != 'on'\n\t\t\t$sql_where\n\t\t\tORDER BY id\",\n\t\t\tarray($poller_id));\n\n\t\t$total_polling_hosts = cacti_sizeof($polling_hosts);\n\n\t\tif ($total_polling_hosts) {\n\t\t\t$polling_hosts = array_merge(array(0 => array('id' => '0')), $polling_hosts);\n\t\t} else {\n\t\t\t$polling_hosts = array(0 => array('id' => '0'));\n\t\t}\n\t} else {\n\t\t$polling_hosts = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . \" h.id\n\t\t\tFROM host h\n\t\t\tLEFT JOIN sites s\n\t\t\tON s.id = h.site_id\n\t\t\tWHERE poller_id = ?\n\t\t\tAND h.deleted = ''\n\t\t\tAND IFNULL(h.disabled, '') != 'on'\n\t\t\t$sql_where\n\t\t\tORDER BY id\",\n\t\t\tarray($poller_id));\n\n\t\t$total_polling_hosts = cacti_sizeof($polling_hosts);\n\t}\n\n\t$hosts_per_process = 0;\n\t$method            = 'disabled';\n\n\t// calculate overhead time\n\tif ($overhead_time == 0) {\n\t\t$overhead_time = $loop_start - $poller_start;\n\t}\n\n\t// initialize counters for script file handling\n\t$host_count = 1;\n\n\t// initialize file creation flags\n\t$change_proc = false;\n\n\t// initialize file and host count pointers\n\t$started_processes = 0;\n\t$first_host        = 0;\n\t$last_host         = 0;\n\t$rrds_processed    = 0;\n\t$webroot           = addslashes(($config['cacti_server_os'] == 'win32') ? strtr(strtolower(substr(__DIR__, 0, 1)) . substr(__DIR__, 1),'\\\\', '/') : __DIR__);\n\n\t// update web paths for the poller\n\tset_config_option('path_webroot', $webroot);\n\n\t// obtain some defaults from the database\n\t$poller_type = read_config_option('poller_type');\n\n\tif ($poller_type == '1') {\n\t\t$max_threads = '1';\n\t} elseif (isset($poller['threads'])) {\n\t\t$max_threads = $poller['threads'];\n\t}\n\n\tif (intval($max_threads) < 1) {\n\t\t$max_threads = 1;\n\t}\n\n\t/* initialize poller_time and poller_output tables,\n\t * check poller_output for issues\n\t */\n\t$running_processes = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . ' COUNT(*)\n\t\tFROM poller_time\n\t\tWHERE poller_id = ?\n\t\tAND end_time=\"0000-00-00 00:00:00\"',\n\t\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n\tif ($running_processes) {\n\t\tcacti_log(\"WARNING: There are $running_processes processes detected as overrunning a polling cycle, please investigate\", true, 'POLLER');\n\t\tadmin_email(__('Cacti System Warning'), __('WARNING: There are %d processes detected as overrunning a polling cycle for Poller[%d], please investigate.', $running_processes, $poller_id));\n\t}\n\n\tdb_execute_prepared('DELETE FROM poller_time\n\t\tWHERE poller_id = ?',\n\t\tarray($poller_id), true, $poller_db_cnn_id);\n\n\t/**\n\t * only report issues for the main poller or from bad local\n\t * data ids, other pollers may insert somewhat asynchronously\n\t */\n\t$issues       = array();\n\n\t$issues_limit = 20;\n\t$issues_check = ($poller_id == 1 || $config['connection'] == 'online');\n\t$issues_param = array( $current_time, $poller_id, $poller_id );\n\n\t$issues_sql = ' FROM poller_output AS po\n\t\tLEFT JOIN data_local AS dl\n\t\tON po.local_data_id = dl.id\n\t\tLEFT JOIN host AS h\n\t\tON dl.host_id = h.id\n\t\tWHERE time < FROM_UNIXTIME(? - 600)\n\t\tAND (h.poller_id = ? OR h.id IS NULL or ? = 1)';\n\n\tif ($issues_check) {\n\t\t$issues = db_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\t\tlocal_data_id, rrd_name' . $issues_sql . '\n\t\t\tLIMIT ' . $issues_limit,\n\t\t\t$issues_param);\n\t}\n\n\tif (cacti_sizeof($issues)) {\n\t\t$count = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\t\tCOUNT(*)' . $issues_sql,\n\t\t\t$issues_param);\n\n\t\t$issues_list = array();\n\n\t\tforeach ($issues as $issue) {\n\t\t\t$issues_list[]= $issue['local_data_id'];\n\t\t}\n\t\t$issue_list = 'DS[' . implode(', ', $issues_list) . ']';\n\n\t\tif ($count > $issues_limit) {\n\t\t\t$issue_list .= \", Additional Issues Remain.  Only showing first $issues_limit\";\n\t\t}\n\n\t\t$po_debounce = read_config_option('poller_output_debounce');\n\n\t\tif ($po_debounce == '') {\n\t\t\tset_config_option('poller_output_debounce', '3600');\n\t\t\t$po_debounce = 3600;\n\t\t}\n\n\t\tif ($po_debounce == 0 || debounce_run_notification('poller_output_not_empty', $po_debounce)) {\n\t\t\tcacti_log(\"WARNING: Poller Output Table not Empty.  Issues: $count, $issue_list\", true, 'POLLER');\n\n\t\t\tadmin_email(__('Cacti System Warning'), __('WARNING: Poller Output Table not empty for Poller[%d].  Issues: %d, %s.', $poller_id, $count, $issue_list));\n\t\t}\n\n\t\tdb_execute_prepared('DELETE po ' . $issues_sql, $issues_param);\n\t}\n\n\t/**\n\t * adjust for recent memory table problems in MariaDB and memory tables\n\t * being pushed into swap\n\t */\n\tif ($poller_id == 1 && read_config_option('poller_refresh_output_table') == 'on' && $total_pollers == 1) {\n\t\tdb_execute('CREATE TABLE IF NOT EXISTS po LIKE poller_output');\n\t\tdb_execute('RENAME TABLE poller_output TO poold, po TO poller_output');\n\t\tdb_execute('DROP TABLE IF EXISTS poold');\n\t\tdb_execute('ALTER TABLE poller_output ENGINE=MEMORY');\n\n\t\t// catch the unlikely event that the poller_output_boost is missing\n\t\tif (!db_table_exists('poller_output_boost')) {\n\t\t\tdb_execute('CREATE TABLE poller_output_boost LIKE poller_output');\n\t\t\tdb_execute('ALTER TABLE poller_output_boost ENGINE=InnoDB');\n\t\t}\n\t}\n\n\t/**\n\t * Empty the host_errors table for the current poller.\n\t * This table is required due to spine using multiple\n\t * threads per device.\n\t */\n\tdb_execute_prepared('DELETE FROM host_errors WHERE poller_id = ?', array($poller_id));\n\n\t// mainline\n\tif (read_config_option('poller_enabled') == 'on') {\n\t\t// determine the number of hosts to process per file\n\t\t$hosts_per_process = ceil(($poller_id == '1' ? $total_polling_hosts - 1 : $total_polling_hosts) / $concurrent_processes);\n\n\t\t$items_launched    = 0;\n\n\t\t// exit poller if spine is selected and file does not exist\n\t\tif (($poller_type == '2') && (!file_exists(read_config_option('path_spine')))) {\n\t\t\tcacti_log('ERROR: The spine path: ' . read_config_option('path_spine') . ' is invalid.  Poller can not continue!', true, 'POLLER');\n\n\t\t\tadmin_email(__('Cacti System Warning'), __('ERROR: The spine path: %s is invalid for Poller[%d].  Poller can not continue!', read_config_option('path_spine'), $poller_id));\n\n\t\t\texit;\n\t\t}\n\n\t\t// determine command name\n\t\tif ($poller_type == '2') {\n\t\t\t$command_string = cacti_escapeshellcmd(read_config_option('path_spine'));\n\n\t\t\tif (read_config_option('path_spine_config') != '' && file_exists(read_config_option('path_spine_config'))) {\n\t\t\t\t$extra_args     = ' -C ' . cacti_escapeshellarg(read_config_option('path_spine_config'));\n\t\t\t} else {\n\t\t\t\t$extra_args     = '';\n\t\t\t}\n\n\t\t\t$method         = 'spine';\n\t\t\t$total_procs    = $concurrent_processes * $max_threads;\n\t\t\tchdir(dirname(read_config_option('path_spine')));\n\t\t} elseif ($config['cacti_server_os'] == 'unix') {\n\t\t\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t\t\t$extra_args     = '-q ' . cacti_escapeshellarg(CACTI_PATH_BASE . '/cmd.php');\n\t\t\t$method         = 'cmd.php';\n\t\t\t$total_procs    = $concurrent_processes;\n\t\t} else {\n\t\t\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t\t\t$extra_args     = '-q ' . cacti_escapeshellarg(strtolower(CACTI_PATH_BASE . '/cmd.php'));\n\t\t\t$method         = 'cmd.php';\n\t\t\t$total_procs    = $concurrent_processes;\n\t\t}\n\n\t\tif (read_config_option('path_stderrlog') != '' && $config['cacti_server_os'] != 'win32') {\n\t\t\t$extra_parms = '>> ' . read_config_option('path_stderrlog') . ' 2>&1';\n\t\t} else {\n\t\t\t$extra_parms = '';\n\t\t}\n\n\t\tif ($poller_id > 1) {\n\t\t\t$extra_args .= ' --mode=' . $config['connection'];\n\t\t}\n\n\t\t/* Populate each execution file with appropriate information */\n\t\tif ($total_polling_hosts > 0) {\n\t\t\tforeach ($polling_hosts as $item) {\n\t\t\t\tif ($host_count == 1) {\n\t\t\t\t\t$first_host = $item['id'];\n\t\t\t\t}\n\n\t\t\t\tif ($process_leveling != 'on') {\n\t\t\t\t\tif ($host_count == $hosts_per_process) {\n\t\t\t\t\t\t$last_host    = $item['id'];\n\t\t\t\t\t\t$change_proc  = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (isset($items_perhost[$item['id']])) {\n\t\t\t\t\t\t$items_launched += $items_perhost[$item['id']];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (($items_launched >= $items_per_process) ||\n\t\t\t\t\t\t(cacti_sizeof($items_perhost) == $concurrent_processes)) {\n\t\t\t\t\t\t$last_host      = $item['id'];\n\t\t\t\t\t\t/* if this is the dummy entry for externally updated data sources\n\t\t\t\t\t\t * that are not related to any host (host id = 0), do NOT change_proc */\n\t\t\t\t\t\t$change_proc    = ($item['id'] == 0 ? false : true);\n\t\t\t\t\t\t$items_launched = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$host_count ++;\n\n\t\t\t\tif ($change_proc) {\n\t\t\t\t\texec_background($command_string, \"$extra_args --poller=$poller_id --first=$first_host --last=$last_host\" . ($mibs ? ' --mibs':''), $extra_parms);\n\t\t\t\t\tusleep(100000);\n\n\t\t\t\t\t$host_count   = 1;\n\t\t\t\t\t$change_proc  = false;\n\t\t\t\t\t$first_host   = 0;\n\t\t\t\t\t$last_host    = 0;\n\n\t\t\t\t\t$started_processes++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// launch the last process\n\t\t\tif ($host_count > 1) {\n\t\t\t\t$last_host = $item['id'];\n\n\t\t\t\texec_background($command_string, \"$extra_args --poller=$poller_id --first=$first_host --last=$last_host\" . ($mibs ? ' --mibs':''), $extra_parms);\n\t\t\t\tusleep(100000);\n\n\t\t\t\t$started_processes++;\n\t\t\t}\n\n\t\t\tif ($poller_id == 1) {\n\t\t\t\t// insert the current date/time for graphs\n\t\t\t\tset_config_option('date', date('Y-m-d H:i:s'));\n\n\t\t\t\t// open a pipe to rrdtool for writing\n\t\t\t\tif (!$boost_enabled) {\n\t\t\t\t\t$rrdtool_pipe = rrd_init();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$rrds_processed              = 0;\n\t\t\t$poller_finishing_dispatched = false;\n\n\t\t\twhile (true) {\n\t\t\t\t$finished_processes = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . \" COUNT(*)\n\t\t\t\t\tFROM poller_time\n\t\t\t\t\tWHERE poller_id = ?\n\t\t\t\t\tAND end_time >'0000-00-00 00:00:00'\",\n\t\t\t\t\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n\t\t\t\tif ($finished_processes >= $started_processes) {\n\t\t\t\t\t// all scheduled pollers are finished\n\t\t\t\t\tif ($poller_finishing_dispatched === false) {\n\t\t\t\t\t\tapi_plugin_hook('poller_finishing');\n\t\t\t\t\t\t$poller_finishing_dispatched = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($poller_id == 1) {\n\t\t\t\t\t\t$rrds_processed = $rrds_processed + process_poller_output($rrdtool_pipe, true);\n\t\t\t\t\t} elseif ($config['connection'] != 'online') {\n\t\t\t\t\t\t/* truncate until formal remote management is supported */\n\t\t\t\t\t\tdb_execute('TRUNCATE poller_output');\n\t\t\t\t\t}\n\n\t\t\t\t\tlog_cacti_stats($loop_start, $method, $concurrent_processes, $max_threads,\n\t\t\t\t\t\t($poller_id == '1' ? $total_polling_hosts - 1 : $total_polling_hosts), $hosts_per_process, $num_polling_items, $rrds_processed);\n\n\t\t\t\t\tpoller_run_stats($loop_start);\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tif (read_config_option('log_verbosity') >= POLLER_VERBOSITY_MEDIUM || $debug) {\n\t\t\t\t\t\tprint 'Waiting on ' . ($started_processes - $finished_processes) . ' of ' . $started_processes . \" pollers.\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$mtb = microtime(true);\n\n\t\t\t\t\tif ($poller_id == 1) {\n\t\t\t\t\t\t$rrds_processed = $rrds_processed + process_poller_output($rrdtool_pipe);\n\t\t\t\t\t} elseif ($config['connection'] != 'online') {\n\t\t\t\t\t\t/* truncate until formal remote management is supported */\n\t\t\t\t\t\tdb_execute('TRUNCATE poller_output');\n\t\t\t\t\t}\n\n\t\t\t\t\t// end the process if the runtime exceeds MAX_POLLER_RUNTIME\n\t\t\t\t\tif (($poller_start + MAX_POLLER_RUNTIME) < time()) {\n\t\t\t\t\t\tcacti_log('Maximum runtime of ' . MAX_POLLER_RUNTIME . ' seconds exceeded. Exiting.', true, 'POLLER');\n\t\t\t\t\t\tadmin_email(__('Cacti System Warning'), __('Maximum runtime of %d seconds exceeded for Poller[%d]. Exiting.', MAX_POLLER_RUNTIME, $poller_id));\n\n\t\t\t\t\t\t// generate a snmp notification\n\t\t\t\t\t\tsnmpagent_poller_exiting();\n\n\t\t\t\t\t\tapi_plugin_hook_function('poller_exiting');\n\n\t\t\t\t\t\tlog_cacti_stats($loop_start, $method, $concurrent_processes, $max_threads,\n\t\t\t\t\t\t\t($poller_id == '1' ? $total_polling_hosts - 1 : $total_polling_hosts), $hosts_per_process, $num_polling_items, $rrds_processed);\n\n\t\t\t\t\t\tpoller_run_stats($loop_start);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (microtime(true) - $mtb < 1) {\n\t\t\t\t\t\tsleep(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($poller_id == 1) {\n\t\t\t\trrd_close($rrdtool_pipe);\n\t\t\t}\n\t\t} else {\n\t\t\tif ($poller_id > 1) {\n\t\t\t\tlog_cacti_stats($loop_start, $method, $concurrent_processes, $max_threads,\n\t\t\t\t\t($poller_id == '1' ? $total_polling_hosts - 1 : $total_polling_hosts), $hosts_per_process, $num_polling_items, $rrds_processed);\n\n\t\t\t\tpoller_run_stats($loop_start);\n\n\t\t\t\t// Mark the poller done immediately due to lack of devices\n\t\t\t\t$start_end = date('Y-m-d H:i:s');\n\n\t\t\t\tdb_execute_prepared('INSERT INTO poller_time\n\t\t\t\t\t(pid, poller_id, start_time, end_time)\n\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\tarray(rand(), $poller_id, $start_end, $start_end), true, $poller_db_cnn_id);\n\t\t\t}\n\t\t}\n\n\t\t// process poller commands\n\t\t$commands = db_fetch_cell_prepared('SELECT ' . SQL_NO_CACHE . ' COUNT(*)\n\t\t\tFROM poller_command\n\t\t\tWHERE poller_id = ?',\n\t\t\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n\t\tif ($commands > 0) {\n\t\t\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t\t\t$extra_args     = '-q ' . cacti_escapeshellarg(CACTI_PATH_BASE . '/poller_commands.php') . ' --poller=' . $poller_id;\n\t\t\texec_background($command_string, $extra_args);\n\t\t} else {\n\t\t\t/* no re-index or Rechache present on this run\n\t\t\t * in case, we have more PCOMMANDS than recaching, this has to be moved to poller_commands.php\n\t\t\t * but then we'll have to call it each time to make sure, stats are updated */\n\t\t\tset_config_option('stats_recache_' . $poller_id, 'Poller:' . $poller_id . ' RecacheTime:0.0 DevicesRecached:0');\n\t\t}\n\n\t\tif ($method == 'spine') {\n\t\t\t$webroot = read_config_option('path_webroot');\n\n\t\t\tif (is_dir($webroot)) {\n\t\t\t\tchdir($webroot);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tcacti_log('WARNING: The Cacti Data Collector is currently disabled!', true, 'POLLER');\n\t}\n\n\t$poller_runs_completed++;\n\n\t// push records updates to the main poller\n\tpoller_push_data_to_main();\n\n\t// record the start time for this loop\n\t$loop_end  = microtime(true);\n\t$loop_time = $loop_end - $loop_start;\n\n\tif ($loop_time < $poller_interval) {\n\t\t// sleep the appropriate amount of time\n\t\tif ($poller_runs_completed < $poller_runs) {\n\t\t\t$plugin_start = microtime(true);\n\n\t\t\t// all plugins moved to core\n\t\t\tif ($poller_id == 1) {\n\t\t\t\tsnmpagent_poller_bottom();\n\t\t\t\tdsstats_poller_bottom();\n\t\t\t\tdsdebug_poller_bottom();\n\t\t\t\tboost_poller_bottom();\n\t\t\t}\n\n\t\t\tapi_plugin_hook('poller_bottom');\n\n\t\t\t// record the start time for this loop\n\t\t\t$loop_end      = microtime(true);\n\t\t\t$cur_loop_time = $loop_end - $loop_start;\n\n\t\t\tif ($poller_runs_completed == 1) {\n\t\t\t\t$sleep_time = $poller_interval - $cur_loop_time - $overhead_time;\n\t\t\t} else {\n\t\t\t\t$sleep_time = $poller_interval - $cur_loop_time;\n\t\t\t}\n\n\t\t\t// log some nice debug information\n\t\t\tif ($debug) {\n\t\t\t\tprint 'Loop  Time is: ' . round($loop_time, 2) . \"\\n\";\n\t\t\t\tprint 'Sleep Time is: ' . round($sleep_time, 2) . \"\\n\";\n\t\t\t\tprint 'Total Time is: ' . round($loop_end - $poller_start, 2) . \"\\n\";\n\t\t\t}\n\n\t\t\t$plugin_end = microtime(true);\n\n\t\t\tif ($sleep_time > 0) {\n\t\t\t\tusleep(intval($sleep_time * 1000000));\n\t\t\t}\n\n\t\t\tapi_plugin_hook('poller_top');\n\n\t\t\t$num_polling_items = db_fetch_cell('SELECT ' . SQL_NO_CACHE . \" COUNT(*)\n\t\t\t\tFROM poller_item AS pi\n\t\t\t\tINNER JOIN host AS h\n\t\t\t\tON h.id = pi.host_id\n\t\t\t\tLEFT JOIN sites AS s\n\t\t\t\tON h.site_id = s.id\n\t\t\t\t$sql_where\");\n\t\t}\n\t} else {\n\t\tcacti_log('WARNING: Cacti Polling Cycle Exceeded Poller Interval by ' . round($loop_end - $loop_start - $poller_interval, 2) . ' seconds', true, 'POLLER', $level);\n\t\tadmin_email(__('Cacti System Warning'), __('WARNING: Cacti Polling Cycle Exceeded Poller Interval by ' . round($loop_end - $loop_start - $poller_interval, 2) . ' seconds', true, 'POLLER', $level));\n\t}\n\n\tif (!$logged) {\n\t\tlog_cacti_stats($loop_start, $method, $concurrent_processes, $max_threads,\n\t\t\t($poller_id == '1' ? $total_polling_hosts - 1 : $total_polling_hosts), $hosts_per_process, $num_polling_items, $rrds_processed);\n\n\t\tpoller_run_stats($loop_start);\n\t}\n}\n\nfunction poller_heartbeat_check() {\n\t$poller_interval = read_config_option('poller_interval');\n\n\t$heartbeat_pollers = db_fetch_assoc_prepared('SELECT *, UNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_status) AS heartbeat\n\t\tFROM poller\n\t\tWHERE disabled = \"\"\n\t\tHAVING heartbeat > ? * 2\n\t\tOR status = 6',\n\t\tarray($poller_interval));\n\n\tif (cacti_sizeof($heartbeat_pollers)) {\n\t\tforeach($heartbeat_pollers as $p) {\n\t\t\tdb_execute_prepared('UPDATE poller SET status = 6 WHERE id = ?', array($p['id']));\n\n\t\t\tif (debounce_run_notification('poller_heartbeat_' . $p['id'], 1800)) {\n\t\t\t\t$log_message = sprintf('WARNING: Poller[%s] with Name:%s is in Heartbeat Status', $p['id'], $p['name']);\n\t\t\t\t$email_message = __('WARNING: PollerID:%s with Name:%s is in Heartbeat Status', $p['id'], $p['name']);\n\t\t\t\tcacti_log($log_message, false, 'POLLER');\n\t\t\t\tadmin_email(__('Poller in Heartbeat Mode'), $email_message);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* start post data processing */\nif ($poller_id == 1) {\n\tmultiple_poller_boost_check();\n\tpoller_replicate_check();\n\tsnmpagent_poller_bottom();\n\tboost_poller_bottom();\n\tdsstats_poller_bottom();\n\tdsdebug_poller_bottom();\n\treports_poller_bottom();\n\tspikekill_poller_bottom();\n\tautomation_poller_bottom();\n\tpoller_maintenance();\n\trrdcheck_poller_bottom();\n\tapi_plugin_hook('poller_bottom');\n\tbad_index_check($mibs);\n\thost_status_cache_check();\n\tpoller_heartbeat_check();\n} else {\n\t// flush the boost table if in recovery mode\n\tif ($poller_id > 1 && $config['connection'] == 'recovery') {\n\t\tcacti_log('NOTE: Remote Data Collection to force processing of boost records.', true, 'POLLER');\n\t\tpoller_recovery_flush_boost($poller_id);\n\t}\n\n\tautomation_poller_bottom();\n\tpoller_maintenance();\n\tapi_plugin_hook('poller_bottom');\n}\n\nfunction host_status_cache_check() {\n\t$current = db_fetch_cell(\"SELECT MD5(variable)\n\t\tFROM (\n\t\t\tSELECT GROUP_CONCAT(CONCAT(status, '|', hosts)) AS variable\n\t\t\tFROM (\n\t\t\t\tSELECT status, COUNT(*) AS hosts\n\t\t\t\tFROM host\n\t\t\t\tGROUP BY status\n\t\t\t) AS rs\n\t\t) AS rs1\");\n\n\t$last = read_config_option('host_status_cache');\n\n\tif ($last != $current) {\n\t\t$now = time();\n\t\tset_config_option('time_last_change_device', $now);\n\t\tset_config_option('time_last_change_site_device', $now);\n\t\tset_config_option('host_status_cache', $current);\n\t}\n}\n\nfunction bad_index_check($mibs) {\n\tif ($mibs == true) {\n\t\t$bad_index_devices = db_fetch_cell('SELECT GROUP_CONCAT(DISTINCT dl.host_id)\n\t\t\tFROM data_local dl\n\t\t\tLEFT JOIN data_template_data dtd\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tWHERE dl.snmp_query_id > 0\n\t\t\tAND dl.snmp_index = \"\"\n\t\t\tAND dtd.active != \"\"');\n\n\t\tif ($bad_index_devices != '') {\n\t\t\t$bad_indexes = db_fetch_cell('SELECT COUNT(*)\n\t\t\t\tFROM data_local dl\n\t\t\t\tLEFT JOIN data_template_data dtd\n\t\t\t\tON dtd.local_data_id = dl.id\n\t\t\t\tWHERE dl.snmp_query_id > 0\n\t\t\t\tAND dl.snmp_index = \"\"\n\t\t\t\tAND dtd.active != \"\"');\n\n\t\t\t$devices    = explode(',', $bad_index_devices);\n\t\t\t$device_str = 'Device[' . implode('], Device[', $devices) . ']';\n\n\t\t\tcacti_log('WARNING: You have ' . cacti_sizeof($devices) . ' Devices with bad SNMP Indexes.  Devices: ' . $device_str . ' totalling ' . $bad_indexes . ' Data Sources.  Please Either Re-Index, Delete or Disable these Data Sources.', false, 'POLLER');\n\t\t}\n\t}\n}\n\nfunction poller_table_maintenance() {\n\t// catch the unlikely event that the poller_output_boost is missing\n\tif (!db_table_exists('poller_output_boost')) {\n\t\tdb_execute('CREATE TABLE poller_output_boost LIKE poller_output');\n\t\tdb_execute('ALTER TABLE poller_output_boost ENGINE=InnoDB');\n\t}\n\n\t// catch the unlikely event that the poller_output_boost_processes is missing\n\tif (!db_table_exists('poller_output_boost_processes')) {\n\t\tdb_execute('CREATE TABLE  `poller_output_boost_processes` (\n\t\t\t`sock_int_value` bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t`status` varchar(255) default NULL,\n\t\t\tPRIMARY KEY (`sock_int_value`))\n\t\t\tENGINE=MEMORY');\n\t}\n\n\t// catch the unlikely event that the poller_output_realtime is missing\n\tif (!db_table_exists('poller_output_realtime')) {\n\t\tdb_execute('CREATE TABLE poller_output_realtime (\n\t\t\tlocal_data_id int(10) unsigned NOT NULL default \"0\",\n\t\t\trrd_name varchar(19) NOT NULL default \"\",\n\t\t\t`time` timestamp NOT NULL default \"0000-00-00 00:00:00\",\n\t\t\toutput text NOT NULL,\n\t\t\tpoller_id varchar(256) NOT NULL default \"1\",\n\t\t\tPRIMARY KEY (local_data_id, rrd_name, time, poller_id),\n\t\t\tKEY poller_id (poller_id),\n\t\t\tKEY `time` (`time`))\n\t\t\tENGINE=InnoDB\n\t\t\tROW_FORMAT=Dynamic');\n\t}\n}\n\nfunction poller_replicate_check() {\n\tglobal $config;\n\tinclude_once(CACTI_PATH_LIBRARY . '/poller.php');\n\n\t$sync_interval = read_config_option('poller_sync_interval');\n\n\tif ($sync_interval == '') {\n\t\t$sync_interval = 7200;\n\t}\n\n\t$pollers = db_fetch_assoc(\"SELECT id\n\t\tFROM poller\n\t\tWHERE id > 1\n\t\tAND dbhost NOT IN ('localhost', '127.0.0.1', '')\n\t\tAND disabled = ''\n\t\tAND sync_interval != 0\n\t\tAND (last_sync = '0000-00-00 00:00:00' OR requires_sync = 'on'\n\t\tOR (UNIX_TIMESTAMP()-UNIX_TIMESTAMP(last_sync) >= IFNULL(sync_interval, $sync_interval)))\");\n\n\tif (cacti_sizeof($pollers)) {\n\t\tforeach ($pollers as $poller) {\n\t\t\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t\t\t$extra_args     = '-q ' . cacti_escapeshellarg(CACTI_PATH_CLI . '/poller_replicate.php') . ' --poller=' . $poller['id'];\n\t\t\texec_background($command_string, $extra_args);\n\t\t}\n\t}\n}\n\nfunction poller_enabled_check($poller_id) {\n\tglobal $poller_db_cnn_id;\n\n\t$poller_disabled = db_fetch_cell_prepared('SELECT disabled\n\t\tFROM poller\n\t\tWHERE id = ?',\n\t\tarray($poller_id), '', true, $poller_db_cnn_id);\n\n\t$system_enabled = read_config_option('poller_enabled');\n\n\t$should_exit = false;\n\n\tif ($system_enabled == '') {\n\t\tcacti_log('WARNING: System Polling is Disabled!  Therefore, data collection from the poller will be suspended till re-enabled.', true, 'SYSTEM');\n\t\t$should_exit = true;\n\t}\n\n\tif ($poller_disabled == 'on') {\n\t\tcacti_log('WARNING: Poller ' . $poller_id . ' is Disabled.  Therefore, data collection for this Poller will be suspended till it\\'s re-enabled.', true, 'SYSTEM');\n\t\t$should_exit = true;\n\t}\n\n\tif ($should_exit) {\n\t\tdb_execute_prepared('UPDATE poller\n\t\t\tSET last_status=NOW()\n\t\t\tWHERE id = ?',\n\t\t\tarray($poller_id), true, $poller_db_cnn_id);\n\n\t\texit(1);\n\t}\n}\n\nfunction log_cacti_stats($loop_start, $method, $concurrent_processes, $max_threads, $num_hosts,\n\t$hosts_per_process, $num_polling_items, $rrds_processed) {\n\tglobal $poller_id, $poller_db_cnn_id, $logged;\n\n\t// get the poller data\n\t$poller = db_fetch_row_prepared('SELECT *\n\t\tFROM poller\n\t\tWHERE id = ?',\n\t\tarray($poller_id), true, $poller_db_cnn_id);\n\n\t/* update the host table error count first */\n\tdb_execute_prepared('UPDATE host AS h\n\t\tLEFT JOIN host_errors AS e\n\t\tON h.id = e.host_id\n\t\tSET h.current_errors = e.errors\n\t\tWHERE h.poller_id = ?',\n\t\tarray($poller_id));\n\n\tif ($hosts_per_process == -1) {\n\t\t$hosts_per_process = 0;\n\t}\n\n\tif ($num_hosts == -1) {\n\t\t$num_hosts = 0;\n\t}\n\n\tif ($poller_id == 1) {\n\t\t$error_lines = db_fetch_assoc(\"SELECT * FROM host_errors\");\n\n\t\tdb_execute('CREATE TEMPORARY TABLE IF NOT EXISTS host_errors_normalized (\n\t\t\t`host_id` mediumint(8) unsigned NOT NULL DEFAULT 0,\n  \t\t\t`local_data_id` int(10) unsigned NOT NULL DEFAULT 0,\n\t\t\tPRIMARY KEY (`host_id`,`local_data_id`))\n\t\t\tENGINE=InnoDB ROW_FORMAT=Dynamic');\n\n\t\t$sql = 'INSERT INTO host_errors_normalized (host_id, local_data_id) VALUES ';\n\n\t\t$i = 0;\n\t\t$params = array();\n\t\tif (cacti_sizeof($error_lines)) {\n\t\t\tforeach($error_lines as $l) {\n\t\t\t\t$local_data_ids = array_unique(preg_split('/\\s+/', $l['local_data_ids']), SORT_NUMERIC);\n\n\t\t\t\tforeach($local_data_ids as $ldi) {\n\t\t\t\t\t$sql .= ($i == 0 ? '':',') . '(?, ?)';\n\t\t\t\t\t$params[] = $l['host_id'];\n\t\t\t\t\t$params[] = $ldi;\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($i > 0) {\n\t\t\t\tdb_execute_prepared($sql, $params);\n\t\t\t}\n\t\t}\n\n\t\tdb_execute_prepared('UPDATE data_local AS dl\n\t\t\tLEFT JOIN host_errors_normalized AS e\n\t\t\tON dl.host_id = e.host_id\n\t\t\tAND dl.id = e.local_data_id\n\t\t\tSET dl.errored = IF(e.local_data_id IS NULL, 0, 1)');\n\n\t\tdb_execute('DROP TEMPORARY TABLE host_errors_normalized');\n\t}\n\n\tset_config_option('time_last_change_data_source', time());\n\n\t$errors = db_fetch_row_prepared('SELECT COUNT(DISTINCT host_id) AS errorHosts, SUM(errors) AS totalErrors\n\t\tFROM host_errors\n\t\tWHERE poller_id = ?',\n\t\tarray($poller_id));\n\n\tif (cacti_sizeof($errors)) {\n\t\t$errorHosts  = $errors['errorHosts'] ?? 0;\n\n\t\tif ($errors['totalErrors'] > 0) {\n\t\t\t$totalErrors = $errors['totalErrors'];\n\t\t} else {\n\t\t\t$totalErrors = 0;\n\t\t}\n\t} else {\n\t\t$errorHosts  = 0;\n\t\t$totalErrors = 0;\n\t}\n\n\t// take time and log performance data\n\t$loop_end = microtime(true);\n\n\t$perf_data = array(\n\t\tround($loop_end - $loop_start,4),\n\t\t$method,\n\t\t$concurrent_processes,\n\t\t$max_threads,\n\t\t$num_hosts,\n\t\t$hosts_per_process,\n\t\t$num_polling_items,\n\t\t$rrds_processed,\n\t\t$errorHosts,\n\t\t$totalErrors\n\t);\n\n\t$cacti_stats = vsprintf('Time:%01.4f Method:%s Processes:%s Threads:%s Hosts:%s HostsPerProcess:%s DataSources:%s RRDsProcessed:%s ErrorHosts:%s TotalErrors:%s', $perf_data);\n\tcacti_log('STATS: ' . $cacti_stats , true, 'SYSTEM');\n\n\t// insert poller stats into the settings table\n\tif ($poller_id > 1) {\n\t\tset_config_option('stats_poller_' . $poller_id, $cacti_stats);\n\t} else {\n\t\tset_config_option('stats_poller', $cacti_stats);\n\t}\n\n\tif (is_array($poller) && array_key_exists('min_time', $poller)) {\n\t\t// calculate min/max/average timings\n\t\t$total_time  = $loop_end - $loop_start;\n\t\t$total_polls = $poller['total_polls'];\n\n\t\tif ($total_time < $poller['min_time'] || $poller['min_time'] == '') {\n\t\t\t$min_time = $total_time;\n\t\t} else {\n\t\t\t$min_time = $poller['min_time'];\n\t\t}\n\n\t\tif ($total_time > $poller['max_time'] || $poller['max_time'] == '') {\n\t\t\t$max_time = $total_time;\n\t\t} else {\n\t\t\t$max_time = $poller['max_time'];\n\t\t}\n\n\t\t$avg_time = (($total_polls * $poller['avg_time']) + $total_time) / ($total_polls + 1);\n\n\t\t// insert poller stats into the poller table\n\t\tdb_execute_prepared('INSERT INTO poller\n\t\t\t(id, total_time, min_time, max_time, avg_time, total_polls, last_update, last_status, status)\n\t\t\tVALUES (?, ?, ?, ?, ?, ?, NOW(), NOW(), 2)\n\t\t\tON DUPLICATE KEY UPDATE\n\t\t\ttotal_time = VALUES(total_time),\n\t\t\tmin_time = VALUES(min_time),\n\t\t\tmax_time = VALUES(max_time),\n\t\t\tavg_time = VALUES(avg_time),\n\t\t\ttotal_polls = VALUES(total_polls),\n\t\t\tlast_update = VALUES(last_update),\n\t\t\tlast_status = VALUES(last_status),\n\t\t\tstatus = VALUES(status)',\n\t\t\tarray($poller_id, round($total_time, 4), $min_time, $max_time, $avg_time, $total_polls + 1), true, $poller_db_cnn_id);\n\t}\n\n\t// update snmpcache\n\tsnmpagent_cacti_stats_update($perf_data);\n\n\tapi_plugin_hook_function('cacti_stats_update', $perf_data);\n\n\t$logged = true;\n}\n\nfunction poller_run_stats($loop_start) {\n\tglobal $poller_id, $poller_interval, $poller_lastrun;\n\n\tif (!db_table_exists('poller_time_stats')) {\n\t\treturn false;\n\t}\n\n\t$threshold_1h       = read_config_option('poller_warning_1h_ratio');\n\t$threshold_1h_count = read_config_option('poller_warning_1h_count');\n\t$threshold_24h      = read_config_option('poller_warning_24h_ratio');\n\n\t$loop_end    = microtime(true);\n\t$total_time  = $loop_end - $loop_start;\n\n\t// last day stats\n\tif (date('j', $poller_lastrun) != date('j')) {\n\t\t$min   = db_fetch_cell('SELECT IFNULL(MIN(total_time),0) FROM poller_time_stats');\n\t\t$max   = db_fetch_cell('SELECT IFNULL(MAX(total_time),0) FROM poller_time_stats');\n\t\t$sum   = db_fetch_cell('SELECT IFNULL(SUM(total_time),0) FROM poller_time_stats');\n\t\t$count = db_fetch_cell('SELECT COUNT(total_time) FROM poller_time_stats');\n\n\t\tif ($count > 0) {\n\t\t\t$ratio = round($sum / $count, 2);\n\n\t\t\tcacti_log(sprintf(\"24 Hour Average Poller run time is %0.2f seconds, min: %s , max: %s\", $ratio, $min, $max), true, 'POLLER');\n\n\t\t\tif ($ratio / $poller_interval > $threshold_24h / 100 && $threshold_24h > 0) {\n\t\t\t\tcacti_log(sprintf(\"WARNING: 24 Hour Poller Average run time reached more than %s percent of time limit.\", $threshold_24h), true, 'POLLER');\n\n\t\t\t\tadmin_email(__('Cacti System Warning'), __('WARNING: 24 Hour Poller[%d] Average run time threshold breached.  It is %f seconds (more than %d &#37; of threshold.)', $poller_id, $ratio, $threshold_24h));\n\t\t\t}\n\t\t}\n\t}\n\n\t// last hour stats\n\tif (date('G', $poller_lastrun) != date('G')) {\n\t\t$count = db_fetch_cell_prepared('SELECT count(total_time)\n\t\t\tFROM poller_time_stats\n\t\t\tWHERE time > DATE_SUB(NOW(), INTERVAL 60 minute)\n\t\t\tAND (total_time/?) > (?/100)',\n\t\t\tarray($poller_interval, $threshold_1h));\n\n\t\tif ($count > $threshold_1h_count && $threshold_1h_count > 0) {\n\t\t\tcacti_log(sprintf(\"WARNING: In the last hour, the Poller run time exceeded the threshold %d times (limit %d) by %d percent of time limit.\", $count, $threshold_1h_count, $threshold_1h) , true, 'POLLER');\n\n\t\t\tadmin_email(__('Cacti System Warning'), __('WARNING: In last hour Poller[%d] run time exceeded the threshold %d times (limit %d) by %d percent of the time limit.', $poller_id, $count, $threshold_1h_count, $threshold_1h));\n\t\t}\n\t}\n\n\t// poller time statistics for last day\n\tdb_execute_prepared('INSERT INTO poller_time_stats (poller_id,total_time,time)\n\t\tVALUES (?,?,now())',\n\t\tarray($poller_id, round($total_time, 4)));\n\n\t// delete old stats\n\tdb_execute('DELETE FROM poller_time_stats WHERE `time` <  DATE_SUB(NOW(), INTERVAL 24 HOUR)');\n}\n\nfunction multiple_poller_boost_check() {\n\t$pollers = db_fetch_cell('SELECT COUNT(*)\n\t\tFROM poller\n\t\tWHERE disabled = \"\"\n\t\tAND id > 1');\n\n\tif ($pollers > 0 && read_config_option('boost_rrd_update_enable') == '') {\n\t\tcacti_log('NOTE: A second Cacti data collector has been added.  Therefore, enabling boost automatically!', false, 'POLLER');\n\n\t\tadmin_email(__('Cacti System Notification'), __('NOTE: A second Cacti data collector has been added.  Therefore, enabling boost automatically!'));\n\n\t\tset_config_option('boost_rrd_update_enable', 'on');\n\t\tset_config_option('boost_rrd_update_system_enable', 'on');\n\t}\n}\n\n/**\n * function for bulk spikekill that only runs on the main cacti server\n */\nfunction spikekill_poller_bottom() {\n\tglobal $config;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/poller.php');\n\n\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t$extra_args     = '-q ' . cacti_escapeshellarg(CACTI_PATH_BASE . '/poller_spikekill.php');\n\texec_background($command_string, $extra_args);\n}\n\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Main Poller, Version $version, \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller.php [--poller=ID] [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's main poller.  This poller is the launcher of cmd.php, spine, and all other\\n\";\n\tprint \"background processes.  It is the heart of Cacti's data collection engine.\\n\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --poller=ID    Run as the poller indicated and not the default poller.\\n\";\n\tprint \"    --force        Override poller overrun detection and force a poller run.\\n\";\n\tprint \"    --debug|-d     Output debug information.  Similar to cacti's DEBUG logging level.\\n\\n\";\n}\n"
        },
        {
          "name": "poller_automation.php",
          "type": "blob",
          "size": 39.8369140625,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_automation.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_device.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_data_source.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_graph.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_scheduler.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_tree.php');\nrequire_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/html_form_template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\nrequire_once(CACTI_PATH_LIBRARY . '/sort.php');\nrequire_once(CACTI_PATH_LIBRARY . '/template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/utility.php');\n\nif ($config['poller_id'] > 1) {\n\tif ($config['connection'] == 'online') {\n\t\tdb_force_remote_cnn();\n\t} elseif (debounce_run_notification('db_offline')) {\n\t\tcacti_log(sprintf('WARNING: Main Cacti database %s offline or in recovery.  Can not run automation', $rdatabase_hostname), true, 'AUTOM8');\n\t\tadmin_email(__('Cacti System Warning'), __(\"WARNING: Main Cacti database %s offline or in recovery\", $rdatabase_hostname));\n\t\texit(1);\n\t}\n}\n\n/** sig_handler - provides a generic means to catch exceptions to the Cacti log.\n * @arg $signo  - (int) the signal that was thrown by the interface.\n * @param mixed $signo\n * @return      - null */\nfunction sig_handler($signo) {\n\tglobal $network_id, $thread, $master, $poller_id;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tif ($thread > 0) {\n\t\t\t\tclearTask($network_id, getmypid());\n\n\t\t\t\texit(0);\n\t\t\t}\n\n\t\t\tif ($thread == 0 && !$master) {\n\t\t\t\t$pids = array_rekey(db_fetch_assoc_prepared(\"SELECT pid\n\t\t\t\t\tFROM automation_processes\n\t\t\t\t\tWHERE network_id = ?\n\t\t\t\t\tAND task!='tmaster'\",\n\t\t\t\t\tarray($network_id)), 'pid', 'pid');\n\n\t\t\t\tif (cacti_sizeof($pids)) {\n\t\t\t\t\tforeach ($pids as $pid) {\n\t\t\t\t\t\tposix_kill($pid, SIGTERM);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclearTask($network_id, getmypid());\n\n\t\t\t\tsleep(5);\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM automation_ips\n\t\t\t\t\tWHERE network_id = ?',\n\t\t\t\t\tarray($network_id));\n\t\t\t} else {\n\t\t\t\t$pids = array_rekey(db_fetch_assoc_prepared(\"SELECT pid\n\t\t\t\t\tFROM automation_processes\n\t\t\t\t\tWHERE poller_id = ?\n\t\t\t\t\tAND task='tmaster'\",\n\t\t\t\t\tarray($poller_id)), 'pid', 'pid');\n\n\t\t\t\tif (cacti_sizeof($pids)) {\n\t\t\t\t\tforeach ($pids as $pid) {\n\t\t\t\t\t\tposix_kill($pid, SIGTERM);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclearTask($network_id, getmypid());\n\t\t\t}\n\n\t\t\texit(0);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n\n/* take time and log performance data */\n$start = microtime(true);\n\n// Unix Timestamp for Database\n$startTime = time();\n\n/* let PHP run just as long as it has to */\nini_set('max_execution_time', '0');\n\n$dir = __DIR__;\nchdir($dir);\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug        = false;\n$force        = false;\n$dryrun       = false;\n$network_id   = 0;\n$poller_id    = $config['poller_id'];\n$thread       = 0;\n$master       = false;\n$serial_scans = read_config_option('automation_serial_scans') == 'on' ? true:false;\n\nglobal $debug, $poller_id, $network_id, $thread, $master, $dryrun;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--dryrun':\n\t\t\t\t$dryrun = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-M':\n\t\t\tcase '--master':\n\t\t\t\t$master = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--poller':\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--network':\n\t\t\t\t$network_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--thread':\n\t\t\t\t$thread = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-v':\n\t\t\tcase '--version':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '-h':\n\t\t\tcase '--help':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . \"\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n// Let's ensure that we were called correctly\nif (!$master && !$network_id) {\n\tprint \"FATAL: You must specify -M to Start the Master Control Process, or the Network ID using --network\\n\";\n\n\texit(1);\n}\n\n// Simple check for a disabled network\nif (!$master && $thread == 0) {\n\t$status = db_fetch_cell_prepared('SELECT enabled\n\t\tFROM automation_networks\n\t\tWHERE id = ?\n\t\tAND poller_id = ?',\n\t\tarray($network_id, $poller_id));\n\n\tif ($status != 'on' && !$force) {\n\t\tcacti_log(automation_get_pid() . \" WARNING: The Network ID: $network_id is disabled.  You must use the 'force' option to force it's execution.\", true, 'AUTOM8');\n\n\t\texit(1);\n\t}\n}\n\nif ($master) {\n\tif (!db_table_exists('automation_networks')) {\n\t\texit(0);\n\t}\n\n\t$networks = db_fetch_assoc_prepared('SELECT *\n\t\tFROM automation_networks\n\t\tWHERE poller_id = ?',\n\t\tarray($poller_id));\n\n\t$launched = 0;\n\n\tif (cacti_sizeof($networks)) {\n\t\tforeach ($networks as $network) {\n\t\t\tif ($network['snmp_id'] == 0) {\n\t\t\t\tcacti_log(\"ERROR: Automation can not run for Network '\" . $network['name'] . \"' since the SNMP ID is not set.\", true, 'AUTOM8');\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($serial_scans && countCurrentTasks() > 0) {\n\t\t\t\tautomation_debug(\"Serial automation enabled and an existing automation scan is in process.\");\n\n\t\t\t\texit(0);\n\t\t\t}\n\n\t\t\tif (api_scheduler_is_time_to_start($network) || $force) {\n\t\t\t\tautomation_debug(\"Launching Network Master for '\" . $network['name'] . \"'\\n\");\n\n\t\t\t\texec_background(read_config_option('path_php_binary'), '-q ' . read_config_option('path_webroot') . '/poller_automation.php --poller=' . $poller_id . ' --network=' . $network['id'] . ($force ? ' --force':'') . ($debug ? ' --debug':''));\n\n\t\t\t\t$launched++;\n\n\t\t\t\tif ($serial_scans) {\n\t\t\t\t\tautomation_debug(\"Serial automation enabled.  No other discoveries started this pass.\");\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tautomation_debug(\"Not time to Run Discovery for '\" . $network['name'] . \"'\\n\");\n\t\t\t}\n\t\t}\n\t}\n\n\texit(0);\n}\n\n// Check for Network Master\nif (!$master && $thread == 0) {\n\tautomation_debug(\"Thread master about to launch collector threads\\n\");\n\n\t// Remove any stale entries\n\t$pids = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT pid\n\t\t\tFROM automation_processes\n\t\t\tWHERE network_id = ?',\n\t\t\tarray($network_id)),\n\t\t'pid', 'pid'\n\t);\n\n\tautomation_debug(\"Killing any prior running threads\\n\");\n\n\tif (cacti_sizeof($pids)) {\n\t\tforeach ($pids as $pid) {\n\t\t\tif (isProcessRunning($pid)) {\n\t\t\t\tkillProcess($pid);\n\t\t\t\tcacti_log(\"WARNING: Automation Process $pid is still running for Network ID: $network_id\", true, 'AUTOM8');\n\t\t\t} else {\n\t\t\t\tcacti_log(\"WARNING: Process $pid claims to be running but not found for Network ID: $network_id\", true, 'AUTOM8');\n\t\t\t}\n\t\t}\n\t}\n\n\tautomation_debug(\"Removing any orphan entries\\n\");\n\n\tdb_execute_prepared('DELETE FROM automation_ips\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n\n\tdb_execute_prepared('DELETE FROM automation_processes\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n\n\tregisterTask($network_id, getmypid(), $poller_id, 'tmaster');\n\n\tcacti_log(automation_get_pid() . \" Network Discover is now running for Subnet Range '$network_id'\", true, 'AUTOM8');\n\n\t$preexisting_devices = getNetworkDevices($network_id);\n\n\tautomation_primeIPAddressTable($network_id);\n\n\t$threads = db_fetch_cell_prepared('SELECT threads\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tif ($threads <= 0) {\n\t\t$threads = 1;\n\t}\n\n\tautomation_debug(\"Automation will use $threads Threads\\n\");\n\n\tdb_execute_prepared('UPDATE automation_networks\n\t\tSET last_started = ?\n\t\tWHERE id = ?',\n\t\tarray(date('Y-m-d H:i:s', $startTime), $network_id));\n\n\t$curthread = 1;\n\n\twhile ($curthread <= $threads) {\n\t\tautomation_debug(\"Launching Thread $curthread\\n\");\n\t\texec_background(read_config_option('path_php_binary'), '-q ' . read_config_option('path_webroot') . '/poller_automation.php --poller=' . $poller_id . \" --thread=$curthread --network=$network_id\" . ($force ? ' --force':'') . ($debug ? ' --debug':''));\n\t\t$curthread++;\n\t}\n\n\tsleep(5);\n\tautomation_debug(\"Checking for Running Threads\\n\");\n\n\t$failcount = 0;\n\n\twhile (true) {\n\t\t$command = db_fetch_cell_prepared('SELECT command\n\t\t\tFROM automation_processes\n\t\t\tWHERE network_id = ?\n\t\t\tAND task=\"tmaster\"',\n\t\t\tarray($network_id));\n\n\t\tif ($command == 'cancel') {\n\t\t\tkillProcess(getmypid());\n\t\t}\n\n\t\t$running = db_fetch_cell_prepared('SELECT count(*)\n\t\t\tFROM automation_processes\n\t\t\tWHERE network_id = ?\n\t\t\tAND task!=\"tmaster\"\n\t\t\tAND status=\"running\"',\n\t\t\tarray($network_id));\n\n\t\tautomation_debug(\"Found $running Threads\\n\");\n\n\t\t// Are there no more running tasks? Wait up to 15 seconds to\n\t\t// allow processes to start before checking for failures\n\t\tif (($running == 0 && $failcount > 3) || $command == 'cancel') {\n\t\t\tdb_execute_prepared('DELETE FROM automation_ips\n\t\t\t\tWHERE network_id = ?',\n\t\t\t\tarray($network_id));\n\n\t\t\t$totals = db_fetch_row_prepared('SELECT SUM(up_hosts) AS up, SUM(snmp_hosts) AS snmp\n\t\t\t\tFROM automation_processes\n\t\t\t\tWHERE network_id = ?',\n\t\t\t\tarray($network_id));\n\n\t\t\t/* take time and log performance data */\n\t\t\t$end = microtime(true);\n\n\t\t\tdb_execute_prepared('UPDATE automation_networks\n\t\t\t\tSET up_hosts = ?, snmp_hosts = ?,\n\t\t\t\t\tlast_started = ?, last_runtime = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($totals['up'], $totals['snmp'], date('Y-m-d H:i:s', $startTime), ($end - $start), $network_id));\n\n\t\t\tclearAllTasks($network_id);\n\t\t\treportNetworkStatus($network_id, $preexisting_devices);\n\n\t\t\texit(0);\n\t\t} else {\n\t\t\t$failcount++;\n\t\t}\n\n\t\tsleep(5);\n\t}\n} else {\n\tregisterTask($network_id, getmypid(), $poller_id);\n\tdiscoverDevices($network_id, $thread);\n\tendTask($network_id, getmypid());\n}\n\nexit(0);\n\nfunction discoverDevices($network_id, $thread) {\n\tglobal $dryrun;\n\n\t$network = db_fetch_row_prepared('SELECT *\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\t$dns = trim($network['dns_servers']);\n\n\t/* Let's do some stats! */\n\t$stats            = array();\n\t$stats['scanned'] = 0;\n\t$stats['ping']    = 0;\n\t$stats['snmp']    = 0;\n\t$stats['added']   = 0;\n\t$count_graph      = 0;\n\t$count            = 0;\n\n\twhile (true) {\n\t\t// Check for cancel\n\t\t$command = db_fetch_cell_prepared('SELECT command\n\t\t\tFROM automation_processes\n\t\t\tWHERE network_id = ?\n\t\t\tAND task = \"tmaster\"',\n\t\t\tarray($network_id));\n\n\t\tif ($command == 'cancel' || empty($command)) {\n\t\t\tremoveMyProcess(getmypid(), $network_id);\n\t\t\tkillProcess(getmypid());\n\n\t\t\texit(0);\n\t\t}\n\n\t\t// set and ip to be scanned\n\t\tdb_execute_prepared('UPDATE automation_ips\n\t\t\tSET pid = ?, thread = ?\n\t\t\tWHERE network_id = ?\n\t\t\tAND status = 0\n\t\t\tAND pid = 0\n\t\t\tLIMIT 1',\n\t\t\tarray(getmypid(), $thread, $network_id));\n\n\t\t$device = db_fetch_row_prepared('SELECT *\n\t\t\tFROM automation_ips\n\t\t\tWHERE pid = ?\n\t\t\tAND thread = ?\n\t\t\tAND status=0',\n\t\t\tarray(getmypid(), $thread));\n\n\t\tif (cacti_sizeof($device) && isset($device['ip_address'])) {\n\t\t\t$count++;\n\n\t\t\tcacti_log(automation_get_pid() . ' NOTE: Found device IP address \\'' . $device['ip_address'] .'\\' to check', false, 'AUTOM8', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\tif (!filter_var($device['ip_address'], FILTER_VALIDATE_IP)) {\n\t\t\t\tcacti_log(automation_get_pid() . ' WARNING: IP address \\'' . $device['ip_address'] .'\\' is not a valid IP address.', false, 'AUTOM8');\n\n\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($dns != '') {\n\t\t\t\t$dnsname = automation_get_dns_from_ip($device['ip_address'], $dns, 300);\n\n\t\t\t\tif ($dnsname != $device['ip_address'] && $dnsname != 'timed_out') {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . \", Checking DNS: Found '\" . $dnsname . \"'\");\n\n\t\t\t\t\tdb_execute_prepared('UPDATE automation_ips\n\t\t\t\t\t\tSET hostname = ?\n\t\t\t\t\t\tWHERE ip_address = ?',\n\t\t\t\t\t\tarray($dnsname, $device['ip_address']));\n\n\t\t\t\t\t$device['hostname']      = $dnsname;\n\t\t\t\t\t$device['dnsname']       = $dnsname;\n\t\t\t\t\t$device['dnsname_short'] = explode('.', strtolower($dnsname))[0];\n\t\t\t\t} elseif ($network['enable_netbios'] == 'on') {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . ', Checking DNS: Not found, Checking NetBIOS:');\n\n\t\t\t\t\t$netbios = ping_netbios_name($device['ip_address']);\n\n\t\t\t\t\tif ($netbios === false) {\n\t\t\t\t\t\tautomation_debug(' Not found');\n\t\t\t\t\t\t$device['hostname']      = $device['ip_address'];\n\t\t\t\t\t\t$device['dnsname']       = '';\n\t\t\t\t\t\t$device['dnsname_short'] = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tautomation_debug(\" Found: '\" . $netbios . \"'\");\n\n\t\t\t\t\t\tdb_execute_prepared('UPDATE automation_ips\n\t\t\t\t\t\t\tSET hostname = ?\n\t\t\t\t\t\t\tWHERE ip_address = ?',\n\t\t\t\t\t\t\tarray($device['hostname'], $device['ip_address']));\n\n\t\t\t\t\t\t$device['dnsname']       = $netbios;\n\t\t\t\t\t\t$device['dnsname_short'] = $netbios;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . ', Checking DNS: Not found');\n\n\t\t\t\t\t$device['hostname']      = $device['ip_address'];\n\t\t\t\t\t$device['dnsname']       = '';\n\t\t\t\t\t$device['dnsname_short'] = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$dnsname            = @gethostbyaddr($device['ip_address']);\n\t\t\t\t$device['hostname'] = $dnsname;\n\n\t\t\t\tif ($dnsname != $device['ip_address']) {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . \", Checking DNS: Found '\" . $dnsname . \"'\");\n\n\t\t\t\t\tdb_execute_prepared('UPDATE automation_ips\n\t\t\t\t\t\tSET hostname = ?\n\t\t\t\t\t\tWHERE ip_address = ?',\n\t\t\t\t\t\tarray($dnsname, $device['ip_address']));\n\n\t\t\t\t\t$device['dnsname']       = $dnsname;\n\t\t\t\t\t$device['dnsname_short'] = explode('.', strtolower($dnsname))[0];\n\t\t\t\t} elseif ($network['enable_netbios'] == 'on') {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . ', Checking DNS: Not found, Checking NetBIOS:');\n\n\t\t\t\t\t$netbios = ping_netbios_name($device['ip_address']);\n\n\t\t\t\t\tif ($netbios === false) {\n\t\t\t\t\t\tautomation_debug(' Not found');\n\n\t\t\t\t\t\t$device['hostname']      = $device['ip_address'];\n\t\t\t\t\t\t$device['dnsname']       = '';\n\t\t\t\t\t\t$device['dnsname_short'] = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tautomation_debug(\" Found: '\" . $netbios . \"'\");\n\n\t\t\t\t\t\tdb_execute_prepared('UPDATE automation_ips\n\t\t\t\t\t\t\tSET hostname = ?\n\t\t\t\t\t\t\tWHERE ip_address = ?',\n\t\t\t\t\t\t\tarray($device['hostname'], $device['ip_address']));\n\n\t\t\t\t\t\t$device['dnsname']       = $netbios;\n\t\t\t\t\t\t$device['dnsname_short'] = $netbios;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tautomation_debug('Device: ' . $device['ip_address'] . ', Checking DNS: Not found');\n\n\t\t\t\t\t$device['hostname']      = $device['ip_address'];\n\t\t\t\t\t$device['dnsname']       = '';\n\t\t\t\t\t$device['dnsname_short'] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$exists = db_fetch_row_prepared('SELECT id, snmp_version, status, deleted\n\t\t\t\tFROM host\n\t\t\t\tWHERE hostname IN (?,?)',\n\t\t\t\tarray($device['ip_address'], $device['hostname']));\n\n\t\t\tif (!cacti_sizeof($exists)) {\n\t\t\t\tautomation_debug(', Status: Not in Cacti');\n\n\t\t\t\tif (substr($device['ip_address'], -3) < 255) {\n\t\t\t\t\tautomation_debug(', Ping: ');\n\n\t\t\t\t\t// Set status to running\n\t\t\t\t\tmarkIPRunning($device['ip_address'], $network_id);\n\n\t\t\t\t\t$stats['scanned']++;\n\n\t\t\t\t\t$device['snmp_status']          = 0;\n\t\t\t\t\t$device['ping_status']          = 0;\n\t\t\t\t\t$device['snmp_id']              = $network['snmp_id'];\n\t\t\t\t\t$device['poller_id']            = $network['poller_id'];\n\t\t\t\t\t$device['site_id']              = $network['site_id'];\n\t\t\t\t\t$device['snmp_version']         = '2';\n\t\t\t\t\t$device['snmp_port']            = '';\n\t\t\t\t\t$device['snmp_community']       = '';\n\t\t\t\t\t$device['snmp_username']        = '';\n\t\t\t\t\t$device['snmp_password']        = '';\n\t\t\t\t\t$device['snmp_auth_protocol']   = '';\n\t\t\t\t\t$device['snmp_auth_passphrase'] = '';\n\t\t\t\t\t$device['snmp_auth_protocol']   = '';\n\t\t\t\t\t$device['snmp_context']         = '';\n\t\t\t\t\t$device['snmp_port']            = '';\n\t\t\t\t\t$device['snmp_timeout']         = '';\n\t\t\t\t\t$device['snmp_sysDescr']        = '';\n\t\t\t\t\t$device['snmp_sysObjectID']     = '';\n\t\t\t\t\t$device['snmp_sysUptime']       = 0;\n\t\t\t\t\t$device['snmp_sysName']         = '';\n\t\t\t\t\t$device['snmp_sysName_short']   = '';\n\t\t\t\t\t$device['snmp_sysLocation']     = '';\n\t\t\t\t\t$device['snmp_sysContact']      = '';\n\t\t\t\t\t$device['os']                   = '';\n\t\t\t\t\t$device['snmp_priv_passphrase'] = '';\n\t\t\t\t\t$device['snmp_priv_protocol']   = '';\n\t\t\t\t\t$device['max_oids']             = '10';\n\t\t\t\t\t$device['bulk_walk_size']       = '-1';\n\t\t\t\t\t$device['snmp_options']         = '0';\n\t\t\t\t\t$device['snmp_retries']         = '3';\n\n\t\t\t\t\t/* create new ping socket for host pinging */\n\t\t\t\t\t$ping                   = new Net_Ping;\n\t\t\t\t\t$ping->host['hostname'] = $device['ip_address'];\n\t\t\t\t\t$ping->retries          = $network['ping_retries'];\n\t\t\t\t\t$ping->port             = $network['ping_port'];\n\n\t\t\t\t\t/* perform the appropriate ping check of the host */\n\t\t\t\t\t$bypass_ping = false;\n\t\t\t\t\t$result      = false;\n\n\t\t\t\t\tif ($network['ping_method'] == PING_SNMP) {\n\t\t\t\t\t\t$bypass_ping = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($bypass_ping == false) {\n\t\t\t\t\t\t$result = $ping->ping(AVAIL_PING, $network['ping_method'], $network['ping_timeout'], 1);\n\n\t\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t\tautomation_debug(' No response');\n\n\t\t\t\t\t\t\tupdateDownDevice($network_id, $device['ip_address']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tautomation_debug(' Responded');\n\n\t\t\t\t\t\t\t$stats['ping']++;\n\t\t\t\t\t\t\taddUpDevice($network_id, getmypid());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (($result || $bypass_ping) && automation_valid_snmp_device($device)) {\n\t\t\t\t\t\t$snmp_sysName       = trim($device['snmp_sysName']);\n\t\t\t\t\t\t$snmp_sysName_short = '';\n\n\t\t\t\t\t\tif (!is_ipaddress($snmp_sysName)) {\n\t\t\t\t\t\t\t$parts = explode('.', $snmp_sysName);\n\n\t\t\t\t\t\t\tforeach ($parts as $part) {\n\t\t\t\t\t\t\t\tif (is_numeric($part)) {\n\t\t\t\t\t\t\t\t\t$snmp_sysName_short = $snmp_sysName;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($snmp_sysName_short == '') {\n\t\t\t\t\t\t\t\t$snmp_sysName_short = $parts[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$snmp_sysName_short = $snmp_sysName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$exists = db_fetch_row_prepared('SELECT id, status, snmp_version, deleted\n\t\t\t\t\t\t\tFROM host\n\t\t\t\t\t\t\tWHERE hostname IN (?,?)',\n\t\t\t\t\t\t\tarray($snmp_sysName_short, $snmp_sysName));\n\n\t\t\t\t\t\tif (cacti_sizeof($exists)) {\n\t\t\t\t\t\t\tif ($exists['deleted'] != 'on') {\n\t\t\t\t\t\t\t\tif ($exists['status'] == 3 || $exists['status'] == 2) {\n\t\t\t\t\t\t\t\t\taddUpDevice($network_id, getmypid());\n\n\t\t\t\t\t\t\t\t\tif ($exists['snmp_version'] > 0) {\n\t\t\t\t\t\t\t\t\t\taddSNMPDevice($network_id, getmypid());\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Rerun data queries if specified\n\t\t\t\t\t\t\t\t\trerunDataQueries($exists['id'], $network);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tautomation_debug(' Device is in Cacti!');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tautomation_debug(' Device is in Cacti but marked as deleted!');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$host_id = 0;\n\n\t\t\t\t\t\t\tif ($snmp_sysName != '') {\n\t\t\t\t\t\t\t\t$hostname = gethostbyaddr($device['ip_address']);\n\n\t\t\t\t\t\t\t\tif ($hostname != $device['ip_address']) {\n\t\t\t\t\t\t\t\t\tif (strpos($hostname, '.')) {\n\t\t\t\t\t\t\t\t\t\t$hostname = substr($hostname, 0, strpos($hostname, '.') - 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$isCactiSysName = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\tFROM host\n\t\t\t\t\t\t\t\t\tWHERE snmp_sysName = ?\n\t\t\t\t\t\t\t\t\tAND (hostname = ? OR hostname LIKE \"' . $hostname . '%\")',\n\t\t\t\t\t\t\t\t\tarray($snmp_sysName, $device['ip_address']));\n\n\t\t\t\t\t\t\t\tif ($isCactiSysName) {\n\t\t\t\t\t\t\t\t\tautomation_debug(\", Skipping sysName '\" . $snmp_sysName . \"' already in Cacti!\\n\");\n\t\t\t\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($network['same_sysname'] == '') {\n\t\t\t\t\t\t\t\t\t$isDuplicateSysNameDiscovery = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\t\tFROM automation_devices\n\t\t\t\t\t\t\t\t\t\tWHERE network_id = ?\n\t\t\t\t\t\t\t\t\t\tAND sysName != \"\"\n\t\t\t\t\t\t\t\t\t\tAND ip != ?\n\t\t\t\t\t\t\t\t\t\tAND sysName = ?',\n\t\t\t\t\t\t\t\t\t\tarray($network_id, $device['ip_address'], $snmp_sysName));\n\n\t\t\t\t\t\t\t\t\t$isDuplicateSysNameCacti = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\t\t\t\t\tFROM host\n\t\t\t\t\t\t\t\t\t\tWHERE snmp_sysName = ?\n\t\t\t\t\t\t\t\t\t\tAND hostname != ?',\n\t\t\t\t\t\t\t\t\t\tarray($snmp_sysName, $device['ip_address']));\n\n\t\t\t\t\t\t\t\t\tif ($isDuplicateSysNameDiscovery || $isDuplicateSysNameCacti) {\n\t\t\t\t\t\t\t\t\t\tautomation_debug(\", Skipping sysName '\" . $snmp_sysName . \"' already Discovered!\\n\");\n\t\t\t\t\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$stats['snmp']++;\n\n\t\t\t\t\t\t\t\taddSNMPDevice($network_id, getmypid());\n\n\t\t\t\t\t\t\t\tautomation_debug(' Responded');\n\n\t\t\t\t\t\t\t\t$fos = automation_find_os($device['snmp_sysDescr'], $device['snmp_sysObjectID'], $device['snmp_sysName']);\n\n\t\t\t\t\t\t\t\tif (is_array($fos) && $network['add_to_cacti'] == 'on' && $dryrun == false) {\n\t\t\t\t\t\t\t\t\tautomation_debug(', Template: ' . $fos['name'] . \"\\n\");\n\t\t\t\t\t\t\t\t\t$device['os']                   = $fos['name'];\n\t\t\t\t\t\t\t\t\t$device['host_template']        = $fos['host_template'];\n\t\t\t\t\t\t\t\t\t$device['availability_method']  = $fos['availability_method'];\n\n\t\t\t\t\t\t\t\t\tif ($fos['populate_location'] == 'on') {\n\t\t\t\t\t\t\t\t\t\t$device['location'] = $device['snmp_sysLocation'];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ($fos['description_pattern'] != '') {\n\t\t\t\t\t\t\t\t\t\t$sysName     = $device['snmp_sysName'];\n\t\t\t\t\t\t\t\t\t\t$ip_address  = $device['ip_address'];\n\t\t\t\t\t\t\t\t\t\t$dnsname     = $device['dnsname'];\n\t\t\t\t\t\t\t\t\t\t$shortname   = $device['dnsname_short'];\n\t\t\t\t\t\t\t\t\t\t$sysLocation = $device['snmp_sysLocation'];\n\n\t\t\t\t\t\t\t\t\t\tif ($sysName != '') {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = str_replace('|sysName|', $sysName, $fos['description_pattern']);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = $fos['description_pattern'];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ($ip_address != '') {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = str_replace('|ipAddress|', $ip_address, $pattern);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ($dnsname != '') {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = str_replace('|dnsName|', $dnsname, $pattern);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ($shortname != '') {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = str_replace('|dnsShortName|', $shortname, $pattern);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ($sysLocation != '') {\n\t\t\t\t\t\t\t\t\t\t\t$pattern = str_replace('|sysLocation|', $sysLocation, $pattern);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t$description = db_fetch_cell(\"SELECT '$pattern'\");\n\n\t\t\t\t\t\t\t\t\t\tif ($description != '') {\n\t\t\t\t\t\t\t\t\t\t\t$device['description'] = $description;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$host_id = automation_add_device($device);\n\n\t\t\t\t\t\t\t\t\tif (!empty($host_id)) {\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysDescr']) && $device['snmp_sysDescr'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysDescr = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysDescr'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysObjectID']) && $device['snmp_sysObjectID'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysObjectID = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysObjectID'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysUptime']) && $device['snmp_sysUptime'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysUptimeInstance = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysUptime'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysContact']) && $device['snmp_sysContact'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysContact = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysContact'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysName']) && $device['snmp_sysName'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysName = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysName'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (isset($device['snmp_sysLocation']) && $device['snmp_sysLocation'] != '') {\n\t\t\t\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE host\n\t\t\t\t\t\t\t\t\t\t\t\tSET snmp_sysLocation = ?\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\t\t\t\tarray($device['snmp_sysLocation'], $host_id));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tautomation_update_device($host_id);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$stats['added']++;\n\t\t\t\t\t\t\t\t} elseif ($fos == false) {\n\t\t\t\t\t\t\t\t\tautomation_debug(\", Template: Not found, Not adding to Cacti\\n\");\n\t\t\t\t\t\t\t\t} elseif ($dryrun) {\n\t\t\t\t\t\t\t\t\tautomation_debug(\", Not adding to Cacti - Dryrun Mode\\n\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tautomation_debug(', Template: ' . $fos['name']);\n\t\t\t\t\t\t\t\t\t$device['os'] = $fos['name'];\n\t\t\t\t\t\t\t\t\tautomation_debug(\", Skipped: Add to Cacti disabled\\n\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($host_id > 0) {\n\t\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM automation_devices WHERE host_id = ?', array($host_id));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if the devices template is not discovered, add to found table\n\t\t\t\t\t\t\tdb_execute('REPLACE INTO automation_devices\n\t\t\t\t\t\t\t\t(network_id, host_id, hostname, ip, snmp_community, snmp_version, snmp_port, snmp_username, snmp_password, snmp_auth_protocol, snmp_priv_passphrase, snmp_priv_protocol, snmp_context, sysName, sysLocation, sysContact, sysDescr, sysUptime, os, snmp, up, time) VALUES ('\n\t\t\t\t\t\t\t\t. $network_id                              . ', '\n\t\t\t\t\t\t\t\t. $host_id                                 . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['dnsname'])              . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['ip_address'])           . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_community'])       . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_version'])         . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_port'])            . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_username'])        . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_password'])        . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_auth_protocol'])   . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_priv_passphrase']) . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_priv_protocol'])   . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_context'])         . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_sysName'])         . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_sysLocation'])     . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_sysContact'])      . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_sysDescr'])        . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['snmp_sysUptime'])       . ', '\n\t\t\t\t\t\t\t\t. db_qstr($device['os'])                   . ', '\n\t\t\t\t\t\t\t\t. '1, 1,' . time() . ')');\n\n\t\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($result) {\n\t\t\t\t\t\tdb_execute('REPLACE INTO automation_devices\n\t\t\t\t\t\t\t(network_id, hostname, ip, snmp_community, snmp_version, snmp_port, snmp_username, snmp_password, snmp_auth_protocol, snmp_priv_passphrase, snmp_priv_protocol, snmp_context, sysName, sysLocation, sysContact, sysDescr, sysUptime, os, snmp, up, time) VALUES ('\n\t\t\t\t\t\t\t. $network_id                              . ', '\n\t\t\t\t\t\t\t. db_qstr($device['dnsname'])              . ', '\n\t\t\t\t\t\t\t. db_qstr($device['ip_address'])           . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_community'])       . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_version'])         . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_port'])            . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_username'])        . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_password'])        . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_auth_protocol'])   . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_priv_passphrase']) . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_priv_protocol'])   . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_context'])         . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_sysName'])         . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_sysLocation'])     . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_sysContact'])      . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_sysDescr'])        . ', '\n\t\t\t\t\t\t\t. db_qstr($device['snmp_sysUptime'])       . ', '\n\t\t\t\t\t\t\t. '\"\", 0, 1,' . time() . ')');\n\n\t\t\t\t\t\tautomation_debug(', Alive no SNMP!');\n\n\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t\t\t}\n\n\t\t\t\t\tautomation_debug(\"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tautomation_debug(\", Status: Ignoring Address (PHP Bug does not allow us to ping .255 as it thinks its a broadcast IP)!\\n\");\n\t\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($exists['deleted'] != 'on') {\n\t\t\t\t\tif ($exists['status'] == 3 || $exists['status'] == 2) {\n\t\t\t\t\t\taddUpDevice($network_id, getmypid());\n\n\t\t\t\t\t\tif ($exists['snmp_version'] > 0) {\n\t\t\t\t\t\t\taddSNMPDevice($network_id, getmypid());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Rerun data queries if specified\n\t\t\t\t\t\trerunDataQueries($exists['id'], $network);\n\t\t\t\t\t}\n\n\t\t\t\t\tautomation_debug(\", Status: Already in Cacti\\n\");\n\t\t\t\t} else {\n\t\t\t\t\tautomation_debug(\", Status: Already in Cacti but marked as deleted\\n\");\n\t\t\t\t}\n\n\t\t\t\tmarkIPDone($device['ip_address'], $network_id);\n\t\t\t}\n\t\t} else {\n\t\t\t// no more ips to scan\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tcacti_log(automation_get_pid() . ' Network ' . $network['name'] . \" Thread $thread Finished, \" . $stats['scanned'] . ' IPs Scanned, ' . $stats['ping'] . ' IPs Responded to Ping, ' . $stats['snmp'] . ' Responded to SNMP, ' . $stats['added'] . ' Device Added, ' . $count_graph .  ' Graphs Added to Cacti', true, 'AUTOM8');\n\n\treturn true;\n}\n\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Network Discovery Scanner, Version $version, \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\n/*\tdisplay_help - displays the usage of the function */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_automation.php -M [--poller=ID] | --network=network_id [-T=thread_id]\\n\";\n\tprint \"    [--debug] [--force]\\n\\n\";\n\tprint \"Cacti's automation poller.  This poller has two operating modes, master and worker.\\n\";\n\tprint \"The master process tracks and launches all workers based upon Cacti's automation\\n\";\n\tprint \"settings.  If you only want to force a network to be collected, you only need to\\n\";\n\tprint \"specify the Network ID and the force options.\\n\\n\";\n\tprint \"Master Process:\\n\";\n\tprint \"    -M | --master - Master poller for all Automation\\n\";\n\tprint \"    --poller=ID   - Master Poller ID, Defaults to 0 or WebServer\\n\\n\";\n\tprint \"Network Masters and Workers:\\n\";\n\tprint \"    --network=n   - Network ID to discover\\n\";\n\tprint \"    --thread=n    - Thread ID, Defaults to 0 or Network Master\\n\\n\";\n\tprint \"General Options:\\n\";\n\tprint \"    --force       - Force the execution of a discovery process\\n\";\n\tprint \"    --debug       - Display verbose output during execution\\n\\n\";\n}\n\nfunction isProcessRunning($pid) {\n\treturn posix_kill($pid, 0);\n}\n\nfunction killProcess($pid) {\n\treturn posix_kill($pid, SIGTERM);\n}\n\nfunction removeMyProcess($pid, $network_id) {\n\tdb_execute_prepared('DELETE FROM automation_processes\n\t\tWHERE pid = ?\n\t\tAND network_id = ?',\n\t\tarray($pid, $network_id));\n\n\tdb_execute_prepared('DELETE FROM automation_ips\n\t\tWHERE pid = ?\n\t\tAND network_id = ?',\n\t\tarray($pid, $network_id));\n}\n\nfunction rerunDataQueries($host_id, &$network) {\n\tif ($network['rerun_data_queries'] == 'on') {\n\t\t$snmp_queries = db_fetch_assoc_prepared('SELECT snmp_query_id\n\t\t\tFROM host_snmp_query\n\t\t\tWHERE host_id = ?',\n\t\t\tarray($host_id));\n\n\t\tif (cacti_sizeof($snmp_queries)) {\n\t\t\tforeach ($snmp_queries as $query) {\n\t\t\t\trun_data_query($host_id, $query['snmp_query_id']);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction registerTask($network_id, $pid, $poller_id, $task = 'collector') {\n\tdb_execute_prepared(\"REPLACE INTO automation_processes\n\t\t(pid, poller_id, network_id, task, status, heartbeat, command)\n\t\tVALUES (?, ?, ?, ?, 'running', NOW(), 'start')\",\n\t\tarray($pid, $poller_id, $network_id, $task));\n}\n\nfunction endTask($network_id, $pid) {\n\tdb_execute_prepared(\"UPDATE automation_processes\n\t\tSET status='done', heartbeat=NOW()\n\t\tWHERE pid = ?\n\t\tAND network_id = ?\",\n\t\tarray($pid, $network_id));\n}\n\nfunction countCurrentTasks() {\n\treturn db_fetch_cell('SELECT COUNT(*)\n\t\tFROM automation_processes');\n}\n\nfunction addUpDevice($network_id, $pid) {\n\tdb_execute_prepared('UPDATE automation_processes\n\t\tSET up_hosts=up_hosts+1, heartbeat=NOW()\n\t\tWHERE pid = ?\n\t\tAND network_id = ?',\n\t\tarray($pid, $network_id));\n}\n\nfunction addSNMPDevice($network_id, $pid) {\n\tdb_execute_prepared('UPDATE automation_processes\n\t\tSET snmp_hosts=snmp_hosts+1, heartbeat=NOW()\n\t\tWHERE pid = ?\n\t\tAND network_id = ?',\n\t\tarray($pid, $network_id));\n}\n\nfunction reportNetworkStatus($network_id, $old_devices) {\n\t$details = db_fetch_row_prepared('SELECT notification_enabled, notification_email,\n\t\tnotification_fromname, notification_fromemail\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tif (cacti_sizeof($details)) {\n\t\tif ($details['notification_enabled'] == 'on') {\n\t\t\tif ($details['notification_fromname'] == '') {\n\t\t\t\t$fromname = read_config_option('automation_fromname');\n\n\t\t\t\tif ($fromname == '') {\n\t\t\t\t\t$fromname = read_config_option('settings_from_name');\n\n\t\t\t\t\tif ($fromname == '') {\n\t\t\t\t\t\t$fromname = __('Cacti Primary Admin');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$fromname = $details['notification_fromname'];\n\t\t\t}\n\n\t\t\tif ($details['notification_fromemail'] == '') {\n\t\t\t\t$fromemail = read_config_option('automation_fromemail');\n\n\t\t\t\tif ($fromemail == '') {\n\t\t\t\t\t$fromemail = read_config_option('settings_from_email');\n\n\t\t\t\t\tif ($fromemail == '') {\n\t\t\t\t\t\t$fromemail = 'root@cacti.net';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$fromemail = $details['notification_fromemail'];\n\t\t\t}\n\n\t\t\t$from = $fromname . ' <' . $fromemail . '>';\n\n\t\t\tif ($details['notification_email'] != '') {\n\t\t\t\t$email = $details['notification_email'];\n\t\t\t} else {\n\t\t\t\t$email = read_config_option('automation_email');\n\n\t\t\t\tif ($email == '') {\n\t\t\t\t\t$admin_user = read_config_option('admin_user');\n\n\t\t\t\t\tif ($admin_user == '') {\n\t\t\t\t\t\tcacti_log('WARNING: Unable to send Automation Notification Email.  No Primary Admin User Account specified.', false, 'POLLER');\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t$details = db_fetch_cell_prepared('SELECT email_address AS notification_email, full_name\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($admin_user));\n\n\t\t\t\t\tif (!cacti_sizeof($details)) {\n\t\t\t\t\t\tcacti_log('WARNING: Unable to send Automation Notification Email.  The Primary Admin User Account does not exist.', false, 'POLLER');\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($details['notification_email'] == '') {\n\t\t\t\t\t\tcacti_log('WARNING: Unable to send Automation Notification Email.  The Primary Admin User Account does not have an Email Address.', false, 'POLLER');\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t$email = ($details['full_name'] != '' ? $details['full_name']:__('Cacti Primary Admin')) . ' <' . $details['notification_email'] . '>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$new_devices = getNetworkDevices($network_id);\n\n\t\t\t$ids = array();\n\t\t\tpopulateDeviceIndex($ids, 0, $old_devices);\n\t\t\tpopulateDeviceIndex($ids, 1, $new_devices);\n\n\t\t\t$table_head_style = 'style=\"border-bottom: 1px solid black\"';\n\t\t\t$table_head       = '<tr>' .\n\t\t\t\t\"<td $table_head_style><i>Hostname</i></td>\" .\n\t\t\t\t\"<td $table_head_style><i>IP Address</i></td>\" .\n\t\t\t\t\"<td $table_head_style><i>SNMP Name</i></td>\" .\n\t\t\t\t\"<td $table_head_style><i>Has SNMP?</i></td>\" .\n\t\t\t\t\"<td $table_head_style><i>Responding?</i></td>\" .\n\t\t\t\t'</tr>';\n\n\t\t\t$table_exist = '';\n\t\t\t$table_new   = '';\n\t\t\t$count_exist = 0;\n\t\t\t$count_new   = 0;\n\n\t\t\t$font_up   = '<font color=\"green\">up</font>';\n\t\t\t$font_down = '<font color=\"red\">down</font>';\n\n\t\t\tforeach ($new_devices as $device) {\n\t\t\t\t$id        = $device['ip'];\n\t\t\t\t$html_line = '<tr><td>' . $device['hostname'] .\n\t\t\t\t\t'</td><td>' . $device['ip'] .\n\t\t\t\t\t'</td><td>' . (empty($device['sysName']) ? '<i><u>None</u></i>' : $device['sysName']) .\n\t\t\t\t\t'</td><td>' . ($device['snmp'] ? $font_up : $font_down) .\n\t\t\t\t\t'</td><td>' . ($device['up'] ? $font_up : $font_down) .\n\t\t\t\t\t'</td></tr>';\n\n\t\t\t\tif ($ids[$id]['old'] != '') {\n\t\t\t\t\t$table_exist .= $html_line;\n\t\t\t\t\t$count_exist++;\n\t\t\t\t} else {\n\t\t\t\t\t$table_new .= $html_line;\n\t\t\t\t\t$count_new++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (strlen($table_exist) > 0) {\n\t\t\t\t$table_exist .= '<tr><td colspan=\"5\"</td>&nbsp;</td></tr>';\n\t\t\t}\n\n\t\t\tif (strlen($table_new) > 0) {\n\t\t\t\t$table_new .= '<tr><td colspan=\"5\"</td>&nbsp;</td></tr>';\n\t\t\t}\n\n\t\t\t$v                     = CACTI_VERSION;\n\t\t\t$headers['User-Agent'] = 'Cacti-Automation-v' . $v;\n\n\t\t\t$status = ($count_new + $count_exist) . ' devices discovered';\n\n\t\t\tif ($count_new > 0) {\n\t\t\t\t$status .= ', ' . $count_new . ' new!';\n\t\t\t}\n\n\t\t\t$network = db_fetch_row_prepared('SELECT id, name, subnet_range, last_started, last_runtime\n\t\t\t\tFROM automation_networks\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($network_id));\n\n\t\t\t$subject = 'Discovery of ' . $network['name'] . ' (' . $network['subnet_range'] . ') - ' . $status;\n\t\t\t$output  = '<h1>Discovery of ' . $network['name'] . '</h1><hr><br>' .\n\t\t\t\t'<h2>Summary</h2><table>' .\n\t\t\t\t'<tr><td>Network:</td><td>' . $network['subnet_range'] . '</td></tr>'.\n\t\t\t\t'<tr><td>Started:</td><td>' . $network['last_started'] . '</td></tr>' .\n\t\t\t\t'<tr><td>Duration:</td><td>' . intval($network['last_runtime']) . '</td></tr>' .\n\t\t\t\t'<tr><td>Existing:</td><td>' . $count_exist . ' devices</td></tr>' .\n\t\t\t\t'<tr><td>New:</td><td>' . $count_new . ' devices</td></tr>' .\n\t\t\t\t'</table><br><br>';\n\n\t\t\tif ($count_new > 0 || $count_exist > 0) {\n\t\t\t\t$output .= '<table cellspacing=\"5\" cellpadding=\"5\">';\n\n\t\t\t\tif ($count_new > 0) {\n\t\t\t\t\t$output .= '<tr><td colspan=\"5\"><h3>New Devices</h3></td></tr>' . $table_head . $table_new;\n\t\t\t\t}\n\n\t\t\t\tif ($count_exist > 0) {\n\t\t\t\t\t$output .= '<tr><td colspan=\"5\"><h3>Existing Devices</h3></td></tr>' . $table_head . $table_exist;\n\t\t\t\t}\n\t\t\t\t$output .= '</table>';\n\t\t\t}\n\n\t\t\t$error = mailer(\n\t\t\t\t$from,\n\t\t\t\t$email,\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t'',\n\t\t\t\t$subject,\n\t\t\t\t$output,\n\t\t\t\t__('Cacti Automation Report requires an html based Email client'),\n\t\t\t\t'',\n\t\t\t\t$headers\n\t\t\t);\n\n\t\t\tif (strlen($error)) {\n\t\t\t\tcacti_log(\"WARNING: Automation had problems sending to '$email' for $status.  The error was '$error'\", false, 'AUTOM8');\n\t\t\t} else {\n\t\t\t\tcacti_log(\"NOTICE: Email Notification Sent to '$email' for $status.\", false, 'AUTOM8');\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction populateDeviceIndex(&$ids, $is_new, $devices) {\n\t$field = ($is_new ? 'new' : 'old');\n\n\tforeach ($devices as $index => $device) {\n\t\t$id = $device['ip'];\n\n\t\tif (!isset($ids[$id])) {\n\t\t\t$ids[$id] = array('old' => '', 'new' => '');\n\t\t}\n\n\t\t$ids[$id][$field] = $id;\n\t}\n}\n\nfunction clearTask($network_id, $pid) {\n\tdb_execute_prepared('DELETE\n\t\tFROM automation_processes\n\t\tWHERE pid = ?\n\t\tAND network_id = ?',\n\t\tarray($pid, $network_id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM automation_ips\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction clearAllTasks($network_id) {\n\tdb_execute_prepared('DELETE FROM automation_processes\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction markIPRunning($ip_address, $network_id) {\n\tdb_execute_prepared('UPDATE automation_ips\n\t\tSET status=1\n\t\tWHERE ip_address = ?\n\t\tAND network_id = ?',\n\t\tarray($ip_address, $network_id));\n}\n\nfunction markIPDone($ip_address, $network_id) {\n\tdb_execute_prepared('UPDATE automation_ips\n\t\tSET status=2\n\t\tWHERE ip_address = ?\n\t\tAND network_id = ?',\n\t\tarray($ip_address, $network_id));\n}\n\nfunction getNetworkDevices($network_id) {\n\treturn db_fetch_assoc_prepared('SELECT id, hostname, ip, sysName, snmp, up, time\n\t\tFROM automation_devices\n\t\tWHERE network_id = ?\n\t\tORDER BY hostname',\n\t\tarray($network_id));\n}\n\nfunction updateDownDevice($network_id, $ip) {\n\t$exists = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM automation_devices\n\t\tWHERE ip = ?\n\t\tAND network_id = ?',\n\t\tarray($ip, $network_id));\n\n\tif ($exists) {\n\t\tdb_execute_prepared(\"UPDATE automation_devices\n\t\t\tSET up='0'\n\t\t\tWHERE ip = ?\n\t\t\tAND network_id = ?\",\n\t\t\tarray($ip, $network_id));\n\t}\n}\n"
        },
        {
          "name": "poller_boost.php",
          "type": "blob",
          "size": 44.0439453125,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/boost.php');\nrequire_once(CACTI_PATH_LIBRARY . '/dsstats.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrdcheck.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\n\n/* get the boost polling cycle */\n$max_run_duration = read_config_option('boost_rrd_update_max_runtime');\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug    = false;\n$forcerun = false;\n$verbose  = false;\n$child    = false;\n\n/* for releasing lock on SIGNAL */\n$current_lock = false;\n\nglobal $child, $next_run_time, $archive_table, $current_lock;\nglobal $boost_debug, $boost_log, $cacti_log;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '--child':\n\t\t\t\t$child = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$forcerun = true;\n\t\t\t\tcacti_log('WARNING: Boost Poller forced by command line.', true, 'BOOST');\n\t\t\t\tbreak;\n\t\t\tcase '--verbose':\n\t\t\t\t$verbose = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit;\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . \"\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\t\t}\n\t}\n}\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* take time and log performance data */\n$start       = microtime(true);\n$start_time  = time();\n$rrd_updates = -1;\n\n/* let's give this script lot of time to run for ever */\nini_set('max_execution_time', '0');\nboost_memory_limit();\n\n$boost_debug = read_config_option('boost_debug_enabled') == 'on' ? true:false;\n$boost_log   = read_config_option('path_boost_log');\n$cacti_log   = read_config_option('path_cactilog');\n\nif ($child == false) {\n\t$current_time  = time();\n\n\t/* find out if it's time to collect device information\n\t * support both old and new formats.\n\t */\n\t$boost_last_run_time = read_config_option('boost_last_run_time') ?? ($current_time - 3600);\n\n\tif (!is_numeric($boost_last_run_time)) {\n\t\t$last_run_time = strtotime($boost_last_run_time);\n\t} elseif (empty($boost_last_run_time)) {\n\t\t$last_run_time = time() - 3600;\n\t} else {\n\t\t$last_run_time = $boost_last_run_time;\n\t}\n\n\t$boost_next_run_time = read_config_option('boost_next_run_time');\n\tif (!empty($boost_next_run_time) && !is_numeric($boost_next_run_time)) {\n\t\t$next_run_time = strtotime($boost_next_run_time);\n\t} elseif (empty($boost_next_run_time)) {\n\t\t$next_run_time = time() + 3600;\n\t} else {\n\t\t$next_run_time = $boost_next_run_time;\n\t}\n\n\t$seconds_offset = read_config_option('boost_rrd_update_interval') * 60;\n\n\t$run_now = boost_time_to_run($forcerun, $current_time, $last_run_time, $next_run_time);\n\n\tif ($run_now) {\n\t\t/**\n\t\t * Check to see if the boost log is enabled and the file exists and\n\t\t * is writable.  If it does not exist, create an empty file.\n\t\t */\n\t\tif ($boost_debug && $boost_log != '') {\n\t\t\tif (dirname($cacti_log) != dirname($boost_log)) {\n\t\t\t\tcacti_log(sprintf('WARNING: Boost Debug Log location:%s must be in the same directory as the Cacti Log location:%s.  Change the path to a correct location', $boost_log, $cacti_log), true, 'BOOST');\n\t\t\t} elseif (!file_exists($boost_log)) {\n\t\t\t\tif (is_writable(dirname($boost_log))) {\n\t\t\t\t\ttouch($boost_log);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log(sprintf('WARNING: Boost Debug Log %s is not writable.  Change the path to a writable location', $boost_log), true, 'BOOST');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Check to see if there are any poller items to process and if not\n\t\t * exit cleanly\n\t\t */\n\t\t$poller_items = db_fetch_row('SELECT * FROM poller_output_boost LIMIT 1');\n\t\tif (!cacti_sizeof($poller_items)) {\n\t\t\tcacti_log('INFO: Boost has no items in poller_output_boost to process during this cycle.', true, 'BOOST');\n\t\t\texit(0);\n\t\t}\n\n\t\t/* we will warn if the process is taking extra long */\n\t\tif (!register_process_start('boost', 'master', $config['poller_id'], read_config_option('boost_rrd_update_max_runtime') * 3)) {\n\t\t\texit(0);\n\t\t}\n\n\t\tboost_debug('Time to Run Boost, Force Run is ' . ($forcerun ? 'true!':'false.'));\n\n\t\t/* Check if processes are running and kill them */\n\t\tboost_kill_running_processes();\n\n\t\t/* Truncate the rrd_update_counter table */\n\t\tdb_execute('TRUNCATE TABLE poller_output_boost_processes');\n\n\t\t/* Prepare the boost distribution */\n\t\tcacti_log('INFO: Boost preparing tables ...', true, 'BOOST');\n\t\t$time_start = time();\n\t\t$continue = boost_prepare_process_table();\n\t\t$time_end = time();\n\t\tcacti_log('INFO: Boost prepare tables took ' . ($time_end - $time_start) . ' seconds.', true, 'BOOST');\n\n\t\t/* Launch the boost children */\n\t\tif ($continue) {\n\t\t\t/* Allow mysql to flush the rename transaction */\n\t\t\tsleep(7);\n\n\t\t\tcacti_log('INFO: Boost spawning child processes ...', true, 'BOOST');\n\t\t\tboost_launch_children();\n\n\t\t\t/* Wait for all processes to continue */\n\t\t\twhile ($running = boost_processes_running()) {\n\t\t\t\tboost_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\t\tsleep(2);\n\t\t\t}\n\n\t\t\tcacti_log('INFO: Boost last child processes ended.', true, 'BOOST');\n\n\t\t\t/* tell the main poller that we are done */\n\t\t\tset_config_option('boost_poller_status', 'complete - end time:' . date('Y-m-d H:i:s'));\n\n\t\t\t/* Finish processing post */\n\t\t\tset_config_option('boost_last_run_time', $current_time);\n\n\t\t\t/* output all the rrd data to the rrd files */\n\t\t\t$rrd_updates = db_fetch_cell('SELECT SUM(status) FROM poller_output_boost_processes');\n\n\t\t\tif ($rrd_updates > 0) {\n\t\t\t\tboost_log_statistics($rrd_updates);\n\t\t\t\t$next_run_time = $current_time + $seconds_offset;\n\t\t\t} elseif ($rrd_updates == -1) {\n\t\t\t\tboost_log_statistics(0);\n\t\t\t\t$next_run_time = $current_time + $seconds_offset;\n\t\t\t} else { /* rollback last run time */\n\t\t\t\tset_config_option('boost_last_run_time', $last_run_time);\n\t\t\t}\n\n\t\t\tif ($rrd_updates > 0) {\n\t\t\t\tcacti_log('INFO: Boost removing archive tables ...', true, 'BOOST');\n\n\t\t\t\t/* cleanup - remove empty arch tables*/\n\t\t\t\t$tables = db_fetch_assoc(\"SELECT table_name AS name\n\t\t\t\t\tFROM information_schema.tables\n\t\t\t\t\tWHERE TABLE_SCHEMA = SCHEMA()\n\t\t\t\t\tAND TABLE_NAME LIKE 'poller_output_boost_arch_%'\");\n\n\t\t\t\tif (cacti_sizeof($tables)) {\n\t\t\t\t\tforeach ($tables as $table) {\n\t\t\t\t\t\tcacti_log('INFO: Boost removing archive table: ' . $table['name'], true, 'BOOST');\n\n\t\t\t\t\t\tdb_execute('DROP TABLE IF EXISTS ' . $table['name']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdsstats_boost_bottom();\n\t\t\t\trrdcheck_boost_bottom();\n\n\t\t\t\tapi_plugin_hook('boost_poller_bottom');\n\t\t\t}\n\t\t}\n\n\t\tcacti_log('INFO: Boost unregistering master process', true, 'BOOST');\n\n\t\tunregister_process('boost', 'master', $config['poller_id'], getmypid());\n\n\t\t/* log the end time of the process */\n\t\tset_config_option('boost_last_end_time', time());\n\t} else {\n\t\tset_config_option('boost_poller_status', 'complete');\n\t}\n\n\t/* store the next run time so that people understand */\n\tif ($rrd_updates > 0 || $rrd_updates == -1) {\n\t\tif (empty($next_run_time)) {\n\t\t\t$next_run_time = time() + $seconds_offset;\n\t\t}\n\n\t\tset_config_option('boost_next_run_time', $next_run_time);\n\t}\n\n\tboost_purge_cached_png_files($forcerun);\n\n\texit(0);\n} else {\n\tcacti_log('INFO: Boost register child process ' . $child, true, 'BOOST');\n\n\t/* we will warn if the process is taking extra long */\n\tif (!register_process_start('boost', 'child', $child, read_config_option('boost_rrd_update_max_runtime') * 3)) {\n\t\texit(0);\n\t}\n\n\t/* output all the rrd data to the rrd files */\n\t$rrd_updates = boost_output_rrd_data($child);\n\n\tdb_execute_prepared('INSERT INTO poller_output_boost_processes\n\t\t(status) VALUES (?)',\n\t\tarray($rrd_updates));\n\n\tboost_log_child_statistics($rrd_updates, $child);\n\n\tunregister_process('boost', 'child', $child);\n\n\texit(0);\n}\n\nfunction sig_handler($signo) {\n\tglobal $child, $config, $current_lock;\n\n\t$rrdtool_version = read_config_option('rrdtool_version');\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: Boost Poller terminated by user', true, 'BOOST');\n\n\t\t\t/* tell the main poller that we are done */\n\t\t\tset_config_option('boost_poller_status', 'terminated - end time:' . date('Y-m-d H:i:s'));\n\n\t\t\tif ($child) {\n\t\t\t\tunregister_process('boost', 'child', $child, getmypid());\n\t\t\t} else {\n\t\t\t\tunregister_process('boost', 'master', $config['poller_id'], getmypid());\n\t\t\t}\n\n\t\t\texit;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n\n\tif (cacti_version_compare(get_rrdtool_version(), '1.5', '<')) {\n\t\tif ($current_lock !== false && $child) {\n\t\t\tdb_execute(\"SELECT RELEASE_LOCK('boost.single_ds.$current_lock')\");\n\t\t} elseif (!$child) {\n\t\t\tdb_execute(\"SELECT RELEASE_ALL_LOCKS()\");\n\t\t}\n\t}\n}\n\nfunction boost_kill_running_processes() {\n\t$processes = db_fetch_assoc_prepared('SELECT *\n\t\tFROM processes\n\t\tWHERE tasktype = \"boost\"\n\t\tAND pid != ?',\n\t\tarray(getmypid()));\n\n\tif (cacti_sizeof($processes)) {\n\t\tforeach ($processes as $p) {\n\t\t\tcacti_log(sprintf('WARNING: Killing Boost %s PID %d due to another boost process starting.', ucfirst($p['taskname']), $p['pid']), true, 'BOOST');\n\n\t\t\tposix_kill($p['pid'], SIGTERM);\n\n\t\t\tunregister_process($p['tasktype'], $p['taskname'], $p['taskid'], $p['pid']);\n\t\t}\n\t}\n}\n\nfunction boost_processes_running() {\n\t$running = db_fetch_cell('SELECT COUNT(*)\n\t\tFROM processes\n\t\tWHERE tasktype = \"boost\"\n\t\tAND taskname = \"child\"');\n\n\treturn $running;\n}\n\nfunction boost_prepare_process_table() {\n\tglobal $start_time, $archive_table, $max_run_duration, $config, $database_default, $debug, $get_memory, $memory_used;\n\n\tboost_debug('Parallel Process Setup Begins.');\n\n\t$boost_poller_status = read_config_option('boost_poller_status');\n\tif (!$boost_poller_status) {\n\t\t$boost_poller_status = 'not started';\n\t}\n\n\t/* detect a process that has overrun it's warning time */\n\tif (substr_count($boost_poller_status, 'running')) {\n\t\t$status_array = explode(':', $boost_poller_status);\n\n\t\tif (!empty($status_array[1])) {\n\t\t\t$previous_start_time = strtotime($status_array[1]);\n\n\t\t\t/* if the runtime was exceeded, allow the next process to run */\n\t\t\tif ($previous_start_time + $max_run_duration < $start_time) {\n\t\t\t\tcacti_log('WARNING: Detected Poller Boost Overrun, Possible Boost Poller Crash', true, 'BOOST SVR');\n\n\t\t\t\tadmin_email(__('Cacti System Warning'), __('WARNING: Detected Poller Boost Overrun, Possible Boost Poller Crash', 'BOOST SVR'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/* if the poller is not running, or has never run, start */\n\t/* mark the boost server as running */\n\tset_config_option('boost_poller_status', 'running - start time:' . date('Y-m-d H:i:s'));\n\n\t$delayed_inserts = db_fetch_row(\"SHOW STATUS LIKE 'Not_flushed_delayed_rows'\");\n\n\twhile (cacti_sizeof($delayed_inserts) && $delayed_inserts['Value']) {\n\t\tcacti_log('BOOST WAIT: Waiting 1s for delayed inserts are made' , true, 'SYSTEM');\n\t\tusleep(1000000);\n\t\t$delayed_inserts = db_fetch_row(\"SHOW STATUS LIKE 'Not_flushed_delayed_rows'\");\n\t}\n\n\t$time = time();\n\n\t/* split poller_output_boost */\n\t$archive_table = 'poller_output_boost_arch_' . $time;\n\t$interim_table = 'poller_output_boost_' . $time;\n\n\tcacti_log('INFO: Boost rotating poller_output_boost into archive table: ' . $archive_table, true, 'BOOST');\n\tdb_execute(\"CREATE TABLE $interim_table LIKE poller_output_boost\");\n\tdb_execute(\"RENAME TABLE poller_output_boost TO $archive_table, $interim_table TO poller_output_boost\");\n\tdb_execute(\"ANALYZE TABLE $archive_table\");\n\tcacti_log('INFO: Boost done rotating poller_output_boost', true, 'BOOST');\n\n\t$arch_tables = boost_get_arch_table_names($archive_table);\n\n\tif (!cacti_sizeof($arch_tables)) {\n\t\tcacti_log('ERROR: Failed to retrieve archive table name - check poller', true, 'BOOST');\n\n\t\treturn false;\n\t}\n\n\t$total_rows = 0;\n\n\tcacti_log('INFO: Boost counting entries in archive tables ...', true, 'BOOST');\n\tforeach($arch_tables as $table) {\n\t\t$table_rows = db_fetch_cell_prepared('SELECT TABLE_ROWS\n\t\t\tFROM information_schema.TABLES\n\t\t\tWHERE TABLE_SCHEMA = SCHEMA()\n\t\t\tAND TABLE_NAME = ?',\n\t\t\tarray($table));\n\n\t\t$total_rows += $table_rows;\n\n\t\tcacti_log('INFO: Boost archive table ' . $table . ' has ' . $table_rows . ' entries.', true, 'BOOST');\n\t}\n\n\tif ($total_rows == 0) {\n\t\tboost_debug('ERROR: Failed to retrieve any rows from archive tables');\n\n\t\tcacti_log('ERROR: Failed to retrieve any rows from archive tables', true, 'BOOST');\n\n\t\treturn false;\n\t} else {\n\t\tcacti_log('INFO: Boost processing a total of ' . $total_rows . ' entries.', true, 'BOOST');\n\t}\n\n\tdb_execute('CREATE TABLE IF NOT EXISTS poller_output_boost_local_data_ids (\n\t\tlocal_data_id int unsigned default \"0\",\n\t\tprocess_handler int unsigned default \"0\",\n\t\tPRIMARY KEY (local_data_id),\n\t\tINDEX process_handler(process_handler))\n\t\tENGINE=InnoDB');\n\n\tdb_execute('TRUNCATE poller_output_boost_local_data_ids');\n\n\tforeach ($arch_tables as $table) {\n\t\tdb_execute(\"INSERT IGNORE INTO poller_output_boost_local_data_ids\n\t\t\t(local_data_id)\n\t\t\tSELECT DISTINCT local_data_id\n\t\t\tFROM $table\");\n\t}\n\n\t$data_ids = db_fetch_cell('SELECT\n\t\tCOUNT(local_data_id)\n\t\tFROM poller_output_boost_local_data_ids');\n\n\t$processes = read_config_option('boost_parallel');\n\n\tboost_debug(\"Data Sources:$data_ids, Concurrent Processes:$processes\");\n\n\t$data_ids_per_process = ceil($data_ids / $processes);\n\n\t$count = 1;\n\n\twhile ($count <= $processes) {\n\t\tdb_execute_prepared('UPDATE poller_output_boost_local_data_ids\n\t\t\tSET process_handler = ?\n\t\t\tWHERE process_handler = 0\n\t\t\tLIMIT ' . $data_ids_per_process,\n\t\t\tarray($count));\n\n\t\t$count++;\n\t}\n\n\tboost_debug('Parallel Process Setup Complete.  Ready to spawn children.');\n\n\treturn true;\n}\n\nfunction boost_launch_children() {\n\tglobal $config, $debug, $boost_log, $boost_debug, $cacti_log;\n\n\t$processes = read_config_option('boost_parallel');\n\n\tif (empty($processes)) {\n\t\t$processes = 1;\n\t}\n\n\t$php_binary    = read_config_option('path_php_binary');\n\t$redirect_args = '';\n\n\tif ($boost_debug && $boost_log != '') {\n\t\tif (!is_writable($boost_log)) {\n\t\t\tboost_debug(\"WARNING: Boost log '$boost_log' is not writable!\");\n\n\t\t\tcacti_log(\"WARNING: Boost log '$boost_log' is not writable!\", true, 'BOOST');\n\t\t} else {\n\t\t\t$redirect_args = '>> ' . $boost_log;\n\t\t}\n\t}\n\n\tboost_debug(\"About to launch $processes processes.\");\n\n\tfor ($i = 1; $i <= $processes; $i++) {\n\t\tboost_debug('Launching Boost Process Number ' . $i);\n\n\t\tcacti_log('NOTE: Launching Boost Process Number ' . $i, true, 'BOOST', POLLER_VERBOSITY_MEDIUM);\n\n\t\texec_background($php_binary, CACTI_PATH_BASE . '/poller_boost.php --child=' . $i . ($debug ? ' --debug':''), $redirect_args);\n\t}\n\n\tsleep(2);\n}\n\nfunction boost_time_to_run($forcerun, $current_time, $last_run_time, $next_run_time) {\n\t$run_now = false;\n\n\tboost_debug('Checking if Boost is ready to run.');\n\n\tif ((read_config_option('boost_rrd_update_enable') == 'on') || $forcerun) {\n\t\t/* turn on the system level updates as that is what dictates \"on/off\" */\n\t\tif (!$forcerun && read_config_option('boost_rrd_update_system_enable') != 'on') {\n\t\t\tset_config_option('boost_rrd_update_system_enable', 'on');\n\t\t}\n\n\t\t$seconds_offset = read_config_option('boost_rrd_update_interval') * 60;\n\n\t\t/* Initialize seconds offset, if not set to 2 hours */\n\t\tif (empty($seconds_offset)) {\n\t\t\t$seconds_offset = 120;\n\t\t\tset_config_option('boost_rrd_update_interval', 120);\n\t\t}\n\n\t\tboost_debug('Last Runtime was ' . date('Y-m-d H:i:s', $last_run_time) . \" ($last_run_time).\");\n\t\tboost_debug('Next Runtime is '  . date('Y-m-d H:i:s', $next_run_time) . \" ($next_run_time).\");\n\n\t\t/* determine the next start time */\n\t\tif (empty($last_run_time)) {\n\t\t\t/* since the poller has never run before, let's fake it out */\n\t\t\t$next_run_time = $current_time + $seconds_offset;\n\n\t\t\tset_config_option('boost_last_run_time', $current_time);\n\t\t\tset_config_option('boost_next_run_time', $next_run_time);\n\n\t\t\t$run_now = false;\n\t\t} else {\n\t\t\t$next_run_time = $last_run_time + $seconds_offset;\n\n\t\t\tif ($current_time >= $next_run_time) {\n\t\t\t\t$run_now = true;\n\t\t\t\tset_config_option('boost_next_run_time', $next_run_time);\n\t\t\t}\n\t\t}\n\n\t\t/* determine if you must output boost table now */\n\t\t$current_records = boost_get_total_rows();\n\t\t$max_records     = read_config_option('boost_rrd_update_max_records');\n\n\t\tboost_debug('Records Found:' . $current_records . ', Max Threshold:' . $max_records . '.');\n\n\t\tif ($current_records > $max_records) {\n\t\t\t$run_now = true;\n\t\t\tset_config_option('boost_next_run_time', $next_run_time);\n\t\t}\n\n\t\tif ($forcerun) {\n\t\t\t$run_now = true;\n\t\t\tset_config_option('boost_next_run_time', $next_run_time);\n\t\t}\n\t} else {\n\t\t$pollers = db_fetch_cell('SELECT COUNT(*) FROM pollers WHERE disabled = \"\"');\n\n\t\tif ($pollers > 1) {\n\t\t\tboost_debug('Someone attempted to disable boost through there are multiple Data Collectors Defined!');\n\n\t\t\tset_config_option('boost_rrd_update_system_enable', 'on');\n\t\t} elseif (read_config_option('boost_rrd_update_system_enable') == 'on') {\n\t\t\t/* turn off the system level updates, we want to disable */\n\t\t\tset_config_option('boost_rrd_update_system_enable', '');\n\t\t}\n\n\t\t/* we are force to run until boost is finished */\n\t\t$rows = boost_get_total_rows();\n\n\t\tif ($rows > 0) {\n\t\t\t$run_now = true;\n\t\t}\n\t}\n\n\treturn $run_now;\n}\n\nfunction boost_output_rrd_data($child) {\n\tglobal $start, $archive_table, $max_run_duration, $config, $database_default, $debug, $get_memory, $memory_used;\n\n\t$rrd_updates      = 0;\n\t$rrdtool_pipe     = rrd_init();\n\t$runtime_exceeded = false;\n\n\t/* let's set and track memory usage will we */\n\tif (!function_exists('memory_get_peak_usage')) {\n\t\t$get_memory   = true;\n\t\t$memory_used  = memory_get_usage();\n\t} else {\n\t\t$get_memory   = false;\n\t}\n\n\tboost_debug(\"Processing RRRtool Output for Boost Process $child\");\n\n\t$arch_tables = boost_get_arch_table_names($archive_table);\n\n\tif (!cacti_sizeof($arch_tables)) {\n\t\tcacti_log('ERROR: Failed to retrieve archive table name', true, 'BOOST');\n\n\t\treturn false;\n\t}\n\n\t$total_rows = 0;\n\n\tforeach ($arch_tables as $table) {\n\t\t$total_rows += db_fetch_cell_prepared(\"SELECT COUNT(at.local_data_id)\n\t\t\tFROM $table AS at\n\t\t\tINNER JOIN poller_output_boost_local_data_ids AS bpt\n\t\t\tON at.local_data_id = bpt.local_data_id\n\t\t\tAND bpt.process_handler = ?\",\n\t\t\tarray($child));\n\t}\n\n\tif ($total_rows == 0) {\n\t\treturn false;\n\t}\n\n\tboost_debug(\"Processes:$child, TotalRows:$total_rows\");\n\n\t$max_per_select = read_config_option('boost_rrd_update_max_records_per_select');\n\n\t$data_ids = db_fetch_cell_prepared('SELECT\n\t\tCOUNT(local_data_id)\n\t\tFROM poller_output_boost_local_data_ids\n\t\tWHERE process_handler = ?',\n\t\tarray($child));\n\n\t$passes       = ceil($total_rows / $max_per_select);\n\t$ids_per_pass = ceil($data_ids / $passes);\n\t$curpass      = 1;\n\n\twhile ($data_ids > 0) {\n\t\tboost_debug(\"Processing $curpass of $passes for Boost Process $child\");\n\n\t\t$last_id = db_fetch_cell_prepared(\"SELECT MAX(local_data_id)\n\t\t\tFROM (\n\t\t\t\tSELECT local_data_id\n\t\t\t\tFROM poller_output_boost_local_data_ids\n\t\t\t\tWHERE process_handler = ?\n\t\t\t\tORDER BY local_data_id ASC\n\t\t\t\tLIMIT $ids_per_pass\n\t\t\t) AS result\",\n\t\t\tarray($child));\n\n\t\tif (empty($last_id)) {\n\t\t\tbreak;\n\t\t}\n\n\t\tboost_process_local_data_ids($last_id, $child, $rrdtool_pipe);\n\n\t\t$curpass++;\n\n\t\t$data_ids = db_fetch_cell_prepared('SELECT *\n\t\t\tFROM poller_output_boost_local_data_ids\n\t\t\tWHERE process_handler = ?',\n\t\t\tarray($child));\n\n\t\tif (((time()-$start) > $max_run_duration) && (!$runtime_exceeded)) {\n\t\t\tcacti_log('WARNING: RRD On Demand Updater Exceeded Runtime Limits. Continuing to Process!!!', true, 'BOOST');\n\n\t\t\t$runtime_exceeded = true;\n\t\t}\n\t}\n\n\tboost_debug(\"Processing Complete for Boost Process $child.  It took $curpass passed to complete.\");\n\n\t/* log memory usage */\n\tif (function_exists('memory_get_peak_usage')) {\n\t\tset_config_option('boost_peak_memory_' . $child, memory_get_peak_usage());\n\t} else {\n\t\tset_config_option('boost_peak_memory_' . $child, $memory_used);\n\t}\n\n\trrd_close($rrdtool_pipe);\n\n\treturn $total_rows;\n}\n\n/* boost_process_local_data_ids - grabs data from the 'poller_output' table and feeds the *completed*\n\t results to RRDTool for processing\n   @arg $last_id - the last id to process\n   @arg $child - the current process\n   @arg $rrdtool_pipe - the socket that has been opened for the RRDtool operation */\nfunction boost_process_local_data_ids($last_id, $child, $rrdtool_pipe) {\n\tglobal $config, $archive_table, $boost_sock, $boost_timeout, $debug, $get_memory, $memory_used, $current_lock;\n\tglobal $boost_debug, $boost_log;\n\n\t/* cache this call as it takes time */\n\tstatic $archive_tables  = false;\n\tstatic $rrdtool_version = null;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/rrd.php');\n\n\t/* suppress warnings */\n\tif (defined('E_DEPRECATED')) {\n\t\terror_reporting(E_ALL ^ E_DEPRECATED);\n\t} else {\n\t\terror_reporting(E_ALL);\n\t}\n\n\t/* gather, repair if required and cache the rrdtool version */\n\tif ($rrdtool_version === null) {\n\t\t$rrdtool_ins_version = get_installed_rrdtool_version();\n\t\t$rrdtool_version     = get_rrdtool_version();\n\n\t\tif ($rrdtool_ins_version != $rrdtool_version) {\n\t\t\tboost_debug('Updating Stored RRDtool version to installed version ' . $rrdtool_ins_version);\n\n\t\t\tcacti_log('NOTE: Updating Stored RRDtool version to installed version ' . $rrdtool_ins_version, true, 'BOOST');\n\n\t\t\tset_config_option('rrdtool_version', $rrdtool_ins_version);\n\t\t\t$rrdtool_version = $rrdtool_ins_version;\n\t\t}\n\t}\n\n\t/* install the boost error handler */\n\tset_error_handler('boost_error_handler');\n\n\t/* load system variables needed */\n\t$upd_string_len\t\t    = read_config_option('boost_rrd_update_string_length');\n\t$rrd_update_interval = read_config_option('boost_rrd_update_interval');\n\t$data_ids_to_get     = read_config_option('boost_rrd_update_max_records_per_select');\n\n\tif ($archive_tables === false) {\n\t\t$archive_tables = boost_get_arch_table_names($archive_table);\n\t}\n\n\tif ($archive_tables === false) {\n\t\tboost_debug('Failed to determine archive tables');\n\n\t\tcacti_log('Failed to determine archive tables', true, 'BOOST');\n\n\t\treturn 0;\n\t}\n\n\tif (!cacti_sizeof($rrd_field_names)) {\n\t\t$rrd_field_names = array_rekey(\n\t\t\tdb_fetch_assoc_prepared('SELECT ' . SQL_NO_CACHE . '\n\t\t\t\tCONCAT(data_template_id, \"_\", data_name) AS keyname, data_source_names AS data_source_name\n\t\t\t\tFROM poller_data_template_field_mappings'),\n\t\t\t'keyname', array('data_source_name'));\n\t}\n\n\t$query_string = 'SELECT * FROM (';\n\t$query_string_suffix = 'ORDER BY local_data_id ASC, timestamp ASC, rrd_name ASC';\n\n\t$sub_query_string = '';\n\n\tforeach ($archive_tables as $table) {\n\t\t$sub_query_string .= ($sub_query_string != '' ? ' UNION ALL ':'') .\n\t\t\t\" SELECT $table.local_data_id, dl.data_template_id, UNIX_TIMESTAMP(time) AS timestamp, rrd_name, output\n\t\t\tFROM $table\n\t\t\tINNER JOIN poller_output_boost_local_data_ids AS bpt\n\t\t\tON $table.local_data_id = bpt.local_data_id\n\t\t\tINNER JOIN data_local AS dl\n\t\t\tON $table.local_data_id = dl.id\n\t\t\tWHERE bpt.local_data_id <= $last_id\n\t\t\tAND bpt.process_handler = $child\";\n\t}\n\n\t$query_string = $query_string . $sub_query_string . ') t ' . $query_string_suffix;\n\n\tboost_timer('get_records', BOOST_TIMER_START);\n\t$results = db_fetch_assoc($query_string);\n\tboost_timer('get_records', BOOST_TIMER_END);\n\n\t/* log memory */\n\tif ($get_memory) {\n\t\t$cur_memory = memory_get_usage();\n\n\t\tif ($cur_memory > $memory_used) {\n\t\t\t$memory_used = $cur_memory;\n\t\t}\n\t}\n\n\tif (cacti_sizeof($results)) {\n\t\t/* create an array keyed off of each .rrd file */\n\t\t$local_data_id  = -1;\n\t\t$time           = -1;\n\t\t$buflen         = 0;\n\t\t$outarray       = array();\n\t\t$locked         = false;\n\t\t$last_update    = -1;\n\t\t$reset_template = true;\n\n\t\t$unused_data_source_names = array();\n\n\t\t/* we are going to blow away all record if ok */\n\t\t$vals_in_buffer = 0;\n\n\t\tboost_timer('results_cycle', BOOST_TIMER_START);\n\n\t\t/* go through each poller_output_boost entries and process */\n\t\tforeach ($results as $item) {\n\t\t\tif ($local_data_id == $item['local_data_id'] && cacti_sizeof($unused_data_source_names) && isset($unused_data_source_names[$item['rrd_name']])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$item['timestamp'] = trim($item['timestamp']);\n\n\t\t\tif (!$locked) {\n\t\t\t\t/* acquire lock in order to prevent race conditions, only a problem pre-rrdtool 1.5 */\n\t\t\t\tif (cacti_version_compare($rrdtool_version, '1.5', '<')) {\n\t\t\t\t\twhile (!db_fetch_cell(\"SELECT GET_LOCK('boost.single_ds.\" . $item['local_data_id'] . \"', 1)\")) {\n\t\t\t\t\t\tusleep(50000);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$current_lock = $item['local_data_id'];\n\n\t\t\t\t$locked = true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * if the local_data_id changes, we need to flush the buffer\n\t\t\t * and discover the template for the next RRDfile.\n\t\t\t */\n\t\t\tif ($local_data_id != $item['local_data_id']) {\n\t\t\t\t$unused_data_source_names = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dtr.data_source_name\n\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\t\t\t\tON dtr.id = gti.task_item_id\n\t\t\t\t\t\tWHERE dtr.local_data_id = ?\n\t\t\t\t\t\tAND gti.task_item_id IS NULL',\n\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t'data_source_name', 'data_source_name'\n\t\t\t\t);\n\t\t\t\tif (cacti_sizeof($unused_data_source_names) && isset($unused_data_source_names[$item['rrd_name']])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$reset_template = true;\n\n\t\t\t\tif (isset($nt_rrd_field_names)) {\n\t\t\t\t\tunset($nt_rrd_field_names);\n\t\t\t\t}\n\n\t\t\t\t/* release the previous lock */\n\t\t\t\tif (cacti_version_compare($rrdtool_version, '1.5', '<')) {\n\t\t\t\t\tdb_execute(\"SELECT RELEASE_LOCK('boost.single_ds.$local_data_id')\");\n\t\t\t\t}\n\n\t\t\t\t$current_lock = false;\n\n\t\t\t\t/* acquire lock in order to prevent race conditions, only a problem pre-rrdtool 1.5 */\n\t\t\t\tif (cacti_version_compare($rrdtool_version, '1.5', '<')) {\n\t\t\t\t\twhile (!db_fetch_cell(\"SELECT GET_LOCK('boost.single_ds.\" . $item['local_data_id'] . \"', 1)\")) {\n\t\t\t\t\t\tusleep(50000);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$current_lock = $item['local_data_id'];\n\n\t\t\t\t/* update the rrd for the previous local_data_id */\n\t\t\t\tif ($vals_in_buffer) {\n\t\t\t\t\t/* place the latest update at the end of the output array */\n\t\t\t\t\t$outarray[] = $tv_tmpl;\n\n\t\t\t\t\t/* new process output function */\n\t\t\t\t\tboost_process_output($local_data_id, $outarray, $rrd_path, $rrd_tmplp, $rrdtool_pipe);\n\n\t\t\t\t\t$buflen         = 0;\n\t\t\t\t\t$vals_in_buffer = 0;\n\t\t\t\t\t$outarray       = array();\n\t\t\t\t}\n\n\t\t\t\t/* reset the rrd file path and templates, assume non multi output */\n\t\t\t\tboost_timer('rrd_filename_and_template', BOOST_TIMER_START);\n\t\t\t\t$rrd_data     = boost_get_rrd_filename_and_template($item['local_data_id']);\n\t\t\t\t$rrd_tmpl     = $rrd_data['rrd_template'];\n\t\t\t\t$template_len = strlen($rrd_tmpl);\n\n\t\t\t\t/**\n\t\t\t\t * take the template and turn into an associative array of\n\t\t\t\t * data source names with a default of 'U' for each value\n\t\t\t\t * and creating the first value to include the timestamp.\n\t\t\t\t * We will use this for missing data detection.\n\t\t\t\t */\n\t\t\t\t$rrd_tmplp   = array_fill_keys(array_values(explode(':', $rrd_tmpl)), 'U');\n\t\t\t\t$rrd_tmplpts = array('timestamp' => '') + $rrd_tmplp;\n\n\t\t\t\t$rrd_path    = $rrd_data['rrd_path'];\n\t\t\t\tboost_timer('rrd_filename_and_template', BOOST_TIMER_END);\n\n\t\t\t\tif (cacti_version_compare(get_rrdtool_version(), '1.5', '<')) {\n\t\t\t\t\tboost_timer('rrd_lastupdate', BOOST_TIMER_START);\n\t\t\t\t\t$last_update = boost_rrdtool_get_last_update_time($rrd_path, $rrdtool_pipe);\n\t\t\t\t\tboost_timer('rrd_lastupdate', BOOST_TIMER_END);\n\t\t\t\t} else {\n\t\t\t\t\tboost_timer('rrd_lastupdate', BOOST_TIMER_START);\n\t\t\t\t\t$last_update = 0;\n\t\t\t\t\tboost_timer('rrd_lastupdate', BOOST_TIMER_END);\n\t\t\t\t}\n\n\t\t\t\t$local_data_id = $item['local_data_id'];\n\t\t\t\t$time          = $item['timestamp'];\n\n\t\t\t\tif ($time > $last_update || cacti_version_compare(get_rrdtool_version(), '1.5', '>=')) {\n\t\t\t\t\t$buflen += strlen(' ' . $time);\n\t\t\t\t}\n\n\t\t\t\t$tv_tmpl = $rrd_tmplpts;\n\t\t\t} else {\n\t\t\t\t$reset_template = false;\n\t\t\t}\n\n\t\t\t/* don't generate error messages if the RRD has already been updated */\n\t\t\tif ($time < $last_update && cacti_version_compare(get_rrdtool_version(), '1.5', '<')) {\n\t\t\t\tcacti_log(\"WARNING: Stale Poller Data Found! Item Time:'\" . $time . \"', RRD Time:'\" . $last_update . \"' Ignoring Value!\", true, 'BOOST', POLLER_VERBOSITY_HIGH);\n\n\t\t\t\t$value = 'DNP';\n\t\t\t} else {\n\t\t\t\t$value = trim($item['output']);\n\t\t\t}\n\n\t\t\tif ($time != $item['timestamp']) {\n\t\t\t\tif ($vals_in_buffer > 0) {\n\t\t\t\t\t/* place the latest update at the end of the output array */\n\t\t\t\t\t$outarray[] = $tv_tmpl;\n\t\t\t\t}\n\n\t\t\t\tif ($buflen > $upd_string_len) {\n\t\t\t\t\t/* new process output function */\n\t\t\t\t\tboost_process_output($local_data_id, $outarray, $rrd_path, $rrd_tmplp, $rrdtool_pipe);\n\n\t\t\t\t\t$buflen         = 0;\n\t\t\t\t\t$vals_in_buffer = 0;\n\t\t\t\t\t$outarray       = array();\n\t\t\t\t}\n\n\t\t\t\t$time    = $item['timestamp'];\n\t\t\t\t$tv_tmpl = $rrd_tmplpts;\n\t\t\t}\n\n\t\t\tif (empty($tv_tmpl['timestamp']) && $value != 'DNP') {\n\t\t\t\t$tv_tmpl['timestamp'] = $item['timestamp'];\n\t\t\t\t$buflen += strlen($item['timestamp']) + 1;\n\t\t\t}\n\n\t\t\t/* single one value output */\n\t\t\tif (strpos($value, 'DNP') !== false) {\n\t\t\t\t/* continue, bad time */\n\t\t\t} elseif ((is_numeric($value)) || ($value == 'U' && $item['rrd_name'] !== '')) {\n\t\t\t\t$tv_tmpl[$item['rrd_name']] = $value;\n\t\t\t\t$buflen += strlen(':' . $value);\n\t\t\t\t$vals_in_buffer++;\n\t\t\t} elseif ((function_exists('is_hexadecimal')) && (is_hexadecimal($value))) {\n\t\t\t\t$tval = hexdec($value);\n\t\t\t\t$tv_tmpl[$item['rrd_name']] = $tval;\n\t\t\t\t$buflen += strlen(':' . $tval);\n\t\t\t\t$vals_in_buffer++;\n\t\t\t} elseif (strpos($value, ':') !== false) {\n\t\t\t\t/* break out multiple value output to an array */\n\t\t\t\t$values = preg_split('/\\s+/', $value);\n\n\t\t\t\tif (!$reset_template) {\n\t\t\t\t\t$rrd_tmpl = '';\n\t\t\t\t} else {\n\t\t\t\t\tif ($item['data_template_id'] > 0) {\n\t\t\t\t\t\t$unused_data_source_names = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dtr.data_source_name\n\t\t\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\t\tON dtr.id = gti.task_item_id\n\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ? AND gti.task_item_id IS NULL',\n\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t'data_source_name', 'data_source_name'\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$unused_data_source_names = array();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tforeach($values as $value) {\n\t\t\t\t\t$matches = explode(':', $value);\n\n\t\t\t\t\tif (cacti_sizeof($matches) == 2) {\n\t\t\t\t\t\tif (isset($rrd_field_names[$item['data_template_id'] . '_' . $matches[0]])) {\n\t\t\t\t\t\t\t$field = $rrd_field_names[$item['data_template_id'] . '_' . $matches[0]]['data_source_name'];\n\n\t\t\t\t\t\t\tif (cacti_sizeof($unused_data_source_names) && isset($unused_data_source_names[$field])) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($reset_template) {\n\t\t\t\t\t\t\t\tboost_debug(\"Parsed MULTI output field in path 1 '\" . $matches[0] . \"' [map \" . $field . '->' . $field . ']');\n\n\t\t\t\t\t\t\t\t$rrd_tmpl .= ($rrd_tmpl != '' ? ':':'') . $field;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (is_numeric($matches[1]) || ($matches[1] == 'U')) {\n\t\t\t\t\t\t\t\t$tv_tmpl[$field] = $matches[1];\n\t\t\t\t\t\t\t\t$buflen += strlen(':' . $matches[1]);\n\t\t\t\t\t\t\t} elseif ((function_exists('is_hexadecimal')) && (is_hexadecimal($matches[1]))) {\n\t\t\t\t\t\t\t\t$tval = hexdec($matches[1]);\n\t\t\t\t\t\t\t\t$tv_tmpl[$field] = $tval;\n\t\t\t\t\t\t\t\t$buflen += strlen(':' . $tval);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$tv_tmpl[$field] = 'U';\n\t\t\t\t\t\t\t\t$buflen += 2;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$vals_in_buffer++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * We have to check for Non-Templated Data Source first as they may not include\n\t\t\t\t\t\t\t * a graph.  So, for that case, we need the RRDfile to include all data sources\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif ($item['data_template_id'] > 0) {\n\t\t\t\t\t\t\t\t$nt_rrd_field_names = array_rekey(\n\t\t\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dif.data_name\n\t\t\t\t\t\t\t\t\t\tFROM graph_templates_item AS gti\n\t\t\t\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\t\t\t\tON gti.task_item_id = dtr.id\n\t\t\t\t\t\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\t\t\t\t\t\tON dtr.data_input_field_id=dif.id\n\t\t\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t\t\t'data_name', 'data_source_name'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$nt_rrd_field_names = array_rekey(\n\t\t\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dif.data_name\n\t\t\t\t\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\t\t\t\t\t\tON dtr.data_input_field_id=dif.id\n\t\t\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ?',\n\t\t\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t\t\t'data_name', 'data_source_name'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($nt_rrd_field_names)) {\n\t\t\t\t\t\t\t\tif (isset($nt_rrd_field_names[$matches[0]])) {\n\t\t\t\t\t\t\t\t\t$field = $nt_rrd_field_names[$matches[0]];\n\n\t\t\t\t\t\t\t\t\tif (cacti_sizeof($unused_data_source_names) && isset($unused_data_source_names[$field])) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ($reset_template) {\n\t\t\t\t\t\t\t\t\t\tboost_debug(\"Parsed MULTI output field '\" . $matches[0] . \"' [map \" . $matches[1] . '->' . $field . ']');\n\n\t\t\t\t\t\t\t\t\t\t$rrd_tmpl .= ($rrd_tmpl != '' ? ':':'') . $field;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (is_numeric($matches[1]) || ($matches[1] == 'U')) {\n\t\t\t\t\t\t\t\t\t\t$tv_tmpl[$field] = $matches[1];\n\t\t\t\t\t\t\t\t\t\t$buflen += strlen(':' . $matches[1]);\n\t\t\t\t\t\t\t\t\t} elseif ((function_exists('is_hexadecimal')) && (is_hexadecimal($matches[1]))) {\n\t\t\t\t\t\t\t\t\t\t$tval = hexdec($matches[1]);\n\t\t\t\t\t\t\t\t\t\t$tv_tmpl[$field] = $tval;\n\t\t\t\t\t\t\t\t\t\t$buflen += strlen(':' . $tval);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$tv_tmpl[$field] = 'U';\n\t\t\t\t\t\t\t\t\t\t$buflen += 2;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tboost_debug(\"Parsed MULTI output field '\" . $matches[0] . \"' [map \" . $matches[1] . '->' . $nt_rrd_field_names[$matches[1]] . ']');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$vals_in_buffer++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($reset_template) {\n\t\t\t\t\tif ($item['data_template_id'] > 0) {\n\t\t\t\t\t\t$unused_data_source_names = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dtr.data_source_name\n\t\t\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\t\tON dtr.id = gti.task_item_id\n\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ? AND gti.task_item_id IS NULL',\n\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t'data_source_name', 'data_source_name'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t$nt_rrd_field_names = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dif.data_name\n\t\t\t\t\t\t\t\tFROM graph_templates_item AS gti\n\t\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tON gti.task_item_id = dtr.id\n\t\t\t\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\t\t\t\tON dtr.data_input_field_id=dif.id\n\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ?',\n\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t'data_name', 'data_source_name'\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$unused_data_source_names = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dtr.data_source_name\n\t\t\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ? AND gti.task_item_id IS NULL',\n\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t'data_source_name', 'data_source_name'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t$nt_rrd_field_names = array_rekey(\n\t\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dif.data_name\n\t\t\t\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\t\t\t\tON dtr.data_input_field_id=dif.id\n\t\t\t\t\t\t\t\tWHERE dtr.local_data_id = ?',\n\t\t\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t\t\t'data_name', 'data_source_name'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$expected = '';\n\n\t\t\t\tif (cacti_sizeof($nt_rrd_field_names)) {\n\t\t\t\t\tforeach($nt_rrd_field_names as $field) {\n\t\t\t\t\t\tif (cacti_sizeof($unused_data_source_names) && isset($unused_data_source_names[$field])) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$expected .= ($expected != '' ? ' ':'') . \"$field:value\";\n\n\t\t\t\t\t\tif ($reset_template) {\n\t\t\t\t\t\t\t$rrd_tmpl .= ($rrd_tmpl != '' ? ':':'') . $field;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$tv_tmpl[$field] = 'U';\n\t\t\t\t\t\t$buflen += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcacti_log(sprintf('WARNING: Invalid output! MULTI DS[%d] Encountered [%s] Expected[%s]', $item['local_data_id'], $value, $expected), true, 'POLLER');\n\t\t\t}\n\t\t}\n\n\t\t/* process the last rrdupdate if applicable */\n\t\tif ($vals_in_buffer) {\n\t\t\t/* place the latest update at the end of the output array */\n\t\t\t$outarray[] = $tv_tmpl;\n\n\t\t\tboost_process_output($local_data_id, $outarray, $rrd_path, $rrd_tmplp, $rrdtool_pipe);\n\t\t}\n\n\t\t/* release the last lock */\n\t\tif (cacti_version_compare(get_rrdtool_version(), '1.5', '<')) {\n\t\t\tdb_execute(\"SELECT RELEASE_LOCK('boost.single_ds.\" . $item['local_data_id'] . \"')\");\n\t\t}\n\n\t\t$current_lock = false;\n\n\t\tboost_timer('results_cycle', BOOST_TIMER_END);\n\t}\n\n\t/* remove the entries from the table */\n\tboost_timer('delete', BOOST_TIMER_START);\n\n\tdb_execute_prepared('DELETE FROM poller_output_boost_local_data_ids\n\t\tWHERE local_data_id <= ?\n\t\tAND process_handler = ?',\n\t\tarray($last_id, $child));\n\n\tboost_timer('delete', BOOST_TIMER_END);\n\n\t/* restore original error handler */\n\trestore_error_handler();\n\n\treturn cacti_sizeof($results);\n}\n\nfunction boost_process_output($local_data_id, $outarray, $rrd_path, $rrd_tmplp, $rrdtool_pipe) {\n\t$outbuf = '';\n\n\tif (cacti_sizeof($outarray)) {\n\t\tforeach ($outarray as $tsdata) {\n\t\t\t$outbuf .= ($outbuf != '' ? ' ':'') . implode(':', $tsdata);\n\t\t}\n\t}\n\n\t$rrd_tmpl = implode(':', array_keys($rrd_tmplp));\n\n\tboost_debug(\"Updating Local Data Id:'$local_data_id', Template:\" . $rrd_tmpl . ', Output:' . $outbuf);\n\n\tboost_timer('rrdupdate', BOOST_TIMER_START);\n\t$return_value = boost_rrdtool_function_update($local_data_id, $rrd_path, $rrd_tmpl, $outbuf, $rrdtool_pipe);\n\tboost_timer('rrdupdate', BOOST_TIMER_END);\n\n\t/* check return status for delete operation */\n\tif (trim($return_value) != 'OK' && $return_value != '') {\n\t\tcacti_log(\"WARNING: RRD Update Warning '\" . $return_value . \"' for Local Data ID '$local_data_id'\", true, 'BOOST');\n\t}\n}\n\nfunction boost_log_statistics($rrd_updates) {\n\tglobal $start, $boost_stats_log, $verbose;\n\n\t/* take time and log performance data */\n\t$end = microtime(true);\n\n\t$cacti_stats = sprintf(\n\t\t'Time:%01.2f ' .\n\t\t'RRDUpdates:%s',\n\t\tround($end - $start, 2),\n\t\t$rrd_updates);\n\n\t/* log to the database */\n\tset_config_option('stats_boost', $cacti_stats);\n\n\t/* log to the logfile */\n\tcacti_log('BOOST STATS: ' . $cacti_stats , true, 'SYSTEM');\n\n\t$output = array();\n\t$order  = array(\n\t\t'RRDUpdates',\n\t\t'TotalTime',\n\t\t'get_records',\n\t\t'results_cycle',\n\t\t'rrd_filename_and_template',\n\t\t'rrd_lastupdate',\n\t\t'rrdupdate',\n\t\t'delete'\n\t);\n\n\t$processes = read_config_option('boost_parallel');\n\n\tif (empty($processes)) {\n\t\t$processes = 1;\n\t}\n\n\t$stats = db_fetch_assoc('SELECT value\n\t\tFROM settings\n\t\tWHERE name LIKE \"stats_detail_boost_%\"');\n\n\tif (cacti_sizeof($stats)) {\n\t\tforeach ($stats as $stat) {\n\t\t\t$stat = json_decode($stat['value']);\n\n\t\t\tforeach ($stat as $key => $value) {\n\t\t\t\tif (isset($output[$key])) {\n\t\t\t\t\t$output[$key] += $value;\n\t\t\t\t} else {\n\t\t\t\t\t$output[$key]  = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$outstr = '';\n\n\t\tforeach ($order as $key) {\n\t\t\tif ($key == 'TotalTime') {\n\t\t\t\t$outstr .= ($outstr != '' ? ', ':'') . \"$key:\" . round($end - $start, 2);\n\t\t\t} elseif ($key == 'RRDUpdates') {\n\t\t\t\t$outstr .= ($outstr != '' ? ', ':'') . \"$key:\" . round($output[$key], 0);\n\t\t\t} else {\n\t\t\t\t$outstr .= ($outstr != '' ? ', ':'') . \"$key:\" . round($output[$key] / $processes, 0);\n\t\t\t}\n\t\t}\n\n\t\t/* log to the database */\n\t\tset_config_option('stats_detail_boost', str_replace(',', '', $outstr));\n\n\t\t/* log to the logfile */\n\t\tif ($verbose) {\n\t\t\tcacti_log('BOOST DETAIL STATS: ' . $outstr, true, 'SYSTEM');\n\t\t}\n\t}\n\n\t/* prune old process statistics if the number has changed */\n\t$processes = read_config_option('boost_parallel');\n\t$stats     = db_fetch_assoc('SELECT * FROM settings WHERE name LIKE \"stats_boost_%\"');\n\n\tif (cacti_sizeof($stats)) {\n\t\tforeach ($stats as $stat) {\n\t\t\t$process = str_replace('stats_boost_', '', $stat['name']);\n\n\t\t\tif ($process > $processes) {\n\t\t\t\tdb_execute_prepared('DELETE FROM settings WHERE name = ?', array('stats_boost_' . $process));\n\t\t\t}\n\t\t}\n\t}\n\n\t/* prune all detailed stats */\n\tdb_execute('DELETE FROM settings WHERE name LIKE \"stats_detail_boost_%\"');\n}\n\nfunction boost_log_child_statistics($rrd_updates, $child) {\n\tglobal $start, $boost_stats_log, $verbose;\n\n\t/* take time and log performance data */\n\t$end = microtime(true);\n\n\t$cacti_stats = sprintf(\n\t\t'Time:%01.2f ' .\n\t\t'ProcessNumber:%s ' .\n\t\t'RRDUpdates:%s',\n\t\tround($end - $start, 2),\n\t\t$child,\n\t\t$rrd_updates);\n\n\t/* log to the database */\n\tset_config_option('stats_boost_' . $child, $cacti_stats);\n\n\t/* log to the logfile */\n\tcacti_log('BOOST STATS: ' . $cacti_stats , true, 'SYSTEM');\n\n\tif (isset($boost_stats_log)) {\n\t\t$overhead     = boost_timer_get_overhead();\n\t\t$output       = array();\n\t\t$timer_cycles = 0;\n\n\t\tforeach ($boost_stats_log as $area => $entry) {\n\t\t\tif (isset($entry[BOOST_TIMER_TOTAL])) {\n\t\t\t\t$output[$area] = round($entry[BOOST_TIMER_TOTAL] - (($overhead * $entry[BOOST_TIMER_CYCLES]) / BOOST_TIMER_OVERHEAD_MULTIPLIER), 2);\n\t\t\t}\n\n\t\t\t$timer_cycles += $entry[BOOST_TIMER_CYCLES];\n\t\t}\n\n\t\tif (cacti_sizeof($output)) {\n\t\t\t$output['RRDUpdates'] = $rrd_updates;\n\t\t\t$output['Process']    = $child;\n\t\t\t$output['TotalTime']  = round($end - $start, 0);\n\n\t\t\t$timer_overhead = round((($overhead * $timer_cycles) / BOOST_TIMER_OVERHEAD_MULTIPLIER), 0);\n\n\t\t\tif ($timer_overhead > 0) {\n\t\t\t\t$output['timer_overhead'] = $timer_overhead;\n\t\t\t}\n\n\t\t\t$output = json_encode($output);\n\n\t\t\t/* log to the database */\n\t\t\tset_config_option('stats_detail_boost_' . $child, $output);\n\n\t\t\t/* log to the logfile */\n\t\t\tif ($verbose) {\n\t\t\t\tcacti_log('BOOST DETAIL STATS: ' . $output, true, 'SYSTEM');\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction boost_purge_cached_png_files($forcerun) {\n\t/* remove stale png's from the cache.  I consider png's stale after 1 hour */\n\tif ((read_config_option('boost_png_cache_enable') == 'on') || $forcerun) {\n\t\t$cache_directory = read_config_option('boost_png_cache_directory');\n\t\t$remove_time     = time() - 3600;\n\n\t\t$directory_contents = array();\n\n\t\tif (is_dir($cache_directory)) {\n\t\t\tif ($handle = opendir($cache_directory)) {\n\t\t\t\t/* This is the correct way to loop over the directory. */\n\t\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t\t$directory_contents[] = $file;\n\t\t\t\t}\n\n\t\t\t\tclosedir($handle);\n\t\t\t}\n\n\t\t\t/* remove age old files */\n\t\t\tif (cacti_sizeof($directory_contents)) {\n\t\t\t\t/* goto the cache directory */\n\t\t\t\tchdir($cache_directory);\n\n\t\t\t\t/* check and fry as applicable */\n\t\t\t\tforeach ($directory_contents as $file) {\n\t\t\t\t\tif (is_writable($file)) {\n\t\t\t\t\t\t$modify_time = filemtime($file);\n\n\t\t\t\t\t\tif ($modify_time < $remove_time) {\n\t\t\t\t\t\t\t/* only remove jpeg's and png's */\n\t\t\t\t\t\t\tif ((substr_count(strtolower($file), '.png')) ||\n\t\t\t\t\t\t\t\t(substr_count(strtolower($file), '.jpg'))) {\n\t\t\t\t\t\t\t\tunlink($file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* do NOT run this script through a web browser */\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Boost RRD Update Poller, Version $version \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\n/*\tdisplay_help - displays the usage of the function */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_boost.php [--verbose] [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's performance boosting poller.  This poller will purge the boost cache periodically.  You may\\n\";\n\tprint \"force the processing of the boost cache by using the --force option.\\n\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --verbose - Show details logs at the command line\\n\";\n\tprint \"    --force   - Force the execution of a update process\\n\";\n\tprint \"    --debug   - Display verbose output during execution\\n\\n\";\n}\n"
        },
        {
          "name": "poller_commands.php",
          "type": "blob",
          "size": 12.806640625,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\nini_set('max_runtime', '-1');\nini_set('memory_limit', '-1');\n\n/* we are not talking to the browser */\ndefine('MAX_RECACHE_RUNTIME', 1800);\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_device.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_data_source.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_graph.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_tree.php');\nrequire_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/html_form_template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\nrequire_once(CACTI_PATH_LIBRARY . '/sort.php');\nrequire_once(CACTI_PATH_LIBRARY . '/template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/utility.php');\n\n$poller_id = $config['poller_id'];\n$debug     = false;\n$host_id   = false;\n$forcerun  = false;\n$type      = 'master';\n$threads   = read_config_option('commands_processes');\n\nglobal $poller_db_cnn_id, $remote_db_cnn_id, $type, $host_id, $poller_id;\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '-H':\n\t\t\tcase '--help':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\t\t\tcase '--poller':\n\t\t\tcase '-p':\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--child':\n\t\t\tcase '-c':\n\t\t\t\t$host_id = $value;\n\t\t\t\t$type    = 'child';\n\n\t\t\t\tbreak;\n\t\t\tcase '-t':\n\t\t\tcase '--threads':\n\t\t\t\t$threads = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--debug':\n\t\t\tcase '-d':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\" . PHP_EOL . PHP_EOL;\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\nif ($debug) {\n\t$verbosity = POLLER_VERBOSITY_LOW;\n} else {\n\t$verbosity = POLLER_VERBOSITY_MEDIUM;\n}\n\n/**\n * Types include\n *\n * master  - the main process launched from the Cacti main poller and will launch child processes\n * child   - a child of the master process from the 'master'\n *\n */\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* Record Start Time */\n$start = microtime(true);\n\n/* send a gentle message to the log and stdout */\ncommands_debug('Polling Starting');\n\nif ($host_id === false) {\n\t$hosts = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT DISTINCT SUBSTRING_INDEX(command, \":\", 1) AS host_id\n\t\t\tFROM poller_command\n\t\t\tWHERE poller_id = ?',\n\t\t\tarray($poller_id), true, $poller_db_cnn_id),\n\t\t'host_id', 'host_id'\n\t);\n\n\tif (cacti_sizeof($hosts)) {\n\t\t/**\n\t\t * Register the master process\n\t\t */\n\t\tif (!register_process_start('commands', 'master', $poller_id, read_config_option('commands_timeout'))) {\n\t\t\texit(0);\n\t\t}\n\n\t\t// Master processing\n\t\tcommands_master_handler($forcerun, $hosts, $threads);\n\n\t\t/* take time to log performance data */\n\t\t$recache = microtime(true);\n\n\t\t$recache_stats = sprintf('Poller:%s RecacheTime:%01.4f DevicesRecached:%s',\t$poller_id, round($recache - $start, 4), cacti_sizeof($hosts));\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tcacti_log('STATS: ' . $recache_stats, true, 'RECACHE');\n\t\t}\n\n\t\t/* insert poller stats into the settings table */\n\t\tdb_execute_prepared('REPLACE INTO settings (name, value) VALUES (?, ?)',\n\t\t\tarray('stats_recache_' . $poller_id, $recache_stats), true, $poller_db_cnn_id);\n\n\t\tunregister_process('commands', 'master', $poller_id);\n\t} else {\n\t\tcacti_log('NOTE: No Poller Commands found for processing', true, 'PCOMMAND', $verbosity);\n\t}\n} else {\n\t/**\n\t * Register the child process\n\t */\n\tif (!register_process_start('commands', 'child', $host_id + 1000, read_config_option('commands_timeout'))) {\n\t\texit(0);\n\t}\n\n\t$last_host_id   = 0;\n\t$first_host     = true;\n\n\t/**\n\t * We will only remove records earlier than this date\n\t */\n\t$max_updated = db_fetch_cell_prepared('SELECT MAX(UNIX_TIMESTAMP(last_updated))\n\t\tFROM poller_command\n\t\tWHERE poller_id = ?\n\t\tAND SUBSTRING_INDEX(command, \":\", 1) = ?',\n\t\tarray($poller_id, $host_id), '', true, $poller_db_cnn_id);\n\n\t/**\n\t * Get the poller command records for the host\n\t */\n\t$poller_commands = db_fetch_assoc_prepared('SELECT action, command,\n\t\tSUBSTRING_INDEX(command, \":\", 1) AS host_id\n\t\tFROM poller_command\n\t\tWHERE poller_id = ?\n\t\tAND last_updated <= FROM_UNIXTIME(?)\n\t\tAND SUBSTRING_INDEX(command, \":\", 1) = ?',\n\t\tarray($poller_id, $max_updated, $host_id), true, $poller_db_cnn_id);\n\n\tif (cacti_sizeof($poller_commands)) {\n\t\tforeach ($poller_commands as $command) {\n\t\t\tswitch ($command['action']) {\n\t\t\t\tcase POLLER_COMMAND_REINDEX:\n\t\t\t\t\tlist($device_id, $data_query_id) = explode(':', $command['command']);\n\n\t\t\t\t\tif ($last_host_id != $device_id) {\n\t\t\t\t\t\t$last_host_id = $device_id;\n\t\t\t\t\t\t$first_host   = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$first_host = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($first_host) {\n\t\t\t\t\t\tcacti_log(\"Device[$device_id] NOTE: Recache Event Detected for Device\", true, 'PCOMMAND');\n\t\t\t\t\t}\n\n\t\t\t\t\tcacti_log(\"Device[$device_id] DQ[$data_query_id] RECACHE: Recache for Device started.\", true, 'PCOMMAND', $verbosity);\n\t\t\t\t\trun_data_query($device_id, $data_query_id);\n\t\t\t\t\tcacti_log(\"Device[$device_id] DQ[$data_query_id] RECACHE: Recached successfully.\", true, 'PCOMMAND', $verbosity);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase POLLER_COMMAND_PURGE:\n\t\t\t\t\t$device_id = $command['command'];\n\n\t\t\t\t\tapi_device_purge_from_remote($device_id, $poller_id);\n\t\t\t\t\tcacti_log(\"Device[$device_id] PURGE: Purged successfully.\", true, 'PCOMMAND', $verbosity);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcacti_log('ERROR: Unknown poller command issued', true, 'PCOMMAND');\n\t\t\t}\n\n\t\t\t/* record current_time */\n\t\t\t$current = microtime(true);\n\n\t\t\t/* end if runtime has been exceeded */\n\t\t\tif (($current - $start) > MAX_RECACHE_RUNTIME) {\n\t\t\t\tcacti_log(\"ERROR: Poller Command processing timed out after processing '$command'\", true, 'PCOMMAND');\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tdb_execute_prepared('DELETE FROM poller_command\n\t\t\tWHERE poller_id = ?\n\t\t\tAND SUBSTRING_INDEX(command, \":\", 1) = ?\n\t\t\tAND last_updated <= FROM_UNIXTIME(?)',\n\t\t\tarray($poller_id, $host_id, $max_updated), true, $poller_db_cnn_id);\n\t}\n\n\tunregister_process('commands', 'child', $host_id + 1000);\n}\n\nfunction commands_master_handler($forcerun, &$hosts, $threads) {\n\tcommands_debug('There are ' . cacti_sizeof($hosts) . ' to reindex');\n\n\tforeach ($hosts as $id) {\n\t\t/* run the daily stats */\n\t\tcommands_debug(\"Launching Host ID $id\");\n\t\tcommands_launch_child($id);\n\n\t\t/* Wait for if there are 50 processes running */\n\t\twhile (true) {\n\t\t\t$running = commands_processes_running();\n\n\t\t\tif ($running >= $threads) {\n\t\t\t\tcommands_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\t\tsleep(2);\n\t\t\t} else {\n\t\t\t\tcommands_debug(sprintf('%s Processes Running, Launching more processes.', $running));\n\t\t\t\tusleep(500000);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$starting = true;\n\n\twhile (true) {\n\t\tif ($starting) {\n\t\t\tsleep(5);\n\t\t\t$starting = false;\n\t\t}\n\n\t\t$running = commands_processes_running();\n\n\t\tif ($running > 0) {\n\t\t\tcommands_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\tsleep(2);\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * commands_launch_child - this function will launch collector children based upon\n *   the maximum number of threads and the process type\n *\n * @param  (int)  $host_id - The Cacti host_id\n *\n * @return (void)\n */\nfunction commands_launch_child($host_id) {\n\tglobal $config, $seebug;\n\n\t$php_binary = read_config_option('path_php_binary');\n\n\tcommands_debug(sprintf('Launching Commands Process Number %s for Type %s', $host_id, 'child'));\n\n\tcacti_log(sprintf('NOTE: Launching Commands Process Number %s for Type %s', $host_id, 'child'), false, 'CLEANUP', POLLER_VERBOSITY_MEDIUM);\n\n\texec_background($php_binary, CACTI_PATH_BASE . \"/poller_commands.php --child=$host_id\" . ($seebug ? ' --debug':''));\n}\n\n/**\n * commands_processes_running - given a type, determine the number\n *   of sub-type or children that are currently running\n *\n * @return (int) The number of running processes\n */\nfunction commands_processes_running() {\n\t$running = db_fetch_cell('SELECT COUNT(*)\n\t\tFROM processes\n\t\tWHERE tasktype = \"commands\"\n\t\tAND taskname = \"child\"');\n\n\tif ($running == 0) {\n\t\treturn 0;\n\t}\n\n\treturn $running;\n}\n\n/**\n * commands_debug - this simple routine prints a standard message to the console\n *   when running in debug mode.\n *\n * @param  (string)  $message - The message to display\n *\n * @return (void)\n */\nfunction commands_debug($message) {\n\tglobal $seebug;\n\n\tif ($seebug) {\n\t\tprint 'COMMANDS: ' . $message . PHP_EOL;\n\t}\n}\n\n/**\n * sig_handler - provides a generic means to catch exceptions to the Cacti log.\n *\n * @param  (int) $signo - the signal that was thrown by the interface.\n *\n * @return (void)\n */\nfunction sig_handler($signo) {\n\tglobal $type, $host_id, $poller_id;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: RRDfile Cleanup Poller terminated by user', false, 'CLEANUP');\n\n\t\t\tif (strpos($type, 'master') !== false) {\n\t\t\t\tcommands_kill_running_processes();\n\t\t\t}\n\n\t\t\tif ($type == 'master') {\n\t\t\t\tunregister_process('commands', $type, $poller_id, getmypid());\n\t\t\t} else {\n\t\t\t\tunregister_process('commands', $type, $host_id + 1000, getmypid());\n\t\t\t}\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n\n/**\n * commands_kill_running_processes - this function is part of an interrupt\n *   handler to kill children processes when the parent is killed\n *\n * @return (void)\n */\nfunction commands_kill_running_processes() {\n\tglobal $type;\n\n\t$processes = db_fetch_assoc_prepared('SELECT *\n        FROM processes\n        WHERE tasktype = \"commands\"\n        AND taskname IN (\"child\")\n        AND pid != ?',\n\t\tarray(getmypid()));\n\n\tif (cacti_sizeof($processes)) {\n\t\tforeach ($processes as $p) {\n\t\t\tcacti_log(sprintf('WARNING: Killing Commands %s PID %d due to another due to signal or overrun.', ucfirst($p['taskname']), $p['pid']), false, 'CLEANUP');\n\t\t\tposix_kill($p['pid'], SIGTERM);\n\n\t\t\tunregister_process($p['tasktype'], $p['taskname'], $p['taskid'], $p['pid']);\n\t\t}\n\t}\n}\n\n/**\n * display_version - displays version information\n *\n * @return (void)\n */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Poller Commands Poller, Version $version \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/**\n * display_help - displays help information\n *\n * @return (void)\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL;\n\tprint 'usage: poller_commands.php [--poller=ID] [--debug]' . PHP_EOL . PHP_EOL;\n\tprint 'Cacti\\'s Commands Poller.  This poller can receive specifically crafted commands from' . PHP_EOL;\n\tprint 'either the Cacti UI, or from the main poller, and then run them in the background.' . PHP_EOL . PHP_EOL;\n\tprint 'Optional:' . PHP_EOL;\n\tprint '  --poller=ID - The poller to run as.  Defaults to the system poller' . PHP_EOL;\n\tprint '  --threads=N - Override the System Processes setting and use N processes' . PHP_EOL;\n\tprint '  --debug     - Display verbose output during execution' . PHP_EOL . PHP_EOL;\n}\n"
        },
        {
          "name": "poller_dsstats.php",
          "type": "blob",
          "size": 15.4658203125,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/graph_variables.php');\nrequire_once(CACTI_PATH_LIBRARY . '/dsstats.php');\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug          = false;\n$force          = false;\n$fpartition     = false; // Only to be used for QA\n$type           = 'pmaster';\n$thread_id      = 0;\n\nglobal $rrd_files, $total_system, $total_user, $total_real, $total_dsses;\nglobal $user_time, $system_time, $real_time;\n\n(double) $total_system = 0;\n(double) $total_user   = 0;\n(double) $total_real   = 0;\n$total_dsses  = 0;\n\n$system_time  = 0;\n$user_time    = 0;\n$real_time    = 0;\n\n$rrd_files    = 0;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-p':\n\t\t\tcase '--partition':\n\t\t\t\t$fpartition = true;\n\n\t\t\tcase '--type':\n\t\t\t\t$type = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--child':\n\t\t\t\t$thread_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-v':\n\t\t\tcase '-V':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '--help':\n\t\t\tcase '-h':\n\t\t\tcase '-H':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . PHP_EOL . PHP_EOL;\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n/**\n * Types include\n *\n * pmaster  - the main process launched from the Cacti main poller and will launch child processes\n * pchild   - a child of the master process from the 'master'\n *\n * bmaster  - a boost master process, will perform launch bchild processes\n * bchild   - a child of the boost master process, will launch boost collection\n *\n * dmaster - a daily master process, will perform launch bchild processes\n * dchild  - a child of the daily master process, will launch boost collection\n *\n */\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* take time and log performance data */\n$start = microtime(true);\n\n/* let's give this script lot of time to run for ever */\nini_set('max_execution_time', '0');\ndsstats_memory_limit();\n\n/* send a gentle message to the log and stdout */\ndsstats_debug('Polling Starting');\n\n/* clear the cache if there has been a change in key settings */\nif (read_config_option('dsstats_mode') != read_config_option('dsstats_temp_mode') ||\n\tread_config_option('dsstats_peak') != read_config_option('dsstats_temp_peak')) {\n\tdb_execute('TRUNCATE TABLE data_source_stats_command_cache');\n}\n\n/* silently end if the registered process is still running */\nif (!$force) {\n\tif (!register_process_start('dsstats', $type, $thread_id, read_config_option('dsstats_timeout'))) {\n\t\texit(0);\n\t}\n}\n\n// Collect data as determined by the type\nswitch ($type) {\n\tcase 'pmaster':\n\t\tif (read_config_option('dsstats_enable') == 'on' || $force) {\n\t\t\tdsstats_master_handler($type, $force, $fpartition);\n\t\t}\n\n\t\tbreak;\n\tcase 'bmaster': // Launched at the end of boost\n\tcase 'dmaster': // Launched inside this script for daily processing\n\t\t/* run the daily stats */\n\t\tdsstats_launch_children($type);\n\n\t\t/* Wait for all processes to continue */\n\t\twhile ($running = dsstats_processes_running($type)) {\n\t\t\tdsstats_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\tsleep(2);\n\t\t}\n\n\t\tbreak;\n\tcase 'child':  // Launched by the master process\n\tcase 'bchild': // Launched by the boost process\n\t\t$child_start = microtime(true);\n\n\t\tdsstats_get_and_store_ds_avgpeak_values('daily', $type, $thread_id);\n\n\t\t$total_time = microtime(true) - $child_start;\n\n\t\tdsstats_log_child_stats($type, $thread_id, $total_time);\n\n\t\tbreak;\n\tcase 'dchild': // Launched by the daily master process\n\t\t$child_start = microtime(true);\n\n\t\tdsstats_debug(sprintf('Daily Stats Master Child %s Executing', $thread_id));\n\t\tdsstats_get_and_store_ds_avgpeak_values('weekly', $type, $thread_id);\n\t\tdsstats_get_and_store_ds_avgpeak_values('monthly', $type, $thread_id);\n\t\tdsstats_get_and_store_ds_avgpeak_values('yearly', $type, $thread_id);\n\n\t\t$total_time = microtime(true) - $child_start;\n\n\t\tdsstats_log_child_stats($type, $thread_id, $total_time);\n\n\t\tbreak;\n}\n\ndsstats_debug('Polling Ending');\n\nif (!$force) {\n\tunregister_process('dsstats', $type, $thread_id);\n}\n\nexit(0);\n\nfunction dsstats_purge_hourly_cache() {\n\t$hourly_window  = date('Y-m-d H:i:s', time() - (read_config_option('dsstats_hourly_duration') * 60));\n\n\t/* remove old records from the cache first */\n\tif (db_fetch_cell_prepared('SELECT COUNT(*) FROM data_source_stats_hourly_cache WHERE time < ?', array($hourly_window))) {\n\t\tdb_execute_prepared('DELETE FROM data_source_stats_hourly_cache WHERE time < ?', array($hourly_window));\n\t}\n}\n\nfunction dsstats_insert_hourly_data_into_cache() {\n\t/* store the current averages into the hourly table */\n\tdb_execute('INSERT INTO data_source_stats_hourly\n\t\t(local_data_id, rrd_name, average, peak)\n\t\tSELECT local_data_id, rrd_name, AVG(`value`), MAX(`value`)\n\t\tFROM data_source_stats_hourly_cache\n\t\tWHERE `value` IS NOT NULL\n\t\tGROUP BY local_data_id, rrd_name\n\t\tON DUPLICATE KEY UPDATE average=VALUES(average), peak=VALUES(peak)');\n}\n\nfunction dsstats_master_handler($type, $force, $fpartition) {\n\t/* read some important settings relative to timing from the database */\n\t$major_time     = date('H:i:s', strtotime(read_config_option('dsstats_major_update_time')));\n\t$daily_interval = read_config_option('dsstats_daily_interval');\n\n\t/* check to see when the daily averages were updated last */\n\t$last_run_daily  = read_config_option('dsstats_last_daily_run_time');\n\t$last_run_major  = read_config_option('dsstats_last_major_run_time');\n\n\tif (!empty($last_run_major)) {\n\t\t$last_major_time = strtotime($last_run_major);\n\t} else {\n\t\t$last_major_time = time();\n\t}\n\n\t// Purge the cache\n\tdsstats_purge_hourly_cache();\n\n\t// Insert new rows into cache\n\tdsstats_insert_hourly_data_into_cache();\n\n\tdsstats_log_statistics('HOURLY', $type);\n\n\t/* see if boost is active or not */\n\t$boost_active = read_config_option('boost_rrd_update_enable');\n\n\t/* next let's see if it's time to update the daily interval */\n\t$current_time = time();\n\n\t/* handle partition creation and pruning before we start */\n\tif (read_config_option('dsstats_gdg_enable') == 'on') {\n\t\tif (date('z', $last_major_time) != date('z', $current_time) || $fpartition) {\n\t\t\tdsstats_create_partitions($last_major_time, $current_time, $fpartition);\n\t\t\tdsstats_remove_old_partitions($current_time, $fpartition);\n\t\t}\n\t}\n\n\tif ($boost_active == 'on') {\n\t\t/* boost will spawn the collector */\n\t\tdsstats_debug('Skipping Periodic Rollup - Boost will handle the Periodic Roll-up Cycle');\n\t} else {\n\t\tif ($daily_interval == 'boost') {\n\t\t\tcacti_log(\"WARNING: Daily update interval set to 'boost' and boost not enabled, resetting to default of 1 hour\", false, 'DSSTATS');\n\n\t\t\tset_config_option('dsstats_daily_interval', 60);\n\n\t\t\t$daily_interval = 60;\n\t\t}\n\n\t\t/* determine if it's time to determine hourly averages */\n\t\tif (empty($last_run_daily)) {\n\t\t\t/* since the poller has never run before, let's fake it out */\n\t\t\tset_config_option('dsstats_last_daily_run_time', date('Y-m-d G:i:s', $current_time));\n\t\t}\n\n\t\t/* if it's time to update daily statistics, do so now */\n\t\tif ((!empty($last_run_daily) && ((strtotime($last_run_daily) + ($daily_interval * 60)) < $current_time)) || $force) {\n\t\t\tset_config_option('dsstats_last_daily_run_time', date('Y-m-d G:i:s', $current_time));\n\n\t\t\t/* run the daily stats */\n\t\t\tdsstats_launch_children($type);\n\n\t\t\t/* Wait for all processes to continue */\n\t\t\twhile ($running = dsstats_processes_running($type)) {\n\t\t\t\tdsstats_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\t\tsleep(2);\n\t\t\t}\n\n\t\t\tdsstats_log_statistics('DAILY', $type);\n\t\t}\n\t}\n\n\t/* lastly, let's see if it's time to run the major stats */\n\tif (empty($last_run_major)) {\n\t\t/* since the poller has never run before, let's fake it out */\n\t\tset_config_option('dsstats_last_major_run_time', date('Y-m-d G:i:s', $current_time));\n\t} else {\n\t\t$last_major_day = date('Y-m-d', strtotime($last_run_major));\n\t\t$next_major_day = strtotime($last_major_day . ' ' . $major_time) + 86400;\n\t}\n\n\t/* if its time to run major statistics, do so now */\n\tif ((!empty($last_run_major) && ($next_major_day < $current_time)) || $force) {\n\t\t/* run the major stats, log first to keep other processes from running */\n\t\tset_config_option('dsstats_last_major_run_time', date('Y-m-d G:i:s', $current_time));\n\n\t\t/* run the daily stats */\n\t\tdsstats_launch_children('dmaster');\n\n\t\t/* Wait for all processes to continue */\n\t\twhile ($running = dsstats_processes_running('dmaster')) {\n\t\t\tdsstats_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\tsleep(2);\n\t\t}\n\n\t\tdsstats_log_statistics('MAJOR');\n\t}\n}\n\nfunction dsstats_create_partitions($last_major_time, $current_time, $fpartition = false) {\n\t$last_day     = date('z', $last_major_time);\n\t$last_week    = date('W', $last_major_time);\n\t$last_month   = date('n', $last_major_time);\n\t$last_year    = date('Y', $last_major_time);\n\n\t// Create partition for daily numbers\n\tif ($last_day != date('z', $current_time) || $fpartition) {\n\t\t$last_day = substr('00' . $last_day, -3);\n\t\tdsstats_create_partition_from_table('data_source_stats_daily', '_v' . \"$last_year$last_day\");\n\t}\n\n\t// Create partition for weekly numbers\n\tif ($last_week != date('W', $current_time) || $fpartition) {\n\t\t$last_week = substr('00' . $last_week, -3);\n\t\tdsstats_create_partition_from_table('data_source_stats_weekly', '_v' . \"$last_year$last_week\");\n\t}\n\n\t// Create partition for monthly numbers\n\tif ($last_month != date('n', $current_time) || $fpartition) {\n\t\t$last_month = substr('00' . $last_month, -3);\n\t\tdsstats_create_partition_from_table('data_source_stats_monthly', '_v' . \"$last_year$last_month\");\n\t}\n\n\t// Create partition for yearly numbers\n\tif ($last_year != date('Y', $current_time) || $fpartition) {\n\t\tdsstats_create_partition_from_table('data_source_stats_yearly', '_v' . \"$last_year\");\n\t}\n}\n\nfunction dsstats_remove_old_partitions($current_time, $fpartition = false) {\n\t$daily_retention   = read_config_option('dsstats_daily_retention');\n\t$weekly_retention  = read_config_option('dsstats_weekly_retention');\n\t$monthly_retention = read_config_option('dsstats_monthly_retention');\n\t$yearly_retention  = read_config_option('dsstats_yearly_retention');\n\n\tdsstats_prune_partitions('data_source_stats_daily', $daily_retention);\n\tdsstats_prune_partitions('data_source_stats_weekly', $weekly_retention);\n\tdsstats_prune_partitions('data_source_stats_monthly', $monthly_retention);\n\tdsstats_prune_partitions('data_source_stats_yearly', $yearly_retention);\n}\n\nfunction dsstats_prune_partitions($table_name, $partitions_to_keep) {\n\tglobal $database_default;\n\n\t$tables = db_fetch_assoc_prepared(\"SELECT TABLE_NAME\n\t\tFROM information_schema.TABLES\n\t\tWHERE TABLE_NAME LIKE '{$table_name}_v%' AND TABLE_SCHEMA = ?\",\n\t\tarray($database_default));\n\n\tif (cacti_sizeof($tables) > $partitions_to_keep) {\n\t\t$partitions_to_delete = cacti_sizeof($tables) - $partitions_to_keep;\n\n\t\t$partitions = array();\n\n\t\tforeach($tables as $table) {\n\t\t\t$tname = $table['TABLE_NAME'];\n\t\t\t$parts = explode('_v', $tname);\n\t\t\t$partitions[] = $parts[1];\n\t\t}\n\n\t\tsort($partitions);\n\n\t\t$i = 0;\n\n\t\twhile($i < $partitions_to_delete) {\n\t\t\t$remove_table = $table_name . '_v' . $partitions[$i];\n\n\t\t\tif (db_table_exists($remove_table)) {\n\t\t\t\tcacti_log(\"NOTE: Dropping old partition $table_name\", false, 'DSSTATS');\n\n\t\t\t\tdb_execute(\"DROP TABLE $remove_table\");\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n}\n\nfunction dsstats_create_partition_from_table($table_name, $suffix) {\n\tif (db_table_exists($table_name)) {\n\t\tcacti_log(\"NOTE: Creating new partition $table_name\", false, 'DSSTATS');\n\n\t\tif (db_table_exists('dsstats_temp_table')) {\n\t\t\tdb_execute('DROP TABLE dsstats_temp_table');\n\t\t}\n\n\t\tdb_execute(\"CREATE TABLE dsstats_temp_table LIKE $table_name;\n\t\t\tRENAME TABLE $table_name TO $table_name$suffix, dsstats_temp_table TO $table_name\");\n\t}\n}\n\n/**\n * display_version - displays version information\n */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Data Source Statistics Poller, Version $version \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/**\n * display_help - generic help screen for utilities\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL . 'usage: poller_dsstats.php [--force] [--debug]' . PHP_EOL . PHP_EOL;\n\n\tprint 'Cacti\\'s Data Source Statics poller.  This poller will periodically' . PHP_EOL;\n\tprint 'to calculate Data Source statistics for Cacti and works in conjunction' . PHP_EOL;\n\tprint 'with Cacti\\'s performance boosting poller as required.' . PHP_EOL . PHP_EOL;\n\n\tprint 'System Controlled:' . PHP_EOL;\n\tprint '    --type      - The type and subtype of the dsstats process' . PHP_EOL;\n\tprint '    --child     - The thread id of the child process' . PHP_EOL . PHP_EOL;\n\n\tprint 'Optional:' . PHP_EOL;\n\tprint '    --force     - Force the execution of a update process' . PHP_EOL;\n\tprint '    --debug     - Display verbose output during execution' . PHP_EOL . PHP_EOL;\n}\n\n/**\n * sig_handler - provides a generic means to catch exceptions to the Cacti log.\n *\n * @param $signo - (int) the signal that was thrown by the interface.\n *\n * @return - null\n */\nfunction sig_handler($signo) {\n\tglobal $type, $thread_id;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: DSStats Poller terminated by user', false, 'dsstats');\n\n\t\t\t/* tell the main poller that we are done */\n\t\t\tif ($type == 'master') {\n\t\t\t\tset_config_option('dsstats_poller_status', 'terminated - end time:' . date('Y-m-d G:i:s'));\n\t\t\t}\n\n\t\t\tif (strpos($type, 'master') !== false) {\n\t\t\t\tdsstats_kill_running_processes();\n\t\t\t}\n\n\t\t\tunregister_process('dsstats', $type, $thread_id, getmypid());\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n"
        },
        {
          "name": "poller_maintenance.php",
          "type": "blob",
          "size": 28.1162109375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_data_source.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_device.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_graph.php');\ninclude_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/utility.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\n\n/* let PHP run just as long as it has to */\nini_set('max_execution_time', '0');\n\nerror_reporting(E_ALL);\n$dir = __DIR__;\nchdir($dir);\n\nglobal $config, $database_default, $archived, $purged, $disable_log_rotation, $poller_start;\n\n/* record the start time */\n$poller_start = microtime(true);\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug    = false;\n$force    = false;\n$archived = 0;\n$purged   = 0;\n$start    = microtime(true);\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . \"\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\nmaint_debug('Checking for Purge Actions');\n\n/* silently end if the registered process is still running, or process table missing */\nif (!$force) {\n\tif (!register_process_start('maintenance', 'master', $config['poller_id'], read_config_option('maintenance_timeout'))) {\n\t\tcacti_log('INFO: Another maintenance session is already running', false, 'MAINTENANCE', POLLER_VERBOSITY_LOW);\n\n\t\texit(0);\n\t}\n}\n\nif ($config['poller_id'] == 1) {\n\trrdfile_purge($force);\n\n\tauthcache_purge();\n\n\tsecpass_check_expired();\n\n\treindex_devices();\n\n\tremove_aged_password_hashes();\n\n\tunlock_cacti();\n}\n\n// Check the realtime cache and poller\nrealtime_purge_cache();\n\n// Remove deleted devices\napi_device_purge_deleted_devices();\n\n// Rotate Cacti Logs\nlogrotate_check($force);\n\n// Remove deleted devices\nremove_aged_row_cache();\n\n// Update Object Totals Caches\nif ($config['poller_id'] == 1) {\n\tupdate_graphs_data_source_templates_totals($force);\n}\n\n// Remove expired host value cache\npurge_host_value_cache();\n\nif ($config['poller_id'] > 1) {\n\tapi_plugin_hook('poller_remote_maint');\n}\n\nphpversion_check($force);\n\n$stats = device_recovery_sweep();\n\n$end = microtime(true);\n\nif ($stats['devices'] > 0) {\n\tcacti_log(sprintf('MAINT RECOVERY STATS: Time:%0.2f Checks:%s Recovered:%s', $stats['sweeptime'], $stats['devices'], $stats['recovered']), false, 'SYSTEM');\n}\n\ncacti_log(sprintf('MAINT TOTAL STATS: Time:%0.2f', $end - $start), false, 'SYSTEM');\n\nif (!$force) {\n\tunregister_process('maintenance', 'master', $config['poller_id']);\n}\n\nexit(0);\n\nfunction unlock_cacti() {\n\t$lockout = read_config_option('cacti_lockout_status', true);\n\n\tif ($lockout != '') {\n\t\t$lockout = json_decode($lockout, true);\n\n\t\tif (time() - (30*60) > $lockout['time']) {\n\t\t\tset_config_option('cacti_lockout_status', '');\n\n\t\t\tcacti_log('WARNING: Cacti Maintenance Mode cleared by main Cacti Data Collector automatically!', true, 'SYSTEM');\n\t\t}\n\t}\n}\n\nfunction purge_host_value_cache() {\n\tif (db_table_exists('host_value_cache')) {\n\t\tdb_execute('DELETE FROM host_value_cache\n\t\t\tWHERE time_to_live > 0\n\t\t\tAND UNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_updated) > time_to_live');\n\t}\n}\n\nfunction device_recovery_sweep() {\n\tglobal $config;\n\n\t$start = microtime(true);\n\n\tmaint_debug(\"Attempting to Recover Downed Devices using SNMP Options\");\n\n\t$devices = db_fetch_assoc_prepared('SELECT *\n\t\tFROM host\n\t\tWHERE status = ?\n\t\tAND deleted = \"\"\n\t\tAND disabled = \"\"\n\t\tAND snmp_options > 0\n\t\tAND status_options_date < DATE_SUB(NOW(), INTERVAL ? SECOND)\n\t\tAND poller_id = ?',\n\t\tarray(HOST_DOWN, read_config_option('snmp_options_retry_interval'), $config['poller_id']));\n\n\t$snmp_columns = array(\n\t\t'snmp_version',\n\t\t'snmp_community',\n\t\t'snmp_timeout',\n\t\t'snmp_retries',\n\t\t'snmp_username',\n\t\t'snmp_password',\n\t\t'snmp_auth_protocol',\n\t\t'snmp_priv_protocol',\n\t\t'snmp_priv_passphrase',\n\t\t'snmp_context',\n\t\t'snmp_engine_id'\n\t);\n\n\t$recovered    = 0;\n\t$down_devices = cacti_sizeof($devices);\n\n\tif (cacti_sizeof($devices)) {\n\t\tmaint_debug(sprintf('Found %s Devices to Recover', cacti_sizeof($devices)));\n\n\t\t$options = db_fetch_assoc('SELECT * FROM automation_snmp_items ORDER BY sequence');\n\t\t$names   = array_rekey(db_fetch_assoc('SELECT * FROM automation_snmp'), 'id', 'name');\n\n\t\tif (cacti_sizeof($options)) {\n\t\t\tforeach($devices as $d) {\n\t\t\t\t$device_up = false;\n\n\t\t\t\t$start = microtime(true);\n\n\t\t\t\tforeach($options as $o) {\n\t\t\t\t\t$ping = new Net_Ping;\n\n\t\t\t\t\t$thost = $d;\n\n\t\t\t\t\tforeach($snmp_columns as $c) {\n\t\t\t\t\t\t$thost[$c] = $o[$c];\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch($thost['availability_method']) {\n\t\t\t\t\t\tcase AVAIL_NONE:\n\t\t\t\t\t\tcase AVAIL_PING:\n\t\t\t\t\t\t\t$thost['availability_method'] = AVAIL_SNMP;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$ping->host = $thost;\n\t\t\t\t\t$ping->port = $thost['ping_port'];\n\n\t\t\t\t\tif ($ping->ping($thost['availability_method'], $thost['ping_method'], $thost['ping_timeout'], $thost['ping_retries'])) {\n\t\t\t\t\t\tcacti_log(sprintf('RECOVERY STATS: Time:%0.2f Device[%s] STATUS: Device \\'%s\\' brought UP with Options Set [%s]', microtime(true) - $start, $thost['id'], $thost['hostname'], $names[$o['snmp_id']]), true, 'SYSTEM');\n\n\t\t\t\t\t\t$sql        = 'UPDATE host SET ';\n\t\t\t\t\t\t$sql_params = array();\n\n\t\t\t\t\t\tforeach($snmp_columns as $i => $c) {\n\t\t\t\t\t\t\t$sql         .= ($i > 0 ? ', ':'') . \"$c = ?\";\n\t\t\t\t\t\t\t$sql_params[] = $thost[$c];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$sql .= ', status = 3, status_rec_date = NOW() WHERE id = ?';\n\t\t\t\t\t\t$sql_params[] = $thost['id'];\n\n\t\t\t\t\t\tdb_execute_prepared($sql, $sql_params);\n\n\t\t\t\t\t\t$device_up = true;\n\t\t\t\t\t\t$recovered++;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$device_up) {\n\t\t\t\t\tcacti_log(sprintf('RECOVERY STATS: Time:%0.2f Device[%s] STATUS: Device \\'%s\\' remains Down. No matching Options Sets.', microtime(true)-$start, $thost['id'], $thost['hostname']), true, 'SYSTEM');\n\t\t\t\t\tdb_execute_prepared('UPDATE host SET status_options_date = NOW() WHERE id = ?', array($thost['id']));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmaint_debug(sprintf('Found 0 Devices to Recover'));\n\t}\n\n\t$time = microtime(true) - $start;\n\n\treturn array('devices' => $down_devices, 'recovered' => $recovered, 'sweeptime' => $time);\n}\n\nfunction update_graphs_data_source_templates_totals($force) {\n\t// Don't run this script too often\n\t$last_run   = read_config_option('maintenance_totals_update');\n\t$last_graph = read_config_option('time_last_change_graph');\n\t$cur_time   = time();\n\n\t$gr_update = ($last_run < $last_graph ? true:false);\n\t$tm_update = ($cur_time - $last_run > 3600 ? true:false);\n\n\tif (!empty($last_run) && !$gr_update && !$tm_update && !$force) {\n\t\treturn false;\n\t}\n\n\tset_config_option('maintenance_totals_update', time());\n\n\tif (db_column_exists('host_template', 'devices')) {\n\t\tobject_cache_update_device_totals();\n\t\tobject_cache_update_data_source_totals();\n\t\tobject_cache_update_graph_totals();\n\t\tobject_cache_update_aggregate_totals();\n\t}\n}\n\nfunction reindex_devices() {\n\tglobal $config;\n\n\t$schedule = read_config_option('automatic_reindex');\n\n\t// 0 - Disabled\n\t// 1 - Daily at Midnight\n\t// 2 - Weekly on Sunday\n\t// 3 - Monthly on Sunday\n\n\t$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t$extra_args     = CACTI_PATH_CLI . '/poller_reindex_hosts.php --id=all --qid=all';\n\n\tif ($schedule == 0) {\n\t\treturn;\n\t}\n\n\t$last_run = read_config_option('periodic_reindex_lastrun');\n\t$now      = time();\n\n\tif (empty($last_run)) {\n\t\tset_config_option('periodic_reindex_lastrun', time());\n\n\t\treturn;\n\t} else {\n\t\tif ($schedule == 1) {\n\t\t\tif (date('z', $now) != date('z', $last_run)) {\n\t\t\t\tset_config_option('periodic_reindex_lastrun', $now);\n\t\t\t\texec_background($command_string, $extra_args);\n\t\t\t}\n\t\t} elseif ($schedule == 2) {\n\t\t\tif (date('z', $now) != date('z', $last_run) && date('w', $now) == 0) {\n\t\t\t\texec_background($command_string, $extra_args);\n\t\t\t}\n\t\t} elseif ($schedule == 3) {\n\t\t\tif (date('z', $now) != date('z', $last_run)) {\n\t\t\t\tif (date('w', $now) == 0 && date('n', $now) != date('n', $last_run)) {\n\t\t\t\t\texec_background($command_string, $extra_args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction remove_aged_row_cache() {\n\t$classes = array_rekey(\n\t\tdb_fetch_assoc('SELECT REPLACE(name, \"time_last_change_\", \"\") AS name, value\n\t\t\tFROM settings\n\t\t\tWHERE name LIKE \"time_last_change%\"'),\n\t\t'name', 'value'\n\t);\n\n\tif (cacti_sizeof($classes)) {\n\t\tforeach ($classes as $name => $ts) {\n\t\t\tdb_execute_prepared('DELETE FROM user_auth_row_cache\n\t\t\t\tWHERE class = ? AND UNIX_TIMESTAMP(time) < ?',\n\t\t\t\tarray($name, $ts));\n\t\t}\n\t}\n}\n\nfunction remove_aged_password_hashes() {\n\tdb_execute('DELETE FROM user_auth_reset_hashes\n\t\tWHERE expiry < NOW()');\n}\n\nfunction logrotate_check($force) {\n\tglobal $disable_log_rotation;\n\n\t// Check whether the cacti log.  Rotations takes place around midnight\n\tif (isset($disable_log_rotation) && $disable_log_rotation == true) {\n\t\t// Skip log rotation as it's handled by logrotate.d\n\t} elseif (read_config_option('logrotate_enabled') == 'on') {\n\t\t$frequency  = read_config_option('logrotate_frequency');\n\n\t\tif (empty($frequency)) {\n\t\t\t$frequency = 1;\n\t\t}\n\n\t\t$last = read_config_option('logrotate_lastrun');\n\t\t$now  = time();\n\n\t\tif (empty($last)) {\n\t\t\t$last = time();\n\t\t\tset_config_option('logrotate_lastrun', $last);\n\t\t}\n\n\t\t$date_now = new DateTime();\n\t\t$date_now->setTimestamp($now);\n\n\t\t// Take the last date/time, set the time to 59 seconds past midnight\n\t\t// then remove one minute to make it the previous evening\n\t\t$date_orig = new DateTime();\n\t\t$date_orig->setTimestamp($last);\n\t\t$date_last = new DateTime();\n\t\t$date_last->setTimestamp($last)->setTime(0,0,59)->modify('-1 minute');\n\n\t\t// Make sure we clone the last date, or we end up modifying the same object!\n\t\t$date_next = clone $date_last;\n\t\t$date_next->modify('+'.$frequency.'day');\n\n\t\tcacti_log('Cacti Log Rotation - TIMECHECK Ran: ' . $date_orig->format('Y-m-d H:i:s')\n\t\t\t. ', Now: ' . $date_now->format('Y-m-d H:i:s')\n\t\t\t. ', Next: ' . $date_next->format('Y-m-d H:i:s'), true, 'MAINT', POLLER_VERBOSITY_HIGH);\n\n\t\tif ($date_next < $date_now || $force) {\n\t\t\tlogrotate_rotatenow();\n\t\t}\n\t}\n}\n\nfunction authcache_purge() {\n\t/* removing security tokens older than 90 days */\n\tif (read_config_option('auth_cache_enabled') == 'on') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\tWHERE last_update < ?',\n\t\t\tarray(date('Y-m-d H:i:s', time() - (86400 * 90))));\n\t} else {\n\t\tdb_execute('TRUNCATE TABLE user_auth_cache');\n\t}\n}\n\nfunction rrdfile_purge($force) {\n\tglobal $archived, $purged, $poller_start;\n\n\t/* are my tables already present? */\n\t$purge = db_fetch_cell('SELECT COUNT(*)\n\t\tFROM data_source_purge_action');\n\n\t/* if the table that holds the actions is present, work on it */\n\tif ($purge) {\n\t\tmaint_debug(\"Purging Required - Files Found $purge\");\n\n\t\t/* take the purge in steps */\n\t\twhile (true) {\n\t\t\tmaint_debug('Grabbing 1000 RRDfiles to Remove');\n\n\t\t\t$file_array = db_fetch_assoc('SELECT DISTINCT id, name, local_data_id, action\n\t\t\t\tFROM data_source_purge_action\n\t\t\t\tORDER BY name\n\t\t\t\tLIMIT 1000');\n\n\t\t\tif (cacti_sizeof($file_array) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($file_array) || $force) {\n\t\t\t\t/* there's something to do for us now */\n\t\t\t\tremove_files($file_array);\n\n\t\t\t\tif ($force) {\n\t\t\t\t\tcleanup_ds_and_graphs();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmaint_debug('No RRDfiles found for archiving or removal');\n\t\t\t}\n\t\t}\n\n\t\t/* record the start time */\n\t\tset_config_option('rrdcleaner_last_run_time', time());\n\n\t\t$poller_end = microtime(true);\n\t\tset_config_option('rrdcleaner_last_run_time', time());\n\t\t$string = sprintf('RRDMAINT STATS: Time:%4.4f Purged:%s Archived:%s', ($poller_end - $poller_start), $purged, $archived);\n\t\tcacti_log($string, true, 'SYSTEM');\n\t} else {\n\t\tmaint_debug('No RRDfiles scheduled for arching or removal');\n\t}\n}\n\n/**\n * realtime_purge_cache() - This function will purge files in the realtime directory\n * that are older than 2 hours without changes\n */\nfunction realtime_purge_cache() {\n\t/* remove all Realtime files over than 2 hours */\n\tif (read_config_option('realtime_cache_path') != '') {\n\t\t$cache_path = read_config_option('realtime_cache_path');\n\n\t\tif (is_dir($cache_path) && is_writeable($cache_path)) {\n\t\t\tforeach (new DirectoryIterator($cache_path) as $fileInfo) {\n\t\t\t\tif ($fileInfo->isDot()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// only remove .png and .rrd files\n\t\t\t\tif ((substr($fileInfo->getFilename(), -4, 4) == '.png') || (substr($fileInfo->getFilename(), -4, 4) == '.rrd')) {\n\t\t\t\t\tif ((time() - $fileInfo->getMTime()) >= 7200) {\n\t\t\t\t\t\tunlink($fileInfo->getRealPath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdb_execute('DELETE FROM poller_output_realtime WHERE time < FROM_UNIXTIME(UNIX_TIMESTAMP()-300)');\n}\n\n/*\n * logrotate_rotatenow - Rotates the cacti log\n */\nfunction logrotate_rotatenow() {\n\tglobal $config;\n\n\t$poller_start = microtime(true);\n\n\t$logs = array();\n\t$log  = read_config_option('path_cactilog');\n\n\tif (empty($log)) {\n\t\t$log = CACTI_PATH_LOG . '/cacti.log';\n\t}\n\t$logs['Cacti'] = $log;\n\n\t$log = read_config_option('path_stderrlog');\n\n\tif (!empty($log)) {\n\t\t$logs['Cacti StdErr'] = $log;\n\t}\n\n\t$log = read_config_option('path_boost_log');\n\n\tif (!empty($log)) {\n\t\t$logs['Cacti Boost'] = $log;\n\t}\n\n\t$run_time = time();\n\tset_config_option('logrotate_lastrun', $run_time);\n\n\t$date     = new DateTime();\n\t$date->setTimestamp($run_time)->modify('-1day');\n\n\t$rotated = 0;\n\t$cleaned = 0;\n\n\t$days = read_config_option('logrotate_retain');\n\n\tif ($days == '' || $days < 0) {\n\t\t$days = 7;\n\t}\n\n\tif ($days > 365) {\n\t\t$days = 365;\n\t}\n\n\tforeach ($logs as $name => $log) {\n\t\t$rotated += logrotate_file_rotate($name, $log, $date);\n\t\t$cleaned += logrotate_file_clean($name, $log, $date, $days);\n\t}\n\n\t$cleaned += logrotate_file_clean($name, $log, $date, $days);\n\n\t/* record the start time */\n\t$poller_end = microtime(true);\n\t$string     = sprintf('LOGMAINT STATS: Time:%4.4f, Rotated:%d, Removed:%d, Days Retained:%d', ($poller_end - $poller_start), $rotated, $cleaned, $days);\n\n\tcacti_log($string, true, 'SYSTEM');\n}\n\n/**\n * logrotate_file_rotate() - rotates the specified log file, appending date given\n */\nfunction logrotate_file_rotate($name, $log, $date) {\n\tif (empty($log)) {\n\t\treturn 0;\n\t}\n\n\tclearstatcache();\n\n\tif (!file_exists($log)) {\n\t\tcacti_log('Cacti Log Rotation - Skipped missing ' . $name . ' Log : ' . $log, true, 'MAINT');\n\n\t\treturn 0;\n\t}\n\n\tif (is_writable(dirname($log) . '/') && is_writable($log)) {\n\t\t$perms = octdec(substr(decoct(fileperms($log)), 2));\n\t\t$owner = fileowner($log);\n\t\t$group = filegroup($log);\n\n\t\tif ($owner !== false) {\n\t\t\t$ext = $date->format('Ymd');\n\n\t\t\tif (file_exists($log . '-' . $ext)) {\n\t\t\t\t$ext_inc = 1;\n\n\t\t\t\twhile (file_exists($log . '-' . $ext . '-' . $ext_inc) && $ext_inc < 99) {\n\t\t\t\t\t$ext_inc++;\n\t\t\t\t}\n\t\t\t\t$ext = $ext . '-' . $ext_inc;\n\t\t\t}\n\n\t\t\tif (rename($log, $log . '-' . $ext)) {\n\t\t\t\ttouch($log);\n\t\t\t\tchown($log, $owner);\n\t\t\t\tchgrp($log, $group);\n\t\t\t\tchmod($log, $perms);\n\t\t\t\tcacti_log('Cacti Log Rotation - Created ' . $name . ' Log : ' . basename($log) . '-' . $ext, true, 'MAINT');\n\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tcacti_log('Cacti Log Rotation - ERROR: Could not rename ' . $name . ' Log \"' . basename($log) . '\" to \"' . basename($log) . '-' . $ext . '\"', true, 'MAINT');\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log('Cacti Log Rotation - ERROR: Permissions issue.  Please check your ' . $name  . ' Log directory : ' . basename($log), true, 'MAINT');\n\t\t}\n\t} else {\n\t\tcacti_log('Cacti Log Rotation - ERROR: Permissions issue.  Please check your ' . $name . ' Log as directory or file are not writable : ' . $log, true, 'MAINT');\n\t}\n\n\treturn 0;\n}\n\n/**\n * logrotate_file_clean - Cleans up any old log files that should be removed\n */\nfunction logrotate_file_clean($name, $log, $date, $rotation) {\n\tglobal $config;\n\n\tif (empty($log)) {\n\t\treturn false;\n\t}\n\n\tif ($rotation <= 0) {\n\t\treturn false;\n\t}\n\n\t$baselogdir  = dirname($log) . '/';\n\t$baselogname = basename($log);\n\n\tclearstatcache();\n\t$dir = scandir($baselogdir);\n\n\tif (cacti_sizeof($dir)) {\n\t\t$date_log = clone $date;\n\t\t$date_log->modify('-'.$rotation.'day');\n\t\t$e = $date_log->format('Ymd');\n\n\t\tcacti_log('Cacti Log Rotation - Purging all ' . $name . ' logs before '. $e, true, 'MAINT');\n\n\t\tforeach ($dir as $d) {\n\t\t\t$fileparts = explode('-', $d);\n\t\t\t$matches   = false;\n\n\t\t\tif (strpos($d, $baselogname) !== false) {\n\t\t\t\tif ($fileparts > 1) {\n\t\t\t\t\tforeach ($fileparts as $p) {\n\t\t\t\t\t\t// Is it in the form YYYYMMDD?\n\t\t\t\t\t\tif (is_numeric($p) && strlen($p) == 8) {\n\t\t\t\t\t\t\t$matches = true;\n\n\t\t\t\t\t\t\tif ($p < $e) {\n\t\t\t\t\t\t\t\tif (is_writable($baselogdir . $d)) {\n\t\t\t\t\t\t\t\t\t@unlink($baselogdir . $d);\n\t\t\t\t\t\t\t\t\tcacti_log('Cacti Log Rotation - Purging ' . $name  . ' Log : ' . $d, true, 'MAINT');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcacti_log('Cacti Log Rotation - ERROR: Can not purge ' . $name  . ' Log : ' . $d, true, 'MAINT');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcacti_log('Cacti Log Rotation - NOTE: Not expired, keeping ' . $name . ' Log : ' . $d, true, 'MAINT', POLLER_VERBOSITY_HIGH);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($matches) {\n\t\t\t\tcacti_log('Cacti Log Rotation - NOTE: File not in expected naming format, ignoring ' . $name . ' Log : ' . $d, true, 'MAINT', POLLER_VERBOSITY_DEBUG);\n\t\t\t}\n\t\t}\n\t}\n\n\tclearstatcache();\n}\n\n/**\n * secpass_check_expired - Checks user accounts to determine if the accounts and/or their passwords should be expired\n */\nfunction secpass_check_expired() {\n\tmaint_debug('Checking for Account / Password expiration');\n\n\t// Expire Old Accounts\n\t$e = read_config_option('secpass_expireaccount');\n\n\tif ($e > 0 && is_numeric($e)) {\n\t\t$t = time();\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET lastlogin = ?\n\t\t\tWHERE lastlogin = -1\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($t));\n\n\t\t$t = $t - (intval($e) * 86400);\n\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET enabled = ''\n\t\t\tWHERE realm = 0\n\t\t\tAND enabled = 'on'\n\t\t\tAND lastlogin < ?\n\t\t\tAND id > 1\",\n\t\t\tarray($t));\n\t}\n\n\t$e = read_config_option('secpass_expirepass');\n\n\tif ($e > 0 && is_numeric($e)) {\n\t\t$t = time();\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET lastchange = ?\n\t\t\tWHERE lastchange = -1\n\t\t\tAND realm = 0\n\t\t\tAND enabled = 'on'\",\n\t\t\tarray($t));\n\n\t\t$t = $t - (intval($e) * 86400);\n\n\t\tdb_execute_prepared(\"UPDATE user_auth\n\t\t\tSET must_change_password = 'on'\n\t\t\tWHERE realm = 0\n\t\t\tAND enabled = 'on'\n\t\t\tAND lastchange < ?\",\n\t\t\tarray($t));\n\t}\n}\n\n/*\n * remove_files - remove all unwanted files; the list is given by table data_source_purge_action\n */\nfunction remove_files($file_array) {\n\tglobal $config, $debug, $archived, $purged;\n\n\tmaint_debug('RRDClean is now running on ' . cacti_sizeof($file_array) . ' items');\n\n\t$rra_path = CACTI_PATH_RRA;\n\n\tif (read_config_option('storage_location')) {\n\t\t$rrdtool_pipe = rrd_init();\n\n\t\trrdtool_execute('setcnn timeout off', false, RRDTOOL_OUTPUT_NULL, $rrdtool_pipe, $logopt = 'POLLER');\n\t} else {\n\t\t/* let's prepare the archive directory */\n\t\t$rrd_archive = read_config_option('rrd_archive', true);\n\n\t\tif ($rrd_archive == '') {\n\t\t\t$rrd_archive = $rra_path . '/archive';\n\t\t}\n\n\t\trrdclean_create_path($rrd_archive);\n\t}\n\n\t/* now scan the files */\n\tforeach ($file_array as $file) {\n\t\t$real_file = str_replace('<path_rra>', $rra_path, $file['name']);\n\t\t$real_file = str_replace('<path_cacti>', $config['base_path'], $real_file);\n\t\t$base_file = str_replace('<path_rra>', '', $file['name']);\n\t\t$base_file = str_replace('<path_cacti>', '', $base_file);\n\n\t\tif (read_config_option('storage_location') == 0) {\n\t\t\tswitch ($file['action']) {\n\t\t\t\tcase '1' :\n\t\t\t\t\tif (file_exists($real_file)) {\n\t\t\t\t\t\tif (unlink($real_file)) {\n\t\t\t\t\t\t\tmaint_debug('Deleted: ' . $real_file);\n\t\t\t\t\t\t\t$purged++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log(\"WARNING: RRDfile Maintenance is unable to remove $real_file from $rra_path!\", true, 'MAINT');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase '3' :\n\t\t\t\t\t$target_file = $rrd_archive . '/' . $base_file;\n\t\t\t\t\t$target_dir  = dirname($target_file);\n\t\t\t\t\tif (!is_dir($target_dir)) {\n\t\t\t\t\t\trrdclean_create_path($target_dir);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (file_exists($real_file)) {\n\t\t\t\t\t\tif (rename($real_file, $target_file)) {\n\t\t\t\t\t\t\tmaint_debug(\"Moved: $real_file to: $target_file\");\n\t\t\t\t\t\t\t$archived++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log(\"WARNING: RRDfile Maintenance is unable to move $real_file to $target_file!\", true, 'MAINT');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch($file['action']) {\n\t\t\t\tcase '1':\n\t\t\t\t\tif (rrdtool_execute('unlink ' . $file['name'], false, RRDTOOL_OUTPUT_BOOLEAN, $rrdtool_pipe, $logopt = 'MAINT')) {\n\t\t\t\t\t\tmaint_debug('Deleted: ' . $file['name']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacti_log(\"WARNING RRDfile Maintenance is unable to remove {$file['name']} from the RRDproxy!\", true, 'MAINT');\n\t\t\t\t\t}\n\n\t\t\t\t\t$purged++;\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase '3':\n\t\t\t\t\tif (rrdtool_execute('archive ' . $file['name'], false, RRDTOOL_OUTPUT_BOOLEAN, $rrdtool_pipe, $logopt = 'MAINT')) {\n\t\t\t\t\t\tmaint_debug(\"Moved: {file['name']} to: RRDproxy Archive\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacti_log(\"WARNING RRDfile Maintenance is unable to move {$file['name']} to the RRDproxy Archive!\", true, 'MAINT');\n\t\t\t\t\t}\n\n\t\t\t\t\t$archived++;\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/* drop from data_source_purge_action table */\n\t\tdb_execute_prepared('DELETE FROM `data_source_purge_action`\n\t\t\tWHERE name = ?',\n\t\t\tarray($file['name']));\n\n\t\tmaint_debug('Delete from data_source_purge_action: ' . $file['name']);\n\n\t\t//fetch all local_graph_id's according to this data source\n\t\t$lgis = db_fetch_assoc_prepared('SELECT DISTINCT gl.id\n\t\t\tFROM graph_local AS gl\n\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\tON gl.id = gti.local_graph_id\n\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\tON dtr.id=gti.task_item_id\n\t\t\tINNER JOIN data_local AS dl\n\t\t\tON dtr.local_data_id=dl.id\n\t\t\tWHERE (local_data_id=?)',\n\t\t\tarray($file['local_data_id']));\n\n\t\tif (cacti_sizeof($lgis)) {\n\t\t\t/* anything found? */\n\t\t\tmaint_debug('Processing ' . cacti_sizeof($lgis) . ' Graphs for data source id: ' . $file['local_data_id']);\n\n\t\t\t/* get them all */\n\t\t\tforeach ($lgis as $item) {\n\t\t\t\t$remove_lgis[] = $item['id'];\n\t\t\t\tmaint_debug('remove local_graph_id=' . $item['id']);\n\t\t\t}\n\n\t\t\t/* and remove them in a single run */\n\t\t\tif (!empty($remove_lgis)) {\n\t\t\t\tapi_graph_remove_multi($remove_lgis);\n\t\t\t}\n\t\t}\n\n\t\t/* remove related data source if any */\n\t\tif ($file['local_data_id'] > 0) {\n\t\t\tmaint_debug('Removing Data Source: ' . $file['local_data_id']);\n\t\t\tapi_data_source_remove($file['local_data_id']);\n\t\t}\n\t}\n\n\tif (read_config_option('storage_location')) {\n\t\trrd_close($rrdtool_pipe);\n\t}\n\n\tmaint_debug('RRDClean has finished a purge pass of ' . cacti_sizeof($file_array) . ' items');\n}\n\nfunction rrdclean_create_path($path) {\n\tglobal $config;\n\n\tif (!is_dir($path)) {\n\t\tif (mkdir($path, 0775, true)) {\n\t\t\tif ($config['cacti_server_os'] != 'win32') {\n\t\t\t\t$owner_id      = fileowner(CACTI_PATH_RRA);\n\t\t\t\t$group_id      = filegroup(CACTI_PATH_RRA);\n\n\t\t\t\t// NOTE: chown/chgrp fails for non-root users, checking their\n\t\t\t\t// result is therefore irrelevant\n\t\t\t\t@chown($path, $owner_id);\n\t\t\t\t@chgrp($path, $group_id);\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log(\"ERROR: RRDfile Maintenance unable to create directory '\" . $path . \"'\", false, 'MAINT');\n\t\t}\n\t}\n\n\t// if path existed, we can return true\n\treturn is_dir($path) && is_writable($path);\n}\n\n/*\n * cleanup_ds_and_graphs - courtesy John Rembo\n */\nfunction cleanup_ds_and_graphs() {\n\tglobal $config;\n\n\t$remove_ldis = array();\n\t$remove_lgis = array();\n\n\tmaint_debug('RRDClean now cleans up all data sources and graphs');\n\n\t//fetch all local_data_id's which have appropriate data-sources\n\t$rrds = db_fetch_assoc(\"SELECT local_data_id, name_cache, data_source_path\n\t\tFROM data_template_data\n\t\tWHERE name_cache > ''\");\n\n\t//filter those whose rrd files doesn't exist\n\tforeach ($rrds as $item) {\n\t\t$ldi      = $item['local_data_id'];\n\t\t$name     = $item['name_cache'];\n\t\t$ds_pth   = $item['data_source_path'];\n\t\t$real_pth = str_replace('<path_rra>', CACTI_PATH_RRA, $ds_pth);\n\n\t\tif (!file_exists($real_pth)) {\n\t\t\tif (!in_array($ldi, $remove_ldis, true)) {\n\t\t\t\t$remove_ldis[] = $ldi;\n\t\t\t\tmaint_debug(\"RRD file is missing for data source name: $name (local_data_id=$ldi)\");\n\t\t\t}\n\t\t}\n\t}\n\n\tif (empty($remove_ldis)) {\n\t\tmaint_debug('No missing rrd files found');\n\n\t\treturn 0;\n\t}\n\n\tmaint_debug('Processing Graphs');\n\t//fetch all local_graph_id's according to filtered rrds\n\t$lgis = db_fetch_assoc('SELECT DISTINCT gl.id\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gl.id=gti.local_graph_id\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON dtr.id=gti.task_item_id\n\t\tINNER JOIN data_local AS dl\n\t\tON dtr.local_data_id=dl.id\n\t\tWHERE (' . array_to_sql_or($remove_ldis, 'local_data_id') . ')');\n\n\tforeach ($lgis as $item) {\n\t\t$remove_lgis[] = $item['id'];\n\t\tmaint_debug('RRD file missing for local_graph_id=' . $item['id']);\n\t}\n\n\tif (!empty($remove_lgis)) {\n\t\tmaint_debug('removing graphs');\n\t\tapi_graph_remove_multi($remove_lgis);\n\t}\n\n\tmaint_debug('removing data sources');\n\tapi_data_source_remove_multi($remove_ldis);\n\n\tmaint_debug('removed graphs:' . cacti_count($remove_lgis) . ' removed data-sources:' . cacti_count($remove_ldis));\n}\n\nfunction maint_debug($message) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tprint \"DEBUG: \" . trim($message) . \"\\n\";\n\t}\n}\n\n/**\n * display_version - displays version information\n */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Maintenance Poller, Version $version, \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\n/**\n * display_help - displays the usage of the function\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_maintenance.php [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's maintenance poller.  This poller is responsible for executing periodic\\n\";\n\tprint \"maintenance activities for Cacti including log rotation, deactivating accounts, etc.\\n\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --force   - Force immediate execution, e.g. for testing.\\n\";\n\tprint \"    --debug   - Display verbose output during execution.\\n\\n\";\n}\n\nfunction phpversion_check($force = false) {\n\t$now  = time();\n\t$last = db_fetch_cell('select value from settings where name = \"phpver_last\"');\n\n\tif (empty($last)) {\n\t\t$last = $now - 86500;\n\t}\n\n\t$date_now = new DateTime();\n\t$date_now->setTimestamp($now);\n\n\t// Take the last date/time, set the time to 59 seconds past midnight\n\t// then remove one minute to make it the previous evening\n\t$date_orig = new DateTime();\n\t$date_orig->setTimestamp($last);\n\t$date_last = new DateTime();\n\t$date_last->setTimestamp($last)->setTime(0,0,59)->modify('-1 minute');\n\n\t// Make sure we clone the last date, or we end up modifying the same object!\n\t$date_next = clone $date_last;\n\t$date_next->modify('+1day');\n\n\t$phpbad_ver = version_compare(PHP_VERSION,'7.4','<');\n\n\tif ($phpbad_ver && ($date_next < $date_now || $force)) {\n\t\tcacti_log('WARNING: PHP Version \"' . PHP_VERSION .'\"will not be supported by the develop branch in the future.  If you cannot upgrade to PHP 7.1 or higher, please switch branches', false, 'CACTI');\n\t\tdb_execute_prepared('REPLACE INTO settings (name, value) VALUES (\"phpver_last\", ?)', array($now));\n\t}\n}\n"
        },
        {
          "name": "poller_realtime.php",
          "type": "blob",
          "size": 9.8623046875,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\n\n/* force Cacti to store realtime data locally */\n$config['force_storage_location_local'] = true;\n\n/* initialize some additional variables */\n$force     = false;\n$debug     = false;\n$graph_id  = false;\n$interval  = false;\n$poller_id = '';\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--graph':\n\t\t\t\t$graph_id = (int)$value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--interval':\n\t\t\t\t$interval = (int)$value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--poller_id':\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit;\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\n\t\t\tdefault:\n\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\nif ($graph_id === false || $graph_id < 0) {\n\tprint \"ERROR: No --graph=ID specified\\n\\n\";\n\tdisplay_help();\n\n\texit(1);\n}\n\nif ($interval === false || $interval < 0) {\n\tprint \"ERROR: No --interval=SEC specified\\n\\n\";\n\tdisplay_help();\n\n\texit(1);\n}\n\n/* record the start time */\n$poller_start         = microtime(true);\n\n/* get number of polling items from the database */\n$poller_interval = 1;\n\n/* retrieve the last time the poller ran */\n$poller_lastrun = read_config_option('poller_lastrun');\n\n/* get the current cron interval from the database */\n$cron_interval = read_config_option('cron_interval');\n\nif ($cron_interval != 60) {\n\t$cron_interval = 300;\n}\n\n/* assume a scheduled task of either 60 or 300 seconds */\ndefine('MAX_POLLER_RUNTIME', 298);\n\n/* let PHP only run 1 second longer than the max runtime, plus the poller needs lots of memory */\nini_set('max_execution_time', MAX_POLLER_RUNTIME + 1);\n\n/* initialize file creation flags */\n$change_files = false;\n\n/* obtain some defaults from the database */\n$max_threads = read_config_option('max_threads');\n\n/* Determine Command Name */\n$command_string = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n$extra_args     = '-q ' . cacti_escapeshellarg(CACTI_PATH_BASE . '/cmd_realtime.php') . \" $poller_id $graph_id $interval\";\n\n/* Determine if Realtime will work or not */\n$cache_dir = read_config_option('realtime_cache_path');\n\nif (!is_dir($cache_dir)) {\n\tcacti_log(\"FATAL: Realtime Cache Directory '$cache_dir' Does Not Exist!\");\n\n\treturn -1;\n}\n\nif (!is_writable($cache_dir)) {\n\tcacti_log(\"FATAL: Realtime Cache Directory '$cache_dir' is Not Writable!\");\n\n\treturn -2;\n}\n\nshell_exec(\"$command_string $extra_args\");\n\n/* open a pipe to rrdtool for writing */\n$rrdtool_pipe = rrd_init();\n\n/* process poller output */\nprocess_poller_output_rt($rrdtool_pipe, $poller_id, $interval);\n\n/* close rrd */\nrrd_close($rrdtool_pipe);\n\n/* close db */\ndb_close();\n\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Realtime Poller, Version $version, \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_realtime.php --graph=ID [--interval=SEC] [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's Realtime graphing poller.  This poller behaves very similarly\\n\";\n\tprint \"to Cacti's main poller with the exception that it only polls data source\\n\";\n\tprint \"that are specific to the graph being rendered in the Cacti UI.\\n\\n\";\n\tprint \"Required:\\n\";\n\tprint \"    --graph=ID     Specify the graph id to convert (realtime)\\n\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --interval=SEC Specify the graph interval (realtime)\\n\";\n\tprint \"    --force        Override poller overrun detection and force a poller run\\n\";\n\tprint \"    --debug|-d     Output debug information.  Similar to cacti's DEBUG logging level.\\n\\n\";\n}\n\n/* process_poller_output REAL TIME MODIFIED */\nfunction process_poller_output_rt($rrdtool_pipe, $poller_id, $interval) {\n\tglobal $config;\n\n\tinclude_once(CACTI_PATH_LIBRARY . '/rrd.php');\n\n\t/* let's count the number of rrd files we processed */\n\t$rrds_processed = 0;\n\n\t/* create/update the rrd files */\n\t$results = db_fetch_assoc_prepared('SELECT port.output, port.time, port.local_data_id,\n\t\tpoller_item.rrd_path, poller_item.rrd_name, poller_item.rrd_num\n\t\tFROM (poller_output_realtime AS port, poller_item)\n\t\tWHERE (port.local_data_id=poller_item.local_data_id\n\t\tAND port.rrd_name=poller_item.rrd_name)\n\t\tAND port.poller_id = ?',\n\t\tarray($poller_id));\n\n\tif (cacti_sizeof($results) > 0) {\n\t\t/* create an array keyed off of each .rrd file */\n\t\tforeach ($results as $item) {\n\t\t\t$rt_graph_path    = read_config_option('realtime_cache_path') . '/user_' . $poller_id . '_' . $item['local_data_id'] . '.rrd';\n\t\t\t$data_source_path = get_data_source_path($item['local_data_id'], true);\n\n\t\t\t/* create rt rrd */\n\t\t\tif (!file_exists($rt_graph_path)) {\n\t\t\t\t/* get the syntax */\n\t\t\t\t$command = @rrdtool_function_create($item['local_data_id'], true);\n\n\t\t\t\t/* replace path */\n\t\t\t\t$command = str_replace($data_source_path, $rt_graph_path, $command);\n\n\t\t\t\t/**\n\t\t\t\t * minimum refresh interval - this will always have a value of 1\n\t\t\t\t * so that at the one second realtime interval, good numbers are\n\t\t\t\t * returned to the user.  We ignore the user setting.\n\t\t\t\t *\n\t\t\t\t * $step = read_config_option('realtime_interval');\n\t\t\t\t *\n\t\t\t\t */\n\n\t\t\t\t/* replace step */\n\t\t\t\t$command = preg_replace('/--step\\s(\\d+)/', '--step 1', $command);\n\n\t\t\t\t/* WIN32: before sending this command off to rrdtool, get rid\n\t\t\t\tof all of the '\\' characters. Unix does not care; win32 does.\n\t\t\t\tAlso make sure to replace all of the fancy \"\\\"s at the end of the line,\n\t\t\t\tbut make sure not to get rid of the \"\\n\"s that are supposed to be\n\t\t\t\tin there (text format) */\n\t\t\t\t$command = str_replace(\"\\\\\\n\", ' ', $command);\n\n\t\t\t\t/* create the rrdfile */\n\t\t\t\tshell_exec($command);\n\n\t\t\t\t/* change permissions so that the poller can clear */\n\t\t\t\t@chmod($rt_graph_path, 0644);\n\t\t\t} else {\n\t\t\t\t/* change permissions so that the poller can clear */\n\t\t\t\t@chmod($rt_graph_path, 0644);\n\t\t\t}\n\n\t\t\t/* now, let's update the path to keep the RRDs updated */\n\t\t\t$item['rrd_path'] = $rt_graph_path;\n\n\t\t\t/* cleanup the value */\n\t\t\t$value            = trim($item['output']);\n\t\t\t$unix_time        = strtotime($item['time']);\n\n\t\t\t$rrd_update_array[$item['rrd_path']]['local_data_id'] = $item['local_data_id'];\n\n\t\t\t/* single one value output */\n\t\t\tif ((is_numeric($value)) || ($value == 'U')) {\n\t\t\t\t$rrd_update_array[$item['rrd_path']]['times'][$unix_time][$item['rrd_name']] = $value;\n\t\t\t} else {\n\t\t\t\t/* multiple value output */\n\t\t\t\t$values = preg_split('/\\s+/', $value);\n\n\t\t\t\t$rrd_field_names = array_rekey(\n\t\t\t\t\tdb_fetch_assoc_prepared('SELECT DISTINCT dtr.data_source_name, dif.data_name\n\t\t\t\t\t\tFROM graph_templates_item AS gti\n\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\tON gti.task_item_id = dtr.id\n\t\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\t\tON dtr.data_input_field_id = dif.id\n\t\t\t\t\t\tAND dtr.local_data_id = ?',\n\t\t\t\t\t\tarray($item['local_data_id'])),\n\t\t\t\t\t'data_name', 'data_source_name'\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($values)) {\n\t\t\t\t\tforeach($values as $value) {\n\t\t\t\t\t\t$matches = explode(':', $value);\n\n\t\t\t\t\t\tif (isset($rrd_field_names[$matches[0]])) {\n\t\t\t\t\t\t\t$rrd_update_array[$item['rrd_path']]['times'][$unix_time][$rrd_field_names[$matches[0]]] = $matches[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* fallback values */\n\t\t\tif ((!isset($rrd_update_array[$item['rrd_path']]['times'][$unix_time])) && ($item['rrd_name'] != '')) {\n\t\t\t\t$rrd_update_array[$item['rrd_path']]['times'][$unix_time][$item['rrd_name']] = 'U';\n\t\t\t} elseif ((!isset($rrd_update_array[$item['rrd_path']]['times'][$unix_time])) && ($item['rrd_name'] == '')) {\n\t\t\t\tunset($rrd_update_array[$item['rrd_path']]);\n\t\t\t}\n\t\t}\n\n\t\t/* make sure each .rrd file has complete data */\n\t\tforeach ($results as $item) {\n\t\t\tdb_execute_prepared('DELETE FROM poller_output_realtime\n\t\t\t\tWHERE local_data_id = ?\n\t\t\t\tAND rrd_name = ?\n\t\t\t\tAND time = ?\n\t\t\t\tAND poller_id = ?',\n\t\t\t\tarray($item['local_data_id'], $item['rrd_name'], $item['time'], $poller_id));\n\t\t}\n\n\t\t$rrds_processed = rrdtool_function_update($rrd_update_array, $rrdtool_pipe);\n\t}\n\n\treturn $rrds_processed;\n}\n"
        },
        {
          "name": "poller_recovery.php",
          "type": "blob",
          "size": 8.6298828125,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/boost.php');\nrequire_once(CACTI_PATH_LIBRARY . '/dsstats.php');\n\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Boost RRD Update Poller, Version $version \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\n/*\tdisplay_help - displays the usage of the function */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_recovery.php [--verbose] [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's Remote Poller Recovery Script.  This poller will transfer all offline boost records\\n\";\n\tprint \"to the Main Cacti Pollers boost table\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --verbose - Show details logs at the command line\\n\";\n\tprint \"    --force   - Force the execution of a update process\\n\";\n\tprint \"    --debug   - Display verbose output during execution\\n\\n\";\n}\n\nfunction sig_handler($signo) {\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('RECOVERY WARNING: Recovery Poller terminated by user', false, 'POLLER');\n\n\t\t\t/* tell the main poller that we are done */\n\t\t\tdb_execute(\"REPLACE INTO settings (name, value) VALUES ('boost_poller_status', 'terminated - end time:\" . date('Y-m-d G:i:s') .\"')\");\n\n\t\t\texit;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n\nfunction debug($string) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tprint trim($string) . \"\\n\";\n\t}\n}\n\nglobal $local_db_cnn_id, $remote_db_cnn_id;\n\n$recovery_pid = db_fetch_cell(\"SELECT value FROM settings WHERE name='recovery_pid'\", '', true, $local_db_cnn_id);\n$packet_data  = db_fetch_row(\"SHOW GLOBAL VARIABLES LIKE 'max_allowed_packet'\", true, $remote_db_cnn_id);\n\nif (isset($packet_data['Value'])) {\n\t$max_allowed_packet = $packet_data['Value'];\n} else {\n\t$max_allowed_packet = 1E6;\n}\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug          = false;\n$forcerun       = false;\n$verbose        = false;\n$poller_id      = $config['poller_id'];\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$forcerun = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--verbose':\n\t\t\t\t$verbose = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit;\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . \"\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit;\n\t\t}\n\t}\n}\n\n/* check for an invalid run location */\nif ($poller_id == 1) {\n\tprint \"ERROR: This command is only to be run on remote Cacti Data Collectors\\n\";\n\n\texit(1);\n}\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* take time and log performance data */\n$start = microtime(true);\n\n/* configuration variables */\n$record_limit = 150000;\n$sleep_time   = 1;\n\n/* global counter variables */\n$records_inserted = 0;\n\ndebug('About to start recovery processing');\n\nif (!empty($recovery_pid)) {\n\t$pid = posix_kill($recovery_pid, 0);\n\n\tif ($pid === false) {\n\t\t/* we found a stale PID, so we delete it from the table */\n\t\tdb_execute(\"DELETE FROM settings WHERE name='recovery_pid'\", true, $local_db_cnn_id);\n\n\t\t$run = true;\n\t} else {\n\t\t$run = false;\n\t}\n} else {\n\t$run = true;\n}\n\nif ($run) {\n\t$my_pid = getmypid();\n\n\tcacti_log('RECOVERY: No pid exists, starting recovery process (PID=' . $my_pid . ')!', false, 'POLLER');\n\n\tdb_execute_prepared('REPLACE INTO settings\n\t\t(name, value)\n\t\tVALUES (\"recovery_pid\", ?)',\n\t\tarray($my_pid), true, $local_db_cnn_id);\n\n\t/* let the console know you are in recovery mode */\n\tdb_execute_prepared('UPDATE poller\n\t\tSET status = \"5\"\n\t\tWHERE id = ?',\n\t\tarray($poller_id), true, $remote_db_cnn_id);\n\n\tpoller_push_reindex_data_to_poller(0, 0, true);\n\n\twhile (true) {\n\t\tcacti_log('RECOVERY: Getting max_time for '. $record_limit . ' records.', false, 'POLLER');\n\n\t\t$max_time = db_fetch_cell(\"SELECT MAX(time)\n\t\t\tFROM (\n\t\t\t\tSELECT time\n\t\t\t\tFROM poller_output_boost\n\t\t\t\tORDER BY time ASC\n\t\t\t\tLIMIT $record_limit\n\t\t\t) AS rs\", '', true, $local_db_cnn_id);\n\n\t\tif (empty($max_time)) {\n\t\t\tdb_execute(\"DELETE FROM settings WHERE name='recovery_pid'\", true, $local_db_cnn_id);\n\n\t\t\tbreak;\n\t\t} else {\n\t\t\tcacti_log('RECOVERY: Fetching records till time: ' . $max_time . ' from poller DB', false, 'POLLER');\n\n\t\t\t$rows = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM poller_output_boost\n\t\t\t\tWHERE time <= ?\n\t\t\t\tORDER BY time ASC, local_data_id ASC',\n\t\t\t\tarray($max_time));\n\n\t\t\tif (cacti_sizeof($rows)) {\n\t\t\t\t$packet_size = 0;\n\t\t\t\t$sql_array   = array();\n\n\t\t\t\tforeach ($rows as $r) {\n\t\t\t\t\t$sql      = '(' . $r['local_data_id'] . ',' . db_qstr($r['rrd_name']) . ',' . db_qstr($r['time']) . ',' . db_qstr($r['output']) . ')';\n\t\t\t\t\t$sql_size = strlen($sql);\n\n\t\t\t\t\t/* if adding a new row would exceed max_allowed_packet, send the current frame to the main poller and start a new frame */\n\t\t\t\t\tif (($packet_size + $sql_size) >= $max_allowed_packet) {\n\t\t\t\t\t\t$record_count = cacti_sizeof($sql_array);\n\n\t\t\t\t\t\tcacti_log('RECOVERY: Writing ' . $record_count . ' records (' . $packet_size . ' bytes) to main (partial).', false, 'POLLER');\n\n\t\t\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output_boost\n\t\t\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\t\t\tVALUES ' . implode(',', $sql_array), true, $remote_db_cnn_id);\n\n\t\t\t\t\t\t$records_inserted += $record_count;\n\t\t\t\t\t\t$sql_array   = array();\n\t\t\t\t\t\t$packet_size = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t$sql_array[] = $sql;\n\t\t\t\t\t$packet_size += $sql_size;\n\t\t\t\t}\n\n\t\t\t\t/* if there is data in the last frame, send it to main poller as well and finalize */\n\t\t\t\tif ($packet_size > 0) {\n\t\t\t\t\t$record_count = cacti_sizeof($sql_array);\n\n\t\t\t\t\tcacti_log('RECOVERY: Writing ' . $record_count . ' records (' . $packet_size . ' bytes) to main (last slice).', false, 'POLLER');\n\n\t\t\t\t\tdb_execute('INSERT IGNORE INTO poller_output_boost\n\t\t\t\t\t\t(local_data_id, rrd_name, time, output)\n\t\t\t\t\t\tVALUES ' . implode(',', $sql_array), true, $remote_db_cnn_id);\n\n\t\t\t\t\t$records_inserted += $record_count;\n\t\t\t\t}\n\n\t\t\t\t/* remove the recovery records */\n\t\t\t\tif (is_object($local_db_cnn_id)) {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM poller_output_boost\n\t\t\t\t\t\tWHERE time <= ?',\n\t\t\t\t\t\tarray($max_time), true, $local_db_cnn_id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsleep($sleep_time);\n\t\t}\n\t}\n\n\t/* let the console know you are in online mode */\n\tdb_execute_prepared('UPDATE poller\n\t\tSET status=\"2\"\n\t\tWHERE id= ?', array($poller_id), false, $remote_db_cnn_id);\n} else {\n\tdebug('Recovery process still running, exiting');\n\tcacti_log('RECOVERY: Recovery process still running for Poller ' . $poller_id . '.  PID is ' . $recovery_pid, false, 'POLLER');\n\n\texit(1);\n}\n\n$end = microtime(true);\n\ncacti_log('RECOVERY STATS: Time:' . round($end - $start, 2) . ' Records:' . $records_inserted, false, 'SYSTEM');\n\nexit(0);\n"
        },
        {
          "name": "poller_reports.php",
          "type": "blob",
          "size": 8.025390625,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_scheduler.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/reports.php');\n\nglobal $current_user;\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug     = false;\n$force     = false;\n$report_id = false;\n$queue_id  = false;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '--report-id':\n\t\t\t\t$report_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--queue-id':\n\t\t\t\t$queue_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$force = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . \"\\n\\n\";\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* take time and log performance data */\n$start = microtime(true);\n\n/* let's give this script lot of time to run for ever */\nini_set('max_execution_time', '0');\n\n/* cacti upgrading */\nif (!db_table_exists('reports')) {\n\texit(0);\n}\n\nif ($report_id === false) {\n\t$number_sent = 0;\n\n\tif (!$force) {\n\t\t/* silently end if the registered process is still running, or process table missing */\n\t\tif (!register_process_start('reports', 'master', 0, read_config_option('scheduler_timeout'))) {\n\t\t\texit(0);\n\t\t}\n\t}\n\n\t/* fetch all enabled reports that have a start time in the past */\n\t$reports = db_fetch_assoc(\"SELECT * FROM reports WHERE enabled='on'\");\n\n\treports_log('Cacti Reports reports found: ' . cacti_sizeof($reports), true, 'REPORTS', POLLER_VERBOSITY_MEDIUM);\n\n\t$queued = array();\n\n    $command  = read_config_option('path_php_binary');\n    $command .= ' ' . CACTI_PATH_BASE . '/poller_reports.php';\n\n\t/* execute each of those reports */\n\tif (cacti_sizeof($reports)) {\n\t\tforeach ($reports as $report) {\n\t\t\tif (api_scheduler_is_time_to_start($report, 'reports') || $force) {\n\t\t\t\treports_log('Reports scheduling report: ' . $report['name'], true, 'REPORTS', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t$id     = $report['id'];\n\t\t\t\t$name   = $report['name'];\n\t\t\t\t$notify = $report['notify_list'];\n\t\t\t\t$from   = array();\n\n\t\t\t\tif (isset($report['from_email']) && $report['from_email'] != '') {\n\t\t\t\t\t$from_email = $report['from_email'];\n\t\t\t\t} else {\n\t\t\t\t\t$from_email = read_config_option('settings_from_email');\n\t\t\t\t}\n\n\t\t\t\tif (isset($report['from_name']) && $report['from_name'] != '') {\n\t\t\t\t\t$from_name = $report['from_name'];\n\t\t\t\t} else {\n\t\t\t\t\t$from_name = read_config_option('settings_from_name');\n\t\t\t\t}\n\n\t\t\t\tif ($from_email != '' && $from_name != '') {\n\t\t\t\t\t$from['email'] = $from_email;\n\t\t\t\t\t$from['name']  = $from_name;\n\t\t\t\t}\n\n\t\t\t\t$to_emails  = array_map('trim', explode(',', $report['email']));\n\t\t\t\t$bcc_emails = array_map('trim', explode(',', $report['bcc']));\n\n\t\t\t\tif (isset($report['reply_to'])) {\n\t\t\t\t\t$reply_to = $report['reply_to'];\n\t\t\t\t} else {\n\t\t\t\t\t$reply_to = '';\n\t\t\t\t}\n\n\t\t\t\t$notification = array();\n\n\t\t\t\tif (cacti_sizeof($to_emails) || cacti_sizeof($bcc_emails)) {\n\t\t\t\t\t$notification['email']['to_email']  = $to_emails;\n\t\t\t\t\t$notification['email']['bcc_email'] = $bcc_emails;\n\t\t\t\t\t$notification['email']['reply_to']  = $reply_to;\n\t\t\t\t\t$notification['email']['from']      = $from;\n\t\t\t\t}\n\n\t\t\t\tif ($notify > 0) {\n\t\t\t\t\t$notification['notification_list']['id']       = $notify;\n\t\t\t\t\t$notification['notification_list']['reply_to'] = $reply_to;\n\t\t\t\t\t$notification['notification_list']['from']     = $from;\n\t\t\t\t}\n\n\t\t\t\t$queued[] = reports_queue($name, 1, 'reports', $id, $command, $notification);\n\t\t\t}\n\t\t}\n\n\t\t$number_sent = cacti_sizeof($queued);\n\n\t\tif (cacti_sizeof($queued)) {\n\t\t\tforeach($queued as $qid) {\n\t\t\t\treports_run($qid);\n\t\t\t}\n\t\t}\n\n\t\t/* record the end time */\n\t\t$end = microtime(true);\n\n\t\t/* log statistics */\n\t\t$reports_stats = sprintf('Time:%01.4f Reports:%s', $end - $start, $number_sent);\n\t\treports_log('REPORTS STATS: ' . $reports_stats, true, 'REPORTS', POLLER_VERBOSITY_LOW);\n\t\tdb_execute_prepared('REPLACE INTO settings (name, value) VALUES (\"stats_reports\", ?)', array($reports_stats));\n\t}\n\n\tif (!$force) {\n\t\tunregister_process('reports', 'master', 0);\n\t}\n} else {\n\tif (!register_process_start('reports', 'child', $report_id, read_config_option('scheduler_timeout'))) {\n\t\texit(0);\n\t}\n\n\t$report = db_fetch_row_prepared('SELECT *\n\t\tFROM reports\n\t\tWHERE id = ?',\n\t\tarray($report_id));\n\n\tif (cacti_sizeof($report)) {\n\t\treports_log('Reports processing report: ' . $report['name'], true, 'REPORTS');\n\n\t\t$current_user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE id = ?', array($report['user_id']));\n\n\t\tif (isset($report['email'])) {\n\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\tSET last_started = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(date('Y-m-d H:i:s'), $report['id']));\n\n\t\t\tgenerate_report($queue_id, $report, false, 'poller');\n\t\t}\n\t}\n\n\tunregister_process('reports', 'child', $report_id);\n}\n\nexit(0);\n\n/**\n * display_version - displays version information\n */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti Reporting Poller, Version $version, \" . COPYRIGHT_YEARS . \"\\n\";\n}\n\n/**\n * display_help - generic help screen for utilities\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint \"\\nusage: poller_reports.php [--force] [--debug]\\n\\n\";\n\tprint \"Cacti's graphical reporting poller.  This poller will create and distribute\\n\";\n\tprint \"email reports to recipients based upon the schedules for those reports.\\n\\n\";\n\tprint \"Optional:\\n\";\n\tprint \"    --force     - Force all Reports to be sent\\n\";\n\tprint \"    --debug     - Display verbose output during execution\\n\\n\";\n}\n\n/**\n * sig_handler - provides a generic means to catch exceptions to the Cacti log.\n *\n * @param  int   $signo the signal that was thrown by the interface.\n * @return null\n */\nfunction sig_handler($signo) {\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\treports_log('WARNING: Reports Poller terminated by user', false, 'REPORTS TRACE', POLLER_VERBOSITY_LOW);\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n\n"
        },
        {
          "name": "poller_rrdcheck.php",
          "type": "blob",
          "size": 8.28515625,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\nini_set('output_buffering', 'Off');\n\nrequire(__DIR__ . '/include/cli_check.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrdcheck.php');\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\n$debug          = false;\n$forcerun       = false;\n$type           = 'pmaster';\n$thread_id      = 0;\n\nglobal $rrd_files, $total_system, $total_user, $total_real, $total_dsses;\nglobal $user_time, $system_time, $real_time;\n\n$total_system = 0;\n$total_user   = 0;\n$total_real   = 0;\n$total_dsses  = 0;\n\n$system_time  = 0;\n$user_time    = 0;\n$real_time    = 0;\n\n$rrd_files    = 0;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$forcerun = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--type':\n\t\t\t\t$type = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--child':\n\t\t\t\t$thread_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-v':\n\t\t\tcase '-V':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '--help':\n\t\t\tcase '-h':\n\t\t\tcase '-H':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . PHP_EOL . PHP_EOL;\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n/**\n * Types include\n *\n * pmaster  - the main process launched from the Cacti main poller and will launch child processes\n * pchild   - a child of the master process from the 'master'\n *\n * bmaster  - a boost master process, will perform launch bchild processes\n * bchild   - a child of the boost master process, will launch boost collection\n */\n\n/* install signal handlers for UNIX only */\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n}\n\n/* take time and log performance data */\n$start = microtime(true);\n\n/* let's give this script lot of time to run for ever */\nini_set('max_execution_time', '0');\n\n/* send a gentle message to the log and stdout */\nrrdcheck_debug('Polling Starting');\n\n/* silently end if the registered process is still running */\nif (!$forcerun) {\n\tif (!register_process_start('rrdcheck', $type, $thread_id, read_config_option('rrdcheck_timeout'))) {\n\t\texit(0);\n\t}\n}\n\n// Collect data as determined by the type\nswitch ($type) {\n\tcase 'pmaster':\n\t\tif (read_config_option('rrdcheck_enable') == 'on' || $forcerun) {\n\t\t\trrdcheck_master_handler($forcerun);\n\t\t}\n\n\t\tbreak;\n\tcase 'bmaster': // Launched at the end of boost\n\t\trrdcheck_launch_children($type);\n\n\t\t/* Wait for all processes to continue */\n\t\twhile ($running = rrdcheck_processes_running($type)) {\n\t\t\trrdcheck_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\tsleep(2);\n\t\t}\n\n\t\tbreak;\n\tcase 'child':  // Launched by the master process\n\tcase 'bchild': // Launched by the boost process\n\t\t$child_start = microtime(true);\n\n\t\tdo_rrdcheck($thread_id);\n\n\t\t$total_time = microtime(true) - $child_start;\n\n\t\trrdcheck_log_child_stats($type, $thread_id, $total_time);\n\n\t\tbreak;\n}\n\nrrdcheck_debug('Polling Ending');\n\nset_config_option('rrdcheck_last_run_time', time());\n\nif (!$forcerun) {\n\tunregister_process('rrdcheck', $type, $thread_id);\n}\n\nexit(0);\n\nfunction rrdcheck_master_handler($forcerun) {\n\tglobal $type;\n\n\t/* read some important settings relative to timing from the database */\n\t$run_interval = read_config_option('rrdcheck_interval');\n\n\t$last_run = read_config_option('rrdcheck_last_run_time');\n\n\t/* see if boost is active or not */\n\t$boost_active = read_config_option('boost_rrd_update_enable');\n\n\t/* next let's see if it's time to update the interval */\n\t$current_time = time();\n\n\tif ($boost_active == 'on') {\n\t\t// boost will spawn the collector\n\t\trrdcheck_debug('Skipping Periodic Rollup - Boost will handle the Periodic Roll-up Cycle');\n\t} else {\n\t\tif ($run_interval == 'boost') {\n\t\t\tcacti_log(\"WARNING: RRDcheck interval set to 'boost' and boost not enabled, resetting to default of 4 hours\", false, 'RRDCHECK');\n\n\t\t\tset_config_option('rrdcheck_interval', 240);\n\n\t\t\t$run_interval = 240;\n\t\t}\n\n\t\t// determine if it's time to determine hourly averages\n\t\tif (empty($last_run)) {\n\t\t\t// since the poller has never run before, let's fake it out\n\t\t\tset_config_option('rrdcheck_last_run_time', ($current_time-86400));\n\t\t}\n\n\t\t// if it's time to check, do so now\n\t\tif ((!empty($last_run) && (($last_run + ($run_interval * 60)) < $current_time)) || $forcerun) {\n\n\t\t\trrdcheck_launch_children($type);\n\n\t\t\t// Wait for all processes to continue\n\t\t\twhile ($running = rrdcheck_processes_running($type)) {\n\t\t\t\trrdcheck_debug(sprintf('%s Processes Running, Sleeping for 2 seconds.', $running));\n\t\t\t\tsleep(2);\n\t\t\t}\n\n\t\t\t// delete old data\n\t\t\tdb_execute('DELETE FROM rrdcheck WHERE test_date < DATE_SUB(NOW(), INTERVAL 7 DAY)');\n\n\t\t\trrdcheck_log_statistics('HOURLY');\n\t\t}\n\t}\n}\n\n/**\n * display_version - displays version information\n */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti RRD Check Poller, Version $version \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/**\n * display_help - generic help screen for utilities\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL . 'usage: poller_rrdcheck.php [--force] [--debug]' . PHP_EOL . PHP_EOL;\n\n\tprint 'Cacti\\'s RRD check poller.  This poller will periodically' . PHP_EOL;\n\tprint 'check rrdfiles and saved datasources and works in conjunction' . PHP_EOL;\n\tprint 'with Cacti\\'s performance boosting poller as required.' . PHP_EOL . PHP_EOL;\n\n\tprint 'System Controlled:' . PHP_EOL;\n\tprint '    --type      - The type and subtype of the rrdcheck process' . PHP_EOL;\n\tprint '    --child     - The thread id of the child process' . PHP_EOL . PHP_EOL;\n\n\tprint 'Optional:' . PHP_EOL;\n\tprint '    --force     - Force the execution of a update process' . PHP_EOL;\n\tprint '    --debug     - Display verbose output during execution' . PHP_EOL . PHP_EOL;\n}\n\n/**\n * sig_handler - provides a generic means to catch exceptions to the Cacti log.\n *\n * @param $signo - (int) the signal that was thrown by the interface.\n *\n * @return - null\n */\nfunction sig_handler($signo) {\n\tglobal $type, $thread_id;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\t\tcacti_log('WARNING: rrdcheck Poller terminated by user', false, 'RRDCHECK');\n\n\t\t\t/* tell the main poller that we are done */\n\t\t\tif ($type == 'master') {\n\t\t\t\tset_config_option('rrdcheck_poller_status', 'terminated - end time:' . date('Y-m-d G:i:s'));\n\t\t\t}\n\n\t\t\tif (strpos($type, 'master') !== false) {\n\t\t\t\trrdcheck_kill_running_processes();\n\t\t\t}\n\n\t\t\tunregister_process('rrdcheck', $type, $thread_id, getmypid());\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* ignore all other signals */\n\t}\n}\n"
        },
        {
          "name": "poller_spikekill.php",
          "type": "blob",
          "size": 8.1162109375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/cli_check.php');\n\nini_set('memory_limit', '-1');\n\n/* process calling arguments */\n$parms = $_SERVER['argv'];\narray_shift($parms);\n\nglobal $debug, $start, $seed, $forcerun;\n\n$debug     = false;\n$forcerun  = false;\n$templates = false;\n$kills     = 0;\n\nif (cacti_sizeof($parms)) {\n\tforeach ($parms as $parameter) {\n\t\tif (strpos($parameter, '=')) {\n\t\t\tlist($arg, $value) = explode('=', $parameter);\n\t\t} else {\n\t\t\t$arg   = $parameter;\n\t\t\t$value = '';\n\t\t}\n\n\t\tswitch ($arg) {\n\t\t\tcase '-d':\n\t\t\tcase '--debug':\n\t\t\t\t$debug = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--templates':\n\t\t\t\t$templates = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase '-f':\n\t\t\tcase '--force':\n\t\t\t\t$forcerun = true;\n\n\t\t\t\tbreak;\n\t\t\tcase '--version':\n\t\t\tcase '-V':\n\t\t\tcase '-v':\n\t\t\t\tdisplay_version();\n\n\t\t\t\texit(0);\n\t\t\tcase '--help':\n\t\t\tcase '-H':\n\t\t\tcase '-h':\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(0);\n\n\t\t\tdefault:\n\t\t\t\tprint 'ERROR: Invalid Parameter ' . $parameter . PHP_EOL . PHP_EOL;\n\t\t\t\tdisplay_help();\n\n\t\t\t\texit(1);\n\t\t}\n\t}\n}\n\n/* silently end if the registered process is still running, or process table missing */\nif (!register_process_start('spikekill', 'master', 0, read_config_option('spikekill_timeout'))) {\n\texit(0);\n}\n\nprint 'NOTE: SpikeKill Running' . PHP_EOL;\n\nif (!$templates) {\n\t$templates = db_fetch_cell(\"SELECT value FROM settings WHERE name='spikekill_templates'\");\n\n\tif ($templates != '') {\n\t\t$templates = explode(',', $templates);\n\t}\n} else {\n\t$templates = explode(',', $templates);\n}\n\nif (!cacti_sizeof($templates)) {\n\tprint 'ERROR: No valid Graph Templates selected' . PHP_EOL . PHP_EOL;\n\tunregister_process('spikekill', 'master', 0);\n\n\texit(1);\n} else {\n\tforeach ($templates as $template) {\n\t\tif (!is_numeric($template)) {\n\t\t\tprint \"ERROR: Graph Template '\" . $template . \"' Invalid\" . PHP_EOL . PHP_EOL;\n\t\t\tunregister_process('spikekill', 'master', 0);\n\n\t\t\texit(1);\n\t\t}\n\t}\n}\n\nif (timeToRun()) {\n\tdebug('Starting Spikekill Process');\n\n\t$start   = microtime(true);\n\n\t$graphs = kill_spikes($templates, $kills);\n\n\t$purges = 0;\n\n\tif (read_config_option('spikekill_purge') > 0) {\n\t\t$purges = purge_spike_backups();\n\t}\n\n\t$end  = microtime(true);\n\n\t$cacti_stats = sprintf(\n\t\t'Time:%01.4f ' .\n\t\t'Graphs:%s ' .\n\t\t'Purges:%s ' .\n\t\t'Kills:%s',\n\t\tround($end - $start,2),\n\t\t$graphs,\n\t\t$purges,\n\t\t$kills);\n\n\t/* log to the database */\n\tdb_execute_prepared('REPLACE INTO settings (name,value) VALUES (\"stats_spikekill\", ?)', array($cacti_stats));\n\n\t/* log to the logfile */\n\tcacti_log('SPIKEKILL STATS: ' . $cacti_stats , true, 'SYSTEM');\n}\n\nprint 'NOTE: SpikeKill Finished' . PHP_EOL;\n\nunregister_process('spikekill', 'master', 0);\n\nexit(0);\n\nfunction timeToRun() {\n\tglobal $forcerun;\n\n\t$lastrun   = read_config_option('spikekill_lastrun');\n\t$frequency = read_config_option('spikekill_batch') * 3600;\n\t$basetime  = strtotime(read_config_option('spikekill_basetime'));\n\t$baseupper = $basetime + 300;\n\t$baselower = $basetime - 300;\n\t$now       = time();\n\n\tdebug(\"LastRun:'$lastrun', Frequency:'$frequency', BaseTime:'\" . date('Y-m-d H:i:s', $basetime) . \"', BaseUpper:'$baseupper', BaseLower:'$baselower', Now:'\" . date('Y-m-d H:i:s', $now) . \"'\");\n\n\tif ($frequency > 0 && ($now - $lastrun > $frequency)) {\n\t\tdebug(\"Frequency is '$frequency' Seconds\");\n\n\t\tif (empty($lastrun) && ($now < $baseupper) && ($now > $baselower)) {\n\t\t\tdebug('Time to Run');\n\t\t\tdb_execute_prepared('REPLACE INTO settings (name,value) VALUES (\"spikekill_lastrun\", ?)', array(time()));\n\n\t\t\treturn true;\n\t\t} elseif (($now - $lastrun > $frequency) && ($now < $baseupper) && ($now > $baselower)) {\n\t\t\tdebug('Time to Run');\n\t\t\tdb_execute_prepared('REPLACE INTO settings (name,value) VALUES (\"spikekill_lastrun\", ?)', array(time()));\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tdebug('Not Time to Run');\n\n\t\t\treturn false;\n\t\t}\n\t} elseif ($forcerun) {\n\t\tdebug('Force to Run');\n\t\tdb_execute_prepared('REPLACE INTO settings (name,value) VALUES (\"spikekill_lastrun\", ?', array(time()));\n\n\t\treturn true;\n\t} else {\n\t\tdebug('Not time to Run');\n\n\t\treturn false;\n\t}\n}\n\nfunction debug($message) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tprint 'DEBUG: ' . trim($message) . PHP_EOL;\n\t}\n}\n\nfunction purge_spike_backups() {\n\t$directory = read_config_option('spikekill_backupdir');\n\t$retention = read_config_option('spikekil_backup');\n\n\t$purges = 0;\n\n\tif (empty($retention)) {\n\t\treturn false;\n\t}\n\n\t$earlytime = time() - $retention;\n\n\tif ($directory != '' && is_dir($directory) && is_writable($directory)) {\n\t\t$files = array_diff(scandir($directory), array('.', '..'));\n\n\t\tif (cacti_sizeof($files)) {\n\t\t\tforeach ($files as $file) {\n\t\t\t\t$filepath = $directory . '/' . $file;\n\n\t\t\t\tif (is_file($filepath) && strpos($filepath, 'rrd') !== false) {\n\t\t\t\t\t$mtime = filemtime($filepath);\n\n\t\t\t\t\tif ($mtime < $earlytime) {\n\t\t\t\t\t\tif (is_writable($filepath)) {\n\t\t\t\t\t\t\tunlink($filepath);\n\t\t\t\t\t\t\t$purges++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcacti_log('Unable to remove ' . $filepath . ' due to write permissions', 'SPIKES');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $purges;\n}\n\nfunction kill_spikes($templates, &$found) {\n\tglobal $debug, $config;\n\n\t$rrdfiles = array_rekey(db_fetch_assoc('SELECT DISTINCT rrd_path\n\t\tFROM graph_templates AS gt\n\t\tINNER JOIN graph_templates_item AS gti\n\t\tON gt.id=gti.graph_template_id\n\t\tINNER JOIN data_template_rrd AS dtr\n\t\tON gti.task_item_id=dtr.id\n\t\tINNER JOIN poller_item AS pi ON pi.local_data_id=dtr.local_data_id\n\t\tWHERE gt.id IN (' . implode(',', $templates) . ')'), 'rrd_path', 'rrd_path');\n\n\tif (cacti_sizeof($rrdfiles)) {\n\t\tforeach ($rrdfiles as $f) {\n\t\t\tdebug(\"Removing Spikes from '$f'\");\n\n\t\t\t$response = exec(cacti_escapeshellcmd(read_config_option('path_php_binary')) . ' -q ' .\n\t\t\t\tcacti_escapeshellarg(CACTI_PATH_CLI . '/removespikes.php') . ' --rrdfile=' . $f . ($debug ? ' --debug':''));\n\n\t\t\tif (substr_count($response, 'Spikes Found and Remediated')) {\n\t\t\t\t$found++;\n\t\t\t}\n\n\t\t\tdebug(str_replace('NOTE: ', '', $response));\n\t\t}\n\t}\n\n\treturn cacti_sizeof($rrdfiles);\n}\n\n/*  display_version - displays version information */\nfunction display_version() {\n\t$version = get_cacti_cli_version();\n\tprint \"Cacti SpikeKiller Batch Poller, Version $version, \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL . 'usage: poller_spikekill.php [--templates=N,N,...] [--force] [--debug]' . PHP_EOL . PHP_EOL;\n\tprint \"Cacti's SpikeKill batch removal poller.  This poller will remove spikes\" . PHP_EOL;\n\tprint \"in Cacti's RRDfiles based upon the settings maintained in Cacti's database.\" . PHP_EOL . PHP_EOL;\n\tprint 'Optional:' . PHP_EOL;\n\tprint '    --templates=N,N,... - Only despike the templates provided.' . PHP_EOL;\n\tprint '    --force             - Force running the despiking immediately.' . PHP_EOL;\n\tprint '    --debug             - Display verbose output during execution.' . PHP_EOL;\n}\n"
        },
        {
          "name": "pollers.php",
          "type": "blob",
          "size": 37.4013671875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire('./include/auth.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\n\n/* performing a full sync can take a lot of memory and time */\nini_set('memory_limit', '-1');\nini_set('max_execution_time', '900');\n\n$actions = array(\n\tPOLLER_DISABLE     => __('Disable'),\n\tPOLLER_ENABLE      => __('Enable'),\n\tPOLLER_CLEAR_STATS => __('Clear Statistics'),\n);\n\nif ($config['poller_id'] == 1) {\n\t$actions += array(POLLER_RESYNC   => __('Full Sync'));\n\t$actions += array(POLLER_AUTHSYNC => __('Auth Sync'));\n}\n\n$poller_status = array(\n\tPOLLER_STATUS_NEW        => '<div class=\"deviceUnknown\">'    . __('New/Idle')     . '</div>',\n\tPOLLER_STATUS_RUNNING    => '<div class=\"deviceUp\">'         . __('Running')      . '</div>',\n\tPOLLER_STATUS_IDLE       => '<div class=\"deviceRecovering\">' . __('Idle')         . '</div>',\n\tPOLLER_STATUS_DOWN       => '<div class=\"deviceDown\">'       . __('Down')         . '</div>',\n\tPOLLER_STATUS_DISABLED   => '<div class=\"deviceDisabled\">'   . __('Disabled')     . '</div>',\n\tPOLLER_STATUS_RECOVERING => '<div class=\"deviceDown\">'       . __('Recovering')   . '</div>',\n\tPOLLER_STATUS_HEARTBEAT  => '<div class=\"deviceDown\">'       . __('Heartbeat')    . '</div>',\n);\n\n\n$logfile_verbosity = array_merge(array(-1 => __('Use Cacti Log Level')), $logfile_verbosity);\n\n/* file: pollers.php, action: edit */\n$fields_poller_edit = array(\n\t'spacer0' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Data Collector Information'),\n\t),\n\t'name' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description'   => __('The primary name for this Data Collector.'),\n\t\t'value'         => '|arg1:name|',\n\t\t'size'          => '50',\n\t\t'default'       => __('New Data Collector'),\n\t\t'max_length'    => '100'\n\t),\n\t'hostname' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Data Collector Hostname'),\n\t\t'description'   => __('The hostname for Data Collector.  It may have to be a Fully Qualified Domain name for the remote Pollers to contact it for activities such as re-indexing, Real-time graphing, etc.'),\n\t\t'value'         => '|arg1:hostname|',\n\t\t'size'          => '50',\n\t\t'default'       => '',\n\t\t'max_length'    => '100'\n\t),\n\t'log_level' => array(\n\t\t'method'        => 'drop_array',\n\t\t'friendly_name' => __('Custom Log Level'),\n\t\t'description'   => __('In Cases where you need to perform debugging for a single Data Collector Only, you can change it\\'s log level here.'),\n\t\t'value'         => '|arg1:log_level|',\n\t\t'default'       => '-1',\n\t\t'array'         => $logfile_verbosity,\n\t),\n\t'timezone' => array(\n\t\t'method'        => 'drop_callback',\n\t\t'friendly_name' => __('TimeZone'),\n\t\t'description'   => __('The TimeZone for the Data Collector.'),\n\t\t'sql'           => 'SELECT Name AS id, Name AS name FROM mysql.time_zone_name ORDER BY name',\n\t\t'action'        => 'ajax_tz',\n\t\t'id'            => '|arg1:timezone|',\n\t\t'value'         => '|arg1:timezone|'\n\t),\n\t'notes' => array(\n\t\t'method'        => 'textarea',\n\t\t'friendly_name' => __('Notes'),\n\t\t'description'   => __('Notes for this Data Collectors Database.'),\n\t\t'value'         => '|arg1:notes|',\n\t\t'textarea_rows' => 4,\n\t\t'textarea_cols' => 50\n\t),\n\t'spacer_collection' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Collection Settings'),\n\t),\n\t'processes' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Processes'),\n\t\t'description'   => __('The number of Data Collector processes to use to spawn.'),\n\t\t'value'         => '|arg1:processes|',\n\t\t'size'          => '10',\n\t\t'default'       => read_config_option('concurrent_processes'),\n\t\t'max_length'    => '4'\n\t),\n\t'threads' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Threads'),\n\t\t'description'   => __('The number of Spine Threads to use per Data Collector process.'),\n\t\t'value'         => '|arg1:threads|',\n\t\t'size'          => '10',\n\t\t'default'       => read_config_option('max_threads'),\n\t\t'max_length'    => '4'\n\t),\n\t'sync_interval' => array(\n\t\t'method'        => 'drop_array',\n\t\t'friendly_name' => __('Sync Interval'),\n\t\t'description'   => __('The polling sync interval in use.  This setting will affect how often this poller is checked and updated.'),\n\t\t'value'         => '|arg1:sync_interval|',\n\t\t'default'       => read_config_option('poller_sync_interval'),\n\t\t'array'         => $poller_sync_intervals,\n\t),\n\t'spacer_remotedb' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Remote Database Connection'),\n\t),\n\t'dbhost' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Hostname'),\n\t\t'description'   => __('The hostname for the remote database server.'),\n\t\t'value'         => '|arg1:dbhost|',\n\t\t'size'          => '50',\n\t\t'default'       => '',\n\t\t'max_length'    => '100'\n\t),\n\t'dbdefault' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database Name'),\n\t\t'description'   => __('The name of the remote database.'),\n\t\t'value'         => '|arg1:dbdefault|',\n\t\t'size'          => '20',\n\t\t'default'       => $database_default,\n\t\t'max_length'    => '20'\n\t),\n\t'dbuser' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database User'),\n\t\t'description'   => __('The user name to use to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbuser|',\n\t\t'size'          => '20',\n\t\t'default'       => $database_username,\n\t\t'max_length'    => '20'\n\t),\n\t'dbpass' => array(\n\t\t'method'        => 'textbox_password',\n\t\t'friendly_name' => __('Remote Database Password'),\n\t\t'description'   => __('The user password to use to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbpass|',\n\t\t'size'          => '40',\n\t\t'default'       => $database_password,\n\t\t'max_length'    => '64'\n\t),\n\t'dbport' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database Port'),\n\t\t'description'   => __('The TCP port to use to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbport|',\n\t\t'size'          => '5',\n\t\t'default'       => $database_port,\n\t\t'max_length'    => '5'\n\t),\n\t'dbretries' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database Retries'),\n\t\t'description'   => __('The number of times to attempt to retry to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbretries|',\n\t\t'size'          => '5',\n\t\t'default'       => $database_retries,\n\t\t'max_length'    => '5'\n\t),\n\t'spacerssl' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Remote Database SSL Information'),\n\t\t'description' => __('Starting in MariaDB 11.4 and above, SSL is autonegotiated between the client and server.  So, this option may not be required')\n\t),\n\t'dbssl' => array(\n\t\t'method'        => 'checkbox',\n\t\t'friendly_name' => __('Remote Database SSL'),\n\t\t'description'   => __('If the remote database uses SSL to connect, and it\\'s prior to MariaDB 11.4, check the checkbox below to enter the details.'),\n\t\t'value'         => '|arg1:dbssl|',\n\t\t'default'       => $database_ssl ? 'on' : ''\n\t),\n\t'dbsslkey' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database SSL Key'),\n\t\t'description'   => __('The file holding the SSL Key to use to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbsslkey|',\n\t\t'size'          => '50',\n\t\t'default'       => $database_ssl_key,\n\t\t'max_length'    => '255'\n\t),\n\t'dbsslcert' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database SSL Certificate'),\n\t\t'description'   => __('The file holding the SSL Certificate to use to connect to the remote database.'),\n\t\t'value'         => '|arg1:dbsslcert|',\n\t\t'size'          => '50',\n\t\t'default'       => $database_ssl_cert,\n\t\t'max_length'    => '255'\n\t),\n\t'dbsslca' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database SSL Authority'),\n\t\t'description'   => __('The file holding the SSL Certificate Authority to use to connect to the remote database.  This is an optional parameter that can be required by the database provider if they have started SSL using the --ssl-mode=VERIFY_CA option.'),\n\t\t'value'         => '|arg1:dbsslca|',\n\t\t'size'          => '50',\n\t\t'default'       => $database_ssl_ca,\n\t\t'max_length'    => '255'\n\t),\n \t'dbsslcapath' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Remote Database SSL Authorities directory'),\n\t\t'description'   => __('The file path to the directory that contains the trusted SSL Certificate Authority certificates. This is an optional parameter that can used instead of giving the path to an individual Certificate Authority file. This parameter can be required by the database provider if they have started SSL using the --ssl-mode=VERIFY_CA option.'),\n\t\t'value'         => '|arg1:dbsslcapath|',\n\t\t'size'          => '50',\n\t\t'default'       => $database_ssl_capath,\n\t\t'max_length'    => '255'\n\t),\n\t'dbsslverifyservercert' => array(\n\t\t'method'        => 'checkbox',\n\t\t'friendly_name' => __('Remote Database SSL'),\n\t\t'description'   => __(\"Provides a way to disable verification of the server's SSL certificate Common Name against the server's hostname when connecting. This verification is enabled by default.\"),\n\t\t'value'         => '|arg1:dbsslverifyservercert|',\n\t\t'default'       => $database_ssl_verify_server_cert ? 'on' : ''\n\t),\n\t'spacertest' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Test Connection'),\n\t),\n\t'id' => array(\n\t\t'method' => 'hidden',\n\t\t'value'  => '|arg1:id|',\n\t),\n\t'save_component_poller' => array(\n\t\t'method' => 'hidden',\n\t\t'value'  => '1'\n\t)\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_tz':\n\t\tprint json_encode(db_fetch_assoc_prepared('SELECT Name AS label, Name AS `value`\n\t\t\tFROM mysql.time_zone_name\n\t\t\tWHERE Name LIKE ?\n\t\t\tORDER BY Name\n\t\t\tLIMIT ' . read_config_option('autocomplete_rows'),\n\t\t\tarray('%' . get_nfilter_request_var('term') . '%')\n\t\t));\n\n\t\tbreak;\n\tcase 'ping':\n\t\ttest_database_connection();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tpoller_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tpollers();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_poller')) {\n\t\t// Common data\n\t\t$save['id']        = get_filter_request_var('id');\n\t\t$save['name']      = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['hostname']  = form_input_validate(get_nfilter_request_var('hostname'), 'hostname', '', false, 3);\n\t\t$save['log_level'] = form_input_validate(get_nfilter_request_var('log_level'), 'log_level', '', false, 3);\n\t\t$save['timezone']  = form_input_validate(get_nfilter_request_var('timezone'), 'timezone', '', false, 3);\n\t\t$save['notes']     = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\t\t// Process settings\n\t\t$save['processes'] = form_input_validate(get_nfilter_request_var('processes'), 'processes', '^[0-9]+$', false, 3);\n\t\t$save['threads']   = form_input_validate(get_nfilter_request_var('threads'), 'threads', '^[0-9]+$', false, 3);\n\n\t\tif ($save['id'] != 1) {\n\t\t\t$save['sync_interval'] = form_input_validate(get_nfilter_request_var('sync_interval'), 'sync_interval', '^[0-9]+$', false, 3);\n\n\t\t\t// Database settings\n\t\t\t$save['dbdefault']     = form_input_validate(get_nfilter_request_var('dbdefault'), 'dbdefault', '', true, 3);\n\t\t\t$save['dbhost']        = form_input_validate(get_nfilter_request_var('dbhost'),    'dbhost',    '', true, 3);\n\t\t\t$save['dbuser']        = form_input_validate(get_nfilter_request_var('dbuser'),    'dbuser',    '', true, 3);\n\t\t\t$save['dbpass']        = form_input_validate(get_nfilter_request_var('dbpass'),    'dbpass',    '', true, 3);\n\t\t\t$save['dbport']        = form_input_validate(get_nfilter_request_var('dbport'),    'dbport',    '^[0-9]+$', true, 3);\n\t\t\t$save['dbretries']     = form_input_validate(get_nfilter_request_var('dbretries'), 'dbretries', '^[0-9]+$', true, 3);\n\t\t\t$save['dbssl']         = isset_request_var('dbssl') ? 'on' : '';\n\t\t\t$save['dbsslkey']      = form_input_validate(get_nfilter_request_var('dbsslkey'),  'dbsslkey',  '', true, 3);\n\t\t\t$save['dbsslcert']     = form_input_validate(get_nfilter_request_var('dbsslcert'), 'dbsslcert', '', true, 3);\n\t\t\t$save['dbsslca']       = form_input_validate(get_nfilter_request_var('dbsslca'),   'dbsslca',   '', true, 3);\n\t\t\t$save['dbsslcapath']   = form_input_validate(get_nfilter_request_var('dbsslcapath'), 'dbsslcapath',   '', true, 3);\n\t\t\t$save['dbsslverifyservercert'] = isset_request_var('dbsslverifyservercert') ? 'on' : '';\n\t\t}\n\n\t\t// Check for duplicate hostname\n\t\t$error = false;\n\n\t\tif (poller_check_duplicate_poller_id($save['id'], $save['hostname'], 'hostname')) {\n\t\t\traise_message('dupe_hostname', __esc('You have already used this hostname \\'%s\\'.  Please enter a non-duplicate hostname.', $save['hostname']), MESSAGE_LEVEL_ERROR);\n\t\t\t$error = true;\n\t\t}\n\n\t\tif (isset($save['dbhost'])) {\n\t\t\tif (poller_check_duplicate_poller_id($save['id'], $save['dbhost'], 'dbhost')) {\n\t\t\t\traise_message('dupe_dbhost', __esc('You have already used this database hostname \\'%s\\'.  Please enter a non-duplicate database hostname.', $save['hostname']), MESSAGE_LEVEL_ERROR);\n\t\t\t\t$error = true;\n\t\t\t}\n\t\t}\n\n\t\tif (isset($save['dbhost']) && $save['dbhost'] == 'localhost' && $save['id'] > 1) {\n\t\t\traise_message('poller_dbhost');\n\t\t} elseif ($save['id'] > 1 && poller_host_duplicate($save['id'], $save['dbhost'])) {\n\t\t\traise_message('poller_nodupe');\n\t\t} elseif (!is_error_message() && $error == false) {\n\t\t\t$poller_id = sql_save($save, 'poller');\n\n\t\t\tif ($poller_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: pollers.php?action=edit&id=' . (empty($poller_id) ? get_nfilter_request_var('id') : $poller_id));\n\t}\n}\n\nfunction poller_check_duplicate_poller_id($poller_id, $hostname, $column) {\n\t$ip_addresses  = array();\n\t$ip_hostnames  = array();\n\n\tif (is_ipaddress($hostname)) {\n\t\t$address = @gethostbyaddr($hostname);\n\n\t\tif ($address != $hostname) {\n\t\t\t$ip_hostnames[$address] = $address;\n\t\t} else {\n\t\t\t$ip_addresses[$address] = $address;\n\t\t}\n\n\t\t$ip_addresses[$hostname] = $hostname;\n\t} elseif (strpos($hostname, '.') !== false) {\n\t\t$addresses = @dns_get_record($hostname);\n\t\t$ip        = @gethostbyname($hostname);\n\n\t\tif ($ip != $hostname) {\n\t\t\t$ip_addresses[$ip] = $ip;\n\t\t}\n\n\t\t$ip_hostnames[$hostname] = $hostname;\n\n\t\tif (cacti_sizeof($addresses)) {\n\t\t\tforeach ($addresses as $address) {\n\t\t\t\tif (isset($address['target'])) {\n\t\t\t\t\t$ip_hostnames[$address['host']] = $address['host'];\n\t\t\t\t}\n\n\t\t\t\tif (isset($address['host'])) {\n\t\t\t\t\t$ip_hostnames[$address['host']] = $address['host'];\n\t\t\t\t}\n\n\t\t\t\tif (isset($address['ip'])) {\n\t\t\t\t\t$ip_addresses[$address['ip']] = $address['ip'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$ip_hostname[$hostname] = $hostname;\n\n\t\t$address = @gethostbyname($hostname);\n\n\t\tif ($address != $hostname) {\n\t\t\t$ip_addresses[$address] = $address;\n\t\t}\n\t}\n\n\t$sql_where1 = '';\n\n\tif (cacti_sizeof($ip_addresses)) {\n\t\t$sql_where1 = \"$column IN ('\" . implode(\"','\", $ip_addresses) . \"')\";\n\t}\n\n\t$sql_where2 = '';\n\n\tif (cacti_sizeof($ip_hostnames)) {\n\t\tforeach ($ip_hostnames as $host) {\n\t\t\t$parts = explode('.', $host);\n\t\t\t$sql_where2 .= ($sql_where2 != '' ? ' OR ' : ' (') .\n\t\t\t\t\"($column = \" . db_qstr($parts[0]) .\n\t\t\t\t\" OR $column = \" . db_qstr($host) . ')';\n\t\t}\n\t\t$sql_where2 .= ')';\n\t}\n\n\tif ($sql_where1 != '' || $sql_where2 != '') {\n\t\t$sql_where = ' AND (' . $sql_where1 . ($sql_where1 != '' && $sql_where2 != '' ? ' OR ' : '') . $sql_where2 . ')';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$duplicate = db_fetch_cell_prepared(\"SELECT id\n\t\tFROM poller\n\t\tWHERE id != ?\n\t\t$sql_where\",\n\t\tarray($poller_id)\n\t);\n\n\tif (empty($duplicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nfunction poller_host_duplicate($poller_id, $host) {\n\tif ($host == 'localhost') {\n\t\treturn true;\n\t} else {\n\t\treturn db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM poller\n\t\t\tWHERE dbhost LIKE ?\n\t\t\tAND id != ?',\n\t\t\tarray($host . '%', $poller_id));\n\t}\n}\n\nfunction form_actions() {\n\tglobal $config, $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == POLLER_DELETE) { // delete\n\t\t\t\tdb_execute('DELETE FROM poller WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('UPDATE host SET poller_id=1 WHERE deleted=\"\" AND ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE automation_networks SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE automation_processes SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE poller_command SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE poller_item SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE poller_output_realtime SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\t\t\t\tdb_execute('UPDATE poller_time SET poller_id=1 WHERE ' . array_to_sql_or($selected_items, 'poller_id'));\n\n\t\t\t\tcacti_log('NOTE: The poller(s) with the id(s): ' . implode(',', $selected_items) . ' deleted by user ' . $_SESSION[SESS_USER_ID], false, 'WEBUI');\n\t\t\t} elseif (get_request_var('drp_action') == POLLER_DISABLE) { // disable\n\t\t\t\tdb_execute('UPDATE poller SET disabled=\"on\" WHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\tcacti_log('NOTE: The poller(s) with the id(s): ' . implode(',', $selected_items) . ' disabled by user ' . $_SESSION[SESS_USER_ID], false, 'WEBUI');\n\t\t\t} elseif (get_request_var('drp_action') == POLLER_ENABLE) { // enable\n\t\t\t\tdb_execute('UPDATE poller SET disabled=\"\" WHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\tcacti_log('NOTE: The poller(s) with the id(s): ' . implode(',', $selected_items) . ' enabled by user ' . $_SESSION[SESS_USER_ID], false, 'WEBUI');\n\t\t\t} elseif (get_request_var('drp_action') == POLLER_RESYNC || get_request_var('drp_action') == POLLER_AUTHSYNC) { // full or auth sync\n\t\t\t\tcacti_session_close();\n\n\t\t\t\tif (get_request_var('drp_action') == POLLER_RESYNC) {\n\t\t\t\t\t$class = 'all';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'auth';\n\t\t\t\t}\n\n\t\t\t\t$success = array();\n\t\t\t\t$failed  = array();\n\t\t\t\t$ids     = array();\n\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\t// Operation not allowed on the main poller\n\t\t\t\t\tif ($item == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$ids[]   = $item;\n\n\t\t\t\t\t$poller = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM poller\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($item)\n\t\t\t\t\t);\n\n\t\t\t\t\tif ($poller['dbhost'] == 'localhost') {\n\t\t\t\t\t\traise_message('poller_dbhost');\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($item == 1) {\n\t\t\t\t\t\traise_message('poller_nomain');\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (replicate_out($item, $class)) {\n\t\t\t\t\t\t\t$success[] = $item;\n\n\t\t\t\t\t\t\tif ($class == 'all') {\n\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE poller\n\t\t\t\t\t\t\t\t\tSET last_sync = NOW()\n\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\tarray($item)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$failed[] = $item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcacti_session_start();\n\n\t\t\t\tif (cacti_sizeof($failed)) {\n\t\t\t\t\tcacti_log('WARNING: Some Selected Remote Data Collectors in [' . implode(', ', $ids) . '] failed synchronization by user ' . get_username($_SESSION[SESS_USER_ID]) . ', Successful/Failed[' . cacti_sizeof($success) . '/' . cacti_sizeof($failed) . '].  See log for details.', false, 'WEBUI');\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log('NOTE: All Selected Remote Data Collectors in [' . implode(', ', $ids) . '] synchronized correctly by user ' . get_username($_SESSION[SESS_USER_ID]), false, 'WEBUI');\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // clear statistics\n\t\t\t\tforeach ($selected_items as $item) {\n\t\t\t\t\tdb_execute_prepared('UPDATE poller\n\t\t\t\t\t\tSET total_time = 0, max_time = 0, min_time = 9999999, avg_time = 0, total_polls = 0\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($item)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\traise_message('poller_clear', __('Data Collector Statistics cleared.'), MESSAGE_LEVEL_INFO);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: pollers.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM poller WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'pollers.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\tPOLLER_DELETE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Data Collector.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete the following Data Collectors.'),\n\t\t\t\t\t'scont'    => __('Delete Data Collector'),\n\t\t\t\t\t'pcont'    => __('Delete Data Collectors')\n\t\t\t\t),\n\t\t\t\tPOLLER_DISABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Data Collector.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable the following Data Collectors.'),\n\t\t\t\t\t'scont'    => __('Disable Data Collector'),\n\t\t\t\t\t'pcont'    => __('Disable Data Collectors')\n\t\t\t\t),\n\t\t\t\tPOLLER_ENABLE => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Data Collector.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable the following Data Collectors.'),\n\t\t\t\t\t'scont'    => __('Enable Data Collector'),\n\t\t\t\t\t'pcont'    => __('Enable Data Collectors')\n\t\t\t\t),\n\t\t\t\tPOLLER_RESYNC => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Synchronize the Remote Data Collector for Offline Operation.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Synchronize the Remote Data Collectors for Offline Operation.'),\n\t\t\t\t\t'scont'    => __('Resync Data Collector'),\n\t\t\t\t\t'pcont'    => __('Resync Data Collectors')\n\t\t\t\t),\n\t\t\t\tPOLLER_AUTHSYNC => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Synchronize the Authentication Data to Remote Data Collector.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Synchronize the Authentication Data to Remote Data Collectors.'),\n\t\t\t\t\t'scont'    => __('Resync Auth Data to Collector'),\n\t\t\t\t\t'pcont'    => __('Resync Auth Data to Collectors')\n\t\t\t\t),\n\t\t\t\tPOLLER_CLEAR_STATS => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Clear Statistics for the following Data Collector.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Clear Statistics for following Data Collectors.'),\n\t\t\t\t\t'scont'    => __('Resync Data Collector'),\n\t\t\t\t\t'pcont'    => __('Resync Data Collectors')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction poller_edit() {\n\tglobal $fields_poller_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$poller = db_fetch_row_prepared('SELECT *\n\t\t\tFROM poller\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id'))\n\t\t);\n\n\t\t$header_label = __esc('Site [edit: %s]', $poller['name']);\n\t} else {\n\t\t$poller = array();\n\n\t\t$header_label = __('Site [new]');\n\t}\n\n\tform_start('pollers.php', 'poller');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($poller)) {\n\t\tif ($poller['id'] == 1) {\n\t\t\tunset($fields_poller_edit['sync_interval']);\n\t\t\tunset($fields_poller_edit['spacer_remotedb']);\n\t\t\tunset($fields_poller_edit['dbdefault']);\n\t\t\tunset($fields_poller_edit['dbhost']);\n\t\t\tunset($fields_poller_edit['dbuser']);\n\t\t\tunset($fields_poller_edit['dbpass']);\n\t\t\tunset($fields_poller_edit['dbport']);\n\t\t\tunset($fields_poller_edit['dbretries']);\n\t\t\tunset($fields_poller_edit['spacerssl']);\n\t\t\tunset($fields_poller_edit['dbssl']);\n\t\t\tunset($fields_poller_edit['dbsslkey']);\n\t\t\tunset($fields_poller_edit['dbsslcert']);\n\t\t\tunset($fields_poller_edit['dbsslca']);\n\t\t\tunset($fields_poller_edit['dbsslcapath']);\n\t\t\tunset($fields_poller_edit['dbsslverifyservercert']);\n\n\t\t\t$fields_poller_edit['log_level']['method'] = 'hidden';\n\t\t}\n\n\t\tif ($poller['timezone'] == '') {\n\t\t\t$poller['timezone'] = ini_get('date.timezone');\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_poller_edit, (isset($poller) ? $poller : array()))\n\t\t)\n\t);\n\n\t$tip_text = __('Remote Data Collectors must be able to communicate to the Main Data Collector, and vice versa.  Use this button to verify that the Main Data Collector can communicate to this Remote Data Collector.');\n\n\tif (read_config_option('hide_form_description') == 'on') {\n\t\t$tooltip = '<br><span class=\"formFieldDescription\">' . $tip_text . '</span>';\n\t} else {\n\t\t$tooltip = '<div class=\"formTooltip\">' . str_replace(\"\\n\", '', display_tooltip($tip_text)) . '</div>';\n\t}\n\n\t$row_html = '<div class=\"formRow odd\"><div class=\"formColumnLeft\"><div class=\"formFieldName\">' . __('Test Database Connection') . $tooltip . '</div></div><div class=\"formColumnRight\"><input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" id=\"dbtest\" value=\"' . __esc('Test Connection') . '\"><span id=\"results\"></span></div></div>';\n\n\t$pt = read_config_option('poller_type');\n\n\tif (isset($poller) && cacti_sizeof($poller)) {\n\t\tif ($poller['id'] > 1) {\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t\tpt = <?php print $pt; ?>;\n\n\t\t\t\tfunction showHideRemoteDB() {\n\t\t\t\t\tvar hasSSL = $('#dbssl').is(':checked');\n\t\t\t\t\ttoggleFields({\n\t\t\t\t\t\tdbsslkey: hasSSL,\n\t\t\t\t\t\tdbsslcert: hasSSL,\n\t\t\t\t\t\tdbsslca: hasSSL,\n\t\t\t\t\t\tdbsslcapath: hasSSL,\n\t\t\t\t\t\tdbsslverifyservercert: hasSSL,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t$(function() {\n\t\t\t\t\t$('#row_spacertest').after('<?php print $row_html; ?>');\n\t\t\t\t\t$('#dbssl').click(function() {\n\t\t\t\t\t\tshowHideRemoteDB();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#dbtest').click(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tping_database();\n\t\t\t\t\t});\n\n\t\t\t\t\tshowHideRemoteDB();\n\n\t\t\t\t\tif (pt == 1) {\n\t\t\t\t\t\t$('#row_threads').hide();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfunction ping_database() {\n\t\t\t\t\tdbssl = $('#dbssl').is(':checked') ? 'on' : '';\n\t\t\t\t\tdbsslverifyservercert = $('#dbsslverifyservercert').is(':checked') ? 'on' : '';\n\n\t\t\t\t\tvar options = {\n\t\t\t\t\t\turl: 'pollers.php',\n\t\t\t\t\t\tfuncEnd: 'pingDatabaseFinalize',\n\t\t\t\t\t\thandle: false\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\t\taction: 'ping',\n\t\t\t\t\t\tdbdefault: $('#dbdefault').val(),\n\t\t\t\t\t\tdbhost: $('#dbhost').val(),\n\t\t\t\t\t\tdbuser: $('#dbuser').val(),\n\t\t\t\t\t\tdbpass: $('#dbpass').val(),\n\t\t\t\t\t\tdbport: $('#dbport').val(),\n\t\t\t\t\t\tdbretries: $('#dbretries').val(),\n\t\t\t\t\t\tdbssl: dbssl,\n\t\t\t\t\t\tdbsslkey: $('#dbsslkey').val(),\n\t\t\t\t\t\tdbsslcert: $('#dbsslcert').val(),\n\t\t\t\t\t\tdbsslca: $('#dbsslca').val(),\n\t\t\t\t\t\tdbsslcapath: $('#dbsslcapath').val(),\n\t\t\t\t\t\tdbsslverifyservercert: dbsslverifyservercert\n\t\t\t\t\t};\n\n\t\t\t\t\tpostUrl(options, data);\n\t\t\t\t}\n\n\t\t\t\tfunction pingDatabaseFinalize(options, data) {\n\t\t\t\t\t$('#results').empty().show().html(data).fadeOut(5000);\n\t\t\t\t}\n\t\t\t</script>\n\t\t\t<?php\n\t\t} else {\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t\tpt = <?php print $pt; ?>;\n\n\t\t\t\t$(function() {\n\t\t\t\t\tif (pt == 1) {\n\t\t\t\t\t\t$('#row_threads').hide();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t\t}\n\t}\n\n\thtml_end_box(true, true);\n\n\t$form_buttons = array();\n\n\tif ($poller['id'] > 1) {\n\t\t$form_buttons[] = array(\n\t\t\t'id'     => 'delete',\n\t\t\t'value'  => __esc('Delete'),\n\t\t\t'method' => 'post',\n\t\t\t'url'    => 'pollers.php',\n\t\t\t'data'   => json_encode(\n\t\t\t\tarray(\n\t\t\t\t\t'action' => 'actions',\n\t\t\t\t\t'drp_action' => POLLER_DELETE,\n\t\t\t\t\t'chk_' . $poller['id'] => 'on',\n\t\t\t\t\t'__csrf_magic' => csrf_get_tokens(),\n\t\t\t\t)\n\t\t\t),\n\t\t);\n\t}\n\n\t$form_buttons = array_merge($form_buttons, array(\n\t\tarray(\n\t\t\t'id'     => 'return',\n\t\t\t'value'  => __esc('Return'),\n\t\t\t'url'    => 'pollers.php',\n\t\t\t'method' => 'return',\n\t\t),\n\t\tarray(\n\t\t\t'id'     => 'save',\n\t\t\t'value'  => __esc('Save'),\n\t\t\t'type'   => 'submit'\n\t\t)\n\t));\n\n\tform_save_buttons($form_buttons);\n}\n\nfunction test_database_connection($poller = array()) {\n\tif (!cacti_sizeof($poller)) {\n\t\t$poller['dbtype'] = 'mysql';\n\n\t\t$fields = array(\n\t\t\t'dbhost',\n\t\t\t'dbuser',\n\t\t\t'dbpass',\n\t\t\t'dbdefault',\n\t\t\t'dbport',\n\t\t\t'dbretries',\n\t\t\t'dbssl',\n\t\t\t'dbsslkey',\n\t\t\t'dbsslcert',\n\t\t\t'dbsslca',\n\t\t\t'dbsslcapath',\n\t\t\t'dbsslverifyservercert'\n\t\t);\n\n\t\tforeach ($fields as $field) {\n\t\t\tif ($field == 'dbssl') {\n\t\t\t\tif (isset_request_var('dbssl') && get_nfilter_request_var('dbssl') == 'on') {\n\t\t\t\t\t$poller['dbssl'] = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$poller['dbssl'] = '';\n\t\t\t\t}\n\t\t\t} elseif ($field == 'dbsslverifyservercert') {\n\t\t\t\tif (isset_request_var('dbsslverifyservercert') && get_nfilter_request_var('dbsslverifyservercert') == 'on') {\n\t\t\t\t\t$poller['dbsslverifyservercert'] = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$poller['dbsslverifyservercert'] = '';\n\t\t\t\t}\n\t\t\t} elseif (isset_request_var($field)) {\n\t\t\t\t$poller[$field] = get_nfilter_request_var($field);\n\t\t\t} else {\n\t\t\t\tprint 'ERROR: DB Connection Column ' . $field . ' Missing';\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t$connection = db_connect_real(\n\t\t$poller['dbhost'],\n\t\t$poller['dbuser'],\n\t\t$poller['dbpass'],\n\t\t$poller['dbdefault'],\n\t\t$poller['dbtype'],\n\t\t$poller['dbport'],\n\t\t$poller['dbretries'],\n\t\t$poller['dbssl'],\n\t\t$poller['dbsslkey'],\n\t\t$poller['dbsslcert'],\n\t\t$poller['dbsslca'],\n\t\t$poller['dbsslcapath'],\n\t\t$poller['dbsslverifyservercert']\n\t);\n\n\tif (is_object($connection)) {\n\t\tdb_close($connection);\n\t\tprint '&nbsp;<i class=\"ti ti-check\"></i>&nbsp;' . __('Connection Successful');\n\t} else {\n\t\tprint '&nbsp;<i class=\"ti ti-x\"></i>&nbsp;' . __('Connection Failed');\n\t}\n}\n\nfunction pollers() {\n\tglobal $actions, $poller_status, $item_rows;\n\n    /* create the page filter */\n    $pageFilter = new CactiTableFilter(__('Data Collectors'), 'pollers.php', 'form_poller', 'sess_pollers');\n\n    $pageFilter->rows_label = __('Collectors');\n    $pageFilter->has_refresh = true;\n\t$pageFilter->def_refresh = 20;\n    $pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM poller $sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$pollers = db_fetch_assoc(\"SELECT poller.*, UNIX_TIMESTAMP() - UNIX_TIMESTAMP(poller.last_status) as heartbeat, devices AS hosts\n\t\tFROM poller\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('pollers.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Pollers'), 'page', 'main');\n\n\tform_start('pollers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Collector Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Name of this Data Collector.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The unique id associated with this Data Collector.')\n\t\t),\n\t\t'poller.hostname'    => array(\n\t\t\t'display' => __('Hostname'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Hostname where the Data Collector is running.')\n\t\t),\n\t\t'status'      => array(\n\t\t\t'display' => __('Status'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The Status of this Data Collector.')\n\t\t),\n\t\t'nosort0'   => array(\n\t\t\t'display' => __('Proc/Threads'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The Number of Poller Processes and Threads for this Data Collector.')\n\t\t),\n\t\t'total_time'  => array(\n\t\t\t'display' => __('Polling Time'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The last data collection time for this Data Collector.')\n\t\t),\n\t\t'nosort1'     => array(\n\t\t\t'display' => __('Avg/Max'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The Average and Maximum Collector timings for this Data Collector.')\n\t\t),\n\t\t'hosts'       => array(\n\t\t\t'display' => __('Devices'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Devices associated with this Data Collector.')\n\t\t),\n\t\t'snmp'        => array(\n\t\t\t'display' => __('SNMP Gets'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of SNMP gets associated with this Collector.')\n\t\t),\n\t\t'script'      => array(\n\t\t\t'display' => __('Scripts'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of script calls associated with this Data Collector.')\n\t\t),\n\t\t'server'      => array(\n\t\t\t'display' => __('Servers'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of script server calls associated with this Data Collector.')\n\t\t),\n\t\t'last_update' => array(\n\t\t\t'display' => __('Last Finished'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The last time this Data Collector completed.')\n\t\t),\n\t\t'last_status' => array(\n\t\t\t'display' => __('Last Update'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The last time this Data Collector checked in with the main Cacti site.')\n\t\t),\n\t\t'last_sync' => array(\n\t\t\t'display' => __('Last Sync'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The last time this Data Collector was full synced with main Cacti site.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($pollers)) {\n\t\tforeach ($pollers as $poller) {\n\t\t\tif ($poller['id'] == 1) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tif ($poller['disabled'] == 'on') {\n\t\t\t\t$poller['status'] = 4;\n\t\t\t} elseif ($poller['heartbeat'] > 310) {\n\t\t\t\t$poller['status'] = 6;\n\t\t\t}\n\n\t\t\t$mma = round($poller['avg_time'] ?: 0, 2) . '/' .  round(max($poller['max_time'] ?: 1, 1), 2);\n\n\t\t\tif (empty($poller['name'])) {\n\t\t\t\t$poller['name'] = '&lt;no name&gt;';\n\t\t\t}\n\n\t\t\t$pt = read_config_option('poller_type');\n\n\t\t\tform_alternate_row('line' . $poller['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($poller['name'], get_request_var('filter'), 'pollers.php?action=edit&id=' . $poller['id']), $poller['id']);\n\t\t\tform_selectable_cell($poller['id'], $poller['id'], '', 'right');\n\t\t\tform_selectable_ecell($poller['hostname'], $poller['id'], '', 'right');\n\t\t\tform_selectable_cell($poller_status[$poller['status']], $poller['id'], '', 'center');\n\t\t\tform_selectable_cell($poller['processes'] . '/' . ($pt == 2 ? $poller['threads'] : '-'), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($poller['total_time'], 2), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell($mma, $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($poller['hosts'], '-1'), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($poller['snmp'], '-1'), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($poller['script'], '-1'), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($poller['server'], '-1'), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(substr($poller['last_update'], 5), $poller['id'], '', 'right');\n\t\t\tform_selectable_cell(substr($poller['last_status'], 5), $poller['id'], '', 'right');\n\n\t\t\tif ($poller['id'] == 1) {\n\t\t\t\tform_selectable_cell(__('N/A'), $poller['id'], '', 'right');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(substr($poller['last_sync'], 5), $poller['id'], '', 'right');\n\t\t\t}\n\n\t\t\tform_checkbox_cell($poller['name'], $poller['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Data Collectors Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($pollers)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "remote_agent.php",
          "type": "blob",
          "size": 14.572265625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/global.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_device.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_data_source.php');\ninclude_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_graph.php');\nrequire_once(CACTI_PATH_LIBRARY . '/api_tree.php');\nrequire_once(CACTI_PATH_LIBRARY . '/data_query.php');\nrequire_once(CACTI_PATH_LIBRARY . '/html_form_template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/ping.php');\nrequire_once(CACTI_PATH_LIBRARY . '/poller.php');\nrequire_once(CACTI_PATH_LIBRARY . '/rrd.php');\nrequire_once(CACTI_PATH_LIBRARY . '/snmp.php');\nrequire_once(CACTI_PATH_LIBRARY . '/sort.php');\nrequire_once(CACTI_PATH_LIBRARY . '/template.php');\nrequire_once(CACTI_PATH_LIBRARY . '/utility.php');\n\n$debug = false;\n\nif ($config['poller_id'] > 1 && $config['connection'] == 'online') {\n\tif (get_nfilter_request_var('action') == 'runquery') {\n\t\tdb_force_remote_cnn();\n\t}\n\n\t$poller_db_cnn_id = $remote_db_cnn_id;\n} else {\n\t$poller_db_cnn_id = false;\n}\n\nif (!remote_client_authorized()) {\n\tprint 'FATAL: You are not authorized to use this service';\n\n\texit;\n}\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'polldata':\n\t\t// Only let realtime polling run for a short time\n\t\tini_set('max_execution_time', read_config_option('script_timeout'));\n\n\t\tdebug('Start: Poling Data for Realtime');\n\t\tpoll_for_data();\n\t\tdebug('End: Poling Data for Realtime');\n\n\t\tbreak;\n\tcase 'runquery':\n\t\tdebug('Start: Running Data Query');\n\t\trun_remote_data_query();\n\t\tdebug('End: Running Data Query');\n\n\t\tbreak;\n\tcase 'ping':\n\t\tdebug('Start: Pinging Device');\n\t\tping_device();\n\t\tdebug('End: Pinging Device');\n\n\t\tbreak;\n\tcase 'snmpget':\n\t\tdebug('Start: Performing SNMP Get Request');\n\t\tget_snmp_data();\n\t\tdebug('End: Performing SNMP Get Request');\n\n\t\tbreak;\n\tcase 'snmpwalk':\n\t\tdebug('Start: Performing SNMP Walk Request');\n\t\tget_snmp_data_walk();\n\t\tdebug('End: Performing SNMP Walk Request');\n\n\t\tbreak;\n\tcase 'graph_json':\n\t\tdebug('Start: Performing Graph Request');\n\t\tget_graph_data();\n\t\tdebug('End: Performing Graph Request');\n\n\t\tbreak;\n\tcase 'discover':\n\t\tdebug('Start:Performing Network Discovery Request');\n\t\trun_remote_discovery();\n\t\tdebug('End:Performing Network Discovery Request');\n\n\t\tbreak;\n\n\tdefault:\n\t\tif (!api_plugin_hook_function('remote_agent', get_request_var('action'))) {\n\t\t\tdebug('WARNING: Unknown Agent Request');\n\t\t\tprint 'Unknown Agent Request';\n\t\t}\n}\n\nexit;\n\nfunction debug($message) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\tcacti_log('REMOTE DEBUG: ' . trim($message), false, 'WEBSVCS');\n\t}\n}\n\nfunction remote_agent_strip_domain($host) {\n\tif (strpos($host, '.') !== false) {\n\t\t$parts = explode('.', $host);\n\n\t\treturn $parts[0];\n\t} else {\n\t\treturn $host;\n\t}\n}\n\nfunction remote_client_authorized() {\n\tglobal $config, $poller_db_cnn_id, $remote_agent_whitelist;\n\n\t/* don't allow to run from the command line */\n\t$client_addr = get_client_addr();\n\n\tif ($client_addr === false) {\n\t\treturn false;\n\t}\n\n\tif (!filter_var($client_addr, FILTER_VALIDATE_IP)) {\n\t\tcacti_log('ERROR: Invalid remote agent client IP Address.  Exiting');\n\n\t\treturn false;\n\t}\n\n\t$client_name = gethostbyaddr($client_addr);\n\n\tif ($client_name == $client_addr) {\n\t\tcacti_log('NOTE: Unable to resolve hostname from address ' . $client_addr, false, 'WEBUI', POLLER_VERBOSITY_MEDIUM);\n\t} else {\n\t\t$client_name = remote_agent_strip_domain($client_name);\n\t}\n\n\t$pollers = db_fetch_assoc('SELECT * FROM poller WHERE disabled = \"\"', true, $poller_db_cnn_id);\n\n\tif (cacti_sizeof($pollers) > 1) {\n\t\tforeach ($pollers as $poller) {\n\t\t\tif (remote_agent_strip_domain($poller['hostname']) == $client_name) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ($poller['hostname'] == $client_addr) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (in_array($client_addr,$remote_agent_whitelist)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tcacti_log(\"Unauthorized remote agent access attempt from $client_name ($client_addr)\");\n\n\treturn false;\n}\n\nfunction get_graph_data() {\n\tget_filter_request_var('graph_start');\n\tget_filter_request_var('graph_end');\n\tget_filter_request_var('graph_height');\n\tget_filter_request_var('graph_width');\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('rra_id');\n\tget_filter_request_var('graph_theme', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('graph_nolegend', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\tget_filter_request_var('effective_user');\n\n\t$local_graph_id   = get_filter_request_var('local_graph_id');\n\t$rra_id           = get_filter_request_var('rra_id');\n\n\t$graph_data_array = array();\n\n\t/* override: graph start time (unix time) */\n\tif (!isempty_request_var('graph_start') && get_request_var('graph_start') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_start'] = get_request_var('graph_start');\n\t}\n\n\t/* override: graph end time (unix time) */\n\tif (!isempty_request_var('graph_end') && get_request_var('graph_end') < FILTER_VALIDATE_MAX_DATE_AS_INT) {\n\t\t$graph_data_array['graph_end'] = get_request_var('graph_end');\n\t}\n\n\t/* override: graph height (in pixels) */\n\tif (!isempty_request_var('graph_height') && get_request_var('graph_height') < 3000) {\n\t\t$graph_data_array['graph_height'] = get_request_var('graph_height');\n\t}\n\n\t/* override: graph width (in pixels) */\n\tif (!isempty_request_var('graph_width') && get_request_var('graph_width') < 3000) {\n\t\t$graph_data_array['graph_width'] = get_request_var('graph_width');\n\t}\n\n\t/* override: skip drawing the legend? */\n\tif (!isempty_request_var('graph_nolegend')) {\n\t\t$graph_data_array['graph_nolegend'] = get_request_var('graph_nolegend');\n\t}\n\n\t/* print RRDtool graph source? */\n\tif (!isempty_request_var('show_source')) {\n\t\t$graph_data_array['print_source'] = get_request_var('show_source');\n\t}\n\n\t/* disable cache check */\n\tif (isset_request_var('disable_cache')) {\n\t\t$graph_data_array['disable_cache'] = true;\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('graph_theme')) {\n\t\t$graph_data_array['graph_theme'] = get_request_var('graph_theme');\n\t}\n\n\t/* set the theme */\n\tif (isset_request_var('effective_user')) {\n\t\t$user = get_request_var('effective_user');\n\t} else {\n\t\t$user = 0;\n\t}\n\n\t$graph_data_array['graphv'] = true;\n\n\t$xport_options = array();\n\n\tprint @rrdtool_function_graph($local_graph_id, $rra_id, $graph_data_array, null, $xport_options, $user);\n\n\treturn true;\n}\n\nfunction get_snmp_data() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host    = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_get($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tprint $output;\n}\n\nfunction get_snmp_data_walk() {\n\t$host_id = get_filter_request_var('host_id');\n\t$oid     = get_nfilter_request_var('oid');\n\n\tif (!empty($host_id)) {\n\t\t$host    = db_fetch_row_prepared('SELECT * FROM host WHERE id = ?', array($host_id));\n\t\t$session = cacti_snmp_session($host['hostname'], $host['snmp_community'], $host['snmp_version'],\n\t\t\t$host['snmp_username'], $host['snmp_password'], $host['snmp_auth_protocol'], $host['snmp_priv_passphrase'],\n\t\t\t$host['snmp_priv_protocol'], $host['snmp_context'], $host['snmp_engine_id'], $host['snmp_port'],\n\t\t\t$host['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\tif ($session === false) {\n\t\t\t$output = 'U';\n\t\t} else {\n\t\t\t$output = cacti_snmp_session_walk($session, $oid);\n\t\t\t$session->close();\n\t\t}\n\t}\n\n\tif (cacti_sizeof($output)) {\n\t\tprint json_encode($output);\n\t} else {\n\t\tprint 'U';\n\t}\n}\n\nfunction ping_device() {\n\t$host_id = get_filter_request_var('host_id');\n\tapi_device_ping_device($host_id, true);\n}\n\nfunction poll_for_data() {\n\tglobal $config;\n\n\t$local_data_ids = get_nfilter_request_var('local_data_ids');\n\t$host_id        = get_filter_request_var('host_id');\n\t$poller_id      = get_nfilter_request_var('poller_id');\n\t$return         = array();\n\n\t/* ensure we have a valid poller_id */\n\tif (!preg_match('/^[a-z0-9]+$/i', $poller_id)) {\n\t\treturn array();\n\t}\n\n\t$i = 0;\n\n\tif (cacti_sizeof($local_data_ids)) {\n\t\tforeach ($local_data_ids as $local_data_id) {\n\t\t\tinput_validate_input_number($local_data_id, 'local_data_id');\n\n\t\t\t$items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\t$script_server_calls = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM poller_item\n\t\t\t\tWHERE host_id = ?\n\t\t\t\tAND local_data_id = ?\n\t\t\t\tAND action = 2',\n\t\t\t\tarray($host_id, $local_data_id));\n\n\t\t\tif (cacti_sizeof($items)) {\n\t\t\t\tforeach ($items as $item) {\n\t\t\t\t\tswitch ($item['action']) {\n\t\t\t\t\t\tcase POLLER_ACTION_SNMP: /* snmp */\n\t\t\t\t\t\t\tif (($item['snmp_version'] == 0) || (($item['snmp_community'] == '') && ($item['snmp_version'] != 3))) {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$host    = db_fetch_row_prepared('SELECT ping_retries, max_oids FROM host WHERE hostname = ?', array($item['hostname']));\n\t\t\t\t\t\t\t\t$session = cacti_snmp_session($item['hostname'], $item['snmp_community'], $item['snmp_version'],\n\t\t\t\t\t\t\t\t\t$item['snmp_username'], $item['snmp_password'], $item['snmp_auth_protocol'], $item['snmp_priv_passphrase'],\n\t\t\t\t\t\t\t\t\t$item['snmp_priv_protocol'], $item['snmp_context'], $item['snmp_engine_id'], $item['snmp_port'],\n\t\t\t\t\t\t\t\t\t$item['snmp_timeout'], $host['ping_retries'], $host['max_oids']);\n\n\t\t\t\t\t\t\t\tif ($session === false) {\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$output = cacti_snmp_session_get($session, $item['arg1']);\n\t\t\t\t\t\t\t\t\t$session->close();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase POLLER_ACTION_SCRIPT: /* script (popen) */\n\t\t\t\t\t\t\t$output = trim(exec_poll($item['arg1']));\n\n\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase POLLER_ACTION_SCRIPT_PHP: /* script (php script server) */\n\t\t\t\t\t\t\t$cactides = array(\n\t\t\t\t\t\t\t\t0 => array('pipe', 'r'), // stdin is a pipe that the child will read from\n\t\t\t\t\t\t\t\t1 => array('pipe', 'w'), // stdout is a pipe that the child will write to\n\t\t\t\t\t\t\t\t2 => array('pipe', 'w')  // stderr is a pipe to write to\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (function_exists('proc_open')) {\n\t\t\t\t\t\t\t\t$cactiphp            = proc_open(read_config_option('path_php_binary') . ' -q ' . CACTI_PATH_BASE . '/script_server.php realtime ' . cacti_escapeshellarg($poller_id), $cactides, $pipes);\n\t\t\t\t\t\t\t\t$output              = fgets($pipes[1], 1024);\n\t\t\t\t\t\t\t\t$using_proc_function = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$using_proc_function = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($using_proc_function == true) {\n\t\t\t\t\t\t\t\t$output = trim(str_replace(\"\\n\", '', exec_poll_php($item['arg1'], $using_proc_function, $pipes, $cactiphp)));\n\n\t\t\t\t\t\t\t\tif (prepare_validate_result($output) === false) {\n\t\t\t\t\t\t\t\t\tif (strlen($output) > 20) {\n\t\t\t\t\t\t\t\t\t\t$strout = 20;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$strout = strlen($output);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$output = 'U';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$return[$i]['value']         = $output;\n\t\t\t\t\t\t\t$return[$i]['rrd_name']      = $item['rrd_name'];\n\t\t\t\t\t\t\t$return[$i]['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t\tif (($using_proc_function == true) && ($script_server_calls > 0)) {\n\t\t\t\t\t\t\t\t/* close php server process */\n\t\t\t\t\t\t\t\tfwrite($pipes[0], \"quit\\r\\n\");\n\t\t\t\t\t\t\t\tfclose($pipes[0]);\n\t\t\t\t\t\t\t\tfclose($pipes[1]);\n\t\t\t\t\t\t\t\tfclose($pipes[2]);\n\n\t\t\t\t\t\t\t\t$return_value = proc_close($cactiphp);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint json_encode($return);\n}\n\nfunction run_remote_data_query() {\n\t$host_id       = get_filter_request_var('host_id');\n\t$data_query_id = get_filter_request_var('data_query_id');\n\n\tif ($host_id > 0 && $data_query_id > 0) {\n\t\trun_data_query($host_id, $data_query_id);\n\t}\n}\n\nfunction run_remote_discovery() {\n\tglobal $config;\n\n\t$poller_id = cacti_escapeshellarg($config['poller_id']);\n\t$network   = cacti_escapeshellarg(get_filter_request_var('network'));\n\t$php       = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n\t$path      = cacti_escapeshellarg(read_config_option('path_webroot') . '/poller_automation.php');\n\n\t$options   = ' --poller=' . $poller_id . ' --network=' . $network . ' --force';\n\n\tif (isset_request_var('debug')) {\n\t\t$options .= ' --debug';\n\t}\n\n\texec_background($php, '-q ' . $path . $options);\n\n\tsleep(2);\n\n\treturn;\n}"
        },
        {
          "name": "reports.php",
          "type": "blob",
          "size": 5.8466796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\ninclude('./include/auth.php');\ninclude_once(CACTI_PATH_LIBRARY . '/api_scheduler.php');\ninclude_once(CACTI_PATH_LIBRARY . '/reports.php');\ninclude_once(CACTI_PATH_LIBRARY . '/html_reports.php');\ninclude_once(CACTI_PATH_LIBRARY . '/timespan_settings.php');\n\n$reportit_api = CACTI_PATH_BASE . '/plugins/reportit/lib/funct_reports.php';\n\nif (file_exists($reportit_api)) {\n\tinclude_once($reportit_api);\n}\n\nget_filter_request_var('id');\nget_filter_request_var('tree_id');\nget_filter_request_var('site_id');\nget_filter_request_var('host_id');\nget_filter_request_var('host_template_id');\nget_filter_request_var('graph_template_id');\nget_filter_request_var('tab', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\n/* set a longer execution time for large reports */\nini_set('max_execution_time', '300');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\treports_form_save();\n\n\t\tbreak;\n\tcase 'send':\n\t\tget_filter_request_var('id');\n\n\t\treports_send(get_request_var('id'));\n\n\t\theader('Location: reports.php?action=edit&tab=' . get_request_var('tab') . '&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'remove_history':\n\t\tprocess_sanitize_draw_preview_filter();\n\n\t\t$history_id = get_request_var('rdate');\n\t\t$report_id  = get_request_var('id');\n\n\t\tif ($history_id > 0) {\n\t\t\treports_remove_history($history_id, $report_id);\n\t\t}\n\n\t\theader('Location: reports.php?action=edit&tab=preview&rdate=-1&id=' . $report_id);\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\treports_item_dnd();\n\n\t\theader('Location: reports.php?action=edit&tab=items&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'setvar':\n\t\t$changed = reports_item_validate();\n\n\t\tprint $changed;\n\n\t\tbreak;\n\tcase 'ajax_get_branches':\n\t\tprint reports_get_branch_select(get_filter_request_var('tree_id'));\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\treports_item_validate();\n\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tif (get_request_var('host_template_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.host_template_id = ' . get_request_var('host_template_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_graphs':\n\t\treports_item_validate();\n\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tif (get_request_var('host_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.host_id = ' . get_request_var('host_id');\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.graph_template_id = ' . get_request_var('graph_template_id');\n\t\t}\n\n\t\tif (get_request_var('host_template_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.host_template_id = ' . get_request_var('host_template_id');\n\t\t}\n\n\t\tget_allowed_ajax_graphs($sql_where);\n\n\t\tbreak;\n\tcase 'ajax_graph_template':\n\t\treports_item_validate();\n\n\t\t$sql_where = '';\n\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tif (get_request_var('host_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.id = ' . get_request_var('host_id');\n\t\t}\n\n\t\tif (get_request_var('host_template_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.host_template_id = ' . get_request_var('host_template_id');\n\t\t}\n\n\t\tget_allowed_ajax_graph_templates(true, true, $sql_where);\n\n\t\tbreak;\n\tcase 'actions':\n\t\treports_form_actions();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('id');\n\n\t\treports_item_movedown();\n\n\t\theader('Location: reports.php?action=edit&tab=items&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('id');\n\n\t\treports_item_moveup();\n\n\t\theader('Location: reports.php?action=edit&tab=items&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('id');\n\n\t\treports_item_remove();\n\n\t\theader('Location: reports.php?action=edit&tab=items&id=' . get_request_var('id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\tgeneral_header();\n\t\treports_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\tgeneral_header();\n\t\treports_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\tgeneral_header();\n\t\treports();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n"
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "rra",
          "type": "tree",
          "content": null
        },
        {
          "name": "rrdcheck.php",
          "type": "blob",
          "size": 8.2919921875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\ninclude_once(CACTI_PATH_LIBRARY . '/functions.php');\n\n$rra_path = CACTI_PATH_RRA . '/';\n\ntop_header();\n\nset_default_action();\n\nif (read_config_option('rrdcheck_enable') != 'on') {\n\thtml_start_box(__('RRD check'), '100%', '', '3', 'center', '');\n\tprint __('RRD check is disabled, please enable in Configuration -> Settings -> Data');\n\thtml_end_box();\n}\n\nswitch(get_request_var('action')) {\n\tcase 'purge':\n\t\trrdcheck_purge();\n\n\tdefault:\n\t\trrdcheck_display_problems();\n}\n\nbottom_footer();\n\nfunction rrdcheck_purge() {\n\tdb_execute('TRUNCATE TABLE rrdcheck');\n}\n\n/*\n * Display all rrdcheck entries\n */\nfunction rrdcheck_display_problems() {\n\tglobal $config, $item_rows;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$secsback = get_request_var('age');\n\n\tif (get_request_var('age') == 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'test_date >= ?';\n\t\t$sql_params[] = date('Y-m-d H:i:s', time() - (7200));\n\t} else {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'test_date <= ?';\n\t\t$sql_params[] = date('Y-m-d H:i:s', (time() - $secsback));\n\t}\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(message LIKE ? OR h.description LIKE ? OR dtd.name_cache LIKE ? OR dtd.local_data_id LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(rc.local_data_id)\n\t\tFROM rrdcheck AS rc\n\t\tLEFT JOIN data_local AS dl\n\t\tON rc.local_data_id = dl.id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON rc.local_data_id = dtd.local_data_id\n\t\tLEFT JOIN host AS h\n\t\tON dl.host_id = h.id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$problems = db_fetch_assoc_prepared(\"SELECT h.description, dtd.name_cache,\n\t\trc.local_data_id, rc.test_date, rc.message\n\t\tFROM rrdcheck AS rc\n\t\tLEFT JOIN data_local AS dl\n\t\tON rc.local_data_id = dl.id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON rc.local_data_id = dtd.local_data_id\n\t\tLEFT JOIN host AS h\n\t\tON dl.host_id = h.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$nav = html_nav_bar(CACTI_PATH_URL . 'rrdcheck.php?filter'. get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('RRDcheck Problems'), 'page', 'main');\n\n\tform_start('rrdcheck.php');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'description' => array(\n\t\t\t'display' => __('Host Description'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'name_cache' => array(\n\t\t\t'display' => __('Data Source'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'display' => __('Local Data ID'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'message' => array(\n\t\t\t'display' => __('Message'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'test_date' => array(\n\t\t\t'display' => __('Date'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC'\n\t\t),\n\t);\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($problems)) {\n\t\tforeach ($problems as $p) {\n\t\t\tform_alternate_row('line' . $p['local_data_id'], true);\n\n\t\t\tif ($p['description'] == '') {\n\t\t\t\t$p['description'] = __('Deleted');\n\t\t\t}\n\n\t\t\tif ($p['name_cache'] == '') {\n\t\t\t\t$p['name_cache'] = __('Deleted');\n\t\t\t}\n\n\t\t\tform_selectable_cell(filter_value($p['description'], get_request_var('filter')), $p['local_data_id']);\n\t\t\tform_selectable_cell(filter_value($p['name_cache'], get_request_var('filter')), $p['local_data_id']);\n\t\t\tform_selectable_cell(filter_value($p['local_data_id'], get_request_var('filter')), $p['local_data_id'], '', 'center');\n\t\t\tform_selectable_cell(filter_value($p['message'], get_request_var('filter')), $p['local_data_id']);\n\t\t\tform_selectable_cell($p['test_date'], $p['local_data_id'], '', 'right');\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"5\"><em>' . __('No RRDcheck Problems Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($problems)) {\n\t\tprint $nav;\n\t}\n\n\tform_end();\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\nfunction create_filter() {\n\tglobal $item_rows, $page_refresh_interval;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\n\t$ages = array(\n\t\t'0'      => '&lt; ' . __('%d hours', 2),\n\t\t'14400'  => '&gt; ' . __('%d hours', 4),\n\t\t'43200'  => '&gt; ' . __('%d hours',12),\n\t\t'86400'  => '&gt; ' . __('%d day', 1),\n\t\t'259200' => '&gt; ' . __('%d days', 3),\n\t\t'604800' => '&gt; ' . __('%d days', 5)\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'age' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Age'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $ages,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Attempts'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Purge'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Purge Data Source Checks from the Database'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'test_date',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('RRDfile Checker'), 'rrdcheck.php', 'form_rrdcheck', 'sess_rrdc');\n\n\t$pageFilter->rows_label = __('Data Sources');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "rrdcleaner.php",
          "type": "blob",
          "size": 16.796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\ninclude_once(CACTI_PATH_LIBRARY . '/functions.php');\ninclude_once(CACTI_PATH_LIBRARY . '/rrd.php');\n\n$ds_actions = array(\n\t1 => __x('dropdown action', 'Delete'),\n\t3 => __x('dropdown action', 'Archive')\n);\n\n$rra_path = CACTI_PATH_RRA . '/';\n\n/* set default action */\nset_default_action();\n\nif (isset_request_var('rescan')) {\n\tset_request_var('action', 'restart');\n}\n\nswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\ttop_header();\n\t\tdo_rrd();\n\t\t/* show current table again */\n\t\tlist_rrd();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'restart':\n\t\ttop_header();\n\t\t/* fill files name table */\n\t\trrdclean_fill_table();\n\t\tlist_rrd();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'remall':\n\tcase 'arcall':\n\t\ttop_header();\n\t\t/* fill files name table */\n\t\tremove_all_rrds();\n\t\tlist_rrd();\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\t/* fill files name table */\n\t\tlist_rrd();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/*\n * Fill RRDCleaner's table\n */\nfunction rrdclean_fill_table() {\n\tglobal $config, $rra_path;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\t/* delete old file names table */\n\trrdclean_truncate_tables();\n\n\tget_files();\n\n\tclearstatcache();\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\n/*\n * Determine the last time the rrdcleaner table was updated\n */\nfunction rrdcleaner_lastupdate() {\n\t$status = db_fetch_row(\"SHOW TABLE STATUS LIKE 'data_source_purge_temp'\");\n\n\tif (cacti_sizeof($status)) {\n\t\treturn $status['Update_time'];\n\t}\n}\n\n/*\n * Delete RRDCleaner's intermediate tables\n */\nfunction rrdclean_truncate_tables() {\n\tglobal $config;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\t$sql = 'TRUNCATE TABLE `data_source_purge_temp`';\n\tdb_execute($sql);\n\n\t/* clear old data_source_purge_action table */\n\t$sql = 'TRUNCATE TABLE `data_source_purge_action`';\n\tdb_execute($sql);\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\n/*\n * PHP Error Handler\n */\nfunction rrdclean_error_handler($errno, $errmsg, $filename, $linenum, $vars = array()) {\n\tglobal $debug;\n\n\tif ($debug) {\n\t\t/* define all error types */\n\t\t$errortype = array(\n\t\t\tE_ERROR             => 'Error',\n\t\t\tE_WARNING           => 'Warning',\n\t\t\tE_PARSE             => 'Parsing Error',\n\t\t\tE_NOTICE            => 'Notice',\n\t\t\tE_CORE_ERROR        => 'Core Error',\n\t\t\tE_CORE_WARNING      => 'Core Warning',\n\t\t\tE_COMPILE_ERROR     => 'Compile Error',\n\t\t\tE_COMPILE_WARNING   => 'Compile Warning',\n\t\t\tE_USER_ERROR        => 'User Error',\n\t\t\tE_USER_WARNING      => 'User Warning',\n\t\t\tE_USER_NOTICE       => 'User Notice',\n\t\t\t#\t\t\tE_STRICT            => 'Runtime Notice',\n\t\t\t#\t\t\tE_RECOVERABLE_ERROR => 'Catchable Fatal Error'\n\t\t);\n\n\t\t/* create an error string for the log */\n\t\t$err = \"ERRNO:'\"  . $errno   . \"' TYPE:'\"    . $errortype[$errno] .\n\t\t\t\"' MESSAGE:'\" . $errmsg  . \"' IN FILE:'\" . $filename .\n\t\t\t\"' LINE NO:'\" . $linenum . \"'\";\n\n\t\t/* let's ignore some lesser issues */\n\t\tif (substr_count($errmsg, 'date_default_timezone')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (substr_count($errmsg, 'Only variables')) {\n\t\t\treturn;\n\t\t}\n\n\t\tprint('PROGERR: ' . $err . \"\\n\"); # print_r($vars); print('</pre>');\n\t}\n\n\treturn;\n}\n\n/*\n * Find all unused files from Cacti tables\n * and get file system information for them\n */\nfunction get_files() {\n\tglobal $config, $rra_path;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\t$files_unused = array();\n\t$arc_path     = read_config_option('rrd_archive');\n\n\tif (substr_count($arc_path, $rra_path)) {\n\t\t$archive = true;\n\t\t$arcbase = basename($arc_path);\n\t} else {\n\t\t$archive = false;\n\t\t$arcbase = '';\n\t}\n\n\t/* insert the files into the table from cacti */\n\tdb_execute(\"INSERT INTO data_source_purge_temp\n\t\t(local_data_id, data_template_id, name_cache, name, in_cacti)\n\t\tSELECT local_data_id, data_template_id, name_cache, replace(data_source_path, '<path_rra>/', '') AS file, '1' AS in_cacti\n\t\tFROM data_template_data\n\t\tWHERE local_data_id>0\n\t\tON DUPLICATE KEY UPDATE local_data_id=VALUES(local_data_id)\");\n\n\t$size = 0;\n\t$sql  = array();\n\n\tif (read_config_option('storage_location')) {\n\t\t$rrdtool_pipe = rrd_init();\n\t\trrdtool_execute('setcnn timeout off', false, RRDTOOL_OUTPUT_NULL, $rrdtool_pipe, $logopt = 'POLLER');\n\t\t$scan = rrdtool_execute('rrd-list', false, RRDTOOL_OUTPUT_STDOUT, $rrdtool_pipe, $logopt = 'POLLER');\n\t\trrd_close($rrdtool_pipe);\n\n\t\tif ($scan) {\n\t\t\t$files = explode(\"\\r\\n\", $scan);\n\n\t\t\tforeach ($files as $file) {\n\t\t\t\tlist($pathname, $size, $mtime) = explode(',', $file);\n\t\t\t\t$sql[]                         = \"('\" . str_replace($rra_path, '', $pathname) . \"', \" . $size . \", '\" . date('Y-m-d H:i:s', $mtime) . \"',0)\";\n\t\t\t\t$size++;\n\n\t\t\t\tif ($size == 400) {\n\t\t\t\t\tdb_execute('INSERT INTO data_source_purge_temp\n\t\t\t\t\t(name, size, last_mod, in_cacti)\n\t\t\t\t\tVALUES ' . implode(',', $sql) . '\n\t\t\t\t\tON DUPLICATE KEY UPDATE size=VALUES(size), last_mod=VALUES(last_mod)');\n\n\t\t\t\t\t$size = 0;\n\t\t\t\t\t$sql  = array();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$dir_iterator = new RecursiveDirectoryIterator($rra_path);\n\t\t$iterator     = new RecursiveIteratorIterator($dir_iterator, RecursiveIteratorIterator::SELF_FIRST);\n\n\t\tforeach ($iterator as $file) {\n\t\t\tif (substr($file->getPathname(), -3) == 'rrd' && !($archive && strstr($file->getPathname(), $arcbase . '/') !== false)) {\n\t\t\t\t$sql[] = \"('\" . str_replace($rra_path, '', $file->getPathname()) . \"', \" . $file->getSize() . \", '\" . date('Y-m-d H:i:s', $file->getMTime()) . \"',0)\";\n\t\t\t\t$size++;\n\n\t\t\t\tif ($size == 400) {\n\t\t\t\t\tdb_execute('INSERT INTO data_source_purge_temp\n\t\t\t\t\t(name, size, last_mod, in_cacti)\n\t\t\t\t\tVALUES ' . implode(',', $sql) . '\n\t\t\t\t\tON DUPLICATE KEY UPDATE size=VALUES(size), last_mod=VALUES(last_mod)');\n\n\t\t\t\t\t$size = 0;\n\t\t\t\t\t$sql  = array();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($size > 0) {\n\t\tdb_execute('INSERT INTO data_source_purge_temp\n\t\t\t(name, size, last_mod, in_cacti)\n\t\t\tVALUES ' . implode(',', $sql) . '\n\t\t\tON DUPLICATE KEY UPDATE size=VALUES(size), last_mod=VALUES(last_mod)');\n\t}\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\n/*\n * Display all rrd file entries\n */\nfunction list_rrd() {\n\tglobal $config, $item_rows, $ds_actions, $rra_path;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = 'WHERE in_cacti = 0';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ' AND (rc.name LIKE ? OR rc.name_cache LIKE ? OR dt.name LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$secsback = get_request_var('age');\n\n\tif (get_request_var('age') == 0) {\n\t\t$sql_where   .= ' AND last_mod >= ?';\n\t\t$sql_params[] = date('Y-m-d H:i:s', time() - (86400 * 7));\n\t} else {\n\t\t$sql_where   .= ' AND last_mod <= ?';\n\t\t$sql_params[] = date('Y-m-d H:i:s', (time() - $secsback));\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(rc.name)\n\t\tFROM data_source_purge_temp AS rc\n\t\tLEFT JOIN data_template AS dt\n\t\tON dt.id = rc.data_template_id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$total_size = db_fetch_cell_prepared(\"SELECT ROUND(SUM(size),2)\n\t\tFROM data_source_purge_temp AS rc\n\t\tLEFT JOIN data_template AS dt\n\t\tON dt.id = rc.data_template_id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$file_list = db_fetch_assoc_prepared(\"SELECT rc.id, rc.name, rc.last_mod, rc.size,\n\t\trc.name_cache, rc.local_data_id, rc.data_template_id, dt.name AS data_template_name\n\t\tFROM data_source_purge_temp AS rc\n\t\tLEFT JOIN data_template AS dt\n\t\tON dt.id = rc.data_template_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$nav = html_nav_bar(CACTI_PATH_URL . 'rrdcleaner.php?filter' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('RRDfiles'), 'page', 'main');\n\n\tform_start('rrdcleaner.php');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'               => array(__('RRDfile Name'), 'ASC'),\n\t\t'name_cache'         => array(__('DS Name'), 'ASC'),\n\t\t'local_data_id'      => array(__('DS ID'), 'ASC'),\n\t\t'data_template_id'   => array(__('Template ID'), 'ASC'),\n\t\t'data_template_name' => array(__('Template'), 'ASC'),\n\t\t'last_mod'           => array(__('Last Modified'), 'DESC'),\n\t\t'size'               => array(__('Size [KB]'), 'DESC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($file_list)) {\n\t\tforeach ($file_list as $file) {\n\t\t\t$data_template_name = ((empty($file['data_template_name'])) ? '<em>None</em>' : $file['data_template_name']);\n\t\t\tform_alternate_row('line' . $file['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($file['name'], get_request_var('filter')), $file['id']);\n\t\t\tform_selectable_cell(filter_value($file['name_cache'], get_request_var('filter'), CACTI_PATH_URL . 'data_sources.php?action=ds_edit&id=' . $file['local_data_id']), $file['id']);\n\t\t\tform_selectable_cell($file['local_data_id'] > 0 ? $file['local_data_id'] : '<i>' . __('Deleted') . '</i>', $file['id']);\n\t\t\tform_selectable_cell($file['data_template_id'] > 0 ? $file['data_template_id'] : '<i>' . __('Deleted') . '</i>', $file['id']);\n\t\t\tform_selectable_cell(filter_value($file['data_template_name'], get_request_var('filter')), $file['id']);\n\t\t\tform_selectable_cell($file['last_mod'], $file['id']);\n\t\t\tform_selectable_cell(round($file['size'] / 1024, 2), $file['id']);\n\t\t\tform_checkbox_cell($file['id'], $file['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Unused RRDfiles') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($file_list)) {\n\t\tprint $nav;\n\t}\n\n\trrdcleaner_legend($total_size);\n\n\tdraw_actions_dropdown($ds_actions);\n\n\tform_end();\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\nfunction rrdcleaner_legend($total_size) {\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\tprint '<tr>';\n\tprint '<td><b>' . __('Total Size [MB]:') . '</b> ' . round($total_size / 1024 / 1024, 2) . '</td>';\n\tprint '</tr><tr>';\n\tprint '<td><b>' . __('Last Scan:') . '</b> ' . rrdcleaner_lastupdate() . '</td>';\n\tprint '</tr>';\n\thtml_end_box(false);\n}\n\nfunction remove_all_rrds() {\n\tglobal $config, $rra_path;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\t$action = get_nfilter_request_var('raction');\n\n\t/* add to data_source_purge_action table */\n\tdb_execute_prepared('INSERT INTO data_source_purge_action\n\t\t(name, local_data_id, action)\n\t\tSELECT name, local_data_id, ? AS action\n\t\tFROM data_source_purge_temp\n\t\tWHERE in_cacti = 0\n\t\tON DUPLICATE KEY UPDATE action = VALUES(action)', array($action));\n\n\t/* remove the entries from the data_source_purge_temp location */\n\tdb_execute('DELETE FROM data_source_purge_temp WHERE in_cacti = 0');\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\n/*\n * Read all checked list items and put them into\n * a temporary table for the poller\n */\nfunction do_rrd() {\n\tglobal $config, $rra_path;\n\n\t/* suppress warnings */\n\terror_reporting(0);\n\n\t/* install the rrdclean error handler */\n\tset_error_handler('rrdclean_error_handler');\n\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_(.*)$/', $var, $matches)) {\n\t\t\t/* recreate the file name */\n\t\t\t$unused_file = db_fetch_row_prepared('SELECT id, name, local_data_id\n\t\t\t\tFROM data_source_purge_temp\n\t\t\t\tWHERE id = ?', array($matches[1]));\n\n\t\t\t/* add to data_source_purge_action table */\n\t\t\t$sql = 'INSERT INTO data_source_purge_action\n\t\t\t\t(name, local_data_id, action)\n\t\t\t\tVALUES(?, ?, ?)\n\t\t\t\tON DUPLICATE KEY UPDATE local_data_id = VALUES(local_data_id)';\n\n\t\t\tdb_execute_prepared($sql, array($unused_file['name'], $unused_file['local_data_id'], get_nfilter_request_var('drp_action')));\n\n\t\t\t/* drop from data_source_purge table */\n\t\t\tdb_execute_prepared('DELETE FROM data_source_purge_temp WHERE id = ?', array($matches[1]));\n\t\t}\n\t}\n\n\t/* restore original error handler */\n\trestore_error_handler();\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$ages = array(\n\t\t'0'        => '&lt; ' . __('%d Week', 1),\n\t\t'604800'   => '&gt; ' . __('%d Week', 1),\n\t\t'1209600'  => '&gt; ' . __('%d Weeks', 2),\n\t\t'1814400'  => '&gt; ' . __('%d Weeks', 3),\n\t\t'2628000'  => '&gt; ' . __('%d Month', 1),\n\t\t'5256000'  => '&gt; ' . __('%d Months', 2),\n\t\t'10512000' => '&gt; ' . __('%d Months', 4),\n\t\t'15768000' => '&gt; ' . __('%d Months', 6),\n\t\t'31536000' => '&gt; ' . __('%d Year', 1)\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'age' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Time Since Update'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $ages,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('RRDfiles'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'rescan' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Rescan'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Rescan RRDfiles and their status'),\n\t\t\t),\n\t\t\t'remall' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Delete All'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Delete All RRDfiles'),\n\t\t\t\t'status'  => __('Scheduling Purging of All Unknowns'),\n\t\t\t\t'url'     => 'rrdcleaner.php?action=remall&raction=3&clear=1'\n\t\t\t),\n\t\t\t'arcall' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Archive All'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Archive All RRDfiles'),\n\t\t\t\t'status'  => __('Scheduling Archiving of All Unknowns'),\n\t\t\t\t'url'     => 'rrdcleaner.php?action=arcall&raction=3&clear=1'\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'name',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('RRDfile Cleaner'), 'rrdcleaner.php', 'form_rrdclean', 'sess_rrdclean');\n\n\t$pageFilter->rows_label = __('RRDfiles');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "script_server.php",
          "type": "blob",
          "size": 14.583984375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nif (function_exists('pcntl_async_signals')) {\n\tpcntl_async_signals(true);\n} else {\n\tdeclare(ticks = 100);\n}\n\n$parent_pid = '';\n\nif (function_exists('posix_getppid')) {\n\t$parent_pid = posix_getppid();\n}\n\nif (function_exists('pcntl_signal')) {\n\tpcntl_signal(SIGTERM, 'sig_handler');\n\tpcntl_signal(SIGINT, 'sig_handler');\n\tpcntl_signal(SIGABRT, 'sig_handler');\n\tpcntl_signal(SIGQUIT, 'sig_handler');\n\tpcntl_signal(SIGSEGV, 'sig_handler');\n}\n\nerror_reporting(0);\n\n/* define STDOUT/STDIN file descriptors if not running under CLI */\nif (php_sapi_name() != 'cli') {\n\tdefine('STDIN', fopen('php://stdin', 'r'));\n\tdefine('STDOUT', fopen('php://stdout', 'w'));\n}\n\n/* make sure data is flushed immediately */\nob_implicit_flush();\nini_set('output_buffering', 'Off');\n\nglobal $environ, $poller_id, $connection;\n\n/* some debugging */\n$pid         = getmypid();\n$ctr         = 0;\n$poller_id   = 1;\n$environ     = 'cmd';\n$conn_mode   = 'online';\n$legacy      = true;\n$options     = array();\n$help        = false;\n$version     = false;\n\n$called_by_script_server = false;\n\n$shortopts = 'VvHh';\n\n$longopts = array(\n\t'environ::',\n\t'poller::',\n\t'mode::',\n\t'version',\n\t'help'\n);\n\n$options = getopt($shortopts, $longopts);\n\nif (sizeof($options)) {\n\tforeach ($options as $arg => $value) {\n\t\t$allow_multi = false;\n\n\t\tswitch($arg) {\n\t\t\tcase 'enviorn':\n\t\t\t\t$environ = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase 'poller':\n\t\t\t\t$poller_id = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase 'mode':\n\t\t\t\t$conn_mode = $value;\n\n\t\t\t\tbreak;\n\t\t\tcase 'help':\n\t\t\t\t$help = true;\n\n\t\t\t\tbreak;\n\t\t\tcase 'version':\n\t\t\t\t$version = true;\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n} elseif ($_SERVER['argc'] >= 2) {\n\tif (in_array('spine', $_SERVER['argv'], true)) {\n\t\t$environ = 'spine';\n\t} elseif (in_array('realtime', $_SERVER['argv'], true)) {\n\t\t$environ = 'realtime';\n\t} elseif (in_array('cmd', $_SERVER['argv'], true) || in_array('cmd.php', $_SERVER['argv'], true)) {\n\t\t$environ = 'cmd';\n\t} else {\n\t\t$environ = 'other';\n\t}\n\n\tif ($_SERVER['argc'] == 3) {\n\t\t$poller_id = $_SERVER['argv'][2];\n\t} else {\n\t\t$poller_id = 1;\n\t}\n}\n\nrequire(__DIR__ . '/include/cli_check.php');\n\nif ($help) {\n\tdisplay_help();\n\n\texit(0);\n}\n\nif ($version) {\n\tdisplay_version();\n\n\texit(0);\n}\n\n/* record the script start time */\n$start = microtime(true);\n\nif ($config['cacti_server_os'] == 'win32') {\n\tcacti_log('DEBUG: GETCWD: ' . strtolower(strtr(getcwd(),'\\\\','/')), false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\tcacti_log('DEBUG: DIRNAM: ' . strtolower(strtr(__DIR__,'\\\\','/')), false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n} else {\n\tcacti_log('DEBUG: GETCWD: ' . strtr(getcwd(),'\\\\','/'), false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\tcacti_log('DEBUG: DIRNAM: ' . strtr(__DIR__,'\\\\','/'), false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n}\n\ncacti_log('DEBUG: SERVER: ' . $environ . ' PARENT: ' . $parent_pid, false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\ncacti_log('DEBUG: FILENM: ' . __FILE__, false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\n/* if multiple polling intervals are defined, compensate for them */\n$polling_interval = read_config_option('poller_interval');\n\nif (!empty($polling_interval)) {\n\tdefine('MAX_POLLER_RUNTIME', $polling_interval);\n} else {\n\tdefine('MAX_POLLER_RUNTIME', 300);\n}\n\n/* Let PHP only run 1 second longer than the max runtime */\nini_set('max_execution_time', MAX_POLLER_RUNTIME + 1);\n\n/* send status back to the server */\ncacti_log('PHP Script Server has Started - Parent is ' . $environ, false, 'PHPSVR', POLLER_VERBOSITY_HIGH);\n\nfputs(STDOUT, 'PHP Script Server has Started - Parent is ' . $environ . \"\\n\");\nfflush(STDOUT);\n\n/* process waits for input and then calls functions as required */\nwhile (1) {\n\t$result = '';\n\n\t$input_string    = fgets(STDIN, 1024);\n\t$function        = '';\n\t$parameters      = '';\n\t$parameter_array = array();\n\n\t$isParentRunning = true;\n\n\tif (empty($input_string)) {\n\t\tif (!empty($parent_pid)) {\n\t\t\tif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\n\t\t\t\t$out = array();\n\t\t\t\texec(\"TASKLIST /FO LIST /FI \\\"PID eq $parent_pid\\\"\", $out);\n\n\t\t\t\t$isParentRunning = (cacti_count($out) > 1);\n\t\t\t} elseif (function_exists('posix_kill')) {\n\t\t\t\t$isParentRunning = posix_kill(intval($parent_pid), 0);\n\t\t\t}\n\t\t}\n\n\t\tif ($isParentRunning) {\n\t\t\tif (!empty($parent_pid)) {\n\t\t\t\tcacti_log('WARNING: Input Expected, parent process ' . $parent_pid . ' should have sent non-blank line', false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\t\t\t} else {\n\t\t\t\tcacti_log('WARNING: Input Expected, unable to check parent process', false, 'PHPSVR', POLLER_VERBOSITY_MEDIUM);\n\t\t\t}\n\t\t} else {\n\t\t\tcacti_log('WARNING: Parent (' . $parent_pid . ') of Script Server (' . getmypid() . ') has been lost, forcing exit', false, 'PHPSVR', POLLER_VERBOSITY_HIGH);\n\t\t\t$input_string = 'quit';\n\t\t}\n\t}\n\n\tif (!empty($input_string)) {\n\t\t$input_string = trim($input_string);\n\n\t\tif (substr($input_string,0,4) == 'quit') {\n\t\t\tif (!$called_by_script_server) {\n\t\t\t\tfputs(STDOUT, 'PHP Script Server Shutdown request received, exiting' . PHP_EOL);\n\t\t\t\tfflush(STDOUT);\n\t\t\t\tcacti_log('DEBUG: PHP Script Server Shutdown request received, exiting', false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\t\t\t}\n\t\t\tdb_close();\n\n\t\t\texit(0);\n\t\t}\n\n\t\tif ($input_string != '') {\n\t\t\t/* pull off the parameters */\n\t\t\t$i = 0;\n\n\t\t\twhile (true) {\n\t\t\t\t$pos = strpos($input_string, ' ');\n\n\t\t\t\tif ($pos > 0) {\n\t\t\t\t\tswitch ($i) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t/* cut off include file as first part of input string and keep rest for further parsing */\n\t\t\t\t\t\t\t$include_file = trim(substr($input_string,0,$pos));\n\t\t\t\t\t\t\t$input_string = trim(strchr($input_string, ' ')) . ' ';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t/* cut off function as second part of input string and keep rest for further parsing */\n\t\t\t\t\t\t\t$function     = trim(substr($input_string,0,$pos), \"' \");\n\t\t\t\t\t\t\t$input_string = trim(strchr($input_string, ' ')) . ' ';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t/* take the rest as parameter(s) to the function stripped off previously */\n\t\t\t\t\t\t\t$parameters = trim($input_string);\n\n\t\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif (!parseArgs($parameters, $parameter_array)) {\n\t\t\t\tcacti_log(\"WARNING: Script Server count not parse '$parameters' for $function\", false, 'PHPSVR');\n\t\t\t\tfputs(STDOUT, \"U\\n\");\n\t\t\t\tfflush(STDOUT);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcacti_log(\"DEBUG: PID[$pid] CTR[$ctr] INC: '\". basename($include_file) .\n\t\t\t\t\"' FUNC: '$function' PARMS: '\" . implode('\\', \\'',$parameter_array) .\n\t\t\t\t\"'\", false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t/* validate the existence of the function, and include if applicable */\n\t\t\tif (!function_exists($function)) {\n\t\t\t\tif (file_exists($include_file)) {\n\t\t\t\t\t/**\n\t\t\t\t\t * quirk in php on Windows, believe it or not....\n\t\t\t\t\t * path must be lower case\n\t\t\t\t\t */\n\t\t\t\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t\t\t\t$include_file = strtolower($include_file);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * set this variable so the calling script can determine if it was called\n\t\t\t\t\t * by the script server or stand-alone\n\t\t\t\t\t */\n\t\t\t\t\t$called_by_script_server = true;\n\n\t\t\t\t\t/* turn on output buffering to avoid problems with nasty scripts */\n\t\t\t\t\tob_start();\n\t\t\t\t\tinclude_once($include_file);\n\t\t\t\t\tob_end_clean();\n\n\t\t\t\t\terror_reporting(0);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log('WARNING: PHP Script File to be included, does not exist', false, 'PHPSVR');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (function_exists($function)) {\n\t\t\t\terror_reporting(0);\n\n\t\t\t\tif ($parameters == '') {\n\t\t\t\t\t$result = call_user_func($function);\n\t\t\t\t} else {\n\t\t\t\t\t$result = call_user_func_array($function, $parameter_array);\n\t\t\t\t}\n\n\t\t\t\tfputs(STDOUT, trim($result) . \"\\n\");\n\t\t\t\tfflush(STDOUT);\n\n\t\t\t\tcacti_log(\"DEBUG: PID[$pid] CTR[$ctr] RESPONSE:'$result'\", false, 'PHPSVR', POLLER_VERBOSITY_DEBUG);\n\n\t\t\t\t$ctr++;\n\t\t\t} else {\n\t\t\t\tcacti_log(\"WARNING: Function does not exist  INC: '\". basename($include_file) . \"' FUNC: '\" .$function . \"' PARMS: '\" . $parameters . \"'\", false, 'PHPSVR');\n\t\t\t\tfputs(STDOUT, \"U\\n\");\n\t\t\t\tfflush(STDOUT);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* end the process if the runtime exceeds MAX_POLLER_RUNTIME */\n\tif (($start + MAX_POLLER_RUNTIME) < time()) {\n\t\tcacti_log('Maximum runtime of ' . MAX_POLLER_RUNTIME . ' seconds exceeded for the Script Server. Exiting.', true, 'PHPSVR');\n\n\t\texit(-1);\n\t}\n}\n\nfunction parseArgs($string, &$str_list, $debug = false) {\n\t$delimiters = array(\"'\",'\"');\n\t$delimited  = false;\n\t$str_list   = array();\n\n\tif ($debug) {\n\t\tprint \"String: '\" . $string . \"'\\n\";\n\t}\n\n\tforeach ($delimiters as $delimiter) {\n\t\tif (strpos($string, $delimiter) !== false) {\n\t\t\t$delimited = true;\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* process the simple case */\n\tif (!$delimited) {\n\t\t$str_list = explode(' ', $string);\n\n\t\tif ($debug) {\n\t\t\tprint \"Output: '\" . implode(',', $str_list) . \"'\\n\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/* Break str down into an array of characters and process */\n\t$char_array = str_split($string);\n\t$escaping   = false;\n\t$indelim    = false;\n\t$parse_ok   = true;\n\t$curstr     = '';\n\n\tforeach ($char_array as $char) {\n\t\tswitch ($char) {\n\t\t\tcase '\\'':\n\t\t\tcase '\"':\n\t\t\t\tif (!$indelim) {\n\t\t\t\t\tif (!$escaping) {\n\t\t\t\t\t\t$indelim = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$curstr .= $char;\n\t\t\t\t\t\t$escaping = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif (!$escaping) {\n\t\t\t\t\t$str_list[] = $curstr;\n\t\t\t\t\t$curstr     = '';\n\t\t\t\t\t$indelim    = false;\n\t\t\t\t} elseif ($escaping) {\n\t\t\t\t\t$curstr .= $char;\n\t\t\t\t\t$escaping = false;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '\\\\':\n\t\t\t\tif ($indelim) {\n\t\t\t\t\t$curstr .= $char;\n\t\t\t\t} elseif ($escaping) {\n\t\t\t\t\t$curstr .= $char;\n\t\t\t\t\t$escaping = false;\n\t\t\t\t} else {\n\t\t\t\t\t$escaping = true;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase ' ':\n\t\t\t\tif ($escaping) {\n\t\t\t\t\t$parse_ok = false;\n\t\t\t\t\t$msg      = 'Parse error attempting to parse string';\n\t\t\t\t} elseif ($indelim) {\n\t\t\t\t\t$curstr .= $char;\n\t\t\t\t} elseif ($curstr != '') {\n\t\t\t\t\t$str_list[] = $curstr;\n\t\t\t\t\t$curstr     = '';\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '`':\n\t\t\t\t$parse_ok = false;\n\t\t\t\t$msg      = 'Backtic (`) characters not allowed';\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif ($escaping) {\n\t\t\t\t\t$parse_ok = false;\n\t\t\t\t\t$msg      = 'Parse error attempting to parse string';\n\t\t\t\t} else {\n\t\t\t\t\t$curstr .= $char;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!$parse_ok) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* Add the last str to the string array */\n\tif ($indelim || $escaping) {\n\t\t$parse_ok = false;\n\t\t$msg      = 'Parse error attempting to parse string';\n\t}\n\n\tif (!$parse_ok) {\n\t\tprint 'ERROR: ' . $msg . \" '\" . $string . \"'\\n\";\n\t} elseif ($curstr != '') {\n\t\t$str_list[] = $curstr;\n\t}\n\n\tif ($debug) {\n\t\tprint \"Output: '\" . implode(',', $str_list) . \"'\\n\";\n\t}\n\n\treturn $parse_ok;\n}\n\n/**\n * sig_handler - properly handle signals and shutdown\n * @param mixed $signo\n */\nfunction sig_handler($signo) {\n\tglobal $include_file, $function, $parameters;\n\n\tswitch ($signo) {\n\t\tcase SIGTERM:\n\t\tcase SIGINT:\n\t\tcase SIGABRT:\n\t\tcase SIGQUIT:\n\t\tcase SIGSEGV:\n\t\t\tcacti_log(\"WARNING: Script Server terminated with signal '$signo' in file:'\" . basename($include_file) . \"', function:'$function', params:'$parameters'\", false, 'PHPSVR', POLLER_VERBOSITY_MEDIUM);\n\t\t\tdb_close();\n\n\t\t\texit;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tcacti_log(\"WARNING: Script Server received signal '$signo' in file:'$include_file', function:'$function', params:'$parameters'\", false, 'PHPSVR', POLLER_VERBOSITY_HIGH);\n\n\t\t\tbreak;\n\t}\n}\n\n/**\n * display_version - displays version information\n *\n * @return (void)\n */\nfunction display_version() {\n\t$version = get_cacti_version();\n\tprint \"Cacti Script Server, Version $version \" . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/**\n * display_help - displays help information\n *\n * @return (void)\n */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL;\n\tprint 'usage: script_server.php [environ poller_id] | [ --environ=S --poller=N --mode [--force-level=N] ]' . PHP_EOL . PHP_EOL;\n\tprint 'Cacti\\'s Script Server.  The Script Server provides a memory resident server for executing php' . PHP_EOL;\n\tprint 'scripts saving reducing the time to process the scripts through pre-compiling them for all consumers.' . PHP_EOL;\n\tprint 'The Script Server can be called using two methods.  The first method is the legacy method.  When using' . PHP_EOL;\n\tprint 'the legacy method, the first argument will be the environment, and the second will be the poller id.' . PHP_EOL . PHP_EOL;\n\n\tprint 'The modern calling method has multiple options processed by getopt.  Those options include:' . PHP_EOL . PHP_EOL;\n\n\tprint '  --environ=S      The default being \\'cmd\\', and options being \\'spine\\', \\'cmd\\', and \\'realtime\\'' . PHP_EOL;\n\tprint '  --poller=N       The poller id for the Data Collector in use' . PHP_EOL;\n\tprint '  --force-level=N  Force the logging at the level specified.' . PHP_EOL;\n\tprint '  --mode=S         Force a Database mode \\'online\\' or \\'offline\\'.  This is only relevant for' . PHP_EOL;\n\tprint '                   Remote Data Collectors.' . PHP_EOL . PHP_EOL;\n\n\tprint 'If no options are passed to the Script Server, it assumes that the environ is \\'cmd\\' and the poller id' . PHP_EOL;\n\tprint 'is 1 or the Main Data Collector.' . PHP_EOL . PHP_EOL;\n\n\tprint 'It is common that when developing Cacti Data Input methods one will use the Script Server to test' . PHP_EOL;\n\tprint 'scripts prior to creating thousands of Graphs using them.  To to that simply create at least' . PHP_EOL;\n\tprint 'one Data Source, start the Script Server, and then copy the Poller Cache entry into a running' . PHP_EOL;\n\tprint 'Script Server.  When doing so you should see the output you expect printed to standard output.  When' . PHP_EOL;\n\tprint 'running the Script Server, simply enter \\'quit\\' to exit.' . PHP_EOL . PHP_EOL;\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "service_check.php",
          "type": "blob",
          "size": 1.6865234375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/global.php');\n\n$result = db_fetch_cell('SELECT cacti FROM version');\n\nif ($result != '') {\n\tprint 'success' . PHP_EOL;\n} else {\n\tprint 'fail' . PHP_EOL;\n}\n"
        },
        {
          "name": "settings.php",
          "type": "blob",
          "size": 52.5732421875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\n\n/* set default action */\nset_default_action();\n\nget_filter_request_var('tab', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\nget_filter_request_var('filter', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\nglobal $disable_log_rotation, $local_db_cnn_id;\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tsave_settings();\n\n\t\tbreak;\n\tcase 'search':\n\t\tsettings_search();\n\n\t\tbreak;\n\tcase 'send_test':\n\t\temail_test();\n\n\t\tbreak;\n\tdefault:\n\t\tdisplay_settings();\n\n\t\tbreak;\n}\n\nfunction display_settings() {\n\tglobal $config, $settings, $tabs, $local_db_cnn_id;\n\n\ttop_header();\n\n\thtml_start_box(__('Cacti Settings'), '100%', true, '3', 'left', '');\n\n\tvalidate_settings_filter();\n\n\tprint '<div class=\"settingsFilter\">';\n\tprint '<div>' . __('Search') . '</div>';\n\tprint '<div><input class=\"ui-state-default ui-corner-all\" type=\"text\" size=\"25\" id=\"filter\" value=\"' . html_escape_request_var('filter') . '\"></div>';\n\tprint '<div><span><input class=\"ui-state-default ui-corner-all\" type=\"button\" id=\"clear\" value=\"' . __esc('Clear') . '\"></span></div>';\n\tprint '</div>';\n\n\thtml_end_box(false, true);\n\n\t/* set the default settings category */\n\tif (!isset_request_var('tab')) {\n\t\t/* there is no selected tab; select the first one */\n\t\tif (isset($_SESSION['sess_settings_tab'])) {\n\t\t\t$current_tab = $_SESSION['sess_settings_tab'];\n\t\t} else {\n\t\t\t$current_tab = array_keys($tabs);\n\t\t\t$current_tab = $current_tab[0];\n\t\t}\n\t} else {\n\t\t$current_tab = get_request_var('tab');\n\t}\n\n\t// If the tab no longer exists, use the first\n\tif (!isset($tabs[$current_tab])) {\n\t\t$current_tab = array_keys($tabs);\n\t\t$current_tab = $current_tab[0];\n\t}\n\n\t$_SESSION['sess_settings_tab'] = $current_tab;\n\n\tset_request_var('tab', $current_tab);\n\n\t$data_collectors = db_fetch_cell('SELECT COUNT(*) FROM poller WHERE disabled=\"\"');\n\n\tif ($data_collectors > 1) {\n\t\tset_config_option('boost_rrd_update_enable', 'on');\n\t\tset_config_option('boost_redirect', 'on');\n\t}\n\n\t$system_tabs = array(\n\t\t'general',\n\t\t'path',\n\t\t'logging',\n\t\t'snmp',\n\t\t'poller',\n\t\t'data',\n\t\t'visual',\n\t\t'authentication',\n\t\t'boost',\n\t\t'spikes',\n\t\t'mail'\n\t);\n\n\t/* draw the categories tabs on the top of the page */\n\tprint \"<div>\";\n\tprint \"<div id='settings' class='tabs' style='float:left;'><nav style='display:none;'><ul role='tablist'>\";\n\n\tif (cacti_sizeof($tabs)) {\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li id='$tab_short_name' class='subTab\" . (!in_array($tab_short_name, $system_tabs) ? ' pluginTab':'') . \"'><a \" . (($tab_short_name == $current_tab) ? \"class='selected'\" : \"class=''\") . \" href='\" . html_escape(\"settings.php?tab=$tab_short_name\") . \"'>\" . $tabs[$tab_short_name] . \"</a></li>\";\n\t\t}\n\t}\n\n\tprint \"</ul></nav></div>\";\n\tprint \"</div>\";\n\tprint \"<div id='form_settings_wrap' style='display:none'>\";\n\n\tform_start('settings.php', 'form_settings');\n\n\tif ($config['poller_id'] > 1 && $current_tab == 'path') {\n\t\t$suffix = ' [<span class=\"deviceDown\">' . __('NOTE: Path Settings on this Tab are only saved locally!') . '</span>]';\n\t} else {\n\t\t$suffix = '';\n\t}\n\n\thtml_start_box(__('Cacti Settings (%s)%s', $tabs[$current_tab], $suffix), '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\t// Remove log rotation is disabled by package maintainer\n\tif (isset($disable_log_rotation) && $disable_log_rotation == true) {\n\t\tunset($settings['path']['logrotate_enabled']);\n\t\tunset($settings['path']['logrotate_frequency']);\n\t\tunset($settings['path']['logrotate_retain']);\n\t}\n\n\tif ($current_tab == 'general') {\n\t\t$repos = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT id, name\n\t\t\t\tFROM package_repositories\n\t\t\t\tWHERE enabled = \"on\"\n\t\t\t\tORDER BY name'),\n\t\t\t'id', 'name'\n\t\t);\n\n\t\t$repos[0] = __('Local Package File');\n\n\t\t$settings['general']['package_location']['array'] = $repos;\n\t}\n\n\t// RRDtool is not required for remote data collectors\n\tif ($config['poller_id'] > 1) {\n\t\t$settings['path']['path_rrdtool']['method'] = 'other';\n\t}\n\n\tif (isset($settings[$current_tab])) {\n\t\tforeach ($settings[$current_tab] as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $field_array);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (config_value_exists($sub_field_name)) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($current_tab == 'path' && is_remote_path_setting($field_name)) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] = db_fetch_cell_prepared('SELECT value\n\t\t\t\t\t\t\tFROM settings\n\t\t\t\t\t\t\tWHERE name = ?',\n\t\t\t\t\t\t\tarray($sub_field_name), '', true, $local_db_cnn_id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] = db_fetch_cell_prepared('SELECT value\n\t\t\t\t\t\t\tFROM settings\n\t\t\t\t\t\t\tWHERE name = ?',\n\t\t\t\t\t\t\tarray($sub_field_name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (config_value_exists($field_name)) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\tif ($current_tab == 'path' && is_remote_path_setting($field_name)) {\n\t\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value\n\t\t\t\t\t\tFROM settings\n\t\t\t\t\t\tWHERE name = ?',\n\t\t\t\t\t\tarray($field_name), '', true, $local_db_cnn_id);\n\t\t\t\t} else {\n\t\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value\n\t\t\t\t\t\tFROM settings\n\t\t\t\t\t\tWHERE name = ?',\n\t\t\t\t\t\tarray($field_name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Cache this setting as on large systems\n\t// this query runs long\n\tif ($current_tab == 'spikes') {\n\t\tif (!isset($_SESSION['sk_templates'])) {\n\t\t\t$spikekill_templates = array_rekey(\n\t\t\t\tdb_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\tON gt.id=gti.graph_template_id\n\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\tON gti.task_item_id=dtr.id\n\t\t\t\t\tWHERE gti.local_graph_id=0 AND data_source_type_id IN (3,2)\n\t\t\t\t\tORDER BY name'),\n\t\t\t\t'id', 'name'\n\t\t\t);\n\n\t\t\t$_SESSION['sk_templates'] = $spikekill_templates;\n\t\t} else {\n\t\t\t$spikekill_templates = $_SESSION['sk_templates'];\n\t\t}\n\n\t\t$form_array['spikekill_templates']['array'] = $spikekill_templates;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('tab', $current_tab, '');\n\n\tform_save_button('', 'save');\n\n\tprint '</div>';\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar filterTimeout  = null;\n\tvar themeChanged   = false;\n\tvar langRefresh    = false;\n\tvar currentTheme   = '';\n\tvar currentLang    = '';\n\tvar rrdArchivePath = '';\n\tvar prevSearch     = $('#filter').val();\n\tvar smtpPath       = '';\n\tvar currentTab     = '<?php print $current_tab;?>';\n\tvar dataCollectors = '<?php print $data_collectors;?>';\n\tvar permsTitle     = '<?php print __esc('Changing Permission Model Warning');?>';\n\tvar permsHeader    = '<?php print __esc('Changing Permission Model will alter a users effective Graph permissions.');?>';\n\tvar permsMessage   = '<?php print __esc('After you change the Graph Permission Model you should audit your Users and User Groups Effective Graph permission to ensure that you still have adequate control of your Graphs.  NOTE: If you want to restrict all Graphs at the Device or Graph Template Graph Permission Model, the default Graph Policy should be set to \\'Deny\\'.');?>';\n\n\t$(function() {\n\t\t$('#filter').keyup(function() {\n\t\t\tif (filterTimeout) {\n\t\t\t\tclearTimeout(filterTimeout);\n\t\t\t}\n\n\t\t\tfilterTimeout = setTimeout(setupForm, 300);\n\t\t});\n\n\t\tsetupForm();\n\n\t\t$('#clear').click(function(event) {\n\t\t\tloadUrl({url: 'settings.php?clear=true&filter='});\n\t\t});\n\n\t\t$('.subTab').find('a').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tstrURL = $(this).attr('href');\n\t\t\tstrURL += (strURL.indexOf('?') > 0 ? '&':'?') + 'header=false';\n\t\t\tloadUrl({url: strURL, scroll: true, force: false, loadType: 'noheader'});\n\t\t});\n\n\t\t$('input[value=\"<?php print __esc('Save');?>\"]').unbind().click(function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tif (parseInt($('#cron_interval').val()) < parseInt($('#poller_interval').val())) {\n\t\t\t\t$('#message_container').html('<div id=\"message\" class=\"textError messageBox\"><?php print __('Poller Interval must be less than Cron Interval');?></div>').show().delay(4000).slideUp('fast', function() {\n\t\t\t\t\t$('#message_container').empty();\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tvar options = {\n\t\t\t\turl: 'settings.php?tab='+$('#tab'),\n\t\t\t\tredirect: (themeChanged == true || langRefresh == true) ?\n\t\t\t\t\t'auth_profile.php?action=noreturn' : '',\n\t\t\t}\n\n\t\t\tvar data = $('input, select, textarea').prop('disabled', false).serialize();\n\n\t\t\tpostUrl(options, data);\n\t\t});\n\n\t\tif (currentTab == 'general') {\n\t\t\tcurrentPerms       = $('#graph_auth_method').val();\n\t\t\tcurrentLangDetect  = $('#i18n_auto_detection').val();\n\t\t\tcurrentLanguage    = $('#i18n_default_language').val();\n\t\t\tcurrentLangSupport = $('#i18n_language_support').val();\n\n\t\t\t$('#graph_auth_method').change(function() {\n\t\t\t\tpermsChanger();\n\t\t\t});\n\n\t\t\t$('#i18n_default_language, #i18n_auto_detection, #i18n_language_support').change(function() {\n\t\t\t\tlangDetectionChanger();\n\t\t\t});\n\t\t} else if (currentTab == 'logging') {\n\t\t\t$('#selective_plugin_debug').multiselect({\n\t\t\t\tmenuHeight: $(window).height()*.7,\n\t\t\t\tmenuWidth: 230,\n\t\t\t\tlinkInfo: faIcons,\n\t\t\t\tnoneSelectedText: '<?php print __('Select Plugin(s)');?>',\n\t\t\t\tselectedText: function(numChecked, numTotal, checkedItems) {\n\t\t\t\t\tmyReturn = numChecked + ' <?php print __('Plugins Selected');?>';\n\t\t\t\t\treturn myReturn;\n\t\t\t\t},\n\t\t\t\tcheckAllText: '<?php print __('All');?>',\n\t\t\t\tuncheckAllText: '<?php print __('None');?>',\n\t\t\t\tuncheckall: function() {\n\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}).multiselectfilter( {\n\t\t\t\tlabel: '<?php print __('Search');?>',\n\t\t\t\tplaceholder: '<?php print __('Enter keyword');?>',\n\t\t\t\twidth: '150'\n\t\t\t});\n\n\t\t\t$('#selective_debug').multiselect({\n\t\t\t\tmenuHeight: $(window).height()*.7,\n\t\t\t\tmenuWidth: 230,\n\t\t\t\tlinkInfo: faIcons,\n\t\t\t\tnoneSelectedText: '<?php print __('Select File(s)');?>',\n\t\t\t\tselectedText: function(numChecked, numTotal, checkedItems) {\n\t\t\t\t\tmyReturn = numChecked + ' <?php print __('Files Selected');?>';\n\t\t\t\t\treturn myReturn;\n\t\t\t\t},\n\t\t\t\tcheckAllText: '<?php print __('All');?>',\n\t\t\t\tuncheckAllText: '<?php print __('None');?>',\n\t\t\t\tuncheckAll: function() {\n\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}).multiselectfilter( {\n\t\t\t\tlabel: '<?php print __('Search');?>',\n\t\t\t\tplaceholder: '<?php print __('Enter keyword');?>',\n\t\t\t\twidth: '150'\n\t\t\t});\n\t\t} else if (currentTab == 'spikes') {\n\t\t\t$('#spikekill_templates').multiselect({\n\t\t\t\tmenuHeight: $(window).height()*.7,\n\t\t\t\tmenuWidth: 'auto',\n\t\t\t\tlinkInfo: faIcons,\n\t\t\t\tnoneSelectedText: '<?php print __('Select Template(s)');?>',\n\t\t\t\tselectedText: function(numChecked, numTotal, checkedItems) {\n\t\t\t\t\tmyReturn = numChecked + ' <?php print __('Templates Selected');?>';\n\t\t\t\t\t$.each(checkedItems, function(index, value) {\n\t\t\t\t\t\tif (value.value == '0') {\n\t\t\t\t\t\t\tmyReturn='<?php print __('All Templates Selected');?>';\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn myReturn;\n\t\t\t\t},\n\t\t\t\tcheckAllText: '<?php print __('All');?>',\n\t\t\t\tuncheckAllText: '<?php print __('None');?>',\n\t\t\t\tuncheckAll: function() {\n\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tclick: function(event, ui) {\n\t\t\t\t\tchecked=$(this).multiselect('widget').find('input:checked').length;\n\n\t\t\t\t\tif (ui.value == '0') {\n\t\t\t\t\t\tif (ui.checked == true) {\n\t\t\t\t\t\t\t$('#host').multiselect('uncheckAll');\n\t\t\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if (checked == 0) {\n\t\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t\t$(this).click();\n\t\t\t\t\t\t});\n\t\t\t\t\t}else if ($(this).multiselect('widget').find('input:checked:first').val() == '0') {\n\t\t\t\t\t\tif (checked > 0) {\n\t\t\t\t\t\t\t$(this).multiselect('widget').find(':checkbox:first').each(function() {\n\t\t\t\t\t\t\t\t$(this).click();\n\t\t\t\t\t\t\t\t$(this).prop('disable', true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).multiselectfilter( {\n\t\t\t\tlabel: '<?php print __('Search');?>',\n\t\t\t\tplaceholder: '<?php print __('Enter keyword');?>',\n\t\t\t\twidth: '150'\n\t\t\t});\n\t\t} else if (currentTab == 'data') {\n\t\t\t$('#storage_location').change(function() {\n\t\t\t\tif ($(this).val() == '0') {\n\t\t\t\t\t$('#row_rrdp_header').hide();\n\t\t\t\t\t$('#row_rrdp_server').hide();\n\t\t\t\t\t$('#row_rrdp_port').hide();\n\t\t\t\t\t$('#row_rrdp_fingerprint').hide();\n\t\t\t\t\t$('#row_rrdp_header2').hide();\n\t\t\t\t\t$('#row_rrdp_load_balancing').hide();\n\t\t\t\t\t$('#row_rrdp_server_backup').hide();\n\t\t\t\t\t$('#row_rrdp_port_backup').hide();\n\t\t\t\t\t$('#row_rrdp_fingerprint_backup').hide();\n\t\t\t\t} else {\n\t\t\t\t\t$('#row_rrdp_header').show();\n\t\t\t\t\t$('#row_rrdp_server').show();\n\t\t\t\t\t$('#row_rrdp_port').show();\n\t\t\t\t\t$('#row_rrdp_fingerprint').show();\n\t\t\t\t\t$('#row_rrdp_header2').show();\n\t\t\t\t\t$('#row_rrdp_load_balancing').show();\n\t\t\t\t\t$('#row_rrdp_server_backup').show();\n\t\t\t\t\t$('#row_rrdp_port_backup').show();\n\t\t\t\t\t$('#row_rrdp_fingerprint_backup').show();\n\t\t\t\t}\n\t\t\t}).trigger('change');\n\n\t\t\t$('#extended_paths').change(function() {\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t$('#row_extended_paths_type').show();\n\t\t\t\t} else {\n\t\t\t\t\t$('#row_extended_paths_type').hide();\n\t\t\t\t}\n\t\t\t}).trigger('change');\n\t\t} else if (currentTab == 'mail') {\n\t\t\t$('#row_settings_email_header div.formHeaderText').append('<div id=\"emailtest\" class=\"emailtest\"><?php print __('Send a Test Email');?></div>');\n\t\t\t$('#row_settings_oauth2_header div.formHeaderText').append('<div id=\"oauth2token\" class=\"emailtest\"><?php print __('Generate OAuth2 Refresh Token');?></div>');\n\n\t\t\tinitMail();\n\n\t\t\t$('#settings_how').change(function() {\n\t\t\t\tinitMail();\n\t\t\t});\n\n\t\t\t$('#emailtest').click(function() {\n\t\t\t\t$.get('settings.php?action=send_test')\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\t$('body').append('<div id=\"testmail\" title=\"<?php print __esc('Test Email Results');?>\"></div>');\n\t\t\t\t\t\t$('#testmail').html(data);\n\n\t\t\t\t\t\t$('#testmail').dialog({\n\t\t\t\t\t\t\tautoOpen: false,\n\t\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\t\tminHeight: 300,\n\t\t\t\t\t\t\tmaxHeight: 600,\n\t\t\t\t\t\t\theight: 450,\n\t\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\t\tautoOpen: true,\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\teffect: 'appear',\n\t\t\t\t\t\t\t\tduration: 100\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\thide: {\n\t\t\t\t\t\t\t\teffect: 'appear',\n\t\t\t\t\t\t\t\tduration: 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\t$('#oauth2token').click(function() {\n\t\t\t\t$.get('oauth2.php')\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\t$('body').append('<div id=\"oatoken\" title=\"<?php print __esc('Get OAuth2 Token');?>\"></div>');\n\t\t\t\t\t\t$('#oatoken').html(data);\n\n\t\t\t\t\t\t$('#oatoken').dialog({\n\t\t\t\t\t\t\tautoOpen: false,\n\t\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\t\tminHeight: 300,\n\t\t\t\t\t\t\tmaxHeight: 600,\n\t\t\t\t\t\t\theight: 450,\n\t\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\t\tautoOpen: true,\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\teffect: 'appear',\n\t\t\t\t\t\t\t\tduration: 100\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\thide: {\n\t\t\t\t\t\t\t\teffect: 'appear',\n\t\t\t\t\t\t\t\tduration: 100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else if (currentTab == 'visual') {\n\t\t\tcurrentTheme = $('#selected_theme').val();\n\n\t\t\tinitFonts();\n\t\t\tinitRealtime();\n\n\t\t\t$('#font_method').change(function() {\n\t\t\t\tinitFonts();\n\t\t\t});\n\n\t\t\t$('#selected_theme').change(function() {\n\t\t\t\tthemeChanger();\n\t\t\t});\n\n\t\t\t$('#realtime_enabled').change(function() {\n\t\t\t\tinitRealtime();\n\t\t\t});\n\t\t} else if (currentTab == 'snmp') {\n\t\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\t\tsnmp_security_initialized = false;\n\n\t\t\t$('#snmp_version, #snmp_auth_protocol, #snmp_priv_protocol, #snmp_security_level').change(function() {\n\t\t\t\tsetSNMP();\n\t\t\t});\n\n\t\t\tinitAvail();\n\t\t\t$('#availability_method').change(function() {\n\t\t\t\tinitAvail();\n\t\t\t});\n\n\t\t\tsetSNMP();\n\t\t} else if (currentTab == 'authentication') {\n\t\t\tinitAuth();\n\t\t\tinitSearch();\n\t\t\tinitGroupMember();\n\n\t\t\t$('#auth_method').change(function() {\n\t\t\t\tinitAuth();\n\t\t\t});\n\n\t\t\t$('#ldap_mode').change(function() {\n\t\t\t\tinitSearch();\n\t\t\t});\n\n\t\t\t$('#ldap_group_require').change(function() {\n\t\t\t\tinitGroupMember();\n\t\t\t});\n\t\t} else if (currentTab == 'path') {\n\t\t\tinitRRDClean();\n\n\t\t\t$('#rrd_autoclean').change(function() {\n\t\t\t\tinitRRDClean();\n\t\t\t});\n\n\t\t\tif (cactiServerOS == 'win32') {\n\t\t\t\t$('#row_path_stderrlog').hide();\n\t\t\t}\n\n\t\t\t$('#rrd_autoclean_method').change(function() {\n\t\t\t\tinitRRDClean();\n\t\t\t});\n\t\t} else if (currentTab == 'boost') {\n\t\t\tif (dataCollectors > 1) {\n\t\t\t\t$('#boost_rrd_update_enable').prop('checked', true);\n\t\t\t\t$('#boost_rrd_update_enable').prop('disabled', true);\n\t\t\t\t$('#boost_redirect').prop('checked', true);\n\t\t\t\t$('#boost_redirect').prop('disabled', true);\n\t\t\t}\n\n\t\t\tinitBoostOD();\n\t\t\tinitBoostCache();\n\n\t\t\t$('#boost_rrd_update_enable').change(function() {\n\t\t\t\tinitBoostOD();\n\t\t\t});\n\n\t\t\t$('#boost_png_cache_enable').change(function() {\n\t\t\t\tinitBoostCache();\n\t\t\t});\n\t\t}\n\n\t\tfunction initMail() {\n\t\t\t/* clear passwords */\n\t\t\tif ($('#settings_sendmail_path').val() != '') {\n\t\t\t\tsmtpPath = $('#settings_sendmail_path').val();\n\t\t\t}\n\n\t\t\t$('#settings_smtp_password').val('');\n\t\t\t$('#settings_smtp_password_confirm').val('');\n\n\t\t\tswitch($('#settings_how').val()) {\n\t\t\tcase '0':\n\t\t\t\t$('#settings_sendmail_path').val('');\n\t\t\t\t$('#row_settings_sendmail_header').hide();\n\t\t\t\t$('#row_settings_sendmail_path').hide();\n\t\t\t\t$('#row_settings_smtp_header').hide();\n\t\t\t\t$('#row_settings_smtp_host').hide();\n\t\t\t\t$('#row_settings_smtp_port').hide();\n\t\t\t\t$('#row_settings_smtp_username').hide();\n\t\t\t\t$('#row_settings_smtp_password').hide();\n\t\t\t\t$('#row_settings_smtp_secure').hide();\n\t\t\t\t$('#row_settings_smtp_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_header').hide();\n\t\t\t\t$('#row_settings_oauth2_host').hide();\n\t\t\t\t$('#row_settings_oauth2_port').hide();\n\t\t\t\t$('#row_settings_oauth2_secure').hide();\n\t\t\t\t$('#row_settings_oauth2_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_from_email').hide();\n\t\t\t\t$('#row_settings_oauth2_client_id').hide();\n\t\t\t\t$('#row_settings_oauth2_client_secret').hide();\n\t\t\t\t$('#row_settings_oauth2_redirect_uri').hide();\n\t\t\t\t$('#row_settings_oauth2_provider').hide();\n\t\t\t\t$('#row_settings_oauth2_tenant_id').hide();\n\t\t\t\t$('#row_settings_oauth2_refresh_token').hide();\n\t\t\t\tbreak;\n\t\t\tcase '1':\n\t\t\t\tif (smtpPath != '') {\n\t\t\t\t\t$('#settings_sendmail_path').val(smtpPath);\n\t\t\t\t}\n\n\t\t\t\t$('#row_settings_sendmail_header').show();\n\t\t\t\t$('#row_settings_sendmail_path').show();\n\t\t\t\t$('#row_settings_smtp_header').hide();\n\t\t\t\t$('#row_settings_smtp_host').hide();\n\t\t\t\t$('#row_settings_smtp_port').hide();\n\t\t\t\t$('#row_settings_smtp_username').hide();\n\t\t\t\t$('#row_settings_smtp_password').hide();\n\t\t\t\t$('#row_settings_smtp_secure').hide();\n\t\t\t\t$('#row_settings_smtp_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_header').hide();\n\t\t\t\t$('#row_settings_oauth2_host').hide();\n\t\t\t\t$('#row_settings_oauth2_port').hide();\n\t\t\t\t$('#row_settings_oauth2_secure').hide();\n\t\t\t\t$('#row_settings_oauth2_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_from_email').hide();\n\t\t\t\t$('#row_settings_oauth2_client_id').hide();\n\t\t\t\t$('#row_settings_oauth2_client_secret').hide();\n\t\t\t\t$('#row_settings_oauth2_redirect_uri').hide();\n\t\t\t\t$('#row_settings_oauth2_provider').hide();\n\t\t\t\t$('#row_settings_oauth2_tenant_id').hide();\n\t\t\t\t$('#row_settings_oauth2_refresh_token').hide();\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\t$('#settings_sendmail_path').val('');\n\t\t\t\t$('#row_settings_sendmail_header').hide();\n\t\t\t\t$('#row_settings_sendmail_path').hide();\n\t\t\t\t$('#row_settings_oauth2_header').hide();\n\t\t\t\t$('#row_settings_oauth2_host').hide();\n\t\t\t\t$('#row_settings_oauth2_port').hide();\n\t\t\t\t$('#row_settings_oauth2_secure').hide();\n\t\t\t\t$('#row_settings_oauth2_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_from_email').hide();\n\t\t\t\t$('#row_settings_oauth2_client_id').hide();\n\t\t\t\t$('#row_settings_oauth2_client_secret').hide();\n\t\t\t\t$('#row_settings_oauth2_redirect_uri').hide();\n\t\t\t\t$('#row_settings_oauth2_provider').hide();\n\t\t\t\t$('#row_settings_oauth2_tenant_id').hide();\n\t\t\t\t$('#row_settings_oauth2_refresh_token').hide();\n\t\t\t\t$('#row_settings_smtp_header').show();\n\t\t\t\t$('#row_settings_smtp_host').show();\n\t\t\t\t$('#row_settings_smtp_port').show();\n\t\t\t\t$('#row_settings_smtp_username').show();\n\t\t\t\t$('#row_settings_smtp_password').show();\n\t\t\t\t$('#row_settings_smtp_secure').show();\n\t\t\t\t$('#row_settings_smtp_timeout').show();\n\t\t\t\tbreak;\n\t\t\tcase '3':\n\t\t\t\t$('#row_settings_sendmail_header').hide();\n\t\t\t\t$('#row_settings_sendmail_path').hide();\n\t\t\t\t$('#row_settings_smtp_header').hide();\n\t\t\t\t$('#row_settings_smtp_host').hide();\n\t\t\t\t$('#row_settings_smtp_port').hide();\n\t\t\t\t$('#row_settings_smtp_username').hide();\n\t\t\t\t$('#row_settings_smtp_password').hide();\n\t\t\t\t$('#row_settings_smtp_secure').hide();\n\t\t\t\t$('#row_settings_smtp_timeout').hide();\n\t\t\t\t$('#row_settings_oauth2_host').show();\n\t\t\t\t$('#row_settings_oauth2_port').show();\n\t\t\t\t$('#row_settings_oauth2_secure').show();\n\t\t\t\t$('#row_settings_oauth2_timeout').show();\n\t\t\t\t$('#row_settings_oauth2_header').show();\n\t\t\t\t$('#row_settings_oauth2_from_email').show();\n\t\t\t\t$('#row_settings_oauth2_client_id').show();\n\t\t\t\t$('#row_settings_oauth2_client_secret').show();\n\t\t\t\t$('#row_settings_oauth2_redirect_uri').show();\n\t\t\t\t$('#row_settings_oauth2_provider').show();\n\t\t\t\t$('#row_settings_oauth2_tenant_id').show();\n\t\t\t\t$('#row_settings_oauth2_refresh_token').show();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction setupForm() {\n\t\tif ($('#filter').val().length >= 1 && $('#filter').val != prevSearch) {\n\t\t\t$.getJSON('settings.php?action=search&filter='+$('#filter').val(), function(data) {\n\t\t\t\tif (data.tabs.length == 1 && data.tabs[0] != currentTab) {\n\t\t\t\t\tloadPage('settings.php?tab='+data.tabs[0]+'&filter='+$('#filter').val());\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (data.tabs.length > 0) {\n\t\t\t\t\tif (data.tabs.indexOf(currentTab) == -1) {\n\t\t\t\t\t\tloadUrl({url: 'settings.php?tab='+data.tabs[0]+'&filter='+$('#filter').val()});\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#settings').find('nav').show();\n\t\t\t\t\t$('#settings').find('.subTab').hide();\n\t\t\t\t\t$('#form_settings').find('div[id^=\"settings_\"]').hide();\n\t\t\t\t\t$('#form_settings').find('[id^=\"row\"]').hide();\n\n\t\t\t\t\tfor (index of data.tabs) {\n\t\t\t\t\t\t$('#settings').find('#'+index+'.subTab').show();\n\t\t\t\t\t\t$('#form_settings').find('div[id^=\"settings_'+index+'\"]').show();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (index of data.spacers) {\n\t\t\t\t\t\t$('#form_settings').find('#row_'+index).show();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar stripe = 'odd';\n\n\t\t\t\t\tfor (index of data.rows) {\n\t\t\t\t\t\t$('#form_settings').find('#row_'+index).show().removeClass('odd').removeClass('even').addClass(stripe);\n\n\t\t\t\t\t\tstripe = (stripe == 'odd' ? 'even':'odd');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('#settings').find('nav').show();\n\t\t\t\t\t$('#settings').find('.subTab').show();\n\t\t\t\t\t$('#form_settings').find('div[id^=\"settings_\"]').show();\n\t\t\t\t\t$('#form_settings').find('tr[id^=\"row_\"]').show();\n\t\t\t\t}\n\n\t\t\t\t$('#saveRowParent').show();\n\t\t\t\t$('#form_settings_wrap').show();\n\t\t\t\t$('#filter').focus();\n\t\t\t});\n\n\t\t\tprevSearch = $('#filter').val();\n\t\t} else {\n\t\t\t$('#settings').find('nav').show();\n\t\t\t$('#saveRowParent').show();\n\t\t\t$('#settings').find('.subTab').show();\n\t\t\t$('#form_settings_wrap').show();\n\t\t\t$('#filter').focus();\n\t\t}\n\t}\n\n\tfunction initBoostCache() {\n\t\tif ($('#boost_png_cache_enable').is(':checked')){\n\t\t\t$('#row_boost_png_cache_directory').show();\n\t\t} else {\n\t\t\t$('#row_boost_png_cache_directory').hide();\n\t\t}\n\t}\n\n\tfunction initBoostOD() {\n\t\tif ($('#boost_rrd_update_enable').is(':checked')){\n\t\t\t$('#row_boost_rrd_update_interval').show();\n\t\t\t$('#row_boost_parallel').show();\n\t\t\t$('#row_path_boost_log').show();\n\t\t\t$('#row_boost_rrd_update_max_records').show();\n\t\t\t$('#row_boost_rrd_update_max_records_per_select').show();\n\t\t\t$('#row_boost_rrd_update_string_length').show();\n\t\t\t$('#row_boost_poller_mem_limit').show();\n\t\t\t$('#row_boost_rrd_update_max_runtime').show();\n\t\t\t$('#row_boost_redirect').show();\n\t\t} else {\n\t\t\t$('#row_boost_rrd_update_interval').hide();\n\t\t\t$('#row_boost_parallel').hide();\n\t\t\t$('#row_path_boost_log').hide();\n\t\t\t$('#row_boost_rrd_update_max_records').hide();\n\t\t\t$('#row_boost_rrd_update_max_records_per_select').hide();\n\t\t\t$('#row_boost_rrd_update_string_length').hide();\n\t\t\t$('#row_boost_poller_mem_limit').hide();\n\t\t\t$('#row_boost_rrd_update_max_runtime').hide();\n\t\t\t$('#row_boost_redirect').hide();\n\t\t}\n\t}\n\n\tfunction themeChanger() {\n\t\tif ($('#selected_theme').val() != currentTheme) {\n\t\t\tthemeChanged = true;\n\t\t} else {\n\t\t\tthemeChanged = false;\n\t\t}\n\t}\n\n\tfunction langDetectionChanger() {\n\t\tvar changed = currentLanguage != $('#i18n_default_language').val() ||\n\t\t\tcurrentLangDetect         != $('#i18n_auto_detection').val() ||\n\t\t\tcurrentLangSupport        != $('#i18n_language_support').val();\n\n\t\tif (changed) {\n\t\t\tlangRefresh = true;\n\t\t} else {\n\t\t\tlangRefresh = false;\n\t\t}\n\t}\n\n\tfunction permsChanger() {\n\t\tif ($('#graph_auth_method').val() != currentPerms) {\n\t\t\traiseMessage(permsTitle, permsHeader, permsMessage, MESSAGE_LEVEL_MIXED);\n\t\t}\n\t}\n\n\tfunction initFonts() {\n\t\tif ($('#font_method').val() == 1) {\n\t\t\t$('#row_path_rrdtool_default_font').hide();\n\t\t\t$('#row_title_size').hide();\n\t\t\t$('#row_title_font').hide();\n\t\t\t$('#row_legend_size').hide();\n\t\t\t$('#row_legend_font').hide();\n\t\t\t$('#row_axis_size').hide();\n\t\t\t$('#row_axis_font').hide();\n\t\t\t$('#row_unit_size').hide();\n\t\t\t$('#row_unit_font').hide();\n\t\t} else {\n\t\t\t$('#row_path_rrdtool_default_font').show();\n\t\t\t$('#row_title_size').show();\n\t\t\t$('#row_legend_size').show();\n\t\t\t$('#row_axis_size').show();\n\t\t\t$('#row_unit_size').show();\n\t\t\t$('#row_title_font').show();\n\t\t\t$('#row_legend_font').show();\n\t\t\t$('#row_axis_font').show();\n\t\t\t$('#row_unit_font').show();\n\t\t}\n\t}\n\n\tfunction initRealtime() {\n\t\tif ($('#realtime_enabled').is(':checked')) {\n\t\t\t$('#row_realtime_gwindow').show();\n\t\t\t$('#row_realtime_interval').show();\n\t\t\t$('#row_realtime_cache_path').show();\n\t\t} else {\n\t\t\t$('#row_realtime_gwindow').hide();\n\t\t\t$('#row_realtime_interval').hide();\n\t\t\t$('#row_realtime_cache_path').hide();\n\t\t}\n\t}\n\n\tfunction initRRDClean() {\n\t\tif ($('#rrd_autoclean').is(':checked')) {\n\t\t\t$('#row_rrd_autoclean_method').show();\n\t\t\tif ($('#rrd_autoclean_method').val() == '3') {\n\t\t\t\tif (rrdArchivePath != '') {\n\t\t\t\t\t$('#rrd_archive').val(rrdArchivePath);\n\t\t\t\t}\n\t\t\t\t$('#row_rrd_archive').show();\n\t\t\t} else {\n\t\t\t\tif ($('#rrd_archive').val() != '') {\n\t\t\t\t\trrdArchivePath = $('#rrd_archive').val();\n\t\t\t\t}\n\t\t\t\t$('#row_rrd_archive').hide();\n\t\t\t\t$('#rrd_archive').val('');\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#rrd_archive').val() != '') {\n\t\t\t\trrdArchivePath = $('#rrd_archive').val();\n\t\t\t}\n\t\t\t$('#rrd_archive').val('');\n\n\t\t\t$('#row_rrd_autoclean_method').hide();\n\t\t\t$('#row_rrd_archive').hide();\n\t\t}\n\t}\n\n\tfunction initSearch() {\n\t\tif ($('#auth_method').val() == 3) {\n\t\t\tswitch($('#ldap_mode').val()) {\n\t\t\tcase '0':\n\t\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t\tbreak;\n\t\t\tcase '1':\n\t\t\t\t$('#row_ldap_search_base_header').show();\n\t\t\t\t$('#row_ldap_search_base').show();\n\t\t\t\t$('#row_ldap_search_filter').show();\n\t\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\t\t$('#row_ldap_search_base_header').show();\n\t\t\t\t$('#row_ldap_search_base').show();\n\t\t\t\t$('#row_ldap_search_filter').show();\n\t\t\t\t$('#row_ldap_specific_dn').show();\n\t\t\t\t$('#row_ldap_specific_password').show();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t}\n\t}\n\n\tfunction initGroupMember() {\n\t\tif ($('#auth_method').val() == 3) {\n\t\t\tif ($('#ldap_group_require').is(':checked')) {\n\t\t\t\t$('#row_ldap_group_header').show();\n\t\t\t\t$('#row_ldap_group_dn').show();\n\t\t\t\t$('#row_ldap_group_attrib').show();\n\t\t\t\t$('#row_ldap_group_member_type').show();\n\t\t\t} else {\n\t\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t}\n\t\t} else {\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t}\n\t}\n\n\tfunction initAuth() {\n\t\tswitch($('#auth_method').val()) {\n\t\tcase '0': // None\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').hide();\n\t\t\t$('#row_special_users_header').hide();\n\t\t\t$('#row_admin_user').hide();\n\t\t\t$('#row_guest_user').hide();\n\t\t\t$('#row_user_template').hide();\n\t\t\t$('#row_ldap_general_header').hide();\n\t\t\t$('#row_ldap_server').hide();\n\t\t\t$('#row_ldap_port').hide();\n\t\t\t$('#row_ldap_port_ssl').hide();\n\t\t\t$('#row_ldap_version').hide();\n\t\t\t$('#row_ldap_encryption').hide();\n\t\t\t$('#row_ldap_referrals').hide();\n\t\t\t$('#row_ldap_mode').hide();\n\t\t\t$('#row_ldap_dn').hide();\n\t\t\t$('#row_ldap_group_require').hide();\n\t\t\t$('#row_ldap_attrib').hide();\n\t\t\t$('#row_ldap_member_type').hide();\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t$('#row_cn_header').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\t$('#row_secpass_header').hide();\n\t\t\t$('#row_secpass_minlen').hide();\n\t\t\t$('#row_secpass_reqmixcase').hide();\n\t\t\t$('#row_secpass_reqnum').hide();\n\t\t\t$('#row_secpass_reqspec').hide();\n\t\t\t$('#row_secpass_forceold').hide();\n\t\t\t$('#row_secpass_expireaccount').hide();\n\t\t\t$('#row_secpass_expirepass').hide();\n\t\t\t$('#row_secpass_history').hide();\n\t\t\t$('#row_secpass_lock_header').hide();\n\t\t\t$('#row_secpass_lockfailed').hide();\n\t\t\t$('#row_secpass_unlocktime').hide();\n\t\t\t$('#row_basic_header').hide();\n\t\t\t$('#row_basic_auth_fail_message').hide();\n\t\t\t$('#row_path_basic_mapfile').hide();\n\t\t\t$('#row_ldap_network_timeout').hide();\n\t\t\t$('#row_ldap_bind_timeout').hide();\n\t\t\t$('#row_ldap_tls_certificate').hide();\n\t\t\tbreak;\n\t\tcase '1': // Builtin\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').show();\n\t\t\t$('#row_special_users_header').show();\n\t\t\t$('#row_admin_user').show();\n\t\t\t$('#row_guest_user').show();\n\t\t\t$('#row_user_template').show();\n\t\t\t$('#row_ldap_general_header').hide();\n\t\t\t$('#row_ldap_server').hide();\n\t\t\t$('#row_ldap_port').hide();\n\t\t\t$('#row_ldap_port_ssl').hide();\n\t\t\t$('#row_ldap_version').hide();\n\t\t\t$('#row_ldap_encryption').hide();\n\t\t\t$('#row_ldap_referrals').hide();\n\t\t\t$('#row_ldap_mode').hide();\n\t\t\t$('#row_ldap_dn').hide();\n\t\t\t$('#row_ldap_group_require').hide();\n\t\t\t$('#row_ldap_attrib').hide();\n\t\t\t$('#row_ldap_member_type').hide();\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t$('#row_cn_header').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\t$('#row_secpass_header').show();\n\t\t\t$('#row_secpass_minlen').show();\n\t\t\t$('#row_secpass_reqmixcase').show();\n\t\t\t$('#row_secpass_reqnum').show();\n\t\t\t$('#row_secpass_reqspec').show();\n\t\t\t$('#row_secpass_forceold').show();\n\t\t\t$('#row_secpass_expireaccount').show();\n\t\t\t$('#row_secpass_expirepass').show();\n\t\t\t$('#row_secpass_history').show();\n\t\t\t$('#row_secpass_lock_header').show();\n\t\t\t$('#row_secpass_lockfailed').show();\n\t\t\t$('#row_secpass_unlocktime').show();\n\t\t\t$('#row_basic_header').hide();\n\t\t\t$('#row_basic_auth_fail_message').hide();\n\t\t\t$('#row_path_basic_mapfile').hide();\n\t\t\t$('#row_ldap_network_timeout').hide();\n\t\t\t$('#row_ldap_bind_timeout').hide();\n\t\t\t$('#row_ldap_tls_certificate').hide();\n\t\t\t$('#row_ldap_debug').hide();\n\t\t\tbreak;\n\t\tcase '2': // Web Basic\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').hide();\n\t\t\t$('#row_special_users_header').show();\n\t\t\t$('#row_admin_user').show();\n\t\t\t$('#row_guest_user').show();\n\t\t\t$('#row_user_template').show();\n\t\t\t$('#row_ldap_general_header').hide();\n\t\t\t$('#row_ldap_server').hide();\n\t\t\t$('#row_ldap_port').hide();\n\t\t\t$('#row_ldap_port_ssl').hide();\n\t\t\t$('#row_ldap_version').hide();\n\t\t\t$('#row_ldap_encryption').hide();\n\t\t\t$('#row_ldap_referrals').hide();\n\t\t\t$('#row_ldap_mode').hide();\n\t\t\t$('#row_ldap_dn').hide();\n\t\t\t$('#row_ldap_group_require').hide();\n\t\t\t$('#row_ldap_attrib').hide();\n\t\t\t$('#row_ldap_member_type').hide();\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t$('#row_cn_header').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\t$('#row_secpass_header').hide();\n\t\t\t$('#row_secpass_minlen').hide();\n\t\t\t$('#row_secpass_reqmixcase').hide();\n\t\t\t$('#row_secpass_reqnum').hide();\n\t\t\t$('#row_secpass_reqspec').hide();\n\t\t\t$('#row_secpass_forceold').hide();\n\t\t\t$('#row_secpass_expireaccount').hide();\n\t\t\t$('#row_secpass_expirepass').hide();\n\t\t\t$('#row_secpass_history').hide();\n\t\t\t$('#row_secpass_lock_header').hide();\n\t\t\t$('#row_secpass_lockfailed').hide();\n\t\t\t$('#row_secpass_unlocktime').hide();\n\t\t\t$('#row_basic_header').show();\n\t\t\t$('#row_basic_auth_fail_message').show();\n\t\t\t$('#row_path_basic_mapfile').show();\n\t\t\t$('#row_ldap_network_timeout').hide();\n\t\t\t$('#row_ldap_bind_timeout').hide();\n\t\t\t$('#row_ldap_tls_certificate').hide();\n\t\t\t$('#row_ldap_debug').hide();\n\t\t\tbreak;\n\t\tcase '4': // Multiple Domains\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').show();\n\t\t\t$('#row_special_users_header').show();\n\t\t\t$('#row_admin_user').show();\n\t\t\t$('#row_guest_user').show();\n\t\t\t$('#row_user_template').hide();\n\t\t\t$('#row_ldap_general_header').show();\n\t\t\t$('#row_ldap_server').show();\n\t\t\t$('#row_ldap_port').show();\n\t\t\t$('#row_ldap_port_ssl').show();\n\t\t\t$('#row_ldap_version').hide();\n\t\t\t$('#row_ldap_encryption').hide();\n\t\t\t$('#row_ldap_referrals').hide();\n\t\t\t$('#row_ldap_mode').hide();\n\t\t\t$('#row_ldap_dn').hide();\n\t\t\t$('#row_ldap_group_require').hide();\n\t\t\t$('#row_ldap_attrib').hide();\n\t\t\t$('#row_ldap_member_type').hide();\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t$('#row_cn_header').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\t$('#row_secpass_header').show();\n\t\t\t$('#row_secpass_minlen').show();\n\t\t\t$('#row_secpass_reqmixcase').show();\n\t\t\t$('#row_secpass_reqnum').show();\n\t\t\t$('#row_secpass_reqspec').show();\n\t\t\t$('#row_secpass_forceold').show();\n\t\t\t$('#row_secpass_expireaccount').show();\n\t\t\t$('#row_secpass_expirepass').show();\n\t\t\t$('#row_secpass_history').show();\n\t\t\t$('#row_secpass_lock_header').show();\n\t\t\t$('#row_secpass_lockfailed').show();\n\t\t\t$('#row_secpass_unlocktime').show();\n\t\t\t$('#row_basic_header').hide();\n\t\t\t$('#row_basic_auth_fail_message').hide();\n\t\t\t$('#row_path_basic_mapfile').hide();\n\t\t\t$('#row_ldap_network_timeout').show();\n\t\t\t$('#row_ldap_bind_timeout').show();\n\t\t\t$('#row_ldap_tls_certificate').show();\n\t\t\t$('#row_ldap_debug').show();\n\t\t\tbreak;\n\t\tcase '3': // Single Domain\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').show();\n\t\t\t$('#row_special_users_header').show();\n\t\t\t$('#row_admin_user').show();\n\t\t\t$('#row_guest_user').show();\n\t\t\t$('#row_user_template').show();\n\t\t\t$('#row_ldap_general_header').show();\n\t\t\t$('#row_ldap_server').show();\n\t\t\t$('#row_ldap_port').show();\n\t\t\t$('#row_ldap_port_ssl').show();\n\t\t\t$('#row_ldap_version').show();\n\t\t\t$('#row_ldap_encryption').show();\n\t\t\t$('#row_ldap_referrals').show();\n\t\t\t$('#row_ldap_mode').show();\n\t\t\t$('#row_ldap_dn').show();\n\t\t\t$('#row_ldap_group_require').show();\n\t\t\t$('#row_ldap_attrib').show();\n\t\t\t$('#row_ldap_member_type').show();\n\t\t\t$('#row_ldap_group_header').show();\n\t\t\t$('#row_ldap_group_dn').show();\n\t\t\t$('#row_ldap_group_attrib').show();\n\t\t\t$('#row_ldap_group_member_type').show();\n\t\t\t$('#row_ldap_search_base_header').show();\n\t\t\t$('#row_ldap_search_base').show();\n\t\t\t$('#row_ldap_search_filter').show();\n\t\t\t$('#row_ldap_specific_dn').show();\n\t\t\t$('#row_ldap_specific_password').show();\n\t\t\t$('#row_cn_header').show();\n\t\t\t$('#row_cn_full_name').show();\n\t\t\t$('#row_cn_email').show();\n\t\t\t$('#row_secpass_header').show();\n\t\t\t$('#row_secpass_minlen').show();\n\t\t\t$('#row_secpass_reqmixcase').show();\n\t\t\t$('#row_secpass_reqnum').show();\n\t\t\t$('#row_secpass_reqspec').show();\n\t\t\t$('#row_secpass_forceold').show();\n\t\t\t$('#row_secpass_expireaccount').show();\n\t\t\t$('#row_secpass_expirepass').show();\n\t\t\t$('#row_secpass_history').show();\n\t\t\t$('#row_secpass_lock_header').show();\n\t\t\t$('#row_secpass_lockfailed').show();\n\t\t\t$('#row_secpass_unlocktime').show();\n\t\t\t$('#row_basic_header').hide();\n\t\t\t$('#row_basic_auth_fail_message').hide();\n\t\t\t$('#row_path_basic_mapfile').hide();\n\t\t\t$('#row_ldap_network_timeout').show();\n\t\t\t$('#row_ldap_bind_timeout').show();\n\t\t\t$('#row_ldap_tls_certificate').show();\n\t\t\t$('#row_ldap_debug').show();\n\t\t\tinitSearch();\n\t\t\tinitGroupMember();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$('#row_auth_method').show();\n\t\t\t$('#row_auth_cache_enabled').show();\n\t\t\t$('#row_special_users_header').show();\n\t\t\t$('#row_admin_user').show();\n\t\t\t$('#row_guest_user').show();\n\t\t\t$('#row_user_template').show();\n\t\t\t$('#row_ldap_general_header').hide();\n\t\t\t$('#row_ldap_server').hide();\n\t\t\t$('#row_ldap_port').hide();\n\t\t\t$('#row_ldap_port_ssl').hide();\n\t\t\t$('#row_ldap_version').hide();\n\t\t\t$('#row_ldap_encryption').hide();\n\t\t\t$('#row_ldap_referrals').hide();\n\t\t\t$('#row_ldap_mode').hide();\n\t\t\t$('#row_ldap_dn').hide();\n\t\t\t$('#row_ldap_group_require').hide();\n\t\t\t$('#row_ldap_attrib').hide();\n\t\t\t$('#row_ldap_member_type').hide();\n\t\t\t$('#row_ldap_group_header').hide();\n\t\t\t$('#row_ldap_group_dn').hide();\n\t\t\t$('#row_ldap_group_attrib').hide();\n\t\t\t$('#row_ldap_group_member_type').hide();\n\t\t\t$('#row_ldap_search_base_header').hide();\n\t\t\t$('#row_ldap_search_base').hide();\n\t\t\t$('#row_ldap_search_filter').hide();\n\t\t\t$('#row_ldap_specific_dn').hide();\n\t\t\t$('#row_ldap_specific_password').hide();\n\t\t\t$('#row_cn_header').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\t$('#row_secpass_header').show();\n\t\t\t$('#row_secpass_minlen').show();\n\t\t\t$('#row_secpass_reqmixcase').show();\n\t\t\t$('#row_secpass_reqnum').show();\n\t\t\t$('#row_secpass_reqspec').show();\n\t\t\t$('#row_secpass_forceold').show();\n\t\t\t$('#row_secpass_expireaccount').show();\n\t\t\t$('#row_secpass_expirepass').show();\n\t\t\t$('#row_secpass_history').show();\n\t\t\t$('#row_secpass_lock_header').show();\n\t\t\t$('#row_secpass_lockfailed').show();\n\t\t\t$('#row_secpass_unlocktime').show();\n\t\t\t$('#row_basic_header').hide();\n\t\t\t$('#row_basic_auth_fail_message').hide();\n\t\t\t$('#row_path_basic_mapfile').hide();\n\t\t\t$('#row_ldap_network_timeout').hide();\n\t\t\t$('#row_ldap_bind_timeout').hide();\n\t\t\t$('#row_ldap_tls_certificate').hide();\n\t\t\t$('#row_ldap_debug').hide();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction initAvail() {\n\t\tswitch($('#availability_method').val()) {\n\t\tcase '0':\n\t\t\t$('#row_ping_method').hide();\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').hide();\n\t\t\t$('#row_ping_retries').hide();\n\t\t\tbreak;\n\t\tcase '1':\n\t\tcase '4':\n\t\t\t$('#row_ping_method').show();\n\t\t\t$('#row_ping_port').show();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\tcase '3':\n\t\t\t$('#row_ping_method').show();\n\t\t\t$('#row_ping_port').show();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\tcase '2':\n\t\tcase '5':\n\t\tcase '6':\n\t\t\t$('#row_ping_method').hide();\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t</script>\n\t<?php\n\n\tapi_plugin_hook('settings_bottom');\n\n\tbottom_footer();\n}\n\nfunction validate_settings_filter() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_DEFAULT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_settings');\n\t/* ================= input validation ================= */\n}\n\nfunction settings_search() {\n\tglobal $settings;\n\n\tvalidate_settings_filter();\n\n\t$filter = get_request_var('filter');\n\n\t$response = array(\n\t\t'tabs'    => array(),\n\t\t'rows'    => array(),\n\t\t'spacers' => array()\n\t);\n\n\t$last_spacer = '';\n\t$tabs        = array();\n\t$spacers     = array();\n\n\tforeach($settings as $tab => $page) {\n\t\tforeach($page as $field_name => $field_array) {\n\t\t\tif ($field_array['method'] == 'spacer') {\n\t\t\t\t$last_spacer = $field_name;\n\t\t\t} elseif ($field_array['method'] != 'hidden') {\n\t\t\t\t$friendly_key    = false;\n\t\t\t\t$description_key = false;\n\n\t\t\t\tif (isset($field_array['friendly_name'])) {\n\t\t\t\t\tif (stristr($field_array['friendly_name'], $filter) !== false) {\n\t\t\t\t\t\t$friendly_key = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$friendly_key = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$friendly_key = false;\n\t\t\t\t}\n\n\t\t\t\tif (isset($field_array['description'])) {\n\t\t\t\t\tif (stristr($field_array['description'], $filter) !== false) {\n\t\t\t\t\t\t$description_key = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$description_key = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$description_key = false;\n\t\t\t\t}\n\n\t\t\t\tif ($friendly_key !== false || $description_key !== false) {\n\t\t\t\t\t$tabs[] = $tab;\n\t\t\t\t\t$response['rows'][] = $field_name;\n\n\t\t\t\t\tif ($last_spacer != '') {\n\t\t\t\t\t\t$spacers[] = $last_spacer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (cacti_sizeof($tabs)) {\n\t\t$response['tabs'] = array_values(array_unique($tabs, SORT_STRING));\n\t}\n\n\tif (cacti_sizeof($spacers)) {\n\t\t$response['spacers'] = array_values(array_unique($spacers, SORT_STRING));\n\t}\n\n\tprint json_encode($response);\n}\n\nfunction save_settings() {\n\tglobal $config, $settings, $local_db_cnn_id;\n\n\t$errors = array();\n\t$inserts = array();\n\n\tforeach ($settings[get_request_var('tab')] as $field_name => $field_array) {\n\t\tif (($field_array['method'] == 'header') || ($field_array['method'] == 'spacer' )){\n\t\t\t/* do nothing */\n\t\t} elseif ($field_array['method'] == 'checkbox') {\n\t\t\tif (isset_request_var($field_name)) {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', \"on\")';\n\t\t\t\tdb_execute_prepared(\"REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, 'on')\",\n\t\t\t\t\tarray($field_name));\n\t\t\t} else {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', \"\")';\n\t\t\t\tdb_execute_prepared(\"REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, '')\",\n\t\t\t\t\tarray($field_name));\n\t\t\t}\n\t\t} elseif ($field_array['method'] == 'checkbox_group') {\n\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\tif (isset_request_var($sub_field_name)) {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', \"on\")';\n\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, 'on')\",\n\t\t\t\t\tarray($sub_field_name));\n\t\t\t\t} else {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', \"on\")';\n\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, '')\",\n\t\t\t\t\tarray($sub_field_name));\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($field_array['method'] == 'dirpath') {\n\t\t\tif (get_nfilter_request_var($field_name) != '' && !is_dir(get_nfilter_request_var($field_name))) {\n\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t$errors[8] = 8;\n\t\t\t} else {\n\t\t\t\tif (get_request_var('tab') == 'path' && is_remote_path_setting($field_name)) {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t\t(name, value)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)), true, $local_db_cnn_id);\n\t\t\t\t} else {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($field_name)) . ')';\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t\t(name, value)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($field_array['method'] == 'filepath') {\n\t\t\tif (isset($field_array['file_type']) &&\n\t\t\t\t$field_array['file_type'] == 'binary' &&\n\t\t\t\tget_nfilter_request_var($field_name) != '' &&\n\t\t\t\tfile_exists(get_nfilter_request_var($field_name)) === false) {\n\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t$errors[36] = 36;\n\t\t\t} else {\n\t\t\t\t$continue = true;\n\n\t\t\t\tif ($field_name == 'path_cactilog' || $field_name == 'path_stderrlog') {\n\t\t\t\t\t$extension = pathinfo(get_nfilter_request_var($field_name), PATHINFO_EXTENSION);\n\n\t\t\t\t\tif ($extension != 'log') {\n\t\t\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t\t\t$errors[9] = 9;\n\t\t\t\t\t\t$continue = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var($field_name) != '' && !is_valid_pathname(get_nfilter_request_var($field_name))) {\n\t\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t\t$errors[36] = 36;\n\t\t\t\t}\n\n\t\t\t\tif ($continue) {\n\t\t\t\t\tif (get_request_var('tab') == 'path' && is_remote_path_setting($field_name)) {\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t\t\t(name, value)\n\t\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)), true, $local_db_cnn_id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($field_name)) . ')';\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t\t\t(name, value)\n\t\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($field_array['method'] == 'textbox_password') {\n\t\t\tif (isset_request_var($field_name . '_confirm') && get_nfilter_request_var($field_name) != get_nfilter_request_var($field_name . '_confirm')) {\n\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t$errors[4] = 4;\n\t\t\t\tbreak;\n\t\t\t} elseif (!isempty_request_var($field_name)) {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($field_name)) . ')';\n\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)));\n\t\t\t}\n\t\t} elseif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\tif (isset_request_var($sub_field_name)) {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($sub_field_name)) . ')';\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($sub_field_name, get_nfilter_request_var($sub_field_name)));\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ($field_array['method'] == 'drop_multi') {\n\t\t\tif (isset_request_var($field_name)) {\n\t\t\t\tif (is_array(get_nfilter_request_var($field_name))) {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(implode(',', get_nfilter_request_var($field_name))) . ')';\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($field_name, implode(',', get_nfilter_request_var($field_name))));\n\t\t\t\t} else {\n\t\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($field_name)) . ')';\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', \"\")';\n\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, \"\")',\n\t\t\t\t\tarray($field_name));\n\t\t\t}\n\t\t} elseif (isset_request_var($field_name)) {\n\t\t\tif ($field_array['method'] == 'textbox' && isset($field_array['filter'])) {\n\t\t\t\tif (isset($field_array['options'])) {\n\t\t\t\t\t$value = filter_var(get_nfilter_request_var($field_name), $field_array['filter'], $field_array['options']);\n\t\t\t\t} else {\n\t\t\t\t\t$value = filter_var(get_nfilter_request_var($field_name), $field_array['filter']);\n\t\t\t\t}\n\t\t\t\tif ($value === false) {\n\t\t\t\t\t$_SESSION['sess_error_fields'][$field_name] = $field_name;\n\t\t\t\t\t$_SESSION['sess_field_values'][$field_name] = get_nfilter_request_var($field_name);\n\t\t\t\t\t$errors[3] = 3;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (is_array(get_nfilter_request_var($field_name))) {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(implode(',', get_nfilter_request_var($field_name))) . ')';\n\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($field_name, implode(',', get_nfilter_request_var($field_name))));\n\t\t\t} else {\n\t\t\t\t$inserts[] = '(' . db_qstr($field_name) . ', ' . db_qstr(get_nfilter_request_var($field_name)) . ')';\n\t\t\t\tdb_execute_prepared('REPLACE INTO settings\n\t\t\t\t\t(name, value)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($field_name, get_nfilter_request_var($field_name)));\n\t\t\t}\n\t\t}\n\n\t\tif ($field_name == 'auth_method') {\n\t\t\tif (get_nfilter_request_var($field_name) == '2') {\n\t\t\t\tdb_execute('TRUNCATE TABLE user_auth_cache');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset_request_var('log_verbosity')) {\n\t\tif (!isset_request_var('selective_debug')) {\n\t\t\t$inserts[] = '(\"selective_debug\", \"\")';\n\t\t\tdb_execute('REPLACE INTO settings\n\t\t\t\t(name, value)\n\t\t\t\tVALUES (\"selective_debug\", \"\")');\n\t\t}\n\n\t\tif (!isset_request_var('selective_plugin_debug')) {\n\t\t\t$inserts[] = '(\"selective_plugin_debug\", \"\")';\n\t\t\tdb_execute('REPLACE INTO settings\n\t\t\t\t(name, value)\n\t\t\t\tVALUES (\"selective_plugin_debug\", \"\")');\n\t\t}\n\t}\n\n\t// Disable template user from being able to login\n\tif (isset_request_var('user_template')) {\n\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\tSET enabled=\"\"\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_nfilter_request_var('user_template')));\n\t}\n\n\t// Update snmpcache\n\tsnmpagent_global_settings_update();\n\n\tapi_plugin_hook_function('global_settings_update');\n\n\t$gone_time = read_config_option('poller_interval') * 2;\n\n\t$pollers = array_rekey(\n\t\tdb_fetch_assoc('SELECT\n\t\t\tid,\n\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_status) AS last_polled\n\t\t\tFROM poller\n\t\t\tWHERE id > 1\n\t\t\tAND disabled=\"\"'),\n\t\t'id', 'last_polled'\n\t);\n\n\tif (get_request_var('tab') == 'path' && $config['poller_id'] > 1) {\n\t\traise_message('poller_paths');\n\t}\n\n\tif (cacti_sizeof($errors) == 0) {\n\t\tif (cacti_sizeof($pollers) && $config['poller_id'] == 1) {\n\t\t\t$sql = 'INSERT INTO settings\n\t\t\t\t(name, value)\n\t\t\t\tVALUES ' . implode(', ', $inserts) . '\n\t\t\t\tON DUPLICATE KEY UPDATE value=VALUES(value)';\n\n\t\t\tforeach($pollers as $p => $t) {\n\t\t\t\tif ($t > $gone_time) {\n\t\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d skipped due to heartbeat.', $p), MESSAGE_LEVEL_WARN);\n\t\t\t\t} else {\n\t\t\t\t\t$rcnn_id = poller_connect_to_remote($p);\n\n\t\t\t\t\tif ($rcnn_id) {\n\t\t\t\t\t\tif (db_execute($sql, false, $rcnn_id) === false) {\n\t\t\t\t\t\t\t$rcnn_id = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if we still have rcnn_id, if it's now become false, we had a problem\n\t\t\t\t\tif (!$rcnn_id) {\n\t\t\t\t\t\traise_message('poller_' . $p, __('Settings save to Data Collector %d Failed.', $p), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\traise_message(42);\n\t\t} else {\n\t\t\traise_message(1);\n\t\t}\n\t} else {\n\t\traise_message(35);\n\n\t\tforeach($errors as $error) {\n\t\t\traise_message($error);\n\t\t}\n\t}\n\n\t/* reset local settings cache so the user sees the new settings */\n\tkill_session_var('sess_config_array');\n\n\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\theader('Location: settings.php?header=false&tab=' . get_request_var('tab'));\n\t} else {\n\t\theader('Location: settings.php?tab=' . get_request_var('tab'));\n\t}\n}\n"
        },
        {
          "name": "sites.php",
          "type": "blob",
          "size": 19.650390625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Enable'),\n\t4 => __('Disable')\n);\n\n/* file: sites.php, action: edit */\n$fields_site_edit = array(\n\t'spacer0' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Site Information'),\n\t\t'collapsible'   => 'true'\n\t),\n\t'name' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description'   => __('The primary name for the Site.'),\n\t\t'value'         => '|arg1:name|',\n\t\t'size'          => '50',\n\t\t'default'       => __('New Site'),\n\t\t'max_length'    => '100'\n\t),\n\t'disabled' => array(\n\t\t'method'        => 'checkbox',\n\t\t'friendly_name' => __('Disable Site'),\n\t\t'description'   => __('Check this box to disable all checks for hosts in this site.'),\n\t\t'value'         => '|arg1:disabled|',\n\t\t'default'       => '',\n\t\t'form_id'       => false\n\t),\n\t'spacer1' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Address Information'),\n\t\t'collapsible'   => 'true'\n\t),\n\t'address1' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Address1'),\n\t\t'description'   => __('The primary address for the Site.'),\n\t\t'value'         => '|arg1:address1|',\n\t\t'placeholder'   => __('Enter the Site Address'),\n\t\t'size'          => '70',\n\t\t'max_length'    => '100'\n\t),\n\t'address2' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Address2'),\n\t\t'description'   => __('Additional address information for the Site.'),\n\t\t'value'         => '|arg1:address2|',\n\t\t'placeholder'   => __('Additional Site Address information'),\n\t\t'size'          => '70',\n\t\t'max_length'    => '100'\n\t),\n\t'city' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('City'),\n\t\t'description'   => __('The city or locality for the Site.'),\n\t\t'value'         => '|arg1:city|',\n\t\t'placeholder'   => __('Enter the City or Locality'),\n\t\t'size'          => '30',\n\t\t'max_length'    => '30'\n\t),\n\t'state' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('State'),\n\t\t'description'   => __('The state for the Site.'),\n\t\t'value'         => '|arg1:state|',\n\t\t'placeholder'   => __('Enter the state'),\n\t\t'size'          => '15',\n\t\t'max_length'    => '20'\n\t),\n\t'postal_code' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Postal/Zip Code'),\n\t\t'description'   => __('The postal or zip code for the Site.'),\n\t\t'value'         => '|arg1:postal_code|',\n\t\t'placeholder'   => __('Enter the postal code'),\n\t\t'size'          => '20',\n\t\t'max_length'    => '20'\n\t),\n\t'country' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Country'),\n\t\t'description'   => __('The country for the Site.'),\n\t\t'value'         => '|arg1:country|',\n\t\t'placeholder'   => __('Enter the country'),\n\t\t'size'          => '20',\n\t\t'max_length'    => '30'\n\t),\n\t'region' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Region'),\n\t\t'description'   => __('The Region of the world that this site is in.'),\n\t\t'value'         => '|arg1:region|',\n\t\t'placeholder'   => __('Enter the region of the world'),\n\t\t'size'          => '20',\n\t\t'max_length'    => '30'\n\t),\n\t'timezone' => array(\n\t\t'method'        => 'drop_callback',\n\t\t'friendly_name' => __('TimeZone'),\n\t\t'description'   => __('The TimeZone for the Site.'),\n\t\t'sql'           => 'SELECT Name AS id, Name AS name FROM mysql.time_zone_name ORDER BY name',\n\t\t'action'        => 'ajax_tz',\n\t\t'id'            => '|arg1:timezone|',\n\t\t'value'         => '|arg1:timezone|'\n\t),\n\t'spacer2' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Geolocation Information'),\n\t\t'collapsible'   => 'true'\n\t),\n\t'latitude' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Latitude'),\n\t\t'description'   => __('The Latitude for this Site.'),\n\t\t'value'         => '|arg1:latitude|',\n\t\t'placeholder'   => __('example 38.889488'),\n\t\t'size'          => '20',\n\t\t'max_length'    => '30'\n\t),\n\t'longitude' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Longitude'),\n\t\t'description'   => __('The Longitude for this Site.'),\n\t\t'value'         => '|arg1:longitude|',\n\t\t'placeholder'   => __('example -77.0374678'),\n\t\t'size'          => '20',\n\t\t'max_length'    => '30'\n\t),\n\t'zoom' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Zoom'),\n\t\t'description'   => __('The default Map Zoom for this Site.  Values can be from 0 to 23. Note that some regions of the planet have a max Zoom of 15.'),\n\t\t'value'         => '|arg1:zoom|',\n\t\t'placeholder'   => __('0 - 23'),\n\t\t'default'       => '12',\n\t\t'size'          => '4',\n\t\t'max_length'    => '4'\n\t),\n\t'spacer3' => array(\n\t\t'method'        => 'spacer',\n\t\t'friendly_name' => __('Additional Information'),\n\t\t'collapsible'   => 'true'\n\t),\n\t'notes' => array(\n\t\t'method'        => 'textarea',\n\t\t'friendly_name' => __('Notes'),\n\t\t'textarea_rows' => '3',\n\t\t'textarea_cols' => '70',\n\t\t'description'   => __('Additional area use for random notes related to this Site.'),\n\t\t'value'         => '|arg1:notes|',\n\t\t'max_length'    => '255',\n\t\t'placeholder'   => __('Enter some useful information about the Site.'),\n\t\t'class'         => 'textAreaNotes'\n\t),\n\t'alternate_id' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Alternate Name'),\n\t\t'description'   => __('Used for cases where a Site has an alternate named used to describe it'),\n\t\t'value'         => '|arg1:alternate_id|',\n\t\t'placeholder'   => __('If the Site is known by another name enter it here.'),\n\t\t'size'          => '50',\n\t\t'max_length'    => '30'\n\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value'  => '|arg1:id|'\n\t),\n\t'save_component_site' => array(\n\t\t'method' => 'hidden',\n\t\t'value'  => '1'\n\t)\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_tz':\n\t\tprint json_encode(db_fetch_assoc_prepared('SELECT Name AS label, Name AS `value`\n\t\t\tFROM mysql.time_zone_name\n\t\t\tWHERE Name LIKE ?\n\t\t\tORDER BY Name\n\t\t\tLIMIT ' . read_config_option('autocomplete_rows'),\n\t\t\tarray('%' . get_nfilter_request_var('term') . '%')));\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tsite_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tsites();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tif (isset_request_var('save_component_site')) {\n\t\t$save['id']           = get_filter_request_var('id');\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['disabled']     = form_input_validate(get_nfilter_request_var('disabled'), 'disabled', '(^on$)', true, 3);\n\t\t$save['address1']     = form_input_validate(get_nfilter_request_var('address1'), 'address1', '', true, 3);\n\t\t$save['address2']     = form_input_validate(get_nfilter_request_var('address2'), 'address2', '', true, 3);\n\t\t$save['city']         = form_input_validate(get_nfilter_request_var('city'), 'city', '', true, 3);\n\t\t$save['state']        = form_input_validate(get_nfilter_request_var('state'), 'state', '', true, 3);\n\t\t$save['postal_code']  = form_input_validate(get_nfilter_request_var('postal_code'), 'postal_code', '', true, 3);\n\t\t$save['country']      = form_input_validate(get_nfilter_request_var('country'), 'country', '', true, 3);\n\t\t$save['region']       = form_input_validate(get_nfilter_request_var('region'), 'region', '', true, 3);\n\t\t$save['timezone']     = form_input_validate(get_nfilter_request_var('timezone'), 'timezone', '', true, 3);\n\t\t$save['latitude']     = form_input_validate(get_nfilter_request_var('latitude'), 'latitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['longitude']    = form_input_validate(get_nfilter_request_var('longitude'), 'longitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['zoom']         = form_input_validate(get_nfilter_request_var('zoom'), 'zoom', '^[0-9]+$', true, 3);\n\t\t$save['alternate_id'] = form_input_validate(get_nfilter_request_var('alternate_id'), 'alternate_id', '', true, 3);\n\t\t$save['notes']        = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$site_id = sql_save($save, 'sites');\n\n\t\t\tif ($site_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tif (empty($save['id'])) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Save the last time a device/site was created/updated\n\t\t\t\t\t * for Caching.\n\t\t\t\t\t */\n\t\t\t\t\tset_config_option('time_last_change_site', time());\n\t\t\t\t\tset_config_option('time_last_change_site_device', time());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php?action=edit&id=' . (empty($site_id) ? get_nfilter_request_var('id') : $site_id));\n\t}\n}\n\nfunction disable_site($sites) {\n\tif (cacti_sizeof($sites)) {\n\t\tforeach($sites as $id) {\n\t\t\tdb_execute_prepared('UPDATE sites SET disabled = \"on\" WHERE id = ?', array($id));\n\t\t}\n\n\t\t/**\n\t\t * Save the last time a device/site was created/updated\n\t\t * for Caching.\n\t\t */\n\t\tset_config_option('time_last_change_site', time());\n\t\tset_config_option('time_last_change_site_device', time());\n\t}\n}\n\nfunction enable_site($sites) {\n\tif (cacti_sizeof($sites)) {\n\t\tforeach($sites as $id) {\n\t\t\tdb_execute_prepared('UPDATE sites SET disabled = \"\" WHERE id = ?', array($id));\n\t\t}\n\n\t\t/**\n\t\t * Save the last time a device/site was created/updated\n\t\t * for Caching.\n\t\t */\n\t\tset_config_option('time_last_change_site', time());\n\t\tset_config_option('time_last_change_site_device', time());\n\t}\n}\n\nfunction duplicate_site($template_id, $name) {\n\tif (!is_array($template_id)) {\n\t\t$template_id = array($template_id);\n\t}\n\n\tforeach ($template_id as $id) {\n\t\t$site = db_fetch_row_prepared('SELECT *\n\t\t\tFROM sites\n\t\t\tWHERE id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($site)) {\n\t\t\t$save = array();\n\n\t\t\t$save['id'] = 0;\n\n\t\t\tforeach ($site as $column => $value) {\n\t\t\t\tif ($column == 'id') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ($column == 'name') {\n\t\t\t\t\t$save['name'] = str_replace('<site>', $value, $name);\n\t\t\t\t} else {\n\t\t\t\t\t$save[$column] = $value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$site_id = sql_save($save, 'sites');\n\n\t\t\tif ($site_id > 0) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t} else {\n\t\t\traise_message('site_error', __('Template Site was not found! Unable to duplicate.'), MESSAGE_LEVEL_ERROR);\n\t\t}\n\t}\n\n\t/**\n\t * Save the last time a device/site was created/updated\n\t * for Caching.\n\t */\n\tset_config_option('time_last_change_site', time());\n\tset_config_option('time_last_change_site_device', time());\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM sites WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('UPDATE host SET site_id=0 WHERE deleted=\"\" AND ' . array_to_sql_or($selected_items, 'site_id'));\n\n\t\t\t\t/**\n\t\t\t\t * Save the last time a device/site was created/updated\n\t\t\t\t * for Caching.\n\t\t\t\t */\n\t\t\t\tset_config_option('time_last_change_site', time());\n\t\t\t\tset_config_option('time_last_change_site_device', time());\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* Duplicate */\n\t\t\t\tduplicate_site($selected_items, get_nfilter_request_var('site_name'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* Enable */\n\t\t\t\tenable_site($selected_items);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* Disable */\n\t\t\t\tdisable_site($selected_items);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM sites WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'sites.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Site.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Sites.'),\n\t\t\t\t\t'scont'    => __('Delete Site'),\n\t\t\t\t\t'pcont'    => __('Delete Sites')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following Site.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following Sites.'),\n\t\t\t\t\t'scont'    => __('Duplicate Site'),\n\t\t\t\t\t'pcont'    => __('Duplicate Sites'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'site_name' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Site Name'),\n\t\t\t\t\t\t\t'default' => '<site> (1)',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following Site.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Sites.'),\n\t\t\t\t\t'scont'    => __('Enable Site'),\n\t\t\t\t\t'pcont'    => __('Enable Sites')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following Site.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Sites.'),\n\t\t\t\t\t'scont'    => __('Disable Site'),\n\t\t\t\t\t'pcont'    => __('Disable Sites')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction site_edit() {\n\tglobal $fields_site_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$site         = db_fetch_row_prepared('SELECT * FROM sites WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('Site [edit: %s]', $site['name']);\n\t} else {\n\t\t$header_label = __('Site [new]');\n\t}\n\n\tform_start('sites.php', 'site');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_site_edit, (isset($site) ? $site : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('sites.php', 'return');\n}\n\nfunction sites() {\n\tglobal $actions, $item_rows, $config;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Sites'), 'sites.php', 'form_site', 'sess_site', 'sites.php?action=edit');\n\n\t$pageFilter->rows_label = __('Sites');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql = \"SELECT COUNT(*) FROM sites $sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, array(), 'site');\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$site_list = db_fetch_assoc(\"SELECT sites.*, count(h.id) AS hosts\n\t\tFROM sites\n\t\tLEFT JOIN host AS h\n\t\tON h.site_id=sites.id\n\t\t$sql_where\n\t\tGROUP BY sites.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('sites.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Sites'), 'page', 'main');\n\n\tform_start('sites.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Site Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Site.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The unique id associated with this Site.')\n\t\t),\n\t\t'disabled' => array(\n\t\t\t'display' => __('Monitoring State'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The state of this Site.')\n\t\t),\n\t\t'hosts' => array(\n\t\t\t'display' => __('Devices'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The number of Devices associated with this Site.')\n\t\t),\n\t\t'city' => array(\n\t\t\t'display' => __('City'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The City associated with this Site.')\n\t\t),\n\t\t'state' => array(\n\t\t\t'display' => __('State'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The State associated with this Site.')\n\t\t),\n\t\t'country' => array(\n\t\t\t'display' => __('Country'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The Country associated with this Site.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($site_list)) {\n\t\tforeach ($site_list as $site) {\n\t\t\t$devices_url = CACTI_PATH_URL . 'host.php?reset=1&site_id=' . $site['id'];\n\n\t\t\tform_alternate_row('line' . $site['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($site['name'], get_request_var('filter'), 'sites.php?action=edit&id=' . $site['id']), $site['id']);\n\t\t\tform_selectable_cell($site['id'], $site['id'], '', 'right');\n\t\t\tform_selectable_cell($site['disabled'] == 'on' ? __('Disabled'):__('Enabled'), $site['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($site['hosts'], '-1'), '', $devices_url), $site['id'], '', 'right');\n\t\t\tform_selectable_ecell($site['city'], $site['id'], '', 'left');\n\t\t\tform_selectable_ecell($site['state'], $site['id'], '', 'left');\n\t\t\tform_selectable_ecell($site['country'], $site['id'], '', 'left');\n\t\t\tform_checkbox_cell($site['name'], $site['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Sites Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($site_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        },
        {
          "name": "snmpagent_mibcache.php",
          "type": "blob",
          "size": 2.5,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* let's report all errors */\nerror_reporting(E_ALL);\n\nrequire(__DIR__ . '/include/cli_check.php');\n\n/* allow the script to hang around. */\nset_time_limit(0);\n\nchdir(__DIR__);\n\n$path_mibcache      = CACTI_PATH_CACHE. '/mibcache/mibcache.tmp';\n$path_mibcache_lock = CACTI_PATH_CACHE. '/mibcache/mibcache.lock';\n\n/* remove temporary cache */\nif (file_exists($path_mibcache) && is_writable($path_mibcache)) {\n\tunlink($path_mibcache);\n}\n\n/* remove lock file */\nif (file_exists($path_mibcache_lock) && is_writable($path_mibcache_lock)) {\n\tunlink($path_mibcache_lock);\n}\n\n/* start background caching process if not running */\n$php        = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n$extra_args = ' ' . cacti_escapeshellarg('./snmpagent_mibcachechild.php');\n\nwhile(true) {\n\tif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\n\t\tpopen('start \"CactiSNMPCacheChild\" /I ' . $php . ' ' . $extra_args, 'r');\n\t} else {\n\t\texec($php . ' ' . $extra_args . ' > /dev/null &');\n\t}\n\n\tsleep(30 - time() % 30);\n}\n"
        },
        {
          "name": "snmpagent_mibcachechild.php",
          "type": "blob",
          "size": 3.6455078125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nrequire(__DIR__ . '/include/cli_check.php');\n\n/* let's report all errors */\nerror_reporting(E_ALL);\n\n/* allow the script to hang around. */\nset_time_limit(0);\n\nchdir(__DIR__);\n\n$last_time = time() - 30;\n$cache     = array();\n\n$path_mibcache      = CACTI_PATH_CACHE. '/mibcache/mibcache.tmp';\n$path_mibcache_lock = CACTI_PATH_CACHE. '/mibcache/mibcache.lock';\n\n/* check mib cache table status */\n$mibcache_changed = db_fetch_cell_prepared(\"SHOW TABLE STATUS\n\tWHERE `Name` LIKE 'snmpagent_cache'\n\tAND (UNIX_TIMESTAMP(`Update_time`)) >= ?\",\n\tarray($last_time));\n\nif ($mibcache_changed !== null || file_exists($path_mibcache) === false) {\n\t$objects = db_fetch_assoc('SELECT `oid`, LOWER(type) as type, `otype`, `max-access`, `value`\n\t\tFROM snmpagent_cache');\n\n\tif (cacti_sizeof($objects)) {\n\t\t$oids = array();\n\n\t\tforeach ($objects as &$object) {\n\t\t\t$oids[] = $object['oid'];\n\n\t\t\t$object = ($object['otype'] == 'DATA' && $object['max-access'] != 'not-accessible') ? array('type' => $object['type'], 'value' => $object['value']) : false;\n\t\t}\n\n\t\t/* natural sorting with MySQL is not available - especially not for OIDs */\n\t\tnatsort($oids);\n\n\t\t$last_accessible_object          = false;\n\t\t$next_accessible_object_required = array();\n\n\t\tforeach ($oids as $key => $oid) {\n\t\t\tif ($objects[$key]) {\n\t\t\t\tif ($last_accessible_object) {\n\t\t\t\t\t$cache[$last_accessible_object]['next'] = $oid;\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($next_accessible_object_required) > 0) {\n\t\t\t\t\tforeach ($next_accessible_object_required as $next_accessible_object_required_oid) {\n\t\t\t\t\t\t$cache[$next_accessible_object_required_oid]['next'] = $oid;\n\t\t\t\t\t}\n\n\t\t\t\t\t$next_accessible_object_required = array();\n\t\t\t\t}\n\n\t\t\t\t$last_accessible_object = $oid;\n\t\t\t} else {\n\t\t\t\t$next_accessible_object_required[] = $oid;\n\t\t\t}\n\n\t\t\t$cache[$oid] = $objects[$key];\n\t\t}\n\t}\n\n\t/* create lock file */\n\t$lock = fopen($path_mibcache_lock, 'w');\n\n\t/* Note: If SNMPAgent plugin has been disabled the cache will be truncated automatically */\n\tif (cacti_sizeof($cache)) {\n\t\tfile_put_contents($path_mibcache, '<?php $cache = ' . var_export($cache, true) . ';', LOCK_EX);\n\t}\n\n\t/* destroy lock file */\n\tfclose($lock);\n\tunlink($path_mibcache_lock);\n}\n\nreturn;\n"
        },
        {
          "name": "snmpagent_persist.php",
          "type": "blob",
          "size": 6.93359375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* let's report all errors */\nerror_reporting(E_ALL);\n\nrequire(__DIR__ . '/include/cli_check.php');\n\n/* allow the script to hang around waiting for connections. */\nset_time_limit(0);\nchdir(__DIR__);\n\n/* translate well-known textual conventions and SNMP base types to net-snmp */\n$smi_base_datatypes = array(\n\t'integer'           => 'INTEGER',\n\t'integer32'         => 'Integer32',\n\t'unsigned32'        => 'Unsigned32',\n\t'gauge'             => 'Gauge',\n\t'gauge32'           => 'Gauge32',\n\t'counter'           => 'Counter',\n\t'counter32'         => 'Counter32',\n\t'counter64'         => 'Counter64',\n\t'timeticks'         => 'TimeTicks',\n\t'octet string'      => 'OCTET STRING',\n\t'opaque'            => 'Opaque',\n\t'object identifier' => 'OBJECT IDENTIFIER',\n\t'ipaddress'         => 'IpAddress',\n\t'networkaddress'    => 'IpAddress',\n\t'bits'              => 'OCTET STRING',\n\t'displaystring'     => 'STRING',\n\t'physaddress'       => 'OCTET STRING',\n\t'macaddress'        => 'OCTET STRING',\n\t'truthvalue'        => 'INTEGER',\n\t'testandincr'       => 'Integer32',\n\t'autonomoustype'    => 'OBJECT IDENTIFIER',\n\t'variablepointer'   => 'OBJECT IDENTIFIER',\n\t'rowpointer'        => 'OBJECT IDENTIFIER',\n\t'rowstatus'         => 'INTEGER',\n\t'timestamp'         => 'TimeTicks',\n\t'timeinterval'      => 'Integer32',\n\t'dateandtime'       => 'STRING',\n\t'storagetype'       => 'INTEGER',\n\t'tdomain'           => 'OBJECT IDENTIFIER',\n\t'taddress'          => 'OCTET STRING'\n);\n\n$data = false;\n$eol = \"\\n\";\n$cache = array();\n$cache_last_refresh = false;\n\n/* process command line options */\nget_options();\n\n/* start background caching process if not running */\n$php            = cacti_escapeshellcmd(read_config_option('path_php_binary'));\n$extra_args     = '-q ' . cacti_escapeshellarg('./snmpagent_mibcache.php');\n\nif (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {\n\t/* windows part missing */\n\tpclose(popen('start \"CactiSNMPCache\" /I /B ' . $php . ' ' . $extra_args, 'r'));\n} else {\n\texec('ps -ef | grep -v grep | grep -v \"sh -c\" | grep snmpagent_mibcache.php', $output);\n\n\tif (!cacti_sizeof($output)) {\n\t\texec($php . ' ' . $extra_args . ' > /dev/null &');\n\t}\n}\n\n/* activate circular reference collector */\ngc_enable();\n\nwhile (true) {\n\t$input = trim(fgets(STDIN));\n\n\tswitch($input) {\n\t\tcase '':\n\t\t\texit(0);\n\t\tcase 'PING':\n\t\t\tfwrite(STDOUT, 'PONG' . $eol);\n\t\t\tcache_refresh();\n\n\t\t\tbreak;\n\t\tcase 'get':\n\t\t\t$oid = trim(fgets(STDIN));\n\n\t\t\tif ($data = cache_read($oid)) {\n\t\t\t\tfwrite(STDOUT, $oid . $eol . (isset($smi_base_datatypes[$data['type']]) ? $smi_base_datatypes[$data['type']] : 'INTEGER') . $eol . $data['value'] . $eol);\n\t\t\t} else {\n\t\t\t\tfwrite(STDOUT, 'NONE' . $eol);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'getnext':\n\t\t\t$oid = trim(fgets(STDIN));\n\n\t\t\tif ($next_oid = cache_get_next($oid)) {\n\t\t\t\tif ($data = cache_read($next_oid)) {\n\t\t\t\t\tfwrite(STDOUT, $next_oid . $eol . (isset($smi_base_datatypes[$data['type']]) ? $smi_base_datatypes[$data['type']] : 'INTEGER') . $eol . $data['value'] . $eol);\n\t\t\t\t} else {\n\t\t\t\t\tfwrite(STDOUT, 'NONE' . $eol);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfwrite(STDOUT, 'NONE' . $eol);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'debug':\n\t\t\tfwrite(STDOUT, print_r($cache, true));\n\n\t\t\tbreak;\n\t\tcase 'shutdown':\n\t\t\tfwrite(STDOUT, 'BYE' . $eol);\n\n\t\t\texit(0);\n\t}\n}\n\nfunction cache_read($oid) {\n\tglobal $cache;\n\n\treturn (isset($cache[$oid]) && $cache[$oid]) ? $cache[$oid] : false;\n}\n\nfunction cache_get_next($oid) {\n\tglobal $cache;\n\n\treturn (isset($cache[$oid]['next'])) ? $cache[$oid]['next'] : false;\n}\n\nfunction cache_refresh() {\n\tglobal $config, $cache, $cache_last_refresh;\n\n\t$path_mibcache      = CACTI_PATH_CACHE. '/mibcache/mibcache.tmp';\n\t$path_mibcache_lock = CACTI_PATH_CACHE. '/mibcache/mibcache.lock';\n\n\t/* check temporary cache file */\n\tclearstatcache();\n\t$cache_refresh_time = @filemtime($path_mibcache);\n\n\tif ($cache_refresh_time !== false) {\n\t\t/* initial phase */\n\t\tif ($cache_last_refresh === false || $cache_refresh_time > $cache_last_refresh) {\n\t\t\twhile (is_file($path_mibcache_lock) !== false) {\n\t\t\t\tsleep(1);\n\t\t\t\tclearstatcache();\n\t\t\t}\n\n\t\t\t$cache = null;\n\n\t\t\tgc_collect_cycles();\n\n\t\t\t$cache_last_refresh = $cache_refresh_time;\n\n\t\t\tinclude($path_mibcache);\n\t\t}\n\t}\n\n\treturn;\n}\n\nfunction get_options() {\n\t$parms = $_SERVER['argv'];\n\tarray_shift($parms);\n\n\t$options = array();\n\n\tif (sizeof($parms)) {\n\t\t$shortopts = 'VvHh';\n\n\t\t$longopts = array(\n\t\t\t'foreground',\n\t\t\t'debug',\n\t\t\t'version',\n\t\t\t'help'\n\t\t);\n\n\t\t$options = getopt($shortopts, $longopts);\n\n\t\tforeach ($options as $arg => $value) {\n\t\t\tswitch($arg) {\n\t\t\t\tcase 'foreground':\n\t\t\t\tcase 'debug':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'version':\n\t\t\t\tcase 'V':\n\t\t\t\tcase 'v':\n\t\t\t\t\tdisplay_version();\n\n\t\t\t\t\texit(0);\n\t\t\t\tcase 'help':\n\t\t\t\tcase 'H':\n\t\t\t\tcase 'h':\n\t\t\t\t\tdisplay_help();\n\n\t\t\t\t\texit(0);\n\n\t\t\t\tdefault:\n\t\t\t\t\tprint \"ERROR: Invalid Argument: ($arg)\" . PHP_EOL . PHP_EOL;\n\t\t\t\t\tdisplay_help();\n\n\t\t\t\t\texit(1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $options;\n}\n\nfunction display_version() {\n\tglobal $config;\n\n\t$version = get_cacti_cli_version();\n\tprint 'The Cacti SNMP Agent Daemon, Version ' . $version . ', ' . COPYRIGHT_YEARS . PHP_EOL;\n}\n\n/*\tdisplay_help - displays the usage of the function */\nfunction display_help() {\n\tdisplay_version();\n\n\tprint PHP_EOL . 'usage: snmpagenet_persist.php' . PHP_EOL . PHP_EOL;\n\tprint 'Daemon for the Cacti SNMP Agent.  Launch this daemon using' . PHP_EOL;\n\tprint 'systemctl to allow Cacti to respond to SNMP requests from' . PHP_EOL;\n\tprint 'upstream montiring systems.  This is a persistent daemon,' . PHP_EOL;\n\tprint 'so care must be taken in systemd to define it as such.' . PHP_EOL . PHP_EOL;\n}\n"
        },
        {
          "name": "spikekill.php",
          "type": "blob",
          "size": 3.91015625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once(CACTI_PATH_LIBRARY . '/spikekill.php');\n\n$debug = false;\n\nif (isset_request_var('method')) {\n\tswitch(get_nfilter_request_var('method')) {\n\t\tcase 'stddev':\n\t\tcase 'variance':\n\t\tcase 'fill':\n\t\tcase 'float':\n\t\tcase 'absolute':\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tprint __(\"FATAL: Spike Kill method '%s' is Invalid\", html_escape(get_nfilter_request_var('method'))) . PHP_EOL;\n\n\t\t\texit(1);\n\n\t\t\tbreak;\n\t}\n}\n\nif (is_realm_allowed(1043)) {\n\t$local_data_ids = db_fetch_assoc_prepared('SELECT DISTINCT data_template_rrd.local_data_id\n\t\tFROM graph_templates_item\n\t\tLEFT JOIN data_template_rrd\n\t\tON graph_templates_item.task_item_id=data_template_rrd.id\n\t\tWHERE graph_templates_item.local_graph_id = ?',\n\t\tarray(get_filter_request_var('local_graph_id')));\n\n\t$results = '';\n\n\tif (cacti_sizeof($local_data_ids)) {\n\t\tforeach ($local_data_ids as $local_data_id) {\n\t\t\t$data_source_path = get_data_source_path($local_data_id['local_data_id'], true);\n\n\t\t\tif ($data_source_path != '') {\n\t\t\t\t$html      = true;\n\t\t\t\t$dryrun    = false;\n\t\t\t\t$out_start = '';\n\t\t\t\t$out_end   = '';\n\t\t\t\t$avgnan    = '';\n\t\t\t\t$method    = '';\n\t\t\t\t$rrdfile   = $data_source_path;\n\n\t\t\t\tif (isset_request_var('dryrun')) {\n\t\t\t\t\t$dryrun = true;\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('method')) {\n\t\t\t\t\t$method = get_nfilter_request_var('method');\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('avgnan')) {\n\t\t\t\t\t$avgnan = get_nfilter_request_var('avgnan');\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('outlier-start')) {\n\t\t\t\t\t$out_start = get_nfilter_request_var('outlier-start');\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('outlier-end')) {\n\t\t\t\t\t$out_end = get_nfilter_request_var('outlier-end');\n\t\t\t\t}\n\n\t\t\t\t$spiker = new spikekill($rrdfile, $method, $avgnan, '', $out_start, $out_end);\n\n\t\t\t\t$spiker->dryrun = $dryrun;\n\t\t\t\t$spiker->html   = $html;\n\n\t\t\t\t$result = $spiker->remove_spikes();\n\n\t\t\t\tif ($debug) {\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\tcacti_log(\"ERROR: SpikeKill failed for $rrdfile.  Message is \" . $spiker->get_errors(), false, 'SPIKEKILL');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacti_log(\"NOTICE: SpikeKill succeeded for $rrdfile.  Message is \" . $spiker->get_output(), false, 'SPIKEKILL');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!$result) {\n\t\t\t\t\t\t$results = $spiker->get_errors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$results = $spiker->get_output();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprint json_encode(array('local_graph_id' => get_request_var('local_graph_id'), 'results' => $results));\n} else {\n\tprint __('FATAL: Spike Kill Not Allowed') . PHP_EOL;\n}\n"
        },
        {
          "name": "src-check",
          "type": "blob",
          "size": 1.6220703125,
          "content": "#!/usr/bin/env bash\n#+-------------------------------------------------------------------------+\n#| Copyright (C) 2004-2023 The Cacti Group                                 |\n#|                                                                         |\n#| This program is free software; you can redistribute it and/or           |\n#| modify it under the terms of the GNU General Public License             |\n#| as published by the Free Software Foundation; either version 2          |\n#| of the License, or (at your option) any later version.                  |\n#|                                                                         |\n#| This program is distributed in the hope that it will be useful,         |\n#| but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n#| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n#| GNU General Public License for more details.                            |\n#+-------------------------------------------------------------------------+\n#| Cacti: The Complete RRDtool-based Graphing Solution                     |\n#+-------------------------------------------------------------------------+\n#| This code is designed, written, and maintained by the Cacti Group. See  |\n#| about.php and/or the AUTHORS file for specific developer information.   |\n#+-------------------------------------------------------------------------+\n#| http://www.cacti.net/                                                   |\n#+-------------------------------------------------------------------------+\n\nSCRIPTPATH=\"$( cd \"$(dirname \"$0\")\" ; pwd -P )\"\ncd \"${SCRIPTPATH}\"\n\n./src-fixer --diff --dry-run $@\n"
        },
        {
          "name": "src-fixer",
          "type": "blob",
          "size": 1.791015625,
          "content": "#!/usr/bin/env bash\n#+-------------------------------------------------------------------------+\n#| Copyright (C) 2004-2023 The Cacti Group                                 |\n#|                                                                         |\n#| This program is free software; you can redistribute it and/or           |\n#| modify it under the terms of the GNU General Public License             |\n#| as published by the Free Software Foundation; either version 2          |\n#| of the License, or (at your option) any later version.                  |\n#|                                                                         |\n#| This program is distributed in the hope that it will be useful,         |\n#| but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n#| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n#| GNU General Public License for more details.                            |\n#+-------------------------------------------------------------------------+\n#| Cacti: The Complete RRDtool-based Graphing Solution                     |\n#+-------------------------------------------------------------------------+\n#| This code is designed, written, and maintained by the Cacti Group. See  |\n#| about.php and/or the AUTHORS file for specific developer information.   |\n#+-------------------------------------------------------------------------+\n#| http://www.cacti.net/                                                   |\n#+-------------------------------------------------------------------------+\n\nSCRIPTPATH=\"$( cd \"$(dirname \"$0\")\" ; pwd -P )\"\ncd \"${SCRIPTPATH}\"\n\nANSI=--no-ansi\nVERBOSE=\nif [ -t 1 ]; then\n\tif [[ -z $RUNNER_OS ]]; then\n\t\tANSI=\n\t\tVERBOSE=--verbose\n\tfi\nfi;\necho vendor/bin/php-cs-fixer fix $VERBOSE $ANSI $@\nvendor/bin/php-cs-fixer fix $VERBOSE $ANSI $@\n"
        },
        {
          "name": "src-lint",
          "type": "blob",
          "size": 1.623046875,
          "content": "#!/usr/bin/env bash\n#+-------------------------------------------------------------------------+\n#| Copyright (C) 2004-2023 The Cacti Group                                 |\n#|                                                                         |\n#| This program is free software; you can redistribute it and/or           |\n#| modify it under the terms of the GNU General Public License             |\n#| as published by the Free Software Foundation; either version 2          |\n#| of the License, or (at your option) any later version.                  |\n#|                                                                         |\n#| This program is distributed in the hope that it will be useful,         |\n#| but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n#| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n#| GNU General Public License for more details.                            |\n#+-------------------------------------------------------------------------+\n#| Cacti: The Complete RRDtool-based Graphing Solution                     |\n#+-------------------------------------------------------------------------+\n#| This code is designed, written, and maintained by the Cacti Group. See  |\n#| about.php and/or the AUTHORS file for specific developer information.   |\n#+-------------------------------------------------------------------------+\n#| http://www.cacti.net/                                                   |\n#+-------------------------------------------------------------------------+\n\nSCRIPTPATH=\"$( cd \"$(dirname \"$0\")\" ; pwd -P )\"\ncd \"${SCRIPTPATH}\"\n\nvendor/bin/phplint --no-cache $@\n"
        },
        {
          "name": "support.php",
          "type": "blob",
          "size": 54.8857421875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/boost.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nswitch(get_request_var('action')) {\n\tcase 'lockout':\n\t\tsupport_lockout();\n\n\t\tbreak;\n\tdefault:\n\t\tsupport_view_tech();\n}\n\nfunction support_lockout() {\n\t$admin = read_config_option('admin_user', true);\n\n\tif (read_config_option('admin_user') != $_SESSION[SESS_USER_ID]) {\n\t\traise_message('lockout_user', __('Only the Primary Cacti Administrator \\'%s\\' can lockout the Cacti system.', get_username($admin)), MESSAGE_LEVEL_ERROR);\n\t} else {\n\t\t$status = read_config_option('cacti_lockout_status', true);\n\n\t\tif ($status == '') {\n\t\t\traise_message('lockout', __('Cacti has been locked out by \\'%s\\'.  Press the button again after Cacti maintenance is over.', get_username($admin)), MESSAGE_LEVEL_WARN);\n\t\t\tcacti_log('WARNING: Cacti has been locked out by the primary administrator!');\n\t\t\tset_config_option('cacti_lockout_status', json_encode(array('session' => session_id(), 'time' => time())));\n\t\t} else {\n\t\t\traise_message('lockout', __('Cacti maintenance lockout has been cleared by \\'%s\\'.  Press the button again after Cacti maintenance is over.', get_username($admin)), MESSAGE_LEVEL_INFO);\n\t\t\tcacti_log('WARNING: Cacti maintenance lockout has been cleared by the primary administrator!');\n\t\t\tset_config_option('cacti_lockout_status', '');\n\t\t}\n\t}\n\n\theader('Location: support.php?tab=summary');\n\n\texit;\n}\n\nfunction support_view_tech() {\n\tglobal $database_hostname, $poller_options, $input_types, $local_db_cnn_id;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'summary' => array(\n\t\t\t'display' => __('Summary'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'database' => array(\n\t\t\t'display' => __('Database Tables'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'dbsettings' => array(\n\t\t\t'display' => __('Database Settings'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'dbstatus' => array(\n\t\t\t'display' => __('Database Status'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'dbperms' => array(\n\t\t\t'display' => __('Database Permissions'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'processes' => array(\n\t\t\t'display' => __('Database Queries'),\n\t\t\t'header'  => false\n\t\t),\n\t\t'background' => array(\n\t\t\t'display' => __('Background Processes'),\n\t\t\t'header'  => false\n\t\t),\n\t\t'poller' => array(\n\t\t\t'display' => __('Poller Stats'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'phpinfo' => array(\n\t\t\t'display' => __('PHP Info'),\n\t\t\t'header'  => true\n\t\t),\n\t\t'changelog' => array(\n\t\t\t'display' => __('ChangeLog'),\n\t\t\t'header'  => true\n\t\t),\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_ts_tabs', 'summary');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t/* the processes and background will set their own timeouts */\n\t$page = 'support.php?tab=' . $current_tab;\n\n\tif ($current_tab != 'processes' && $current_tab != 'background') {\n\t\t$refresh = array(\n\t\t\t'seconds' => 999999,\n\t\t\t'page'    => $page,\n\t\t\t'logout'  => 'false'\n\t\t);\n\n\t\tset_page_refresh($refresh);\n\t}\n\n\t$header_label = __esc('Technical Support [ %s ]', $tabs[$current_tab]['display']);\n\n\ttop_header();\n\n\tif (cacti_sizeof($tabs)) {\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach ($tabs as $id => $name) {\n\t\t\tprint \"<li class='subTab'><a class='tab pic \" . ($id == $current_tab ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape(CACTI_PATH_URL .\n\t\t\t\t'support.php?' .\n\t\t\t\t'tab=' . $id) .\n\t\t\t\t\"'>\" . $name['display'] . '</a></li>';\n\t\t}\n\n\t\tapi_plugin_hook('utilities_tab');\n\n\t\tprint '</ul></nav></div>';\n\t}\n\n\t/* Display tech information */\n\tif (!isset($tabs[$current_tab]['header']) || $tabs[$current_tab]['header'] === true) {\n\t\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\t}\n\n\tswitch (get_request_var('tab')) {\n\t\tcase 'summary':\n\t\t\tshow_tech_summary();\n\t\t\tbreak;\n\t\tcase 'dbstatus':\n\t\t\tshow_database_status();\n\t\t\tbreak;\n\t\tcase 'dbperms':\n\t\t\tshow_database_permissions();\n\t\t\tbreak;\n\t\tcase 'dbsettings':\n\t\t\tshow_database_settings();\n\t\t\tbreak;\n\t\tcase 'changelog':\n\t\t\tshow_cacti_changelog();\n\t\t\tbreak;\n\t\tcase 'database':\n\t\t\tshow_database_tables();\n\t\t\tbreak;\n\t\tcase 'poller':\n\t\t\tshow_cacti_poller();\n\t\t\tbreak;\n\t\tcase 'phpinfo':\n\t\t\tshow_php_modules();\n\t\t\tbreak;\n\t\tcase 'processes':\n\t\t\tshow_database_processes();\n\t\t\tbreak;\n\t\tcase 'background':\n\t\t\tshow_cacti_processes();\n\t\t\tbreak;\n\t}\n\n\tif (!isset($tabs[$current_tab]['header']) || $tabs[$current_tab]['header'] === true) {\n\t\thtml_end_box();\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#tables').tablesorter({\n\t\t\twidgets: ['zebra'],\n\t\t\twidgetZebra: { css: ['even', 'odd'] },\n\t\t\theaderTemplate: '<div class=\"textSubHeaderDark\">{content} {icon}</div>',\n\t\t\tcssIconAsc: 'fa-sort-up',\n\t\t\tcssIconDesc: 'fa-sort-down',\n\t\t\tcssIconNone: 'fa-sort',\n\t\t\tcssIcon: 'fa'\n\t\t});\n\n\t\t$('#lockout').click(function() {\n\t\t\tloadUrl({ url: 'support.php?action=lockout' });\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tbottom_footer();\n}\n\nfunction create_database_process_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$refresh = array(\n\t\t1  => __esc('%d Seconds', 1),\n\t\t3  => __esc('%d Seconds', 3),\n\t\t5  => __esc('%d Seconds', 5),\n\t\t10 => __esc('%d Seconds', 10),\n\t\t15 => __esc('%d Seconds', 15),\n\t\t20 => __esc('%d Seconds', 20)\n\t);\n\n\t$pollers = array(\n\t\t'0' => __('No'),\n\t\t'1' => __('Yes')\n\t);\n\n\t$chars = array(\n\t\t150  => __esc('%d Chars', 150),\n\t\t180  => __esc('%d Chars', 180),\n\t\t300  => __esc('%d Chars', 300),\n\t\t500  => __esc('%d Chars', 500),\n\t\t1000 => __esc('%d Chars', 1000),\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'refresh' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Refresh'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '5',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $refresh,\n\t\t\t\t\t'value'         => '5'\n\t\t\t\t),\n\t\t\t\t'poller' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Include Poller'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '0',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $pollers,\n\t\t\t\t\t'value'          => '0'\n\t\t\t\t),\n\t\t\t\t'length' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Template'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '180',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $chars,\n\t\t\t\t\t'value'          => '180'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Queries'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'runtime',\n\t\t\t'sort_direction' => 'DESC'\n\t\t),\n\t\t'javascript' => array(\n\t\t\t'ready' => \"$('#refresh').click(function() { clearTimeout(myRefresh); });\"\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_database_process_filter($render = false) {\n\t$filters = create_database_process_filter();\n\n\t$header = __('Technical Support [ Database Queries ]');\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'support.php?tab=processes', 'form_db_stats', 'sess_ts_proc');\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction show_database_processes() {\n\tglobal $item_rows;\n\n\tprocess_sanitize_draw_database_process_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = 'WHERE info NOT LIKE \"%FROM processlist%\" AND info != \"NULL\"';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(command LIKE ? OR info LIKE ?';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('poller') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'info NOT LIKE \"%poller_output%\" AND ' .\n\t\t\t'info NOT LIKE \"%poller_item%\" AND info NOT LIKE \"%SQL_NO_CACHE%\"';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM information_schema.processlist\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t$info_len  = get_request_var('length');\n\n\t$processes = db_fetch_assoc_prepared(\"SELECT id, query_id, user, state, ROUND(time_ms/1000,2) AS runtime, LENGTH(info) AS query_len,\n\t\tSUBSTRING(REPLACE(REPLACE(REPLACE(info, '\\n', ' '), ',', ', '), '\\t', ' '), 1, $info_len) AS info\n\t\tFROM information_schema.processlist\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'id' => array(\n\t\t\t'display' => __('Process ID'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Connection ID of the running process.')\n\t\t),\n\t\t'query_id' => array(\n\t\t\t'display' => __('Query ID'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Query ID of the currently running Query.')\n\t\t),\n\t\t'user' => array(\n\t\t\t'display' => __('User'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The MariaDB/MySQL user currently running the Query.')\n\t\t),\n\t\t'runtime' => array(\n\t\t\t'display' => __('Run Time'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The Runtime of the current query in seconds.')\n\t\t),\n\t\t'query_len' => array(\n\t\t\t'display' => __('Query Length'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The total string length of the Query.')\n\t\t),\n\t\t'state' => array(\n\t\t\t'display' => __('Query State'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The MariaDB/MySQL process state.')\n\t\t),\n\t\t'info' => array(\n\t\t\t'display' => __('Query Details'),\n\t\t\t'align'   => 'left',\n\t\t\t'tip'     => __('The Query Details for the current query upto a maximum string length.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('support.php?tab=processes', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Queries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'support.php?tab=processes', 'main');\n\n\tif (cacti_sizeof($processes)) {\n\t\tforeach ($processes as $p) {\n\t\t\tform_alternate_row('line' . $p['id'], false);\n\n\t\t\tform_selectable_cell($p['id'], $p['id']);\n\t\t\tform_selectable_cell($p['query_id'], $p['id']);\n\t\t\tform_selectable_ecell($p['user'], $p['id']);\n\t\t\tform_selectable_cell(number_format_i18n($p['runtime'], 2), $p['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($p['query_len']), $p['id'], '', 'right');\n\t\t\tform_selectable_ecell($p['state'], $p['id'], '', 'center');\n\t\t\tform_selectable_ecell($p['info'], $p['id'], '', 'white-space:pre-wrap');\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Database Queries Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($processes)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction create_cacti_process_filter($tables) {\n\tglobal $item_rows;\n\n\t$all  = array('all' => __('All'));\n\n\t$refresh = array(\n\t\t1  => __esc('%d Seconds', 1),\n\t\t3  => __esc('%d Seconds', 3),\n\t\t5  => __esc('%d Seconds', 5),\n\t\t10 => __esc('%d Seconds', 10),\n\t\t15 => __esc('%d Seconds', 15),\n\t\t20 => __esc('%d Seconds', 20)\n\t);\n\n\t$tables = $all + $tables;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'tasks' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Task Type'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => 'all',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $tables,\n\t\t\t\t\t'value'          => 'all'\n\t\t\t\t),\n\t\t\t\t'refresh' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Refresh'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '5',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $refresh,\n\t\t\t\t\t'value'         => '5'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Processes'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'runtime',\n\t\t\t'sort_direction' => 'DESC'\n\t\t),\n\t\t'javascript' => array(\n\t\t\t'ready' => \"$('#refresh').click(function() { clearTimeout(myRefresh); });\"\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_cacti_process_filter($render = false, $tables = array()) {\n\t$filters = create_cacti_process_filter($tables);\n\n\t$header = __('Technical Support [ Background Processes ]');\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'support.php?tab=background', 'form_cacti_procs', 'sess_ts_bg');\n\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction show_cacti_processes() {\n\tglobal $item_rows;\n\n\t/* the full set of process tables known to Cacti */\n\t$tables = array(\n\t\t'poller_time'                   => __('Cacti Poller'),          // Core Cacti poller table\n\t\t'processes'                     => __('Cacti Process'),         // Cacti process table\n\t\t'grid_processes'                => __('RTM Process'),           // RTM process table\n\t\t'automation_processes'          => __('Automation Process'),    // Automation process table\n\t\t'plugin_hmib_processes'         => __('HMIB Process'),          // HMIB process table\n\t\t'plugin_microtik_processes'     => __('MikroTik Process'),      // Mikrotik process table\n\t\t'plugin_webseer_processes'      => __('WebSeer Process'),       // WebSeer process table\n\t\t'plugin_servcheck_processes'    => __('Service Check Process'), // Service Check process table\n\t\t'mac_track_processes'           => __('MacTrack Process'),      // WebSeer process table\n\t);\n\n\t/* reduce the set of tables based if they exist */\n\tforeach($tables as $table => $name) {\n\t\tif (!db_table_exists($table)) {\n\t\t\tunset($tables[$table]);\n\t\t}\n\t}\n\n\tprocess_sanitize_draw_cacti_process_filter(true, $tables);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$poller_interval = read_config_option('poller_interval');\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t'(taskname LIKE ? OR tasktype LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('tasks') != 'all') {\n\t\t$tables = array(\n\t\t\tget_request_var('tasks') => $tables[get_request_var('tasks')]\n\t\t);\n\t}\n\n\t$total_rows_sql = 'SELECT COUNT(*) FROM (';\n\t$sql_inner      = '';\n\n\tforeach($tables as $table => $name) {\n\t\tswitch($table) {\n\t\t\tcase 'poller_time':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '\" . __('Cacti Poller') . \"' AS tasktype,\n\t\t\t\t\t\tCONCAT('PollerID:', poller_id) AS taskname,\n\t\t\t\t\t\tid AS taskid, '$poller_interval' AS timeout,\n\t\t\t\t\t\tstart_time AS started,\n\t\t\t\t\t\tstart_time AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(start_time) AS runtime\n\t\t\t\t\t\tFROM poller_time WHERE end_time = '0000-00-00'\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, CONCAT('$name (', tasktype, ')') AS tasktype,\n\t\t\t\t\t\ttaskname, taskid, timeout,\n\t\t\t\t\t\tstarted, last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(started) AS runtime\n\t\t\t\t\t\tFROM processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'grid_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t\ttaskname, taskid, 'N/A' AS timeout,\n\t\t\t\t\t\t'-' AS started, heartbeat AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(last_updated) AS runtime\n\t\t\t\t\t\tFROM grid_processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'automation_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t\tCONCAT('\" . __('Poller:') . \"', an.poller_id) AS taskname,\n\t\t\t\t\t\tnetwork_id AS taskid, 'N/A' AS timeout, an.last_started AS started, ap.heartbeat AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(an.last_started) AS runtime\n\t\t\t\t\t\tFROM automation_processes AS ap INNER JOIN automation_networks AS an ON an.id = ap.network_id\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'mac_track_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT process_id AS pid, '$name' AS tasktype,\n\t\t\t\t\t\tCONCAT('\" . __('Device:') . \"', device_id) AS taskname, device_id AS taskid, 'N/A' AS timeout,\n\t\t\t\t\t\tstart_date AS started, 'N/A' AS last_updated,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(start_date) AS runtime\n\t\t\t\t\t\tFROM mac_track_processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'plugin_hmib_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t\t'\" . __('Collector') . \"' AS taskname, taskid, 'N/A' AS timeout,\n\t\t\t\t\t\tstarted, 'N/A' AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(started) AS runtime\n\t\t\t\t\t\tFROM plugin_hmib_processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'plugin_microtik_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t'\" . __('Collector') . \"' AS taskname, taskid, 'N/A' AS timeout,\n\t\t\t\t\tstarted, 'N/A' AS last_update,\n\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(started) AS runtime\n\t\t\t\t\tFROM plugin_mikrotik_processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'plugin_webseer_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t\tCONCAT('\" . __('Poller:') . \"', poller_id) AS taskname, url_id AS taskid, 'N/A' AS timeout,\n\t\t\t\t\t\ttime AS started, 'N/A' AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(time) AS runtime\n\t\t\t\t\t\tFROM plugin_webseer_processes\";\n\n\t\t\t\tbreak;\n\t\t\tcase 'plugin_servcheck_processes':\n\t\t\t\t$sql_inner .= ($sql_inner != '' ? ' UNION ':'') .\n\t\t\t\t\t\"SELECT pid, '$name' AS tasktype,\n\t\t\t\t\t\tCONCAT('\" . __('Poller:') . \"', poller_id) AS taskname, test_id AS taskid, 'N/A' AS timeout,\n\t\t\t\t\t\ttime AS started, 'N/A' AS last_update,\n\t\t\t\t\t\tUNIX_TIMESTAMP() - UNIX_TIMESTAMP(time) AS runtime\n\t\t\t\t\t\tFROM plugin_servcheck_processes\";\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM ($sql_inner) AS rs\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$processes = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM ($sql_inner) AS rs\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'tasktype' => array(\n\t\t\t'display' => __('Task Type'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Type of Task.  Generally represents the plugin and task within the plugin.')\n\t\t),\n\t\t'taskname' => array(\n\t\t\t'display' => __('Task Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of the Task.')\n\t\t),\n\t\t'taskid' => array(\n\t\t\t'display' => __('Task ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The ID of the Task which is often times the LSF clusterid or the License Service ID, but can be other metrics as well.')\n\t\t),\n\t\t'runtime' => array(\n\t\t\t'display' => __('Run/Update Time'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The Process runtime or times since last heartbeat.')\n\t\t),\n\t\t'pid' => array(\n\t\t\t'display' => __('Process ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __('The Process ID for the task.')\n\t\t),\n\t\t'timeout' => array(\n\t\t\t'display' => __('Timeout'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The background process timeout in seconds when a Cacti process.  Otherwise controlled by the individual plugins.')\n\t\t),\n\t\t'started' => array(\n\t\t\t'display' => __('Start Time'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('Time the background process started for a Cacti process.  The start time may or may not be supported for various plugins.')\n\t\t),\n\t\t'last_update' => array(\n\t\t\t'display' => __('Last Updated'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('Time the process last registered its status to the status tables.')\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('support.php?tab=background', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Processes'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'support.php?tab=background', 'main');\n\n\tif (cacti_sizeof($processes)) {\n\t\tforeach ($processes as $p) {\n\t\t\tform_alternate_row('line' . $p['pid'], false);\n\n\t\t\tif ($p['timeout'] != 'N/A') {\n\t\t\t\t$timeout_time = $p['timeout'];\n\t\t\t\t$timeout_date = get_daysfromtime($timeout_time, true);\n\n\t\t\t\tif (strpos($timeout_date, 'y:') !== false) {\n\t\t\t\t\t$timeout_date = __('> 1 Year');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$timeout_date = $p['timeout'];\n\t\t\t}\n\n\t\t\tform_selectable_cell($p['tasktype'], $p['pid']);\n\t\t\tform_selectable_cell(filter_value(strtoupper($p['taskname']), ''), $p['pid']);\n\t\t\tform_selectable_cell($p['taskid'], $p['pid'], '', 'right');\n\t\t\tform_selectable_cell($p['runtime'], $p['pid'], '', 'right');\n\t\t\tform_selectable_cell($p['pid'], $p['pid'], '', 'right');\n\n\t\t\t//form_selectable_cell($p['timeout'], $p['pid'], '', 'right');\n\n\t\t\tform_selectable_cell($timeout_date, $p['pid'], '', 'right');\n\t\t\tform_selectable_cell($p['started'], $p['pid'], '', 'right');\n\t\t\tform_selectable_cell($p['last_update'], $p['pid'], '', 'right');\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text)) . \"'><em>\" . __('No Cacti or Plugin Background Processes Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($processes)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction show_php_modules() {\n\t$php_info = utilities_php_modules();\n\n\thtml_section_header(__('PHP Module Information'), 2);\n\t$php_info = str_replace(\n\t\tarray('width=\"600\"', 'th colspan=\"2\"', ','),\n\t\tarray('', 'th class=\"subHeaderColumn\"', ', '),\n\t\t$php_info\n\t);\n\tprint \"<tr><td colspan='2'>\" . $php_info . '</td></tr>';\n}\n\nfunction show_cacti_poller() {\n\tif (db_column_exists('sites', 'disabled')) {\n\t\t$sql_where = 'AND IFNULL(s.disabled, \"\") != \"on\"';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$problematic = db_fetch_assoc(\"SELECT h.id, h.description, h.polling_time, h.avg_time\n\t\tFROM host h\n\t\tLEFT JOIN sites s\n\t\tON s.id = h.site_id\n\t\tWHERE IFNULL(h.disabled, '') != 'on'\n\t\t$sql_where\n\t\tORDER BY polling_time DESC\n\t\tLIMIT 20\");\n\n\thtml_section_header(__('Worst 20 Polling Time Devices'), 2);\n\n\tform_alternate_row();\n\n\tprint \"<td colspan='2' class='left'>\";\n\n\tif (cacti_sizeof($problematic)) {\n\t\tprint \"<table id='tables' class='cactiTable'>\";\n\t\tprint '<thead>';\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Description')         . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('ID')                  . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Avg Polling Time')    . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Actual Polling Time') . '</th>';\n\t\tprint '</tr>';\n\t\tprint '</thead>';\n\n\t\tforeach ($problematic as $host) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . html_escape($host['description']) . '</td>';\n\t\t\tprint '<td class=\"right\">' . $host['id'] . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($host['avg_time'],3) . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($host['polling_time'],3) . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\n\t\tprint '</table>';\n\t} else {\n\t\tprint __('No host found');\n\t}\n\n\tprint '</td>';\n\n\tform_end_row();\n\n\t$problematic = db_fetch_assoc('SELECT h.id, h.description, h.failed_polls/h.total_polls AS ratio\n\t\tFROM host h\n\t\tLEFT JOIN sites s\n\t\tON h.site_id = s.id\n\t\tWHERE IFNULL(h.disabled,\"\") != \"on\"\n\t\tAND IFNULL(s.disabled,\"\") != \"on\"\n\t\tORDER BY ratio DESC\n\t\tLIMIT 20');\n\n\thtml_section_header(__('Worst 20 failed/total polls ratio'), 2);\n\n\tform_alternate_row();\n\tprint \"<td colspan='2' class='left'>\";\n\n\tif (cacti_sizeof($problematic)) {\n\t\tprint \"<table id='tables' class='cactiTable'>\";\n\t\tprint '<thead>';\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Description')        . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('ID')                 . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Failed/Total polls') . '</th>';\n\t\tprint '</tr>';\n\t\tprint '</thead>';\n\n\t\tforeach ($problematic as $host) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . $host['description'] . '</td>';\n\t\t\tprint '<td class=\"right\">' . $host['id'] . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($host['ratio'],3) . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\n\t\tprint '</table>';\n\t} else {\n\t\tprint __('No host found');\n\t}\n\n\tprint '</td>';\n\n\tform_end_row();\n}\n\nfunction show_database_tables() {\n\tglobal $local_db_cnn_id;\n\n\t/* Get table status */\n\tif (POLLER_ID == 1) {\n\t\t$tables = db_fetch_assoc('SELECT *\n\t\t\tFROM information_schema.tables\n\t\t\tWHERE table_schema = SCHEMA()');\n\t} else {\n\t\t$tables = db_fetch_assoc('SELECT *\n\t\t\tFROM information_schema.tables\n\t\t\tWHERE table_schema = SCHEMA()', false, $local_db_cnn_id);\n\t}\n\n\tform_alternate_row();\n\n\tprint \"\t\t<td colspan='2' class='left'>\";\n\n\tif (cacti_sizeof($tables)) {\n\t\tprint \"<table id='tables' class='cactiTable'>\";\n\t\tprint '<thead>';\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Name')           . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Engine')         . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Rows')           . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Avg Row Length') . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Data Length')    . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Index Length')   . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Collation')      . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Row Format')     . '</th>';\n\t\tprint \"  <th class='tableSubHeaderColumn'>\"       . __('Comment')        . '</th>';\n\t\tprint '</tr>';\n\t\tprint '</thead>';\n\n\t\tforeach ($tables as $table) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . $table['TABLE_NAME'] . '</td>';\n\t\t\tprint '<td>' . $table['ENGINE'] . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['TABLE_ROWS'], -1)     . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['AVG_ROW_LENGTH'], -1) . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['DATA_LENGTH'], -1)    . '</td>';\n\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['INDEX_LENGTH'], -1)   . '</td>';\n\t\t\tprint '<td>' . $table['TABLE_COLLATION'] . '</td>';\n\t\t\tprint '<td>' . $table['ROW_FORMAT']      . '</td>';\n\t\t\tprint '<td>' . $table['TABLE_COMMENT']   . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\n\t\tprint '</table>';\n\t} else {\n\t\tprint __('Unable to retrieve table status');\n\t}\n\n\tprint '</td>';\n\n\tform_end_row();\n}\n\nfunction show_cacti_changelog() {\n\t$changelog = file(CACTI_PATH_BASE . '/CHANGELOG');\n\n\tforeach ($changelog as $s) {\n\t\tif (trim($s) == '') {\n\t\t\tcontinue;\n\t\t} elseif (strlen(trim($s)) && stripos($s, 'CHANGELOG') === false) {\n\t\t\tif (strpos($s, '-') === false || strpos($s, '-dev') !== false) {\n\t\t\t\thtml_section_header(__('Version %s', $s), 2);\n\t\t\t} else {\n\t\t\t\tform_alternate_row();\n\t\t\t\tprint '<td>' . $s . '</td>';\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction show_database_settings() {\n\t$status = db_fetch_assoc('show global variables');\n\n\tprint \"<table id='tables' class='cactiTable'>\";\n\tprint '<thead>';\n\tprint \"<tr class='tableHeader'>\";\n\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Variable Name') . '</th>';\n\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Value')         . '</th>';\n\tprint '</tr>';\n\tprint '</thead>';\n\n\tforeach ($status as $s) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . html_escape($s['Variable_name']) . '</td>';\n\n\t\tif (strlen($s['Value']) > 70) {\n\t\t\t$s['Value'] = str_replace(',', ', ', $s['Value']);\n\t\t}\n\n\t\tprint '<td>' . (is_numeric($s['Value']) ? number_format_i18n($s['Value'], -1):html_escape($s['Value'])) . '</td>';\n\t\tform_end_row();\n\t}\n}\n\nfunction show_database_permissions() {\n\t$status = db_get_permissions(true);\n\n\t$display_text = array(\n\t\t__('Permission Name'), __('Database'), __('Value'),\n\t\t__('Permission Name'), __('Database'), __('Value')\n\t);\n\n\thtml_header($display_text);\n\n\t$r = 0;\n\t$j = 1;\n\n\tforeach ($status as $database => $perms) {\n\t\t$first = true;\n\t\t$r = 0;\n\n\t\tforeach($perms as $key => $value) {\n\t\t\tif (($r % 2) == 0 || $first) {\n\t\t\t\tform_alternate_row(\"line$j\");\n\t\t\t}\n\n\t\t\tprint '<td>' . $key      . '</td>';\n\t\t\tprint '<td>' . $database . '</td>';\n\t\t\tprint '<td>' . ($value ? __('Yes') : __('No')) . '</td>';\n\n\t\t\tif (($r % 2) == 1) {\n\t\t\t\tform_end_row();\n\t\t\t}\n\n\t\t\t$r++;\n\t\t\t$first = false;\n\t\t}\n\n\t\tif (($r % 2) == 1) {\n\t\t\tprint '<td>&nbsp;</td>';\n\t\t\tprint '<td>&nbsp;</td>';\n\t\t\tprint '<td>&nbsp;</td>';\n\t\t\tform_end_row();\n\t\t\t$j++;\n\t\t}\n\t}\n}\n\nfunction show_database_status() {\n\t$status = db_fetch_assoc('show global status');\n\n\tprint \"<table id='tables' class='cactiTable'>\";\n\tprint '<thead>';\n\tprint \"<tr class='tableHeader'>\";\n\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Variable Name') . '</th>';\n\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Value')         . '</th>';\n\tprint '</tr>';\n\tprint '</thead>';\n\n\tforeach ($status as $s) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . html_escape($s['Variable_name']) . '</td>';\n\t\tprint '<td>' . (is_numeric($s['Value']) ? number_format_i18n($s['Value'], -1):html_escape($s['Value'])) . '</td>';\n\t\tform_end_row();\n\t}\n}\n\nfunction show_tech_summary() {\n\tglobal $config, $database_hostname, $poller_options, $input_types, $local_db_cnn_id;\n\n\t/* Get poller stats */\n\t$poller_item = db_fetch_assoc('SELECT action, count(action) AS total\n\t\tFROM poller_item\n\t\tGROUP BY action');\n\n\t/* Get system stats */\n\t$host_count  = db_fetch_cell('SELECT COUNT(*) FROM host WHERE deleted = \"\"');\n\t$graph_count = db_fetch_cell('SELECT COUNT(*) FROM graph_local');\n\t$data_count  = db_fetch_assoc('SELECT i.type_id, COUNT(i.type_id) AS total\n\t\tFROM data_template_data AS d, data_input AS i\n\t\tWHERE d.data_input_id = i.id\n\t\tAND local_data_id > 0\n\t\tGROUP BY i.type_id');\n\n\t/* Get RRDtool version */\n\t$rrdtool_version  = __('Unknown');\n\t$rrdtool_release  = __('Unknown');\n\t$storage_location = read_config_option('storage_location');\n\n\t$out_array = array();\n\n\tif ($storage_location == 0) {\n\t\tif ((file_exists(read_config_option('path_rrdtool'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_rrdtool'))))) {\n\t\t\texec(cacti_escapeshellcmd(read_config_option('path_rrdtool')), $out_array);\n\t\t}\n\t} else {\n\t\t$rrdtool_pipe = rrd_init();\n\t\t$out_array[]  = rrdtool_execute('info', false, RRDTOOL_OUTPUT_STDOUT, $rrdtool_pipe, 'WEBLOG');\n\t\trrd_close($rrdtool_pipe);\n\t}\n\n\tif (cacti_sizeof($out_array) > 0) {\n\t\tif (preg_match('/^RRDtool ([0-9.]+)/', $out_array[0], $m)) {\n\t\t\tpreg_match('/^([0-9]+\\.[0-9]+\\.[0.9]+)/', $m[1], $m2);\n\t\t\t$rrdtool_release = $m[1];\n\t\t\t$rrdtool_version = $rrdtool_release;\n\t\t}\n\t}\n\n\t/* Get SNMP cli version */\n\tif ((file_exists(read_config_option('path_snmpget'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_snmpget'))))) {\n\t\t$snmp_version = shell_exec(cacti_escapeshellcmd(read_config_option('path_snmpget')) . ' -V 2>&1');\n\t} else {\n\t\t$snmp_version = \"<span class='deviceDown'>\" . __('NET-SNMP Not Installed or its paths are not set.  Please install if you wish to monitor SNMP enabled devices.') . '</span>';\n\t}\n\n\t/* Check RRDtool issues */\n\t$rrdtool_errors = array();\n\n\tif (cacti_version_compare($rrdtool_version, get_rrdtool_version(), '<')) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: Installed RRDtool version does not exceed configured version.<br>Please visit the %s and select the correct RRDtool Utility Version.', \"<a href='\" . html_escape('settings.php?tab=general') . \"'>\" . __('Configuration Settings') . '</a>') . '</span>';\n\t}\n\n\t$graph_gif_count = db_fetch_cell('SELECT COUNT(*) FROM graph_templates_graph WHERE image_format_id = 2');\n\n\tif ($graph_gif_count > 0) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: RRDtool 1.2.x+ does not support the GIF images format, but %d\" graph(s) and/or templates have GIF set as the image format.', $graph_gif_count) . '</span>';\n\t}\n\n\t/* Get spine version */\n\t$spine_version = 'Unknown';\n\n\tif ((file_exists(read_config_option('path_spine'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_spine'))))) {\n\t\t$out_array = array();\n\t\texec(cacti_escapeshellcmd(read_config_option('path_spine')) . ' --version', $out_array);\n\n\t\tif (cacti_sizeof($out_array) > 0) {\n\t\t\t$spine_version = $out_array[0];\n\t\t}\n\t}\n\n\thtml_section_header(__('General Information'), 2);\n\n\t$lockout = read_config_option('cacti_lockout_status', true);\n\t$enabled = read_config_option('auth_maint_lockout_type', true);\n\n\tform_alternate_row();\n\n\tprint '<td>' . __('Cacti Lockout Status') . '</td>';\n\tif ($enabled >= 0) {\n\t\tif ($lockout !=  '') {\n\t\t\t$lockout = json_decode($lockout, true);\n\n\t\t\t$unlock_time = $lockout['time'] + (30 * 60);\n\t\t\t$unlock_hms = date('H:i', $unlock_time);\n\n\t\t\tprint '<td><input class=\"deviceDown\" type=\"button\" id=\"lockout\" value=\"' . __('Cacti in Maintenance Mode until approximately %s!', $unlock_hms) . '\" title=\"' . __('To Unlock, press this button again.') . '\"></td>';\n\t\t} else {\n\t\t\tprint '<td><input type=\"button\" id=\"lockout\" value=\"' . __('Lockout Cacti for Maintenance') . '\" title=\"' . __('Press this button to Lockout Cacti for 30 minutes for maintenance.') . '\"></td>';\n\t\t}\n\t} else {\n\t\tprint '<td><input class=\"deviceDisabled\" type=\"button\" id=\"lockout\" disabled=\"disabled\" value=\"' . __('Cacti Maintenance Mode feature is disabled') . '\" title=\"' . __('To enable this feature, goto Settings > Authentication.') . '\"></td>';\n\t}\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Date') . '</td>';\n\tprint '<td>' . date('r') . '</td>';\n\tform_end_row();\n\n\tapi_plugin_hook_function('custom_version_info');\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cacti Version') . '</td>';\n\tprint '<td>' . CACTI_VERSION . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cacti OS') . '</td>';\n\tprint '<td>' . CACTI_SERVER_OS . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('RSA Fingerprint') . '</td>';\n\tprint '<td>' . read_config_option('rsa_fingerprint') . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('NET-SNMP Version') . '</td>';\n\tprint '<td>' . $snmp_version . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('RRDtool Version') . ' ' . __('Configured') . '</td>';\n\tprint '<td>' . get_rrdtool_version() . '+</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('RRDtool Version') . ' ' . __('Found') . '</td>';\n\tprint '<td>' . $rrdtool_release . '</td>';\n\tform_end_row();\n\n\tif (!empty($rrdtool_errors)) {\n\t\tform_alternate_row();\n\t\tprint '<td>&nbsp;</td>';\n\t\t$br = '';\n\t\tprint '<td>';\n\n\t\tforeach ($rrdtool_errors as $rrdtool_error) {\n\t\t\tprint $br . $rrdtool_error;\n\t\t\t$br = '<br/>';\n\t\t}\n\t\tprint '</td>';\n\t\tform_end_row();\n\t}\n\n\tform_alternate_row();\n\tprint '<td>' . __('Devices') . '</td>';\n\tprint '<td>' . number_format_i18n($host_count, -1) . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Graphs') . '</td>';\n\tprint '<td>' . number_format_i18n($graph_count, -1) . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Data Sources') . '</td>';\n\tprint '<td>';\n\t$data_total = 0;\n\n\tif (cacti_sizeof($data_count)) {\n\t\tforeach ($data_count as $item) {\n\t\t\tprint $input_types[$item['type_id']] . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t$data_total += $item['total'];\n\t\t}\n\t\tprint __('Total: %s', number_format_i18n($data_total, -1));\n\t} else {\n\t\tprint \"<span class='deviceDown'>0</span>\";\n\t}\n\tprint '</td>';\n\tform_end_row();\n\n\thtml_section_header(__('Poller Information'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('Interval') . '</td>';\n\tprint '<td>' . read_config_option('poller_interval') . '</td>';\n\n\tif (file_exists(read_config_option('path_spine')) && $poller_options[read_config_option('poller_type')] == 'spine') {\n\t\t$type = $spine_version;\n\n\t\tif (!strpos($spine_version, CACTI_VERSION)) {\n\t\t\t$type .= '<span class=\"textError\"> (' . __('Different version of Cacti and Spine!') . ')</span>';\n\t\t}\n\t} else {\n\t\t$type = $poller_options[read_config_option('poller_type')];\n\t}\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Type') . '</td>';\n\tprint '<td>' . $type . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Items') . '</td>';\n\tprint '<td>';\n\t$total = 0;\n\n\tif (cacti_sizeof($poller_item)) {\n\t\tforeach ($poller_item as $item) {\n\t\t\tprint __('Action[%s]', $item['action']) . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t$total += $item['total'];\n\t\t}\n\t\tprint __('Total: %s', number_format_i18n($total, -1));\n\t} else {\n\t\tprint \"<span class='deviceDown'>\" . __('No items to poll') . '</span>';\n\t}\n\tprint '</td>';\n\tform_end_row();\n\n\t$processes = db_fetch_cell('SELECT\n\t\tGROUP_CONCAT(\n\t\t\tCONCAT(\"' . __('Name: ') . '\", name, \", ' . __('Procs: ') . '\", processes) SEPARATOR \"<br>\"\n\t\t) AS poller\n\t\tFROM poller\n\t\tWHERE disabled=\"\"');\n\n\t$threads = db_fetch_cell('SELECT\n\t\tGROUP_CONCAT(\n\t\t\tCONCAT(\"' . __('Name: ') . '\", name, \", ' . __('Threads: ') . '\", threads) SEPARATOR \"<br>\"\n\t\t) AS poller\n\t\tFROM poller\n\t\tWHERE disabled=\"\"');\n\n\tform_alternate_row();\n\tprint '<td>' . __('Concurrent Processes') . '</td>';\n\tprint '<td>' . $processes . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Max Threads') . '</td>';\n\tprint '<td>' . $threads . '</td>';\n\tform_end_row();\n\n\t$script_servers = read_config_option('php_servers');\n\n\tform_alternate_row();\n\tprint '<td>' . __('PHP Servers') . '</td>';\n\tprint '<td>' . html_escape($script_servers) . '</td>';\n\tform_end_row();\n\n\tif (POLLER_ID == 1) {\n\t\t$max_connections       = db_fetch_row('SHOW GLOBAL VARIABLES LIKE \"max_connections\"');\n\t\t$max_local_connections = array();\n\t} elseif ($config['connection'] == 'online') {\n\t\t$max_connections        = db_fetch_row('SHOW GLOBAL VARIABLES LIKE \"max_connections\"');\n\t\t$max_local_connections  = db_fetch_row('SHOW GLOBAL VARIABLES LIKE \"max_connections\"', false, $local_db_cnn_id);\n\t} else {\n\t\t$max_connections        = array();\n\t\t$max_local_connections  = db_fetch_row('SHOW GLOBAL VARIABLES LIKE \"max_connections\"');\n\t}\n\n\tif (cacti_sizeof($max_connections)) {\n\t\t$max_connections = $max_connections['Value'];\n\t} else {\n\t\t$max_connections = 0;\n\t}\n\n\tif (cacti_sizeof($max_local_connections)) {\n\t\t$max_local_connections = $max_local_connections['Value'];\n\t} else {\n\t\t$max_local_connections = 0;\n\t}\n\n\t$total_dc_threads = db_fetch_cell(\"SELECT\n\t\tSUM((processes * threads) + (processes * $script_servers)) AS threads\n\t\tFROM poller\n\t\tWHERE disabled = ''\");\n\n\t$recommend_mc = $total_dc_threads + 100;\n\n\tif ($recommend_mc > $max_connections) {\n\t\tif (POLLER_ID == 1) {\n\t\t\t$db_connections = '<span class=\"deviceDown\">' . __('Main Server: Current: %s, Min Required: %s', $max_connections, $recommend_mc) . '</span>';\n\t\t} elseif ($config['connection'] == 'online') {\n\t\t\t$db_connections = '<span class=\"deviceDown\">' . __('Main Server: Current: %s, Min Required: %s', $max_connections, $recommend_mc) . '</span>';\n\t\t} else {\n\t\t\t$db_connections = '';\n\t\t}\n\t} else {\n\t\tif (POLLER_ID == 1) {\n\t\t\t$db_connections = '<span class=\"deviceUp\">' . __('Main Server: Current: %s, Min Required: %s', $max_connections, $recommend_mc) . '</span>';\n\t\t} elseif ($config['connection'] == 'online') {\n\t\t\t$db_connections = '<span class=\"deviceUp\">' . __('Main Server: Current: %s, Min Required: %s', $max_connections, $recommend_mc) . '</span>';\n\t\t} else {\n\t\t\t$db_connections = '';\n\t\t}\n\t}\n\n\tif (POLLER_ID > 1) {\n\t\tif ($recommend_mc > $max_local_connections) {\n\t\t\t$db_connections .= '<br><span class=\"deviceDown\">' . __('Local Server: Current: %s, Min Required: %s', $max_local_connections, $recommend_mc) . '</span>';\n\t\t} else {\n\t\t\t$db_connections .= '<br><span class=\"deviceUp\">' . __('Local Server: Current: %s, Min Required: %s', $max_local_connections, $recommend_mc) . '</span>';\n\t\t}\n\t}\n\n\tform_alternate_row();\n\tprint '<td>' . __('Minimum Connections:') . '</td>';\n\tprint '<td>' . $db_connections . '<br>' .\n\t\t__('Assumes 100 spare connections for Web page users and other various connections.') . '<br>' .\n\t\t__('The minimum required can vary greatly if there is heavy user Graph viewing activity.') . '<br>' .\n\t\t__('Each browser tab can use upto 10 connections depending on the browser.') . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Script Timeout') . '</td>';\n\tprint '<td>' . read_config_option('script_timeout') . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Max OID') . '</td>';\n\tprint '<td>' . read_config_option('max_get_size') . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('Last Run Statistics') . '</td>';\n\tprint '<td>' . read_config_option('stats_poller') . '</td>';\n\tform_end_row();\n\n\t/* Get System Memory */\n\t$memInfo = utilities_get_system_memory();\n\n\t//print '<pre>';print_r($memInfo);print '</pre>';\n\n\t$total_memory = 0;\n\n\tif (cacti_sizeof($memInfo)) {\n\t\thtml_section_header(__('System Memory'), 2);\n\n\t\tforeach ($memInfo as $name => $value) {\n\t\t\tif (CACTI_SERVER_OS == 'win32') {\n\t\t\t\tform_alternate_row();\n\t\t\t\tprint \"<td>$name</td>\";\n\t\t\t\tprint '<td>' . number_format_i18n($value / 1000, 2) . ' MB</td>';\n\t\t\t\tform_end_row();\n\t\t\t} else {\n\t\t\t\tswitch($name) {\n\t\t\t\t\tcase 'SwapTotal':\n\t\t\t\t\tcase 'SwapFree':\n\t\t\t\t\tcase 'Cached':\n\t\t\t\t\tcase 'MemTotal':\n\t\t\t\t\tcase 'MemFree':\n\t\t\t\t\tcase 'MemAvailable':\n\t\t\t\t\tcase 'Buffers':\n\t\t\t\t\tcase 'Active':\n\t\t\t\t\tcase 'Inactive':\n\t\t\t\t\t\t// Convert to GBi\n\t\t\t\t\t\t$value /= (1000 * 1000 * 1000);\n\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\tprint \"<td>$name</td>\";\n\t\t\t\t\t\tprint '<td>' . __('%s GB', number_format_i18n($value, 2, 1000)) . '</td>';\n\t\t\t\t\t\tform_end_row();\n\n\t\t\t\t\t\tif ($name == 'MemTotal') {\n\t\t\t\t\t\t\t$total_memory = $value;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tform_end_row();\n\t}\n\n\t$mysql_info = utilities_get_mysql_info(POLLER_ID);\n\n\t$database  = $mysql_info['database'];\n\t$version   = $mysql_info['version'];\n\t$link_ver  = $mysql_info['link_ver'];\n\t$variables = $mysql_info['variables'];\n\t$myhost    = php_uname('n');\n\t$dbhost    = $database_hostname;\n\n\tif ($dbhost == 'localhost' || $myhost == $dbhost) {\n\t\t$local_db = true;\n\t} else {\n\t\t$local_db = false;\n\t}\n\n\t// Get Maximum Memory in GB for MySQL/MariaDB\n\tif (POLLER_ID == 1) {\n\t\tif (($database == 'MySQL' && version_compare($version, '8.0', '<')) || $database == 'MariaDB') {\n\t\t\t$systemMemory = db_fetch_cell('SELECT\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.query_cache_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size) / 1024 / 1024 / 1024');\n\n\t\t\t$maxPossibleMyMemory = db_fetch_cell('SELECT (\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.query_cache_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size\n\t\t\t\t+ @@GLOBAL.max_connections * (\n\t\t\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t\t\t+ @@GLOBAL.binlog_cache_size)\n\t\t\t\t) / 1024 / 1024 / 1024)');\n\t\t} else {\n\t\t\t$systemMemory = db_fetch_cell('SELECT\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size) / 1024 / 1024 / 1024');\n\n\t\t\t$maxPossibleMyMemory = db_fetch_cell('SELECT (\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size\n\t\t\t\t+ @@GLOBAL.max_connections * (\n\t\t\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t\t\t+ @@GLOBAL.binlog_cache_size)\n\t\t\t\t) / 1024 / 1024 / 1024)');\n\t\t}\n\n\t\t$clientMemory = db_fetch_cell('SELECT @@GLOBAL.max_connections * (\n\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t+ @@GLOBAL.binlog_cache_size) / 1024 / 1024 / 1024');\n\t} else {\n\t\tif (($database == 'MySQL' && version_compare($version, '8.0', '<')) || $database == 'MariaDB') {\n\t\t\t$maxPossibleMyMemory = db_fetch_cell('SELECT (\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.query_cache_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size\n\t\t\t\t+ @@GLOBAL.max_connections * (\n\t\t\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t\t\t+ @@GLOBAL.binlog_cache_size)\n\t\t\t\t) / 1024 / 1024 / 1024)', '', false, $local_db_cnn_id);\n\n\t\t\t$systemMemory = db_fetch_cell('SELECT\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.query_cache_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size) / 1024 / 1024 / 1024', '', false, $local_db_cnn_id);\n\t\t} else {\n\t\t\t$maxPossibleMyMemory = db_fetch_cell('SELECT (\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size\n\t\t\t\t+ @@GLOBAL.max_connections * (\n\t\t\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t\t\t+ @@GLOBAL.binlog_cache_size)\n\t\t\t\t) / 1024 / 1024 / 1024)', '', false, $local_db_cnn_id);\n\n\t\t\t$systemMemory = db_fetch_cell('SELECT\n\t\t\t\t(@@GLOBAL.key_buffer_size\n\t\t\t\t+ @@GLOBAL.tmp_table_size\n\t\t\t\t+ @@GLOBAL.innodb_buffer_pool_size\n\t\t\t\t+ @@GLOBAL.innodb_log_buffer_size) / 1024 / 1024 / 1024', '', false, $local_db_cnn_id);\n\t\t}\n\n\t\t$clientMemory = db_fetch_cell('SELECT @@GLOBAL.max_connections * (\n\t\t\t@@GLOBAL.sort_buffer_size\n\t\t\t+ @@GLOBAL.read_buffer_size\n\t\t\t+ @@GLOBAL.read_rnd_buffer_size\n\t\t\t+ @@GLOBAL.join_buffer_size\n\t\t\t+ @@GLOBAL.thread_stack\n\t\t\t+ @@GLOBAL.binlog_cache_size) / 1024 / 1024 / 1024', '', false, $local_db_cnn_id);\n\t}\n\n\thtml_section_header(__('MySQL/MariaDB Memory Statistics (Source: MySQL Tuner)'), 2);\n\n\tif ($total_memory > 0 && $local_db) {\n\t\tif ($maxPossibleMyMemory > ($total_memory * 0.8)) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Total Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceDown\">' . __('%s GB', number_format_i18n($maxPossibleMyMemory, 2, 1000)) . '</td>';\n\t\t\tform_end_row();\n\t\t\tform_alternate_row();\n\t\t\tprint '<td></td>';\n\t\t\tprint '<td>' . __('Reduce MySQL/MariaDB Memory to less than 80% of System Memory.  Preserve additional Cache Memory for RRDfiles if the Database is on the same system as the RRDfiles.  See Core and Client Totals below for explanation of calculation method.') . '</td>';\n\t\t\tform_end_row();\n\t\t} else {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Total Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceUp\">' . __('%s GB', number_format_i18n($maxPossibleMyMemory, 2, 1000)) . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Total Memory Possible') . '</td>';\n\t\tprint '<td>' . __('%s GB', number_format_i18n($maxPossibleMyMemory, 2, 1000)) . '</td>';\n\t\tform_end_row();\n\t}\n\n\tif ($total_memory > 0 && $local_db) {\n\t\tif ($systemMemory > ($total_memory * 0.8)) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Core Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceDown\">' . __('%s GB', number_format_i18n($systemMemory, 2, 1000)) . '&nbsp;&nbsp;(' . __('Reduce Total Core Memory') . '</td>';\n\t\t\tform_end_row();\n\t\t} else {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Core Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceUp\">' . __('%s GB', number_format_i18n($systemMemory, 2, 1000)) . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Calculation Formula') . '</td>';\n\t\tprint '<td>SELECT @@GLOBAL.key_buffer_size + <br>@@GLOBAL.query_cache_size + <br>@@GLOBAL.tmp_table_size + <br>@@GLOBAL.innodb_buffer_pool_size + <br>@@GLOBAL.innodb_log_buffer_size</td>';\n\t\tform_end_row();\n\n\t\tif ($clientMemory > ($total_memory * 0.8)) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Connection Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceDown\">' . __('%s GB', number_format_i18n($clientMemory, 2, 1000)) . '&nbsp;&nbsp;(' . __('Reduce Total Client Memory') . ')</td>';\n\t\t\tform_end_row();\n\t\t} else {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Max Connection Memory Possible') . '</td>';\n\t\t\tprint '<td class=\"deviceUp\">' . __('%s GB', number_format_i18n($clientMemory, 2, 1000)) . '</td>';\n\t\t\tform_end_row();\n\t\t}\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Calculation Formula') . '</td>';\n\t\tprint '<td>SELECT @@GLOBAL.max_connections * (<br>@@GLOBAL.sort_buffer_size + <br>@@GLOBAL.read_buffer_size + <br>@@GLOBAL.read_rnd_buffer_size + <br>@@GLOBAL.join_buffer_size + <br>@@GLOBAL.thread_stack + <br>@@GLOBAL.binlog_cache_size)</td>';\n\t\tform_end_row();\n\t} else {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Core Memory Possible') . '</td>';\n\t\tprint '<td>' . __('%s GB', number_format_i18n($systemMemory, 2, 1000)) . '</td>';\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Calculation Formula') . '</td>';\n\t\tprint '<td>SELECT @@GLOBAL.key_buffer_size + <br>@@GLOBAL.query_cache_size + <br>@@GLOBAL.tmp_table_size + <br>@@GLOBAL.innodb_buffer_pool_size + <br>@@GLOBAL.innodb_log_buffer_size</td>';\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Connection Memory Possible') . '</td>';\n\t\tprint '<td>' . __('%s GB', number_format_i18n($clientMemory, 2, 1000)) . '</td>';\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Calculation Formula') . '</td>';\n\t\tprint '<td>SELECT @@GLOBAL.max_connections * (<br>@@GLOBAL.sort_buffer_size + <br>@@GLOBAL.read_buffer_size + <br>@@GLOBAL.read_rnd_buffer_size + <br>@@GLOBAL.join_buffer_size + <br>@@GLOBAL.thread_stack + <br>@@GLOBAL.binlog_cache_size)</td>';\n\t\tform_end_row();\n\t}\n\n\thtml_section_header(__('PHP Information'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('PHP Version') . '</td>';\n\n\tif (version_compare(PHP_VERSION, '5.5.0') >= 0) {\n\t\tprint '<td>' . PHP_VERSION . '</td>';\n\t} else {\n\t\tprint '<td>' . PHP_VERSION . \"</br><span class='deviceDown'>\" . __('PHP Version 5.5.0+ is recommended due to strong password hashing support.') . '</span></td>';\n\t}\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('PHP OS') . '</td>';\n\tprint '<td>' . PHP_OS . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('PHP uname') . '</td>';\n\tprint '<td>';\n\n\tif (function_exists('php_uname')) {\n\t\tprint php_uname();\n\t} else {\n\t\tprint __('N/A');\n\t}\n\tprint '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>' . __('PHP SNMP') . '</td>';\n\tprint '<td>';\n\n\tif (function_exists('snmpget')) {\n\t\tprint __('Installed. <span class=\"deviceDown\">Note: If you are planning on using SNMPv3, you must remove php-snmp and use the Net-SNMP toolset.</span>');\n\t} else {\n\t\tprint __('Not Installed');\n\t}\n\tprint '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>max_execution_time</td>';\n\tprint '<td>' . ini_get('max_execution_time') . '</td>';\n\tform_end_row();\n\n\tform_alternate_row();\n\tprint '<td>memory_limit</td>';\n\tprint '<td>' . ini_get('memory_limit');\n\n\t/* Calculate memory suggestion based off of data source count */\n\t$memory_suggestion = $data_total * 32768;\n\n\t/* Set minimum - 16M */\n\tif ($memory_suggestion < 16777216) {\n\t\t$memory_suggestion = 16777216;\n\t}\n\n\t/* Set maximum - 512M */\n\tif ($memory_suggestion > 536870912) {\n\t\t$memory_suggestion = 536870912;\n\t}\n\n\t/* Suggest values in 8M increments */\n\t$memory_suggestion = round($memory_suggestion / 8388608) * 8388608;\n\n\tif (memory_bytes(ini_get('memory_limit')) < $memory_suggestion) {\n\t\tprint \"<br><span class='deviceDown'>\";\n\n\t\tif ((ini_get('memory_limit') == -1)) {\n\t\t\tprint __(\"You've set memory limit to 'unlimited'.\") . '<br>';\n\t\t}\n\n\t\tprint __('It is highly suggested that you alter you php.ini memory_limit to %s or higher.', memory_readable($memory_suggestion)) . ' <br/>' .\n\t\t\t__('This suggested memory value is calculated based on the number of data source present and is only to be used as a suggestion, actual values may vary system to system based on requirements.');\n\n\t\tprint '</span><br>';\n\t}\n\n\tprint '</td>';\n\n\tform_end_row();\n\n\tutilities_get_mysql_recommendations();\n}\n"
        },
        {
          "name": "templates_export.php",
          "type": "blob",
          "size": 6.3798828125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/export.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\texport();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tglobal $export_types, $export_errors;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('export_item_id');\n\t/* ==================================================== */\n\n\tif (isset_request_var('save_component_export')) {\n\t\t$export_errors = 0;\n\t\t$xml_data      = get_item_xml(get_nfilter_request_var('export_type'), get_nfilter_request_var('export_item_id'), (((isset_request_var('include_deps') ? get_nfilter_request_var('include_deps') : '') == '') ? false : true));\n\n\t\tif (get_nfilter_request_var('output_format') == '1') {\n\t\t\ttop_header();\n\n\t\t\tprint \"<table style='width:100%;' class='center'><tr><td style='text-align:left;'><pre>\" . html_escape($xml_data) . '</pre></td></tr></table>';\n\n\t\t\tbottom_footer();\n\t\t} elseif (get_nfilter_request_var('output_format') == '2') {\n\t\t\theader('Content-type: application/xml');\n\n\t\t\tif ($export_errors) {\n\t\t\t\tprint __('WARNING: Export Errors Encountered. Refresh Browser Window for Details!') . \"\\n\";\n\t\t\t}\n\t\t\tprint $xml_data;\n\t\t} elseif (get_nfilter_request_var('output_format') == '3') {\n\t\t\tif ($export_errors) {\n\t\t\t\theader('Location: templates_export.php');\n\t\t\t} else {\n\t\t\t\theader('Content-type: application/xml');\n\t\t\t\theader('Content-Disposition: attachment; filename=cacti_' . get_nfilter_request_var('export_type') . '_' . strtolower(clean_up_file_name(db_fetch_cell(str_replace('|id|', get_nfilter_request_var('export_item_id'), $export_types[get_nfilter_request_var('export_type')]['title_sql'])))) . '.xml');\n\t\t\t\tprint $xml_data;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction export() {\n\tglobal $export_types;\n\n\t/* 'graph_template' should be the default */\n\tif (!isset_request_var('export_type')) {\n\t\tset_request_var('export_type', 'host_template');\n\t}\n\n\t$type_found = false;\n\n\tforeach ($export_types as $id => $type) {\n\t\t$export_array[$id] = $type['name'];\n\n\t\tif (get_nfilter_request_var('export_type') == $id) {\n\t\t\t$type_found = true;\n\t\t}\n\t}\n\n\tif (!$type_found) {\n\t\tset_request_var('export_type', 'host_template');\n\t}\n\n\t$form_template_export1 = array(\n\t\t'export_type' => array(\n\t\t\t'friendly_name' => __('What would you like to export?'),\n\t\t\t'description'   => __('Select the Template type that you wish to export from Cacti.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => get_nfilter_request_var('export_type'),\n\t\t\t'array'         => $export_array,\n\t\t\t'default'       => 'host_template'\n\t\t)\n\t);\n\n\t$form_template_export2 = array(\n\t\t'export_item_id' => array(\n\t\t\t'friendly_name' => __('Device Template to Export'),\n\t\t\t'description'   => __('Choose the Template to export to XML.'),\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'value'         => '0',\n\t\t\t'default'       => '0',\n\t\t\t'sql'           => $export_types[get_nfilter_request_var('export_type')]['dropdown_sql']\n\t\t),\n\t\t'include_deps' => array(\n\t\t\t'friendly_name' => __('Include Dependencies'),\n\t\t\t'description'   => __('Some templates rely on other items in Cacti to function properly. It is highly recommended that you select this box or the resulting import may fail.'),\n\t\t\t'value'         => 'on',\n\t\t\t'method'        => 'checkbox',\n\t\t\t'default'       => 'on'\n\t\t),\n\t\t'output_format' => array(\n\t\t\t'friendly_name' => __('Output Format'),\n\t\t\t'description'   => __('Choose the format to output the resulting XML file in.'),\n\t\t\t'method'        => 'radio',\n\t\t\t'value'         => '3',\n\t\t\t'default'       => '0',\n\t\t\t'items'         => array(\n\t\t\t\t0 => array(\n\t\t\t\t\t'radio_value'   => '1',\n\t\t\t\t\t'radio_caption' => __('Output to the Browser (within Cacti)'),\n\t\t\t\t\t),\n\t\t\t\t1 => array(\n\t\t\t\t\t'radio_value'   => '2',\n\t\t\t\t\t'radio_caption' => __('Output to the Browser (raw XML)'),\n\t\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'radio_value'   => '3',\n\t\t\t\t\t'radio_caption' => __('Save File Locally')\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tform_start('templates_export.php', 'export');\n\n\thtml_start_box(__('Export Templates'), '100%', '', '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_template_export1\n\t\t)\n\t);\n\n\thtml_end_box();\n\n\thtml_start_box(__('Available Templates [%s]', $export_types[get_nfilter_request_var('export_type')]['name']), '100%', '', '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_template_export2\n\t\t)\n\t);\n\n\tform_hidden_box('save_component_export','1','');\n\n\thtml_end_box();\n\n\t?>\n\t<script type='text/javascript'>\n\tvar stopTimer;\n\n\t$(function() {\n\t\t$('#export_type').change(function() {\n\t\t\tstrURL = 'templates_export.php?export_type='+$('#export_type').val();\n\t\t\tloadUrl({url:strURL})\n\t\t});\n\n\t\t$('form#export').submit(function(event) {\n\t\t\tstopTimer = setTimeout(function() { Pace.stop() }, 1000);\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('', 'export', '', false);\n}\n"
        },
        {
          "name": "templates_import.php",
          "type": "blob",
          "size": 15.625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/import.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\n$action  = get_request_var('action');\n$is_save = isset_request_var('save_component_import');\n\n$tmp_dir = sys_get_temp_dir();\n$tmp_len = strlen($tmp_dir);\n$tmp_dir .= ($tmp_len !== 0 && substr($tmp_dir, -$tmp_len) === '/') ? '': '/';\n$is_tmp = is_tmp_writable(sys_get_temp_dir());\n\nif ($is_tmp && $is_save && $action == 'save') {\n\tform_save();\n} else {\n\ttop_header();\n\n\tif ($is_tmp) {\n\t\timport();\n\t} else {\n\t\tbad_tmp();\n\t}\n\n\tbottom_footer();\n}\n\nfunction form_save() {\n\tglobal $preview_only, $messages, $import_messages;\n\n\tif (isset_request_var('save_component_import')) {\n\t\t//print '<pre>';print_r($_FILES);print '</pre>';exit;\n\t\tif (($_FILES['import_file']['tmp_name'] != 'none') && ($_FILES['import_file']['tmp_name'] != '')) {\n\t\t\t/* file upload */\n\t\t\t$fp       = fopen($_FILES['import_file']['tmp_name'],'r');\n\t\t\t$xml_data = fread($fp,filesize($_FILES['import_file']['tmp_name']));\n\t\t\tfclose($fp);\n\t\t} else {\n\t\t\theader('Location: templates_import.php');\n\n\t\t\texit;\n\t\t}\n\n\t\tif (get_filter_request_var('import_data_source_profile') == '0') {\n\t\t\t$import_as_new = true;\n\t\t\t$profile_id    = db_fetch_cell('SELECT id FROM data_source_profiles ORDER BY `default` DESC LIMIT 1');\n\t\t} else {\n\t\t\t$import_as_new = false;\n\t\t\t$profile_id    = get_request_var('import_data_source_profile');\n\t\t}\n\n\t\tif (get_nfilter_request_var('preview_only') == 'true') {\n\t\t\t$preview_only = true;\n\t\t} else {\n\t\t\t$preview_only = false;\n\t\t}\n\n\t\tif (isset_request_var('remove_orphans') && get_nfilter_request_var('remove_orphans') == 'on') {\n\t\t\t$remove_orphans = true;\n\t\t} else {\n\t\t\t$remove_orphans = false;\n\t\t}\n\n\t\tif (isset_request_var('replace_svalues') && get_nfilter_request_var('replace_svalues') == 'on') {\n\t\t\t$replace_svalues = true;\n\t\t} else {\n\t\t\t$replace_svalues = false;\n\t\t}\n\n\t\t$import_hashes = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (strpos($var, 'chk_') !== false) {\n\t\t\t\t$id = base64_decode(str_replace('chk_', '', $var), true);\n\t\t\t\t$id = json_decode($id, true);\n\n\t\t\t\tif (isset($id['hash'])) {\n\t\t\t\t\t$import_hashes[] = $id['hash'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$import_messages = array();\n\n\t\t/* obtain debug information if it's set */\n\t\t$debug_data = import_xml_data($xml_data, $import_as_new, $profile_id, $remove_orphans, $replace_svalues, $import_hashes);\n\n\t\tif (!$preview_only) {\n\t\t\traise_message('import_success', __('The Template Import Succeeded.'), MESSAGE_LEVEL_INFO);\n\n\t\t\theader('Location: templates_import.php');\n\t\t} elseif ($debug_data !== false && cacti_sizeof($debug_data)) {\n\t\t\t//print '<pre>';print_r($debug_data);print '</pre>';exit;\n\n\t\t\t$templates = prepare_template_display($debug_data);\n\t\t\t//print '<pre>';print_r($templates);print '</pre>';\n\n\t\t\tdisplay_template_data($templates);\n\n\t\t\texit;\n\t\t} else {\n\t\t\tcacti_log(sprintf('ERROR: Import or Preview failed for XML file %s!', $_FILES['import_file']['name']), false, 'IMPORT');\n\n\t\t\t$message_text = '';\n\n\t\t\tif (cacti_sizeof($import_messages)) {\n\t\t\t\tforeach ($import_messages as $message) {\n\t\t\t\t\tif (isset($messages[$message])) {\n\t\t\t\t\t\t$message_text .= ($message_text != '' ? '<br>':'') . $messages[$message]['message'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\traise_message_javascript(__('Error in Template', 'package'), __('The Template XML file \"%s\" validation failed', $_FILES['import_file']['name']), __('See the cacti.log for more information, and review the XML file for proper syntax.  The error details are shown below.<br><br><b>Errors:</b><br>%s', $message_text));\n\t\t}\n\t}\n}\n\nfunction prepare_template_display(&$import_info) {\n\tglobal $hash_type_names;\n\n\t$templates = array();\n\n\t/**\n\t * This function will create an array of item types and their status\n\t * the user will have an option to import select items based upon\n\t * these values.\n\t *\n\t * $templates['template_hash'] = array(\n\t *    'package'      => 'some_package_name',\n\t *    'package_file' => 'some_package_filename',\n\t *    'type'         => 'some_type',\n\t *    'type_name'    => 'some_type_name',\n\t *    'name'         => 'some_name',\n\t *    'status'       => 'some_status'\n\t * );\n\t */\n\n\tif (cacti_sizeof($import_info)) {\n\t\tforeach ($import_info as $type => $type_array) {\n\t\t\tif ($type == 'files') {\n\t\t\t\t$templates['files'] = $type_array;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach ($type_array as $index => $vals) {\n\t\t\t\t$hash = $vals['hash'];\n\n\t\t\t\tif (!isset($templates[$hash])) {\n\t\t\t\t\t$templates[$hash]['status'] = $vals['type'];\n\t\t\t\t} else {\n\t\t\t\t\t$templates[$hash]['status'] .= '<br>' . $vals['type'];\n\t\t\t\t}\n\n\t\t\t\t$templates[$hash]['type']      = $type;\n\t\t\t\t$templates[$hash]['type_name'] = $hash_type_names[$type];\n\t\t\t\t$templates[$hash]['name']      = $vals['title'];\n\n\t\t\t\tunset($vals['title']);\n\t\t\t\tunset($vals['result']);\n\t\t\t\tunset($vals['hash']);\n\t\t\t\tunset($vals['type']);\n\n\t\t\t\tif (isset($vals['dep'])) {\n\t\t\t\t\t$template[$hash]['deps'] = $vals['dep'];\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($vals)) {\n\t\t\t\t\t$templates[$hash]['vals'] = $vals;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $templates;\n}\n\nfunction display_template_data(&$templates) {\n\tglobal $config;\n\n\tif (isset($templates['files'])) {\n\t\t$files = $templates['files'];\n\n\t\tunset($templates['files']);\n\n\t\thtml_start_box(__('Import Files [ If Files are missing, locate and install before using ]'), '100%', '', '1', 'center', '');\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('File Name')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Status')\n\t\t\t)\n\t\t);\n\n\t\thtml_header($display_text);\n\n\t\t$id = 0;\n\n\t\tforeach ($files as $path => $status) {\n\t\t\tif ($status == 'found') {\n\t\t\t\t$status = \"<span class='deviceUp'>\" . __('Exists') . '</span>';\n\t\t\t} elseif ($status == 'notreadable') {\n\t\t\t\t$status = \"<span class='deviceRecovering'>\" . __('Not Readable') . '</span>';\n\t\t\t} else {\n\t\t\t\t$status = \"<span class='deviceDown'>\" . __('Not Found') . '</span>';\n\t\t\t}\n\n\t\t\tform_alternate_row('line_' . $id);\n\n\t\t\tform_selectable_ecell($path, $id);\n\t\t\tform_selectable_cell($status, $id);\n\n\t\t\tform_end_row();\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (cacti_sizeof($templates)) {\n\t\thtml_start_box(__('Import Templates [ None selected imports all, Check to import selectively ]'), '100%', '', '1', 'center', '');\n\n\t\t$display_text = array(\n\t\t\tarray(\n\t\t\t\t'display' => __('Template Type')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Template Name')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Status')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Dependencies')\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'display' => __('Changes/Diffferences')\n\t\t\t)\n\t\t);\n\n\t\thtml_header_checkbox($display_text, false, '', true, 'import');\n\n\t\t$templates = array_reverse($templates);\n\n\t\tforeach ($templates as $hash => $detail) {\n\t\t\t$id = base64_encode(\n\t\t\t\tjson_encode(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'hash'    => $hash,\n\t\t\t\t\t\t'type'    => $detail['type_name'],\n\t\t\t\t\t\t'name'    => $detail['name'],\n\t\t\t\t\t\t'status'  => $detail['status']\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif ($detail['status'] == 'updated') {\n\t\t\t\t$status = \"<span class='updateObject'>\" . __('Updated') . '</span>';\n\t\t\t} elseif ($detail['status'] == 'new') {\n\t\t\t\t$status = \"<span class='newObject'>\" . __('New') . '</span>';\n\t\t\t} elseif ($detail['status'] == 'damaged') {\n\t\t\t\t$status = \"<span class='deviceDown'>\" . __('Damaged') . '</span>';\n\t\t\t} else {\n\t\t\t\t$status = \"<span class='deviceUp'>\" . __('Unchanged') . '</span>';\n\t\t\t}\n\n\t\t\tform_alternate_row('line_import_' . $detail['status'] . '_' . $id);\n\n\t\t\tform_selectable_ecell($detail['type_name'], $id);\n\t\t\tform_selectable_ecell($detail['name'], $id);\n\t\t\tform_selectable_cell($status, $id);\n\n\t\t\tif (isset($detail['deps'])) {\n\t\t\t\t$dep_details = array();\n\t\t\t\t$unmet_count = 0;\n\t\t\t\t$met_count   = 0;\n\n\t\t\t\tforeach ($detail['deps'] as $hash => $dep) {\n\t\t\t\t\tif ($dep == 'met') {\n\t\t\t\t\t\t$dep_details[$dep] = $dep;\n\t\t\t\t\t\t$met_count++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$dep_details[$dep] = $dep;\n\t\t\t\t\t\t$unmet_count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset($dep_details['met'])) {\n\t\t\t\t\t$dep_details['met'] = __('Met: %d', $met_count);\n\t\t\t\t}\n\n\t\t\t\tif (isset($dep_details['unmet'])) {\n\t\t\t\t\t$dep_details['unmet'] = __('Unmet: %d', $unmet_count);\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell(implode(', ', $dep_details), $id, '', 'white-space:pre-wrap');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('None'), $id);\n\t\t\t}\n\n\t\t\tif ($detail['status'] == 'damaged') {\n\t\t\t\tform_selectable_cell(__('Some CDEF Items will not import due to an export error! Contact Template provider for an updated export.'), $id);\n\t\t\t} elseif (isset($detail['vals'])) {\n\t\t\t\t$diff_details = '';\n\t\t\t\t$diff_array   = array();\n\t\t\t\t$orphan_array = array();\n\n\t\t\t\tforeach ($detail['vals'] as $type => $diffs) {\n\t\t\t\t\tif ($type == 'differences') {\n\t\t\t\t\t\tforeach($diffs as $item) {\n\t\t\t\t\t\t\t$diff_array[$item] = $item;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($type == 'orphans') {\n\t\t\t\t\t\tforeach($diffs as $item) {\n\t\t\t\t\t\t\t$orphan_array[$item] = $item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($diff_array)) {\n\t\t\t\t\t$diff_details .= __('Differences', 'package') . '<br>' . implode('<br>', $diff_array);\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($orphan_array)) {\n\t\t\t\t\t$diff_details .= ($diff_details != '' ? '<br>':'') . __('Orphans', 'package') . '<br>' . implode('<br>', $orphan_array);\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($diff_details, $id, '', 'white-space:pre-wrap');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('None'), $id);\n\t\t\t}\n\n\t\t\tform_checkbox_cell($detail['name'], $id);\n\n\t\t\tform_end_row();\n\t\t}\n\n\t\thtml_end_box();\n\t}\n}\n\nfunction bad_tmp() {\n\thtml_start_box(__('Import Template'), '60%', '', '1', 'center', '');\n\tform_alternate_row();\n\tprint \"<td class='textarea'><p><strong>\" . __('ERROR') . ':</strong> ' .__('Failed to access temporary folder, import functionality is disabled') . \"</p></td></tr>\\n\";\n\thtml_end_box();\n}\n\nfunction import() {\n\tglobal $hash_type_names, $fields_template_import;\n\n\t$default_profile = db_fetch_cell('SELECT id FROM data_source_profiles WHERE `default`=\"on\"');\n\n\tif (empty($default_profile)) {\n\t\t$default_profile = db_fetch_cell('SELECT id FROM data_source_profiles ORDER BY id LIMIT 1');\n\t}\n\n\tform_start('templates_import.php', 'import', true);\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'preview_only' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'default' => 'on'\n\t\t),\n\t\t'replace_svalues' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'default' => read_config_option('replace_svalues')\n\t\t),\n\t\t'remove_orphans' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'default' => read_config_option('remove_orphans')\n\t\t),\n\t\t'data_source_profile' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => $default_profile\n\t\t),\n\t\t'image_format' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_image_format')\n\t\t),\n\t\t'graph_width' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_graph_width')\n\t\t),\n\t\t'graph_height' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('default_graph_height')\n\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_pimport');\n\t/* ================= input validation ================= */\n\n\t$fields_template_import['import_data_source_profile']['default'] = $default_profile;\n\n\tif (isset_request_var('replace_svalues') && get_nfilter_request_var('replace_svalues') == 'true') {\n\t\t$fields_template_import['replace_svalues']['value'] = 'on';\n\t} else {\n\t\t$fields_template_import['replace_svalues']['value'] = '';\n\t}\n\n\tif (isset_request_var('remove_orphans') && get_nfilter_request_var('remove_orphans') == 'true') {\n\t\t$fields_template_import['remove_orphans']['value'] = 'on';\n\t} else {\n\t\t$fields_template_import['remove_orphans']['value'] = '';\n\t}\n\n\tif (isset_request_var('image_format')) {\n\t\t$fields_template_import['image_format']['value'] = get_filter_request_var('image_format');\n\t} else {\n\t\t$fields_template_import['image_format']['value'] = read_config_option('default_image_format');\n\t}\n\n\tif (isset_request_var('graph_width')) {\n\t\t$fields_template_import['graph_width']['value'] = get_filter_request_var('graph_width');\n\t} else {\n\t\t$fields_template_import['graph_width']['value'] = read_config_option('default_graph_width');\n\t}\n\n\tif (isset_request_var('graph_height')) {\n\t\t$fields_template_import['graph_height']['value'] = get_filter_request_var('graph_height');\n\t} else {\n\t\t$fields_template_import['graph_height']['value'] = read_config_option('default_graph_height');\n\t}\n\n\thtml_start_box(__('Import Template'), '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $fields_template_import\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tprint '<div id=\"contents\"></div>';\n\n\tform_hidden_box('save_component_import','1','');\n\n\tform_save_button('', 'import', 'import', false);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#import_file').change(function() {\n\t\t\tvar form = $('#import')[0];\n\t\t\tvar data = new FormData(form);\n\n\t\t\tPace.start();\n\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t\turl: (urlPath != '/' ? urlPath + '/':'') + 'templates_import.php?preview_only=true',\n\t\t\t\tdata: data,\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tcache: false,\n\t\t\t\ttimeout: 600000,\n\t\t\t\tsuccess: function (data) {\n\t\t\t\t\tif ($('#contents').length == 0) {\n\t\t\t\t\t\t$('#main').append('<div id=\"contents\"></div>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#contents').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#contents').html(data);\n\n\t\t\t\t\tif ($('#templates_import_save2_child').length) {\n\t\t\t\t\t\tapplySelectorVisibilityAndActions();\n\n\t\t\t\t\t\t$('#templates_import_save2_child').find('tr[id^=\"line_import_new_\"]').each(function(event) {\n\t\t\t\t\t\t\tselectUpdateRow(event, $(this));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tPace.stop();\n\t\t\t\t},\n\t\t\t\terror: function (e) {\n\t\t\t\t\tif ($('#contents').length == 0) {\n\t\t\t\t\t\t$('#main').append('<div id=\"contents\"></div>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#contents').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#contents').html(data);\n\n\t\t\t\t\tPace.stop();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction is_tmp_writable($tmp_dir) {\n\t$tmp_dir = sys_get_temp_dir();\n\t$tmp_len = strlen($tmp_dir);\n\t$tmp_dir .= ($tmp_len !== 0 && substr($tmp_dir, -$tmp_len) === '/') ? '': '/';\n\t$is_tmp = is_resource_writable($tmp_dir);\n\n\treturn $is_tmp;\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tree.php",
          "type": "blob",
          "size": 62.736328125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/data_query.php');\n\n$actions = array(\n\t1 => __x('dropdown action', 'Delete'),\n\t2 => __x('dropdown action', 'Publish'),\n\t3 => __x('dropdown action', 'Un-Publish'),\n\t4 => __x('dropdown action', 'Un-Lock')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') != '') {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'tree_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t),\n\t\t'leaf_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t),\n\t\t'graph_tree_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t),\n\t\t'parent_item_id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t),\n\t\t'parent' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'position' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t),\n\t\t'nodeid' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t),\n\t\t'id' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters);\n\t/* ================= input validation ================= */\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'sortasc':\n\t\ttree_sort_name_asc();\n\t\theader('Location: tree.php');\n\n\t\tbreak;\n\tcase 'sortdesc':\n\t\ttree_sort_name_desc();\n\t\theader('Location: tree.php');\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\ttree_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'sites':\n\t\tdisplay_sites();\n\n\t\tbreak;\n\tcase 'hosts':\n\t\tdisplay_hosts();\n\n\t\tbreak;\n\tcase 'graphs':\n\t\tdisplay_graphs();\n\n\t\tbreak;\n\tcase 'tree_up':\n\t\ttree_up();\n\n\t\tbreak;\n\tcase 'tree_down':\n\t\ttree_down();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\ttree_dnd();\n\n\t\tbreak;\n\tcase 'lock':\n\t\tapi_tree_lock(get_request_var('id'), $_SESSION[SESS_USER_ID]);\n\t\ttree_edit(true);\n\n\t\tbreak;\n\tcase 'unlock':\n\t\tapi_tree_unlock(get_request_var('id'), $_SESSION[SESS_USER_ID]);\n\t\ttree_edit(true);\n\n\t\tbreak;\n\tcase 'copy_node':\n\t\tapi_tree_copy_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\n\t\tbreak;\n\tcase 'create_node':\n\t\tapi_tree_create_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('position'), get_nfilter_request_var('text'));\n\n\t\tbreak;\n\tcase 'delete_node':\n\t\tapi_tree_delete_node(get_request_var('tree_id'), get_request_var('id'));\n\n\t\tbreak;\n\tcase 'move_node':\n\t\tapi_tree_move_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\n\t\tbreak;\n\tcase 'rename_node':\n\t\tapi_tree_rename_node(get_request_var('tree_id'), get_request_var('id'), get_nfilter_request_var('text'));\n\n\t\tbreak;\n\tcase 'get_node':\n\t\tapi_tree_get_node(get_request_var('tree_id'), get_request_var('id'));\n\n\t\tbreak;\n\tcase 'get_host_sort':\n\t\tget_host_sort_type();\n\n\t\tbreak;\n\tcase 'set_host_sort':\n\t\tset_host_sort_type();\n\n\t\tbreak;\n\tcase 'get_branch_sort':\n\t\tget_branch_sort_type();\n\n\t\tbreak;\n\tcase 'set_branch_sort':\n\t\tset_branch_sort_type();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\t\ttree();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction tree_check_sequences() {\n\t$bad_seq = db_fetch_cell('SELECT COUNT(sequence)\n\t\tFROM graph_tree\n\t\tWHERE sequence <= 0');\n\n\t$dup_seq = db_fetch_cell('SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM graph_tree\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1');\n\n\t// report any bad or duplicate sequences to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY sequence, id;');\n\t}\n}\n\nfunction tree_sort_name_asc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name;');\n}\n\nfunction tree_sort_name_desc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name DESC;');\n}\n\nfunction tree_down() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq + 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php');\n\n\texit;\n}\n\nfunction tree_up() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq - 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php');\n\n\texit;\n}\n\nfunction tree_dnd() {\n\tif (isset_request_var('tree_ids') && is_array(get_nfilter_request_var('tree_ids'))) {\n\t\t$tids     = get_nfilter_request_var('tree_ids');\n\t\t$sequence = 1;\n\n\t\tforeach ($tids as $id) {\n\t\t\t$id = str_replace('line', '', $id);\n\t\t\tinput_validate_input_number($id, 'id');\n\n\t\t\tdb_execute_prepared('UPDATE graph_tree\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\n\t\t/**\n\t\t * Save the last time a tree branch was created/updated\n\t\t * for Caching.\n\t\t */\n\t\tset_config_option('time_last_change_branch', time());\n\t}\n\n\theader('Location: tree.php');\n\n\texit;\n}\n\nfunction get_host_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach ($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch, 'branch');\n\n\t\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT host_grouping_type\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif ($sort_type == HOST_GROUPING_GRAPH_TEMPLATE) {\n\t\t\t\t\t\tprint 'hsgt';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint 'hsdq';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}\n\nfunction set_host_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach ($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch, 'branch');\n\n\t\t\t\t\tif (get_request_var('type') == 'hsgt') {\n\t\t\t\t\t\t$type = HOST_GROUPING_GRAPH_TEMPLATE;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$type = HOST_GROUPING_DATA_QUERY_INDEX;\n\t\t\t\t\t}\n\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\tSET host_grouping_type = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($type, $branch));\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn;\n}\n\nfunction get_branch_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach ($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\n\t\t\t\t\tinput_validate_input_number($branch, 'branch');\n\n\t\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT sort_children_type\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tswitch($sort_type) {\n\t\t\t\t\t\tcase TREE_ORDERING_INHERIT:\n\t\t\t\t\t\t\tprint __x('ordering of tree items', 'inherit');\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TREE_ORDERING_NONE:\n\t\t\t\t\t\t\tprint __x('ordering of tree items', 'manual');\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TREE_ORDERING_ALPHABETIC:\n\t\t\t\t\t\t\tprint __x('ordering of tree items', 'alpha');\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TREE_ORDERING_NATURAL:\n\t\t\t\t\t\t\tprint __x('ordering of tree items', 'natural');\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TREE_ORDERING_NUMERIC:\n\t\t\t\t\t\t\tprint __x('ordering of tree items', 'numeric');\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tprint '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tprint '';\n\t}\n}\n\nfunction set_branch_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach ($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch, 'branch');\n\n\t\t\t\t\tswitch(get_request_var('type')) {\n\t\t\t\t\t\tcase 'inherit':\n\t\t\t\t\t\t\t$type = TREE_ORDERING_INHERIT;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t\t$type = TREE_ORDERING_NONE;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'alpha':\n\t\t\t\t\t\t\t$type = TREE_ORDERING_ALPHABETIC;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'natural':\n\t\t\t\t\t\t\t$type = TREE_ORDERING_NATURAL;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\t\t$type = TREE_ORDERING_NUMERIC;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is_numeric($type) && is_numeric($branch)) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\t\tSET sort_children_type = ?\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($type, $branch));\n\t\t\t\t\t}\n\n\t\t\t\t\t$first_child = db_fetch_row_prepared('SELECT id, graph_tree_id\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE parent = ?\n\t\t\t\t\t\tORDER BY position\n\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\t\tapi_tree_sort_branch($first_child['id'], $first_child['graph_tree_id']);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\t/* clear graph tree cache on save - affects current user only, other users should see changes in <5 minutes */\n\tif (isset($_SESSION['dhtml_tree'])) {\n\t\tunset($_SESSION['dhtml_tree']);\n\t}\n\n\tif (isset_request_var('save_component_tree')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('sequence');\n\t\t/* ==================================================== */\n\n\t\tif (get_filter_request_var('id') > 0) {\n\t\t\t$prev_order = db_fetch_cell_prepared('SELECT sort_type\n\t\t\t\tFROM graph_tree\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('id')));\n\t\t} else {\n\t\t\t$prev_order = 1;\n\t\t}\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['sort_type']     = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '', true, 3);\n\t\t$save['last_modified'] = date('Y-m-d H:i:s', time());\n\t\t$save['enabled']       = get_request_var('enabled') == 'true' || get_request_var('enabled') == 'on' ? 'on':'off';\n\t\t$save['modified_by']   = $_SESSION[SESS_USER_ID];\n\n\t\tif (isempty_request_var('sequence')) {\n\t\t\t$save['sequence'] = api_tree_get_max_sequence() + 1;\n\t\t} else {\n\t\t\t$save['sequence'] = get_request_var('sequence');\n\t\t}\n\n\t\tif (empty($save['id'])) {\n\t\t\t$save['user_id'] = $_SESSION[SESS_USER_ID];\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$tree_id = sql_save($save, 'graph_tree');\n\n\t\t\tif ($tree_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* sort the tree using the algorithm chosen by the user */\n\t\t\t\tif ($save['sort_type'] != $prev_order) {\n\t\t\t\t\tif ($save['sort_type'] != TREE_ORDERING_NONE) {\n\t\t\t\t\t\tsort_recursive(0, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (empty($save['id'])) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Save the last time a tree was created/updated\n\t\t\t\t\t * for Caching.\n\t\t\t\t\t */\n\t\t\t\t\tset_config_option('time_last_change_tree', time());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader(\"Location: tree.php?action=edit&id=$tree_id\");\n\n\t\texit;\n\t}\n}\n\nfunction sort_recursive($branch, $tree_id) {\n\t$leaves = db_fetch_assoc_prepared('SELECT *\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $branch));\n\n\tif (cacti_sizeof($leaves)) {\n\t\tforeach ($leaves as $leaf) {\n\t\t\tif ($leaf['sort_children_type'] == TREE_ORDERING_INHERIT) {\n\t\t\t\t$first_child = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE parent = ?',\n\t\t\t\t\tarray($leaf['id']));\n\n\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\tapi_tree_sort_branch($first_child, $tree_id);\n\n\t\t\t\t\tif (leaves_exist($leaf['id'], $tree_id)) {\n\t\t\t\t\t\tsort_recursive($first_child, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction leaves_exist($parent, $tree_id) {\n\treturn db_fetch_assoc_prepared('SELECT COUNT(*)\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $parent));\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_tree WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM graph_tree_items WHERE ' . array_to_sql_or($selected_items, 'graph_tree_id'));\n\n\t\t\t\t/**\n\t\t\t\t * Save the last time a tree or branch was created/updated\n\t\t\t\t * for Caching.\n\t\t\t\t */\n\t\t\t\tset_config_option('time_last_change_tree', time());\n\t\t\t\tset_config_option('time_last_change_branch', time());\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='on',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION[SESS_USER_ID] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t/**\n\t\t\t\t * Save the last time a tree or branch was created/updated\n\t\t\t\t * for Caching.\n\t\t\t\t */\n\t\t\t\tset_config_option('time_last_change_tree', time());\n\t\t\t\tset_config_option('time_last_change_branch', time());\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // un-publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='off',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION[SESS_USER_ID] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t/**\n\t\t\t\t * Save the last time a tree or branch was created/updated\n\t\t\t\t * for Caching.\n\t\t\t\t */\n\t\t\t\tset_config_option('time_last_change_tree', time());\n\t\t\t\tset_config_option('time_last_change_branch', time());\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // un-lock\n\t\t\t\tdb_execute('UPDATE graph_tree\n\t\t\t\t\tSET locked=0,\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=' . $_SESSION[SESS_USER_ID] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: tree.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the selected items */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_tree WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'tree.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following Tree.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Trees.'),\n\t\t\t\t\t'scont'    => __('Delete Tree'),\n\t\t\t\t\t'pcont'    => __('Delete Trees')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Publish the following Tree.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Publish following Trees.'),\n\t\t\t\t\t'scont'    => __('Publish Tree'),\n\t\t\t\t\t'pcont'    => __('Publish Trees')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Un-Publish the following Tree.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Un-Publish following Trees.'),\n\t\t\t\t\t'scont'    => __('Un-Publish Tree'),\n\t\t\t\t\t'pcont'    => __('Un-Publish Trees')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Un-Lock the following Tree.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Un-Lock following Trees.'),\n\t\t\t\t\t'scont'    => __('Un-Lock Tree'),\n\t\t\t\t\t'pcont'    => __('Un-Lock Trees')\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction tree_edit($partial = false) {\n\tglobal $fields_tree_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('type');\n\t/* ==================================================== */\n\n\tload_current_session_value('type', 'sess_tree_edit_type', '0');\n\n\tif (!isempty_request_var('id')) {\n\t\t$tree = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_tree\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('Trees [edit: %s]', $tree['name']);\n\n\t\t// Reset the cookie state if tree id has changed\n\t\tif (isset($_SESSION['sess_tree_id']) && $_SESSION['sess_tree_id'] != get_request_var('id')) {\n\t\t\t$select_first = true;\n\t\t} else {\n\t\t\t$select_first = false;\n\t\t}\n\n\t\t$_SESSION['sess_tree_id'] = get_request_var('id');\n\t} else {\n\t\t$tree = array();\n\n\t\t$header_label = __('Trees [new]');\n\t}\n\n\tprint '<div id=\"tree_edit_container\">';\n\n\tform_start('tree.php', 'tree_edit');\n\n\t// Remove inherit from the main tree option\n\tunset($fields_tree_edit['sort_type']['array'][0]);\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!cacti_sizeof($tree)) {\n\t\tunset($fields_tree_edit['enabled']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_tree_edit, (isset($tree) ? $tree : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$lockdiv  = '';\n\t$editable = true;\n\n\tif (isset($tree['locked']) && $tree['locked'] == 0) {\n\t\t$lockdiv  = \"<div style='padding:5px 5px 5px 0px'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='lock' value='\" . __esc('Edit Tree') . \"'></td><td style='font-weight:bold;'>\" . __('To Edit this tree, you must first lock it by pressing the Edit Tree button.') . \"</td></tr></table></div>\\n\";\n\t\t$editable = false;\n\t} elseif (isset($tree['locked']) && $tree['locked'] == 1) {\n\t\t$lockdiv = \"<div style='padding:5px 5px 5px 0px'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='unlock' value='\" . __esc('Finish Editing Tree') . \"'></td><td><input type='button' class='ui-button ui-corner-all ui-widget' id='addbranch' value='\" . __esc('Add Root Branch') . \"' onClick='createNode()'></td><td style='font-weight:bold;'>\" . __('This tree has been locked for Editing on %s by %s.', $tree['locked_date'], get_username($tree['modified_by']));\n\n\t\tif ($tree['modified_by'] == $_SESSION[SESS_USER_ID]) {\n\t\t\t$lockdiv .= '</td></tr></table></div>';\n\t\t} else {\n\t\t\t$editable = false;\n\t\t\t$lockdiv .= __('To edit the tree, you must first unlock it and then lock it as yourself') . '</td></tr></table></div>';\n\t\t}\n\t} else {\n\t\t$tree['id'] = 0;\n\t}\n\n\tif ($editable) {\n\t\tform_save_button('tree.php', 'return');\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tprint $lockdiv;\n\t}\n\n\tprint '</div>';\n\n\tif ($partial) {\n\t\treturn;\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tprint \"<table class='treeTable' style='width:100%;'>\\n\";\n\n\t\tprint \"<tr class='even' id='tree_filter'>\\n\";\n\t\tprint \"<td colspan='4'>\";\n\t\tprint '<table><tr><td>' . __('Display') . '</td>';\n\t\tprint \"<td>\\n\";\n\t\tprint \"<select id='element'>\\n\";\n\t\tprint \"<option id='0'>\" . __('All') . '</option>';\n\t\tprint \"<option id='1'>\" . __('Sites') . '</option>';\n\t\tprint \"<option id='2'>\" . __('Devices') . '</option>';\n\t\tprint \"<option id='3'>\" . __('Graphs') . '</option>';\n\t\tprint '</select></td></tr></table></td></tr>';\n\n\t\tprint \"<tr class='tableRow'><td class='treeArea'>\\n\";\n\n\t\thtml_start_box(__('Tree Items'), '100%', '', '3', 'center', '');\n\n\t\tprint \"<tr class='tableRow'><td style='padding:7px;'><div id='ctree'></div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaSite'>\\n\";\n\n\t\thtml_start_box(__('Available Sites'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_sites' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='sfilter' name='sfilter' size='25' value='<?php print html_escape_request_var('sfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Site Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr class='tableRow'><td style='padding:7px;'><div id='sites' style='display:none;'>\\n\";\n\t\tdisplay_sites();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaDevice'>\\n\";\n\n\t\thtml_start_box(__('Available Devices'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_devices' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='hfilter' name='hfilter' size='25' value='<?php print html_escape_request_var('hfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Device Description'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr class='tableRow'><td style='padding:7px;'><div id='hosts' style='display:none;'>\\n\";\n\t\tdisplay_hosts();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaGraph'>\\n\";\n\n\t\thtml_start_box(__('Available Graphs'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_graphs' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text'  class='ui-state-default ui-corner-all' id='gfilter' name='gfilter' size='25' value='<?php print html_escape_request_var('gfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Graph Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr class='tableRow'><td style='padding:7px;'><div id='graphs' style='display:none;'>\\n\";\n\t\tdisplay_graphs();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td></tr></table>\\n\";\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t<?php\n\t\tif ($select_first) {\n\t\t\tprint \"var reset=true;\\n\";\n\t\t} else {\n\t\t\tprint \"var reset=false;\\n\";\n\t\t}\n\t\t?>\n\n\t\tvar hostSortInfo   = {};\n\t\tvar branchSortInfo = {};\n\t\tvar selectedItem   = {};\n\n\t\tif ($('#lock').length) {\n\t\t\tvar editable = false;\n\t\t} else {\n\t\t\tvar editable = true;\n\t\t}\n\n\t\tfunction createNode() {\n\t\t\tvar ref = $('#ctree').jstree(true);\n\t\t\tsel = ref.create_node('#', '<?php print __esc('New Node');?>', '0');\n\t\t\tif (sel) {\n\t\t\t\tref.edit(sel);\n\t\t\t}\n\t\t};\n\n\t\tfunction loadTreeEdit(url) {\n\t\t\tvar myMagic = csrfMagicToken;\n\n\t\t\t$.post(url, { __csrf_magic: csrfMagicToken })\n\t\t\t.done(function(data) {\n\t\t\t\t$('#tree_edit_container').replaceWith(data);\n\t\t\t\t$('#tree_edit').append('<input type=\"hidden\" name=\"__csrf_magic\" value=\"'+myMagic+'\">');\n\t\t\t\tinitializeTreeEdit();\n\t\t\t\tapplySkin();\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t\t}\n\n\t\tfunction getGraphData() {\n\t\t\t$.get('tree.php?action=graphs&filter='+$('#gfilter').val()\n\t\t\t\t+ '&site_id=' + (selectedItem.site_id ? selectedItem.site_id:'')\n\t\t\t\t+ '&host_id=' + (selectedItem.host_id ? selectedItem.host_id:''))\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#graphs').jstree('destroy');\n\t\t\t\t\t$('#graphs').html(data);\n\t\t\t\t\tdragable('graphs');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getHostData() {\n\t\t\t$.get('tree.php?action=hosts&filter='+$('#hfilter').val()\n\t\t\t\t+ '&site_id=' + (selectedItem.site_id ? selectedItem.site_id:''))\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#hosts').jstree('destroy');\n\t\t\t\t\t$('#hosts').html(data);\n\t\t\t\t\tdragable('hosts');\n\t\t\t\t\tdragable('graphs');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getSiteData() {\n\t\t\t$.get('tree.php?action=sites&filter='+$('#sfilter').val(), function(data) {\n\t\t\t\t$('#sites').jstree('destroy');\n\t\t\t\t$('#sites').html(data);\n\t\t\t\tdragable('sites');\n\t\t\t\tdragable('hosts');\n\t\t\t\tdragable('graphs');\n\t\t\t\tenableKeyups();\n\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortIcon(nodeid) {\n\t\t\tif (hostSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_host_sort&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\thostSortInfo[nodeid] = data;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortIcon(nodeid) {\n\t\t\tif (branchSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_branch_sort&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\tbranchSortInfo[nodeid] = data;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction getHostSortIcon(type, nodeid) {\n\t\t\tif (hostSortInfo[nodeid] == type) {\n\t\t\t\treturn 'ti ti-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction getBranchSortIcon(type, nodeid) {\n\t\t\tif (branchSortInfo[nodeid] == type) {\n\t\t\t\treturn 'ti ti-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_branch_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t.done(function(data) {\n\t\t\t\tbranchSortInfo[nodeid] = type;\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_host_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t.done(function(data) {\n\t\t\t\thostSortInfo[nodeid] = type;\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t\t}\n\n\t\tfunction initializeTreeEdit() {\n\t\t\t$('#lock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=lock&id=<?php print $tree['id'];?>';\n\n\t\t\t\tloadTreeEdit(strURL);\n\n\t\t\t\t$('#sfilter, #hfilter, #gfilter').each(function() {\n\t\t\t\t\t$(this).prop('disabled', false);\n\t\t\t\t\t$(this).removeClass('ui-state-disabled');\n\t\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t\t$(this).selectmenu('enable');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\teditable = true;\n\t\t\t\treset    = false;\n\n\t\t\t\tdrawTree();\n\n\t\t\t\tdragable('graphs');\n\t\t\t\tdragable('hosts');\n\t\t\t\tdragable('sites');\n\n\t\t\t\tenableKeyups();\n\t\t\t});\n\n\t\t\t$('#unlock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=unlock&id=<?php print $tree['id'];?>';\n\n\t\t\t\tloadTreeEdit(strURL);\n\n\t\t\t\t$('#sfilter, #hfilter, #gfilter').each(function() {\n\t\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t\t$(this).addClass('ui-state-disabled');\n\t\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t\t$(this).selectmenu('disable');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\teditable = false;\n\t\t\t\treset    = false;\n\n\t\t\t\tdrawTree();\n\n\t\t\t\tdragable('graphs');\n\t\t\t\tdragable('hosts');\n\t\t\t\tdragable('sites');\n\n\t\t\t\tenableKeyups();\n\t\t\t});\n\n\t\t\tif ($('#lock').length) {\n\t\t\t\teditable = false;\n\n\t\t\t\t$('select, input').not('#lock, #element').each(function() {\n\t\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t\t$(this).addClass('ui-state-disabled');\n\n\t\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t\t$(this).selectmenu('disable');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teditable = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction drawTree() {\n\t\t\tif (editable) {\n\t\t\t\tvar plugins = [ 'state', 'wholerow', 'contextmenu', 'dnd', 'types' ];\n\t\t\t} else {\n\t\t\t\tvar plugins = [ 'state', 'wholerow', 'types' ];\n\t\t\t}\n\n\t\t\tif ($('#ctree').jstree('instance')) {\n\t\t\t\t$('#ctree').jstree('destroy');\n\t\t\t}\n\n\t\t\t$(\"#ctree\").jstree({\n\t\t\t\t'types' : {\n\t\t\t\t\t'site' : {\n\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'device' : {\n\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'graph' : {\n\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'contextmenu' : {\n\t\t\t\t\t'items': function(node) {\n\t\t\t\t\t\tif (node.id.search('tgraph') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'graph';\n\t\t\t\t\t\t} else if (node.id.search('thost') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'host';\n\t\t\t\t\t\t} else if (node.id.search('tsite') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'site';\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tvar dataType = 'branch';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dataType == 'graph') {\n\t\t\t\t\t\t\treturn graphContext(node.id);\n\t\t\t\t\t\t} else if (dataType == 'host') {\n\t\t\t\t\t\t\treturn hostContext(node.id);\n\t\t\t\t\t\t} else if (dataType == 'site') {\n\t\t\t\t\t\t\treturn siteContext(node.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn branchContext(node.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'core' : {\n\t\t\t\t\t'data' : {\n\t\t\t\t\t\t'url' : 'tree.php?action=get_node&tree_id='+$('#id').val(),\n\t\t\t\t\t\t'data' : function(node) {\n\t\t\t\t\t\t\treturn { 'id' : node.id }\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t'check_callback' : true,\n\t\t\t\t\t'force_text' : true\n\t\t\t\t},\n\t\t\t\t'themes' : {\n\t\t\t\t\t'name' : 'default',\n\t\t\t\t\t'responsive' : true,\n\t\t\t\t\t'url' : true,\n\t\t\t\t\t'dots' : false\n\t\t\t\t},\n\t\t\t\t'state': { 'key': 'tree_<?php print get_request_var('id');?>' },\n\t\t\t\t'plugins' : plugins\n\t\t\t})\n\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\tif (reset == true) {\n\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t}\n\n\t\t\t\tif (!editable) {\n\t\t\t\t\t$(\"#ctree\").children().on('contextmenu', function(event) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('delete_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=delete_node', { 'id' : data.node.id, 'tree_id' : $('#id').val() })\n\t\t\t\t\t.always(function() {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t.on('hover_node.jstree', function (e, data) {\n\t\t\t\tif (data.node.id.search('thost') >= 0) {\n\t\t\t\t\tsetHostSortIcon(data.node.id);\n\t\t\t\t} else if (data.node.id.search('thost') < 0 && data.node.id.search('tgraph') < 0 && data.node.id.search('tsite')) {\n\t\t\t\t\tsetBranchSortIcon(data.node.id);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('create_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=create_node', { 'id' : data.node.parent, 'tree_id' : $('#id').val(), 'position' : data.position, 'text' : data.node.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tdata.instance.set_id(data.node, d.id);\n\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\tdata.instance.edit(data.node);\n\n\t\t\t\t\t\tif (d.text != '<?php print __esc('New Node');?>') {\n\t\t\t\t\t\t\t$('.jstree').jstree(true).refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('rename_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=rename_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'text' : data.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tif (d.result == 'false') {\n\t\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\t\tdata.instance.edit(data.node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('move_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=move_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t.always(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('copy_node.jstree', function (e, data) {\n\t\t\t\toid = data.original.id;\n\n\t\t\t\tif (oid.search('thost') >= 0) {\n\t\t\t\t\t$('#hosts').jstree().deselect_all();\n\t\t\t\t} else if (oid.search('tsite') >= 0) {\n\t\t\t\t\t$('#sites').jstree().deselect_all();\n\t\t\t\t} else {\n\t\t\t\t\t$('#graphs').jstree().deselect_all();\n\t\t\t\t}\n\n\t\t\t\t$.get('?action=copy_node', { 'id' : data.original.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t.always(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction enableKeyups() {\n\t\t\t$('#gfilter').delayKeyup(getGraphData);\n\n\t\t\t$('#hfilter').delayKeyup(getHostData);\n\n\t\t\t$('#sfilter').delayKeyup(getSiteData);\n\t\t}\n\n\t\tfunction resizer() {\n\t\t\tif ($('#ctree').length) {\n\t\t\t\tvar wheight = $(window).height();\n\t\t\t\tvar cTop    = $('#ctree').parent().offset().top;\n\t\t\t\tvar sTop    = $('#sites').parent().offset().top;\n\t\t\t\tvar height  = wheight - cTop - 10;\n\t\t\t\tvar sheight = wheight - sTop - 10;\n\n\t\t\t\t$('#ctree').css('height', height).css('overflow','auto');\n\t\t\t\t$('#hosts').css('height', sheight).css('overflow','auto');\n\t\t\t\t$('#sites').css('height', sheight).css('overflow','auto');\n\t\t\t\t$('#graphs').css('height', sheight).css('overflow','auto');\n\n\t\t\t\tswitchDisplay();\n\t\t\t}\n\t\t}\n\n\t\tfunction switchDisplay() {\n\t\t\tvar selected = $('#element').prop('selectedIndex');\n\t\t\tvar windowWidth = parseInt($(window).outerWidth());\n\t\t\tvar clientWidth = parseInt($(document).width());\n\n\t\t\tif (selected == 0) {\n\t\t\t\tif (clientWidth > windowWidth) {\n\t\t\t\t\t$('#element').prop('selectedIndex', 1);\n\t\t\t\t\tif ($('#element').selectmenu('instance')) {\n\t\t\t\t\t\t$('#element').selectmenu('refresh');\n\t\t\t\t\t}\n\t\t\t\t\tselected = $('#element').prop('selectedIndex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch(selected) {\n\t\t\t\tcase 0:\n\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tgraphsDropSet = '';\n\t\thostsDropSet  = '';\n\t\tsitesDropSet  = '';\n\n\t\t$(function() {\n\t\t\tdrawTree();\n\n\t\t\tif ($('#unlock').length) {\n\t\t\t\tenableKeyups();\n\n\t\t\t\t$('select, input').each(function() {\n\t\t\t\t\t$(this).prop('disabled', false);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$('select, input').not('#lock, #element').each(function() {\n\t\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t\t$(this).addClass('ui-state-disabled');\n\n\t\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t\t$(this).selectmenu('disable');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('form').unbind().submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif ($(this).attr('id') == 'tree_edit') {\n\t\t\t\t\tvar options = {\n\t\t\t\t\t\turl: 'tree.php',\n\t\t\t\t\t}\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\taction: 'save',\n\t\t\t\t\t\tname: $('#name').val(),\n\t\t\t\t\t\tsort_type: $('#sort_type').val(),\n\t\t\t\t\t\tenabled: $('#enabled').is(':checked'),\n\t\t\t\t\t\tid: $('#id').val(),\n\t\t\t\t\t\tsave_component_tree: 1,\n\t\t\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t\t\t}\n\n\t\t\t\t\tpostUrl(options, data);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar height  = parseInt($(window).height()-$('#ctree').offset().top-10)+'px';\n\t\t\tvar sheight = parseInt($(window).height()-$('#sites').offset().top-10)+'px';\n\t\t\tvar hheight = parseInt($(window).height()-$('#hosts').offset().top-10)+'px';\n\t\t\tvar gheight = parseInt($(window).height()-$('#graphs').offset().top-10)+'px';\n\n\t\t\t$('#element').change(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\t$(window).resize(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\tinitializeTreeEdit();\n\n\t\t\t$('#ctree').css('height', height).css('overflow','auto');;\n\n\t\t\tdragable('graphs');\n\t\t\tdragable('hosts');\n\t\t\tdragable('sites');\n\t\t});\n\n\t\tfunction dragable(element) {\n\t\t\tvar id = '#'+element;\n\t\t\tvar divdata = '';\n\n\t\t\tif (editable) {\n\t\t\t\tvar plugins = [ 'wholerow', 'dnd', 'types' ];\n\t\t\t} else {\n\t\t\t\tvar plugins = [ 'wholerow', 'types' ];\n\t\t\t}\n\n\t\t\t// We have to reload the various trees due\n\t\t\t// to plugins being imutable after load\n\t\t\t// so reconstruct the tree from the current elements\n\t\t\t// destroy the tree, and repaint to elements\n\t\t\t// as they would have been.\n\t\t\tif ($(id).hasClass('jstree')) {\n\t\t\t\t$(id).find('.jstree-node').each(function() {\n\t\t\t\t\tvar text   = DOMPurify.sanitize($(this).find('.jstree-anchor').text());\n\t\t\t\t\tvar id     = $(this).attr('id');\n\t\t\t\t\tvar jsdata = $(this).attr('data-jstree');\n\n\t\t\t\t\tdivdata += \"<ul><li id='\" + id + \"' data-jstree='\" + jsdata + \"'>\" + text + '</li></ul>';\n\t\t\t\t});\n\n\t\t\t\t$(id).jstree('destroy').html(divdata);\n\t\t\t}\n\n\t\t\t$(id)\n\t\t\t.jstree({\n\t\t\t\t'types' : {\n\t\t\t\t\t'site' : {\n\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'device' : {\n\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'graph' : {\n\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'core' : {\n\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t'check_callback' : function(operation, node, node_parent, node_position, more) {\n\t\t\t\t\t\treturn false;  // not dragging onto self\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'dnd' : {\n\t\t\t\t\t'always_copy' : true,\n\t\t\t\t\t'check_while_dragging': true\n\t\t\t\t},\n\t\t\t\t'themes' : { 'stripes' : true },\n\t\t\t\t'plugins' : plugins\n\t\t\t})\n\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\tif (reset == true) {\n\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (editable) {\n\t\t\t\t$(id)\n\t\t\t\t.on('select_node.jstree', function(e, data) {\n\t\t\t\t\tif (element == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('activate_node.jstree', function(e, data) {\n\t\t\t\t\tif (element == 'sites') {\n\t\t\t\t\t\tvar sites = [];\n\n\t\t\t\t\t\t$('#sites').find('.jstree-clicked').each(function() {\n\t\t\t\t\t\t\tsites.push(this.id.split(':')[1].replace('_anchor', ''));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tselectedItem.site_id = sites;\n\t\t\t\t\t\tselectedItem.host_id = '';\n\t\t\t\t\t\tgetHostData();\n\t\t\t\t\t\tgetGraphData();\n\t\t\t\t\t} else if (element == 'hosts'){\n\t\t\t\t\t\tvar hosts = [];\n\n\t\t\t\t\t\t$('#hosts').find('.jstree-clicked').each(function() {\n\t\t\t\t\t\t\thosts.push(this.id.split(':')[1].replace('_anchor', ''));\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tselectedItem.host_id = hosts;\n\t\t\t\t\t\tgetGraphData();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('deselect_node.jstree', function(e, data) {\n\t\t\t\t\tif (element == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$(id).find('.jstree-ocl').hide();\n\t\t\t$(id).children().bind('contextmenu', function(event) {\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t$(id).show();\n\t\t}\n\n\t\tfunction branchContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'create' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-folder-filled',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Create');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, 'last', function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'rename' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-pencil',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Rename');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-x',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bst' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-caret-up-down-filled',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Branch Sorting');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'inherit' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('inherit', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Inherit');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('inherit', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'manual' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('manual', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Manual');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('manual', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'alpha' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('alpha', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Alphabetic');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('alpha', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'natural' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('natural', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Natural');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('natural', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'numeric' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('numeric', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Numeric');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('numeric', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-scissors',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'paste' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-clipboard-copy',\n\t\t\t\t\t\t\t'_disabled'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Paste');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction graphContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-x',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false, //(this.check('delete_node', data.reference, this.get_parent(data.reference), '')),\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-scissors',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction siteContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-x',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction hostContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-x',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'hso' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-caret-up-down-filled',\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Sorting Type');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'hsgt' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsgt', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Graph Template');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsgt', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'hsdq' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsdq', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Data Query Index');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsdq', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-scissors',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'ti ti-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __esc('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t</script>\n\t\t<?php\n\t}\n}\n\nfunction display_sites() {\n\tif (get_nfilter_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE\n\t\t\tname LIKE '\t   . db_qstr('%' . get_nfilter_request_var('filter') . '%') . '\n\t\t\tOR city LIKE '\t. db_qstr('%' . get_nfilter_request_var('filter') . '%') . '\n\t\t\tOR state LIKE '   . db_qstr('%' . get_nfilter_request_var('filter') . '%') . '\n\t\t\tOR country LIKE ' . db_qstr('%' . get_nfilter_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sites = db_fetch_assoc(\"SELECT * FROM sites $sql_where\");\n\n\tif (cacti_sizeof($sites)) {\n\t\tforeach ($sites as $s) {\n\t\t\tprint \"<ul><li id='tsite:\" . $s['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"site\\\"}'>\" . html_escape($s['name']) . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_hosts() {\n\t$sql_where = '';\n\n\t$site_ids = get_filter_request_var('site_id', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\n\tif (get_nfilter_request_var('filter') != '') {\n\t\t$sql_where .= 'h.hostname LIKE ' . db_qstr('%' . get_nfilter_request_var('filter') . '%') . '\n\t\t\tOR h.description LIKE '\t  . db_qstr('%' . get_nfilter_request_var('filter') . '%');\n\t}\n\n\tif ($site_ids != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'h.site_id IN( ' . $site_ids . ')';\n\t}\n\n\t$hosts = get_allowed_devices($sql_where, 'description', read_config_option('autocomplete_rows'));\n\n\tif (cacti_sizeof($hosts)) {\n\t\tforeach ($hosts as $h) {\n\t\t\tprint \"<ul><li id='thost:\" . $h['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"device\\\"}'>\" . html_escape($h['description']) . ' (' . html_escape($h['hostname']) . ')' . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_graphs() {\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$site_ids = get_filter_request_var('site_id', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\t$host_ids = get_filter_request_var('host_id', FILTER_VALIDATE_IS_NUMERIC_LIST);\n\n\tif (get_nfilter_request_var('filter') != '') {\n\t\t$sql_where .= 'WHERE (title_cache LIKE ? OR gt.name LIKE ? OR hsc.field_value LIKE ?) AND local_graph_id > 0';\n\n\t\t$sql_params[] = '%' . get_nfilter_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_nfilter_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_nfilter_request_var('filter') . '%';\n\t} else {\n\t\t$sql_where .= 'WHERE local_graph_id > 0';\n\t}\n\n\tif ($site_ids != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ': 'WHERE ') . 'h.site_id IN( ' . $site_ids . ')';\n\t}\n\n\tif ($host_ids != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'gl.host_id IN( ' . $host_ids . ')';\n\t}\n\n\t$graphs = db_fetch_assoc_prepared(\"SELECT gtg.local_graph_id AS id,\n\t\tgtg.title_cache AS title, gt.name AS template_name,\n\t\tGROUP_CONCAT(DISTINCT hsc.field_name) AS field_name,\n\t\tGROUP_CONCAT(DISTINCT hsc.field_value) AS field_value\n\t\tFROM graph_templates_graph AS gtg\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id = gtg.graph_template_id\n\t\tLEFT JOIN graph_local AS gl\n\t\tON gtg.local_graph_id = gl.id\n\t\tLEFT JOIN host as h\n\t\tON gl.host_id = h.id\n\t\tLEFT JOIN host_snmp_cache AS hsc\n\t\tON hsc.host_id = h.id\n\t\tAND hsc.snmp_query_id = gl.snmp_query_id\n\t\tAND hsc.snmp_index = gl.snmp_index\n\t\t$sql_where\n\t\tGROUP BY gtg.local_graph_id\n\t\tORDER BY title_cache\n\t\tLIMIT \" . read_config_option('autocomplete_rows'),\n\t\t$sql_params);\n\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach ($graphs as $g) {\n\t\t\tif (get_nfilter_request_var('filter') != '') {\n\t\t\t\t$title = $g['title'];\n\n\t\t\t\tif ($g['field_value'] != '' && stripos($g['field_value'], get_nfilter_request_var('filter')) !== false) {\n\t\t\t\t\t$parts  = explode(',', $g['field_value']);\n\t\t\t\t\t$nparts = explode(',', $g['field_name']);\n\n\t\t\t\t\tforeach($parts as $index => $p) {\n\t\t\t\t\t\tif ($p != '' && stripos($p, get_nfilter_request_var('filter')) !== false) {\n\t\t\t\t\t\t\t$g['title'] .= \" [ {$nparts[$index]}:$p ]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_graph_allowed($g['id'])) {\n\t\t\t\tprint \"<ul><li id='tgraph:\" . $g['id'] . \"' data-jstree='{ \\\"type\\\": \\\"graph\\\" }'>\" . html_escape($g['title']) . '</li></ul>';\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction tree() {\n\tglobal $actions, $item_rows;\n\n\t$button1 = array(\n\t\t'method'   => 'button',\n\t\t'href'     => 'tree.php?action=sortasc',\n\t\t'callback' => true,\n\t\t'title'    => __esc('Sort Trees Ascending'),\n\t\t'class'    => 'ti ti-sort-ascending-letters'\n\t);\n\n\t$button2 = array(\n\t\t'method'   => 'button',\n\t\t'href'     => 'tree.php?action=sortdesc',\n\t\t'callback' => true,\n\t\t'title'    => __esc('Sort Trees Descending'),\n\t\t'class'    => 'ti ti-sort-descending-letters'\n\t);\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Trees'), 'tree.php', 'form_tree', 'sess_tree', 'tree.php?action=edit');\n\t$pageFilter->rows_label = __('Trees');\n\t$pageFilter->set_sort_array('sequence', 'ASC');\n\t$pageFilter->add_button('sortasc', $button1);\n\t$pageFilter->add_button('sortdesc', $button2);\n\n\t$pageFilter->render();\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= 'WHERE (t.name LIKE ? OR ti.title LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$trees = db_fetch_assoc_prepared(\"SELECT t.*,\n\t\tSUM(CASE WHEN ti.host_id > 0 THEN 1 ELSE 0 END) AS hosts,\n\t\tSUM(CASE WHEN ti.local_graph_id > 0 THEN 1 ELSE 0 END) AS graphs,\n\t\tSUM(CASE WHEN ti.local_graph_id = 0 AND host_id = 0 AND site_id = 0 THEN 1 ELSE 0 END) AS branches,\n\t\tSUM(CASE WHEN ti.site_id > 0 THEN 1 ELSE 0 END) AS sites\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\n\t\tGROUP BY t.id\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$sql = \"SELECT COUNT(DISTINCT(t.id))\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $sql_params, 'tree');\n\n\t$nav = html_nav_bar('tree.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\tform_start('tree.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Tree Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name by which this Tree will be referred to as.')\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Tree.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Published'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Unpublished Trees cannot be viewed from the Graph tab')\n\t\t),\n\t\t'locked' => array(\n\t\t\t'display' => __('Locked'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('A Tree must be locked in order to be edited.')\n\t\t),\n\t\t'user_id' => array(\n\t\t\t'display' => __('Owner'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The original author of this Tree.')\n\t\t),\n\t\t'sequence' => array(\n\t\t\t'display' => __('Order'),\n\t\t\t'align'   => 'center',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('To change the order of the trees, first sort by this column, press the up or down arrows once they appear.')\n\t\t),\n\t\t'last_modified' => array(\n\t\t\t'display' => __('Last Edited'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The date that this Tree was last edited.')\n\t\t),\n\t\t'modified_by' => array(\n\t\t\t'display' => __('Edited By'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The last user to have modified this Tree.')\n\t\t),\n\t\t'sites' => array(\n\t\t\t'display' => __('Sites'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of Site Branches in this Tree.')\n\t\t),\n\t\t'branches' => array(\n\t\t\t'display' => __('Branches'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of Branches in this Tree.')\n\t\t),\n\t\t'hosts' => array(\n\t\t\t'display' => __('Devices'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of individual Devices in this Tree.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __('The total number of individual Graphs in this Tree.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 1;\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$sequence = '';\n\n\t\t\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t\t\tif ($i == 1 && cacti_sizeof($trees) == 1) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == 1) {\n\t\t\t\t\t$sequence .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . htmlspecialchars('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == cacti_sizeof($trees)) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$sequence .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $tree['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($tree['name'], get_request_var('filter'), 'tree.php?action=edit&id=' . $tree['id']), $tree['id']);\n\t\t\tform_selectable_cell($tree['id'], $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['enabled'] == 'on' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell($tree['locked'] == '1' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell(get_username($tree['user_id']), $tree['id']);\n\t\t\tform_selectable_cell($sequence, $tree['id'], '', 'nowrap center');\n\t\t\tform_selectable_cell(substr($tree['last_modified'],0,16), $tree['id'], '', 'right');\n\t\t\tform_selectable_cell(get_username($tree['modified_by']), $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['sites'] > 0 ? number_format_i18n($tree['sites'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['branches'] > 0 ? number_format_i18n($tree['branches'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['hosts'] > 0 ? number_format_i18n($tree['hosts'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['graphs'] > 0 ? number_format_i18n($tree['graphs'], '-1'):'-', $tree['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($tree['name'], $tree['id']);\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No Trees Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($trees)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n\n\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t$('#tree2_child').attr('id', 'tree_ids');\n\n\t\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\n\t\t\t$('form#chk').find('table').unbind().tableDnD({\n\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\tloadUrl({url:'tree.php?action=ajax_dnd&'+$.tableDnD.serialize()})\n\t\t\t\t}\n\t\t\t});\n\t\t\t<?php } ?>\n\t\t});\n\t\t</script>\n\t\t<?php\n\t}\n}\n"
        },
        {
          "name": "user_admin.php",
          "type": "blob",
          "size": 79.72265625,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable'),\n\t5 => __('Batch Copy')\n);\n\nif (read_config_option('secpass_2fa_enabled') == 'on') {\n\t$actions[6] = __('Reset 2FA');\n}\n\nset_default_action();\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\t\tcase 'actions':\n\t\t\tform_actions();\n\n\t\t\tbreak;\n\t\tcase 'save':\n\t\t\tform_save();\n\n\t\t\tbreak;\n\t\tcase 'perm_remove':\n\t\t\tperm_remove();\n\n\t\t\tbreak;\n\t\tcase 'user_edit':\n\t\t\ttop_header();\n\t\t\tuser_edit();\n\t\t\tbottom_footer();\n\n\t\t\tbreak;\n\t\tcase 'checkpass':\n\t\t\t$error = secpass_check_pass(get_nfilter_request_var('password'));\n\n\t\t\tif ($error == '') {\n\t\t\t\tprint $error;\n\t\t\t} else {\n\t\t\t\tprint 'ok';\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif (!api_plugin_hook_function('user_admin_action', get_request_var('action'))) {\n\t\t\t\ttop_header();\n\t\t\t\tuser();\n\t\t\t\tbottom_footer();\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n}\n\nfunction update_policies() {\n\t$policies = array('policy_graphs', 'policy_trees', 'policy_hosts', 'policy_graph_templates');\n\n\tforeach ($policies as $p) {\n\t\tif (isset_request_var($p)) {\n\t\t\tdb_execute_prepared(\"UPDATE `user_auth` SET `$p` = ? WHERE `id` = ?\", array(get_filter_request_var($p), get_filter_request_var('id')));\n\t\t}\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $actions, $auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&tab=permsd&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&tab=permsg&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&tab=permste&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_groups')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(user_id, group_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND group_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&tab=permsgr&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&tab=permstr&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('selected_items')) {\n\t\tif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('selected_items');\n\t\t\tget_filter_request_var('new_realm');\n\t\t\t/* ==================================================== */\n\n\t\t\t$new_username  = get_nfilter_request_var('new_username');\n\t\t\t$new_realm     = get_nfilter_request_var('new_realm', 0);\n\n\t\t\t$template_user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('selected_items')));\n\n\t\t\t$overwrite     = array( 'full_name' => get_nfilter_request_var('new_fullname') );\n\n\t\t\tif ($new_username != '') {\n\t\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT username FROM user_auth WHERE username = ? AND realm = ?', array($new_username, $new_realm)))) {\n\t\t\t\t\traise_message(19);\n\t\t\t\t} else {\n\t\t\t\t\tif (user_copy($template_user['username'], $new_username, $template_user['realm'], $new_realm, false, $overwrite) === false) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tif ($_SESSION[SESS_USER_ID] != $selected_items[$i]) {\n\t\t\t\t\t\t\tuser_remove($selected_items[$i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message('attempt current', __('You are not allowed to delete the current login account'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_enable($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // disable\n\t\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tif ($_SESSION[SESS_USER_ID] != $selected_items[$i]) {\n\t\t\t\t\t\t\tuser_disable($selected_items[$i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message('attempt current', __('You are not allowed to disable the current login account'), MESSAGE_LEVEL_ERROR);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { // batch copy\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tget_filter_request_var('template_user');\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t$copy_error = false;\n\t\t\t\t\t$template   = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('template_user')));\n\n\t\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($selected_items[$i]));\n\n\t\t\t\t\t\tif ((isset($user)) && (isset($template))) {\n\t\t\t\t\t\t\tif (user_copy($template['username'], $user['username'], $template['realm'], $user['realm'], true) === false) {\n\t\t\t\t\t\t\t\t$copy_error = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($copy_error) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { // reset 2FA token and status\n\t\t\t\t\tforeach($selected_items as $user_id) {\n\t\t\t\t\t\tdisable_2fa($user_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t}\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($iarray)) {\n\t\t\t$user_id    = $iarray[0];\n\t\t\t$user_realm = db_fetch_cell_prepared('SELECT realm FROM user_auth WHERE id = ?', array($user_id));\n\t\t\t$template   = html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($user_id)));\n\t\t\t$usernames  = db_fetch_assoc('SELECT id, username FROM user_auth WHERE realm = 0 ORDER BY username');\n\t\t} else {\n\t\t\t$user_id    = null;\n\t\t\t$user_realm = null;\n\t\t\t$template   = null;\n\t\t\t$usernames  = null;\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'user_admin.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following User.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following Users.'),\n\t\t\t\t\t'scont'    => __('Delete User'),\n\t\t\t\t\t'pcont'    => __('Delete Users')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'message' => __('Click \\'Continue\\' to Copy the following User.'),\n\t\t\t\t\t'cont'    => __('Copy User'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'template_username' => array(\n\t\t\t\t\t\t\t'method'  => 'other',\n\t\t\t\t\t\t\t'title'   => __('Template Username'),\n\t\t\t\t\t\t\t'default' => $template\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'new_username' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Username'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'new_fullname' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Full Name'),\n\t\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t\t\t'width'   => 35\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'new_realm' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Realm'),\n\t\t\t\t\t\t\t'array'   => $auth_realms,\n\t\t\t\t\t\t\t'default' => $user_realm\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following User.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following Users.'),\n\t\t\t\t\t'scont'    => __('Enable User'),\n\t\t\t\t\t'pcont'    => __('Enable Users')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following User.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following Users.'),\n\t\t\t\t\t'scont'    => __('Disable User'),\n\t\t\t\t\t'pcont'    => __('Disable Users')\n\t\t\t\t),\n\t\t\t\t5 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Overwrite the User settings with the selected Template User settings and permissions.  The original User Full Name, Password, Realm and Enable status will be retained, all other fields will be overwritten from the Template User.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Overwrite the Users settings with the selected Template User settings and permissions.  The original Users Full Name, Password, Realm and Enable status will be retained, all other fields will be overwritten from the Template User.'),\n\t\t\t\t\t'scont'    => __('Replace User Settings for User'),\n\t\t\t\t\t'pcont'    => __('Replace User Settings for Users'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'new_realm' => array(\n\t\t\t\t\t\t\t'method'  => 'drop_array',\n\t\t\t\t\t\t\t'title'   => __('Template User'),\n\t\t\t\t\t\t\t'array'   => $usernames,\n\t\t\t\t\t\t\t'variable' => 'username',\n\t\t\t\t\t\t\t'id'       => 'id'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\t/* graph permissions */\n\tif ((isset_request_var('save_component_graph_perms')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('perm_graphs');\n\t\tget_filter_request_var('perm_trees');\n\t\tget_filter_request_var('perm_hosts');\n\t\tget_filter_request_var('perm_graph_templates');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\t$add_button_clicked = false;\n\n\t\tif (isset_request_var('add_graph_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graphs')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_tree_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_trees')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_host_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_hosts')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_graph_template_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graph_templates')));\n\n\t\t\t$add_button_clicked = true;\n\t\t}\n\n\t\tif ($add_button_clicked == true) {\n\t\t\theader('Location: user_admin.php?action=user_edit&tab=graph_perms_edit&id=' . get_nfilter_request_var('id'));\n\n\t\t\texit;\n\t\t}\n\t} elseif (isset_request_var('save_component_user')) {\n\t\t/* user management save */\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\t$old_password = db_fetch_cell_prepared('SELECT password\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_nfilter_request_var('id')));\n\n\t\tif ((get_nfilter_request_var('password') == '') && (get_nfilter_request_var('password_confirm') == '')) {\n\t\t\t$password = $old_password;\n\t\t} else {\n\t\t\t$password = compat_password_hash(get_nfilter_request_var('password'), PASSWORD_DEFAULT);\n\n\t\t\tif ($password != $old_password) {\n\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_cache\n\t\t\t\t\tWHERE user_id = ?',\n\t\t\t\t\tarray(get_nfilter_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\t/* check duplicate username */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth WHERE realm = ? AND username = ? AND id != ?', array(get_nfilter_request_var('realm'), get_nfilter_request_var('username'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t/* check for guest or template user */\n\t\t$username = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\t\t$history  = db_fetch_cell_prepared('SELECT password_history FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\n\t\t/* check to make sure the passwords match; if not error */\n\t\tif (get_nfilter_request_var('password') != get_nfilter_request_var('password_confirm')) {\n\t\t\traise_message(4);\n\t\t}\n\n\t\tif (get_nfilter_request_var('must_change_password') == 'on' && get_nfilter_request_var('password_change') != 'on') {\n\t\t\traise_message('password_change');\n\t\t}\n\n\t\t$save['id']                   = get_nfilter_request_var('id');\n\t\t$save['username']             = form_input_validate(get_nfilter_request_var('username'), 'username', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['full_name']            = form_input_validate(get_nfilter_request_var('full_name'), 'full_name', '', true, 3);\n\t\t$save['password']             = $password;\n\t\t$save['must_change_password'] = form_input_validate(get_nfilter_request_var('must_change_password', ''), 'must_change_password', '', true, 3);\n\t\t$save['password_change']      = form_input_validate(get_nfilter_request_var('password_change', ''), 'password_change', '', true, 3);\n\t\t$save['show_tree']            = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']            = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']         = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings']       = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']           = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['password_history']     = $history;\n\n\t\t/* force enable/disable on template accounts */\n\t\tif (read_config_option('admin_user') == get_nfilter_request_var('id')) {\n\t\t\t$save['enabled'] = 'on';\n\t\t\t$save['realm']   = get_nfilter_request_var('realm', 0);\n\t\t} elseif (is_template_account(get_nfilter_request_var('id'))) {\n\t\t\t$save['enabled'] = '';\n\t\t\t$save['realm']   = 0;\n\t\t} else {\n\t\t\t$save['enabled'] = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\t\t\t$save['realm']   = get_nfilter_request_var('realm', 0);\n\t\t}\n\n\t\t$save['email_address']        = form_input_validate(get_nfilter_request_var('email_address', ''), 'email_address', '', true, 3);\n\t\t$save['locked']               = form_input_validate(get_nfilter_request_var('locked', ''), 'locked', '', true, 3);\n\t\t$save['reset_perms']          = mt_rand();\n\n\t\tif ($save['locked'] == '') {\n\t\t\t$save['failed_attempts'] = 0;\n\t\t}\n\n\t\t$save = api_plugin_hook_function('user_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$user_id = sql_save($save, 'user_auth');\n\n\t\t\tif ($user_id) {\n\n\t\t\t\tif (($save['id'] == 0 && read_config_option('secnotify_newuser') == 'on') ||\n\t\t\t\t    ($save['id'] > 0 && read_config_option('secnotify_chpass') == 'on')) {\n\n\t\t\t\t\t$hash = generate_hash();\n\n\t\t\t\t\t$replacement = array(\n\t\t\t\t\t\tread_config_option('base_url') . CACTI_PATH_URL,\n\t\t\t\t\t\t$save['username'],\n\t\t\t\t\t\tread_config_option('base_url') . CACTI_PATH_URL . 'auth_resetpassword.php?action=formreset&hash=' . $hash\n\t\t\t\t\t);\n\t\t\t\t\t$search = array('<CACTIURL>', '<USERNAME>', '<PWDRESETLINK>');\n\n\t\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_reset_hashes\n\t\t\t\t\t\t(user_id, hash, expiry)\n\t\t\t\t\t\tVALUES (?, ?, date_add(now(), interval ? minute))',\n\t\t\t\t\t\tarray ($user_id, $hash, read_config_option('secnotify_resetlink_timeout')));\n\t\t\t\t}\n\n\t\t\t\tif ($save['id'] == 0) {\n\n\t\t\t\t\tif ($save['email_address'] && read_config_option('secnotify_newuser') == 'on') {\n\n\t\t\t\t\t\t$body = str_replace($search, $replacement, read_config_option('secnotify_newuser_message'));\n\n\t\t\t\t\t\tsend_mail($save['email_address'], null, read_config_option('secnotify_newuser_subject'), $body, array(), array(),  true);\n\t\t\t\t\t}\n\n\t\t\t\t\tcacti_log(sprintf('NOTE: New user created, username %s, created by %s', $save['email_address'], get_username()), false, 'SYSTEM');\n\t\t\t\t}\n\n\t\t\t\tif ($save['id'] > 0) {\n\n\t\t\t\t\tif ($save['email_address'] && read_config_option('secnotify_chpass') == 'on') {\n\n\t\t\t\t\t\t$body = str_replace($search, $replacement, read_config_option('secnotify_chpass_message'));\n\n\t\t\t\t\t\tsend_mail($save['email_address'], null, read_config_option('secnotify_chpass_subject'), $body, array(), array(),  true);\n\t\t\t\t\t}\n\n\t\t\t\t\tcacti_log(sprintf('NOTE: Admin %s, changed password for user %s', get_username(), $save['email_address']), false, 'SYSTEM');\n\t\t\t\t}\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_realm_perms')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\tdb_execute_prepared('DELETE FROM user_auth_realm\n\t\t\tWHERE user_id = ?',\n\t\t\tarray(get_nfilter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_realm\n\t\t\t\t\t\t(user_id, realm_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_user_perms(get_nfilter_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_settings')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\tsave_user_settings(get_request_var('id'));\n\n\t\t/* reset local settings cache so the user sees the new settings */\n\t\tkill_session_var(OPTIONS_USER);\n\n\t\treset_user_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_perms')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\tSET policy_graphs = ?,\n\t\t\tpolicy_trees = ?,\n\t\t\tpolicy_hosts = ?,\n\t\t\tpolicy_graph_templates = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray(\n\t\t\t\tget_nfilter_request_var('policy_graphs'),\n\t\t\t\tget_nfilter_request_var('policy_trees'),\n\t\t\t\tget_nfilter_request_var('policy_hosts'),\n\t\t\t\tget_nfilter_request_var('policy_graph_templates'),\n\t\t\t\tget_nfilter_request_var('id')\n\t\t\t)\n\t\t);\n\t} else {\n\t\tapi_plugin_hook('user_admin_user_save');\n\n\t\treset_user_perms(get_filter_request_var('id'));\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_admin.php?action=user_edit&id=' . (empty($user_id) ? get_filter_request_var('id') : $user_id));\n}\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('user_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 1\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 2\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 3\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 4\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&tab=graph_perms_edit&id=' . get_request_var('user_id'));\n}\n\nfunction graph_perms_edit($tab, $header_label) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$sql_where  = '';\n\t$sql_join   = '';\n\t$limit      = '';\n\t$sql_having = '';\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?', array(get_request_var('id')));\n\t} else {\n\t\t$policy = array(\n\t\t\t'policy_graphs'          => '1',\n\t\t\t'policy_trees'           => '1',\n\t\t\t'policy_hosts'           => '1',\n\t\t\t'policy_graph_templates' => '1'\n\t\t);\n\t}\n\n\tswitch($tab) {\n\t\tcase 'permsg':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_admin.php');\n\t\t\t}\n\n\t\t\tgraph_filter($header_label);\n\n\t\t\tform_start('user_admin.php', 'policy');\n\n\t\t\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t\t\tif ($graph_auth_method == 1) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Permissive\\' meaning the User must have access to at least one of Graph, Device, or Graph Template to gain access to the Graph');\n\t\t\t} elseif ($graph_auth_method == 2) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Restrictive\\' meaning the User must have access to either the Graph or the Device and Graph Template to gain access to the Graph');\n\t\t\t} elseif ($graph_auth_method == 3) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Device\\' meaning the User must have access to the Graph or Device to gain access to the Graph');\n\t\t\t} else {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Graph Template\\' meaning the User must have access to the Graph or Graph Template to gain access to the Graph');\n\t\t\t}\n\n\t\t\t/* box: device permissions */\n\t\t\thtml_start_box(__('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Graph Policy for this User');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_graphs',$policy_array,'','',$policy['policy_graphs'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><br><?php print $policy_note;?></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t$user_id  = get_filter_request_var('id');\n\t\t\t$policies = get_policies($user_id);\n\n\t\t\t$policies = array_reverse($policies);\n\n\t\t\t$limit    = 'LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where = 'WHERE (\n\t\t\t\tgtg.title_cache LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\t\t\tAND gtg.local_graph_id > 0)';\n\t\t\t} else {\n\t\t\t\t$sql_where = 'WHERE (gtg.local_graph_id > 0)';\n\t\t\t}\n\n\t\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t\t/* Show all items */\n\t\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * if viewing just the graphs that the user has access to\n\t\t\t * we use a custom crafted sql_where clause to calculate\n\t\t\t * permissions due to the inefficient nature of the HAVING\n\t\t\t * SQL clause.\n\t\t\t */\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * get the sql join and select to display the policy information\n\t\t\t * this includes the four graph permission types\n\t\t\t */\n\t\t\t$details = get_policy_join_select($policies);\n\n\t\t\tif (cacti_sizeof($details)) {\n\t\t\t\t$sql_join   = $details['sql_join'];\n\t\t\t\t$sql_select = $details['sql_select'];\n\t\t\t} else {\n\t\t\t\t$sql_join   = '';\n\t\t\t\t$sql_select = '';\n\t\t\t}\n\n\t\t\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description,\n\t\t\t\th.disabled, h.deleted, gt.name AS template_name,\n\t\t\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id, $sql_select\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gl.id = gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN host AS h\n\t\t\t\tON h.id = gl.host_id\n\t\t\t\t$sql_join\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY gtg.title_cache\n\t\t\t\t$limit\");\n\n\t\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id)\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gl.id = gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN host AS h\n\t\t\t\tON h.id = gl.host_id\n\t\t\t\t$sql_where\");\n\n\t\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graphs'), 'page', 'main');\n\n\t\t\tform_start('user_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array(__('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tforeach ($graphs as $g) {\n\t\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\t\tform_selectable_cell(get_permission_string($g, $policies), $g['local_graph_id']);\n\n\t\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t$(function() {\n\t\t\t\t$(document).tooltip({\n\t\t\t\t\titems: '[data-tooltip]',\n\t\t\t\t\tcontent: function() {\n\t\t\t\t\t\treturn $(this).attr('data-tooltip');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permsgr':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_admin.php');\n\t\t\t}\n\n\t\t\tgroup_filter($header_label);\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where = 'WHERE (\n\t\t\t\tuag.name LIKE '\t\t   . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\t\t\tOR uag.description LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . ')';\n\t\t\t} else {\n\t\t\t\t$sql_where = '';\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t/* Show all items */\n\t\t\t} else {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' uagm.user_id=' . get_request_var('id');\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell('SELECT COUNT(DISTINCT uag.id)\n\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\tLEFT JOIN (\n\t\t\t\t\tSELECT user_id, group_id\n\t\t\t\t\tFROM user_auth_group_members\n\t\t\t\t\tWHERE user_id=' . get_request_var('id') . \"\n\t\t\t\t) AS uagm\n\t\t\t\tON uag.id = uagm.group_id\n\t\t\t$sql_where\");\n\n\t\t\t$sql_query = 'SELECT DISTINCT uag.*, uagm.user_id\n\t\t\t\tFROM user_auth_group AS uag\n\t\t\t\tLEFT JOIN (\n\t\t\t\t\tSELECT user_id, group_id\n\t\t\t\t\tFROM user_auth_group_members\n\t\t\t\t\tWHERE user_id=' . get_request_var('id') . \"\n\t\t\t\t) AS uagm\n\t\t\t\tON uag.id = uagm.group_id\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY name\n\t\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$groups = db_fetch_assoc($sql_query);\n\n\t\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsgr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Groups'), 'page', 'main');\n\n\t\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array(__('Name'), __('Description'), __('Member'), __('ID'), __('Policies (Graph/Device/Template)'), __('Enabled'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($groups)) {\n\t\t\t\tforeach ($groups as $g) {\n\t\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&id=' . $g['id']), $g['id']);\n\t\t\t\t\tform_selectable_cell(filter_value($g['description'], get_request_var('filter')), $g['id']);\n\t\t\t\t\tform_selectable_cell($g['user_id'] > 0 ? __('Member'):__('Non Member'), $g['id']);\n\t\t\t\t\tform_selectable_cell(($g['id']), $g['id']);\n\t\t\t\t\tform_selectable_cell(($g['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $g['id']);\n\t\t\t\t\tform_selectable_cell($g['enabled'] == 'on' ? __('Enabled'):__('Disabled'), $g['id']);\n\n\t\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching User Groups Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($groups)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_groups', '1', '');\n\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Assign Membership'),\n\t\t\t\t2 => __('Remove Membership')\n\t\t\t);\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permsd':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_admin.php');\n\t\t\t}\n\n\t\t\tdevice_filter($header_label);\n\n\t\t\tform_start('user_admin.php', 'policy');\n\n\t\t\thtml_start_box(__('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Device Policy for this User');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t$sql_where    = '';\n\t\t\t$sql_params   = array();\n\t\t\t$sql_params[] = get_request_var('id');\n\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where    = 'WHERE h.deleted = \"\" AND (h.hostname LIKE ? OR h.description LIKE ?)';\n\t\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t} else {\n\t\t\t\t$sql_where = 'WHERE h.deleted = \"\"';\n\t\t\t}\n\n\t\t\tif (get_request_var('host_template_id') == '0') {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.host_template_id = 0';\n\t\t\t} elseif (get_request_var('host_template_id') > 0) {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.host_template_id = ?';\n\t\t\t\t$sql_params[] = get_request_var('host_template_id');\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' uap.user_id=' . get_request_var('id', 0);\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(h.id)\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN user_auth_perms AS uap\n\t\t\t\tON h.id = uap.item_id\n\t\t\t\tAND uap.type = 3\n\t\t\t\tAND uap.user_id = ?\n\t\t\t\t$sql_where\",\n\t\t\t\t$sql_params);\n\n\t\t\t$host_graphs = array_rekey(\n\t\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS graphs\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tGROUP BY host_id'),\n\t\t\t\t'host_id', 'graphs'\n\t\t\t);\n\n\t\t\t$host_data_sources = array_rekey(\n\t\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS data_sources\n\t\t\t\t\tFROM data_local\n\t\t\t\t\tGROUP BY host_id'),\n\t\t\t\t'host_id', 'data_sources'\n\t\t\t);\n\n\t\t\t$sql_query = \"SELECT h.*, uap.user_id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN user_auth_perms AS uap\n\t\t\t\tON h.id = uap.item_id\n\t\t\t\tAND uap.type = 3\n\t\t\t\tAND uap.user_id = ?\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY description\n\t\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$hosts = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Devices'), 'page', 'main');\n\n\t\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array(__('Description'), __('ID'), __('Effective Policy'), __('Graphs'), __('Data Sources'), __('Status'), __('Hostname'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($hosts)) {\n\t\t\t\tforeach ($hosts as $host) {\n\t\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\t\tform_selectable_cell($host['id'], $host['id']);\n\n\t\t\t\t\tif (empty($host['user_id']) || $host['user_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\n\t\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($hosts)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_host', '1', '');\n\n\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permste':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_admin.php');\n\t\t\t}\n\n\t\t\ttemplate_filter($header_label);\n\n\t\t\tform_start('user_admin.php', 'policy');\n\n\t\t\thtml_start_box(__('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t$sql_where    = '';\n\t\t\t$sql_params   = array();\n\t\t\t$sql_params[] = get_request_var('id');\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where    = 'WHERE gt.name LIKE ?';\n\t\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type = 4 AND user_auth_perms.user_id = ?)';\n\t\t\t\t$sql_params[] = get_request_var('id');\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(DISTINCT gt.id)\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\t\tAND user_auth_perms.type = 4\n\t\t\t\tAND user_auth_perms.user_id = ?\n\t\t\t\t$sql_where\",\n\t\t\t\t$sql_params);\n\n\t\t\t$sql_query = \"SELECT gt.id, gt.name, COUNT(DISTINCT gl.id) AS totals, user_auth_perms.user_id\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tLEFT JOIN graph_local AS gl\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\t\tAND user_auth_perms.type = 4\n\t\t\t\tAND user_auth_perms.user_id = ?\n\t\t\t\t$sql_where\n\t\t\t\tGROUP BY gt.id\n\t\t\t\tORDER BY name\n\t\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$graphs = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t\t\t$display_text = array(\n\t\t\t\t__('Template Name'),\n\t\t\t\t__('ID'),\n\t\t\t\t__('Effective Policy'),\n\t\t\t\t__('Total Graphs')\n\t\t\t);\n\n\t\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Graph Templates'), 'page', 'main');\n\n\n\t\t\tform_start('user_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tforeach ($graphs as $g) {\n\t\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\n\t\t\t\t\tif (empty($g['user_id']) || $g['user_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\n\t\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_template', '1', '');\n\n\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permstr':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_admin.php');\n\t\t\t}\n\n\t\t\ttree_filter($header_label);\n\n\t\t\tform_start('user_admin.php', 'policy');\n\n\t\t\thtml_start_box(__('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where = 'WHERE gt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t\t\t} else {\n\t\t\t\t$sql_where = '';\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type=2 AND user_auth_perms.user_id=' . get_request_var('id', 0) . ')';\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell('SELECT COUNT(DISTINCT gt.id)\n\t\t\t\tFROM graph_tree AS gt\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\t\tAND user_auth_perms.type = 2\n\t\t\t\tAND user_auth_perms.user_id = ' . get_request_var('id') . \"\n\t\t\t\t$sql_where\");\n\n\t\t\t$sql_query = 'SELECT gt.id, gt.name, user_auth_perms.user_id\n\t\t\t\tFROM graph_tree AS gt\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\t\tAND user_auth_perms.type = 2\n\t\t\t\tAND user_auth_perms.user_id = ' . get_request_var('id') . \"\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY name\n\t\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t\t$display_text = array(\n\t\t\t\t__('Tree Name'),\n\t\t\t\t__('ID'),\n\t\t\t\t__('Effective Policy')\n\t\t\t);\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Trees'), 'page', 'main');\n\n\t\t\tform_start('user_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\tif (cacti_sizeof($trees)) {\n\t\t\t\tforeach ($trees as $t) {\n\t\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\n\t\t\t\t\tif (empty($t['user_id']) || $t['user_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($trees)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t}\n}\n\nfunction user_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$all_realms = $user_auth_realms;\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div class='cactiTableTitleRow'>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . ' ' . html_escape($header_label) . \"</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'></a><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></span></div>\n\t\t</div>\n\t</div>\";\n\n\tform_start('user_admin.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\tforeach ($user_auth_roles as $role_name => $perms) {\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . html_escape($role_name) . '</th></tr>';\n\t\tprint \"<tr class='odd'><td colspan='2'><div class='flexContainer'>\";\n\n\t\tforeach ($perms as $realm) {\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\t\tif ($set) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tif ($realm != 101) {\n\t\t\t\t\t$display = trim(str_replace(array('Plugin ->', 'Plugin ', 'Configure '), '', $user_auth_realms[$realm]));\n\t\t\t\t} else {\n\t\t\t\t\t$display = trim($user_auth_realms[$realm]);\n\t\t\t\t}\n\t\t\t\t$display = trim(str_replace(array('View ', 'Management'), array('', 'Administration'), $display));\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tprint '<div class=\"flexChild\">';\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $display, '', '', '', (!isempty_request_var('id') ? 1 : 0), $display, true);\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tif (cacti_sizeof($links)) {\n\t\tprint \"<tr class='tableHeader'><th class='left' colspan='2'>\" . __('External Link Permissions') . '</th></tr>';\n\t\tprint \"<tr class='odd'><td class='left' colspan='2'><div class='flexContainer'>\";\n\n\t\tforeach ($links as $r) {\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_realm\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND realm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tswitch($r['style']) {\n\t\t\t\tcase 'CONSOLE':\n\t\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? __('External Links') : $r['extendedstyle']) . '/' . $r['title'];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0), $description, true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.directory, pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\t$i = 0;\n\n\tif (cacti_sizeof($realms)) {\n\t\tforeach ($realms as $r) {\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\t// Skip already set realms\n\t\t\tforeach ($user_auth_roles as $role => $rrealms) {\n\t\t\t\tforeach ($rrealms as $realm_id) {\n\t\t\t\t\tif ($realm == $realm_id) {\n\t\t\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\t\t\tcontinue 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_realm\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND realm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$local_user_auth_realms = __($user_auth_realms[$realm], $r['directory']);\n\n\t\t\t$pos = (strpos($local_user_auth_realms, '->') !== false ? strpos($local_user_auth_realms, '->') + 2:0);\n\n\t\t\tif ($i == 0) {\n\t\t\t\tprint \"<tr class='tableHeader'><th class='left' colspan='2'>\" . __('Plugin Permissions') . '</th></tr>';\n\t\t\t\tprint \"<tr class='odd'><td colspan='2'><div class='flexContainer'>\";\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, trim(substr($local_user_auth_realms, $pos)), '', '', '', (!isempty_request_var('id') ? 1 : 0), $r['display'], true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tif ($i > 0) {\n\t\t\tprint '</div></td></tr>';\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tprint \"<tr class='tableHeader'><th class='left' colspan='2'>\" . __('Legacy Permissions') . '</th></tr>';\n\n\t\tforeach ($all_realms as $realm => $name) {\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_realm\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tAND realm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->') + 2:0);\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0), $r['display'], true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\tprint '</table></td></tr>';\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'realms', '');\n\tform_hidden_box('save_component_realm_perms', '1', '');\n\n\tform_save_button('user_admin.php', 'return');\n}\n\nfunction settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_admin.php');\n\n\thtml_start_box(__esc('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n\t\tprint \"<div class='spacer formHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='ti ti-chevrons-up'></i></div>\":'') . '</div></div>';\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (user_setting_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? AND user_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (user_setting_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? and user_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'settings', '');\n\tform_hidden_box('save_component_graph_settings','1','');\n\n\tform_save_button('user_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tvar custom_fonts = $('#custom_fonts').is(':checked');\n\t\tvar fields = {\n\t\t\tfonts: (themeFonts == 1),\n\t\t\tcustom_fonts: themeFonts != 1 && custom_fonts,\n\t\t\ttitle_size: themeFonts != 1 && custom_fonts,\n\t\t\ttitle_font: themeFonts != 1 && custom_fonts,\n\t\t\tlegend_size: themeFonts != 1 && custom_fonts,\n\t\t\tlegend_font: themeFonts != 1 && custom_fonts,\n\t\t\taxis_size: themeFonts != 1 && custom_fonts,\n\t\t\taxis_font: themeFonts != 1 && custom_fonts,\n\t\t\tunit_size: themeFonts != 1 && custom_fonts,\n\t\t\tunit_font: themeFonts != 1 && custom_fonts,\n\t\t}\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction user_edit() {\n\tglobal $config, $fields_user_user_edit_host;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsgr'  => __('Group Membership'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t$permission_model = read_config_option('graph_auth_method');\n\n\tif ($permission_model == 3) { // Device Based\n\t\tunset($tabs['permste']);\n\t} elseif ($permission_model == 4) { // Graph Template Based\n\t\tunset($tabs['permsd']);\n\t}\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_user_admin_tab', 'general');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\tif (!isempty_request_var('id')) {\n\t\t$user         = db_fetch_row_prepared('SELECT * FROM user_auth WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('[edit: %s]', $user['username']);\n\t} else {\n\t\t$header_label = __('[new]');\n\t}\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape(CACTI_PATH_URL .\n\t\t\t\t'user_admin.php?action=user_edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . '</a></li>';\n\n\t\t\t$i++;\n\t\t}\n\n\t\tapi_plugin_hook('user_admin_tab');\n\n\t\tprint '</ul></nav></div>';\n\t}\n\n\tswitch($current_tab) {\n\t\tcase 'general':\n\t\t\tapi_plugin_hook_function('user_admin_edit', (isset($user) ? get_request_var('id') : 0));\n\n\t\t\tform_start('user_admin.php');\n\n\t\t\thtml_start_box(__esc('User Management %s', $header_label), '100%', '', '3', 'center', '');\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($fields_user_user_edit_host, (isset($user) ? $user : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box();\n\n\t\t\tform_save_button('user_admin.php', 'return');\n\n\t\t\t?>\n\t\t<script type='text/javascript'>\n\n\t\tvar templateAccount=<?php print is_template_account(get_filter_request_var('id')) ? 'true':'false';?>;\n\t\tvar consoleAllowed=<?php print(isset($user['id']) ? (is_realm_allowed(8, (isset($user) ? $user['id'] : 0)) ? 'true':'false'):'false');?>;\n\n\t\tfunction changeRealm() {\n\t\t\tif ($('#realm').val() != 0) {\n\t\t\t\t$('#password_change').prop('disabled', true);\n\t\t\t} else {\n\t\t\t\t$('#password_change').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tvar password_change = $('#password_change').is(':checked');\n\n\t\t$(function() {\n\t\t\tchangeRealm();\n\n\t\t\t/* clear passwords */\n\t\t\t$('#password').val('');\n\t\t\t$('#password_confirm').val('');\n\n            $('#realm').change(function () {\n                changeRealm();\n            });\n\n\t\t\t$('#password_change').click(function() {\n\t\t\t\tpassword_change = $('#password_change').is(':checked');\n\n\t\t\t\tif (!password_change && $('#must_change_password').is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#must_change_password').click(function() {\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t\t$('#password_change').button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (templateAccount == true) {\n\t\t\t\t$('#realm').prop('disabled', true);\n\t\t\t\t$('#enabled').prop('disabled', true);\n\n\t\t\t\tif ($('#realm').selectmenu('instance')) {\n\t\t\t\t\t$('#realm').selectmenu('disable');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!consoleAllowed) {\n\t\t\t\tif ($('#login_opts_2').is(':checked')) {\n\t\t\t\t\t$('#login_opts_2').prop('checked', false);\n\t\t\t\t\t$('#login_opts_3').prop('checked', true);\n\t\t\t\t}\n\n\t\t\t\t$('#login_opts_2').prop('disabled', true);\n\t\t\t}\n\t\t});\n\n\t\t</script>\n\t\t<?php\n\n\t\t\tbreak;\n\t\tcase 'settings':\n\t\t\tsettings_edit($header_label);\n\n\t\t\tbreak;\n\t\tcase 'realms':\n\t\t\tuser_realms_edit($header_label);\n\n\t\t\tbreak;\n\t\tcase 'permsg':\n\t\tcase 'permsd':\n\t\tcase 'permsgr':\n\t\tcase 'permste':\n\t\tcase 'permstr':\n\t\t\tgraph_perms_edit($current_tab, $header_label);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif (api_plugin_hook_function('user_admin_run_action', get_request_var('tab'))) {\n\t\t\t\tuser_realms_edit($header_label);\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n}\n\nfunction create_user_filter() {\n\tglobal $item_rows;\n\n\t$all  = array('-1' => __('All'));\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$groups = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, description\n\t\t\tFROM user_auth_group\n\t\t\tORDER BY description'),\n\t\t'id', 'description'\n\t);\n\n\t$groups = $all + $groups;\n\n\t$logins = array(\n\t\t'0' => __esc('All'),\n\t\t'1' => __esc('< 1 Week Ago'),\n\t\t'2' => __esc('< 1 Month Ago'),\n\t\t'3' => __esc('> 1 Month Ago'),\n\t\t'4' => __esc('> 2 Months Ago'),\n\t\t'5' => __esc('> 4 Months Ago'),\n\t\t'6' => __esc('Never')\n\t);\n\n\t$realms = array(\n\t\t'-1' => __('All'),\n\t\t'0'  => __('Local'),\n\t\t'2'  => __('Basic'),\n\t\t'3'  => __('LDAP/AD'),\n\t\t'4'  => __('Domain')\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'group' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Group'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $groups,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'login' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Last Login'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $logins,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'realm' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Realm'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $realms,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Users'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column' => 'username',\n\t\t\t'sort_direction' => 'ASC'\n\t\t)\n\t);\n}\n\nfunction user() {\n\tglobal $config, $auth_realms, $actions, $item_rows;\n\n\t$filters = create_user_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('User Management'), 'user_admin.php', 'form_user', 'sess_ua', 'user_admin.php?action=user_edit&tab=general');\n\n\t$pageFilter->rows_label       = __('Users');\n\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE '). '(ua.username LIKE ? OR ua.full_name LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('realm') >= 0) {\n\t\tif (get_request_var('realm') < 4) {\n\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ua.realm = ?';\n\t\t\t$sql_params[] = get_request_var('realm');\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ua.realm > 3';\n\t\t}\n\t}\n\n\tif (get_request_var('group') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ug.group_id = ?';\n\t\t$sql_params[] = get_request_var('group');\n\t}\n\n\tif (get_request_var('login') > 0) {\n\t\tif (get_request_var('login') == 1) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time > DATE_SUB(NOW(), INTERVAL 1 WEEK)';\n\t\t} elseif (get_request_var('login') == 2) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time > DATE_SUB(NOW(), INTERVAL 1 MONTH)';\n\t\t} elseif (get_request_var('login') == 3) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time < DATE_SUB(NOW(), INTERVAL 1 MONTH)';\n\t\t} elseif (get_request_var('login') == 4) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time < DATE_SUB(NOW(), INTERVAL 2 MONTH)';\n\t\t} elseif (get_request_var('login') == 5) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time < DATE_SUB(NOW(), INTERVAL 4 MONTH)';\n\t\t} elseif (get_request_var('login') == 6) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' time IS NULL';\n\t\t}\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT\n\t\tCOUNT(DISTINCT ua.id)\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN (\n\t\t\tSELECT user_id, MAX(time) AS time\n\t\t\tFROM user_log\n\t\t\tGROUP BY user_id\n\t\t) AS ul\n\t\tON ua.id = ul.user_id\n\t\tLEFT JOIN user_auth_group_members AS ug\n\t\tON ua.id = ug.user_id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$user_list = db_fetch_assoc_prepared(\"SELECT ua.id, ua.username, ua.full_name,\n\t\tua.realm, ua.enabled, ua.policy_graphs, ua.policy_hosts, ua.policy_graph_templates,\n\t\ttime, MAX(UNIX_TIMESTAMP(time)) as dtime\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN (\n\t\t\tSELECT user_id, MAX(time) AS time\n\t\t\tFROM user_log\n\t\t\tGROUP BY user_id\n\t\t) AS ul\n\t\tON ua.id = ul.user_id\n\t\tLEFT JOIN user_auth_group_members AS ug\n\t\tON ua.id = ug.user_id\n\t\t$sql_where\n\t\tGROUP BY ua.id\n\t\t$sql_order\n\t\t$sql_limit\",\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'username' => array(\n\t\t\t'display' => __('User Name'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'id' => array(\n\t\t\t'display' => __('User ID'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'full_name' => array(\n\t\t\t'display' => __('Full Name'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'realm' => array(\n\t\t\t'display' => __('Realm'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_graphs' => array(\n\t\t\t'display' => __('Graph Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_hosts' => array(\n\t\t\t'display' => __('Device Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_graph_templates' => array(\n\t\t\t'display' => __('Template Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'dtime' => array(\n\t\t\t'display' => __('Last Login'),\n\t\t\t'sort'    => 'DESC'\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('user_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 9, __('Users'), 'page', 'main');\n\n\tform_start('user_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tforeach ($user_list as $user) {\n\t\t\tif (empty($user['dtime']) || $user['dtime'] <= 10000) {\n\t\t\t\t$last_login = __('N/A');\n\t\t\t} else {\n\t\t\t\t$last_login = date('l, F d, Y H:i:s ', $user['dtime']);\n\t\t\t}\n\n\t\t\tif ($user['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tif (isset($auth_realms[$user['realm']])) {\n\t\t\t\t$realm = $auth_realms[$user['realm']];\n\t\t\t} else {\n\t\t\t\t$realm = __('Unavailable');\n\t\t\t}\n\n\t\t\t// Check for a disabled removal\n\t\t\t$disabled = is_template_account($user['id']);\n\n\t\t\tif ($_SESSION[SESS_USER_ID] == $user['id']) {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $user['id'], true, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($user['username'], get_request_var('filter'), CACTI_PATH_URL . 'user_admin.php?action=user_edit&tab=general&id=' . $user['id']), $user['id']);\n\t\t\tform_selectable_cell($user['id'], $user['id']);\n\t\t\tform_selectable_cell(filter_value($user['full_name'], get_request_var('filter')), $user['id']);\n\t\t\tform_selectable_cell($enabled, $user['id']);\n\t\t\tform_selectable_cell($realm, $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell($last_login, $user['id']);\n\n\t\t\tform_checkbox_cell($user['username'], $user['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Users Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction create_graphs_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$graph_templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.graph_template_id = gt.id\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$graph_templates = $any + $none + $graph_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'graph_template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $graph_templates,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Graphs'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction graph_filter($header_label) {\n\t$filters = create_graphs_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Graph Permissions %s', $header_label), 'user_admin.php?action=user_edit&tab=permsd&id=' . get_request_var('id'), 'form_template', 'sess_ua_d');\n\n\t$pageFilter->rows_label       = __('Graphs');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'user_edit', '');\n\tform_hidden_box('tab', 'permsg', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction group_filter($header_label) {\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Group Membership %s', $header_label), 'user_admin.php?action=user_edit&tab=permsgr&id=' . get_request_var('id'), 'form_group', 'sess_ua_g');\n\n\t$pageFilter->rows_label       = __('Groups');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Show All');\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'user_edit', '');\n\tform_hidden_box('tab', 'permsgr', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction create_device_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$host_templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM host_template\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$host_templates = $any + $none + $host_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'host_template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $host_templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Devices'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction device_filter($header_label) {\n\t$filters = create_device_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Device Permissions %s', $header_label), 'user_admin.php?action=user_edit&tab=permsd&id=' . get_request_var('id'), 'form_template', 'sess_ua_d');\n\n\t$pageFilter->rows_label       = __('Devices');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'user_edit', '');\n\tform_hidden_box('tab', 'permste', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction template_filter($header_label) {\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Template Permissions %s', $header_label), 'user_admin.php?action=user_edit&tab=permste&id=' . get_request_var('id'), 'form_template', 'sess_ua_te');\n\n\t$pageFilter->rows_label       = __('Templatee');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'user_edit', '');\n\tform_hidden_box('tab', 'permste', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction tree_filter($header_label) {\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Tree Permissions %s', $header_label), 'user_admin.php?action=user_edit&tab=permstr&id=' . get_request_var('id'), 'form_tree', 'sess_ua_tr');\n\n\t$pageFilter->rows_label       = __('Trees');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'user_edit', '');\n\tform_hidden_box('tab', 'permstr', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\n"
        },
        {
          "name": "user_domains.php",
          "type": "blob",
          "size": 25.2216796875,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Default')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdomain_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tdomains();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_domain_ldap')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3) : '');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\t// Disable template user from logging in\n\t\t\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\t\t\tSET enabled=\"\"\n\t\t\t\t\tWHERE id = ?', array($save['user_id']));\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tget_filter_request_var('domain_id');\n\t\t\t\tget_filter_request_var('port');\n\t\t\t\tget_filter_request_var('port_ssl');\n\t\t\t\tget_filter_request_var('proto_version');\n\t\t\t\tget_filter_request_var('encryption');\n\t\t\t\tget_filter_request_var('referrals');\n\t\t\t\tget_filter_request_var('mode');\n\t\t\t\tget_filter_request_var('group_member_type');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$save                        = array();\n\t\t\t\t$save['domain_id']           = $domain_id;\n\t\t\t\t$save['server']              = form_input_validate(get_nfilter_request_var('server'), 'server', '', false, 3);\n\t\t\t\t$save['port']                = get_nfilter_request_var('port');\n\t\t\t\t$save['port_ssl']            = get_nfilter_request_var('port_ssl');\n\t\t\t\t$save['proto_version']       = get_nfilter_request_var('proto_version');\n\t\t\t\t$save['encryption']          = get_nfilter_request_var('encryption');\n\t\t\t\t$save['referrals']           = get_nfilter_request_var('referrals');\n\t\t\t\t$save['mode']                = get_nfilter_request_var('mode');\n\t\t\t\t$save['group_member_type']   = get_nfilter_request_var('group_member_type');\n\t\t\t\t$save['dn']                  = form_input_validate(get_nfilter_request_var('dn'),                'dn',              '', true, 3);\n\t\t\t\t$save['group_require']       = isset_request_var('group_require') ? 'on' : '';\n\t\t\t\t$save['group_dn']            = form_input_validate(get_nfilter_request_var('group_dn'),          'group_dn',        '', true, 3);\n\t\t\t\t$save['group_attrib']        = form_input_validate(get_nfilter_request_var('group_attrib'),      'group_attrib',    '', true, 3);\n\t\t\t\t$save['search_base']         = form_input_validate(get_nfilter_request_var('search_base'),       'search_base',     '', true, 3);\n\t\t\t\t$save['search_filter']       = form_input_validate(get_nfilter_request_var('search_filter'),     'search_filter',   '', true, 3);\n\t\t\t\t$save['specific_dn']         = form_input_validate(get_nfilter_request_var('specific_dn'),         'specific_dn',       '', true, 3);\n\t\t\t\t$save['specific_password']   = form_input_validate(get_nfilter_request_var('specific_password'),   'specific_password', '', true, 3);\n\t\t\t\t$save['cn_full_name']        = get_nfilter_request_var('cn_full_name');\n\t\t\t\t$save['cn_email']            = get_nfilter_request_var('cn_email');\n\n\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t$insert_id = sql_save($save, 'user_domains_ldap', 'domain_id', false);\n\n\t\t\t\t\tif ($insert_id) {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_domain')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3) : '');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: user_domains.php?action=edit&domain_id=' . (empty($domain_id) ? get_nfilter_request_var('domain_id') : $domain_id));\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdomain_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdomain_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\tdomain_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\t\tif (cacti_sizeof($selected_items) > 1) {\n\t\t\t\t\t/* error message */\n\t\t\t\t} else {\n\t\t\t\t\tfor ($i = 0; ($i < cacti_count($selected_items)); $i++) {\n\t\t\t\t\t\tdomain_default($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_domains.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the data queries and process them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT domain_name FROM user_domains WHERE domain_id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'user_domains.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following User Domain.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following User Domains.'),\n\t\t\t\t\t'scont'    => __('Delete User Domain'),\n\t\t\t\t\t'pcont'    => __('Delete User Domains')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following User Domain.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following User Domains.'),\n\t\t\t\t\t'scont'    => __('Disable User Domain'),\n\t\t\t\t\t'pcont'    => __('Disable User Domains')\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following User Domain.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following User Domains.'),\n\t\t\t\t\t'scont'    => __('Enable User Domain'),\n\t\t\t\t\t'pcont'    => __('Enable User Domains')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'message' => __('Click \\'Continue\\' to make the following the following User Domain the default one.'),\n\t\t\t\t\t'cont'    => __('Make Selected Domain Default')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction domain_remove($domain_id) {\n\tdb_execute_prepared('DELETE FROM user_domains WHERE domain_id = ?', array($domain_id));\n\tdb_execute_prepared('DELETE FROM user_domains_ldap WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_disable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_enable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"on\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_default($domain_id) {\n\tdb_execute('UPDATE user_domains SET defdomain = 0');\n\tdb_execute_prepared('UPDATE user_domains SET defdomain = 1 WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_edit() {\n\tglobal $ldap_versions, $ldap_encryption, $ldap_modes, $domain_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('domain_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain       = db_fetch_row_prepared('SELECT * FROM user_domains WHERE domain_id = ?', array(get_request_var('domain_id')));\n\t\t$header_label = __esc('User Domain [edit: %s]', $domain['domain_name']);\n\t} else {\n\t\t$header_label = __('User Domain [new]');\n\t}\n\n\t/* file: data_input.php, action: edit */\n\t$fields_domain_edit = array(\n\t\t'domain_name' => array(\n\t\t\t'method'        => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description'   => __('Enter a meaningful name for this domain. This will be the name that appears in the Login Realm during login.'),\n\t\t\t'value'         => '|arg1:domain_name|',\n\t\t\t'max_length'    => '255',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('Domains Type'),\n\t\t\t'description'   => __('Choose what type of domain this is.'),\n\t\t\t'value'         => '|arg1:type|',\n\t\t\t'array'         => $domain_types,\n\t\t\t'default'       => '2'\n\t\t),\n\t\t'user_id' => array(\n\t\t\t'friendly_name' => __('User Template'),\n\t\t\t'description'   => __('The name of the user that Cacti will use as a template for new user accounts.'),\n\t\t\t'method'        => 'drop_sql',\n\t\t\t'value'         => '|arg1:user_id|',\n\t\t\t'none_value'    => __('No User'),\n\t\t\t'sql'           => 'SELECT id AS id, username AS name FROM user_auth WHERE realm=0 ORDER BY username',\n\t\t\t'default'       => '0'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'method'        => 'checkbox',\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'description'   => __('If this checkbox is checked, users will be able to login using this domain.'),\n\t\t\t'value'         => '|arg1:enabled|',\n\t\t\t'default'       => '',\n\t\t),\n\t\t'domain_id' => array(\n\t\t\t'method' => 'hidden_zero',\n\t\t\t'value'  => '|arg1:domain_id|'\n\t\t),\n\t\t'save_component_domain' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => '1'\n\t\t)\n\t);\n\n\t$fields_domain_ldap_edit = array(\n\t\t'server' => array(\n\t\t\t'friendly_name' => __('Server(s)'),\n\t\t\t'description'   => __('A space delimited list of DNS hostnames or IP address of for valid LDAP servers.  Cacti will attempt to use the LDAP servers from left to right to authenticate a user.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:server|',\n\t\t\t'default'       => '',\n\t\t\t'size'          => 80,\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'port' => array(\n\t\t\t'friendly_name' => __('Port Standard'),\n\t\t\t'description'   => __('TCP/UDP port for Non SSL communications.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'max_length'    => '5',\n\t\t\t'value'         => '|arg1:port|',\n\t\t\t'default'       => 389,\n\t\t\t'size'          => '5'\n\t\t),\n\t\t'port_ssl' => array(\n\t\t\t'friendly_name' => __('Port SSL'),\n\t\t\t'description'   => __('TCP/UDP port for SSL communications.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'max_length'    => '5',\n\t\t\t'value'         => '|arg1:port_ssl|',\n\t\t\t'default'       => 686,\n\t\t\t'size'          => '5'\n\t\t),\n\t\t'proto_version' => array(\n\t\t\t'friendly_name' => __('Protocol Version'),\n\t\t\t'description'   => __('Protocol Version that the server supports.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => '|arg1:proto_version|',\n\t\t\t'array'         => $ldap_versions\n\t\t),\n\t\t'encryption' => array(\n\t\t\t'friendly_name' => __('Encryption'),\n\t\t\t'description'   => __('Encryption that the server supports. TLS is only supported by Protocol Version 3.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => '|arg1:encryption|',\n\t\t\t'array'         => $ldap_encryption\n\t\t),\n\t\t'referrals' => array(\n\t\t\t'friendly_name' => __('Referrals'),\n\t\t\t'description'   => __('Enable or Disable LDAP referrals.  If disabled, it may increase the speed of searches.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => '|arg1:referrals|',\n\t\t\t'array'         => array('0' => __('Disabled'), '1' => __('Enable'))\n\t\t),\n\t\t'mode' => array(\n\t\t\t'friendly_name' => __('Mode'),\n\t\t\t'description'   => __('Mode which cacti will attempt to authenticate against the LDAP server.<blockquote><i>No Searching</i> - No Distinguished Name (DN) searching occurs, just attempt to bind with the provided Distinguished Name (DN) format.<br><br><i>Anonymous Searching</i> - Attempts to search for username against LDAP directory via anonymous binding to locate the users Distinguished Name (DN).<br><br><i>Specific Searching</i> - Attempts search for username against LDAP directory via Specific Distinguished Name (DN) and Specific Password for binding to locate the users Distinguished Name (DN).'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => '|arg1:mode|',\n\t\t\t'array'         => $ldap_modes\n\t\t),\n\t\t'dn' => array(\n\t\t\t'friendly_name' => __('Distinguished Name (DN)'),\n\t\t\t'description' => __('The \"Distinguished Name\" syntax, applicable for both OpenLDAP and Windows AD configurations, offers flexibility in defining user identity. For OpenLDAP, the format follows this structure: <i>\"uid=&lt;username&gt;,ou=people,dc=domain,dc=local\"</i>. Windows AD provides an alternative syntax: <i>\"&lt;username&gt;@win2kdomain.local\"</i>, commonly known as \"userPrincipalName (UPN)\". In this context, \"&lt;username&gt;\" represents the specific username provided during the login prompt. This is particularly pertinent when operating in \"No Searching\" mode, or \"Require Group Membership\" enabled.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:dn|',\n\t\t\t'max_length' => '255',\n\t\t\t'size' => 100\n\t\t\t),\n\t\t'group_require' => array(\n\t\t\t'friendly_name' => __('Require Group Membership'),\n\t\t\t'description'   => __('Require user to be member of group to authenticate. Group settings must be set for this to work, enabling without proper group settings will cause authentication failure.'),\n\t\t\t'value'         => '|arg1:group_require|',\n\t\t\t'method'        => 'checkbox'\n\t\t),\n\t\t'group_header' => array(\n\t\t\t'friendly_name' => __('LDAP Group Settings'),\n\t\t\t'method'        => 'spacer'\n\t\t),\n\t\t'group_dn' => array(\n\t\t\t'friendly_name' => __('Group Distinguished Name (DN)'),\n\t\t\t'description'   => __('Distinguished Name of the group that user must have membership.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:group_dn|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'group_attrib' => array(\n\t\t\t'friendly_name' => __('Group Member Attribute'),\n\t\t\t'description' => __('This refers to the specific attribute within the LDAP directory that holds the usernames of group members. It is crucial to ensure that the attribute value aligns with the configuration specified in the \"Distinguished Name\" or that the actual attribute value is searchable using the settings outlined in the \"Distinguished Name\".'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:group_attrib|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_member_type' => array(\n\t\t\t'friendly_name' => __('Group Member Type'),\n\t\t\t'description'   => __('Defines if users use full Distinguished Name or just Username in the defined Group Member Attribute.'),\n\t\t\t'method'        => 'drop_array',\n\t\t\t'value'         => '|arg1:group_member_type|',\n\t\t\t'array'         => array(1 => 'Distinguished Name', 2 => 'Username')\n\t\t),\n\t\t'search_base_header' => array(\n\t\t\t'friendly_name' => __('LDAP Specific Search Settings'),\n\t\t\t'method'        => 'spacer'\n\t\t),\n\t\t'search_base' => array(\n\t\t\t'friendly_name' => __('Search Base'),\n\t\t\t'description'   => __('Search base for searching the LDAP directory, such as <i>\"dc=win2kdomain,dc=local\"</i> or <i>\"ou=people,dc=domain,dc=local\"</i>.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:search_base|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'search_filter' => array(\n\t\t\t'friendly_name' => __('Search Filter'),\n\t\t\t'description'   => __('Search filter to use to locate the user in the LDAP directory, such as for windows: <i>\"(&amp;(objectclass=user)(objectcategory=user)(userPrincipalName=&lt;username&gt;*))\"</i> or for OpenLDAP: <i>\"(&(objectClass=account)(uid=&lt;username&gt))\"</i>.  \"&lt;username&gt\" is replaced with the username that was supplied at the login prompt.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:search_filter|',\n\t\t\t'max_length'    => '512'\n\t\t),\n\t\t'specific_dn' => array(\n\t\t\t'friendly_name' => __('Search Distinguished Name (DN)'),\n\t\t\t'description'   => __('Distinguished Name for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:specific_dn|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'specific_password' => array(\n\t\t\t'friendly_name' => __('Search Password'),\n\t\t\t'description'   => __('Password for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method'        => 'textbox_password',\n\t\t\t'value'         => '|arg1:specific_password|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'cn_header' => array(\n\t\t\t'friendly_name' => __('LDAP CN Settings'),\n\t\t\t'method'        => 'spacer'\n\t\t),\n\t\t'cn_full_name' => array(\n\t\t\t'friendly_name' => __('Full Name'),\n\t\t\t'description'   => __('Field that will replace the Full Name when creating a new user, taken from LDAP. (on windows: displayname) '),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:cn_full_name|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'cn_email' => array(\n\t\t\t'friendly_name' => __('eMail'),\n\t\t\t'description'   => __('Field that will replace the email taken from LDAP. (on windows: mail) '),\n\t\t\t'method'        => 'textbox',\n\t\t\t'value'         => '|arg1:cn_email|',\n\t\t\t'max_length'    => '255'\n\t\t),\n\t\t'save_component_domain_ldap' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => '1'\n\t\t)\n\t);\n\n\tform_start('user_domains.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array(),\n\t\t'fields' => inject_form_variables($fields_domain_edit, (isset($domain) ? $domain : array()))\n\t));\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array(get_request_var('domain_id')));\n\n\t\thtml_start_box(__('Domain Properties'), '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array(),\n\t\t\t'fields' => inject_form_variables($fields_domain_ldap_edit, (isset($domain) ? $domain : array()))\n\t\t));\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t\tfunction initGroupMember() {\n\t\t\ttoggleFields({\n\t\t\t\tgroup_header: $('#group_require').is(':checked'),\n\t\t\t\tgroup_dn: $('#group_require').is(':checked'),\n\t\t\t\tgroup_attrib: $('#group_require').is(':checked'),\n\t\t\t\tgroup_member_type: $('#group_require').is(':checked'),\n\t\t\t});\n\t\t}\n\n\t\tfunction initSearch() {\n\t\t\tvar mode = $('#mode').val();\n\t\t\ttoggleFields({\n\t\t\t\tsearch_base_header: mode > 0,\n\t\t\t\tsearch_base: mode > 0,\n\t\t\t\tsearch_filter: mode > 0,\n\t\t\t\tspecific_dn: mode > 1,\n\t\t\t\tspecific_password: mode > 1,\n\t\t\t\tcn_header: mode > 1,\n\t\t\t\tcn_full_name: mode > 1,\n\t\t\t\tcn_email: mode > 1,\n\t\t\t});\n\t\t}\n\n\t\t$(function() {\n\t\t\tinitSearch();\n\t\t\tinitGroupMember();\n\n\t\t\t$('#mode').change(function() {\n\t\t\t\tinitSearch();\n\t\t\t});\n\n\t\t\t$('#group_require').change(function() {\n\t\t\t\tinitGroupMember();\n\t\t\t});\n\t\t});\n\t</script>\n<?php\n\n\t\tform_save_button('user_domains.php', 'return', 'domain_id');\n}\n\nfunction domains() {\n\tglobal $domain_types, $actions, $item_rows;\n\n    /* create the page filter */\n    $pageFilter = new CactiTableFilter(__('User Domains'), 'user_domains.php', 'form_domain', 'sess_domain', 'user_domains.php?action=edit');\n\n    $pageFilter->rows_label = __('Domains');\n\t$pageFilter->set_sort_array('domain_name', 'ASC');\n    $pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . '(domain_name LIKE ? OR type LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM user_domains\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$domains = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM user_domains\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows,\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'domain_name'  => array(\n\t\t\t'display' => __('Domain Name'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'type'         => array(\n\t\t\t'display' => __('Domain Type'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'defdomain'    => array(\n\t\t\t'display' => __('Default'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'user_id'      => array(\n\t\t\t'display' => __('Effective User'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'cn_full_name' => array(\n\t\t\t'display' => __('CN FullName'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'cn_email'     => array(\n\t\t\t'display' => __('CN eMail'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled'      => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('user_user_domains.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('User Domains'), 'page', 'main');\n\n\tform_start('user_domains.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($domains)) {\n\t\tforeach ($domains as $domain) {\n\t\t\t/* hide system types */\n\t\t\tform_alternate_row('line' . $domain['domain_id'], true);\n\n\t\t\t$effective_id = db_fetch_cell_prepared('SELECT username\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($domain['user_id']));\n\n\t\t\t$full_name_cn = db_fetch_cell_prepared('SELECT cn_full_name\n\t\t\t\tFROM user_domains_ldap\n\t\t\t\tWHERE domain_id = ?',\n\t\t\t\tarray($domain['domain_id']));\n\n\t\t\t$email_cn = db_fetch_cell_prepared('SELECT cn_email\n\t\t\t\tFROM user_domains_ldap\n\t\t\t\tWHERE domain_id = ?',\n\t\t\t\tarray($domain['domain_id']));\n\n\t\t\tform_selectable_cell(filter_value($domain['domain_name'], get_request_var('filter'), 'user_domains.php?action=edit&domain_id=' . $domain['domain_id']), $domain['domain_id']);\n\t\t\tform_selectable_cell($domain_types[$domain['type']], $domain['domain_id']);\n\t\t\tform_selectable_cell(($domain['defdomain'] == '0' ? '--' : __('Yes')), $domain['domain_id']);\n\t\t\tform_selectable_ecell(($domain['user_id'] == '0' ? __('None Selected') : $effective_id), $domain['domain_id']);\n\t\t\tform_selectable_ecell($full_name_cn, $domain['domain_id']);\n\t\t\tform_selectable_ecell($email_cn, $domain['domain_id']);\n\t\t\tform_selectable_cell($domain['enabled'] == 'on' ? __('Yes') : __('No'), $domain['domain_id']);\n\t\t\tform_checkbox_cell($domain['domain_name'], $domain['domain_id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No User Domains Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($domains)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\n"
        },
        {
          "name": "user_group_admin.php",
          "type": "blob",
          "size": 68.5234375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\nset_default_action();\n\n$group_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable')\n);\n\n$href_options = array(\n\t3 => array(\n\t\t'radio_value'   => '4',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t0 => array(\n\t\t'radio_value'   => '1',\n\t\t'radio_caption' => __('Show the Page that the User pointed their browser to')\n\t\t),\n\t1 => array(\n\t\t'radio_value'   => '2',\n\t\t'radio_caption' => __('Show the Console')\n\t\t),\n\t2 => array(\n\t\t'radio_value'   => '3',\n\t\t'radio_caption' => __('Show the default Graph Screen')\n\t\t)\n);\n\n$gperm_options = array(\n\t0 => array(\n\t\t'radio_value'   => '1',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t1 => array(\n\t\t'radio_value'   => '2',\n\t\t'radio_caption' => __('Grant Access')\n\t\t),\n\t2 => array(\n\t\t'radio_value'   => '3',\n\t\t'radio_caption' => __('Restrict Access')\n\t\t)\n);\n\n$fields_user_group_edit = array(\n\t'name' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Group Name'),\n\t\t'description'   => __('The name of this Group.'),\n\t\t'value'         => '|arg1:name|',\n\t\t'max_length'    => '255'\n\t\t),\n\t'description' => array(\n\t\t'method'        => 'textbox',\n\t\t'friendly_name' => __('Group Description'),\n\t\t'description'   => __('A more descriptive name for this group, that can include spaces or special characters.'),\n\t\t'value'         => '|arg1:description|',\n\t\t'max_length'    => '255'\n\t\t),\n\t'enabled' => array(\n\t\t'method'        => 'checkbox',\n\t\t'friendly_name' => __('Enabled'),\n\t\t'description'   => __('Determines if user is able to login.'),\n\t\t'value'         => '|arg1:enabled|',\n\t\t'default'       => ''\n\t\t),\n\t'grp1' => array(\n\t\t'friendly_name' => __('General Group Options'),\n\t\t'method'        => 'checkbox_group',\n\t\t'description'   => __('Set any user account-specific options here.'),\n\t\t'items'         => array(\n\t\t\t'graph_settings' => array(\n\t\t\t\t'value'         => '|arg1:graph_settings|',\n\t\t\t\t'friendly_name' => __('Allow Users of this Group to keep custom User Settings'),\n\t\t\t\t'form_id'       => '|arg1:id|',\n\t\t\t\t'default'       => 'on'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t'show_tree' => array(\n\t\t'friendly_name' => __('Tree Rights'),\n\t\t'method'        => 'radio',\n\t\t'description'   => __('Should Users of this Group have access to the Tree?'),\n\t\t'value'         => '|arg1:show_tree|',\n\t\t'default'       => '1',\n\t\t'items'         => $gperm_options\n\t\t),\n\t'show_list' => array(\n\t\t'friendly_name' => __('Graph List Rights'),\n\t\t'method'        => 'radio',\n\t\t'description'   => __('Should Users of this Group have access to the Graph List?'),\n\t\t'value'         => '|arg1:show_list|',\n\t\t'default'       => '1',\n\t\t'items'         => $gperm_options\n\t\t),\n\t'show_preview' => array(\n\t\t'friendly_name' => __('Graph Preview Rights'),\n\t\t'method'        => 'radio',\n\t\t'description'   => __('Should Users of this Group have access to the Graph Preview?'),\n\t\t'value'         => '|arg1:show_preview|',\n\t\t'default'       => '1',\n\t\t'items'         => $gperm_options\n\t\t),\n\t'login_opts' => array(\n\t\t'friendly_name' => __('Login Options'),\n\t\t'method'        => 'radio',\n\t\t'default'       => '1',\n\t\t'description'   => __('What to do when a User from this User Group logs in.'),\n\t\t'value'         => '|arg1:login_opts|',\n\t\t'items'         => $href_options\n\t\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value'  => '|arg1:id|'\n\t\t),\n\t'save_component_group' => array(\n\t\t'method' => 'hidden',\n\t\t'value'  => '1'\n\t\t)\n);\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\t\tcase 'actions':\n\t\t\tform_actions();\n\n\t\t\tbreak;\n\t\tcase 'save':\n\t\t\tform_save();\n\n\t\t\tbreak;\n\t\tcase 'perm_remove':\n\t\t\tperm_remove();\n\n\t\t\tbreak;\n\t\tcase 'edit':\n\t\t\ttop_header();\n\t\t\tgroup_edit();\n\t\t\tbottom_footer();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif (!api_plugin_hook_function('user_group_admin_action', get_request_var('action'))) {\n\t\t\t\ttop_header();\n\t\t\t\tuser_group();\n\t\t\t\tbottom_footer();\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n}\n\nfunction user_group_disable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = '' WHERE id = ?\", array($id));\n\n\treset_group_perms($id);\n}\n\nfunction user_group_enable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = 'on' WHERE id = ?\", array($id));\n\n\treset_group_perms($id);\n}\n\nfunction user_group_remove($id) {\n\tdb_execute_prepared('DELETE FROM user_auth_group WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_members WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE group_id = ?', array($id));\n}\n\nfunction user_group_copy($id, $prefix = 'New Group') {\n\tstatic $count = 1;\n\n\t$name = $prefix . ' ' . $count;\n\n\tdb_execute_prepared('INSERT INTO user_auth_group\n\t\t(name, description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled)\n\t\tSELECT ' . db_qstr($name) . ', description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled\n\t\tFROM user_auth_group WHERE id = ?', array($id));\n\n\t$id = db_fetch_insert_id();\n\n\tif (!empty($id)) {\n\t\t$perms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_perms\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($perms)) {\n\t\t\tforeach ($perms as $p) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_perms\n\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\tarray($id, $p['item_id'], $p['type']));\n\t\t\t}\n\t\t}\n\n\t\t$realms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_realm\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($realms)) {\n\t\t\tforeach ($realms as $r) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_realm\n\t\t\t\t\t(group_id, realm_id)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($id, $r['realm_id']));\n\t\t\t}\n\t\t}\n\t}\n\n\t$count++;\n}\n\nfunction update_policies() {\n\t$policies = array('policy_graphs', 'policy_trees', 'policy_hosts', 'policy_graph_templates');\n\n\tforeach ($policies as $p) {\n\t\tif (isset_request_var($p)) {\n\t\t\tdb_execute_prepared(\"UPDATE `user_auth_group` SET `$p` = ? WHERE `id` = ?\", array(get_filter_request_var($p), get_filter_request_var('id')));\n\t\t}\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $group_actions, $user_auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=permsd&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=permsg&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=permste&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=permstr&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('associate_member')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(group_id, user_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND user_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=members&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_remove($selected_items[$i]);\n\n\t\t\t\t\tapi_plugin_hook_function('user_group_remove', $selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_copy($selected_items[$i], get_nfilter_request_var('group_prefix'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* disable */\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM user_auth_group WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t}\n\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'user_group_admin.php',\n\t\t\t\t'actions'    => $group_actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following User Group.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following User Groups.'),\n\t\t\t\t\t'scont'    => __('Delete User Group'),\n\t\t\t\t\t'pcont'    => __('Delete User Groups')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Copy the following User Group.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Copy following User Groups.'),\n\t\t\t\t\t'scont'    => __('Copy User Group'),\n\t\t\t\t\t'pcont'    => __('Copy User Groups'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'group_prefix' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Group Prefix'),\n\t\t\t\t\t\t\t'default' => __('New Group'),\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t3 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Enable the following User Group.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Enable following User Groups.'),\n\t\t\t\t\t'scont'    => __('Enable User Group'),\n\t\t\t\t\t'pcont'    => __('Enable User Groups')\n\t\t\t\t),\n\t\t\t\t4 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Disable the following User Group.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Disable following User Groups.'),\n\t\t\t\t\t'scont'    => __('Disable User Group'),\n\t\t\t\t\t'pcont'    => __('Disable User Groups')\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\tif (isset_request_var('save_component_group')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\t/* ==================================================== */\n\n\t\t/* check duplicate group */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE name = ? AND id != ?', array(get_nfilter_request_var('name'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t$save['id']             = get_nfilter_request_var('id');\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['description']    = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['show_tree']      = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']      = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']   = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings'] = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']     = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['enabled']        = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\n\t\t$save = api_plugin_hook_function('user_group_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$group_id = sql_save($save, 'user_auth_group');\n\n\t\t\tif ($group_id) {\n\t\t\t\treset_group_perms($group_id);\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=general&id=' . (isset($group_id) && $group_id > 0 ? $group_id : get_nfilter_request_var('id')));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('save_component_realm_perms')) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array(get_filter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_realm (group_id, realm_id) VALUES (?, ?)', array(get_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=realms&id=' . get_request_var('id'));\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('save_component_graph_settings')) {\n\t\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_filter_request_var('id'), $sub_field_name, get_nfilter_request_var($sub_field_name, '')));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_request_var('id'), $field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tkill_session_var(OPTIONS_USER);\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&tab=settings&id=' . get_nfilter_request_var('id'));\n\n\t\texit;\n\t} else {\n\t\tapi_plugin_hook('user_group_admin_save');\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_group_admin.php?action=edit&tab=general&id=' .  get_nfilter_request_var('id'));\n}\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('group_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=1 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=2 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=3 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=4 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&tab=gperms&id=' . get_request_var('group_id'));\n}\n\nfunction user_group_members_edit($header_label) {\n\tglobal $config, $auth_realms;\n\n\tmember_filter($header_label);\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = ($sql_where != '' ? ' AND ':'WHERE ') . '(username LIKE ? OR full_name LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\tif (get_request_var('associated') != 'false') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'user_auth_group_members.group_id = ?';\n\t\t$sql_params[] = get_request_var('id', 0);\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(ua.id)\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON ua.id = user_auth_group_members.user_id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$sql_query = \"SELECT DISTINCT ua.id, ua.username, ua.full_name, ua.enabled, ua.realm\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON ua.id = user_auth_group_members.user_id\n\t\t$sql_where\n\t\tORDER BY username, full_name\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$members = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t$display_text = array(\n\t\t__('Login Name'),\n\t\t__('Full Name'),\n\t\t__('ID'),\n\t\t__('Membership'),\n\t\t__('Enabled'),\n\t\t__('Realm')\n\t);\n\n\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=members&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Users'), 'page', 'main');\n\n\tform_start('user_group_admin.php?tab=members&id=' . get_request_var('id'), 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox($display_text, false);\n\n\tif (cacti_sizeof($members)) {\n\t\tforeach ($members as $g) {\n\t\t\tform_alternate_row('line' . $g['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($g['username'], get_request_var('filter'), 'user_admin.php?action=user_edit&id=' . $g['id']), $g['id']);\n\t\t\tform_selectable_cell(filter_value($g['full_name'], get_request_var('filter')), $g['id']);\n\t\t\tform_selectable_cell($g['id'], $g['id']);\n\n\t\t\tif (user_group_is_member($g['id'], get_request_var('id'))) {\n\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Group Member') . '</span>', $g['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Non Member') . '</span>', $g['id']);\n\t\t\t}\n\t\t\tform_selectable_cell(($g['enabled'] == 'on' ? __('Enabled'):__('Disabled')), $g['id']);\n\t\t\tform_selectable_cell((isset($auth_realms[$g['realm']]) ? $auth_realms[$g['realm']]:'Unknown'), $g['id']);\n\n\t\t\tform_checkbox_cell($g['full_name'], $g['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Group Members Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($members)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('tab', 'members', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('associate_member', '1', '');\n\n\t$assoc_actions = array(\n\t\t1 => __('Add to Group'),\n\t\t2 => __('Remove from Group')\n\t);\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($assoc_actions);\n\n\tform_end();\n}\n\nfunction user_group_graph_perms_edit($tab, $header_label) {\n\tglobal $config, $assoc_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth_group\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tswitch($tab) {\n\t\tcase 'permsg':\n\t\t\t$graph_auth_method = read_config_option('graph_auth_method');\n\n\t\t\tif ($graph_auth_method == 1) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Permissive\\' meaning the User must have access to at least one of Graph, Device, or Graph Template to gain access to the Graph');\n\t\t\t} elseif ($graph_auth_method == 2) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Restrictive\\' meaning the User must have access to either the Graph or the Device and Graph Template to gain access to the Graph');\n\t\t\t} elseif ($graph_auth_method == 3) {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Device\\' meaning the User must have access to the Graph or Device to gain access to the Graph');\n\t\t\t} else {\n\t\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Graph Template\\' meaning the User must have access to the Graph or Graph Template to gain access to the Graph');\n\t\t\t}\n\n\t\t\tgraph_filter($header_label);\n\n\t\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t\t/* box: device permissions */\n\t\t\thtml_start_box(__('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graphs', $policy_array, '', '', $policy['policy_graphs'], '', ''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<tr class='even'>\n\t\t\t<td><br><?php print $policy_note;?></td>\n\t\t</tr>\n\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t$sql_limit = 'LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\t\t\t$sql_where = '';\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where .= 'WHERE (\n\t\t\t\tgtg.title_cache LIKE ' . db_qstr('%' . get_request_var('filter') . '%') . '\n\t\t\t\tAND gtg.local_graph_id > 0)';\n\t\t\t} else {\n\t\t\t\t$sql_where .= 'WHERE (gtg.local_graph_id > 0)';\n\t\t\t}\n\n\t\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t\t/* Show all items */\n\t\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t\t}\n\n\t\t\t$policies = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, uag.name,\n\t\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates\n\t\t\tFROM user_auth_group AS uag\n\t\t\tWHERE uag.enabled = 'on'\n\t\t\tAND uag.id = ?\",\n\t\t\t\tarray(get_request_var('id')));\n\n\t\t\t/**\n\t\t\t * if viewing just the graphs that the user has access to\n\t\t\t * we use a custom crafted sql_where clause to calculate\n\t\t\t * permissions due to the inefficient nature of the HAVING\n\t\t\t * SQL clause.\n\t\t\t */\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\t$sql_where = get_policy_where($graph_auth_method, $policies, $sql_where);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * get the sql join and select to display the policy information\n\t\t\t * this includes the four graph permission types\n\t\t\t */\n\t\t\t$details = get_policy_join_select($policies);\n\n\t\t\tif (cacti_sizeof($details)) {\n\t\t\t\t$sql_select = $details['sql_select'];\n\t\t\t\t$sql_join   = $details['sql_join'];\n\t\t\t} else {\n\t\t\t\t$sql_select = '';\n\t\t\t\t$sql_join   = '';\n\t\t\t}\n\n\t\t\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description,\n\t\t\th.disabled, h.deleted, gt.name AS template_name,\n\t\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id, $sql_select\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\tORDER BY gtg.title_cache\n\t\t\t$sql_limit\");\n\n\t\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id)\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_where\");\n\n\t\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Graphs'), 'page', 'main');\n\n\t\t\tform_start('user_group_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array( __('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tforeach ($graphs as $g) {\n\t\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\t\tform_selectable_cell(get_permission_string($g, $policies), $g['local_graph_id']);\n\n\t\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t$(function() {\n\t\t\t\t$(document).tooltip({\n\t\t\t\t\titems: '[data-tooltip]',\n\t\t\t\t\tcontent: function() {\n\t\t\t\t\t\treturn $(this).attr('data-tooltip');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permsd':\n\t\t\tdevice_filter($header_label);\n\n\t\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t\t/* box: device permissions */\n\t\t\thtml_start_box(__('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Graph Policy for this User Group');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t$sql_where    = '';\n\t\t\t$sql_params   = array();\n\t\t\t$sql_params[] = get_request_var('id');\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'h.deleted = \"\" AND (h.hostname LIKE ? OR h.description LIKE ?)';\n\t\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t} else {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.deleted = \"\"';\n\t\t\t}\n\n\t\t\tif (get_request_var('host_template_id') == '0') {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.host_template_id = 0';\n\t\t\t} elseif (get_request_var('host_template_id') > 0) {\n\t\t\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.host_template_id = ?';\n\t\t\t\t$sql_params[] = get_request_var('host_template_id');\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' uagp.group_id = ?';\n\t\t\t\t$sql_params[] = get_request_var('id', 0);\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(DISTINCT h.id)\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN user_auth_group_perms AS uagp\n\t\t\t\tON h.id = uagp.item_id\n\t\t\t\tAND uagp.type = 3\n\t\t\t\tAND uagp.group_id = ?\n\t\t\t\t$sql_where\",\n\t\t\t\t$sql_params);\n\n\t\t\t$host_graphs = array_rekey(\n\t\t\t\tdb_fetch_assoc('SELECT host_id, COUNT(*) AS graphs\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tGROUP BY host_id'),\n\t\t\t\t'host_id', 'graphs'\n\t\t\t);\n\n\t\t\t$host_data_sources = array_rekey(\n\t\t\t\tdb_fetch_assoc('SELECT host_id, COUNT(*) AS data_sources\n\t\t\t\t\tFROM data_local\n\t\t\t\t\tGROUP BY host_id'),\n\t\t\t\t'host_id', 'data_sources'\n\t\t\t);\n\n\t\t\t$sql_query = \"SELECT h.*, uagp.group_id\n\t\t\t\tFROM host AS h\n\t\t\t\tLEFT JOIN user_auth_group_perms AS uagp\n\t\t\t\tON h.id = uagp.item_id\n\t\t\t\tAND uagp.type = 3\n\t\t\t\tAND uagp.group_id = ?\n\t\t\t\t$sql_where\n\t\t\t\tORDER BY description\n\t\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$hosts = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t\t\t$display_text = array(\n\t\t\t\t__('Description'),\n\t\t\t\t__('ID'),\n\t\t\t\t__('Effective Policy'),\n\t\t\t\t__('Graphs'),\n\t\t\t\t__('Data Sources'),\n\t\t\t\t__('Status'),\n\t\t\t\t__('Hostname')\n\t\t\t);\n\n\t\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Devices'), 'page', 'main');\n\n\t\t\tform_start('user_group_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($hosts)) {\n\t\t\t\tforeach ($hosts as $host) {\n\t\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\t\tform_selectable_cell($host['id'], $host['id']);\n\n\t\t\t\t\tif (empty($host['group_id']) || $host['group_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\n\t\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($hosts)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_host', '1', '');\n\n\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permste':\n\t\t\ttemplate_filter($header_label);\n\n\t\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t\t/* box: device permissions */\n\t\t\thtml_start_box(__('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where = 'WHERE gt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t\t\t} else {\n\t\t\t\t$sql_where = '';\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell_prepared(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON gt.id = user_auth_group_perms.item_id\n\t\t\tAND user_auth_group_perms.type = 4\n\t\t\tAND user_auth_group_perms.group_id = ?\n\t\t\t$sql_where\",\n\t\t\t\tarray(get_request_var('id')));\n\n\t\t\t$sql_query = \"SELECT gt.id, gt.name, COUNT(DISTINCT gl.id) AS totals, user_auth_group_perms.group_id\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON gt.id = user_auth_group_perms.item_id\n\t\t\tAND user_auth_group_perms.type = 4\n\t\t\tAND user_auth_group_perms.group_id = ?\n\t\t\t$sql_where\n\t\t\tGROUP BY gt.id\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$graphs = db_fetch_assoc_prepared($sql_query, array(get_request_var('id')));\n\n\t\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graph Templates'), 'page', 'main');\n\n\t\t\tform_start('user_group_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array( __('Template Name'), __('ID'), __('Effective Policy'), __('Total Graphs'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tforeach ($graphs as $g) {\n\t\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\n\t\t\t\t\tif (empty($g['group_id']) || $g['group_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\n\t\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t\t}\n\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_template', '1', '');\n\n\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t\tcase 'permstr':\n\t\t\ttree_filter($header_label);\n\n\t\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t\t/* box: device permissions */\n\t\t\thtml_start_box(__('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t\t?>\n\t\t\t<tr class='even'>\n\t\t\t\t<td><table><tr>\n\t\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User Group');?></td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t\t</td>\n\t\t\t\t</tr></table></td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\t/* if the number of rows is -1, set it to the default */\n\t\t\tif (get_request_var('rows') == -1) {\n\t\t\t\t$rows = read_config_option('num_rows_table');\n\t\t\t} else {\n\t\t\t\t$rows = get_request_var('rows');\n\t\t\t}\n\n\t\t\t/* form the 'where' clause for our main sql query */\n\t\t\tif (get_request_var('filter') != '') {\n\t\t\t\t$sql_where = 'WHERE gt.name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t\t\t} else {\n\t\t\t\t$sql_where = '';\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') != 'false') {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t\t}\n\n\t\t\t$total_rows = db_fetch_cell('SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = ' . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t\t$sql_query = 'SELECT gt.id, gt.name, user_auth_group_perms.group_id\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = ' . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\t\t\tform_start('user_group_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\t\tprint $nav;\n\n\t\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t\t$display_text = array( __('Tree Name'), __('ID'), __('Effective Policy'));\n\n\t\t\thtml_header_checkbox($display_text, false);\n\n\t\t\tif (cacti_sizeof($trees)) {\n\t\t\t\tforeach ($trees as $t) {\n\t\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\n\t\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\n\t\t\t\t\tif (empty($t['group_id']) || $t['group_id'] == null) {\n\t\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\n\t\t\t\t\tform_end_row();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t\t}\n\t\t\thtml_end_box(false);\n\n\t\t\tif (cacti_sizeof($trees)) {\n\t\t\t\tprint $nav;\n\t\t\t}\n\n\t\t\tform_hidden_box('tab',$tab,'');\n\t\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t\t2 => __('Grant Access')\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$assoc_actions = array(\n\t\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t\t2 => __('Revoke Access')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\t\tform_end();\n\n\t\t\tbreak;\n\t}\n}\n\nfunction user_group_is_member($user_id, $group_id) {\n\treturn db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_group_members\n\t\tWHERE user_id = ?\n\t\tAND group_id = ?',\n\t\tarray($user_id, $group_id));\n}\n\nfunction user_group_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div class='cactiTableTitleRow'>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . ' ' . html_escape($header_label) . \"</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></a></span></div>\n\t\t</div>\n\t</div>\";\n\n\tform_start('user_group_admin.php', 'chk');\n\n\t$all_realms = $user_auth_realms;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\tforeach ($user_auth_roles as $role_name => $perms) {\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . html_escape($role_name) . '</th></tr>';\n\t\tprint \"<tr class='odd'><td colspan='2'><div class='flexContainer'>\";\n\n\t\tforeach ($perms as $realm) {\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_group_realm\n\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\t\tif ($set) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tif ($realm != 101) {\n\t\t\t\t\t$display = trim(str_replace(array('Plugin ->', 'Plugin ', 'Configure '), '', $user_auth_realms[$realm]));\n\t\t\t\t} else {\n\t\t\t\t\t$display = trim($user_auth_realms[$realm]);\n\t\t\t\t}\n\t\t\t\t$display = trim(str_replace(array('View ', 'Management'), array('', 'Administration'), $display));\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tprint '<div class=\"flexChild\">';\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $display, '', '', '', (!isempty_request_var('id') ? 1 : 0), $display, true);\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tif (cacti_sizeof($links)) {\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('External Link Permissions') . '</th></tr>';\n\t\tprint \"<tr class='odd'><td class='left' colspan='2'><div class='flexContainer'>\";\n\n\t\tforeach ($links as $r) {\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_group_realm\n\t\t\t\tWHERE group_id = ?\n\t\t\t\tAND realm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tswitch($r['style']) {\n\t\t\t\tcase 'CONSOLE':\n\t\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? __('External Links') : $r['extendedstyle']) . '/' . $r['title'];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0), $description, true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\t$i = 0;\n\n\tif (cacti_sizeof($realms)) {\n\t\tforeach ($realms as $r) {\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\t// Skip already set realms\n\t\t\tforeach ($user_auth_roles as $role => $rrealms) {\n\t\t\t\tforeach ($rrealms as $realm_id) {\n\t\t\t\t\tif ($realm == $realm_id) {\n\t\t\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\t\t\tcontinue 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_group_realm\n\t\t\t\tWHERE group_id = ?\n\t\t\t\tAND realm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->') + 2:0);\n\n\t\t\tif ($i == 0) {\n\t\t\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('Plugin Permissions') . '</th></tr>';\n\t\t\t\tprint \"<tr class='odd'><td colspan='2'><div class='flexContainer'>\";\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0), $r['display'], true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tif ($i > 0) {\n\t\t\tprint '</div></td></tr>';\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tprint \"<tr class='tableHeader'><th class='left' colspan='2'>\" . __('Legacy Permissions') . '</th></tr>';\n\t\tprint \"<tr class='odd'><td colspan='2'><div class='flexContainer'>\";\n\n\t\tforeach ($all_realms as $realm => $name) {\n\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\tFROM user_auth_group_realm\n\t\t\t\tWHERE group_id = ? AND\n\t\t\t\trealm_id = ?',\n\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\tif ($set) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->') + 2:0);\n\n\t\t\tprint '<div class=\"flexChild\">';\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0), $r['display'], true);\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint '</div></td></tr>';\n\t}\n\n\tprint '</table></td></tr>';\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_hidden_box('save_component_realm_perms','1','');\n\tform_hidden_box('tab','realms','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n}\n\nfunction user_group_settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_group_admin.php', 'chk');\n\n\thtml_start_box(__esc('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n\t\tprint \"<div class='spacer formHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='ti ti-chevrons-up'></i></div>\":'') . '</div></div>';\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (graph_config_value_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (graph_config_value_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_graph_settings','1','');\n\tform_hidden_box('tab','settings','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tvar showField = $('#custom_fonts').is(':checked');\n\t\ttoggleFields({\n\t\t\tfonts: themeFonts == 1,\n\t\t\ttitle_size: showField,\n\t\t\ttitle_font: showField,\n\t\t\tlegend_size: showField,\n\t\t\tlegend_font: showField,\n\t\t\taxis_size: showField,\n\t\t\taxis_font: showField,\n\t\t\tunit_size: showField,\n\t\t\tunit_font: showField,\n\t\t});\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction group_edit() {\n\tglobal $config, $fields_user_group_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'members'  => __('Members'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t$permission_model = read_config_option('graph_auth_method');\n\n\tif ($permission_model == 3) { // Device Based\n\t\tunset($tabs['permste']);\n\t} elseif ($permission_model == 4) { // Graph Template Based\n\t\tunset($tabs['permsd']);\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$group        = db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __esc('User Group Management [edit: %s]', $group['name']);\n\t} else {\n\t\t$header_label = __('User Group Management [new]');\n\t}\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_ugroup_tab', 'general');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach ($tabs as $id => $name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($id == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape(CACTI_PATH_URL .\n\t\t\t\t'user_group_admin.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $id) .\n\t\t\t\t\"'>\" . $name . '</a></li>';\n\t\t}\n\n\t\tapi_plugin_hook('user_group_admin_tab');\n\n\t\tprint '</ul></nav></div>';\n\t}\n\n\tswitch(get_request_var('tab')) {\n\t\tcase 'general':\n\t\t\tapi_plugin_hook_function('user_group_admin_edit', (isset($group) ? get_request_var('id') : 0));\n\n\t\t\tform_start('user_group_admin.php');\n\n\t\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\t\tdraw_edit_form(array(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($fields_user_group_edit, (isset($group) ? $group : array()))\n\t\t\t));\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tform_save_button('user_group_admin.php', 'return');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\tvar consoleAllowed=<?php print is_user_group_realm_allowed(8, (isset($group) ? $group['id'] : 0)) ? 'true':'false';?>;\n\n\t\t\t$(function() {\n\t\t\t\tif (!consoleAllowed) {\n\t\t\t\t\tif ($('#login_opts_2').is(':checked')) {\n\t\t\t\t\t\t$('#login_opts_2').prop('checked', false);\n\t\t\t\t\t\t$('#login_opts_3').prop('checked', true);\n\t\t\t\t\t}\n\n\t\t\t\t\t$('#login_opts_2').prop('disabled', true);\n\t\t\t\t}\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\n\t\t\tbreak;\n\t\tcase 'settings':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_group_admin.php');\n\t\t\t}\n\n\t\t\tuser_group_settings_edit($header_label);\n\n\t\t\tbreak;\n\t\tcase 'realms':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_group_admin.php');\n\t\t\t}\n\n\t\t\tuser_group_realms_edit($header_label);\n\n\t\t\tbreak;\n\t\tcase 'permsg':\n\t\tcase 'permsd':\n\t\tcase 'permste':\n\t\tcase 'permstr':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_group_admin.php');\n\t\t\t}\n\n\t\t\tuser_group_graph_perms_edit(get_request_var('tab'), $header_label);\n\n\t\t\tbreak;\n\t\tcase 'members':\n\t\t\tif (isempty_request_var('id')) {\n\t\t\t\theader('Location: user_group_admin.php');\n\t\t\t}\n\n\t\t\tuser_group_members_edit($header_label);\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif (api_plugin_hook_function('user_group_admin_run_action', get_request_var('tab'))) {\n\t\t\t\tuser_group_realms_edit($header_label);\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n}\n\nfunction is_user_group_realm_allowed($realm_id, $group_id) {\n\treturn db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM user_auth_group_realm\n\t\tWHERE group_id = ?\n\t\tAND realm_id = ?',\n\t\tarray($group_id, $realm_id));\n}\n\nfunction user_group() {\n\tglobal $group_actions, $item_rows;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('User Group Management'), 'user_group_admin.php', 'forms', 'sess_ugad', 'user_group_admin.php?action=edit&tab=general');\n\n\t$pageFilter->rows_label = __('Groups');\n\t$pageFilter->render();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . '(name LIKE ? OR description LIKE ?)';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM user_auth_group\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$group_list = db_fetch_assoc_prepared(\"SELECT uag.id, uag.name, uag.description,\n\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates,\n\t\tuag.enabled, count(uagm.group_id) AS members\n\t\tFROM user_auth_group AS uag\n\t\tLEFT JOIN user_auth_group_members AS uagm\n\t\tON uag.id = uagm.group_id\n\t\t$sql_where\n\t\tGROUP BY uag.id\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') .\n\t\t' LIMIT ' . ($rows * (get_request_var('page') - 1) . ',' . $rows),\n\t\t$sql_params);\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('Group Name'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'members' => array(\n\t\t\t'display' => __('Members'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'description' => array(\n\t\t\t'display' => __('Description'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_graphs' => array(\n\t\t\t'display' => __('Graph Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_hosts' => array(\n\t\t\t'display' => __('Device Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'policy_graph_templates' => array(\n\t\t\t'display' => __('Template Policy'),\n\t\t\t'sort'    => 'ASC'\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'display' => __('Enabled'),\n\t\t\t'sort'    => 'ASC'\n\t\t)\n\t);\n\n\t$nav = html_nav_bar('user_group_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Groups'), 'page', 'main');\n\n\tform_start('user_group_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tforeach ($group_list as $group) {\n\t\t\tif ($group['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $group['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($group['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&tab=general&id=' . $group['id']), $group['id']);\n\t\t\tform_selectable_cell(($group['members'] > 0 ? number_format_i18n($group['members'], 0):'None'), $group['id']);\n\t\t\tform_selectable_cell(filter_value($group['description'], get_request_var('filter')), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graphs'] == 1 ? __('ALLOW') : __('DENY')), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_hosts'] == 1 ? __('ALLOW') : __('DENY')), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graph_templates'] == 1 ? __('ALLOW') : __('DENY')), $group['id']);\n\t\t\tform_selectable_cell($enabled, $group['id']);\n\n\t\t\tform_checkbox_cell($group['name'], $group['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"' . (cacti_sizeof($display_text) + 1) . '\"><em>' . __('No User Groups Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($group_actions);\n\n\tform_end();\n}\n\nfunction create_graphs_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$graph_templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.graph_template_id = gt.id\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$graph_templates = $any + $none + $graph_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'graph_template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '0',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $graph_templates,\n\t\t\t\t\t'value'         => '0'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Graphs'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction graph_filter($header_label) {\n\t$filters = create_graphs_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Graph Permissions %s', $header_label), 'user_group_admin.php?action=edit&tab=permsd&id=' . get_request_var('id'), 'form_template', 'sess_ua_d');\n\n\t$pageFilter->rows_label       = __('Graphs');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'edit', '');\n\tform_hidden_box('tab', 'permsg', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction create_device_filter() {\n\tglobal $item_rows;\n\n\t$any  = array('-1' => __('Any'));\n\t$none = array('0'  => __('None'));\n\n\t$host_templates = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM host_template\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\n\t$host_templates = $any + $none + $host_templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'host_template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $host_templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Devices'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction device_filter($header_label) {\n\t$filters = create_device_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Device Permissions %s', $header_label), 'user_group_admin.php?action=edit&tab=permsd&id=' . get_request_var('id'), 'form_template', 'sess_ug_d');\n\n\t$pageFilter->rows_label       = __('Devices');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\n\t$pageFilter->set_filter_array($filters);\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'edit', '');\n\tform_hidden_box('tab', 'permste', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction template_filter($header_label) {\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Template Permissions %s', $header_label), 'user_group_admin.php?action=edit&tab=permste&id=' . get_request_var('id'), 'form_template', 'sess_ug_te');\n\n\t$pageFilter->rows_label       = __('Templatee');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Only Show Exceptions');\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'edit', '');\n\tform_hidden_box('tab', 'permste', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction tree_filter($header_label) {\n    /* create the page filter */\n    $pageFilter = new CactiTableFilter(__('Tree Permissions %s', $header_label), 'user_group_admin.php?action=edit&tab=permstr&id=' . get_request_var('id'), 'form_tree', 'sess_ug_tr');\n\n    $pageFilter->rows_label       = __('Trees');\n    $pageFilter->has_associated   = true;\n    $pageFilter->associated_label = __('Only Show Exceptions');\n    $pageFilter->render();\n\n    form_hidden_box('action', 'edit', '');\n    form_hidden_box('tab', 'permstr', '');\n    form_hidden_box('id', get_request_var('id'), '');\n}\n\nfunction member_filter($header_label) {\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header_label, 'user_group_admin.php?action=edit&tab=members&id=' . get_request_var('id'), 'forms', 'sess_ug_g');\n\n\t$pageFilter->rows_label       = __('Users');\n\t$pageFilter->has_associated   = true;\n\t$pageFilter->associated_label = __('Show Members');\n\t$pageFilter->render();\n\n\tform_hidden_box('action', 'edit', '');\n\tform_hidden_box('tab', 'members', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n}\n\n"
        },
        {
          "name": "user_log.php",
          "type": "blob",
          "size": 10.6142578125,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'purge_execute':\n\t\tclear_user_log();\n\t\traise_message('purge_user_log', __('User Log Purged.'), MESSAGE_LEVEL_INFO);\n\t\theader('location: user_log.php');\n\n\t\tbreak;\n\tcase 'purge':\n\t\ttop_header();\n\t\tpurge_user_log();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tview_user_log();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction view_user_log() {\n\tglobal $auth_realms, $item_rows;\n\n\tprocess_sanitize_draw_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* filter by username */\n\tif (get_request_var('user_id') == '-2') {\n\t\t$sql_where    = 'WHERE ul.user_id NOT IN (SELECT DISTINCT id FROM user_auth)';\n\t} elseif (get_request_var('user_id') != '-1') {\n\t\t$sql_where    = 'WHERE ul.user_id = ?';\n\t\t$sql_params[] = get_request_var('user_id');\n\t}\n\n\t/* filter by result */\n\tif (get_request_var('result') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ul.result = ?';\n\t\t$sql_params[] = get_request_var('result');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (\n\t\t\tul.username LIKE ? OR ul.time LIKE ? OR ua.full_name LIKE ? OR ul.ip LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username = ul.username\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$user_log_sql = \"SELECT ul.username, ua.full_name, ua.realm,\n\t\tul.time, ul.result, ul.ip\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username=ul.username\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$user_log = db_fetch_assoc_prepared($user_log_sql, $sql_params);\n\n\t$display_text = array(\n\t\t'username'  => array(__('User'), 'ASC'),\n\t\t'full_name' => array(__('Full Name'), 'ASC'),\n\t\t'realm'     => array(__('Authentication Realm'), 'ASC'),\n\t\t'time'      => array(__('Date'), 'DESC'),\n\t\t'result'    => array(__('Result'), 'DESC'),\n\t\t'ip'        => array(__('IP Address'), 'DESC')\n\t);\n\n\t$nav = html_nav_bar('user_log.php?user_id=' . get_request_var('user_id') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Login Attempts'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'user_log.php');\n\n\t$i = 0;\n\n\tif (cacti_sizeof($user_log)) {\n\t\tforeach ($user_log as $item) {\n\t\t\tform_alternate_row('line' . $i, true);\n\t\t\t?>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['username'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($item['full_name'])) {\n\t\t\t\t\tprint filter_value($item['full_name'], get_request_var('filter'));\n\t\t\t\t} else {\n\t\t\t\t\tprint __('(User Removed)');\n\t\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($auth_realms[$item['realm']])) {\n\t\t\t\t\tprint filter_value($auth_realms[$item['realm']], get_request_var('filter'));\n\t\t\t\t} else {\n\t\t\t\t\tprint __('N/A');\n\t\t\t\t}\n\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['time'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print($item['result'] == 0 ? __('Failed'):($item['result'] == 1 ? __('Success - Password'):($item['result'] == 3 ? __('Success - Password Change'):__('Success - Token'))));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['ip'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($user_log)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction clear_user_log() {\n\t$users = db_fetch_assoc('SELECT DISTINCT id, username FROM user_auth');\n\n\tif (cacti_sizeof($users)) {\n\t\t/* remove active users */\n\t\tforeach ($users as $user) {\n\t\t\t// Check how many rows for the current user with a valid token\n\t\t\tforeach (array(1, 2) as $result) {\n\t\t\t\t$total_rows = db_fetch_cell_prepared('SELECT COUNT(username)\n\t\t\t\t\tFROM user_log\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND user_id = ?\n\t\t\t\t\tAND result = ?',\n\t\t\t\t\tarray($user['username'], $user['id'], $result));\n\n\t\t\t\tif ($total_rows > 1) {\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM user_log\n\t\t\t\t\t\tWHERE username = ?\n\t\t\t\t\t\tAND user_id = ?\n\t\t\t\t\t\tAND result = ?\n\t\t\t\t\t\tORDER BY time LIMIT ' . ($total_rows - 1),\n\t\t\t\t\t\tarray($user['username'], $user['id'], $result));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND user_id = ?\n\t\t\t\tAND result = 0',\n\t\t\t\tarray($user['username'], $user['id']));\n\t\t}\n\n\t\t/* delete inactive users */\n\t\tdb_execute('DELETE\n\t\t\tFROM user_log\n\t\t\tWHERE user_id NOT IN (SELECT id FROM user_auth)\n\t\t\tOR username NOT IN (SELECT username FROM user_auth)');\n\t}\n}\n\nfunction purge_user_log() {\n\tform_start('user_log.php');\n\n\thtml_start_box(__('Purge User Log'), '50%', '', '3', 'center', '');\n\n\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to purge the User Log.<br><br><br>Note: If logging is set to both Cacti and Syslog, the log information will remain in Syslog.') . \"</p>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class='saveRow'>\n\t\t\t<td colspan='2' class='right'>\n\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='\" . __esc('Cancel') . \"'>&nbsp\n\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='pc' name='purge_continue' value='\" . __esc('Continue') . \"' title='\" . __esc('Purge Log') . \"'>\n\t\t\t\t<script type='text/javascript'>\n\t\t\t\t$(function() {\n\t\t\t\t\t$('#pc').click(function() {\n\t\t\t\t\t\tstrURL = location.pathname+'?action=purge_execute';\n\t\t\t\t\t\tloadUrl({url:strURL})\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#cancel').click(function() {\n\t\t\t\t\t\tstrURL = location.pathname;\n\t\t\t\t\t\tloadUrl({url:strURL})\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t</td>\n\t\t</tr>\";\n\n\thtml_end_box();\n}\n\nfunction create_filter() {\n\tglobal $item_rows;\n\n\t$all     = array('-1' => __('All'));\n\t$deleted = array('-2' => __('Deleted/Invalid'));\n\t$users   = db_fetch_assoc('SELECT DISTINCT id,\n\t\tIF(ud.domain_name != \"\",\n\t\t\tCONCAT(ua.username, \" (\", ud.domain_name, \")\"),\n\t\t\tIF(ua.realm = 0,\n\t\t\t\tCONCAT(ua.username, \" (' . __esc('Local Auth') . ')\"),\n\t\t\t\tCONCAT(ua.username, \" (' . __esc('Basic Auth') . ')\")\n\t\t\t)\n\t\t) AS name\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_domains AS ud\n\t\tON ua.realm = ud.domain_id+1000\n\t\tORDER BY username, realm');\n\n\tif (cacti_sizeof($users)) {\n\t\t$users = array_rekey($users, 'id', 'name');\n\t}\n\n\t$users = $all + $deleted + $users;\n\n\t$results = array(\n\t\t'-1' => __('Any'),\n\t\t'1'  => __('Success - Password'),\n\t\t'2'  => __('Success - Token'),\n\t\t'3'  => __('Success - Password Change'),\n\t\t'0'  => __('Failed')\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'user_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('User'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $users,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'result' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Result'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $results,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Attempts'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply filter to table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset filter to default values'),\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Purge'),\n\t\t\t\t'action'  => 'default',\n\t\t\t\t'title'   => __('Purge User log of all but the last login attempt'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'time',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_filter($render = false) {\n\t$filters = create_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('User Login History'), 'user_log.php', 'form_userlog', 'sess_userlog');\n\n\t$pageFilter->rows_label = __('Attempts');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n"
        },
        {
          "name": "utilities.php",
          "type": "blob",
          "size": 58.6787109375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/boost.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\ninclude_once('./lib/clog_webapi.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'clear_poller_cache':\n\t\t$running = is_process_running('pushout', 'rmaster', 0);\n\n\t\tif ($running === false) {\n\t\t\t$php_binary = read_config_option('path_php_binary');\n\n\t\t\texec_background($php_binary, CACTI_PATH_CLI . '/rebuild_poller_cache.php');\n\n\t\t\tusleep(300000);\n\n\t\t\traise_message('repopulate_background', __('The Poller Cache Rebuild Operation has been started in background'), MESSAGE_LEVEL_INFO);\n\t\t} elseif ($running === true) {\n\t\t\traise_message('repopulate_background', __('The Poller Cache Rebuild Operation has already been started.'), MESSAGE_LEVEL_INFO);\n\t\t}\n\n\t\theader('Location: utilities.php?action=view_poller_cache');\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'rebuild_resource_cache':\n\t\trebuild_resource_cache();\n\t\theader('Location: utilities.php');\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'view_snmp_cache':\n\t\ttop_header();\n\t\tutilities_view_snmp_cache();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'view_poller_cache':\n\t\ttop_header();\n\t\tutilities_view_poller_cache();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'view_logfile':\n\t\tutilities_view_logfile();\n\n\t\tbreak;\n\tcase 'clear_logfile':\n\t\tutilities_clear_logfile();\n\t\tutilities_view_logfile();\n\n\t\tbreak;\n\tcase 'purge_logfile':\n\t\tclog_purge_logfile();\n\t\tutilities_view_logfile();\n\n\t\tbreak;\n\tcase 'view_user_log':\n\t\theader('location: user_log.php');\n\n\t\tbreak;\n\tcase 'clear_user_log':\n\t\theader('location: user_log.php?action=purge');\n\n\t\tbreak;\n\tcase 'purge_user_log':\n\t\theader('location: user_log.php?action=purge');\n\n\t\tbreak;\n\tcase 'view_tech':\n\t\theader('Location: support.php?tab=summary');\n\n\t\texit();\n\tcase 'view_boost_status':\n\t\ttop_header();\n\t\tboost_display_run_status();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'view_snmpagent_cache':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_cache();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'purge_data_source_statistics':\n\t\tpurge_data_source_statistics();\n\t\traise_message('purge_dss', __('Data Source Statistics Purged.'), MESSAGE_LEVEL_INFO);\n\t\theader('Location: utilities.php');\n\n\t\tbreak;\n\tcase 'rebuild_snmpagent_cache':\n\t\tsnmpagent_cache_rebuilt();\n\t\theader('Location: utilities.php?action=view_snmpagent_cache');\n\n\t\texit;\n\n\t\tbreak;\n\tcase 'view_snmpagent_events':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_eventlog();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\tget_allowed_ajax_hosts();\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\tget_allowed_ajax_hosts(false);\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('utilities_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tutilities();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n}\n\nfunction rebuild_resource_cache() {\n\tdb_execute('DELETE FROM settings WHERE name LIKE \"md5dirsum%\"');\n\tdb_execute('TRUNCATE TABLE poller_resource_cache');\n\n\traise_message('resource_cache_rebuild');\n\n\tcacti_log('NOTE: Poller Resource Cache scheduled for rebuild by user ' . get_username($_SESSION[SESS_USER_ID]), false, 'WEBUI');\n}\n\nfunction utilities_view_logfile() {\n\tclog_view_logfile();\n}\n\nfunction utilities_clear_logfile() {\n\tload_current_session_value('refresh', 'sess_logfile_refresh', read_config_option('log_refresh_interval'));\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_logfile';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\ttop_header();\n\n\t$logfile = read_config_option('path_cactilog');\n\n\tif ($logfile == '') {\n\t\t$logfile = './log/cacti.log';\n\t}\n\n\thtml_start_box(__('Clear Cacti Log'), '100%', '', '3', 'center', '');\n\n\tif (file_exists($logfile)) {\n\t\tif (is_writable($logfile)) {\n\t\t\t/* fill in the current date for printing in the log */\n\t\t\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t\t\t$date = date(CACTI_DATE_TIME_FORMAT);\n\t\t\t} else {\n\t\t\t\t$date = date('Y-m-d H:i:s');\n\t\t\t}\n\n\t\t\t$log_fh = fopen($logfile, 'w');\n\t\t\tfwrite($log_fh, __('%s - WEBUI NOTE: Cacti Log Cleared from Web Management Interface.', $date) . PHP_EOL);\n\t\t\tfclose($log_fh);\n\t\t\tprint '<tr><td>' . __('Cacti Log Cleared') . '</td></tr>';\n\t\t} else {\n\t\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, no write permissions.') . '<b></td></tr>';\n\t\t}\n\t} else {\n\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, file does not exist.'). '</b></td></tr>';\n\t}\n\thtml_end_box();\n}\n\nfunction create_data_query_filter() {\n\tglobal $item_rows;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\t$deleted = array('-2' => __('Deleted/Invalid'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $none + $sites;\n\n\t$status = array(\n\t\t'-1' => __('Any'),\n\t\t'1'  => __('Enabled'),\n\t\t'0'  => __('Disabled')\n\t);\n\n\t$pactions = array(\n\t\t'-1' => __('Any'),\n\t\t'0'  => __('SNMP'),\n\t\t'1'  => __('Script'),\n\t\t'2'  => __('Script Server')\n\t);\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$host_id = get_filter_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where    = ($sql_where != '' ? ' AND ':'WHERE ') . 'h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == '' || $host_id == '-1') {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t} else {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t}\n\n\tif (get_request_var('site_id') >= 0) {\n\t\t$sql_where    = ($sql_where != '' ? ' AND ':'WHERE ') . 'site_id = ?';\n\t\t$sql_params[] = get_filter_request_var('site_id');\n\t}\n\n\t$data_queries = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT sq.id, sq.name\n\t\t\tFROM host_snmp_cache AS hsc\n\t\t\tINNER JOIN snmp_query AS sq\n\t\t\tON hsc.snmp_query_id = sq.id\n\t\t\tINNER JOIN host AS h\n\t\t\tON hsc.host_id = h.id\n\t\t\t$sql_where\n\t\t\tORDER by sq.name\",\n\t\t\t$sql_params),\n\t\t'id', 'name'\n\t);\n\n\t$data_queries = $any + $data_queries;\n\n\tif (isset_request_var('with_index')) {\n\t\t$value = get_nfilter_request_var('with_index');\n\t} else {\n\t\t$value = read_config_option('default_has') == 'on' ? 'true':'false';\n\t}\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Site'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sites,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'        => 'drop_callback',\n\t\t\t\t\t'friendly_name' => __('Device'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'sql'           => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'        => 'ajax_hosts',\n\t\t\t\t\t'id'            => $host_id,\n\t\t\t\t\t'value'         => $hostname,\n\t\t\t\t\t'on_change'     => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'snmp_query_id' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Data Query'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $data_queries,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Entries'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'with_index' => array(\n\t\t\t\t\t'method'         => 'filter_checkbox',\n\t\t\t\t\t'friendly_name'  => __('Include Index'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_REGEXP,\n\t\t\t\t\t'filter_options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'value'          => $value\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_data_query_filter($render = false) {\n\t$filters = create_data_query_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('Data Query Cache Items'), 'utilities.php?action=view_snmp_cache', 'form_snmpcache', 'sess_usnmp');\n\n\t$pageFilter->rows_label = __('Entries');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction utilities_view_snmp_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\tprocess_sanitize_draw_data_query_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* filter by host */\n\tif (get_request_var('host_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.id=0';\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.id = ?';\n\t\t$sql_params[] = get_request_var('host_id');\n\t}\n\n\t/* filter by query name */\n\tif (get_request_var('snmp_query_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('snmp_query_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' hsc.snmp_query_id=' . get_request_var('snmp_query_id');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (\n\t\t\th.description LIKE ?\n\t\t\tOR sq.name LIKE ?\n\t\t\tOR hsc.field_name LIKE ?\n\t\t\tOR hsc.field_value LIKE ?\n\t\t\tOR hsc.oid LIKE ?';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\n\t\tif (get_request_var('with_index') == 1) {\n\t\t\t$sql_where .= ' OR hsc.snmp_index LIKE ?';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t}\n\n\t\t$sql_where .= ')';\n\t}\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$snmp_cache_sql = \"SELECT hsc.*, h.description, sq.name\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\t$sql_where\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$snmp_cache = db_fetch_assoc_prepared($snmp_cache_sql, $sql_params);\n\n\t$display_text = array(\n\t\t__('Device'),\n\t\t__('Data Query Name'),\n\t\t__('Index'),\n\t\t__('Field Name'),\n\t\t__('Field Value'),\n\t\t__('OID')\n\t);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmp_cache&host_id=' . get_request_var('host_id') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header($display_text, 1);\n\n\t$i = 0;\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\t\t\tform_alternate_row('line' . $i, true);\n\n\t\t\tform_selectable_cell(filter_value($item['description'], get_request_var('filter')), $i);\n\t\t\tform_selectable_cell(filter_value($item['name'], get_request_var('filter')), $i);\n\t\t\tform_selectable_ecell($item['snmp_index'], $i);\n\t\t\tform_selectable_cell(filter_value($item['field_name'], get_request_var('filter')), $i);\n\t\t\tform_selectable_cell(filter_value($item['field_value'], get_request_var('filter')), $i);\n\t\t\tform_selectable_cell(filter_value($item['oid'], get_request_var('filter')), $i);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"6\"><em>' . __('No Data Query Entries Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities_view_poller_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\tprocess_sanitize_draw_poller_cache_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\tif (get_request_var('site_id') > 0 ) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':' WHERE') . ' h.site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\tif (get_request_var('poller_action') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':' WHERE') . ' pi.action = ?';\n\t\t$sql_params[] = get_request_var('poller_action');\n\t}\n\n\tif (get_request_var('host_id') == '0') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':' WHERE') . ' pi.host_id = 0';\n\t} elseif (get_request_var('host_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':' WHERE') . ' pi.host_id = ?';\n\t\t$sql_params[] = get_request_var('host_id');\n\t}\n\n\tif (get_request_var('template_id') == '0') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_template_id = 0';\n\t} elseif (get_request_var('template_id') > 0) {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_template_id = ?';\n\t\t$sql_params[] = get_request_var('template_id');\n\t}\n\n\tif (get_request_var('status') == 0) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (h.disabled = \"on\" OR dtd.active = \"\")';\n\t} elseif (get_request_var('status') == 1) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (h.disabled = \"\" AND dtd.active = \"on\")';\n\t}\n\n\tif (get_request_var('filter') != '') {\n\t\tif (get_request_var('host_id') > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':' WHERE ') .\n\t\t\t\t'(\n\t\t\t\t\tdtd.name_cache LIKE ? OR\n\t\t\t\t\tpi.arg1 LIKE ? OR\n\t\t\t\t\tpi.rrd_path LIKE ?\n\t\t\t\t)';\n\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':' WHERE ') .\n\t\t\t\t'(\n\t\t\t\t\tdtd.name_cache LIKE ? OR\n\t\t\t\t\th.description LIKE ? OR\n\t\t\t\t\tpi.arg1 LIKE ? OR\n\t\t\t\t\tpi.hostname LIKE ? OR\n\t\t\t\t\tpi.rrd_path LIKE ?\n\t\t\t\t)';\n\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t}\n\t}\n\n\t$sql = \"SELECT COUNT(*)\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id = pi.local_data_id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tLEFT JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\";\n\n\t$total_rows = get_total_row_data($_SESSION[SESS_USER_ID], $sql, $sql_params, 'poller_item');\n\n\t$poller_sql = \"SELECT pi.*, dtd.name_cache, h.description, h.id AS host_id\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id = pi.local_data_id\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tLEFT JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . ', action ASC\n\t\tLIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$items = db_fetch_assoc_prepared($poller_sql, $sql_params);\n\n\t$display_text = array(\n\t\t'dtd.name_cache' => array(__('Data Source Name'), 'ASC'),\n\t\t'h.description'  => array(__('Device Description'), 'ASC'),\n\t\t'nosort'         => array(__('Details'), 'ASC')\n\t);\n\n\t$nav = html_nav_bar('utilities.php?action=view_poller_cache&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 3, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'utilities.php?action=view_poller_cache');\n\n\t$i = 0;\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach ($items as $item) {\n\t\t\tform_alternate_row('line' . $i, true);\n\n\t\t\t$url  = 'data_sources.php?action=ds_edit&id=' . $item['local_data_id'];\n\t\t\t$url1 = 'host.php?action=edit&id=' . $item['host_id'];\n\n\t\t\tform_selectable_cell(filter_value($item['name_cache'], get_request_var('filter'), $url), $i);\n\t\t\tform_selectable_cell(filter_value($item['description'], get_request_var('filter'), $url1), $i);\n\n\t\t\tif ($item['action'] == 0) {\n\t\t\t\tif ($item['snmp_version'] != 3) {\n\t\t\t\t\t$details =\n\t\t\t\t\t\t'<b>' . __('SNMP Version:') . '</b> ' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t'<b>' . __('Community:') . '</b> ' . html_escape($item['snmp_community']) . ', ' .\n\t\t\t\t\t\t'<b>' . __('OID:') . '</b> ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t} else {\n\t\t\t\t\t$details =\n\t\t\t\t\t\t'<b>' . __('SNMP Version:') . '</b>' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t'<b>' . __('User:') . '</b>' . html_escape($item['snmp_username']) . ', ' .\n\t\t\t\t\t\t'<b>' . __('OID:') . '</b>' . html_escape($item['arg1']);\n\t\t\t\t}\n\t\t\t} elseif ($item['action'] == 1) {\n\t\t\t\t$details = '<b>' . __('Script:') . '</b>' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t} else {\n\t\t\t\t$details = '<b>' . __('Script Server:') . '</b>' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t}\n\n\t\t\t$details .= '<br><b>' . __('RRD Path:') . '</b> ' . html_escape($item['rrd_path']);\n\n\t\t\tform_selectable_cell($details, $i);\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($items)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction create_poller_cache_filter() {\n\tglobal $item_rows;\n\n\t$all     = array('-1' => __('All'));\n\t$any     = array('-1' => __('Any'));\n\t$none    = array('0'  => __('None'));\n\t$deleted = array('-2' => __('Deleted/Invalid'));\n\n\t$sites   = array_rekey(\n\t\tdb_fetch_assoc('SELECT id, name\n\t\t\tFROM sites\n\t\t\tORDER BY name'),\n\t\t'id', 'name'\n\t);\n\t$sites   = $any + $none + $sites;\n\n\t$status = array(\n\t\t'-1' => __('Any'),\n\t\t'1'  => __('Enabled'),\n\t\t'0'  => __('Disabled')\n\t);\n\n\t$pactions = array(\n\t\t'-1' => __('Any'),\n\t\t'0'  => __('SNMP'),\n\t\t'1'  => __('Script'),\n\t\t'2'  => __('Script Server')\n\t);\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t$host_id = get_filter_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t/* for the templates dropdown */\n\t\t$sql_where   .= ' AND h.id = ?';\n\t\t$sql_params[] = $host_id;\n\n\t\t$hostname = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($host_id));\n\t} elseif ($host_id == '' || $host_id == '-1') {\n\t\t$host_id  = '-1';\n\t\t$hostname = __('Any');\n\t} else {\n\t\t$host_id  = '0';\n\t\t$hostname = __('None');\n\t}\n\n\tif (get_filter_request_var('site_id') >= 0) {\n\t\t$sql_where   .= ' AND site_id = ?';\n\t\t$sql_params[] = get_request_var('site_id');\n\t}\n\n\t$templates = array_rekey(\n\t\tdb_fetch_assoc_prepared(\"SELECT DISTINCT dt.id, dt.name\n\t\t\tFROM data_template AS dt\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dt.id = dtd.data_template_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON dl.host_id = h.id\n\t\t\tWHERE dtd.local_data_id > 0\n\t\t\t$sql_where\n\t\t\tORDER BY dt.name\",\n\t\t\t$sql_params),\n\t\t'id', 'name'\n\t);\n\n\t$templates = $any + $templates;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'site_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Site'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $sites,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'host_id' => array(\n\t\t\t\t\t'method'        => 'drop_callback',\n\t\t\t\t\t'friendly_name' => __('Device'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'sql'           => 'SELECT DISTINCT id, description AS name FROM host ORDER BY description',\n\t\t\t\t\t'action'        => 'ajax_hosts',\n\t\t\t\t\t'id'            => $host_id,\n\t\t\t\t\t'value'         => $hostname,\n\t\t\t\t\t'on_change'     => 'applyFilter()'\n\t\t\t\t),\n\t\t\t\t'template_id' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Template'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $templates,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'        => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'status' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Status'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $status,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'poller_actions' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Actions'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $pactions,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'        => 'drop_array',\n\t\t\t\t\t'friendly_name' => __('Entries'),\n\t\t\t\t\t'filter'        => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'       => '-1',\n\t\t\t\t\t'pageset'       => true,\n\t\t\t\t\t'array'         => $item_rows,\n\t\t\t\t\t'value'         => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t),\n\t\t'sort' => array(\n\t\t\t'sort_column'    => 'dtd.name_cache',\n\t\t\t'sort_direction' => 'DESC'\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_poller_cache_filter($render = false) {\n\t$filters = create_poller_cache_filter();\n\n\t$running = is_process_running('pushout', 'rmaster', 0);\n\n\tswitch($running) {\n\t\tcase false:\n\t\t\t$header = __('Poller Cache Items');\n\n\t\t\tbreak;\n\t\tcase true:\n\t\t\t$header = __('Poller Cache Items [ <span class=\"blink deviceUp\">Rebuild In Process - Press Go to Check Status</span> ]');\n\n\t\t\tbreak;\n\t\tcase 97:\n\t\t\t$header = __('Poller Cache Items [ Rebuild Crashed without Unregistering ]');\n\n\t\t\tbreak;\n\t\tcase 98:\n\t\t\t$header = __('Poller Cache Items [ Rebuild Timed out but is Running ]');\n\n\t\t\tbreak;\n\t\tcase 99:\n\t\t\t$header = __('Poller Cache Items [ Rebuild Timed out and Crashed ]');\n\n\t\t\tbreak;\n\t}\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter($header, 'utilities.php?action=view_poller_cache', 'form_pollerc', 'sess_pollerc');\n\n\t$pageFilter->rows_label = __('Entries');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction utilities() {\n\tglobal $config, $utilities;\n\n\t$utilities[__('Technical Support')] = array(\n\t\t__('Technical Support') => array(\n\t\t\t'link'        => 'support.php?tab=summary',\n\t\t\t'description' => __('Cacti technical support page.  Used by developers and technical support persons to assist with issues in Cacti.  Includes checks for common configuration issues.')\n\t\t),\n\t\t__('Log Administration') => array(\n\t\t\t'link'        => 'utilities.php?action=view_logfile',\n\t\t\t'description' => __('The Cacti Log stores statistic, error and other message depending on system settings.  This information can be used to identify problems with the poller and application.')\n\t\t),\n\t\t__('View User Log') => array(\n\t\t\t'link'        => 'utilities.php?action=view_user_log',\n\t\t\t'description' => __('Allows Administrators to browse the user log.  Administrators can filter and export the log as well.')\n\t\t)\n\t);\n\n\t$utilities[__('Poller Cache Administration')] = array(\n\t\t__('View Poller Cache') => array(\n\t\t\t'link'        => 'utilities.php?action=view_poller_cache',\n\t\t\t'description' => __('This is the data that is being passed to the poller each time it runs. This data is then in turn executed/interpreted and the results are fed into the RRDfiles for graphing or the database for display.')\n\t\t),\n\t\t__('View Data Query Cache') => array(\n\t\t\t'link'        => 'utilities.php?action=view_snmp_cache',\n\t\t\t'description' => __('The Data Query Cache stores information gathered from Data Query input types. The values from these fields can be used in the text area of Graphs for Legends, Vertical Labels, and GPRINTS as well as in CDEF\\'s.')\n\t\t),\n\t\t__('Rebuild Poller Cache') => array(\n\t\t\t'link'        => 'utilities.php?action=clear_poller_cache',\n\t\t\t'mode'        => 'online',\n\t\t\t'description' => __('The Poller Cache will be re-generated if you select this option. Use this option only in the event of a database crash if you are experiencing issues after the crash and have already run the database repair tools.  Alternatively, if you are having problems with a specific Device, simply re-save that Device to rebuild its Poller Cache.  There is also a command line interface equivalent to this command that is recommended for large systems.'),\n\t\t\t'note'        => array (\n\t\t\t\t'message' => __('NOTE: On large systems, this command may take several minutes to hours to complete and therefore should not be run from the Cacti UI.  You can simply run \\'php -q cli/rebuild_poller_cache.php --help\\' at the command line for more information.'),\n\t\t\t\t'class'   => 'textWarning'\n\t\t\t)\n\t\t),\n\t\t__('Rebuild Resource Cache') => array(\n\t\t\t'link'        => 'utilities.php?action=rebuild_resource_cache',\n\t\t\t'mode'        => 'online',\n\t\t\t'description' => __('When operating multiple Data Collectors in Cacti, Cacti will attempt to maintain state for key files on all Data Collectors.  This includes all core, non-install related website and plugin files.  When you force a Resource Cache rebuild, Cacti will clear the local Resource Cache, and then rebuild it at the next scheduled poller start.  This will trigger all Remote Data Collectors to recheck their website and plugin files for consistency.')\n\t\t),\n\t);\n\n\t$utilities[__('Boost Utilities')] = array(\n\t\t__('View Boost Status') => array(\n\t\t\t'link'        => 'utilities.php?action=view_boost_status',\n\t\t\t'description' => __('This menu pick allows you to view various boost settings and statistics associated with the current running Boost configuration.')\n\t\t),\n\t);\n\n\t$utilities[__('Data Source Statistics Utilities')] = array(\n\t\t__('Purge Data Source Statistics') => array(\n\t\t\t'link'        => 'utilities.php?action=purge_data_source_statistics',\n\t\t\t'mode'        => 'online',\n\t\t\t'description' => __('This menu pick will purge all existing Data Source Statistics from the Database.  If Data Source Statistics is enabled, the Data Sources Statistics will start collection again on the next Data Collector pass.')\n\t\t),\n\t);\n\n\tif (snmpagent_enabled()) {\n\t\t$utilities[__('SNMP Agent Utilities')] = array(\n\t\t\t__('View SNMP Agent Cache') => array(\n\t\t\t\t'link'        => 'utilities.php?action=view_snmpagent_cache',\n\t\t\t\t'mode'        => 'online',\n\t\t\t\t'description' => __('This shows all objects being handled by the SNMP Agent.')\n\t\t\t),\n\t\t\t__('Rebuild SNMP Agent Cache') => array(\n\t\t\t\t'link'        => 'utilities.php?action=rebuild_snmpagent_cache',\n\t\t\t\t'mode'        => 'online',\n\t\t\t\t'description' => __('The SNMP cache will be cleared and re-generated if you select this option. Note that it takes another poller run to restore the SNMP cache completely.')\n\t\t\t),\n\t\t\t__('View SNMP Agent Notification Log') => array(\n\t\t\t\t'link'        => 'utilities.php?action=view_snmpagent_events',\n\t\t\t\t'mode'        => 'online',\n\t\t\t\t'description' => __('This menu pick allows you to view the latest events SNMP Agent has handled in relation to the registered notification receivers.')\n\t\t\t)\n\t\t);\n\t}\n\n\tapi_plugin_hook('utilities_array');\n\n\thtml_start_box(__('Cacti System Utilities'), '100%', '', '3', 'center', '');\n\n\tforeach ($utilities as $header => $content) {\n\t\t$i = 0;\n\n\t\tforeach ($content as $title => $details) {\n\t\t\tif ((isset($details['mode']) && $details['mode'] == 'online' && $config['connection'] == 'online') || !isset($details['mode'])) {\n\t\t\t\tif ($i == 0) {\n\t\t\t\t\thtml_section_header($header, 2);\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\t\t\t\tprint \"<td class='nowrap' style='vertical-align:top;'>\";\n\t\t\t\tprint \"<a class='hyperLink' href='\" . html_escape($details['link']) . \"'>\" . $title . '</a>';\n\t\t\t\tprint '</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint html_escape($details['description']);\n\n\t\t\t\tif(isset($details['note'])) {\n\t\t\t\t\tprint '<br/><i class=\"' . $details['note']['class'] . '\">' . html_escape($details['note']['message']) . '</i>';\n\t\t\t\t}\n\n\t\t\t\tprint '</td>';\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\n\tapi_plugin_hook('utilities_list');\n\n\thtml_end_box();\n}\n\nfunction purge_data_source_statistics() {\n\t$tables = array(\n\t\t'data_source_stats_daily',\n\t\t'data_source_stats_hourly',\n\t\t'data_source_stats_hourly_cache',\n\t\t'data_source_stats_hourly_last',\n\t\t'data_source_stats_monthly',\n\t\t'data_source_stats_weekly',\n\t\t'data_source_stats_yearly'\n\t);\n\n\tforeach ($tables as $table) {\n\t\tdb_execute('TRUNCATE TABLE ' . $table);\n\t}\n\n\tif (isset($_SESSION[SESS_USER_ID])) {\n\t\tcacti_log('NOTE: Cacti DS Stats purged by user ' . get_username($_SESSION[SESS_USER_ID]), false, 'WEBUI');\n\t} else {\n\t\tcacti_log('NOTE: Cacti DS Stats purged by cli script');\n\t}\n}\n\nfunction boost_display_run_status() {\n\tglobal $config, $refresh_interval, $boost_utilities_interval, $boost_refresh_interval, $boost_max_runtime;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('refresh');\n\t/* ==================================================== */\n\n\tload_current_session_value('refresh', 'sess_boost_utilities_refresh', '30');\n\n\t$last_run_time   = read_config_option('boost_last_run_time', true);\n\t$next_run_time   = read_config_option('boost_next_run_time', true);\n\n\t$rrd_updates     = read_config_option('boost_rrd_update_enable', true);\n\t$boost_cache     = read_config_option('boost_png_cache_enable', true);\n\n\t$max_records     = read_config_option('boost_rrd_update_max_records', true);\n\t$max_runtime     = read_config_option('boost_rrd_update_max_runtime', true);\n\t$update_interval = read_config_option('boost_rrd_update_interval', true);\n\t$peak_memory     = read_config_option('boost_peak_memory', true);\n\t$detail_stats    = read_config_option('stats_detail_boost', true);\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_boost_status';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\thtml_start_box(__('Boost Status'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_boost_status&refresh=' + $('#refresh').val();\n\t\tloadUrl({url:strURL})\n\t}\n\t</script>\n\t<tr class='even'>\n\t\t<form id='form_boost_utilities_stats' method='post'>\n\t\t<td>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Refresh Interval');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' name='refresh' onChange='applyFilter()' data-defaultLabel='<?php print __('Refresh Interval');?>'>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach ($boost_utilities_interval as $key => $interval) {\n\t\t\t\t\t\t\tprint '<option value=\"' . $key . '\"';\n\n\t\t\t\t\t\t\tif (get_request_var('refresh') == $key) {\n\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t} print '>' . $interval . '</option>';\n\t\t\t\t\t\t}\n\t?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Refresh');?>' onClick='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t</form>\n\t</tr>\n\t<?php\n\thtml_end_box(true);\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* get the boost table status */\n\t$boost_table_status = db_fetch_assoc(\"SELECT *\n\t\tFROM INFORMATION_SCHEMA.TABLES\n\t\tWHERE table_schema = SCHEMA()\n\t\tAND (table_name LIKE 'poller_output_boost_arch_%'\n\t\tOR table_name LIKE 'poller_output_boost')\");\n\n\t$pending_records = 0;\n\t$arch_records    = 0;\n\t$data_length     = 0;\n\t$engine          = '';\n\t$max_data_length = 0;\n\n\tforeach ($boost_table_status as $table) {\n\t\tif ($table['TABLE_NAME'] == 'poller_output_boost') {\n\t\t\t$pending_records += $table['TABLE_ROWS'];\n\t\t} else {\n\t\t\t$arch_records += $table['TABLE_ROWS'];\n\t\t}\n\n\t\t$data_length    += $table['DATA_LENGTH'];\n\t\t$data_length    += $table['INDEX_LENGTH'];\n\t\t$engine          = $table['ENGINE'];\n\t\t$max_data_length = $table['MAX_DATA_LENGTH'];\n\t}\n\n\tif ($config['connection'] == 'online' && db_table_exists('poller_output_boost_local_data_ids')) {\n\t\t$pending_ds = db_fetch_cell('SELECT COUNT(local_data_id) FROM poller_output_boost_local_data_ids');\n\t} else {\n\t\t$pending_ds = 0;\n\t}\n\n\t$poller_items = db_fetch_cell('SELECT COUNT(local_data_id)\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN host AS h\n\t\tON h.id = pi.host_id\n\t\tWHERE h.disabled = \"\"');\n\n\t$data_sources = db_fetch_cell('SELECT COUNT(DISTINCT local_data_id)\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN host AS h\n\t\tON h.id = pi.host_id\n\t\tWHERE h.disabled = \"\"');\n\n\t$pi_ds = ($data_sources ? ($poller_items / $data_sources) : 0);\n\n\tif ($pending_ds == 0) {\n\t\t$remaining = $arch_records;\n\t} else {\n\t\t$remaining = $arch_records * (($pending_ds * $pi_ds) / $data_sources);\n\t}\n\n\t$total_records  = $pending_records + $remaining;\n\t$avg_row_length = ($total_records ? intval($data_length / $total_records) : 0);\n\n\t$boost_status = read_config_option('boost_poller_status', true);\n\tif ($boost_status != '' && $boost_status != 'disabled') {\n\t\t$boost_status_array = explode(':', $boost_status);\n\n\t\tif (isset($boost_status_array[1])) {\n\t\t\t$boost_status_date = $boost_status_array[1];\n\t\t} else {\n\t\t\t$boost_status_date = null;\n\t\t}\n\n\t\tif (substr_count($boost_status_array[0], 'complete')) {\n\t\t\t$status = '<span class=\"deviceRecovering\">' . __('Idle') . '</span>';\n\t\t} elseif (substr_count($boost_status_array[0], 'running')) {\n\t\t\t$status = '<span class=\"deviceUp\">' . __('Running') . '</span>';\n\t\t} elseif (substr_count($boost_status_array[0], 'overrun')) {\n\t\t\t$status = '<span class=\"deviceDown\">' . __('Overrun Warning') . '</span>';\n\t\t} elseif (substr_count($boost_status_array[0], 'timeout')) {\n\t\t\t$status = '<span class=\"deviceDown\">' . __('Timed Out') . '</span>';\n\t\t} else {\n\t\t\t$status = '<span class=\"deviceDown\">' . __('Other') . '</span>';\n\t\t}\n\t} else {\n\t\t$status = '<span class=\"deviceDisabled\">' . __('Disabled') . '</span>';\n\t\t$boost_status_date = null;\n\t}\n\n\t$stats_boost = read_config_option('stats_boost', true);\n\n\tif ($stats_boost != '') {\n\t\t$stats_boost_array = explode(' ', $stats_boost);\n\n\t\t$stats_duration          = explode(':', $stats_boost_array[0]);\n\t\t$boost_last_run_duration = $stats_duration[1];\n\n\t\t$stats_rrds         = explode(':', $stats_boost_array[1]);\n\t\t$boost_rrds_updated = $stats_rrds[1];\n\t} else {\n\t\t$boost_last_run_duration = '';\n\t\t$boost_rrds_updated      = '';\n\t}\n\n\t/* get cache directory size/contents */\n\t$cache_directory    = read_config_option('boost_png_cache_directory', true);\n\t$directory_contents = array();\n\n\tif (is_dir($cache_directory)) {\n\t\tif ($handle = @opendir($cache_directory)) {\n\t\t\t/* This is the correct way to loop over the directory. */\n\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t$directory_contents[] = $file;\n\t\t\t}\n\n\t\t\tclosedir($handle);\n\n\t\t\t/* get size of directory */\n\t\t\t$directory_size = 0;\n\t\t\t$cache_files    = 0;\n\n\t\t\tif (cacti_sizeof($directory_contents)) {\n\t\t\t\t/* goto the cache directory */\n\t\t\t\tchdir($cache_directory);\n\n\t\t\t\t/* check and fry as applicable */\n\t\t\t\tforeach ($directory_contents as $file) {\n\t\t\t\t\t/* only remove jpeg's and png's */\n\t\t\t\t\tif ((substr_count(strtolower($file), '.png')) ||\n\t\t\t\t\t\t(substr_count(strtolower($file), '.jpg'))) {\n\t\t\t\t\t\t$cache_files++;\n\t\t\t\t\t\t$directory_size += filesize($file);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$directory_size = boost_file_size_display($directory_size);\n\t\t\t$cache_files    = $cache_files . ' Files';\n\t\t} else {\n\t\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong>' . __('Cannot open directory');\n\t\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('Unknown');\n\t\t}\n\t} else {\n\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong> ' . __('Directory Does NOT Exist!!');\n\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('N/A');\n\t}\n\n\t$running = db_fetch_cell('SELECT COUNT(*) FROM processes WHERE tasktype=\"boost\" AND taskname=\"child\"');\n\n\t$i = 0;\n\n\t/* boost status display */\n\thtml_section_header(__('Current Boost Status'), 2);\n\n\tif ($config['connection'] == 'online') {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Boost On-demand Updating:') . '</td><td><b>' . $status . '</b></td>';\n\n\t\tif ($running > 0) {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Running Processes:') . '</td><td>' . ($running) . '</td>';\n\t\t}\n\t}\n\n\tform_alternate_row();\n\tprint '<td>' . __('Total Poller Items:') . '</td><td>' . number_format_i18n($poller_items) . '</td>';\n\n\t$premaining = ($data_sources ? (round(($pending_ds / $data_sources) * 100, 1)) : 0);\n\n\tif ($total_records) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Total Data Sources:') . '</td><td>' . number_format_i18n($data_sources) . '</td>';\n\n\t\tif ($config['connection'] == 'online') {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Remaining Data Sources:') . '</td><td>' . ($pending_ds > 0 ? number_format_i18n($pending_ds) . \" ($premaining %)\":__('TBD')) . '</td>';\n\t\t}\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Queued Boost Records:') . '</td><td>' . number_format_i18n($pending_records) . '</td>';\n\n\t\tif ($config['connection'] == 'online') {\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Approximate in Process:') . '</td><td>' . number_format_i18n($remaining) . '</td>';\n\n\t\t\tform_alternate_row();\n\t\t\tprint '<td>' . __('Total Boost Records:') . '</td><td>' . number_format_i18n($total_records) . '</td>';\n\t\t}\n\t}\n\n\t/* boost status display */\n\thtml_section_header(__('Boost Storage Statistics'), 2);\n\n\t/* describe the table format */\n\tform_alternate_row();\n\tprint '<td>' . __('Database Engine:') . '</td><td>' . $engine . '</td>';\n\n\t/* tell the user how big the table is */\n\tform_alternate_row();\n\tprint '<td>' . __('Current Boost Table(s) Size:') . '</td><td>' . boost_file_size_display($data_length, 2) . '</td>';\n\n\t/* tell the user about the average size/record */\n\tform_alternate_row();\n\tprint '<td>' . __('Avg Bytes/Record:') . '</td><td>' . boost_file_size_display($avg_row_length, 0) . '</td>';\n\n\t/* tell the user about the average size/record */\n\t$output_length = read_config_option('boost_max_output_length');\n\n\tif ($output_length != '') {\n\t\t$parts = explode(':', $output_length);\n\n\t\tif ((time() - 1200) > $parts[0]) {\n\t\t\t$ref = true;\n\t\t} else {\n\t\t\t$ref = false;\n\t\t}\n\t} else {\n\t\t$ref = true;\n\t}\n\n\tif ($ref) {\n\t\tif (strcmp($engine, 'MEMORY') == 0) {\n\t\t\t$max_length = db_fetch_cell('SELECT MAX(LENGTH(output)) FROM poller_output_boost');\n\t\t} else {\n\t\t\t$max_length = '0';\n\t\t}\n\t\tdb_execute(\"REPLACE INTO settings (name, value) VALUES ('boost_max_output_length', '\" . time() . ':' . $max_length . \"')\");\n\t} else {\n\t\t$max_length = $parts[1];\n\t}\n\n\tif ($max_length != 0) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Record Length:') . '</td><td>' . __('%d Bytes', number_format_i18n($max_length)) . '</td>';\n\t}\n\n\t/* tell the user about the \"Maximum Size\" this table can be */\n\tform_alternate_row();\n\n\tif (strcmp($engine, 'MEMORY')) {\n\t\t$max_table_allowed = __('Unlimited');\n\t\t$max_table_records = __('Unlimited');\n\t} else {\n\t\t$max_table_allowed = boost_file_size_display($max_data_length, 2);\n\t\t$max_table_records = number_format_i18n(($avg_row_length ? $max_data_length / $avg_row_length : 0), 3, 1000);\n\t}\n\tprint '<td>' . __('Max Allowed Boost Table Size:') . '</td><td>' . $max_table_allowed . '</td>';\n\n\t/* tell the user about the estimated records that \"could\" be held in memory */\n\tform_alternate_row();\n\tprint '<td>' . __('Estimated Maximum Records:') . '</td><td>' . $max_table_records . ' Records</td>';\n\n\tif ($config['connection'] == 'online') {\n\t\t/* boost last runtime display */\n\t\thtml_section_header(__('Previous Runtime Statistics'), 2);\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Last Start Time:') . '</td><td>' . (is_numeric($last_run_time) ? date('Y-m-d H:i:s', $last_run_time):$last_run_time) . '</td>';\n\n\t\t/* get the last end time */\n\t\t$last_end_time = read_config_option('boost_last_end_time', true);\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Last End Time:') . '</td><td>' . ($last_end_time != '' ? date('Y-m-d H:i:s', $last_end_time):__('Never Run')) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Last Run Duration:') . '</td><td>';\n\n\t\tif (is_numeric($boost_last_run_duration)) {\n\t\t\tprint($boost_last_run_duration > 60 ? __('%d minutes', (int)$boost_last_run_duration / 60) . ', ': '') . __('%d seconds', (int) $boost_last_run_duration % 60);\n\n\t\t\tif ($rrd_updates != '') {\n\t\t\t\tprint ' (' . __('%0.2f percent of update frequency)', round(100 * $boost_last_run_duration / $update_interval / 60));\n\t\t\t}\n\t\t} else {\n\t\t\tprint __('N/A');\n\t\t}\n\t\tprint '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('RRD Updates:') . '</td><td>' . ($boost_rrds_updated != '' ? number_format_i18n($boost_rrds_updated):'-') . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Peak Poller Memory:') . '</td><td>' . ((read_config_option('boost_peak_memory') != '' && is_numeric(read_config_option('boost_peak_memory'))) ? (round(read_config_option('boost_peak_memory') / 1024 / 1024,2)) . ' ' . __('MBytes') : __('N/A')) . '</td>';\n\n\t\tform_alternate_row();\n\n\t\t$memory_limit = read_config_option('boost_poller_mem_limit');\n\n\t\tif ($memory_limit == -1) {\n\t\t\t$memory_limit = __('Unlimited');\n\t\t} elseif ($memory_limit != '') {\n\t\t\t$memory_limit = __('%s MBytes', number_format_i18n($memory_limit));\n\t\t} else {\n\t\t\t$memory_limit = __('N/A');\n\t\t}\n\n\t\tprint '<td class=\"utilityPick\">' . __('Max Poller Memory Allowed:') . '</td><td>' . $memory_limit . '</td>';\n\n\t\t/* boost last runtime display */\n\t\thtml_section_header(__('Detailed Runtime Statistics'), 2);\n\n\t\tform_alternate_row();\n\n\t\tif ($detail_stats == '') {\n\t\t\t$detail_stats = __('N/A');\n\t\t} else {\n\t\t\t$values = explode(' ', $detail_stats);\n\t\t\t$rows   = explode(':', $values[0])[1];\n\t\t\t$time   = explode(':', $values[1])[1];\n\t\t\t$recs   = explode(':', $values[2])[1];\n\t\t\t$rcycle = explode(':', $values[3])[1];\n\t\t\t$fandt  = explode(':', $values[4])[1];\n\t\t\t$lastu  = explode(':', $values[5])[1];\n\t\t\t$update = explode(':', $values[6])[1];\n\t\t\t$delete = explode(':', $values[7])[1];\n\n\t\t\t$detail_stats = __('Records: %s (ds rows), Time: %s (secs), GetRows: %s (secs), ResultsCycle: %s (secs), FileAndTemplate: %s (secs), LastUpdate: %s (secs), RRDUpdate: %s (secs), Delete: %s (secs)',\n\t\t\t\tnumber_format_i18n($rows),\n\t\t\t\tnumber_format_i18n($time),\n\t\t\t\tnumber_format_i18n($recs),\n\t\t\t\tnumber_format_i18n($rcycle),\n\t\t\t\tnumber_format_i18n($fandt),\n\t\t\t\tnumber_format_i18n($lastu),\n\t\t\t\tnumber_format_i18n($update),\n\t\t\t\tnumber_format_i18n($delete));\n\t\t}\n\n\t\tprint '<td class=\"utilityPick\">' . __('Previous Runtime Timers:') . '</td><td>' . (($detail_stats != '') ? $detail_stats:__('N/A')) . '</td>';\n\n\t\t$runtimes = db_fetch_assoc('SELECT name, value, CAST(replace(name, \"stats_boost_\", \"\") AS signed) AS ome\n\t\t\tFROM settings\n\t\t\tWHERE name LIKE \"stats_boost_%\"\n\t\t\tORDER BY ome');\n\n\t\tif (cacti_sizeof($runtimes)) {\n\t\t\tforeach ($runtimes as $r) {\n\t\t\t\t$process = str_replace('stats_boost_', '', $r['name']);\n\n\t\t\t\tif ($r['value'] != '') {\n\t\t\t\t\t$values = explode(' ', $r['value']);\n\t\t\t\t\t$time   = explode(':', $values[0])[1];\n\t\t\t\t\t$rrds   = explode(':', $values[2])[1];\n\t\t\t\t} else {\n\t\t\t\t\t$time = 0;\n\t\t\t\t\t$rrds = 0;\n\t\t\t\t}\n\n\t\t\t\t$rows_to_process = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\tFROM poller_output_boost_local_data_ids\n\t\t\t\t\tWHERE process_handler = ?',\n\t\t\t\t\tarray($process));\n\n\t\t\t\t$runtime = db_fetch_cell_prepared('SELECT UNIX_TIMESTAMP() - UNIX_TIMESTAMP(started)\n\t\t\t\t\tFROM processes\n\t\t\t\t\tWHERE tasktype = \"boost\"\n\t\t\t\t\tAND taskname = \"child\"\n\t\t\t\t\tAND taskid = ?',\n\t\t\t\t\tarray($process));\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\tif ($rows_to_process > 0) {\n\t\t\t\t\tprint '<td class=\"utilityPick\">' . __esc('Process: %d', $process) . '</td><td>' . __('Status: <span class=\"deviceUp\"><b>Running</b></span>, Remaining: %s (dses), CurrentRuntime: %s (secs), PrevRuntime: %s (secs), PrevProcessed: %10s (ds rows)', number_format_i18n($rows_to_process), number_format_i18n($runtime), number_format_i18n($time), number_format_i18n($rrds)) . '</td>';\n\t\t\t\t} else {\n\t\t\t\t\tprint '<td class=\"utilityPick\">' . __esc('Process: %d', $process) . '</td><td>' . __('Status: <span class=\"deviceRecovering\"><b>Idle</b></span>, PrevRuntime: %s (secs), PrevProcessed: %10s (ds rows)', number_format_i18n($time), number_format_i18n($rrds)) . '</td>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* boost runtime display */\n\t\thtml_section_header(__('Run Time Configuration'), 2);\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Update Frequency:') . '</td><td>' . ($rrd_updates == '' ? __('N/A') : $boost_refresh_interval[$update_interval]) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Concurrent Processes:') . '</td><td>' . read_config_option('boost_parallel') . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Next Start Time:') . '</td><td>' . (is_numeric($next_run_time) ? date('Y-m-d H:i:s', $next_run_time):$next_run_time) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Maximum Records:') . '</td><td>' . number_format_i18n($max_records) . ' ' . __('Records') . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td class=\"utilityPick\">' . __('Maximum Allowed Runtime:') . '</td><td>' . $boost_max_runtime[$max_runtime] . '</td>';\n\n\t\t/* boost caching */\n\t\thtml_section_header(__('Image Caching'), 2);\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Image Caching Status:') . '</td><td>' . ($boost_cache == '' ? __('Disabled') : __('Enabled')) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cache Directory:') . '</td><td>' . $cache_directory . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cached Files:') . '</td><td>' . $cache_files . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cached Files Size:') . '</td><td>' . $directory_size . '</td>';\n\n\t\thtml_end_box(true);\n\t}\n}\n\nfunction create_snmp_agent_cache_filter() {\n\tglobal $item_rows;\n\n\t$mibs = array_rekey(\n\t\tdb_fetch_assoc(\"SELECT 'any' AS id, '\" . __esc('Any') . \"' AS name UNION SELECT DISTINCT mib AS id, mib AS name FROM snmpagent_cache\"),\n\t\t'id', 'name'\n\t);\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'mib' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('MIB'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'filter_options' => array('options' => 'sanitize_search_string'),\n\t\t\t\t\t'default'        => 'any',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $mibs,\n\t\t\t\t\t'value'          => 'any'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Entries'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_snmp_agent_cache_filter($render = false) {\n\t$filters = create_snmp_agent_cache_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('SNMP Agent Cache'), 'utilities.php?action=view_snmpagent_cache', 'form_agent', 'sess_snmpc');\n\n\t$pageFilter->rows_label = __('OIDs');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\n/**\n * snmpagent_utilities_run_cache()\n *\n * @param mixed\n * @return\n */\nfunction snmpagent_utilities_run_cache() {\n\t$mibs = db_fetch_assoc('SELECT DISTINCT mib FROM snmpagent_cache');\n\t$registered_mibs = array();\n\n\tif ($mibs && $mibs > 0) {\n\t\tforeach ($mibs as $mib) {\n\t\t\t$registered_mibs[] = $mib['mib'];\n\t\t}\n\t}\n\n\tprocess_sanitize_draw_snmp_agent_cache_filter(true);\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* filter by host */\n\tif (!isempty_request_var('mib') && get_request_var('mib') != 'any') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . 'snmpagent_cache.mib = ?';\n\t\t$sql_params[] = get_request_var('mib');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') .\n\t\t\t' (`oid` LIKE ? OR `name` LIKE ? OR `mib` LIKE ? OR `max-access` LIKE ?)';\n\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_where .= ' ORDER by `oid`';\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM snmpagent_cache\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$snmp_cache_sql = \"SELECT *\n\t\tFROM snmpagent_cache\n\t\t$sql_where\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$snmp_cache = db_fetch_assoc_prepared($snmp_cache_sql, $sql_params);\n\n\t$display_text = array(\n\t\t__('OID'),\n\t\t__('Name'),\n\t\t__('MIB'),\n\t\t__('Type'),\n\t\t__('Max-Access'),\n\t\t__('Value')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_cache&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header($display_text);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\t\t\t$oid        = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name       = $item['name'];\n\t\t\t$mib        = filter_value($item['mib'], get_request_var('filter'));\n\t\t\t$max_access = filter_value($item['max-access'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['oid'], false);\n\n\t\t\tform_selectable_cell($oid, $item['oid']);\n\n\t\t\tif ($item['description']) {\n\t\t\t\tform_selectable_cell(filter_value($name, get_request_var('filter'), '#', $item['description']), $item['oid']);\n\t\t\t} else {\n\t\t\t\tform_selectable_ecell($name, $item['oid']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($mib, $item['oid']);\n\t\t\tform_selectable_ecell($item['kind'], $item['oid']);\n\t\t\tform_selectable_cell($max_access, $item['oid']);\n\t\t\tform_selectable_ecell((in_array($item['kind'], array(__('Scalar'), __('Column Data')), true) ? $item['value'] : __('N/A')), $item['oid']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"6\"><em>' . __('No SNMP Agent Cache Entries Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction create_snmp_agent_events_filter() {\n\tglobal $item_rows, $severity_levels, $severity_colors, $receivers;\n\n\t$any = array('-1' => __('Any'));\n\n\t$mibs = array_rekey(\n\t\tdb_fetch_assoc(\"SELECT 'any' AS id, '\" . __esc('Any') . \"' AS name\n\t\t\tUNION\n\t\t\tSELECT DISTINCT mib AS id, mib AS name FROM snmpagent_cache\"),\n\t\t'id', 'name'\n\t);\n\n\t$receivers = $any + $receivers;\n\n\treturn array(\n\t\t'rows' => array(\n\t\t\tarray(\n\t\t\t\t'filter' => array(\n\t\t\t\t\t'method'         => 'textbox',\n\t\t\t\t\t'friendly_name'  => __('Search'),\n\t\t\t\t\t'filter'         => FILTER_DEFAULT,\n\t\t\t\t\t'placeholder'    => __('Enter a search term'),\n\t\t\t\t\t'size'           => '30',\n\t\t\t\t\t'default'        => '',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'max_length'     => '120',\n\t\t\t\t\t'value'          => ''\n\t\t\t\t),\n\t\t\t\t'severity' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Severity'),\n\t\t\t\t\t'filter'         => FILTER_CALLBACK,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $severity_levels,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'receiver' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Receiver'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $receivers,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t),\n\t\t\t\t'rows' => array(\n\t\t\t\t\t'method'         => 'drop_array',\n\t\t\t\t\t'friendly_name'  => __('Events'),\n\t\t\t\t\t'filter'         => FILTER_VALIDATE_INT,\n\t\t\t\t\t'default'        => '-1',\n\t\t\t\t\t'pageset'        => true,\n\t\t\t\t\t'array'          => $item_rows,\n\t\t\t\t\t'value'          => '-1'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'buttons' => array(\n\t\t\t'go' => array(\n\t\t\t\t'method'  => 'submit',\n\t\t\t\t'display' => __('Go'),\n\t\t\t\t'title'   => __('Apply Filter to Table'),\n\t\t\t),\n\t\t\t'clear' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Clear'),\n\t\t\t\t'title'   => __('Reset Filter to Default Values'),\n\t\t\t),\n\t\t\t'purge' => array(\n\t\t\t\t'method'  => 'button',\n\t\t\t\t'display' => __('Purge'),\n\t\t\t\t'title'   => __('Purge the SNMP Agent Event Log'),\n\t\t\t\t'url'     => 'utilities.php?action=view_snmpagent_events&purge=true'\n\t\t\t)\n\t\t)\n\t);\n}\n\nfunction process_sanitize_draw_snmp_agent_events_filter($render = false) {\n\t$filters = create_snmp_agent_events_filter();\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('SNMP Agent Notification Log'), 'utilities.php?action=view_snmpagent_events', 'form_agent', 'sess_snmpae');\n\n\t$pageFilter->rows_label = __('Events');\n\t$pageFilter->set_filter_array($filters);\n\n\tif ($render) {\n\t\t$pageFilter->render();\n\t} else {\n\t\t$pageFilter->sanitize();\n\t}\n}\n\nfunction snmpagent_utilities_run_eventlog() {\n\tglobal $severity_levels, $severity_colors, $receivers;\n\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\t$receivers = array_rekey(\n\t\tdb_fetch_assoc('SELECT DISTINCT manager_id, hostname\n\t\t\tFROM snmpagent_notifications_log AS al\n\t\t\tINNER JOIN snmpagent_managers AS am\n\t\t\tON am.id = al.manager_id'),\n\t\t'manager_id', 'hostname'\n\t);\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute('TRUNCATE table snmpagent_notifications_log');\n\n\t\t/* reset filters */\n\t\tset_request_var('clear', true);\n\t}\n\n\tprocess_sanitize_draw_snmp_agent_events_filter(true);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$sql_where  = '';\n\t$sql_params = array();\n\n\t/* filter by severity */\n\tif (get_request_var('receiver') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' snl.manager_id = ?';\n\t\t$sql_params[] = get_request_var('receiver');\n\t}\n\n\t/* filter by severity */\n\tif (!isempty_request_var('severity') && get_request_var('severity') != '-1') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' snl.severity = ?';\n\t\t$sql_params[] = get_request_var('severity');\n\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where   .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (`varbinds` LIKE ?';\n\t\t$sql_params[] = '%' . get_request_var('filter') . '%';\n\t}\n\n\t$sql_where .= ' ORDER by `time` DESC';\n\n\t$sql_query  = \"SELECT snl.*, sm.hostname, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tINNER JOIN snmpagent_managers AS sm\n\t\tON sm.id = snl.manager_id\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\t$sql_where\n\t\tLIMIT \" . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\t$total_rows = db_fetch_cell_prepared(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\t$sql_where\",\n\t\t$sql_params);\n\n\t$logs = db_fetch_assoc_prepared($sql_query, $sql_params);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_events&severity='. get_request_var('severity').'&receiver='. get_request_var('receiver').'&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Log Entries'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(' ', __('Time'), __('Receiver'), __('Notification'), __('Varbinds')));\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\n\t\t\tform_selectable_cell(__esc('Severity Level: %s', $severity_levels[$item['severity']]), $item['id'], '', 'background-color:' . $severity_colors[$item['severity']]);\n\n\t\t\tform_selectable_cell(date('Y-m-d H:i:s', $item['time']), $item['id']);\n\t\t\tform_selectable_ecell($item['hostname'], $item['id']);\n\n\t\t\tif ($item['description']) {\n\t\t\t\tform_selectable_cell(filter_value($item['notification'], '', '#', html_escape($item['notification'])), $item['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_ecell($item['notification'], $item['id']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($varbinds, $item['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr class=\"tableRow odd\"><td colspan=\"5\"><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n}\n\n"
        },
        {
          "name": "vdef.php",
          "type": "blob",
          "size": 23.396484375,
          "content": "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2024 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/vdef.php');\n\n$actions = array(\n\t'1' => __('Delete'),\n\t'2' => __('Duplicate')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tvdef_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tvdef_form_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tvdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tvdef_item_remove();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tvdef_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tvdef_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tvdef_item_dnd();\n\n\t\tbreak;\n\n\tdefault:\n\t\ttop_header();\n\n\t\tvdef();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\nfunction draw_vdef_preview($vdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>vdef=<?php print html_escape(get_vdef($vdef_id, true));?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\nfunction vdef_form_save() {\n\tif (isset_request_var('save_component_vdef')) {\n\t\t$save['id']   = get_filter_request_var('id');\n\t\t$save['hash'] = get_hash_vdef(get_request_var('id'));\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_id = sql_save($save, 'vdef');\n\n\t\t\tif ($vdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php?action=edit&id=' . (empty($vdef_id) ? get_request_var('id') : $vdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t$sequence = get_sequence(get_filter_request_var('id'), 'sequence', 'vdef_items', 'vdef_id=' . get_filter_request_var('vdef_id'));\n\n\t\t$save['id']       = get_filter_request_var('id');\n\t\t$save['hash']     = get_hash_vdef(get_request_var('id'), 'vdef_item');\n\t\t$save['vdef_id']  = get_filter_request_var('vdef_id');\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = get_nfilter_request_var('type');\n\t\t$save['value']    = get_nfilter_request_var('value');\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_item_id = sql_save($save, 'vdef_items');\n\n\t\t\tif ($vdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: vdef.php?action=item_edit&vdef_id=' . get_request_var('vdef_id') . '&id=' . (empty($vdef_item_id) ? get_request_var('id') : $vdef_item_id));\n\t\t} else {\n\t\t\theader('Location: vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_vdef($_vdef_id, $vdef_title) {\n\tglobal $fields_vdef_edit;\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array($_vdef_id));\n\t$vdef_items = db_fetch_assoc_prepared('SELECT * FROM vdef_items WHERE vdef_id = ?', array($_vdef_id));\n\n\t/* substitute the title variable */\n\t$vdef['name'] = str_replace('<vdef_title>', $vdef['name'], $vdef_title);\n\n\t/* create new entry: device_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_vdef(0);\n\n\t$fields_vdef_edit = preset_vdef_form_list();\n\n\tforeach ($fields_vdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $vdef[$field];\n\t\t}\n\t}\n\n\t$vdef_id = sql_save($save, 'vdef');\n\n\t/* create new entry(s): vdef_items */\n\tif (cacti_sizeof($vdef_items) > 0) {\n\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_vdef(0, 'vdef_item');\n\t\t\t$save['vdef_id']  = $vdef_id;\n\t\t\t$save['sequence'] = $vdef_item['sequence'];\n\t\t\t$save['type']     = $vdef_item['type'];\n\t\t\t$save['value']    = $vdef_item['value'];\n\n\t\t\tsql_save($save, 'vdef_items');\n\t\t}\n\t}\n}\n\nfunction vdef_form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') === '1') { // delete\n\t\t\t\t/* do a referential integrity check */\n\t\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\t\tforeach ($selected_items as $vdef_id) {\n\t\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\t\tinput_validate_input_number($vdef_id, 'vdef_id');\n\t\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t\t$vdef_ids[] = $vdef_id;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset($vdef_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM vdef WHERE ' . array_to_sql_or($vdef_ids, 'id'));\n\t\t\t\t\tdb_execute('DELETE FROM vdef_items WHERE ' . array_to_sql_or($vdef_ids, 'vdef_id'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') === '2') { // duplicate\n\t\t\t\tfor ($i=0;($i < cacti_count($selected_items));$i++) {\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($selected_items[$i], \"selected_items[$i]\");\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\tduplicate_vdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php');\n\n\t\texit;\n\t} else {\n\t\t$ilist  = '';\n\t\t$iarray = array();\n\n\t\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1], 'chk[1]');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$ilist .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM vdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t\t$iarray[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t$form_data = array(\n\t\t\t'general' => array(\n\t\t\t\t'page'       => 'vdef.php',\n\t\t\t\t'actions'    => $actions,\n\t\t\t\t'optvar'     => 'drp_action',\n\t\t\t\t'item_array' => $iarray,\n\t\t\t\t'item_list'  => $ilist\n\t\t\t),\n\t\t\t'options' => array(\n\t\t\t\t1 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Delete the following VDEF.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Delete following VDEFs.'),\n\t\t\t\t\t'scont'    => __('Delete VDEF'),\n\t\t\t\t\t'pcont'    => __('Delete VDEFs')\n\t\t\t\t),\n\t\t\t\t2 => array(\n\t\t\t\t\t'smessage' => __('Click \\'Continue\\' to Duplicate the following VDEF.'),\n\t\t\t\t\t'pmessage' => __('Click \\'Continue\\' to Duplicate following VDEFs.'),\n\t\t\t\t\t'scont'    => __('Duplicate VDEF'),\n\t\t\t\t\t'pcont'    => __('Duplicate VDEFs'),\n\t\t\t\t\t'extra'    => array(\n\t\t\t\t\t\t'title_format' => array(\n\t\t\t\t\t\t\t'method'  => 'textbox',\n\t\t\t\t\t\t\t'title'   => __('Title Format'),\n\t\t\t\t\t\t\t'default' => '<vdef_title>',\n\t\t\t\t\t\t\t'width'   => 25\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tform_continue_confirmation($form_data);\n\t}\n}\n\nfunction vdef_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\t/* sort the vdef functions */\n\tasort($vdef_functions);\n\n\tform_start('vdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array(get_request_var('id')));\n\t$vdef_item  = db_fetch_row_prepared('SELECT * FROM vdef_items WHERE id = ?', array(get_request_var('vdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following VDEF\\'s.'); ?></p>\n\t\t\t<p><?php print __esc('VDEF Name: %s', $vdef['name']);?><br>\n\t\t\t<em><?php $vdef_item_type = $vdef_item['type'];\n\tprint $vdef_item_types[$vdef_item_type];?></em>: <strong><?php print html_escape(get_vdef_item_name($vdef_item['id']));?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove VDEF Item');?>'>\n\t\t\t<input type='hidden' id='my_vdef_id' value='<?php print $vdef['id'];?>'>\n\t\t\t<input type='hidden' id='my_id' value='<?php print $vdef_item['id'];?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\tvar options = {\n\t\t\t\turl: 'vdef.php?action=item_remove',\n\t\t\t\tfuncEnd: 'removeVdefItemFinalize'\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tvdef_id: <?php print get_request_var('vdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}\n\t\t});\n\t});\n\n\tfunction removeVdefItemFinalize(data) {\n\t\t$('#cdialog').dialog('close');\n\t\tloadUrl({url:'vdef.php?action=edit&id=<?php print get_request_var('id');?>'})\n\t}\n\t</script>\n\t<?php\n}\n\nfunction vdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM vdef_items\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction vdef_item_edit() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\tget_filter_request_var('type_select');\n\t/* ==================================================== */\n\n\t/* sort the vdef functions */\n\tasort($vdef_functions);\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($vdef)) {\n\t\t\t$current_type          = $vdef['type'];\n\t\t\t$values[$current_type] = $vdef['value'];\n\t\t}\n\t} else {\n\t\t$vdef = array();\n\t}\n\n\thtml_start_box(__('VDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_vdef_preview(get_request_var('vdef_id'));\n\thtml_end_box();\n\n\tif (!isempty_request_var('vdef_id')) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('vdef_id')));\n\n\t\t$header_label = __esc('VDEF Items [edit: %s]', $name);\n\t} else {\n\t\t$header_label = __('VDEF Items [new]');\n\t}\n\n\tform_start('vdef.php', 'chk');\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($vdef['type'])) {\n\t\t$current_type = $vdef['type'];\n\t} else {\n\t\t$current_type = CVDEF_ITEM_TYPE_FUNCTION;\n\t}\n\n\t$form_vdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of VDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $vdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this VDEF item.'),\n\t\t\t'value'         => (isset($vdef['value']) ? $vdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'vdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('vdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\t\tcase '1':\n\t\t\t$form_vdef['value']['array'] = $vdef_functions;\n\n\t\t\tbreak;\n\t\tcase '4':\n\t\t\t$form_vdef['value']['array'] = $custom_vdef_data_source_types;\n\n\t\t\tbreak;\n\t\tcase '6':\n\t\t\t$form_vdef['value']['method']     = 'textbox';\n\t\t\t$form_vdef['value']['max_length'] = '255';\n\t\t\t$form_vdef['value']['size']       = '30';\n\n\t\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_vdef, $vdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'vdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&vdef_id=' + $('#vdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tloadUrl({url:strURL})\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n}\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction vdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('vdef_item') && is_array(get_nfilter_request_var('vdef_item'))) {\n\t\t$vdef_ids = get_nfilter_request_var('vdef_item');\n\n\t\tif (cacti_sizeof($vdef_ids)) {\n\t\t\t$sequence = 1;\n\n\t\t\tforeach ($vdef_ids as $vdef_id) {\n\t\t\t\t$vdef_id = str_replace('line', '', $vdef_id);\n\t\t\t\tinput_validate_input_number($vdef_id, 'vdef_id');\n\n\t\t\t\tdb_execute_prepared('UPDATE vdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $vdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: vdef.php?action=edit&id=' . get_request_var('id'));\n}\n\nfunction vdef_edit() {\n\tglobal $vdef_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __esc('VDEFs [edit: %s]', $vdef['name']);\n\t} else {\n\t\t$header_label = __('VDEFs [new]');\n\t}\n\n\tform_start('vdef.php', 'vdef_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t$preset_vdef_form_list = preset_vdef_form_list();\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($preset_vdef_form_list, (isset($vdef) ? $vdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset($vdef['id']) ? $vdef['id'] : '0'), '');\n\tform_hidden_box('save_component_vdef', '1', '');\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_vdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('VDEF Items'), '100%', '', '3', 'center', 'vdef.php?action=item_edit&vdef_id=' . $vdef['id'], false, false);\n\n\t\t$header_items = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($header_items, 2);\n\n\t\t$vdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE vdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i           = 1;\n\t\t$total_items = cacti_sizeof($vdef_items);\n\n\t\tif (cacti_sizeof($vdef_items)) {\n\t\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\t\tform_alternate_row('line' . $vdef_item['id'], true);\n\n\t\t\t\tform_selectable_cell(filter_value(__('Item # %d', $i), '', 'vdef.php?action=item_edit&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef['id']), $vdef_item['id']);\n\n\t\t\t\t$item_value = '<em>' . $vdef_item_types[$vdef_item['type']] . '</em>' . html_escape(get_vdef_item_name($vdef_item['id']));\n\n\t\t\t\tform_selectable_cell($item_value, $vdef_item['id']);\n\n\t\t\t\t$actions = '';\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 0) {\n\t\t\t\t\t\t$actions .= '<a class=\"pic ti ti-caret-down-filled moveArrow\" href=\"' . html_escape('vdef.php?action=item_movedown&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$actions .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t$actions .= '<a class=\"pic ti ti-caret-up-filled moveArrow\" href=\"' . html_escape('vdef.php?action=item_moveup&id=' . $vdef_item['id'] .   '&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$actions .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$actions .= \"<a id='{$vdef['id']}_{$vdef_item['id']}' class='delete deleteMarker ti ti-x' title='\" . __esc('Delete') . \"' href='#'></a>\";\n\n\t\t\t\tform_selectable_cell($actions, $vdef_item['id'], '', 'right');\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('vdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#vdef_edit3').find('.cactiTable').attr('id', 'vdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('#main').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#vdef_item').find('tr:first').addClass('nodrag').addClass('nodrop');\n\t\t$('#vdef_item').unbind().tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadUrl({url:'vdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize()})\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'vdef.php?action=item_remove_confirm&id='+id[0]+'&vdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\n\t\t\t\t\tapplySkin();\n\n\t\t\t\t\t$('#continue').off('click').on('click', function(data) {\n\t\t\t\t\t\t$.post('vdef.php?action=item_remove', {\n\t\t\t\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\t\t\t\tvdef_id: $('#my_vdef_id').val(),\n\t\t\t\t\t\t\tid: $('#my_id').val()\n\t\t\t\t\t\t}).done(function(data) {\n\t\t\t\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t\t\t\tloadUrl({url:'vdef.php?action=edit&id='+$('#my_vdef_id').val()});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __esc('Delete VDEF Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction get_vdef_records(&$total_rows, &$rows) {\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = 'WHERE name LIKE ' . db_qstr('%' . get_request_var('filter') . '%');\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' graphs > 0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n        FROM vdef\n        $sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows;\n\n\treturn db_fetch_assoc(\"SELECT *\n\t\tFROM vdef\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n}\n\nfunction vdef($refresh = true) {\n\tglobal $actions;\n\n\t/* create the page filter */\n\t$pageFilter = new CactiTableFilter(__('VDEFs'), 'vdef.php', 'form_vdef', 'sess_vdef', 'vdef.php?action=edit');\n\n\t$pageFilter->rows_label = __('VDEFs');\n\t$pageFilter->has_graphs = true;\n\t$pageFilter->render();\n\n\t$total_rows = 0;\n\t$vdefs      = array();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$vdefs = get_vdef_records($total_rows, $rows);\n\n\t$nav = html_nav_bar('vdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('VDEFs'), 'page', 'main');\n\n\tform_start('vdef.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array(\n\t\t\t'display' => __('VDEF Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __esc('The name of this VDEF.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'right',\n\t\t\t'tip'     => __esc('VDEFs that are in use cannot be Deleted. In use is defined as being referenced by a Graph or a Graph Template.')\n\t\t),\n\t\t'graphs' => array(\n\t\t\t'display' => __('Graphs Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __esc('The number of Graphs using this VDEF.')\n\t\t),\n\t\t'templates' => array(\n\t\t\t'display' => __('Templates Using'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'DESC',\n\t\t\t'tip'     => __esc('The number of Graphs Templates using this VDEF.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($vdefs)) {\n\t\tforeach ($vdefs as $vdef) {\n\t\t\tif ($vdef['graphs'] == 0 && $vdef['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\t$graphs_url    = 'graphs.php?reset=1&vdef_id=' . $vdef['id'];\n\t\t\t$templates_url = 'graph_templates.php?reset=1&vdef_id=' . $vdef['id'];\n\n\t\t\tform_alternate_row('line' . $vdef['id'], false, $disabled);\n\n\t\t\tform_selectable_cell(filter_value($vdef['name'], get_request_var('filter'), 'vdef.php?action=edit&id=' . $vdef['id']), $vdef['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $vdef['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($vdef['graphs'], '-1'), '', $graphs_url), $vdef['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value(number_format_i18n($vdef['templates'], '-1'), '', $templates_url), $vdef['id'], '', 'right');\n\n\t\t\tform_checkbox_cell($vdef['name'], $vdef['id'], $disabled);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow odd'><td colspan='\" . (cacti_sizeof($display_text) + 1) . \"'><em>\" . __('No VDEFs') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($vdefs)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n"
        }
      ]
    }
  ]
}