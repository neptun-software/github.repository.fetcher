{
  "metadata": {
    "timestamp": 1736711891954,
    "page": 260,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/image-optimizer",
      "stars": 2744,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.48828125,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.github            export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n/docs               export-ignore\n.php-cs-fixer.dist.php export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "build\ncomposer.lock\nvendor\n.php-cs-fixer.cache\n.phpunit.result.cache\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.25,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config)\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.6240234375,
          "content": "# Changelog\n\nAll notable changes to `image-optimizer` will be documented in this file\n\n## 1.8.0 - 2024-11-04\n\n### What's Changed\n\n* Bump dependabot/fetch-metadata from 2.1.0 to 2.2.0 by @dependabot in https://github.com/spatie/image-optimizer/pull/221\n* PHP 8.4 tests by @erikn69 in https://github.com/spatie/image-optimizer/pull/224\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.5...1.8.0\n\n## 1.7.5 - 2024-05-16\n\n### What's Changed\n\n* Fix `quality` config parameter by @0xb4lint in https://github.com/spatie/image-optimizer/pull/219\n* Bump dependabot/fetch-metadata from 1.6.0 to 2.1.0 by @dependabot in https://github.com/spatie/image-optimizer/pull/215\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.4...1.7.5\n\n## 1.7.4 - 2024-05-06\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.3...1.7.4\n\n## 1.7.3 - 2024-05-03\n\n### What's Changed\n\n* Bump stefanzweifel/git-auto-commit-action from 4 to 5 by @dependabot in https://github.com/spatie/image-optimizer/pull/203\n* Fix OptimizerChainFactory's missing config processor by @0xb4lint in https://github.com/spatie/image-optimizer/pull/216\n* Fix the bug related to Deserialization of Untrusted Data by @Sonicrrrr in https://github.com/spatie/image-optimizer/pull/211\n\n### New Contributors\n\n* @Sonicrrrr made their first contribution in https://github.com/spatie/image-optimizer/pull/211\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.2...1.7.3\n\n## 1.7.2 - 2023-11-03\n\n### What's Changed\n\n- Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/spatie/image-optimizer/pull/202\n- Add PHP 8.2 to the GitHub CI test matrix by @javiereguiluz in https://github.com/spatie/image-optimizer/pull/207\n- Allow using Symfony 7 packages by @javiereguiluz in https://github.com/spatie/image-optimizer/pull/206\n\n### New Contributors\n\n- @javiereguiluz made their first contribution in https://github.com/spatie/image-optimizer/pull/207\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.1...1.7.2\n\n## 1.7.1 - 2023-07-27\n\n### What's Changed\n\n- libavif version note by @0xb4lint in https://github.com/spatie/image-optimizer/pull/199\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.7.0...1.7.1\n\n## 1.7.0 - 2023-07-22\n\n### What's Changed\n\n- README.md file size fixes, DSSIM score, optimized webp replaced by @0xb4lint in https://github.com/spatie/image-optimizer/pull/197\n- added AVIF support by @0xb4lint in https://github.com/spatie/image-optimizer/pull/198\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.6.4...1.7.0\n\n## 1.6.4 - 2023-03-10\n\n### What's Changed\n\n- SVGO 3 Support by @l-alexandrov in https://github.com/spatie/image-optimizer/pull/186\n\n### New Contributors\n\n- @l-alexandrov made their first contribution in https://github.com/spatie/image-optimizer/pull/186\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.6.3...1.6.4\n\n## 1.6.3 - 2023-02-28\n\n### What's Changed\n\n- Update .gitattributes by @PaolaRuby in https://github.com/spatie/image-optimizer/pull/161\n- Feature: Convert PHPUnit tests to Pest by @mansoorkhan96 in https://github.com/spatie/image-optimizer/pull/167\n- Add dependabot automation by @patinthehat in https://github.com/spatie/image-optimizer/pull/173\n- Allow Pest Composer Plugin (fix failing tests) by @patinthehat in https://github.com/spatie/image-optimizer/pull/176\n- Update Dependabot Automation by @patinthehat in https://github.com/spatie/image-optimizer/pull/175\n- DOC: adding SilverStripe link by @sunnysideup in https://github.com/spatie/image-optimizer/pull/177\n- Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/spatie/image-optimizer/pull/183\n- WebP Quality Option by @jan-tricks in https://github.com/spatie/image-optimizer/pull/185\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/image-optimizer/pull/174\n\n### New Contributors\n\n- @PaolaRuby made their first contribution in https://github.com/spatie/image-optimizer/pull/161\n- @mansoorkhan96 made their first contribution in https://github.com/spatie/image-optimizer/pull/167\n- @patinthehat made their first contribution in https://github.com/spatie/image-optimizer/pull/173\n- @sunnysideup made their first contribution in https://github.com/spatie/image-optimizer/pull/177\n- @dependabot made their first contribution in https://github.com/spatie/image-optimizer/pull/183\n- @jan-tricks made their first contribution in https://github.com/spatie/image-optimizer/pull/185\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.6.2...1.6.3\n\n## 1.6.2 - 2021-12-21\n\n## What's Changed\n\n- add support for Symfony 6 by @Nielsvanpach in https://github.com/spatie/image-optimizer/pull/155\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.6.1...1.6.2\n\n## 1.6.1 - 2021-11-17\n\n## What's Changed\n\n- Add PHP 8.1 support by @freekmurze in https://github.com/spatie/image-optimizer/pull/154\n\n**Full Changelog**: https://github.com/spatie/image-optimizer/compare/1.5.0...1.6.1\n\n## 1.5.0 - 2021-10-18\n\n- Support new releases of psr/log (#150)\n\n## 1.4.0 - 2021-04-22\n\n- use `--skip-if-larger` pngquant option by default (#140)\n\n## 1.3.2 - 2020-11-28\n\n- improve gifsicle (#131)\n\n## 1.3.1 - 2020-10-20\n\n- fix empty string setBinaryPath() (#129)\n\n## 1.3.0 - 2020-10-10\n\n- add support for php 8.0\n\n## 1.2.1 - 2019-11-23\n\n- allow symfony 5 components\n\n## 1.2.0 - 2019-08-28\n\n- add support for webp\n\n## 1.1.6 - 2019-08-26\n\n- do not export docs directory\n\n## 1.1.5 - 2019-01-15\n\n- fix for svg's\n- make compatible with PHPUnit 8\n\n## 1.1.4 - 2019-01-14\n\n- fix deprecation warning for passing strings to processes\n\n## 1.1.3 - 2018-11-19\n\n- require the fileinfo extension\n\n## 1.1.2 - 2018-10-10\n\n- make sure all optimizers use `binaryPath`\n\n## 1.1.1 - 2018-09-10\n\n- fix logger output\n\n## 1.1.0 - 2018-06-05\n\n- add `setBinaryPath`\n\n## 1.0.14 - 2018-03-07\n\n- support more symfony versions\n\n## 1.0.13 - 2018-02-26\n\n- added `text/plain` to the list of valid svg mime types\n\n## 1.0.12. - 2018-02-21\n\n- added `image/svg+xml` mime type\n\n## 1.0.11 - 2018-02-08\n\n- SVG mime type detection in PHP 7.2\n\n## 1.0.10 - 2018-02-08\n\n- Support symfony ^4.0\n- Support phpunit ^7.0\n\n## 1.0.9 - 2017-11-03\n\n- fix shell command quotes\n\n## 1.0.8 - 2017-09-14\n\n- allow Symfony 2 components\n- make Google Pagespeed tests pass\n\n## 1.0.7 - 2017-07-29\n\n- lower requirements of dependencies\n\n## 1.0.6 - 2017-07-10\n\n- fix `jpegoptim` parameters\n\n## 1.0.4 - 2017-07-07\n\n- make `setTimeout` chainable\n\n## 1.0.3 - 2017-07-06\n\n- fix `composer.json`\n\n## 1.0.2 - 2017-07-06\n\n- fix for Laravel 5.5 users\n\n## 1.0.1 - 2017-07-06\n\n- improve security\n\n## 1.0.0 - 2017-07-05\n\n- initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "MIT License\n\nCopyright (c) Spatie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.6953125,
          "content": "# Easily optimize images using PHP\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/image-optimizer.svg?style=flat-square)](https://packagist.org/packages/spatie/image-optimizer)\n![Tests](https://github.com/spatie/image-optimizer/workflows/Tests/badge.svg)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/image-optimizer.svg?style=flat-square)](https://packagist.org/packages/spatie/image-optimizer)\n\nThis package can optimize PNGs, JPGs, WEBPs, AVIFs, SVGs and GIFs by running them through a chain of various [image optimization tools](#optimization-tools). Here's how you can use it:\n\n```php\nuse Spatie\\ImageOptimizer\\OptimizerChainFactory;\n\n$optimizerChain = OptimizerChainFactory::create();\n\n$optimizerChain->optimize($pathToImage);\n```\n\nThe image at `$pathToImage` will be overwritten by an optimized version which should be smaller. The package will automatically detect which optimization binaries are installed on your system and use them.\n\nHere are some [example conversions](#example-conversions) that have been done by this package.\n\nLoving Laravel? Then head over to [the Laravel specific integration](https://github.com/spatie/laravel-image-optimizer).\n\nUsing WordPress? Then try out [the WP CLI command](https://github.com/TypistTech/image-optimize-command).\n\nSilverStripe enthusiast? Don't waste time, go to [the SilverStripe module](https://github.com/axllent/silverstripe-image-optimiser).\n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/image-optimizer.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/image-optimizer)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/image-optimizer\n```\n\n### Optimization tools\n\nThe package will use these optimizers if they are present on your system:\n\n- [JpegOptim](https://github.com/tjko/jpegoptim)\n- [Optipng](http://optipng.sourceforge.net/)\n- [Pngquant 2](https://pngquant.org/)\n- [SVGO 1](https://github.com/svg/svgo)\n- [Gifsicle](http://www.lcdf.org/gifsicle/)\n- [cwebp](https://developers.google.com/speed/webp/docs/precompiled)\n- [avifenc](https://github.com/AOMediaCodec/libavif/blob/main/doc/avifenc.1.md)\n\nHere's how to install all the optimizers on Ubuntu/Debian:\n\n```bash\nsudo apt-get install jpegoptim\nsudo apt-get install optipng\nsudo apt-get install pngquant\nsudo npm install -g svgo\nsudo apt-get install gifsicle\nsudo apt-get install webp\nsudo apt-get install libavif-bin # minimum 0.9.3\n```\n\nAnd here's how to install the binaries on MacOS (using [Homebrew](https://brew.sh/)):\n\n```bash\nbrew install jpegoptim\nbrew install optipng\nbrew install pngquant\nnpm install -g svgo\nbrew install gifsicle\nbrew install webp\nbrew install libavif\n```\n\nAnd here's how to install the binaries on Fedora/RHEL/CentOS:\n\n```bash\nsudo dnf install epel-release\nsudo dnf install jpegoptim\nsudo dnf install optipng\nsudo dnf install pngquant\nsudo npm install -g svgo\nsudo dnf install gifsicle\nsudo dnf install libwebp-tools\nsudo dnf install libavif-tools\n```\n\n## Which tools will do what?\n\nThe package will automatically decide which tools to use on a particular image.\n\n### JPGs\n\nJPGs will be made smaller by running them through [JpegOptim](http://freecode.com/projects/jpegoptim). These options are used:\n- `-m85`: this will store the image with 85% quality. This setting [seems to satisfy Google's Pagespeed compression rules](https://webmasters.stackexchange.com/questions/102094/google-pagespeed-how-to-satisfy-the-new-image-compression-rules)\n- `--strip-all`: this strips out all text information such as comments and EXIF data\n- `--all-progressive`: this will make sure the resulting image is a progressive one, meaning it can be downloaded using multiple passes of progressively higher details.\n\n### PNGs\n\nPNGs will be made smaller by running them through two tools. The first one is [Pngquant 2](https://pngquant.org/), a lossy PNG compressor. We set no extra options, their defaults are used. After that we run the image through a second one: [Optipng](http://optipng.sourceforge.net/). These options are used:\n- `-i0`: this will result in a non-interlaced, progressive scanned image\n- `-o2`: this set the optimization level to two (multiple IDAT compression trials)\n\n### SVGs\n\nSVGs will be minified by [SVGO](https://github.com/svg/svgo). SVGO's default configuration will be used, with the omission of the `cleanupIDs` and `removeViewBox` plugins because these are known to cause troubles when displaying multiple optimized SVGs on one page.\n\nPlease be aware that SVGO can break your svg. You'll find more info on that in this [excellent blogpost](https://www.sarasoueidan.com/blog/svgo-tools/) by [Sara Soueidan](https://twitter.com/SaraSoueidan).\n\n### GIFs\n\nGIFs will be optimized by [Gifsicle](http://www.lcdf.org/gifsicle/). These options will be used:\n- `-O3`: this sets the optimization level to Gifsicle's maximum, which produces the slowest but best results\n\n### WEBPs\n\nWEBPs will be optimized by [Cwebp](https://developers.google.com/speed/webp/docs/cwebp). These options will be used:\n- `-m 6` for the slowest compression method in order to get the best compression.\n- `-pass 10` for maximizing the amount of analysis pass.\n- `-mt` multithreading for some speed improvements.\n- `-q 90` Quality factor that brings the least noticeable changes.\n\n(Settings are original taken from [here](https://medium.com/@vinhlh/how-i-apply-webp-for-optimizing-images-9b11068db349))\n\n### AVIFs\n\nAVIFs will be optimized by [avifenc](https://github.com/AOMediaCodec/libavif/blob/main/doc/avifenc.1.md). These options will be used:\n- `-a cq-level=23`: Constant Quality level. Lower values mean better quality and greater file size (0-63).\n- `-j all`: Number of jobs (worker threads, `all` uses all available cores).\n- `--min 0`: Min quantizer for color (0-63).\n- `--max 63`: Max quantizer for color (0-63).\n- `--minalpha 0`: Min quantizer for alpha (0-63).\n- `--maxalpha 63`: Max quantizer for alpha (0-63).\n- `-a end-usage=q` Rate control mode set to Constant Quality mode.\n- `-a tune=ssim`: SSIM as tune the encoder for distortion metric.\n\n(Settings are original taken from [here](https://web.dev/compress-images-avif/#create-an-avif-image-with-default-settings) and [here](https://github.com/feat-agency/avif))\n\n## Usage\n\nThis is the default way to use the package:\n\n``` php\nuse Spatie\\ImageOptimizer\\OptimizerChainFactory;\n\n$optimizerChain = OptimizerChainFactory::create();\n\n$optimizerChain->optimize($pathToImage);\n```\n\nThe image at `$pathToImage` will be overwritten by an optimized version which should be smaller.\n\nThe package will automatically detect which optimization binaries are installed on your system and use them.\n\nTo keep the original image, you can pass through a second argument`optimize`:\n```php\nuse Spatie\\ImageOptimizer\\OptimizerChainFactory;\n\n$optimizerChain = OptimizerChainFactory::create();\n\n$optimizerChain->optimize($pathToImage, $pathToOutput);\n```\n\nIn that example the package won't touch `$pathToImage` and write an optimized version to `$pathToOutput`.\n\n### Setting a timeout\n\nYou can set the maximum of time in seconds that each individual optimizer in a chain can use by calling `setTimeout`:\n\n```php\n$optimizerChain\n    ->setTimeout(10)\n    ->optimize($pathToImage);\n```\n\nIn this example each optimizer in the chain will get a maximum 10 seconds to do it's job.\n\n### Creating your own optimization chains\n\nIf you want to customize the chain of optimizers you can do so by adding `Optimizer`s manually to an `OptimizerChain`.\n\nHere's an example where we only want `optipng` and `jpegoptim` to be used:\n\n```php\nuse Spatie\\ImageOptimizer\\OptimizerChain;\nuse Spatie\\ImageOptimizer\\Optimizers\\Jpegoptim;\nuse Spatie\\ImageOptimizer\\Optimizers\\Pngquant;\n\n$optimizerChain = (new OptimizerChain)\n   ->addOptimizer(new Jpegoptim([\n       '--strip-all',\n       '--all-progressive',\n   ]))\n\n   ->addOptimizer(new Pngquant([\n       '--force',\n   ]))\n```\n\nNotice that you can pass the options an `Optimizer` should use to its constructor.\n\n### Writing a custom optimizers\n\nWant to use another command line utility to optimize your images? No problem. Just write your own optimizer. An optimizer is any class that implements the `Spatie\\ImageOptimizer\\Optimizers\\Optimizer` interface:\n\n```php\nnamespace Spatie\\ImageOptimizer\\Optimizers;\n\nuse Spatie\\ImageOptimizer\\Image;\n\ninterface Optimizer\n{\n    /**\n     * Returns the name of the binary to be executed.\n     *\n     * @return string\n     */\n    public function binaryName(): string;\n\n    /**\n     * Determines if the given image can be handled by the optimizer.\n     *\n     * @param \\Spatie\\ImageOptimizer\\Image $image\n     *\n     * @return bool\n     */\n    public function canHandle(Image $image): bool;\n\n    /**\n     * Set the path to the image that should be optimized.\n     *\n     * @param string $imagePath\n     *\n     * @return $this\n     */\n    public function setImagePath(string $imagePath);\n\n    /**\n     * Set the options the optimizer should use.\n     *\n     * @param array $options\n     *\n     * @return $this\n     */\n    public function setOptions(array $options = []);\n\n    /**\n     * Get the command that should be executed.\n     *\n     * @return string\n     */\n    public function getCommand(): string;\n}\n```\n\nIf you want to view an example implementation take a look at [the existing optimizers](https://github.com/spatie/image-optimizer/tree/master/src/Optimizers) shipped with this package.\n\nYou can easily add your optimizer by using the `addOptimizer` method on an `OptimizerChain`.\n\n``` php\nuse Spatie\\ImageOptimizer\\ImageOptimizerFactory;\n\n$optimizerChain = OptimizerChainFactory::create();\n\n$optimizerChain\n   ->addOptimizer(new YourCustomOptimizer())\n   ->optimize($pathToImage);\n```\n\n## Logging the optimization process\n\nBy default the package will not throw any errors and just operate silently. To verify what the package is doing you can set a logger:\n\n```php\nuse Spatie\\ImageOptimizer\\OptimizerChainFactory;\n\n$optimizerChain = OptimizerChainFactory::create();\n\n$optimizerChain\n   ->useLogger(new MyLogger())\n   ->optimize($pathToImage);\n```\n\nA logger is a class that implements `Psr\\Log\\LoggerInterface`. A good logging library that's fully compliant is [Monolog](https://github.com/Seldaek/monolog). The package will write to log which `Optimizers` are used, which commands are executed and their output.\n\n## Example conversions\n\nHere are some real life example conversions done by this package.\n\nMethodology for JPG, WEBP, AVIF images: the [original image](https://unsplash.com/photos/jTeQavJjBDs) has been fed to [spatie/image](https://github.com/spatie/image) (using the default GD driver) and resized to 2048px width:\n\n```php\nSpatie\\Image\\Image::load('original.jpg')\n    ->width(2048)\n    ->save('image.jpg'); // image.png, image.webp, image.avif\n```\n\n### jpg\n\n![Original](https://spatie.github.io/image-optimizer/examples/image.jpg)\nOriginal<br>\n771 KB\n\n![Optimized](https://spatie.github.io/image-optimizer/examples/image-optimized.jpg)\nOptimized<br>\n511 KB (-33.7%, DSSIM: 0.00052061)\n\ncredits: Jeff Sheldon, via [Unsplash](https://unsplash.com)\n\n### webp\n\n![Original](https://spatie.github.io/image-optimizer/examples/image.webp)\nOriginal<br>\n461 KB\n\n![Optimized](https://spatie.github.io/image-optimizer/examples/image-optimized.webp)\nOptimized<br>\n184 KB (-60.0%, DSSIM: 0.00166036)\n\ncredits: Jeff Sheldon, via [Unsplash](https://unsplash.com)\n\n### avif\n\n![Original](https://spatie.github.io/image-optimizer/examples/image.avif)\nOriginal<br>\n725 KB\n\n![Optimized](https://spatie.github.io/image-optimizer/examples/image-optimized.avif)\nOptimized<br>\n194 KB (-73.2%, DSSIM: 0.00163751)\n\ncredits: Jeff Sheldon, via [Unsplash](https://unsplash.com)\n\n### png\n\nOriginal: Photoshop 'Save for web' | PNG-24 with transparency<br>\n39 KB\n\n![Original](https://spatie.github.io/image-optimizer/examples/logo.png)\n\nOptimized<br>\n16 KB (-59%, DSSIM: 0.00000251)\n\n![Optimized](https://spatie.github.io/image-optimizer/examples/logo-optimized.png)\n\n### svg\n\nOriginal: Illustrator | Web optimized SVG export<br>\n25 KB\n\n![Original](https://spatie.github.io/image-optimizer/examples/graph.svg)\n\nOptimized<br>\n20 KB (-21.5%)\n\n![Optimized](https://spatie.github.io/image-optimizer/examples/graph-optimized.svg)\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you've found a bug regarding security please mail [security@spatie.be](mailto:security@spatie.be) instead of using the issue tracker.\n\n## Postcardware\n\nYou're free to use this package (it's [MIT-licensed](.github/LICENSE.md)), but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.\n\nOur address is: Spatie, Kruikstraat 22, 2018 Antwerp, Belgium.\n\nWe publish all received postcards [on our company website](https://spatie.be/en/opensource/postcards).\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\nThis package has been inspired by [psliwa/image-optimizer](https://github.com/psliwa/image-optimizer)\n\nEmotional support provided by [Joke Forment](https://twitter.com/pronneur)\n\n## License\n\nThe MIT License (MIT). Please see [License File](.github/LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.21875,
          "content": "{\n    \"name\": \"spatie/image-optimizer\",\n    \"description\": \"Easily optimize images using PHP\",\n    \"keywords\": [\n        \"spatie\",\n        \"image-optimizer\"\n    ],\n    \"homepage\": \"https://github.com/spatie/image-optimizer\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.3|^8.0\",\n        \"ext-fileinfo\": \"*\",\n        \"psr/log\": \"^1.0 | ^2.0 | ^3.0\",\n        \"symfony/process\": \"^4.2|^5.0|^6.0|^7.0\"\n    },\n    \"require-dev\": {\n        \"pestphp/pest\": \"^1.21\",\n        \"phpunit/phpunit\": \"^8.5.21|^9.4.4\",\n        \"symfony/var-dumper\": \"^4.2|^5.0|^6.0|^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\ImageOptimizer\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\ImageOptimizer\\\\Test\\\\\": \"tests\"\n        },\n        \"files\": [\n            \"tests/helpers.php\"\n        ]\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.65234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Spatie Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "svgo.config.js",
          "type": "blob",
          "size": 0.1953125,
          "content": "module.exports = {\n  plugins: [\n    {\n      name: 'preset-default',\n      params: {\n        overrides: {\n          cleanupIDs: false,\n          removeViewBox: false,\n        },\n      },\n    },\n  ],\n};"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}