{
  "metadata": {
    "timestamp": 1736712119725,
    "page": 719,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tighten/collect",
      "stars": 1510,
      "defaultBranch": "laravel-9-ongoing",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.25390625,
          "content": "* text=auto eol=lf\n\n/stubs export-ignore\n/tests export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/collect-logo.png export-ignore\n/.travis.yml export-ignore\n/phpunit.xml.dist export-ignore\n/readme.md export-ignore\n/upgrade.sh export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "/vendor\ncomposer.lock\n.phpunit.result.cache\n"
        },
        {
          "name": "branch-commit-push.sh",
          "type": "blob",
          "size": 1.505859375,
          "content": "#!/bin/bash\n\n\nGREEN='\\033[0;32m'\nRED='\\033[0;31m'\nWHITE='\\033[0;37m'\nRESET='\\033[0m'\n\nfunction validateVersion()\n{\n    echo \"\"\n    passedVersion=$1\n    echo -e \"${WHITE}-- Validating tag '$passedVersion'...${RESET}\"\n\n    # Todo: validate the version here using a regex; if fail, just exit\n    #       ... expect 8.75.0, with no v in front of it\n\n    if [[ $passedVersion == '' ]]; then\n        echo -e \"\\n-- Invalid tag. Tags should be structured without v; e.g. 8.57.0\"\n        exit\n    fi\n\n    echo -e \"${WHITE}-- Tag valid.${RESET}\"\n    echo \"\"\n}\n\n# Exit script if any command fails (e.g. phpunit)\nset -e\n\n\n# Require confirmation it's set up corrctly\necho \necho -e \"${WHITE}-- This script is meant to be run after running upgrade.sh, BEFORE committing to Git.${RESET}\"\n\nwhile true; do\n    echo -e \"${GREEN}-- Is that the current state of your local project?${RESET}\"\n    read -p \"-- (y/n) \" yn\n    case $yn in\n        [Yy]* ) break;;\n        [Nn]* ) exit;;\n        * ) echo \"Please answer y or n.\";;\n    esac\ndone\n\n# Get the version and exit if not valid\nvalidateVersion $1\n\n# Create official v prefaced version\nversion=\"v$1\"\n\n# Run tests (and bail if they fail)\nphpunit\necho -e \"\\n${WHITE}-- Tests succeeded.${RESET}\"\n\n# Branch\necho -e \"\\n${WHITE}-- Creating a Git branch '$version-changes'...${RESET}\\n\"\ngit checkout -b $version-changes\n\n# Add and commit, with \"v8.57.0 changes\" as the commit name\ngit add -A\ngit commit -m \"$version changes\"\n\necho \necho -e \"${WHITE}-- Git committed.${RESET}\"\n\n# Push\ngit push -u origin $version-changes\n"
        },
        {
          "name": "collect-logo.png",
          "type": "blob",
          "size": 53.21875,
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3984375,
          "content": "{\n    \"name\": \"tightenco/collect\",\n    \"description\": \"Collect - Illuminate Collections as a separate package.\",\n    \"keywords\": [\"laravel\", \"collection\"],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Taylor Otwell\",\n            \"email\": \"taylorotwell@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"symfony/var-dumper\": \"^3.4 || ^4.0 || ^5.0 || ^6.0\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.0\",\n        \"phpunit/phpunit\": \"^8.3\",\n        \"nesbot/carbon\": \"^2.23.0\"\n    },\n    \"autoload\": {\n        \"files\": [\n            \"src/Collect/Support/helpers.php\",\n            \"src/Collect/Support/alias.php\"\n        ],\n        \"psr-4\": {\n            \"Tightenco\\\\Collect\\\\\": \"src/Collect\"\n        }\n    },\n    \"autoload-dev\": {\n        \"files\": [\n            \"tests/files/Support/Carbon.php\",\n            \"tests/files/Support/HtmlString.php\",\n            \"tests/files/Support/HigherOrderTapProxy.php\",\n            \"tests/files/Support/Str.php\",\n            \"tests/files/Support/Stringable.php\",\n            \"tests/files/Support/ItemNotFoundException.php\",\n            \"tests/files/Support/MultipleItemsFoundException.php\",\n            \"tests/Support/Concerns/CountsEnumerations.php\"\n        ]\n    },\n    \"scripts\": {\n        \"test\": [\n            \"@composer install\",\n            \"phpunit\"\n        ]\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "framework-.zip",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.7568359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         beStrictAboutTestsThatDoNotTestAnything=\"false\"\n         bootstrap=\"tests/bootstrap.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnError=\"false\"\n         stopOnFailure=\"false\"\n         verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Laravel Test Suite\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 3.6826171875,
          "content": "![Tighten Collect Logo Banner](https://raw.githubusercontent.com/tighten/collect/master/collect-logo.png)\n\n# Collect - Illuminate Collections\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/tightenco/collect.svg?style=flat-square)](https://packagist.org/packages/tightenco/collect)\n[![Total Downloads](https://img.shields.io/packagist/dt/tightenco/collect.svg?style=flat-square)](https://packagist.org/packages/tightenco/collect)\n[![Build Status](https://github.com/tighten/collect/workflows/Run%20tests/badge.svg)](https://github.com/tighten/collect/actions/workflows/run-tests.yml)\n\n## Deprecated: With the separation of [Illuminate's Collections package](https://packagist.org/packages/illuminate/collections), Collect is no longer necessary :tada: . We will maintain it for the 8.0 and 9.0 releases of Laravel for the convenience of package maintainers, and will stop mirroring new major versions after 9.0, but keep the existing package here for continued support.\n\nImport [Laravel's Collections](https://laravel.com/docs/collections) into non-Laravel packages easily, without needing to require the entire `Illuminate\\Support` package. ([Why not pull `Illuminate\\Support` in framework-agnostic packages](https://mattallan.org/posts/dont-use-illuminate-support/))\n\nWritten by Taylor Otwell as a part of Laravel's [Illuminate/Support](https://github.com/illuminate/support) package, Collect is just the code from Support needed in order to use Collections on their own.\n\nLovingly split by Matt Stauffer for [Tighten Co.](https://tighten.co/), with a kick in the butt to finally do it from [@assertchris](https://github.com/assertchris).\n\n## Installation\n\nWith [Composer](https://getcomposer.org):\n\n```bash\ncomposer require tightenco/collect\n```\n\n## Development\nIf you are a developer working on Collect and you're tasked with upgrading it to mirror a new version of Laravel,  run `./upgrade.sh` from the root directory. You can pass a parameter to target a specific Laravel version (e.g. `./upgrade.sh 5.7.10`) or, if you don't pass a parameter, the script will find the latest tagged release and run against that.\n\nThe upgrader will pull down the appropriate source and test files for the specified version of Laravel and then run the tests.\n\n```bash\n./upgrade.sh\n# or\n./upgrade.sh 5.7.10\n```\n\n> The upgrade script requires the use of `wget`. It's recommended to install [homebrew](https://brew.sh), and run `brew install wget`\n\n## Testing\n**Due to a [dependency on Carbon](https://github.com/tighten/collect/commit/4afe1fcb40f1c10e399730562c2c7ca36c6fba01), tests won't pass until you've run `./upgrade.sh` at least once locally.**\n\n```bash\nvendor/bin/phpunit\n```\n\n## FAQ\n - **Has this ever, or will it ever, develop independently from Illuminate's Collections?**\n    No. Using an upgrade script, it's split automatically with every Laravel release to keep it in sync with Laravel's Collections, even mirroring the release numbers.\n - **Why is the package `tightenco/collect` instead of `illuminate/collect`?**\n    It's not an official Laravel package so we don't want to use the Packagist namespace reserved by Laravel packages. ~One day `Collection` may be extracted from `illuminate/support` to a new package. If so, we'll deprecate this package and point to the core version.~ Now that `illuminate/collections` has been released, we're deprecating this package.\n - **Why not just use an array?**\n    What a great question. [Tighten alum Adam Wathan has a book about that.](https://adamwathan.me/refactoring-to-collections/)\n\n## License\n\nThe Laravel framework is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT). Collect consists almost entirely of Laravel source code, so maintains the same license.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stubs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "upgrade.sh",
          "type": "blob",
          "size": 13.6767578125,
          "content": "#!/usr/bin/env bash\n\n# Note: If you see this error on Ubuntu, don't worry; we're using a macOS-friendly sed syntax\n#       that throws errors but still works fine on Linux.\n#\n#       sed: can't read : No such file or directory\n\n##\n # tightenco/collect upgrader script\n #\n # usage\n #    ./upgrade.sh [laravel framework version]\n #\n #    or\n #\n #    bash upgrade.sh [laravel framework version]\n #\n\n##\n # Include dotfiles on file operations\n #\nshopt -s dotglob\n\n##\n # App\n #\n\nfunction main()\n{\n    # a='a.b.y'\n    # echo ${a##*.}\n    # exit\n\n    echo \"Upgrading...\"\n\n    checkDependencies\n\n    prepareEnvironment $1\n\n    displayVariables\n\n    cleanDirectories\n\n    downloadRepository\n\n    extractZip\n\n    copyClasses\n\n    copyContracts\n\n    copyTraits\n\n    copyStubs\n\n    downloadTests\n\n    copyTestSupportClasses\n\n    renameNamespace\n\n    fillAliases\n\n    cleanupDir\n\n    runTests\n}\n\n##\n # Check if all dependencies are available\n #\nfunction checkDependencies()\n{\n    for dependency in ${dependencies[@]}; do\n        if ! [ -x \"$(command -v ${dependency})\" ]; then\n            echo \"Error: ${dependency} is not installed.\" >&2\n            exit 1\n        fi\n    done\n}\n\n##\n # Prepare the environment\n #\nfunction prepareEnvironment()\n{\n    ##\n     # Define all variables\n     #\n    requestedVersion=$1\n    rootDir=.\n    baseDir=${rootDir}/src\n    vendor=laravel\n    project=framework\n    oldNamespace='Illuminate'\n    newNamespace='Tightenco\\\\Collect'\n    newDir='Collect'\n    logFile=$(mktemp /tmp/collect-log.XXXXXX)\n    repository=https://github.com/$vendor/$project.git\n\n    getCurrentVersionFromGitHub\n\n    repositoryDir=${rootDir}/$project-${collectionVersion}\n    repositorySrcDir=${repositoryDir}/src\n    collectionZip=${rootDir}/$project-${collectionVersion}.zip\n    collectionZipUrl=https://github.com/$vendor/$project/archive/v${collectionVersion}.zip\n    # If a new version has not been tagged, use the following\n    # collectionZipUrl=https://github.com/$vendor/$project/archive/${collectionVersion}.zip\n    oldNamespaceDir=${repositorySrcDir}/${oldNamespace}\n    newNamespaceDir=${baseDir}/${newDir}\n    testsDir=${rootDir}/tests\n    testsBaseUrl=https://raw.githubusercontent.com/${vendor}/${project}/v${collectionVersion}/tests\n    # If a new version has not been tagged, use the following\n    # testsBaseUrl=https://raw.githubusercontent.com/${vendor}/${project}/${collectionVersion}/tests\n    stubsDir=${rootDir}/stubs\n    aliasFile=${baseDir}/${newDir}/Support/alias.php\ncarriageReturn=\"\n\"\n\n    classes=(\n        'Support/Arr'\n        'Support/Collection'\n        'Support/Enumerable'\n        'Support/HigherOrderCollectionProxy'\n        'Support/LazyCollection'\n    )\n\n    classesNotInSupport=(\n        'Conditionable/HigherOrderWhenProxy'\n        'Support/Str'\n    )\n\n    traits=(\n        'Support/Traits/EnumeratesValues'\n    )\n\n    supportTraits=(\n        'Conditionable/Traits/Conditionable'\n        'Macroable/Traits/Macroable'\n        'Support/Traits/Tappable'\n    )\n\n    contracts=(\n        'Contracts/Support/Arrayable'\n        'Contracts/Support/Jsonable'\n        'Contracts/Support/Htmlable'\n        'Contracts/Support/CanBeEscapedWhenCastToString'\n    )\n\n    tests=(\n        'Support/Enums.php'\n        'Support/SupportCollectionTest.php'\n        'Support/SupportArrTest.php'\n        'Support/SupportMacroableTest.php'\n        'Support/SupportLazyCollectionTest.php'\n        'Support/SupportLazyCollectionIsLazyTest.php'\n        'Support/Concerns/CountsEnumerations.php'\n    )\n\n    testSupportClasses=(\n        'Support/Carbon'\n        'Support/HigherOrderTapProxy'\n        'Support/HtmlString'\n        'Support/Str'\n        'Support/Stringable'\n    )\n\n    testSupportClassesInExtractedCollections=(\n        'Support/ItemNotFoundException'\n        'Support/MultipleItemsFoundException'\n    )\n\n    stubs=(\n        'src/Collect/Support/helpers.php'\n        'src/Collect/Support/alias.php'\n        'tests/bootstrap.php'\n    )\n\n    dependencies=(\n        'wget'\n        'unzip'\n        'mktemp'\n    )\n}\n\n##\n # Display all variables\n #\nfunction displayVariables()\n{\n    echo\n    echo \"-- Variables\"\n    echo \"---------------------------------------------\"\n\n    echo baseDir = ${baseDir}\n    echo collectionVersion = ${collectionVersion}\n    echo repositoryDir = ${repositoryDir}\n    echo repositorySrcDir = ${repositorySrcDir}\n    echo collectionZip = ${collectionZip}\n    echo baseDir = ${baseDir}\n    echo oldNamespace = ${oldNamespace}\n    echo newNamespace = ${newNamespace}\n    echo oldNamespaceDir = ${oldNamespaceDir}\n    echo newNamespaceDir = ${newNamespaceDir}\n    echo testsDir = ${testsDir}\n    echo testsBaseUrl = ${testsBaseUrl}\n\n    echo \"---------------------------------------------\"\n    echo \"\"\n}\n\n##\n # Clean the destination directory\n #\nfunction cleanDirectories()\n{\n    echo \"Cleaning ${baseDir} and ${testsDir}/Support...\"\n\n    if [ -d ${baseDir} ]; then\n        rm -rf ${baseDir}\n    fi\n\n    if [ -d ${testsDir}/Support ]; then\n        rm -rf ${testsDir}\n    fi\n\n    if [ -d ${repositoryDir} ]; then\n        rm -rf ${repositoryDir}\n    fi\n}\n\n##\n # Download a new version\n #\nfunction downloadRepository()\n{\n    echo \"-- Downloading ${collectionZipUrl} to ${baseDir}\"\n\n    wget ${collectionZipUrl} -O ${collectionZip} >${logFile} 2>&1\n\n    handleErrors\n}\n\n##\n # Extract from compressed file\n #\nfunction extractZip()\n{\n    echo \"-- Extracting $project.zip...\"\n\n    unzip -u ${collectionZip} -d ${rootDir} >${logFile} 2>&1\n\n    rm ${collectionZip}\n\n    handleErrors\n}\n\n##\n # Copy classes\n #\nfunction copyClasses()\n{\n    echo \"-- Copying classes ...\"\n\n    for class in ${classes[@]}; do\n        classSrc=\"${class/Support/Collections}\"\n        echo \"Copying ${oldNamespaceDir}/${classSrc}.php...\"\n\n        mkdir -p $(dirname ${newNamespaceDir}/${class}.php)\n\n        cp ${oldNamespaceDir}/${classSrc}.php $newNamespaceDir/$class.php\n\n        chmod 644 ${newNamespaceDir}/${class}.php\n    done\n\n    for class in ${classesNotInSupport[@]}; do\n        classSrc=\"${class}\"\n        echo \"Copying ${oldNamespaceDir}/${classSrc}.php...\"\n\n        mkdir -p $(dirname ${newNamespaceDir}/${class}.php)\n\n        cp ${oldNamespaceDir}/${classSrc}.php $newNamespaceDir/$class.php\n\n        chmod 644 ${newNamespaceDir}/${class}.php\n    done\n}\n\n##\n # Move contracts\n #\nfunction copyContracts()\n{\n    echo \"-- Copying contracts...\"\n\n    for contract in ${contracts[@]}; do\n        echo \"Copying ${oldNamespaceDir}/${contract}.php...\"\n\n        mkdir -p $(dirname ${newNamespaceDir}/${contract})\n\n        cp ${oldNamespaceDir}/${contract}.php ${newNamespaceDir}/${contract}.php\n    done\n}\n\n##\n # Move traits\n #\nfunction copyTraits()\n{\n    echo \"-- Copying traits...\"\n\n    for trait in ${traits[@]}; do\n        traitSrc=\"${trait/Support/Collections}\"\n        echo \"Copying ${oldNamespaceDir}/${traitSrc}.php...\"\n\n        mkdir -p $(dirname ${newNamespaceDir}/${trait})\n\n        cp ${oldNamespaceDir}/${traitSrc}.php ${newNamespaceDir}/${trait}.php\n    done\n\n    for traitSrc in ${supportTraits[@]}; do\n        traitClassName=\"${traitSrc##*/}\"\n\n        echo \"Copying ${oldNamespaceDir}/${traitSrc}.php... to ${newNamespaceDir}/Support/Traits/${traitClassName}.php\"\n\n        mkdir -p $(dirname ${newNamespaceDir}/${traitClassName})\n\n        cp ${oldNamespaceDir}/${traitSrc}.php ${newNamespaceDir}/Support/Traits/${traitClassName}.php\n    done\n}\n\n##\n # Copy classes and contracts\n #\nfunction copyStubs()\n{\n    echo \"-- Copying stubs...\"\n\n    for stub in ${stubs[@]}; do\n        echo \"Copying ${stubsDir}/${stub} to ${rootDir}/${stub}...\"\n\n        mkdir -p $(dirname ${rootDir}/${stub})\n\n        cp ${stubsDir}/${stub} ${rootDir}/${stub}\n\n        chmod 644 ${rootDir}/${stub}\n    done\n}\n\n##\n # Fill the alias.php file with the list of aliases\n #\nfunction fillAliases()\n{\n    echo \"-- Filling aliases.php...\"\n\n    indent='    '\n    aliases='CARRIAGERETURN'\n\n    for contract in ${contracts[@]}; do\n        aliases=\"${aliases}${indent}${newNamespace}/${contract}::class => ${oldNamespace}/${contract}::class,CARRIAGERETURN\"\n    done\n\n    for class in ${classes[@]}; do\n        aliases=\"${aliases}${indent}${newNamespace}/${class}::class => ${oldNamespace}/${class}::class,CARRIAGERETURN\"\n    done\n\n    for trait in ${traits[@]}; do\n        aliases=\"${aliases}${indent}${newNamespace}/${trait}::class => ${oldNamespace}/${trait}::class,CARRIAGERETURN\"\n    done\n\n    aliases=${aliases//\\//\\\\\\\\}\n\n    sed -i \"\" -e \"s|/\\*--- ALIASES ---\\*/|${aliases}|g\" $aliasFile\n    sed -i \"\" -e \"s|CARRIAGERETURN|\\\\${carriageReturn}|g\" $aliasFile\n}\n\n##\n # Copy tests to our tests dir\n #\nfunction getCurrentVersionFromGitHub()\n{\n    echo Getting current version from $repository...\n\n    if [ -z \"$requestedVersion\" ]; then\n        collectionVersion=$(git ls-remote $repository --tags  v9.5\\* | grep tags/ | grep -v {} | cut -d \\/ -f 3 | cut -d v -f 2  | grep -v RC | grep -vi beta | sort -t. -k 1,1n -k 2,2n -k 3,3n| tail -1)\n    else\n        collectionVersion=$requestedVersion\n    fi\n\n    echo Upgrading to $vendor/$project $collectionVersion\n}\n\n##\n # Download tests to tests dir\n #\nfunction downloadTests()\n{\n    echo \"-- Copying tests...\"\n\n    for test in ${tests[@]}; do\n        echo \"---- Downloading test ${testsBaseUrl}/${test} to ${testsDir}/${test}...\"\n\n        mkdir -p $(dirname ${testsDir}/${test})\n\n        wget ${testsBaseUrl}/${test} -O ${testsDir}/${test} >/dev/null 2>&1\n    done\n}\n\n##\n # Copy support files for tests\n #\nfunction copyTestSupportClasses()\n{\n    echo \"-- Copying support files for tests...\"\n    testSupportDirectory='./tests/files'\n\n    for class in ${testSupportClasses[@]}; do\n        echo \"Copying ${oldNamespaceDir}/${class}...\"\n\n        mkdir -p $(dirname $testSupportDirectory/$class)\n\n        cp ${oldNamespaceDir}/${class}.php ${testSupportDirectory}/$class.php\n\n        chmod 644 ${testSupportDirectory}/${class}.php\n    done\n\n    for class in ${testSupportClassesInExtractedCollections[@]}; do\n        echo \"Copying ${oldNamespaceDir}/${class} (from extracted Collections)...\"\n\n        mkdir -p $(dirname $testSupportDirectory/$class)\n\n        # Extract these classes from Illuminate/Collections, even though they end up in\n        # the Illuminate/Support namespace\n        movedClassFilename=${class/Support/Collections}\n\n        cp ${oldNamespaceDir}/${movedClassFilename}.php ${testSupportDirectory}/$class.php\n\n        chmod 644 ${testSupportDirectory}/${class}.php\n    done\n\n    # @todo: do this more cleanly\n    find ./tests/files -name \"*.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support|/\\*--- OLDNAMESPACE ---\\*/\\\\\\Support|g\" {} \\;\n}\n\n##\n # Rename namespace on all files\n #\nfunction renameNamespace()\n{\n    echo \"-- Renaming namespace from $oldNamespace to $newNamespace...\"\n\n    find ${newNamespaceDir} -name \"*.php\" -exec sed -i \"\" -e \"s|${oldNamespace}|${newNamespace}|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|${oldNamespace}|${newNamespace}|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|/\\*--- OLDNAMESPACE ---\\*/|${oldNamespace}|g\" {} \\;\n    find ${newNamespaceDir} -name \"*.php\" -exec sed -i \"\" -e \"s|/\\*--- OLDNAMESPACE ---\\*/|${oldNamespace}|g\" {} \\;\n\n    # rename the namespaces of Conditional\n    find ${newNamespaceDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Support\\\\\\HigherOrderWhenProxy|Conditionable\\\\\\HigherOrderWhenProxy|g\" {} \\;\n    find ${newNamespaceDir} -name \"HigherOrderWhenProxy.php\" -exec sed -i \"\" -e \"s|Tightenco\\\\\\Collect\\\\\\Support|Tightenco\\\\\\Collect\\\\\\Conditionable|g\" {} \\;\n\n    echo \"-- Expand the alias for Stringable to check for Illuminate, not Tightenco, Stringable\"\n\n    find ${newNamespaceDir} -name \"*.php\" -exec sed -i \"\" -e \"s|instanceof\\ Stringable|instanceof\\ \\\\\\Illuminate\\\\\\Support\\\\\\Stringable|g\" {} \\;\n\n    echo \"-- Reigning the renaming back in; bringing Carbon, HtmlString, Str back to Illuminate/Support\"\n\n    # @todo: do this more cleanly\n    # Just in tests, fix namespaces for classes that are no longer provided in collections as of 8.0+ Illuminate\\Support\\Traits\\Macroable, etc\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Tightenco\\\\\\Collect\\\\\\Support\\\\\\Carbon|Illuminate\\\\\\Support\\\\\\Carbon|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Tightenco\\\\\\Collect\\\\\\Support\\\\\\HtmlString|Illuminate\\\\\\Support\\\\\\HtmlString|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Tightenco\\\\\\Collect\\\\\\Support\\\\\\Str|Illuminate\\\\\\Support\\\\\\Str|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support\\\\\\Traits\\\\\\Conditionable|Tightenco\\\\\\Collect\\\\\\Support\\\\\\Traits\\\\\\Conditionable|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support\\\\\\Traits\\\\\\Macroable|Tightenco\\\\\\Collect\\\\\\Support\\\\\\Traits\\\\\\Macroable|g\" {} \\;\n    find ${testsDir} -name \"*.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support\\\\\\Traits\\\\\\Tappable|Tightenco\\\\\\Collect\\\\\\Support\\\\\\Traits\\\\\\Tappable|g\" {} \\;\n\n    find ${testSupportDirectory} -name \"HigherOrderTapProxy.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support|Tightenco\\\\\\Collect\\\\\\Support|g\" {} \\;\n    find ${testSupportDirectory} -name \"ItemNotFoundException.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support|Tightenco\\\\\\Collect\\\\\\Support|g\" {} \\;\n    find ${testSupportDirectory} -name \"MultipleItemsFoundException.php\" -exec sed -i \"\" -e \"s|Illuminate\\\\\\Support|Tightenco\\\\\\Collect\\\\\\Support|g\" {} \\;\n}\n\n##\n # Clean up dir\n #\nfunction cleanupDir()\n{\n    echo \"-- Cleaning up ${repositoryDir}...\"\n\n    rm -rf ${repositoryDir}\n}\n\n##\n # Run tests\n #\nfunction runTests()\n{\n    echo \"-- Running tests...\"\n\n    if [ -f ${rootDir}/composer.lock ]; then\n        rm ${rootDir}/composer.lock\n    fi\n\n    if [ -d ${rootDir}/vendor ]; then\n        rm -rf ${rootDir}/vendor\n    fi\n\n    composer install\n\n    vendor/bin/phpunit\n}\n\n##\n # Handle command errors\n #\nfunction handleErrors()\n{\n    if [[ $? -ne 0 ]]; then\n        echo \"FATAL ERROR occurred during command execution:\"\n        cat ${logFile}\n        exit 1\n    fi\n}\n\n##\n # Run the app\n #\nmain $@\n"
        }
      ]
    }
  ]
}