{
  "metadata": {
    "timestamp": 1736712163178,
    "page": 810,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KnpLabs/KnpMenu",
      "stars": 1391,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.322265625,
          "content": ".gitattributes     export-ignore\n.github            export-ignore\n.gitignore         export-ignore\n.php-cs-fixer.*    export-ignore\nCODE_OF_CONDUCT.md export-ignore\nphpstan*.neon      export-ignore\nphpunit.xml.dist   export-ignore\nREADME.markdown    export-ignore\ntests              export-ignore\ndoc                export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": "/.*.cache\n/phpunit.xml\n/vendor/\n/composer.lock\n/composer.phar\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 0.572265625,
          "content": "<?php\n// see https://github.com/FriendsOfPHP/PHP-CS-Fixer\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in([__DIR__.'/src', __DIR__.'/tests'])\n;\n\nreturn (new PhpCsFixer\\Config())\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        '@PHP80Migration:risky' => true,\n        '@PHPUnit84Migration:risky' => true,\n        'ordered_imports' => true,\n        'declare_strict_types' => false,\n        'native_function_invocation' => ['include' => ['@internal']],\n        'phpdoc_summary' => false,\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.4560546875,
          "content": "## 3.5 (2024-03-23)\n\n* Added CallbackVoter\n* Removed support for unsupported PHP version 8.0\n\n## 3.4 (2023-05-17)\n\n* Removed support for unsupported PHP version 7.4\n\n## 3.3 (2021-10-28)\n\n* Added support for Symfony 6\n\n## 3.2 (2021-05-28)\n\n* Remove Symfony 6 deprecations\n* Enforce phpstan rules (max level)\n\n## 3.1 (2019-12-01)\n\n* Allowed Symfony 5 components\n* Removed support for unsupported Symfony versions (4.0 and 4.1)\n* Allowed Twig 3\n\n## 3.0 (2019-09-02)\n\n* Raised PHP requirements\n* [BC break] Enforced strong types on all interfaces and classes\n* [BC break] Removed deprecated features. Specifically, MenuFactory and MenuItem are not accepting a `null` name anymore\n\n## 2.4 (2019-07-29)\n\n* Fixed Twig deprecations\n* Switched to namespaced Twig\n* Fixed sprintf use\n\n## 2.3 (2017-11-18)\n\n* Deprecated the Silex 1 KnpMenuServiceProvider. Use the `knplabs/knp-menu-silex` package instead.\n* Fixed RouteVoter to also match on non-string request arguments like integers as long as both string representations are identical.\n* Add Symfony 4 support\n\n## 2.2 (2016-09-22)\n\n* Added a new function to twig: `knp_menu_get_current_item`\n\n## 2.1.1 (2016-01-08)\n\n* Made compatible with Symfony 3\n\n## 2.1.0 (2015-09-20)\n\n* Added a new function to twig: `knp_menu_get_breadcrumbs_array`\n* Added a new filter to twig: `knp_menu_as_string`\n* Added 2 new tests to twig: `knp_menu_current`, `knp_menu_ancestor`\n* Made the templates compatible with Twig 2\n* Add menu and renderer providers supporting any ArrayAccess implementations. The\n  Pimple-based providers (supporting only Pimple 1) are dperecated in favor of these\n  new providers.\n\n## 2.0.1 (2014-08-01)\n\n* Fixed voter conventions on RouteVoter\n\n## 2.0.0 (2014-07-18)\n\n* [BC break] Clean code and removed the BC layer\n\n## 2.0.0 beta 1 (2014-06-19)\n\n* [BC break] Added the new `Integration` namespace and removed the `Silex` one.\n* Added a new Voter based on regular expression: `Knp\\Menu\\Matcher\\Voter\\RegexVoter`\n\n## 2.0.0 alpha 2 (2014-05-01)\n\n* [BC break] Changed the TwigRenderer to accept a menu template only as a string\n* [BC break] Refactored the way of rendering twig templates. Every template should extends\n  the `knp_menu.html.twig` template.\n* Introduced extension points in the MenuFactory through `Knp\\Menu\\Factory\\ExtensionInterface`\n* [BC break compared to 2.0 alpha 1] The inheritance extension points introduced in alpha1 are\n  deprecated in favor of extensions and will be removed before the stable release.\n* `Knp\\Menu\\Silex\\RouterAwareFactory` is deprecated in favor of `Knp\\Menu\\Silex\\RoutingExtension`.\n* [BC break] Deprecated the methods `createFromArray` and `createFromNode` in the MenuFactory and\n  removed them from `Knp\\Menu\\FactoryInterface`. Use `Knp\\Menu\\Loader\\ArrayLoader` and\n  `Knp\\Menu\\Loader\\NodeLoader` instead.\n* [BC break] Deprecated the methods `moveToPosition`, `moveToFirstPosition`, `moveToLastPosition`,\n  `moveChildToPosition`, `callRecursively`, `toArray`, `getPathAsString` and `getBreadcrumbsArray`\n  in the MenuItem and removed them from `Knp\\Menu\\ItemInterface`. Use `Knp\\Menu\\Util\\MenuManipulator`\n  instead.\n* Made the RouterVoter compatible with SensioFrameworkExtraBundle param converters\n* Added the possibility to match routes using a regex on their name in the RouterVoter\n* [BC break compared to 2.0 alpha 1] Refactored the RouterVoter to make it more flexible\n    The way to pass routes in the item extras has changed.\n\n    Before:\n\n    ```php\n    'extras' => array(\n        'routes' => array('foo', 'bar'),\n        'routeParameters' => array('foo' => array('id' => 4)),\n    )\n    ```\n\n    After:\n\n    ```php\n    'extras' => array(\n        'routes' => array(\n             array('route' => 'foo', 'parameters' => array('id' => 4)),\n            'bar',\n        )\n    )\n    ```\n\n    The old syntax is kept until the final release, but using it will trigger a E_USER_DEPRECATED error.\n\n## 2.0.0 alpha 1 (2013-06-23)\n\n* Added protected methods `buildOptions` and `configureItem` in the MenuFactory as extension point by inheritance\n* [BC break] Refactored the way to mark items as current\n  ``setCurrentUri``, ``getCurrentUri`` and ``getCurrentItem`` have been removed from the ItemInterface.\n  Determining the current items is now delegated to a matcher, and the default implementation\n  uses voters to apply the matching. Getting the current items can be done thanks to the CurrentItemFilterIterator.\n* [BC break] The signature of the CurrentItemFilterIterator constructor changed to accept the item matcher\n* [BC break] Changed the format of the breadcrumb array\n  Instead of storing the elements with the label as key and the uri as value\n  the array now stores an array of array elements with 3 keys: `label`, `uri` and `item`.\n\n## 1.1.2 (2012-06-10)\n\n* Updated the Silex service provider for the change in the interface\n\n## 1.1.1 (2012-05-17)\n\n* Added the children attributes and the extras in the array export\n\n## 1.1.0 (2012-05-17)\n\n* Marked `Knp\\Menu\\ItemInterface::getCurrentItem` as deprecated\n* Added a recursive filter iterator keeping only displayed items\n* Added a filter iterator keeping only current items\n* Added a recursive iterator for the item\n* Fixed building an array of breadcrumbs when a label has only digits\n* Added a way to mark a label as safe\n* Refactored the ListRenderer to be consistent with the TwigRenderer and provide the same extension points\n* Added a way to attach extra data to an item\n* Removed unnecessary optimization in the TwigRenderer\n* Added some whitespace control in the Twig template to ensure an empty rendering is really empty\n* [BC break] Use the childrenAttributes for the root instead of the attributes\n* Made the default options configurable for the TwigRenderer\n* Added the support for menu registered as factory in PimpleProvider\n* Added a way to use the options in `knp_menu_get()` in Twig templates\n* Added an array of options for the MenuProviderInterface\n* Added a template to render an ordered list\n* Refactored the template a bit to make it easier to use an ordered list\n* Allow omitting the name of the child in `fromArray` (the key is used instead)\n\n## 1.0.0 (2011-12-03)\n\n* Add composer.json file\n* Added more flexible list element blocks\n* Add support for attributes on the children collection.\n* Added a default renderer\n* Added a ChainProvider for the menus.\n* Added the Silex extension\n* Added a RouterAwareFactory\n* Added an helper to be able to reuse the logic more easily for other templating engines\n* Added a way to retrieve an item using a path in a menu tree\n* Changed the toArray method to use a depth instead of simply using a boolean flag\n* Refactored the export to array and the creation from an array\n* Added better support for encoding problems when escaping a string in the ListRenderer\n* Added a Twig renderer\n* Added missing escaping in the ListRenderer\n* Renamed some methods in the ItemInterface\n* Removed the configuration of the current item as link from the item\n* Refactored the ListRenderer to use options\n* Changed the interface of callRecursively\n* Refactored the NodeInterface to be consistent\n* Moved the creation of the item to the factory\n* Added a Twig extension to render the menu easily\n* Changed the menu provider interface with a pimple-based implementation\n* Added a renderer provider to get a renderer by name and a Pimple-based implementation\n* Removed the renderer from the menu\n* Removed the num in the item by refactoring isLast and isFirst\n* Changed the RendererInterface to accept an array of options to be more flexible\n* Added an ItemInterface\n* Initial import of KnpMenuBundle decoupled classes with a new namespace\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.6328125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\n## Contact\nIf you have any questions or feedback, [please ping us](https://twitter.com/KNPLabs) !\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "Copyright (c) 2011-present KnpLabs - https://knplabs.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 2.994140625,
          "content": "KnpMenu\n=======\n\nThe KnpMenu library provides object oriented menus for PHP.\nIt is used by the [KnpMenuBundle](https://github.com/KnpLabs/KnpMenuBundle) for Symfony\nbut can now be used stand-alone.\n\n[![Build Status](https://github.com/KnpLabs/KnpMenu/actions/workflows/build.yaml/badge.svg)](https://github.com/KnpLabs/KnpMenu/actions/workflows/build.yaml)\n[![Latest Stable Version](https://poser.pugx.org/knplabs/knp-menu/v/stable.svg)](https://packagist.org/packages/knplabs/knp-menu)\n[![Latest Unstable Version](https://poser.pugx.org/knplabs/knp-menu/v/unstable.svg)](https://packagist.org/packages/knplabs/knp-menu)\n[![Gitter chat](https://badges.gitter.im/KnpLabs/KnpMenu.svg)](https://gitter.im/KnpLabs/KnpMenu)\n\n## Installation\n\nKnpMenu uses Composer, please checkout the [composer website](https://getcomposer.org/) for more information.\n\nThe simple following command will install `knp-menu` into your project. It also add a new\nentry in your `composer.json` and update the `composer.lock` as well.\n\n```bash\ncomposer require knplabs/knp-menu\n```\n\n> KnpMenu follows the PSR-4 convention names for its classes, which means you can easily integrate `knp-menu` classes loading in your own autoloader.\n\n## Getting Started\n\n```php\n<?php\n\n// Include dependencies installed with composer\nrequire 'vendor/autoload.php';\n\nuse Knp\\Menu\\MenuFactory;\nuse Knp\\Menu\\Renderer\\ListRenderer;\n\n$factory = new MenuFactory();\n$menu = $factory->createItem('My menu');\n$menu->addChild('Home', ['uri' => '/']);\n$menu->addChild('Comments', ['uri' => '#comments']);\n$menu->addChild('Symfony', ['uri' => 'http://symfony.com/']);\n$menu->addChild('Happy Awesome Developers');\n\n$renderer = new ListRenderer(new \\Knp\\Menu\\Matcher\\Matcher());\necho $renderer->render($menu);\n```\n\nThe above menu would render the following HTML:\n\n```html\n<ul>\n  <li class=\"first\">\n    <a href=\"/\">Home</a>\n  </li>\n  <li class=\"current\">\n    <a href=\"#comments\">Comments</a>\n  </li>\n  <li>\n    <a href=\"http://symfony.com/\">Symfony</a>\n  </li>\n  <li class=\"last\">\n    <span>Happy Awesome Developers</span>\n  </li>\n</ul>\n```\n\nThis way you can finally avoid writing an ugly template to show the selected item,\nthe first and last items, submenus, ...\n\n> The bulk of the documentation can be found in the `doc` directory.\n\n## What now?\n\nFollow the tutorial in [`doc/01-Basic-Menus.md`][0] and [`doc/02-Twig-Integration.md`][1]\nto discover how KnpMenu will rock your world!\n\nFind all available documentation at [`doc/`][2].\n\n## Maintainers\n\nThis library is maintained by the following people (alphabetically sorted) :\n\n- [@derrabus][3]\n- [@garak][4]\n- [@stof][5]\n\n## Credits\n\nThis bundle was originally ported from [ioMenuPlugin](http://github.com/weaverryan/ioMenuPlugin),\na menu plugin for symfony1. It has since been developed by [KnpLabs](http://www.knplabs.com) and\nthe [Symfony community](https://github.com/KnpLabs/KnpMenu/graphs/contributors).\n\n[0]: doc/01-Basic-Menus.md\n[1]: doc/02-Twig-Integration.md\n[2]: doc/\n[3]: https://github.com/derrabus\n[4]: https://github.com/garak\n[5]: https://github.com/stof\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.4150390625,
          "content": "{\n    \"name\": \"knplabs/knp-menu\",\n    \"type\": \"library\",\n    \"description\": \"An object oriented menu library\",\n    \"keywords\": [\"menu\", \"tree\"],\n    \"homepage\": \"https://knplabs.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"KnpLabs\",\n            \"homepage\": \"https://knplabs.com\"\n        },\n        {\n            \"name\": \"Christophe Coevoet\",\n            \"email\": \"stof@notk.org\"\n        },\n        {\n            \"name\": \"The Community\",\n            \"homepage\": \"https://github.com/KnpLabs/KnpMenu/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\"\n    },\n    \"conflict\": {\n        \"twig/twig\": \"<1.42.3 || >=2,<2.9\"\n    },\n    \"require-dev\": {\n        \"phpstan/phpstan\": \"^1.10\",\n        \"phpunit/phpunit\": \"^9.6\",\n        \"psr/container\": \"^1.0 || ^2.0\",\n        \"symfony/http-foundation\": \"^5.4 || ^6.0 || ^7.0\",\n        \"symfony/phpunit-bridge\": \"^7.0\",\n        \"symfony/routing\": \"^5.4 || ^6.0 || ^7.0\",\n        \"twig/twig\": \"^2.16 || ^3.0\"\n    },\n    \"suggest\": {\n        \"twig/twig\": \"for the TwigRenderer and the integration with your templates\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Knp\\\\Menu\\\\\": \"src/Knp/Menu\" }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Knp\\\\Menu\\\\Tests\\\\\": \"tests/Knp/Menu/Tests\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 2.599609375,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Symfony\\\\\\\\Component\\\\\\\\HttpFoundation\\\\\\\\RequestStack\\\\:\\\\:getMasterRequest\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Matcher/Voter/RouteVoter.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between false and array\\\\<string, Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\> will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/MenuItem.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$path of method Knp\\\\\\\\Menu\\\\\\\\Twig\\\\\\\\Helper\\\\:\\\\:get\\\\(\\\\) expects array\\\\<int, string\\\\>, array\\\\<Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\> given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Twig/Helper.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Knp\\\\\\\\Menu\\\\\\\\Util\\\\\\\\MenuManipulator\\\\:\\\\:getBreadcrumbsArray\\\\(\\\\) should return array\\\\<int, array\\\\{label\\\\: string, uri\\\\: string\\\\|null, item\\\\: Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|null\\\\}\\\\> but returns array\\\\<int, array\\\\{label\\\\: string, uri\\\\: string\\\\|null, item\\\\: Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|null\\\\}\\\\|array\\\\{label\\\\: string, url\\\\: string\\\\|null, item\\\\: Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|null\\\\}\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Util/MenuManipulator.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Knp\\\\\\\\Menu\\\\\\\\Twig\\\\\\\\MenuExtension\\\\:\\\\:getBreadcrumbsArray\\\\(\\\\) has parameter \\\\$subItem with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Twig/MenuExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param for parameter \\\\$subItem with type array\\\\<int\\\\|string, array\\\\<string, Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|float\\\\|int\\\\|Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|string\\\\|Traversable\\\\<mixed, array\\\\<string, Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|float\\\\|int\\\\|Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\> is not subtype of native type array\\\\|string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Twig/MenuExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Knp\\\\\\\\Menu\\\\\\\\Twig\\\\\\\\MenuRuntimeExtension\\\\:\\\\:getBreadcrumbsArray\\\\(\\\\) has parameter \\\\$subItem with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Twig/MenuRuntimeExtension.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param for parameter \\\\$subItem with type array\\\\<int\\\\|string, array\\\\<string, Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|float\\\\|int\\\\|Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|string\\\\|Traversable\\\\<mixed, array\\\\<string, Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\>\\\\|float\\\\|int\\\\|Knp\\\\\\\\Menu\\\\\\\\ItemInterface\\\\|string\\\\|null\\\\> is not subtype of native type array\\\\|string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Knp/Menu/Twig/MenuRuntimeExtension.php\n\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.0859375,
          "content": "parameters:\n    level: 8\n    paths:\n        - src\nincludes:\n    - phpstan-baseline.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.4755859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit colors=\"true\" bootstrap=\"vendor/autoload.php\">\n    <testsuites>\n        <testsuite name=\"KnpMenu Test Suite\">\n            <directory suffix=\"Test.php\">./tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./src</directory>\n        </include>\n    </coverage>\n\n    <listeners>\n        <listener class=\"Symfony\\Bridge\\PhpUnit\\SymfonyTestsListener\"/>\n    </listeners>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}