{
  "metadata": {
    "timestamp": 1736712048961,
    "page": 573,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KnpLabs/KnpPaginatorBundle",
      "stars": 1769,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2744140625,
          "content": ".gitattributes   export-ignore\n.github          export-ignore\n.gitignore       export-ignore\n.php-cs-fixer.*  export-ignore\nCODE_OF_CONDUCT.md export-ignore\nCONTRIBUTING.md  export-ignore\nphpstan*.neon    export-ignore\nphpunit.xml.dist export-ignore\ntests            export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03125,
          "content": ".*.cache\ncomposer.lock\nvendor/*\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 0.6484375,
          "content": "<?php\n// see https://github.com/FriendsOfPHP/PHP-CS-Fixer\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in([__DIR__.'/src', __DIR__.'/tests'])\n;\n\nreturn (new PhpCsFixer\\Config())\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n        '@Symfony:risky' => true,\n        '@PHP80Migration:risky' => true,\n        '@PHP81Migration' => true,\n        '@PHPUnit100Migration:risky' => true,\n        'ordered_imports' => true,\n        'declare_strict_types' => false,\n        'native_function_invocation' => ['include' => ['@all']],\n        'final_class' => true,\n        'php_unit_mock_short_will_return' => true,\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.6298828125,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language \n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks \n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\n## Contact\nIf you have any questions or feedback, [please ping us](https://twitter.com/KNPLabs) !\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.048828125,
          "content": "\n# Thanks for contributing!\n\n:+1: First of all, thanks for contributing! The team is happy to help if you have any questions. Have a look to this contributing guide and also to the\n[ReadMe][ReadMe]. :feet:\nThe following is a set of guidelines for contributing to KNPPaginatorBundle, which is hosted by the [KNP Labs Organization][KNPLink] on GitHub. These are\nmostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document opening a pull request. :shipit:\n\n## Code of Conduct\n\nThis project and everyone participating in it is governed by the following [Code of Conduct][CodeofConduct]. By participating, you are expected to uphold this code.\n\n## Reporting a bug\n\n#### Before submitting a bug\n- Verify that you are using the latest KNPPaginatorBundle version;\n- Double-check the [documentation][ReadMe] to see if you're not misusing the library;\n- Check if the issue has already been reported. If it has and the issue is still open, add a comment to the existing issue instead of opening a new one.\n\n#### How to submit a (good) bug report\nTo report a KNPPaginatorBundle bug please open a [GitHub issue][GitHub-issue] following the rules below.\n\n- Use a clear and descriptive title for the issue to identify the problem;\n- Describe the steps needed to reproduce the bug including a code example when possible;\n- Give as much detail as possible about your environment (OS, PHP version, KNPPaginatorBundle configuration, ...);\n\n## Suggesting enhancements\n\nTo suggest KNPPaginatorBundle enhancements please open a [GitHub issue][GitHub-issue] following the rules below.\n\n- Use a clear and descriptive title for the issue to identify the problem;\n- Provide a step-by-step description of the suggested enhancement in as many details as possible;\n- Explain why this enhancement would be useful with one or more use cases;\n\n## Contributing to the code\n\nA pull request, is the best way to provide a bug fix or to propose enhancements to KNPPaginatorBundle.\n\nWhen submitting a pull request please be sure to follow the same rules described above in [Reporting a bug](#reporting-a-bug) and [Suggesting enhancements](#suggesting-enhancements)\nsections depending on the nature of your change.\n\n> Before starting to work on a large change please open an issue to ask the maintainers if they are fine with it (no one likes to work for nothing!).\n\n1. Fork the repository\n2. Once the repository has been forked clone it locally\n```\ngit clone git@github.com:USERNAME/KnpPaginatorBundle.git\n```\n3. Create a new branch\n```\ngit checkout -b BRANCH_NAME master\n```\n4. Code!!!\n5. Add/Update tests (if needed)\n6. Update documentation (if needed)\n7. Run the tests and make sure that they are passing\n```\ncomposer test\n```\n8. Squash your commits\n9. Rebase your branch on master and fix merge conflicts\n10. Open the pull request\n\n[GitHub-issue]: https://github.com/KnpLabs/KnpPaginatorBundle/issues\n[ReadMe]: https://github.com/KnpLabs/KnpPaginatorBundle/blob/master/README.md\n[KNPLink]: https://github.com/KnpLabs\n[CodeofConduct]: https://github.com/KnpLabs/KnpPaginatorBundle/blob/master/CODE_OF_CONDUCT.md\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0263671875,
          "content": "Copyright (c) 2011 Knplabs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.216796875,
          "content": "# Intro to KnpPaginatorBundle\n\nFriendly Symfony paginator to paginate everything\n\n[![Build Status](https://github.com/KnpLabs/KnpPaginatorBundle/workflows/Build/badge.svg)](https://github.com/KnpLabs/KnpPaginatorBundle/actions)\n\nGenerally this bundle is based on [Knp Pager component][knp_component_pager]. This\ncomponent introduces a different way of pagination handling. You can read more about the\ninternal logic on the given documentation link.\n\n**Note:** Keep **knp-components** in sync with this bundle. If you want to use\nolder version of KnpPaginatorBundle - use **v3.0** or **v4.X** tags in the repository which is\nsuitable to paginate **ODM MongoDB** and **ORM 2.0** queries\n\n## Latest updates\n\nFor details regarding changes please read about the [releases](https://github.com/KnpLabs/KnpPaginatorBundle/releases).\n\n## Requirements:\n\n- Knp Pager component `>=4.4`.\n- KnpPaginatorBundle's master is compatible with Symfony `>=6.4` versions.\n- Twig `>=3.0` version is required if you use the Twig templating engine.\n\n## Features:\n\n- Does not require initializing specific adapters.\n- Can be customized in any way needed, etc.: pagination view, event subscribers.\n- Possibility to add custom filtering, sorting functionality depending on request parameters.\n- Separation of concerns, paginator is responsible for generating the pagination view only,\n  pagination view - for representation purposes.\n\n**Note:** using multiple paginators requires setting the **alias** in order to keep non\nconflicting parameters.\n\n## More detailed documentation:\n\n- Creating [custom pagination subscribers][doc_custom_pagination_subscriber]\n- [Customizing view][doc_templates] templates and arguments\n\n## Installation and configuration:\n\n### Pretty simple with [Composer](https://packagist.org), run\n\n```sh\ncomposer require knplabs/knp-paginator-bundle\n```\n\n### Add PaginatorBundle to your application kernel\n\nIf you don't use flex (you should), you need to manually enable bundle:\n\n```php\n// app/AppKernel.php\npublic function registerBundles()\n{\n    return [\n        // ...\n        new Knp\\Bundle\\PaginatorBundle\\KnpPaginatorBundle(),\n        // ...\n    ];\n}\n```\n\n<a name=\"configuration\"></a>\n\n### Configuration example\n\nYou can configure default query parameter names and templates, and a few other options:\n\n#### YAML:\n```yaml\nknp_paginator:\n    convert_exception: false            # throw a 404 exception when an invalid page is requested\n    page_range: 5                       # number of links shown in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)\n    remove_first_page_param: false      # remove the page query parameter from the first page link\n    default_options:\n        page_name: page                 # page query parameter name\n        sort_field_name: sort           # sort field query parameter name\n        sort_direction_name: direction  # sort direction query parameter name\n        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements\n        filter_field_name: filterField  # filter field query parameter name\n        filter_value_name: filterValue  # filter value query parameter name\n        page_out_of_range: ignore       # ignore, fix, or throwException when the page is out of range\n        default_limit: 10               # default number of items per page\n    template:\n        pagination: '@KnpPaginator/Pagination/sliding.html.twig'     # sliding pagination controls template\n        rel_links: '@KnpPaginator/Pagination/rel_links.html.twig'    # <link rel=...> tags template\n        sortable: '@KnpPaginator/Pagination/sortable_link.html.twig' # sort link template\n        filtration: '@KnpPaginator/Pagination/filtration.html.twig'  # filters template\n```\n#### PHP:\n```php\n// config/packages/paginator.php\n\n<?php declare(strict_types=1);\n\nuse Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;\n\nreturn static function (ContainerConfigurator $configurator): void\n{\n    $configurator->extension('knp_paginator', [\n        'convert_exception' => false,             // throw a 404 exception when an invalid page is requested\n        'page_range' => 5,                        // number of links shown in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links\n        'remove_first_page_param' => false,       // remove the page query parameter from the first page link\n        'default_options' => [\n            'page_name' => 'page',                // page query parameter name\n            'sort_field_name' => 'sort',          // sort field query parameter name\n            'sort_direction_name' => 'direction', // sort direction query parameter name\n            'distinct' => true,                   // ensure distinct results, useful when ORM queries are using GROUP BY statements\n            'filter_field_name' => 'filterField', // filter field query parameter name\n            'filter_value_name' => 'filterValue'  // filter value query parameter name\n            'page_out_of_range' => 'ignore',      // ignore, fix, or throwException when the page is out of range\n            'default_limit' => 10                 // default number of items per page\n        ],\n        'template' => [\n            'pagination' => '@KnpPaginator/Pagination/sliding.html.twig',     // sliding pagination controls template\n            'rel_links' => '@KnpPaginator/Pagination/rel_links.html.twig',    // <link rel=...> tags template\n            'sortable' => '@KnpPaginator/Pagination/sortable_link.html.twig', // sort link template\n            'filtration' => '@KnpPaginator/Pagination/filtration.html.twig'   // filters template\n        ]\n    ]);\n};\n```\n\n#### Additional pagination templates\nThat could be used out of the box in `knp_paginator.template.pagination` key:\n\n* `@KnpPaginator/Pagination/sliding.html.twig` (by default)\n* `@KnpPaginator/Pagination/bootstrap_v5_pagination.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v3_pagination.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_pagination.html.twig`\n* `@KnpPaginator/Pagination/foundation_v6_pagination.html.twig`\n* `@KnpPaginator/Pagination/foundation_v5_pagination.html.twig`\n* `@KnpPaginator/Pagination/bulma_pagination.html.twig`\n* `@KnpPaginator/Pagination/semantic_ui_pagination.html.twig`\n* `@KnpPaginator/Pagination/materialize_pagination.html.twig`\n* `@KnpPaginator/Pagination/tailwindcss_pagination.html.twig`\n* `@KnpPaginator/Pagination/uikit_v3_pagination.html.twig`\n\n#### Sample rel link tag template\nThat could be used out of the box in `knp_paginator.template.rel_links` key:\n\n* `@KnpPaginator/Pagination/rel_links.html.twig` (by default)\n\n#### Additional sortable templates\nThat could be used out of the box in `knp_paginator.template.sortable` key:\n\n* `@KnpPaginator/Pagination/sortable_link.html.twig` (by default)\n* `@KnpPaginator/Pagination/bootstrap_v5_bi_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/bootstrap_v5_fa_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/bootstrap_v5_md_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v3_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v4_font_awesome_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v4_material_design_icons_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/semantic_ui_sortable_link.html.twig`\n* `@KnpPaginator/Pagination/uikit_v3_sortable.html.twig`\n\n#### Additional filtration templates\nThat could be used out of the box in `knp_paginator.template.filtration` key:\n\n* `@KnpPaginator/Pagination/filtration.html.twig` (by default)\n* `@KnpPaginator/Pagination/bootstrap_v5_filtration.html.twig`\n* `@KnpPaginator/Pagination/twitter_bootstrap_v4_filtration.html.twig`\n\n## Usage examples:\n\n### Controller\n\nCurrently paginator can paginate:\n\n- `array`\n- `Doctrine\\DBAL\\Query\\QueryBuilder`\n- `Doctrine\\ORM\\Query`\n- `Doctrine\\ORM\\QueryBuilder`\n- `Doctrine\\ODM\\MongoDB\\Query\\Query`\n- `Doctrine\\ODM\\MongoDB\\Query\\Builder`\n- `Doctrine\\ODM\\PHPCR\\Query\\Query`\n- `Doctrine\\ODM\\PHPCR\\Query\\Builder\\QueryBuilder`\n- `Doctrine\\Common\\Collection\\ArrayCollection` - any Doctrine relation collection including\n- `ModelCriteria` - Propel ORM query\n- array with `Solarium_Client` and `Solarium_Query_Select` as elements\n\n```php\n// App\\Controller\\ArticleController.php\n\npublic function listAction(EntityManagerInterface $em, PaginatorInterface $paginator, Request $request)\n{\n    $dql   = \"SELECT a FROM AcmeMainBundle:Article a\";\n    $query = $em->createQuery($dql);\n\n    $pagination = $paginator->paginate(\n        $query, /* query NOT result */\n        $request->query->getInt('page', 1), /* page number */\n        10 /* limit per page */\n    );\n\n    // parameters to template\n    return $this->render('article/list.html.twig', ['pagination' => $pagination]);\n}\n```\n\n### View\n\n#### In `<head>`:\n\n```twig\n{# rel links for pagination #}\n{{ knp_pagination_rel_links(pagination) }}\n```\n\n#### In `<body>`:\n\n```twig\n{# total items count #}\n<div class=\"count\">\n    {{ pagination.getTotalItemCount }}\n</div>\n<table>\n    <tr>\n        {# sorting of properties based on query components #}\n        <th>{{ knp_pagination_sortable(pagination, 'Id', 'a.id') }}</th>\n        <th{% if pagination.isSorted('a.title') %} class=\"sorted\"{% endif %}>\n            {{ knp_pagination_sortable(pagination, 'Title', 'a.title') }}\n        </th>\n        <th{% if pagination.isSorted(['a.date', 'a.time']) %} class=\"sorted\"{% endif %}>\n            {{ knp_pagination_sortable(pagination, 'Release', ['a.date', 'a.time']) }}\n        </th>\n    </tr>\n\n    {# table body #}\n    {% for article in pagination %}\n        <tr {% if loop.index is odd %}class=\"color\"{% endif %}>\n            <td>{{ article.id }}</td>\n            <td>{{ article.title }}</td>\n            <td>{{ article.date | date('Y-m-d') }}, {{ article.time | date('H:i:s') }}</td>\n        </tr>\n    {% endfor %}\n</table>\n{# display navigation #}\n<div class=\"navigation\">\n    {{ knp_pagination_render(pagination) }}\n</div>\n```\n\n### Translation in view\nFor translating the following text:\n* `%foo% name` with translation key `table_header_name`. The translation is in the domain `messages`.\n* `{0} No author|{1} Author|[2,Inf] Authors` with translation key `table_header_author`. The translation is in the domain `messages`.\n\ntranslationCount and translationParameters can be combined.\n\n```twig\n<table>\n    <tr>\n       {# sorting of properties based on query components #}\n       <th>{{ knp_pagination_sortable(pagination, 'Id'|trans({foo:'bar'},'messages'), 'a.id' )|raw }}</th>\n       <th{% if pagination.isSorted('a.Title') %} class=\"sorted\"{% endif %}>{{ knp_pagination_sortable(pagination, 'Title', 'a.title')|raw }}</th>\n       <th>{{ knp_pagination_sortable(pagination, 'Author'|trans({}, 'messages'), 'a.author' )|raw }}</th>\n    </tr>\n\n    <!-- Content of the table -->\n</table>\n```\n\n### Adding translation files\nYou can also override translations by creating a translation file in the following name format: `domain.locale.format`.\nSo, to create a translation file for this bundle you need to create for instance `KnpPaginatorBundle.tr.yaml` file under `project_root/translations/`\nand add your translations there:\n```yaml\nlabel_previous: \"Önceki\"\nlabel_next: \"Sonraki\"\nfilter_searchword: \"Arama kelimesi\"\n```\nIf you set default translation for configuration accordingly:\n```yaml\nframework:\n    default_locale: tr\n```\nSymfony will pick it automatically.\n\n### Dependency Injection\n\nYou can automatically inject a paginator service into another service by using the `knp_paginator.injectable` DIC tag.\nThe tag takes one optional argument `paginator`, which is the ID of the paginator service that should be injected.\nIt defaults to `knp_paginator`.\n\nThe class that receives the KnpPaginator service must implement `Knp\\Bundle\\PaginatorBundle\\Definition\\PaginatorAwareInterface`.\nIf you're too lazy you can also just extend the `Knp\\Bundle\\PaginatorBundle\\Definition\\PaginatorAware` base class.\n\n> **⚠ Warning** using `PaginatorAwareInterface` is discouraged, and could be removed in a future version. You should not rely on setter\n> injection, but only on proper constructor injection. Using Symfony built-in autowiring mechanism is the suggested way to go.\n\n#### Lazy service\n\nThe `knp_paginator` service will be created lazily if the package `symfony/proxy-manager-bridge` is installed.\n\nFor more information about lazy services, consult the [Symfony documentation on dependency injection](https://symfony.com/doc/current/service_container/lazy_services.html).\n\n###### XML configuration example\n\n```xml\n<?xml version=\"1.0\" ?>\n\n<container xmlns=\"http://symfony.com/schema/dic/services\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd\">\n\n    <parameters>\n        <parameter key=\"my_bundle.paginator_aware.class\">MyBundle\\Repository\\PaginatorAwareRepository</parameter>\n    </parameters>\n\n    <services>\n        <service id=\"my_bundle.paginator_aware\" class=\"my_bundle.paginator_aware.class\">\n            <tag name=\"knp_paginator.injectable\" paginator=\"knp_paginator\" />\n        </service>\n    </services>\n</container>\n```\n\n[knp_component_pager]: https://github.com/KnpLabs/knp-components/blob/master/docs/pager/intro.md \"Knp Pager component introduction\"\n[doc_custom_pagination_subscriber]: https://github.com/KnpLabs/KnpPaginatorBundle/tree/master/docs/custom_pagination_subscribers.md \"Custom pagination subscribers\"\n[doc_templates]: https://github.com/KnpLabs/KnpPaginatorBundle/tree/master/docs/templates.md \"Customizing Pagination templates\"\n\n## Troubleshooting\n\n- Make sure the translator is activated in your Symfony config:\n\n```yaml\nframework:\n    translator: { fallbacks: ['%locale%'] }\n```\n\n- If your locale is not available, create your own translation file in\n  `translations/KnpPaginatorBundle.en.yml` (substitute \"en\" for your own language code if needed).\n  Then add these lines:\n\n```yaml\nlabel_next: Next\nlabel_previous: Previous\n```\n\n- Note that `<rel>` links are only meaningful when using pagination, they are not relevant to sorting or filtering.\n\n## Maintainers\n\nPlease read [this post](https://knplabs.com/en/blog/news-for-our-foss-projects-maintenance) first.\n\nThis library is maintained by the following people (alphabetically sorted) :\n- @garak\n- @polc\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.591796875,
          "content": "{\n    \"name\": \"knplabs/knp-paginator-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"Paginator bundle for Symfony to automate pagination and simplify sorting and other features\",\n    \"keywords\": [\"pager\", \"paginator\", \"pagination\", \"symfony\", \"bundle\", \"knp\", \"knplabs\"],\n    \"homepage\": \"https://github.com/KnpLabs/KnpPaginatorBundle\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"KnpLabs Team\",\n            \"homepage\": \"https://knplabs.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://github.com/KnpLabs/KnpPaginatorBundle/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"knplabs/knp-components\": \"^4.4 || ^5.0\",\n        \"symfony/config\": \"^6.4 || ^7.0\",\n        \"symfony/dependency-injection\": \"^6.4 || ^7.0\",\n        \"symfony/event-dispatcher\": \"^6.4 || ^7.0\",\n        \"symfony/http-foundation\": \"^6.4 || ^7.0\",\n        \"symfony/http-kernel\": \"^6.4 || ^7.0\",\n        \"symfony/routing\": \"^6.4 || ^7.0\",\n        \"symfony/translation\": \"^6.4 || ^7.0\",\n        \"twig/twig\": \"^3.0\"\n    },\n    \"require-dev\": {\n        \"phpstan/phpstan\": \"^1.11\",\n        \"phpunit/phpunit\": \"^10.5 || ^11.3\",\n        \"symfony/expression-language\": \"^6.4 || ^7.0\",\n        \"symfony/templating\": \"^6.4 || ^7.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Knp\\\\Bundle\\\\PaginatorBundle\\\\\": \"src\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"6.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 1.2314453125,
          "content": "parameters:\n\tignoreErrors:\n\n\t\t-\n\t\t\tmessage: \"#^Property Knp\\\\\\\\Bundle\\\\\\\\PaginatorBundle\\\\\\\\Subscriber\\\\\\\\SlidingPaginationSubscriber\\\\:\\\\:\\\\$params \\\\(array\\\\<string, mixed\\\\>\\\\) does not accept array\\\\<int\\\\|string, mixed\\\\>\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Subscriber/SlidingPaginationSubscriber.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Symfony\\\\\\\\Component\\\\\\\\Config\\\\\\\\Definition\\\\\\\\Builder\\\\\\\\NodeDefinition\\\\:\\\\:addDefaultsIfNotSet\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/DependencyInjection/Configuration.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of method Symfony\\\\\\\\Component\\\\\\\\Routing\\\\\\\\Generator\\\\\\\\UrlGeneratorInterface\\\\:\\\\:generate\\\\(\\\\) expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Helper/Processor.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of method Symfony\\\\\\\\Component\\\\\\\\Templating\\\\\\\\PhpEngine\\\\:\\\\:render\\\\(\\\\) expects string\\\\|Symfony\\\\\\\\Component\\\\\\\\Templating\\\\\\\\TemplateReferenceInterface, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 3\n\t\t\tpath: src/Templating/PaginationHelper.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$name of method Twig\\\\\\\\Environment\\\\:\\\\:render\\\\(\\\\) expects string\\\\|Twig\\\\\\\\TemplateWrapper, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Twig/Extension/PaginationRuntime.php\n\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.0859375,
          "content": "parameters:\n    level: 8\n    paths:\n        - src\nincludes:\n    - phpstan-baseline.neon\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.275390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit colors=\"true\" bootstrap=\"vendor/autoload.php\">\n    <testsuites>\n        <testsuite name=\"KnpPaginatorBundle Test Suite\">\n            <directory suffix=\"Test.php\">./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}