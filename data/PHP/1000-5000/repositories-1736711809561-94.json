{
  "metadata": {
    "timestamp": 1736711809561,
    "page": 94,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hhxsv5/laravel-s",
      "stars": 3847,
      "defaultBranch": "PHP-8.x",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "vendor\n.idea\ncomposer.lock\n*.sw[a-z]\ncoverage"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.6171875,
          "content": "checks:\n  php: true\nfilter:\n  excluded_paths:\n    - tests/*\nbuild:\n  environment:\n    php: 8.2.0\n  nodes:\n    analysis:\n      tests:\n        override:\n          - php-scrutinizer-run\n          - phpcs-run src/*\n    my-tests:\n      environment:\n        php:\n          version: 8.2.0\n          pecl_extensions:\n            - swoole-4.8.13\n      dependencies:\n        before:\n          - composer install\n      tests:\n        override:\n          - composer test\n    coverage:\n      tests:\n        override:\n          - command: composer test\n            coverage:\n              file: coverage/coverage.xml\n              format: clover\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2998046875,
          "content": "language: php\n\nphp:\n  - 7.4\n  - 8.0\n  - 8.1\n  - 8.2\n  - 8.3\n\nbefore_script:\n  - pecl install --onlyreqdeps --nobuild swoole && cd \"$(pecl config-get temp_dir)/swoole\" && phpize && ./configure --enable-openssl && make -j$(nproc) && make -j$(nproc) install && cd -\n  - composer install\n\nscript: composer test\n"
        },
        {
          "name": "KnownIssues-CN.md",
          "type": "blob",
          "size": 8.4599609375,
          "content": "# 常见问题\n\n## Class swoole does not exist\n- 在`LaravelS`中，`Swoole`是以`cli`模式启动的`Http Server`，替代了`FPM`。\n- 投递任务、触发异步事件都会调用`app('swoole')`，从`Laravel容器`中获取`Swoole\\http\\server`实例。只有在`LaravelS`启动时，才会注入这个实例到容器中。\n- 所以，一旦脱离`LaravelS`，由于跨进程，以下情况，你将`无法`成功调用`app('swoole')`：\n    - 以各种`命令行`方式运行的代码，例如Artisan命令行、PHP脚本命令行；\n    - 运行在`FPM`/`Apache PHP Module`下的代码，查看SAPI `Log::info('PHP SAPI', [php_sapi_name()]);`。\n\n## 使用包 [encore/laravel-admin](https://github.com/z-song/laravel-admin)\n> 修改`config/laravels.php`，在`cleaners`中增加`LaravelAdminCleaner`。\n\n```php\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\LaravelAdminCleaner::class,\n],\n```\n\n## 使用包 [jenssegers/agent](https://github.com/jenssegers/agent)\n> [监听系统事件](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E7%B3%BB%E7%BB%9F%E4%BA%8B%E4%BB%B6)\n\n```php\n// 重置Agent\n\\Event::listen('laravels.received_request', function (\\Illuminate\\Http\\Request $req, $app) {\n    $app->agent->setHttpHeaders($req->server->all());\n    $app->agent->setUserAgent();\n});\n```\n\n## 使用包 [barryvdh/laravel-debugbar](https://github.com/barryvdh/laravel-debugbar)\n> 官方不支持`cli`模式，需通过修改环境变量`APP_RUNNING_IN_CONSOLE`为非`cli`，但启用后不排除会有其他问题。\n\n`.env`中增加环境变量`APP_RUNNING_IN_CONSOLE=false`。\n\n## 使用包 [the-control-group/voyager](https://github.com/the-control-group/voyager)\n> `voyager`依赖包[arrilot/laravel-widgets](https://github.com/arrilot/laravel-widgets)，而其中`WidgetGroupCollection`是单例，[追加Widget](https://github.com/arrilot/laravel-widgets/blob/master/src/WidgetGroup.php#L270)会造成它们重复展示，通过重新注册ServiceProvider来重置此单例。\n\n```php\n// config/laravels.php\n'register_providers' => [\n    Arrilot\\Widgets\\ServiceProvider::class,\n],\n```\n\n## 使用包 [overtrue/wechat](https://github.com/overtrue/wechat)\n> easywechat包会出现异步通知回调失败的问题，原因是`$app['request']->getContent()`是空的，给其赋值即可。\n\n```php\n//回调通知\npublic function notify(Request $request)\n{\n    $app = $this->getPayment();//获取支付实例\n    $app['request'] = $request;//在原有代码添加这一行，将当前Request赋值给$app['request']\n    $response = $app->handlePaidNotify(function ($message, $fail) use($id) {\n        //...\n    });\n    return $response;\n}\n```\n\n\n## 使用包 [laracasts/flash](https://github.com/laracasts/flash)\n> 常驻内存后，每次调用flash()会追加消息提醒，导致叠加展示消息提醒。有以下两个方案。\n\n1.通过中间件在每次请求`处理前`或`处理后`重置$messages `app('flash')->clear();`。\n\n2.每次请求处理后重新注册`FlashServiceProvider`，配置[register_providers](https://github.com/hhxsv5/laravel-s/blob/master/Settings-CN.md)。\n\n## 使用包 [laravel/telescope](https://github.com/laravel/telescope)\n> 因Swoole运行在`cli`模式，导致`RequestWatcher`不能正常识别忽略的路由。\n\n解决方案：\n\n1.`.env`中增加环境变量`APP_RUNNING_IN_CONSOLE=false`；\n\n2.修改代码。\n\n```php\n// 修改`app/Providers/EventServiceProvider.php`, 添加下面监听代码到boot方法中\n// use Laravel\\Telescope\\Telescope;\n// use Illuminate\\Support\\Facades\\Event;\nEvent::listen('laravels.received_request', function ($request, $app) {\n    $reflection = new \\ReflectionClass(Telescope::class);\n    $handlingApprovedRequest = $reflection->getMethod('handlingApprovedRequest');\n    $handlingApprovedRequest->setAccessible(true);\n    $handlingApprovedRequest->invoke(null, $app) ? Telescope::startRecording() : Telescope::stopRecording();\n});\n```\n\n## 单例控制器\n\n- Laravel 5.3+ 控制器是被绑定在`Router`下的`Route`中，而`Router`是单例，控制器只会被构造`一次`，所以不能在构造方法中初始化`请求级数据`，下面展示`错误的用法`。\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    protected $userId;\n    public function __construct()\n    {\n        // 错误的用法：因控制器只被构造一次，然后常驻于内存，所以$userId只会被赋值一次，后续请求会误读取之前请求$userId\n        $this->userId = session('userId');\n    }\n    public function testAction()\n    {\n        // 读取$this->userId;\n    }\n}\n```\n\n- 两种解决方法(二选一)\n\n1.避免在构造函数中初始化`请求级`的数据，应在具体`Action`中读取，这样编码风格更合理，建议这样写。\n\n```bash\n# 列出你的路由中所有关联的控制器的所有属性\nphp artisan laravels:list-properties\n```\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    protected function getUserId()\n    {\n        return session('userId');\n    }\n    public function testAction()\n    {\n        // 通过调用$this->getUserId()读取$userId\n    }\n}\n```\n\n2.使用`LaravelS`提供的`自动销毁控制器`机制。\n\n```php\n// config/laravels.php\n// 将enable置为true、excluded_list置为[]，则表示自动销毁所有控制器\n'destroy_controllers'      => [\n    'enable'        => true, // 启用自动销毁控制器\n    'excluded_list' => [\n        //\\App\\Http\\Controllers\\TestController::class, // 排除销毁的控制器类列表\n    ],\n],\n```\n\n## 不能使用这些函数\n\n- `flush`/`ob_flush`/`ob_end_flush`/`ob_implicit_flush`：`swoole_http_response`不支持`flush`。\n\n- `dd()`/`exit()`/`die()`: 将导致Worker/Task/Process进程立即退出，建议通过抛异常跳出函数调用栈，[Swoole文档](https://wiki.swoole.com/wiki/page/501.html)。\n\n- `header()`/`setcookie()`/`http_response_code()`：HTTP响应只能通过Laravel/Lumen的`Response`对象。\n\n## 不能使用的全局变量\n\n- $_GET、$_POST、$_FILES、$_COOKIE、$_REQUEST、$_SESSION、$GLOBALS，$_ENV是`可读`的，$_SERVER是`部分可读`的。\n\n## 大小限制\n\n- `Swoole`限制了`GET`请求头的最大尺寸为`8KB`，建议`Cookie`的不要太大，不然Cookie可能解析失败。\n\n- `POST`数据或文件上传的大小受`Swoole`配置[`package_max_length`](https://wiki.swoole.com/wiki/page/301.html)限制，默认上限`2M`。\n\n- 文件上传的大小受到了[memory_limit](https://www.php.net/manual/zh/ini.core.php#ini.memory-limit)的限制，默认`128M`。\n\n## Inotify监听文件数达到上限\n> `Warning: inotify_add_watch(): The user limit on the total number of inotify watches was reached`\n\n- `Linux`中`Inotify`监听文件数默认上限一般是`8192`，实际项目的文件数+目录树很可能超过此上限，进而导致后续的监听失败。\n\n- 增加此上限到`524288`：`echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p`，注意`Docker`时需设置启用`privileged`。\n\n## 注意include/require与(include/require)_once\n> 看看鸟哥这篇文章[再一次, 不要使用(include/require)_once](http://www.laruence.com/2012/09/12/2765.html)\n\n- 引入`类`、`接口`、`trait`、`函数`时使用(include/require)_once，其他情况使用include/require。\n\n- 在多进程模式下，子进程会继承父进程资源，一旦父进程引入了某个需要被执行的文件，子进程再次`require_once()`时会直接返回`true`，导致该文件执行失败。此时，你应该使用include/require。\n\n\n## 对于`Swoole < 1.9.17`的环境\n> 开启`handle_static`后，静态资源文件将由`LaravelS`组件处理。由于PHP环境的原因，可能会导致`MimeTypeGuesser`无法正确识别`MimeType`，比如会Javascript与CSS文件会被识别为`text/plain`。\n\n解决方案：\n\n1.升级Swoole到`1.9.17+`\n\n2.注册自定义MIME猜测器\n\n```php\n// MyGuessMimeType.php\nuse Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesserInterface;\nclass MyGuessMimeType implements MimeTypeGuesserInterface\n{\n    protected static $map = [\n        'js'  => 'application/javascript',\n        'css' => 'text/css',\n    ];\n    public function guess($path)\n    {\n        $ext = pathinfo($path, PATHINFO_EXTENSION);\n        if (strlen($ext) > 0) {\n            return Arr::get(self::$map, $ext);\n        } else {\n            return null;\n        }\n    }\n}\n```\n\n```php\n// AppServiceProvider.php\nuse Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesser;\npublic function boot()\n{\n    MimeTypeGuesser::getInstance()->register(new MyGuessMimeType());\n}\n```\n\n"
        },
        {
          "name": "KnownIssues.md",
          "type": "blob",
          "size": 8.7744140625,
          "content": "# Known issues\n\n## Class swoole does not exist\n- In `LaravelS`, `Swoole` is `Http Server` started in `cli` mode, replacing `FPM`.\n- Delivering a task, triggering an asynchronous event will call `app('swoole')` and get the `Swoole\\http\\server` instance from the `Laravel container`. This instance is injected into the container only when `LaravelS` is started.\n- So, once you leave the `LaravelS`, due to the cross-process, you will be `unable` to successfully call `app('swoole')`:\n    - The code that runs in various `command line` modes, such as the Artisan command line and the PHP script command line.\n    - Run the code under `FPM`/`Apache PHP Module`, view SAPI `Log::info('PHP SAPI', [php_sapi_name()]);`.\n\n## Use package [encore/laravel-admin](https://github.com/z-song/laravel-admin)\n> Modify `config/laravels.php` and add` LaravelAdminCleaner` in `cleaners`.\n\n```php\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\LaravelAdminCleaner::class,\n],\n```\n\n## Use package [jenssegers/agent](https://github.com/jenssegers/agent)\n> [Listen System Event](https://github.com/hhxsv5/laravel-s/blob/master/README.md#system-events)\n\n```php\n// Reset Agent\n\\Event::listen('laravels.received_request', function (\\Illuminate\\Http\\Request $req, $app) {\n    $app->agent->setHttpHeaders($req->server->all());\n    $app->agent->setUserAgent();\n});\n```\n\n## Use package [barryvdh/laravel-debugbar](https://github.com/barryvdh/laravel-debugbar)\n> Not support `cli` mode officially, you need to add the environment variable `APP_RUNNING_IN_CONSOLE` to be non-cli`, but there may be some other issues.\n\nAdd environment variable `APP_RUNNING_IN_CONSOLE=false` to `.env`.\n\n## Use package [the-control-group/voyager](https://github.com/the-control-group/voyager)\n> `voyager` dependencies [arrilot/laravel-widgets](https://github.com/arrilot/laravel-widgets), where `WidgetGroupCollection` is a singleton, [appending widget](https://github.com/Arrilot/laravel-widgets/blob/master/src/WidgetGroup.php#L270) will cause them to repeat the display, you need to reset the singleton by re-registering the ServiceProvider.\n\n```php\n// config/laravels.php\n'register_providers' => [\n    Arrilot\\Widgets\\ServiceProvider::class,\n],\n```\n\n## Use package [overtrue/wechat](https://github.com/overtrue/wechat)\n> The asynchronous notification callback will be failing, because `$app['request']->getContent()` is empty, give it a value.\n\n```php\npublic function notify(Request $request)\n{\n    $app = $this->getPayment();//Get payment instance\n    $app['request'] = $request;//Add this line to the original code and assign the current request instance to $app['request']\n    $response = $app->handlePaidNotify(function ($message, $fail) use($id) {\n        //...\n    });\n    return $response;\n}\n```\n## Use package [laracasts/flash](https://github.com/laracasts/flash)\n> Flash messages are held in memory all the time. Appending to `$messages` when call flash() every time, leads to the multiple messages. There are two solutions.\n\n1.Reset `$messages` by middleware `app('flash')->clear();`.\n\n2.Re-register `FlashServiceProvider` after handling request, Refer [register_providers](https://github.com/hhxsv5/laravel-s/blob/master/Settings.md).\n\n## Use package [laravel/telescope](https://github.com/laravel/telescope)\n> Because Swoole is running in `cli` mode, `RequestWatcher` does not recognize the ignored route properly.\n\nSolution:\n\n1.Add environment variable `APP_RUNNING_IN_CONSOLE=false` to `.env`;\n\n2.Modify code.\n\n```php\n// Edit file `app/Providers/EventServiceProvider.php`, add the following code into method `boot`\n// use Laravel\\Telescope\\Telescope;\n// use Illuminate\\Support\\Facades\\Event;\nEvent::listen('laravels.received_request', function ($request, $app) {\n    $reflection = new \\ReflectionClass(Telescope::class);\n    $handlingApprovedRequest = $reflection->getMethod('handlingApprovedRequest');\n    $handlingApprovedRequest->setAccessible(true);\n    $handlingApprovedRequest->invoke(null, $app) ? Telescope::startRecording() : Telescope::stopRecording();\n});\n```\n\n## Singleton controller\n\n- Laravel 5.3+ controller is bound to `Route` under `Router`, and `Router` is a singleton, controller will only be constructed `once`, so you cannot initialize `request-level data` in the constructor, the following shows you the `wrong` usage.\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    protected $userId;\n    public function __construct()\n    {\n        // Wrong usage: Since the controller is only constructed once and then resident in memory, $userId will only be assigned once, and subsequent requests will be misread before requesting $userId\n        $this->userId = session('userId');\n    }\n    public function testAction()\n    {\n        // read $this->userId;\n    }\n}\n```\n\n- Two solutions (choose one)\n\n1.Avoid initializing `request-level` data in the constructor, which should be read in the concrete `Action`. This coding style is more reasonable, it is recommended to do so.\n\n```bash\n# List all properties of all controllers related your routes.\nphp artisan laravels:list-properties\n```\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    protected function getUserId()\n    {\n        return session('userId');\n    }\n    public function testAction()\n    {\n        // call $this->getUserId() to read $userId\n    }\n}\n```\n\n2.Use the `automatic destruction controller` mechanism provided by `LaravelS`.\n\n```php\n// config/laravels.php\n// Set enable to true and exclude_list to [], which means that all controllers are automatically destroyed.\n'destroy_controllers'      => [\n    'enable'        => true, // Enable automatic destruction controller\n    'excluded_list' => [\n        //\\App\\Http\\Controllers\\TestController::class, // The excluded list of destroyed controller classes\n    ],\n],\n```\n\n## Cannot call these functions\n\n- `flush`/`ob_flush`/`ob_end_flush`/`ob_implicit_flush`: `swoole_http_response` does not support `flush`.\n\n- `dd()`/`exit()`/`die()`: will lead to Worker/Task/Process quit right now, suggest jump out function call stack by throwing exception.\n\n- `header()`/`setcookie()`/`http_response_code()`: Make HTTP response by Laravel/Lumen `Response` only in LaravelS underlying.\n\n## Cannot use these global variables\n\n- $_GET/$_POST/$_FILES/$_COOKIE/$_REQUEST/$_SESSION/$GLOBALS, $_ENV is `readable`, $_SERVER is `partial readable`.\n\n## Size restriction\n\n- The max size of `GET` request's header is `8KB`, limited by `Swoole`, the big `Cookie` will lead to parse Cookie fail.\n\n- The max size of `POST` data/file is limited by `Swoole` [package_max_length](https://www.swoole.co.uk/docs/modules/swoole-server/configuration), default `2M`.\n\n- The max size of the file upload is limited by [memory_limit](https://www.php.net/manual/en/ini.core.php#ini.memory-limit), default `128M`.\n\n## Inotify reached the watchers limit\n> `Warning: inotify_add_watch(): The user limit on the total number of inotify watches was reached`\n\n- Inotify limit is default `8192` for most `Linux`, but the amount of actual project may be more than it, then lead to watch fail.\n\n- Increase the amount of inotify watchers to `524288`: `echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p`, note: you need to enable `privileged` for `Docker`.\n\n## include/require与(include/require)_once\n> See Laruence's blog [Do NOT USE (include/require)_once](http://www.laruence.com/2012/09/12/2765.html)\n\n- To include the files about `class`/`interface`/`trait`/`function`, sugguest to use (include/require)_once. In other cases, use include/require.\n\n- In the multi-process mode, the child process inherits the parent process resource. Once the parent process includes a file that needs to be executed, the child process will directly return true when it uses require_once(), causing the file to fail to execute. Now, you need to use include/require.\n\n## If `Swoole < 1.9.17`\n> After enabling `handle_static`, static resource files will be handled by `LaravelS`. Due to the PHP environment, `MimeTypeGuesser` may not correctly recognize `MimeType`. For example, Javascript and CSS files will be recognized as `text/plain`.\n\nSolutions:\n\n1.Upgrade Swoole to `1.9.17+`.\n\n2.Register a custom MIME guesser.\n\n```php\n// MyGuessMimeType.php\nuse Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesserInterface;\nclass MyGuessMimeType implements MimeTypeGuesserInterface\n{\n    protected static $map = [\n        'js'  => 'application/javascript',\n        'css' => 'text/css',\n    ];\n    public function guess($path)\n    {\n        $ext = pathinfo($path, PATHINFO_EXTENSION);\n        if (strlen($ext) > 0) {\n            return Arr::get(self::$map, $ext);\n        } else {\n            return null;\n        }\n    }\n}\n```\n\n```php\n// AppServiceProvider.php\nuse Symfony\\Component\\HttpFoundation\\File\\MimeType\\MimeTypeGuesser;\npublic function boot()\n{\n    MimeTypeGuesser::getInstance()->register(new MyGuessMimeType());\n}\n```\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2018 hhxsv5\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README-CN.md",
          "type": "blob",
          "size": 60.71484375,
          "content": "<div align=\"center\">\n    <img src=\"https://github.com/hhxsv5/laravel-s/raw/PHP-8.x/logo.svg\" alt=\"LaravelS Logo\" height=\"80\">\n     <p>\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md\">中文文档</a> |\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md\">English Docs</a>\n    </p>\n    <p>🚀 LaravelS 是 Laravel/Lumen 和 Swoole 之间开箱即用的适配器</p>\n    <p>\n        <a href=\"https://github.com/hhxsv5/laravel-s/releases\">\n            <img src=\"https://img.shields.io/github/release/hhxsv5/laravel-s.svg\" alt=\"Latest Version\">\n        </a>\n        <a href=\"https://www.php.net/\">\n            <img src=\"https://img.shields.io/packagist/php-v/hhxsv5/laravel-s\" alt=\"PHP Version\">\n        </a>\n        <a href=\"https://github.com/swoole/swoole-src\">\n            <img src=\"https://img.shields.io/badge/swoole-%3E=5.0.0-flat.svg\" alt=\"Swoole Version\">\n        </a>\n        <a href=\"https://packagist.org/packages/hhxsv5/laravel-s/stats\">\n            <img src=\"https://img.shields.io/packagist/dt/hhxsv5/laravel-s\" alt=\"Total Downloads\">\n        </a>\n        <a href=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/\">\n            <img src=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/badges/build.png?b=PHP-8.x\" alt=\"Build Status\">\n        </a>\n        <a href=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/\">\n            <img src=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/badges/code-intelligence.svg?b=PHP-8.x\" alt=\"Code Intelligence Status\">\n        </a>\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/LICENSE\">\n            <img src=\"https://img.shields.io/github/license/hhxsv5/laravel-s\" alt=\"License\">\n        </a>\n    </p>\n</div>\n\n---\n\n## 持续更新\n- *请`Watch`此仓库，以获得最新的更新。*\n- **QQ交流群**：\n  - `698480528` [![点击加群](https://pub.idqqimg.com/wpa/images/group.png \"点击加群\")](//shang.qq.com/wpa/qunwpa?idkey=f949191c8f413a3ecc5fbce661e57d379740ba92172bd50b02d23a5ab36cc7d6)\n  - `62075835` [![点击加群](https://pub.idqqimg.com/wpa/images/group.png \"点击加群\")](//shang.qq.com/wpa/qunwpa?idkey=5230f8da0693a812811e21e19d5823ee802ee5d24def177663f42a32a9060e97)\n\n文档目录\n=================\n\n* [特性](#特性)\n* [Benchmark](#benchmark)\n* [要求](#要求)\n* [安装](#安装)\n* [运行](#运行)\n* [部署](#部署)\n* [与Nginx配合使用（推荐）](#与nginx配合使用推荐)\n* [与Apache配合使用](#与apache配合使用)\n* [启用WebSocket服务器](#启用websocket服务器)\n* [监听事件](#监听事件)\n    * [系统事件](#系统事件)\n    * [自定义的异步事件](#自定义的异步事件)\n* [异步的任务队列](#异步的任务队列)\n* [毫秒级定时任务](#毫秒级定时任务)\n* [修改代码后自动Reload](#修改代码后自动reload)\n* [在你的项目中使用SwooleServer实例](#在你的项目中使用swooleserver实例)\n* [使用SwooleTable](#使用swooletable)\n* [多端口混合协议](#多端口混合协议)\n* [协程](#协程)\n* [自定义进程](#自定义进程)\n* [常用组件](#常用组件)\n    * [Apollo](#apollo)\n    * [Prometheus](#prometheus)\n* [其他特性](#其他特性)\n    * [配置Swoole事件](#配置Swoole事件)\n    * [Serverless](#serverless)\n* [注意事项](#注意事项)\n* [用户与案例](#用户与案例)\n* [其他选择](#其他选择)\n* [赞助](#赞助)\n    * [感谢](#感谢)\n* [License](#license)\n\n## 特性\n\n- 内置Http/[WebSocket](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E5%90%AF%E7%94%A8websocket%E6%9C%8D%E5%8A%A1%E5%99%A8)服务器\n\n- [多端口混合协议](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E5%A4%9A%E7%AB%AF%E5%8F%A3%E6%B7%B7%E5%90%88%E5%8D%8F%E8%AE%AE)\n\n- [自定义进程](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9B%E7%A8%8B)\n\n- 常驻内存\n\n- [异步的事件监听](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E5%BC%82%E6%AD%A5%E4%BA%8B%E4%BB%B6)\n\n- [异步的任务队列](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E5%BC%82%E6%AD%A5%E7%9A%84%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97)\n\n- [毫秒级定时任务](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E6%AF%AB%E7%A7%92%E7%BA%A7%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1)\n\n- [常用组件](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6)\n\n- 平滑Reload\n\n- [修改代码后自动Reload](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E5%90%8E%E8%87%AA%E5%8A%A8reload)\n\n- 同时支持Laravel与Lumen，兼容主流版本\n\n- 简单，开箱即用\n\n## Benchmark\n\n- [Which is the fastest web framework?](https://github.com/the-benchmarker/web-frameworks)\n\n- [TechEmpower Framework Benchmarks](https://www.techempower.com/benchmarks/)\n\n## 要求\n\n| 依赖 | 说明 |\n| -------- | -------- |\n| [PHP](https://www.php.net/) | `>=8.2` `推荐8.2` |\n| [Swoole](https://www.swoole.com/) | `>=5.0` `推荐5.1.1` |\n| [Laravel](https://laravel.com/)/[Lumen](https://lumen.laravel.com/) | `>=10` `推荐10` |\n\n## 安装\n\n1.通过[Composer](https://getcomposer.org/)安装([packagist](https://packagist.org/packages/hhxsv5/laravel-s))。有可能找不到`3.0`版本，解决方案移步[#81](https://github.com/hhxsv5/laravel-s/issues/81)。\n```bash\n# PHP >=8.2\ncomposer require \"hhxsv5/laravel-s:~3.8.0\"\n\n# PHP >=5.5.9,<=7.4.33\n# composer require \"hhxsv5/laravel-s:~3.7.0\"\n\n# 确保你的composer.lock文件是在版本控制中\n```\n\n2.注册Service Provider（以下两步二选一）。\n\n- `Laravel`: 修改文件`config/app.php`，`Laravel 5.5+支持包自动发现，你应该跳过这步`\n    ```php\n    'providers' => [\n        //...\n        Hhxsv5\\LaravelS\\Illuminate\\LaravelSServiceProvider::class,\n    ],\n    ```\n\n- `Lumen`: 修改文件`bootstrap/app.php`\n    ```php\n    $app->register(Hhxsv5\\LaravelS\\Illuminate\\LaravelSServiceProvider::class);\n    ```\n\n3.发布配置和二进制文件。\n> *每次升级LaravelS后，需重新publish；点击[Release](https://github.com/hhxsv5/laravel-s/releases)去了解各个版本的变更记录。*\n\n```bash\nphp artisan laravels publish\n# 配置文件：config/laravels.php\n# 二进制文件：bin/laravels bin/fswatch bin/inotify\n```\n\n4.修改配置`config/laravels.php`：监听的IP、端口等，请参考[配置项](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings-CN.md)。\n\n5.性能调优\n\n- [调整内核参数](https://wiki.swoole.com/#/other/sysctl?id=%e5%86%85%e6%a0%b8%e5%8f%82%e6%95%b0%e8%b0%83%e6%95%b4)\n\n- [Worker数量](https://wiki.swoole.com/#/server/setting?id=worker_num)：LaravelS 使用 Swoole 的`同步IO`模式，`worker_num`设置的越大并发性能越好，但会造成更多的内存占用和进程切换开销。如果`1`个请求耗时`100ms`，为了提供`1000QPS`的并发能力，至少需要配置`100`个Worker进程，计算方法：worker_num = 1000QPS/(1s/1ms) = 100，故需进行增量压测计算出最佳的`worker_num`。\n\n- [Task Worker数量](https://wiki.swoole.com/#/server/setting?id=task_worker_num)\n\n\n## 运行\n> `在运行之前，请先仔细阅读：`[注意事项](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9)(这非常重要)。\n\n- 操作命令：`php bin/laravels {start|stop|restart|reload|info|help}`。\n\n| 命令 | 说明 |\n| --------- | --------- |\n| start | 启动LaravelS，展示已启动的进程列表 \"*ps -ef&#124;grep laravels*\" |\n| stop | 停止LaravelS，并触发自定义进程的`onStop`方法 |\n| restart | 重启LaravelS：先平滑`Stop`，然后再`Start`；在`Start`完成之前，服务是`不可用的` |\n| reload | 平滑重启所有Task/Worker/Timer进程(这些进程内包含了你的业务代码)，并触发自定义进程的`onReload`方法，不会重启Master/Manger进程；修改`config/laravels.php`后，你`只有`调用`restart`来完成重启 |\n| info | 显示组件的版本信息 |\n| help | 显示帮助信息 |\n\n- 启动选项，针对`start`和`restart`命令。\n\n| 选项 | 说明 |\n| --------- | --------- |\n| -d&#124;--daemonize | 以守护进程的方式运行，此选项将覆盖`laravels.php`中`swoole.daemonize`设置 |\n| -e&#124;--env | 指定运行的环境，如`--env=testing`将会优先使用配置文件`.env.testing`，这个特性要求`Laravel 5.2+` |\n| -i&#124;--ignore | 忽略检查Master进程的PID文件 |\n| -x&#124;--x-version | 记录当前工程的版本号(分支)，保存在`$_ENV`/`$_SERVER`中，访问方式：`$_ENV['X_VERSION']` `$_SERVER['X_VERSION']` `$request->server->get('X_VERSION')` |\n\n- `运行时`文件：`start`时会自动执行`php artisan laravels config`并生成这些文件，开发者一般不需要关注它们，建议将它们加到`.gitignore`中。\n\n| 文件 | 说明 |\n| --------- | --------- |\n| storage/laravels.conf | LaravelS的`运行时`配置文件 |\n| storage/laravels.pid | Master进程的PID文件 |\n| storage/laravels-timer-process.pid | 定时器Timer进程的PID文件 |\n| storage/laravels-custom-processes.pid | 所有自定义进程的PID文件 |\n\n## 部署\n> 建议通过[Supervisord](http://supervisord.org/)监管主进程，前提是不能加`-d`选项并且设置`swoole.daemonize`为`false`。\n\n```\n[program:laravel-s-test]\ndirectory=/var/www/laravel-s-test\ncommand=/usr/local/bin/php bin/laravels start -i\nnumprocs=1\nautostart=true\nautorestart=true\nstartretries=3\nuser=www-data\nredirect_stderr=true\nstdout_logfile=/var/log/supervisor/%(program_name)s.log\n```\n\n## 与Nginx配合使用（推荐）\n> [示例](https://github.com/hhxsv5/docker/blob/master/nginx/conf.d/laravels.conf)。\n\n```nginx\ngzip on;\ngzip_min_length 1024;\ngzip_comp_level 2;\ngzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;\ngzip_vary on;\ngzip_disable \"msie6\";\nupstream swoole {\n    # 通过 IP:Port 连接\n    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;\n    # 通过 UnixSocket Stream 连接，小诀窍：将socket文件放在/dev/shm目录下，可获得更好的性能\n    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.2:5200 backup;\n    keepalive 16;\n}\nserver {\n    listen 80;\n    # 别忘了绑Host\n    server_name laravels.com;\n    root /yourpath/laravel-s-test/public;\n    access_log /yourpath/log/nginx/$server_name.access.log  main;\n    autoindex off;\n    index index.html index.htm;\n    # Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。\n    location / {\n        try_files $uri @laravels;\n    }\n    # 当请求PHP文件时直接响应404，防止暴露public/*.php\n    #location ~* \\.php$ {\n    #    return 404;\n    #}\n    location @laravels {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout 120s;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        # “swoole”是指upstream\n        proxy_pass http://swoole;\n    }\n}\n```\n\n## 与Apache配合使用\n\n```apache\nLoadModule proxy_module /yourpath/modules/mod_proxy.so\nLoadModule proxy_balancer_module /yourpath/modules/mod_proxy_balancer.so\nLoadModule lbmethod_byrequests_module /yourpath/modules/mod_lbmethod_byrequests.so\nLoadModule proxy_http_module /yourpath/modules/mod_proxy_http.so\nLoadModule slotmem_shm_module /yourpath/modules/mod_slotmem_shm.so\nLoadModule rewrite_module /yourpath/modules/mod_rewrite.so\nLoadModule remoteip_module /yourpath/modules/mod_remoteip.so\nLoadModule deflate_module /yourpath/modules/mod_deflate.so\n\n<IfModule deflate_module>\n    SetOutputFilter DEFLATE\n    DeflateCompressionLevel 2\n    AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml\n</IfModule>\n\n<VirtualHost *:80>\n    # 别忘了绑Host\n    ServerName www.laravels.com\n    ServerAdmin hhxsv5@sina.com\n\n    DocumentRoot /yourpath/laravel-s-test/public;\n    DirectoryIndex index.html index.htm\n    <Directory \"/\">\n        AllowOverride None\n        Require all granted\n    </Directory>\n\n    RemoteIPHeader X-Forwarded-For\n\n    ProxyRequests Off\n    ProxyPreserveHost On\n    <Proxy balancer://laravels>  \n        BalancerMember http://192.168.1.1:5200 loadfactor=7\n        #BalancerMember http://192.168.1.2:5200 loadfactor=3\n        #BalancerMember http://192.168.1.3:5200 loadfactor=1 status=+H\n        ProxySet lbmethod=byrequests\n    </Proxy>\n    #ProxyPass / balancer://laravels/\n    #ProxyPassReverse / balancer://laravels/\n\n    # Apache处理静态资源，LaravelS处理动态资源。\n    RewriteEngine On\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f\n    RewriteRule ^/(.*)$ balancer://laravels%{REQUEST_URI} [P,L]\n\n    ErrorLog ${APACHE_LOG_DIR}/www.laravels.com.error.log\n    CustomLog ${APACHE_LOG_DIR}/www.laravels.com.access.log combined\n</VirtualHost>\n```\n## 启用WebSocket服务器\n> WebSocket服务器监听的IP和端口与Http服务器相同。\n\n1.创建WebSocket Handler类，并实现接口`WebSocketHandlerInterface`。start时会自动实例化，不需要手动创建实例。\n\n```php\nnamespace App\\Services;\nuse Hhxsv5\\LaravelS\\Swoole\\WebSocketHandlerInterface;\nuse Swoole\\Http\\Request;\nuse Swoole\\Http\\Response;\nuse Swoole\\WebSocket\\Frame;\nuse Swoole\\WebSocket\\Server;\n/**\n * @see https://wiki.swoole.com/#/start/start_ws_server\n */\nclass WebSocketService implements WebSocketHandlerInterface\n{\n    // 声明没有参数的构造函数\n    public function __construct()\n    {\n    }\n    // public function onHandShake(Request $request, Response $response)\n    // {\n           // 自定义握手：https://wiki.swoole.com/#/websocket_server?id=onhandshake\n           // 成功握手之后会自动触发onOpen事件\n    // }\n    public function onOpen(Server $server, Request $request)\n    {\n        // 在触发onOpen事件之前，建立WebSocket的HTTP请求已经经过了Laravel的路由，\n        // 所以Laravel的Request、Auth等信息是可读的，Session是可读写的，但仅限在onOpen事件中。\n        // \\Log::info('New WebSocket connection', [$request->fd, request()->all(), session()->getId(), session('xxx'), session(['yyy' => time()])]);\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n        $server->push($request->fd, 'Welcome to LaravelS');\n    }\n    public function onMessage(Server $server, Frame $frame)\n    {\n        // \\Log::info('Received message', [$frame->fd, $frame->data, $frame->opcode, $frame->finish]);\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n        $server->push($frame->fd, date('Y-m-d H:i:s'));\n    }\n    public function onClose(Server $server, $fd, $reactorId)\n    {\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n    }\n}\n```\n\n2.更改配置`config/laravels.php`。\n\n```php\n// ...\n'websocket'      => [\n    'enable'  => true, // 注意：设置enable为true\n    'handler' => \\App\\Services\\WebSocketService::class,\n],\n'swoole'         => [\n    //...\n    // dispatch_mode只能设置为2、4、5，https://wiki.swoole.com/#/server/setting?id=dispatch_mode\n    'dispatch_mode' => 2,\n    //...\n],\n// ...\n```\n\n3.使用`SwooleTable`绑定FD与UserId，可选的，[Swoole Table示例](#使用swooletable)。也可以用其他全局存储服务，例如Redis/Memcached/MySQL，但需要注意多个`Swoole Server`实例时FD可能冲突。\n\n4.与Nginx配合使用（推荐）\n> 参考 [WebSocket代理](http://nginx.org/en/docs/http/websocket.html)\n\n```nginx\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\nupstream swoole {\n    # 通过 IP:Port 连接\n    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;\n    # 通过 UnixSocket Stream 连接，小诀窍：将socket文件放在/dev/shm目录下，可获得更好的性能\n    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.2:5200 backup;\n    keepalive 16;\n}\nserver {\n    listen 80;\n    # 别忘了绑Host\n    server_name laravels.com;\n    root /yourpath/laravel-s-test/public;\n    access_log /yourpath/log/nginx/$server_name.access.log  main;\n    autoindex off;\n    index index.html index.htm;\n    # Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。\n    location / {\n        try_files $uri @laravels;\n    }\n    # 当请求PHP文件时直接响应404，防止暴露public/*.php\n    #location ~* \\.php$ {\n    #    return 404;\n    #}\n    # Http和WebSocket共存，Nginx通过location区分\n    # !!! WebSocket连接时路径为/ws\n    # Javascript: var ws = new WebSocket(\"ws://laravels.com/ws\");\n    location =/ws {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout：如果60秒内被代理的服务器没有响应数据给Nginx，那么Nginx会关闭当前连接；同时，Swoole的心跳设置也会影响连接的关闭\n        # proxy_read_timeout 60s;\n        proxy_http_version 1.1;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_pass http://swoole;\n    }\n    location @laravels {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout 60s;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        proxy_pass http://swoole;\n    }\n}\n```\n\n5.心跳配置\n\n- Swoole的心跳配置\n\n    ```php\n    // config/laravels.php\n    'swoole' => [\n        //...\n        // 表示每60秒遍历一次，一个连接如果600秒内未向服务器发送任何数据，此连接将被强制关闭\n        'heartbeat_idle_time'      => 600,\n        'heartbeat_check_interval' => 60,\n        //...\n    ],\n    ```\n\n- Nginx读取代理服务器超时的配置\n\n    ```nginx\n    # 如果60秒内被代理的服务器没有响应数据给Nginx，那么Nginx会关闭当前连接\n    proxy_read_timeout 60s;\n    ```\n\n6.在控制器中推送数据\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    public function push()\n    {\n        $fd = 1; // Find fd by userId from a map [userId=>fd].\n        /**@var \\Swoole\\WebSocket\\Server $swoole */\n        $swoole = app('swoole');\n        $success = $swoole->push($fd, 'Push data to fd#1 in Controller');\n        var_dump($success);\n    }\n}\n```\n\n## 监听事件\n\n### 系统事件\n> 通常，你可以在这些事件中重置或销毁一些全局或静态的变量，也可以修改当前的请求和响应。\n\n- `laravels.received_request` 将`Swoole\\Http\\Request`转成`Illuminate\\Http\\Request`后，在Laravel内核处理请求前。\n\n    ```php\n    // 修改`app/Providers/EventServiceProvider.php`, 添加下面监听代码到boot方法中\n    // 如果变量$events不存在，你也可以通过Facade调用\\Event::listen()。\n    $events->listen('laravels.received_request', function (\\Illuminate\\Http\\Request $req, $app) {\n        $req->query->set('get_key', 'hhxsv5');// 修改querystring\n        $req->request->set('post_key', 'hhxsv5'); // 修改post body\n    });\n    ```\n\n- `laravels.generated_response` 在Laravel内核处理完请求后，将`Illuminate\\Http\\Response`转成`Swoole\\Http\\Response`之前(下一步将响应给客户端)。\n\n    ```php\n    // 修改`app/Providers/EventServiceProvider.php`, 添加下面监听代码到boot方法中\n    // 如果变量$events不存在，你也可以通过Facade调用\\Event::listen()。\n    $events->listen('laravels.generated_response', function (\\Illuminate\\Http\\Request $req, \\Symfony\\Component\\HttpFoundation\\Response $rsp, $app) {\n        $rsp->headers->set('header-key', 'hhxsv5');// 修改header\n    });\n    ```\n\n### 自定义的异步事件\n> 此特性依赖`Swoole`的`AsyncTask`，必须先设置`config/laravels.php`的`swoole.task_worker_num`。异步事件的处理能力受Task进程数影响，需合理设置[task_worker_num](https://wiki.swoole.com/#/server/setting?id=task_worker_num)。\n\n1.创建事件类。\n\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\nclass TestEvent extends Event\n{\n    protected $listeners = [\n        // 监听器列表\n        TestListener1::class,\n        // TestListener2::class,\n    ];\n    private $data;\n    public function __construct($data)\n    {\n        $this->data = $data;\n    }\n    public function getData()\n    {\n        return $this->data;\n    }\n}\n```\n\n2.创建监听器类。\n\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Listener;\nclass TestListener1 extends Listener\n{\n    public function handle(Event $event)\n    {\n        \\Log::info(__CLASS__ . ':handle start', [$event->getData()]);\n        sleep(2);// 模拟一些慢速的事件处理\n        // 监听器中也可以投递Task，但不支持Task的finish()回调。\n        // 注意：config/laravels.php中修改配置task_ipc_mode为1或2，参考 https://wiki.swoole.com/#/server/setting?id=task_ipc_mode\n        $ret = Task::deliver(new TestTask('task data'));\n        var_dump($ret);\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n        // return false; // 停止将事件传播到后面的监听器\n    }\n}\n```\n\n3.触发事件。\n\n```php\n// 实例化TestEvent并通过fire触发，此操作是异步的，触发后立即返回，由Task进程继续处理监听器中的handle逻辑\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\n$event = new TestEvent('event data');\n// $event->delay(10); // 延迟10秒触发\n// $event->setTries(3); // 出现异常时，累计尝试3次\n$success = Event::fire($event);\nvar_dump($success);// 判断是否触发成功\n```\n\n## 异步的任务队列\n> 此特性依赖`Swoole`的`AsyncTask`，必须先设置`config/laravels.php`的`swoole.task_worker_num`。异步任务的处理能力受Task进程数影响，需合理设置[task_worker_num](https://wiki.swoole.com/#/server/setting?id=task_worker_num)。\n\n1.创建任务类。\n\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nclass TestTask extends Task\n{\n    private $data;\n    private $result;\n    public function __construct($data)\n    {\n        $this->data = $data;\n    }\n    // 处理任务的逻辑，运行在Task进程中，不能投递任务\n    public function handle()\n    {\n        \\Log::info(__CLASS__ . ':handle start', [$this->data]);\n        sleep(2);// 模拟一些慢速的事件处理\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n        $this->result = 'the result of ' . $this->data;\n    }\n    // 可选的，完成事件，任务处理完后的逻辑，运行在Worker进程中，可以投递任务\n    public function finish()\n    {\n        \\Log::info(__CLASS__ . ':finish start', [$this->result]);\n        Task::deliver(new TestTask2('task2')); // 投递其他任务\n    }\n}\n```\n\n2.投递任务。\n\n```php\n// 实例化TestTask并通过deliver投递，此操作是异步的，投递后立即返回，由Task进程继续处理TestTask中的handle逻辑\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\n$task = new TestTask('task data');\n// $task->delay(3); // 延迟3秒投递任务\n// $task->setTries(3); // 出现异常时，累计尝试3次\n$ret = Task::deliver($task);\nvar_dump($ret);// 判断是否投递成功\n```\n\n## 毫秒级定时任务\n> 基于[Swoole的毫秒定时器](https://wiki.swoole.com/#/timer)，封装的定时任务，取代`Linux`的`Crontab`。\n\n1.创建定时任务类。\n```php\nnamespace App\\Jobs\\Timer;\nuse App\\Tasks\\TestTask;\nuse Swoole\\Coroutine;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nuse Hhxsv5\\LaravelS\\Swoole\\Timer\\CronJob;\nclass TestCronJob extends CronJob\n{\n    protected $i = 0;\n    // !!! 定时任务的`interval`和`isImmediate`有两种配置方式（二选一）：一是重载对应的方法，二是注册定时任务时传入参数。\n    // --- 重载对应的方法来返回配置：开始\n    public function interval()\n    {\n        return 1000;// 每1秒运行一次\n    }\n    public function isImmediate()\n    {\n        return false;// 是否立即执行第一次，false则等待间隔时间后执行第一次\n    }\n    // --- 重载对应的方法来返回配置：结束\n    public function run()\n    {\n        \\Log::info(__METHOD__, ['start', $this->i, microtime(true)]);\n        // do something\n        // sleep(1); // Swoole < 2.1\n        Coroutine::sleep(1); // Swoole>=2.1 run()方法已自动创建了协程。\n        $this->i++;\n        \\Log::info(__METHOD__, ['end', $this->i, microtime(true)]);\n\n        if ($this->i >= 10) { // 运行10次后不再执行\n            \\Log::info(__METHOD__, ['stop', $this->i, microtime(true)]);\n            $this->stop(); // 终止此定时任务，但restart/reload后会再次运行\n            // CronJob中也可以投递Task，但不支持Task的finish()回调。\n            // 注意：修改config/laravels.php，配置task_ipc_mode为1或2，参考 https://wiki.swoole.com/#/server/setting?id=task_ipc_mode\n            $ret = Task::deliver(new TestTask('task data'));\n            var_dump($ret);\n        }\n        // 此处抛出的异常会被上层捕获并记录到Swoole日志，开发者需要手动try/catch\n    }\n}\n```\n\n2.注册定时任务类。\n\n```php\n// 在\"config/laravels.php\"注册定时任务类\n[\n    // ...\n    'timer'          => [\n        'enable' => true, // 启用Timer\n        'jobs'   => [ // 注册的定时任务类列表\n            // 启用LaravelScheduleJob来执行`php artisan schedule:run`，每分钟一次，替代Linux Crontab\n            // \\Hhxsv5\\LaravelS\\Illuminate\\LaravelScheduleJob::class,\n            // 两种配置参数的方式：\n            // [\\App\\Jobs\\Timer\\TestCronJob::class, [1000, true]], // 注册时传入参数\n            \\App\\Jobs\\Timer\\TestCronJob::class, // 重载对应的方法来返回参数\n        ],\n        'max_wait_time' => 5, // Reload时最大等待时间\n        // 打开全局定时器开关：当多实例部署时，确保只有一个实例运行定时任务，此功能依赖 Redis，具体请看 https://laravel.com/docs/7.x/redis\n        'global_lock'     => false,\n        'global_lock_key' => config('app.name', 'Laravel'),\n    ],\n    // ...\n];\n```\n\n3.注意在构建服务器集群时，会启动多个`定时器`，要确保只启动一个定期器，避免重复执行定时任务。\n\n4.LaravelS `v3.4.0`开始支持热重启[Reload]`定时器`进程，LaravelS 在收到`SIGUSR1`信号后会等待`max_wait_time`(默认5)秒再结束进程，然后`Manager`进程会重新拉起`定时器`进程。\n\n5.如果你仅需要用到`分钟级`的定时任务，建议启用`Hhxsv5\\LaravelS\\Illuminate\\LaravelScheduleJob`来替代Linux Crontab，这样就可以沿用[Laravel任务调度](https://learnku.com/docs/laravel/7.x/scheduling/7492)的编码习惯，配置`Kernel`即可。\n\n```php\n// app/Console/Kernel.php\nprotected function schedule(Schedule $schedule)\n{\n    // runInBackground()方法会新启子进程执行任务，这是异步的，不会影响其他任务的执行时机\n    $schedule->command(TestCommand::class)->runInBackground()->everyMinute();\n}\n```\n\n## 修改代码后自动Reload\n\n- 基于`inotify`，仅支持Linux。\n\n    1.安装[inotify](http://pecl.php.net/package/inotify)扩展。\n\n    2.开启[配置项](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings-CN.md#inotify_reloadenable)。\n\n    3.注意：`inotify`只有在`Linux`内修改文件才能收到文件变更事件，建议使用最新版Docker，[Vagrant解决方案](https://github.com/mhallin/vagrant-notify-forwarder)。\n\n- 基于`fswatch`，支持OS X、Linux、Windows。\n\n    1.安装[fswatch](https://github.com/emcrisostomo/fswatch)。\n\n    2.在项目根目录下运行命令。\n\n    ```bash\n    # 监听当前目录\n    ./bin/fswatch\n    # 监听app目录\n    ./bin/fswatch ./app\n    ```\n\n- 基于`inotifywait`，仅支持Linux。\n\n    1.安装[inotify-tools](https://github.com/rvoicilas/inotify-tools)。\n\n    2.在项目根目录下运行命令。\n\n    ```bash\n    # 监听当前目录\n    ./bin/inotify\n    # 监听app目录\n    ./bin/inotify ./app\n    ```\n\n- 当以上方法都不行时，终极解决方案：配置`max_request=1,worker_num=1`，这样`Worker`进程处理完一个请求就会重启，这种方法的性能非常差，`故仅限在开发环境使用`。\n\n## 在你的项目中使用`SwooleServer`实例\n\n```php\n/**\n * 如果启用WebSocket server，$swoole是`Swoole\\WebSocket\\Server`的实例，否则是是`Swoole\\Http\\Server`的实例\n * @var \\Swoole\\WebSocket\\Server|\\Swoole\\Http\\Server $swoole\n */\n$swoole = app('swoole');\nvar_dump($swoole->stats());\n$swoole->push($fd, 'Push WebSocket message');\n```\n\n## 使用`SwooleTable`\n\n1.定义Table，支持定义多个Table。\n> Swoole启动之前会创建定义的所有Table。\n\n```php\n// 在\"config/laravels.php\"配置\n[\n    // ...\n    'swoole_tables'  => [\n        // 场景：WebSocket中UserId与FD绑定\n        'ws' => [// Key为Table名称，使用时会自动添加Table后缀，避免重名。这里定义名为wsTable的Table\n            'size'   => 102400,//Table的最大行数\n            'column' => [// Table的列定义\n                ['name' => 'value', 'type' => \\Swoole\\Table::TYPE_INT, 'size' => 8],\n            ],\n        ],\n        //...继续定义其他Table\n    ],\n    // ...\n];\n```\n\n2.访问Table：所有的Table实例均绑定在`SwooleServer`上，通过`app('swoole')->xxxTable`访问。\n\n```php\nnamespace App\\Services;\nuse Hhxsv5\\LaravelS\\Swoole\\WebSocketHandlerInterface;\nuse Swoole\\Http\\Request;\nuse Swoole\\WebSocket\\Frame;\nuse Swoole\\WebSocket\\Server;\nclass WebSocketService implements WebSocketHandlerInterface\n{\n    /**@var \\Swoole\\Table $wsTable */\n    private $wsTable;\n    public function __construct()\n    {\n        $this->wsTable = app('swoole')->wsTable;\n    }\n    // 场景：WebSocket中UserId与FD绑定\n    public function onOpen(Server $server, Request $request)\n    {\n        // var_dump(app('swoole') === $server);// 同一实例\n        /**\n         * 获取当前登录的用户\n         * 此特性要求建立WebSocket连接的路径要经过Authenticate之类的中间件。\n         * 例如：\n         * 浏览器端：var ws = new WebSocket(\"ws://127.0.0.1:5200/ws\");\n         * 那么Laravel中/ws路由就需要加上类似Authenticate的中间件。\n         * Route::get('/ws', function () {\n         *     // 响应状态码200的任意内容\n         *     return 'websocket';\n         * })->middleware(['auth']);\n         */\n        // $user = Auth::user();\n        // $userId = $user ? $user->id : 0; // 0 表示未登录的访客用户\n        $userId = mt_rand(1000, 10000);\n        // if (!$userId) {\n        //     // 未登录用户直接断开连接\n        //     $server->disconnect($request->fd);\n        //     return;\n        // }\n        $this->wsTable->set('uid:' . $userId, ['value' => $request->fd]);// 绑定uid到fd的映射\n        $this->wsTable->set('fd:' . $request->fd, ['value' => $userId]);// 绑定fd到uid的映射\n        $server->push($request->fd, \"Welcome to LaravelS #{$request->fd}\");\n    }\n    public function onMessage(Server $server, Frame $frame)\n    {\n        // 广播\n        foreach ($this->wsTable as $key => $row) {\n            if (strpos($key, 'uid:') === 0 && $server->isEstablished($row['value'])) {\n                $content = sprintf('Broadcast: new message \"%s\" from #%d', $frame->data, $frame->fd);\n                $server->push($row['value'], $content);\n            }\n        }\n    }\n    public function onClose(Server $server, $fd, $reactorId)\n    {\n        $uid = $this->wsTable->get('fd:' . $fd);\n        if ($uid !== false) {\n            $this->wsTable->del('uid:' . $uid['value']); // 解绑uid映射\n        }\n        $this->wsTable->del('fd:' . $fd);// 解绑fd映射\n        $server->push($fd, \"Goodbye #{$fd}\");\n    }\n}\n```\n\n## 多端口混合协议\n\n> 更多的信息，请参考[Swoole增加监听的端口](https://wiki.swoole.com/#/server/methods?id=addlistener)与[多端口混合协议](https://wiki.swoole.com/#/server/port)\n\n为了使我们的主服务器能支持除`HTTP`和`WebSocket`外的更多协议，我们引入了`Swoole`的`多端口混合协议`特性，在LaravelS中称为`Socket`。现在，可以很方便地在Laravel上构建`TCP/UDP`应用。\n\n1. 创建`Socket`处理类，继承`Hhxsv5\\LaravelS\\Swoole\\Socket\\{TcpSocket|UdpSocket|Http|WebSocket}`\n\n    ```php\n    namespace App\\Sockets;\n    use Hhxsv5\\LaravelS\\Swoole\\Socket\\TcpSocket;\n    use Swoole\\Server;\n    class TestTcpSocket extends TcpSocket\n    {\n        public function onConnect(Server $server, $fd, $reactorId)\n        {\n            \\Log::info('New TCP connection', [$fd]);\n            $server->send($fd, 'Welcome to LaravelS.');\n        }\n        public function onReceive(Server $server, $fd, $reactorId, $data)\n        {\n            \\Log::info('Received data', [$fd, $data]);\n            $server->send($fd, 'LaravelS: ' . $data);\n            if ($data === \"quit\\r\\n\") {\n                $server->send($fd, 'LaravelS: bye' . PHP_EOL);\n                $server->close($fd);\n            }\n        }\n        public function onClose(Server $server, $fd, $reactorId)\n        {\n            \\Log::info('Close TCP connection', [$fd]);\n            $server->send($fd, 'Goodbye');\n        }\n    }\n    ```\n\n    这些连接和主服务器上的HTTP/WebSocket连接共享`Worker`进程，因此可以在这些事件回调中使用LaravelS提供的`异步任务投递`、`SwooleTable`、Laravel提供的组件如`DB`、`Eloquent`等。同时，如果需要使用该协议端口的`Swoole\\Server\\Port`对象，只需要像如下代码一样访问`Socket`类的成员`swoolePort`即可。\n\n    ```php\n    public function onReceive(Server $server, $fd, $reactorId, $data)\n    {\n        $port = $this->swoolePort; // 获得`Swoole\\Server\\Port`对象\n    }\n    ```\n\n    ```php\n    namespace App\\Http\\Controllers;\n    class TestController extends Controller\n    {\n        public function test()\n        {\n            /**@var \\Swoole\\Http\\Server|\\Swoole\\WebSocket\\Server $swoole */\n            $swoole = app('swoole');\n            // $swoole->ports：遍历所有Port对象，https://wiki.swoole.com/#/server/properties?id=ports\n            $port = $swoole->ports[1]; // 获得`Swoole\\Server\\Port`对象，$port[0]是主服务器的端口\n            foreach ($port->connections as $fd) { // 遍历所有连接\n                // $swoole->send($fd, 'Send tcp message');\n                // if($swoole->isEstablished($fd)) {\n                //     $swoole->push($fd, 'Send websocket message');\n                // }\n            }\n        }\n    }\n    ```\n\n2. 注册套接字。\n\n    ```php\n    // 修改文件 config/laravels.php\n    // ...\n    'sockets' => [\n        [\n            'host'     => '127.0.0.1',\n            'port'     => 5291,\n            'type'     => SWOOLE_SOCK_TCP,// 支持的嵌套字类型：https://wiki.swoole.com/#/consts?id=socket-%e7%b1%bb%e5%9e%8b\n            'settings' => [// Swoole可用的配置项：https://wiki.swoole.com/#/server/port?id=%e5%8f%af%e9%80%89%e5%8f%82%e6%95%b0\n                'open_eof_check' => true,\n                'package_eof'    => \"\\r\\n\",\n            ],\n            'handler'  => \\App\\Sockets\\TestTcpSocket::class,\n            'enable'   => true, // 是否启用，默认为true\n        ],\n    ],\n    ```\n\n    关于心跳配置，只能设置在`主服务器`上，不能配置在`套接字`上，但`套接字`会继承`主服务器`的心跳配置。\n\n    对于TCP协议，`dispatch_mode`选项设为`1/3`时，底层会屏蔽`onConnect`/`onClose`事件，原因是这两种模式下无法保证`onConnect`/`onClose`/`onReceive`的顺序。如果需要用到这两个事件，请将`dispatch_mode`改为`2/4/5`，[参考](https://wiki.swoole.com/#/server/setting?id=dispatch_mode)。\n\n    ```php\n    'swoole' => [\n        //...\n        'dispatch_mode' => 2,\n        //...\n    ];\n    ```\n\n3. 测试。\n\n- TCP：`telnet 127.0.0.1 5291`\n\n- UDP：Linux下 `echo \"Hello LaravelS\" > /dev/udp/127.0.0.1/5292`\n\n4. 其他协议的注册示例。\n\n    - UDP\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5292,\n            'type'     => SWOOLE_SOCK_UDP,\n            'settings' => [\n                'open_eof_check' => true,\n                'package_eof'    => \"\\r\\n\",\n            ],\n            'handler'  => \\App\\Sockets\\TestUdpSocket::class,\n        ],\n    ],\n    ```\n\n    - Http\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5293,\n            'type'     => SWOOLE_SOCK_TCP,\n            'settings' => [\n                'open_http_protocol' => true,\n            ],\n            'handler'  => \\App\\Sockets\\TestHttp::class,\n        ],\n    ],\n    ```\n\n    - WebSocket：主服务器必须`开启WebSocket`，即需要将`websocket.enable`置为`true`。\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5294,\n            'type'     => SWOOLE_SOCK_TCP,\n            'settings' => [\n                'open_http_protocol'      => true,\n                'open_websocket_protocol' => true,\n            ],\n            'handler'  => \\App\\Sockets\\TestWebSocket::class,\n        ],\n    ],\n    ```\n\n\n## 协程\n\n> [Swoole原始文档](https://wiki.swoole.com/#/start/coroutine)\n\n- 警告：协程下代码执行顺序是乱序的，请求级的数据应该以协程ID隔离，但Laravel/Lumen中存在很多单例、静态属性，不同请求间的数据会相互影响，这是`不安全`的。比如数据库连接就是单例，同一个数据库连接共享同一个PDO资源，这在同步阻塞模式下是没问题的，但在异步协程下是不行的，每次查询需要创建不同的连接，维护不同的IO状态，这就需要用到连接池。\n\n- `不要`使用协程，仅`自定义进程`中可使用协程。\n\n## 自定义进程\n\n> 支持开发者创建一些特殊的工作进程，用于监控、上报或者其他特殊的任务，参考[addProcess](https://wiki.swoole.com/#/server/methods?id=addprocess)。\n\n1. 创建Proccess类，实现CustomProcessInterface接口。\n\n    ```php\n    namespace App\\Processes;\n    use App\\Tasks\\TestTask;\n    use Hhxsv5\\LaravelS\\Swoole\\Process\\CustomProcessInterface;\n    use Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\n    use Swoole\\Coroutine;\n    use Swoole\\Http\\Server;\n    use Swoole\\Process;\n    class TestProcess implements CustomProcessInterface\n    {\n        /**\n         * @var bool 退出标记，用于Reload更新\n         */\n        private static $quit = false;\n\n        public static function callback(Server $swoole, Process $process)\n        {\n            // 进程运行的代码，不能退出，一旦退出Manager进程会自动再次创建该进程。\n            while (!self::$quit) {\n                \\Log::info('Test process: running');\n                // sleep(1); // Swoole < 2.1\n                Coroutine::sleep(1); // Swoole>=2.1 已自动为callback()方法创建了协程并启用了协程Runtime，注意所使用的组件与协程兼容性，不兼容时可仅开启部分协程，如：\\Swoole\\Runtime::enableCoroutine(SWOOLE_HOOK_TCP | SWOOLE_HOOK_SLEEP | SWOOLE_HOOK_FILE);\n                // 自定义进程中也可以投递Task，但不支持Task的finish()回调。\n                // 注意：修改config/laravels.php，配置task_ipc_mode为1或2，参考 https://wiki.swoole.com/#/server/setting?id=task_ipc_mode\n                $ret = Task::deliver(new TestTask('task data'));\n                var_dump($ret);\n                // 上层会捕获callback中抛出的异常，并记录到Swoole日志，然后此进程会退出，3秒后Manager进程会重新创建进程，所以需要开发者自行try/catch捕获异常，避免频繁创建进程。\n                // throw new \\Exception('an exception');\n            }\n        }\n        // 要求：LaravelS >= v3.4.0 并且 callback() 必须是异步非阻塞程序。\n        public static function onReload(Server $swoole, Process $process)\n        {\n            // Stop the process...\n            // Then end process\n            \\Log::info('Test process: reloading');\n            self::$quit = true;\n            // $process->exit(0); // 强制退出进程\n        }\n        // 要求：LaravelS >= v3.7.4 并且 callback() 必须是异步非阻塞程序。\n        public static function onStop(Server $swoole, Process $process)\n        {\n            // Stop the process...\n            // Then end process\n            \\Log::info('Test process: stopping');\n            self::$quit = true;\n            // $process->exit(0); // 强制退出进程\n        }\n    }\n    ```\n\n2. 注册TestProcess。\n\n    ```php\n    // 修改文件 config/laravels.php\n    // ...\n    'processes' => [\n        'test' => [ // Key为进程名\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false, // 是否重定向输入输出\n            'pipe'     => 0,     // 管道类型：0不创建管道，1创建SOCK_STREAM类型管道，2创建SOCK_DGRAM类型管道\n            'enable'   => true,  // 是否启用，默认true\n            //'num'    => 3,  // 创建多个进程实例，默认为1\n            //'queue'    => [ // 启用消息队列作为进程间通信，配置空数组表示使用默认参数\n            //    'msg_key'  => 0,    // 消息队列的KEY，默认会使用ftok(__FILE__, 1)\n            //    'mode'     => 2,    // 通信模式，默认为2，表示争抢模式\n            //    'capacity' => 8192, // 单个消息长度，长度受限于操作系统内核参数的限制，默认为8192，最大不超过65536\n            //],\n            //'restart_interval' => 5, // 进程异常退出后需等待多少秒再重启，默认5秒\n        ],\n    ],\n    ```\n\n3. 注意：callback()方法不能退出，如果退出，Manager进程将会重新创建进程。\n\n4. 示例：向自定义进程中写数据。\n\n    ```php\n    // config/laravels.php\n    'processes' => [\n        'test' => [\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false,\n            'pipe'     => 1,\n        ],\n    ],\n    ```\n\n    ```php\n    // app/Processes/TestProcess.php\n    public static function callback(Server $swoole, Process $process)\n    {\n        while ($data = $process->read()) {\n            \\Log::info('TestProcess: read data', [$data]);\n            $process->write('TestProcess: ' . $data);\n        }\n    }\n    ```\n\n    ```php\n    // app/Http/Controllers/TestController.php\n    public function testProcessWrite()\n    {\n        /**@var \\Swoole\\Process[] $process */\n        $customProcesses = \\Hhxsv5\\LaravelS\\LaravelS::getCustomProcesses();\n        $process = $customProcesses['test'];\n        $process->write('TestController: write data' . time());\n        var_dump($process->read());\n    }\n    ```\n\n## 常用组件\n\n### Apollo\n> 启动`LaravelS`时会获取`Apollo`配置并写入到`.env`文件，同时会启动自定义进程`apollo`用于监听配置变更，当配置发生变更时自动`reload`。\n\n1. 启用Apollo组件：启动参数加上`--enable-apollo`以及Apollo的配置参数。\n    \n    ```bash\n    php bin/laravels start --enable-apollo --apollo-server=http://127.0.0.1:8080 --apollo-app-id=LARAVEL-S-TEST\n    ```\n\n2. 配置热更新（可选的）。\n\n    ```php\n    // 修改文件 config/laravels.php\n    'processes' => Hhxsv5\\LaravelS\\Components\\Apollo\\Process::getDefinition(),\n    ```\n\n    ```php\n    // 当存在其他自定义进程配置时\n    'processes' => [\n        'test' => [\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false,\n            'pipe'     => 1,\n        ],\n        // ...\n    ] + Hhxsv5\\LaravelS\\Components\\Apollo\\Process::getDefinition(),\n    ```\n\n3. 可用的参数列表。\n\n| 参数名 | 描述 | 默认值 | 示例 |\n| -------- | -------- | -------- | -------- |\n| apollo-server | Apollo服务器URL | - | --apollo-server=http://127.0.0.1:8080 |\n| apollo-app-id | Apollo应用ID | - | --apollo-app-id=LARAVEL-S-TEST |\n| apollo-namespaces | APP所属的命名空间，可指定多个 | application | --apollo-namespaces=application --apollo-namespaces=env |\n| apollo-cluster | APP所属的集群 | default | --apollo-cluster=default |\n| apollo-client-ip | 当前实例的IP，还可用于灰度发布 | 本机内网IP | --apollo-client-ip=10.2.1.83 |\n| apollo-pull-timeout | 拉取配置时的超时时间（秒） | 5 | --apollo-pull-timeout=5 |\n| apollo-backup-old-env | 更新配置文件`.env`时是否备份老的配置文件 | false | --apollo-backup-old-env |\n\n### Prometheus\n> 支持Prometheus监控与告警，Grafana可视化查看监控指标。请参考[Docker Compose](https://github.com/hhxsv5/docker)完成Prometheus与Grafana的环境搭建。\n\n1. 依赖[APCu >= 5.0.0](https://pecl.php.net/package/apcu)扩展，请先安装它 `pecl install apcu`。\n\n2. 拷贝配置文件`prometheus.php`到你的工程`config`目录。视情况修改配置。\n    ```bash\n    # 项目根目录下执行命令\n    cp vendor/hhxsv5/laravel-s/config/prometheus.php config/\n    ```\n    如果是`Lumen`工程，还需要在`bootstrap/app.php`中手动加载配置`$app->configure('prometheus');`。\n\n3. 配置`全局`中间件：`Hhxsv5\\LaravelS\\Components\\Prometheus\\RequestMiddleware::class`。为了尽可能精确地统计请求耗时，`RequestMiddleware`必须作为`第一个`全局中间件，需要放在其他中间件的前面。\n\n4. 注册 ServiceProvider：`Hhxsv5\\LaravelS\\Components\\Prometheus\\ServiceProvider::class`。\n\n5. 在`config/laravels.php`中配置 CollectorProcess 进程，用于定时采集 Swoole Worker/Task/Timer 进程的指标。\n    ```php\n    'processes' => Hhxsv5\\LaravelS\\Components\\Prometheus\\CollectorProcess::getDefinition(),\n    ```\n\n6. 创建路由，输出监控指标数据。\n    ```php\n    use Hhxsv5\\LaravelS\\Components\\Prometheus\\Exporter;\n\n    Route::get('/actuator/prometheus', function () {\n        $result = app(Exporter::class)->render();\n        return response($result, 200, ['Content-Type' => Exporter::REDNER_MIME_TYPE]);\n    });\n    ```\n\n7. 完成Prometheus的配置，启动Prometheus。\n    ```yml\n    global:\n      scrape_interval: 5s\n      scrape_timeout: 5s\n      evaluation_interval: 30s\n    scrape_configs:\n    - job_name: laravel-s-test\n      honor_timestamps: true\n      metrics_path: /actuator/prometheus\n      scheme: http\n      follow_redirects: true\n      static_configs:\n      - targets:\n        - 127.0.0.1:5200 # The ip and port of the monitored service\n    # Dynamically discovered using one of the supported service-discovery mechanisms\n    # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config\n    # - job_name: laravels-eureka\n    #   honor_timestamps: true\n    #   scrape_interval: 5s\n    #   metrics_path: /actuator/prometheus\n    #   scheme: http\n    #   follow_redirects: true\n      # eureka_sd_configs:\n      # - server: http://127.0.0.1:8080/eureka\n      #   follow_redirects: true\n      #   refresh_interval: 5s\n    ```\n\n8. 启动Grafana，然后导入[panel json](https://github.com/hhxsv5/laravel-s/tree/PHP-8.x/grafana-dashboard.json)。\n\n<img src=\"https://raw.githubusercontent.com/hhxsv5/laravel-s/PHP-8.x/grafana-dashboard.png\" height=\"800px\" alt=\"Grafana Dashboard\">\n\n## 其他特性\n\n### 配置Swoole事件\n\n支持的事件列表：\n\n| 事件 | 需实现的接口 | 发生时机 |\n| -------- | -------- | -------- |\n| ServerStart | Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStartInterface | 发生在Master进程启动时，`此事件中不应处理复杂的业务逻辑，只能做一些初始化的简单工作` |\n| ServerStop | Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStopInterface | 发生在Server正常退出时，`此事件中不能使用异步或协程相关的API` |\n| WorkerStart | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStartInterface | 发生在Worker/Task进程启动完成后 |\n| WorkerStop | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStopInterface | 发生在Worker/Task进程正常退出后 |\n| WorkerError | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerErrorInterface | 发生在Worker/Task进程发生异常或致命错误时 |\n\n1.创建事件处理类，实现相应的接口。\n```php\nnamespace App\\Events;\nuse Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStartInterface;\nuse Swoole\\Atomic;\nuse Swoole\\Http\\Server;\nclass ServerStartEvent implements ServerStartInterface\n{\n    public function __construct()\n    {\n    }\n    public function handle(Server $server)\n    {\n        // 初始化一个全局计数器(跨进程的可用)\n        $server->atomicCount = new Atomic(2233);\n\n        // 控制器中调用：app('swoole')->atomicCount->get();\n    }\n}\n```\n\n```php\nnamespace App\\Events;\nuse Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStartInterface;\nuse Swoole\\Http\\Server;\nclass WorkerStartEvent implements WorkerStartInterface\n{\n    public function __construct()\n    {\n    }\n    public function handle(Server $server, $workerId)\n    {\n        // 初始化一个数据库连接池对象\n        // DatabaseConnectionPool::init();\n    }\n}\n```\n\n2.配置。\n```php\n// 修改文件 config/laravels.php\n'event_handlers' => [\n    'ServerStart' => [\\App\\Events\\ServerStartEvent::class], // 按数组顺序触发事件\n    'WorkerStart' => [\\App\\Events\\WorkerStartEvent::class],\n],\n```\n\n### Serverless\n\n#### 阿里云函数计算\n> [函数计算官方文档](https://help.aliyun.com/product/50980.html)。\n\n1.修改`bootstrap/app.php`，设置storage目录。因为项目目录只读，`/tmp`目录才可读写。\n\n```php\n$app->useStoragePath(env('APP_STORAGE_PATH', '/tmp/storage'));\n```\n\n2.创建Shell脚本`laravels_bootstrap`，并赋予`可执行权限`。\n\n```bash\n#!/usr/bin/env bash\nset +e\n\n# 创建storage相关目录\nmkdir -p /tmp/storage/app/public\nmkdir -p /tmp/storage/framework/cache\nmkdir -p /tmp/storage/framework/sessions\nmkdir -p /tmp/storage/framework/testing\nmkdir -p /tmp/storage/framework/views\nmkdir -p /tmp/storage/logs\n\n# 设置环境变量APP_STORAGE_PATH，请确保与.env的APP_STORAGE_PATH一样\nexport APP_STORAGE_PATH=/tmp/storage\n\n# Start LaravelS\nphp bin/laravels start\n```\n\n3.配置`template.xml`。\n\n```xml\nROSTemplateFormatVersion: '2015-09-01'\nTransform: 'Aliyun::Serverless-2018-04-03'\nResources:\n  laravel-s-demo:\n    Type: 'Aliyun::Serverless::Service'\n    Properties:\n      Description: 'LaravelS Demo for Serverless'\n    fc-laravel-s:\n      Type: 'Aliyun::Serverless::Function'\n      Properties:\n        Handler: laravels.handler\n        Runtime: custom\n        MemorySize: 512\n        Timeout: 30\n        CodeUri: ./\n        InstanceConcurrency: 10\n        EnvironmentVariables:\n          BOOTSTRAP_FILE: laravels_bootstrap\n\n```\n\n## 注意事项\n\n### 单例问题\n\n- 传统FPM下，单例模式的对象的生命周期仅在每次请求中，请求开始=>实例化单例=>请求结束后=>单例对象资源回收。\n\n- Swoole Server下，所有单例对象会常驻于内存，这个时候单例对象的生命周期与FPM不同，请求开始=>实例化单例=>请求结束=>单例对象依旧保留，需要开发者自己维护单例的状态。\n\n- 常见的解决方案：\n\n    1. 写一个`XxxCleaner`清理器类来清理单例对象状态，此类需实现接口`Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\CleanerInterface`，然后注册到`laravels.php`的`cleaners`中。\n    \n    2. 用一个`中间件`来`重置`单例对象的状态。\n\n    3. 如果是以`ServiceProvider`注册的单例对象，可添加该`ServiceProvider`到`laravels.php`的`register_providers`中，这样每次请求会重新注册该`ServiceProvider`，重新实例化单例对象，[参考](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings-CN.md#register_providers)。\n\n### 清理器\n> [设置清理器](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings-CN.md#cleaners)。\n\n### 常见问题\n> [常见问题](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/KnownIssues-CN.md)：一揽子的已知问题和解决方案。\n\n### 调试方式\n\n- 记录日志；如想要在控制台输出，可使用`stderr`，Log::channel('stderr')->debug('debug message')。\n\n- [Laravel Dump Server](https://github.com/beyondcode/laravel-dump-server)（Laravel 5.7已默认集成）。\n\n### 读取请求\n应通过`Illuminate\\Http\\Request`对象来读取请求信息，$_ENV是可读取的，$_SERVER是部分可读的，`不能使用`$_GET、$_POST、$_FILES、$_COOKIE、$_REQUEST、$_SESSION、$GLOBALS。\n\n```php\npublic function form(\\Illuminate\\Http\\Request $request)\n{\n    $name = $request->input('name');\n    $all = $request->all();\n    $sessionId = $request->cookie('sessionId');\n    $photo = $request->file('photo');\n    // 调用getContent()来获取原始的POST body，而不能用file_get_contents('php://input')\n    $rawContent = $request->getContent();\n    //...\n}\n```\n\n### 输出响应\n推荐通过返回`Illuminate\\Http\\Response`对象来响应请求，兼容echo、vardump()、print_r()，`不能使用`函数 dd()、exit()、die()、header()、setcookie()、http_response_code()。\n\n```php\npublic function json()\n{\n    return response()->json(['time' => time()])->header('header1', 'value1')->withCookie('c1', 'v1');\n}\n```\n\n### 持久连接\n`单例的连接`将被常驻内存，建议开启`持久连接`，获得更好的性能。\n1. 数据库连接，连接断开后会自动重连\n\n```php\n// config/database.php\n'connections' => [\n    'my_conn' => [\n        'driver'    => 'mysql',\n        'host'      => env('DB_MY_CONN_HOST', 'localhost'),\n        'port'      => env('DB_MY_CONN_PORT', 3306),\n        'database'  => env('DB_MY_CONN_DATABASE', 'forge'),\n        'username'  => env('DB_MY_CONN_USERNAME', 'forge'),\n        'password'  => env('DB_MY_CONN_PASSWORD', ''),\n        'charset'   => 'utf8mb4',\n        'collation' => 'utf8mb4_unicode_ci',\n        'prefix'    => '',\n        'strict'    => false,\n        'options'   => [\n            // 开启持久连接\n            \\PDO::ATTR_PERSISTENT => true,\n        ],\n    ],\n],\n```\n\n2. Redis连接，连接断开后`不会立即`自动重连，会抛出一个关于连接断开的异常，下次会自动重连。需确保每次操作Redis前正确的`SELECT DB`。\n\n```php\n// config/database.php\n'redis' => [\n    'client' => env('REDIS_CLIENT', 'phpredis'), // 推荐使用phpredis，以获得更好的性能\n    'default' => [\n        'host'       => env('REDIS_HOST', 'localhost'),\n        'password'   => env('REDIS_PASSWORD', null),\n        'port'       => env('REDIS_PORT', 6379),\n        'database'   => 0,\n        'persistent' => true, // 开启持久连接\n    ],\n],\n```\n\n### 关于内存泄露\n\n- 避免使用全局变量，如一定要，请手动清理或重置。\n\n- 无限追加元素到全局变量、静态变量、单例，将导致内存溢出。\n\n    ```php\n    class Test\n    {\n        public static $array = [];\n        public static $string = '';\n    }\n\n    // 某控制器\n    public function test(Request $req)\n    {\n        // 内存溢出\n        Test::$array[] = $req->input('param1');\n        Test::$string .= $req->input('param2');\n    }\n    ```\n\n- 内存泄露的检测方法\n\n    1. 修改`config/laravels.php`：`worker_num=1, max_request=1000000`，测试完成后记得改回去；\n\n    2. 增加路由`/debug-memory-leak`，不设置任何`路由中间件`，用于观察`Worker`进程的内存变化情况；\n\n    ```php\n    Route::get('/debug-memory-leak', function () {\n        global $previous;\n        $current = memory_get_usage();\n        $stats = [\n            'prev_mem' => $previous,\n            'curr_mem' => $current,\n            'diff_mem' => $current - $previous,\n        ];\n        $previous = $current;\n        return $stats;\n    });\n    ```\n\n    3. 启动`LaravelS`，请求`/debug-memory-leak`，直到`diff_mem`小于或等于零；如果`diff_mem`一直大于零，说明`全局中间件`或`Laravel框架`可能存在内存泄露；\n    \n    4. 完成`步骤3`后，`交替`请求业务路由与`/debug-memory-leak`（建议使用`ab`/`wrk`对业务路由进行大量的请求），刚开始出现的内存增涨是正常现象。业务路由经过大量请求后，如果`diff_mem`一直大于零，并且`curr_mem`持续增大，则大概率存在内存泄露；如果`curr_mem`始终在一定范围内变化，没有持续变大，则大概率不存在内存泄露。\n\n    5. 如果始终没法解决，[max_request](https://wiki.swoole.com/#/server/setting?id=max_request)是最后兜底的方案。\n\n\n### Linux内核参数调整\n> [Linux内核参数调整](https://wiki.swoole.com/#/other/sysctl?id=%e5%86%85%e6%a0%b8%e5%8f%82%e6%95%b0%e8%b0%83%e6%95%b4)\n\n### 压力测试\n> [压力测试](https://wiki.swoole.com/wiki/page/62.html)\n\n## 用户与案例\n\n- `特别赞助商` [果酱社区](https://guojiang.club/?utm_source=laravels&utm_campaign=sponsor)：果酱社区是一个专业的会员制社区，这里提供高质量的技术资料，\n专注程序员成长，创业孵化，提供优秀且稳定的开源产品。\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/72538652-19bad000-38b9-11ea-844a-8f66a2c76185.jpeg\" height=\"300px\" alt=\"果酱社区\">\n\n- [KuCoin](https://www.kucoin.com/r/rf/QBSADJ41)：TOP5的加密货币交易所。\n\n- [医联](https://www.medlinker.com/)：WEB站、M站、APP、小程序的账户体系服务。\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46649457-af05e980-cbcb-11e8-94a1-b13d743d33fd.png\" height=\"300px\" alt=\"医联\">\n\n- [ITOK在线客服平台](http://demo.topitsm.com)：用户IT工单的处理跟踪及在线实时沟通。\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46649548-10c65380-cbcc-11e8-81e6-f4a8dca2eb2c.png\" height=\"300px\" alt=\"ITOK在线客服平台\">\n\n- [盟呱呱](http://mgg.yamecent.com)\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46648932-b3310780-cbc9-11e8-971e-ca26e3378507.png\" height=\"300px\" alt=\"盟呱呱\">\n\n- [WookTeam](https://github.com/kuaifan/wookteam)：WookTeam是一款轻量级的在线团队协作工具，提供各类文档工具、在线思维导图、在线流程图、项目管理、任务分发，知识库管理等工具。\n\n- 微信公众号-广州塔：活动、商城\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46649832-1a9c8680-cbcd-11e8-902e-978fa644f4d9.png\" height=\"300px\" alt=\"广州塔\">\n\n- 企鹅游戏盒子、明星新势力、以及小程序广告服务\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46649296-2c7d2a00-cbcb-11e8-94d3-bc12fc9566d6.jpg\" height=\"300px\" alt=\"企鹅游戏盒子\">\n\n- 小程序-修机匠手机上门维修服务：手机维修服务，提供上门服务，支持在线维修。\n    \n    <img src=\"https://user-images.githubusercontent.com/7278743/46941544-eda11580-d09d-11e8-8c3a-16c567655277.png\" height=\"300px\" alt=\"修机匠手机上门维修服务\">\n\n- 亿健APP\n\n## 其他选择\n\n- [swooletw/laravel-swoole](https://github.com/swooletw/laravel-swoole)\n\n## 赞助\n> 您的支持是我们坚持的最大动力。\n\n<img src=\"https://raw.githubusercontent.com/hhxsv5/laravel-s/PHP-8.x/sponsor.png\" height=\"300px\" alt=\"赞助\">\n\n### 感谢\n\n| 支持者 | 金额(元) |\n| --- | --- |\n| *思勇 | 18.88 |\n| *德国 | 18.88 |\n| 魂之挽歌 | 100 |\n| 小南瓜 | 10.01 |\n| *丁智 | 16.66 |\n| 匿名 | 20 |\n| 匿名 | 20 |\n| *洋 Blues | 18.88 |\n| *钧泽 Panda | 10.24 |\n| *翔 海贼王路飞 | 12 |\n| *跃 Axiong | 10 |\n| 落伽 | 10 |\n| 很胖的胖子 | 15 |\n| 霹格软件 | 18.88 |\n| Bygones | 18.88 |\n| *春 Flymoo | 100 |\n| 异乡人 | 20 |\n| only丶妳 | 100 |\n| 月殇 | 18.88 |\n| Shmily | 20 |\n| *俊 | 20 |\n| *哲 | 20 |\n| Alex | 20 |\n| X | 20 |\n| *洋 | 20 |\n| *洋 | 20 |\n| *强 | 50 |\n| Anthony | 18.88 |\n| *官龙 | 100 |\n| 0o飞舞o0木木 *科 | 288 |\n| *勇 | 66.66 |\n| 果酱社区 | 1076 |\n| *乾 | 18.88 |\n| *奥 | 8.88 |\n| 双木 | 20 |\n\n## License\n\n[MIT](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/LICENSE)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 59.9091796875,
          "content": "<div align=\"center\">\n    <img src=\"https://github.com/hhxsv5/laravel-s/raw/PHP-8.x/logo.svg\" alt=\"LaravelS Logo\" height=\"80\">\n     <p>\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md\">English Docs</a> |\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md\">中文文档</a>\n    </p>\n    <p>🚀 LaravelS is an out-of-the-box adapter between Laravel/Lumen and Swoole</p>\n    <p>\n        <a href=\"https://github.com/hhxsv5/laravel-s/releases\">\n            <img src=\"https://img.shields.io/github/release/hhxsv5/laravel-s.svg\" alt=\"Latest Version\">\n        </a>\n        <a href=\"https://www.php.net/\">\n            <img src=\"https://img.shields.io/packagist/php-v/hhxsv5/laravel-s\" alt=\"PHP Version\">\n        </a>\n        <a href=\"https://github.com/swoole/swoole-src\">\n            <img src=\"https://img.shields.io/badge/swoole-%3E=5.0.0-flat.svg\" alt=\"Swoole Version\">\n        </a>\n        <a href=\"https://packagist.org/packages/hhxsv5/laravel-s/stats\">\n            <img src=\"https://img.shields.io/packagist/dt/hhxsv5/laravel-s\" alt=\"Total Downloads\">\n        </a>\n        <a href=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/\">\n            <img src=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/badges/build.png?b=PHP-8.x\" alt=\"Build Status\">\n        </a>\n        <a href=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/\">\n            <img src=\"https://scrutinizer-ci.com/g/hhxsv5/laravel-s/badges/code-intelligence.svg?b=PHP-8.x\" alt=\"Code Intelligence Status\">\n        </a>\n        <a href=\"https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/LICENSE\">\n            <img src=\"https://img.shields.io/github/license/hhxsv5/laravel-s\" alt=\"License\">\n        </a>\n    </p>\n</div>\n\n---\n\n## Continuous Updates\n- *Please `Watch` this repository to get the latest updates.*\n\nTable of Contents\n=================\n\n* [Features](#features)\n* [Benchmark](#benchmark)\n* [Requirements](#requirements)\n* [Install](#install)\n* [Run](#run)\n* [Deploy](#deploy)\n* [Cooperate with Nginx (Recommended)](#cooperate-with-nginx-recommended)\n* [Cooperate with Apache](#cooperate-with-apache)\n* [Enable WebSocket server](#enable-websocket-server)\n* [Listen events](#listen-events)\n    * [System events](#system-events)\n    * [Customized asynchronous events](#customized-asynchronous-events)\n* [Asynchronous task queue](#asynchronous-task-queue)\n* [Millisecond cron job](#millisecond-cron-job)\n* [Automatically reload after modifying code](#automatically-reload-after-modifying-code)\n* [Get the instance of SwooleServer in your project](#get-the-instance-of-swooleserver-in-your-project)\n* [Use SwooleTable](#use-swooletable)\n* [Multi-port mixed protocol](#multi-port-mixed-protocol)\n* [Coroutine](#coroutine)\n* [Custom process](#custom-process)\n* [Common components](#common-components)\n    * [Apollo](#apollo)\n    * [Prometheus](#prometheus)\n* [Other features](#other-features)\n    * [Configure Swoole events](#configure-swoole-events)\n    * [Serverless](#serverless)\n* [Important notices](#important-notices)\n* [Users and cases](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README-CN.md#%E7%94%A8%E6%88%B7%E4%B8%8E%E6%A1%88%E4%BE%8B)\n* [Alternatives](#alternatives)\n* [Sponsor](#sponsor)\n* [License](#license)\n\n## Features\n\n- Built-in Http/[WebSocket](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#enable-websocket-server) server\n\n- [Multi-port mixed protocol](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#multi-port-mixed-protocol)\n\n- [Custom process](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#custom-process)\n\n- Memory resident\n\n- [Asynchronous event listening](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#customized-asynchronous-events)\n\n- [Asynchronous task queue](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#asynchronous-task-queue)\n\n- [Millisecond cron job](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#millisecond-cron-job)\n\n- [Common Components](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#common-components)\n\n- Gracefully reload\n\n- [Automatically reload after modifying code](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#automatically-reload-after-modifying-code)\n\n- Support Laravel/Lumen both, good compatibility\n\n- Simple & Out of the box\n\n## Benchmark\n\n- [Which is the fastest web framework?](https://github.com/the-benchmarker/web-frameworks)\n\n- [TechEmpower Framework Benchmarks](https://www.techempower.com/benchmarks/)\n\n## Requirements\n\n| Dependency | Requirement |\n| -------- | -------- |\n| [PHP](https://secure.php.net/) | `>=8.2` `Recommend 8.2` |\n| [Swoole](https://www.swoole.co.uk/) | `>=5.0` `Recommend 5.1.1` |\n| [Laravel](https://laravel.com/)/[Lumen](https://lumen.laravel.com/) | `>=10` `Recommend 10` |\n\n## Install\n\n1.Require package via [Composer](https://getcomposer.org/)([packagist](https://packagist.org/packages/hhxsv5/laravel-s)).\n```bash\n# PHP >=8.2\ncomposer require \"hhxsv5/laravel-s:~3.8.0\"\n\n# PHP >=5.5.9,<=7.4.33\n# composer require \"hhxsv5/laravel-s:~3.7.0\"\n\n# Make sure that your composer.lock file is under the VCS\n```\n\n2.Register service provider(pick one of two).\n\n- `Laravel`: in `config/app.php` file, `Laravel 5.5+ supports package discovery automatically, you should skip this step`\n    ```php\n    'providers' => [\n        //...\n        Hhxsv5\\LaravelS\\Illuminate\\LaravelSServiceProvider::class,\n    ],\n    ```\n\n- `Lumen`: in `bootstrap/app.php` file\n    ```php\n    $app->register(Hhxsv5\\LaravelS\\Illuminate\\LaravelSServiceProvider::class);\n    ```\n\n3.Publish configuration and binaries.\n> *After upgrading LaravelS, you need to republish; click [here](https://github.com/hhxsv5/laravel-s/releases) to see the change notes of each version.*\n\n```bash\nphp artisan laravels publish\n# Configuration: config/laravels.php\n# Binary: bin/laravels bin/fswatch bin/inotify\n```\n\n4.Change `config/laravels.php`: listen_ip, listen_port, refer [Settings](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings.md).\n\n5.Performance tuning\n\n- [Adjust kernel parameters](https://wiki.swoole.com/#/other/sysctl?id=%e5%86%85%e6%a0%b8%e5%8f%82%e6%95%b0%e8%b0%83%e6%95%b4)\n\n- [Number of Workers](https://www.swoole.co.uk/docs/modules/swoole-server/configuration#worker_num): LaravelS uses Swoole's `Synchronous IO` mode, the larger the `worker_num` setting, the better the concurrency performance, but it will cause more memory usage and process switching overhead. If one request takes 100ms, in order to provide 1000QPS concurrency, at least 100 Worker processes need to be configured. The calculation method is: worker_num = 1000QPS/(1s/1ms) = 100, so incremental pressure testing is needed to calculate the best` worker_num`.\n\n- [Number of Task Workers](https://www.swoole.co.uk/docs/modules/swoole-server/configuration#task_worker_num)\n\n## Run\n> `Please read the notices carefully before running`, [Important notices](https://github.com/hhxsv5/laravel-s#important-notices)(IMPORTANT).\n\n- Commands: `php bin/laravels {start|stop|restart|reload|info|help}`.\n\n| Command | Description |\n| --------- | --------- |\n| start | Start LaravelS, list the processes by \"*ps -ef&#124;grep laravels*\" |\n| stop | Stop LaravelS, and trigger the method `onStop` of Custom process |\n| restart | Restart LaravelS: Stop gracefully before starting; The service is `unavailable` until startup is complete |\n| reload | Reload all Task/Worker/Timer processes which contain your business codes, and trigger the method `onReload` of Custom process, CANNOT reload Master/Manger processes. After modifying `config/laravels.php`, you `only` have to call `restart` to restart |\n| info | Display component version information |\n| help | Display help information |\n\n- Boot options for the commands `start` and `restart`.\n\n| Option | Description |\n| --------- | --------- |\n| -d&#124;--daemonize | Run as a daemon, this option will override the `swoole.daemonize` setting in `laravels.php` |\n| -e&#124;--env | The environment the command should run under, such as `--env=testing` will use the configuration file `.env.testing` firstly, this feature requires Laravel 5.2+ |\n| -i&#124;--ignore | Ignore checking PID file of Master process |\n| -x&#124;--x-version | The version(branch) of the current project, stored in $_ENV/$_SERVER, access via `$_ENV['X_VERSION']` `$_SERVER['X_VERSION']` `$request->server->get('X_VERSION')` |\n\n- `Runtime` files: `start` will automatically execute `php artisan laravels config` and generate these files, developers generally don't need to pay attention to them, it's recommended to add them to `.gitignore`.\n\n| File | Description |\n| --------- | --------- |\n| storage/laravels.conf | LaravelS's `runtime` configuration file |\n| storage/laravels.pid | PID file of Master process |\n| storage/laravels-timer-process.pid | PID file of the Timer process |\n| storage/laravels-custom-processes.pid | PID file of all custom processes |\n\n## Deploy\n> It is recommended to supervise the main process through [Supervisord](http://supervisord.org/), the premise is without option `-d` and to set `swoole.daemonize` to `false`.\n\n```\n[program:laravel-s-test]\ndirectory=/var/www/laravel-s-test\ncommand=/usr/local/bin/php bin/laravels start -i\nnumprocs=1\nautostart=true\nautorestart=true\nstartretries=3\nuser=www-data\nredirect_stderr=true\nstdout_logfile=/var/log/supervisor/%(program_name)s.log\n```\n\n## Cooperate with Nginx (Recommended)\n> [Demo](https://github.com/hhxsv5/docker/blob/master/nginx/conf.d/laravels.conf).\n\n```nginx\ngzip on;\ngzip_min_length 1024;\ngzip_comp_level 2;\ngzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;\ngzip_vary on;\ngzip_disable \"msie6\";\nupstream swoole {\n    # Connect IP:Port\n    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;\n    # Connect UnixSocket Stream file, tips: put the socket file in the /dev/shm directory to get better performance\n    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.2:5200 backup;\n    keepalive 16;\n}\nserver {\n    listen 80;\n    # Don't forget to bind the host\n    server_name laravels.com;\n    root /yourpath/laravel-s-test/public;\n    access_log /yourpath/log/nginx/$server_name.access.log  main;\n    autoindex off;\n    index index.html index.htm;\n    # Nginx handles the static resources(recommend enabling gzip), LaravelS handles the dynamic resource.\n    location / {\n        try_files $uri @laravels;\n    }\n    # Response 404 directly when request the PHP file, to avoid exposing public/*.php\n    #location ~* \\.php$ {\n    #    return 404;\n    #}\n    location @laravels {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout 120s;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        # \"swoole\" is the upstream\n        proxy_pass http://swoole;\n    }\n}\n```\n\n## Cooperate with Apache\n\n```apache\nLoadModule proxy_module /yourpath/modules/mod_proxy.so\nLoadModule proxy_balancer_module /yourpath/modules/mod_proxy_balancer.so\nLoadModule lbmethod_byrequests_module /yourpath/modules/mod_lbmethod_byrequests.so\nLoadModule proxy_http_module /yourpath/modules/mod_proxy_http.so\nLoadModule slotmem_shm_module /yourpath/modules/mod_slotmem_shm.so\nLoadModule rewrite_module /yourpath/modules/mod_rewrite.so\nLoadModule remoteip_module /yourpath/modules/mod_remoteip.so\nLoadModule deflate_module /yourpath/modules/mod_deflate.so\n\n<IfModule deflate_module>\n    SetOutputFilter DEFLATE\n    DeflateCompressionLevel 2\n    AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml\n</IfModule>\n\n<VirtualHost *:80>\n    # Don't forget to bind the host\n    ServerName www.laravels.com\n    ServerAdmin hhxsv5@sina.com\n\n    DocumentRoot /yourpath/laravel-s-test/public;\n    DirectoryIndex index.html index.htm\n    <Directory \"/\">\n        AllowOverride None\n        Require all granted\n    </Directory>\n\n    RemoteIPHeader X-Forwarded-For\n\n    ProxyRequests Off\n    ProxyPreserveHost On\n    <Proxy balancer://laravels>  \n        BalancerMember http://192.168.1.1:5200 loadfactor=7\n        #BalancerMember http://192.168.1.2:5200 loadfactor=3\n        #BalancerMember http://192.168.1.3:5200 loadfactor=1 status=+H\n        ProxySet lbmethod=byrequests\n    </Proxy>\n    #ProxyPass / balancer://laravels/\n    #ProxyPassReverse / balancer://laravels/\n\n    # Apache handles the static resources, LaravelS handles the dynamic resource.\n    RewriteEngine On\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f\n    RewriteRule ^/(.*)$ balancer://laravels%{REQUEST_URI} [P,L]\n\n    ErrorLog ${APACHE_LOG_DIR}/www.laravels.com.error.log\n    CustomLog ${APACHE_LOG_DIR}/www.laravels.com.access.log combined\n</VirtualHost>\n```\n\n## Enable WebSocket server\n> The Listening address of WebSocket Sever is the same as Http Server.\n\n1.Create WebSocket Handler class, and implement interface `WebSocketHandlerInterface`.The instant is automatically instantiated when start, you do not need to manually create it.\n```php\nnamespace App\\Services;\nuse Hhxsv5\\LaravelS\\Swoole\\WebSocketHandlerInterface;\nuse Swoole\\Http\\Request;\nuse Swoole\\Http\\Response;\nuse Swoole\\WebSocket\\Frame;\nuse Swoole\\WebSocket\\Server;\n/**\n * @see https://www.swoole.co.uk/docs/modules/swoole-websocket-server\n */\nclass WebSocketService implements WebSocketHandlerInterface\n{\n    // Declare constructor without parameters\n    public function __construct()\n    {\n    }\n    // public function onHandShake(Request $request, Response $response)\n    // {\n           // Custom handshake: https://www.swoole.co.uk/docs/modules/swoole-websocket-server-on-handshake\n           // The onOpen event will be triggered automatically after a successful handshake\n    // }\n    public function onOpen(Server $server, Request $request)\n    {\n        // Before the onOpen event is triggered, the HTTP request to establish the WebSocket has passed the Laravel route,\n        // so Laravel's Request, Auth information are readable, Session is readable and writable, but only in the onOpen event.\n        // \\Log::info('New WebSocket connection', [$request->fd, request()->all(), session()->getId(), session('xxx'), session(['yyy' => time()])]);\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n        $server->push($request->fd, 'Welcome to LaravelS');\n    }\n    public function onMessage(Server $server, Frame $frame)\n    {\n        // \\Log::info('Received message', [$frame->fd, $frame->data, $frame->opcode, $frame->finish]);\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n        $server->push($frame->fd, date('Y-m-d H:i:s'));\n    }\n    public function onClose(Server $server, $fd, $reactorId)\n    {\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n    }\n}\n```\n\n2.Modify `config/laravels.php`.\n```php\n// ...\n'websocket'      => [\n    'enable'  => true, // Note: set enable to true\n    'handler' => \\App\\Services\\WebSocketService::class,\n],\n'swoole'         => [\n    //...\n    // Must set dispatch_mode in (2, 4, 5), see https://www.swoole.co.uk/docs/modules/swoole-server/configuration\n    'dispatch_mode' => 2,\n    //...\n],\n// ...\n```\n3.Use `SwooleTable` to bind FD & UserId, optional, [Swoole Table Demo](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/README.md#use-swooletable). Also you can use the other global storage services, like Redis/Memcached/MySQL, but be careful that FD will be possible conflicting between multiple `Swoole Servers`.\n\n4.Cooperate with Nginx (Recommended)\n> Refer [WebSocket Proxy](http://nginx.org/en/docs/http/websocket.html)\n\n```nginx\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\nupstream swoole {\n    # Connect IP:Port\n    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;\n    # Connect UnixSocket Stream file, tips: put the socket file in the /dev/shm directory to get better performance\n    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;\n    #server 192.168.1.2:5200 backup;\n    keepalive 16;\n}\nserver {\n    listen 80;\n    # Don't forget to bind the host\n    server_name laravels.com;\n    root /yourpath/laravel-s-test/public;\n    access_log /yourpath/log/nginx/$server_name.access.log  main;\n    autoindex off;\n    index index.html index.htm;\n    # Nginx handles the static resources(recommend enabling gzip), LaravelS handles the dynamic resource.\n    location / {\n        try_files $uri @laravels;\n    }\n    # Response 404 directly when request the PHP file, to avoid exposing public/*.php\n    #location ~* \\.php$ {\n    #    return 404;\n    #}\n    # Http and WebSocket are concomitant, Nginx identifies them by \"location\"\n    # !!! The location of WebSocket is \"/ws\"\n    # Javascript: var ws = new WebSocket(\"ws://laravels.com/ws\");\n    location =/ws {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout: Nginx will close the connection if the proxied server does not send data to Nginx in 60 seconds; At the same time, this close behavior is also affected by heartbeat setting of Swoole.\n        # proxy_read_timeout 60s;\n        proxy_http_version 1.1;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_pass http://swoole;\n    }\n    location @laravels {\n        # proxy_connect_timeout 60s;\n        # proxy_send_timeout 60s;\n        # proxy_read_timeout 60s;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header Server-Protocol $server_protocol;\n        proxy_set_header Server-Name $server_name;\n        proxy_set_header Server-Addr $server_addr;\n        proxy_set_header Server-Port $server_port;\n        proxy_pass http://swoole;\n    }\n}\n```\n\n5.Heartbeat setting\n\n- Heartbeat setting of Swoole\n\n    ```php\n    // config/laravels.php\n    'swoole' => [\n        //...\n        // All connections are traversed every 60 seconds. If a connection does not send any data to the server within 600 seconds, the connection will be forced to close.\n        'heartbeat_idle_time'      => 600,\n        'heartbeat_check_interval' => 60,\n        //...\n    ],\n    ```\n\n- Proxy read timeout of Nginx\n\n    ```nginx\n    # Nginx will close the connection if the proxied server does not send data to Nginx in 60 seconds\n    proxy_read_timeout 60s;\n    ```\n\n6.Push data in controller\n\n```php\nnamespace App\\Http\\Controllers;\nclass TestController extends Controller\n{\n    public function push()\n    {\n        $fd = 1; // Find fd by userId from a map [userId=>fd].\n        /**@var \\Swoole\\WebSocket\\Server $swoole */\n        $swoole = app('swoole');\n        $success = $swoole->push($fd, 'Push data to fd#1 in Controller');\n        var_dump($success);\n    }\n}\n```\n\n## Listen events\n\n### System events\n> Usually, you can reset/destroy some `global/static` variables, or change the current `Request/Response` object.\n\n- `laravels.received_request` After LaravelS parsed `Swoole\\Http\\Request` to `Illuminate\\Http\\Request`, before Laravel's Kernel handles this request.\n\n    ```php\n    // Edit file `app/Providers/EventServiceProvider.php`, add the following code into method `boot`\n    // If no variable $events, you can also call Facade \\Event::listen(). \n    $events->listen('laravels.received_request', function (\\Illuminate\\Http\\Request $req, $app) {\n        $req->query->set('get_key', 'hhxsv5');// Change query of request\n        $req->request->set('post_key', 'hhxsv5'); // Change post of request\n    });\n    ```\n\n- `laravels.generated_response` After Laravel's Kernel handled the request, before LaravelS parses `Illuminate\\Http\\Response` to `Swoole\\Http\\Response`.\n\n    ```php\n    // Edit file `app/Providers/EventServiceProvider.php`, add the following code into method `boot`\n    // If no variable $events, you can also call Facade \\Event::listen(). \n    $events->listen('laravels.generated_response', function (\\Illuminate\\Http\\Request $req, \\Symfony\\Component\\HttpFoundation\\Response $rsp, $app) {\n        $rsp->headers->set('header-key', 'hhxsv5');// Change header of response\n    });\n    ```\n\n### Customized asynchronous events\n> This feature depends on `AsyncTask` of `Swoole`, your need to set `swoole.task_worker_num` in `config/laravels.php` firstly. The performance of asynchronous event processing is influenced by number of Swoole task process, you need to set [task_worker_num](https://www.swoole.co.uk/docs/modules/swoole-server/configuration) appropriately.\n\n1.Create event class.\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\nclass TestEvent extends Event\n{\n    protected $listeners = [\n        // Listener list\n        TestListener1::class,\n        // TestListener2::class,\n    ];\n    private $data;\n    public function __construct($data)\n    {\n        $this->data = $data;\n    }\n    public function getData()\n    {\n        return $this->data;\n    }\n}\n```\n\n2.Create listener class.\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Listener;\nclass TestListener1 extends Listener\n{\n    public function handle(Event $event)\n    {\n        \\Log::info(__CLASS__ . ':handle start', [$event->getData()]);\n        sleep(2);// Simulate the slow codes\n        // Deliver task in CronJob, but NOT support callback finish() of task.\n        // Note: Modify task_ipc_mode to 1 or 2 in config/laravels.php, see https://www.swoole.co.uk/docs/modules/swoole-server/configuration\n        $ret = Task::deliver(new TestTask('task data'));\n        var_dump($ret);\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n        // return false; // Stop propagating this event to subsequent listeners\n    }\n}\n```\n\n3.Fire event.\n```php\n// Create instance of event and fire it, \"fire\" is asynchronous.\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Event;\n$event = new TestEvent('event data');\n// $event->delay(10); // Delay 10 seconds to fire event\n// $event->setTries(3); // When an error occurs, try 3 times in total\n$success = Event::fire($event);\nvar_dump($success);// Return true if sucess, otherwise false\n```\n\n## Asynchronous task queue\n> This feature depends on `AsyncTask` of `Swoole`, your need to set `swoole.task_worker_num` in `config/laravels.php` firstly. The performance of task processing is influenced by number of Swoole task process, you need to set [task_worker_num](https://www.swoole.co.uk/docs/modules/swoole-server/configuration) appropriately.\n\n1.Create task class.\n```php\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nclass TestTask extends Task\n{\n    private $data;\n    private $result;\n    public function __construct($data)\n    {\n        $this->data = $data;\n    }\n    // The logic of task handling, run in task process, CAN NOT deliver task\n    public function handle()\n    {\n        \\Log::info(__CLASS__ . ':handle start', [$this->data]);\n        sleep(2);// Simulate the slow codes\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n        $this->result = 'the result of ' . $this->data;\n    }\n    // Optional, finish event, the logic of after task handling, run in worker process, CAN deliver task \n    public function finish()\n    {\n        \\Log::info(__CLASS__ . ':finish start', [$this->result]);\n        Task::deliver(new TestTask2('task2 data')); // Deliver the other task\n    }\n}\n```\n\n2.Deliver task.\n```php\n// Create instance of TestTask and deliver it, \"deliver\" is asynchronous.\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\n$task = new TestTask('task data');\n// $task->delay(3);// delay 3 seconds to deliver task\n// $task->setTries(3); // When an error occurs, try 3 times in total\n$ret = Task::deliver($task);\nvar_dump($ret);// Return true if sucess, otherwise false\n```\n\n## Millisecond cron job\n> Wrapper cron job base on [Swoole's Millisecond Timer](https://www.swoole.co.uk/docs/modules/swoole-async-io), replace `Linux` `Crontab`.\n\n1.Create cron job class.\n```php\nnamespace App\\Jobs\\Timer;\nuse App\\Tasks\\TestTask;\nuse Swoole\\Coroutine;\nuse Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\nuse Hhxsv5\\LaravelS\\Swoole\\Timer\\CronJob;\nclass TestCronJob extends CronJob\n{\n    protected $i = 0;\n    // !!! The `interval` and `isImmediate` of cron job can be configured in two ways(pick one of two): one is to overload the corresponding method, and the other is to pass parameters when registering cron job.\n    // --- Override the corresponding method to return the configuration: begin\n    public function interval()\n    {\n        return 1000;// Run every 1000ms\n    }\n    public function isImmediate()\n    {\n        return false;// Whether to trigger `run` immediately after setting up\n    }\n    // --- Override the corresponding method to return the configuration: end\n    public function run()\n    {\n        \\Log::info(__METHOD__, ['start', $this->i, microtime(true)]);\n        // do something\n        // sleep(1); // Swoole < 2.1\n        Coroutine::sleep(1); // Swoole>=2.1 Coroutine will be automatically created for run().\n        $this->i++;\n        \\Log::info(__METHOD__, ['end', $this->i, microtime(true)]);\n\n        if ($this->i >= 10) { // Run 10 times only\n            \\Log::info(__METHOD__, ['stop', $this->i, microtime(true)]);\n            $this->stop(); // Stop this cron job, but it will run again after restart/reload.\n            // Deliver task in CronJob, but NOT support callback finish() of task.\n            // Note: Modify task_ipc_mode to 1 or 2 in config/laravels.php, see https://www.swoole.co.uk/docs/modules/swoole-server/configuration\n            $ret = Task::deliver(new TestTask('task data'));\n            var_dump($ret);\n        }\n        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.\n    }\n}\n```\n\n2.Register cron job.\n```php\n// Register cron jobs in file \"config/laravels.php\"\n[\n    // ...\n    'timer'          => [\n        'enable' => true, // Enable Timer\n        'jobs'   => [ // The list of cron job\n            // Enable LaravelScheduleJob to run `php artisan schedule:run` every 1 minute, replace Linux Crontab\n            // \\Hhxsv5\\LaravelS\\Illuminate\\LaravelScheduleJob::class,\n            // Two ways to configure parameters:\n            // [\\App\\Jobs\\Timer\\TestCronJob::class, [1000, true]], // Pass in parameters when registering\n            \\App\\Jobs\\Timer\\TestCronJob::class, // Override the corresponding method to return the configuration\n        ],\n        'max_wait_time' => 5, // Max waiting time of reloading\n        // Enable the global lock to ensure that only one instance starts the timer when deploying multiple instances. This feature depends on Redis, please see https://laravel.com/docs/7.x/redis\n        'global_lock'     => false,\n        'global_lock_key' => config('app.name', 'Laravel'),\n    ],\n    // ...\n];\n```\n\n3.Note: it will launch multiple timers when build the server cluster, so you need to make sure that launch one timer only to avoid running repetitive task.\n\n4.LaravelS `v3.4.0` starts to support the hot restart [Reload] `Timer` process. After LaravelS receives the `SIGUSR1` signal, it waits for `max_wait_time`(default 5) seconds to end the process, then the `Manager` process will pull up the `Timer` process again.\n\n5.If you only need to use `minute-level` scheduled tasks, it is recommended to enable `Hhxsv5\\LaravelS\\Illuminate\\LaravelScheduleJob` instead of Linux Crontab, so that you can follow the coding habits of [Laravel task scheduling](https://laravel.com/docs/7.x/scheduling) and configure `Kernel`.\n\n```php\n// app/Console/Kernel.php\nprotected function schedule(Schedule $schedule)\n{\n    // runInBackground() will start a new child process to execute the task. This is asynchronous and will not affect the execution timing of other tasks.\n    $schedule->command(TestCommand::class)->runInBackground()->everyMinute();\n}\n```\n\n## Automatically reload after modifying code\n\n- Via `inotify`, support Linux only.\n\n    1.Install [inotify](http://pecl.php.net/package/inotify) extension.\n\n    2.Turn on the switch in [Settings](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings.md#inotify_reloadenable).\n\n    3.Notice: Modify the file only in `Linux` to receive the file change events. It's recommended to use the latest Docker. [Vagrant Solution](https://github.com/mhallin/vagrant-notify-forwarder).\n\n- Via `fswatch`, support OS X/Linux/Windows.\n\n    1.Install [fswatch](https://github.com/emcrisostomo/fswatch).\n\n    2.Run command in your project root directory.\n\n    ```bash\n    # Watch current directory\n    ./bin/fswatch\n    # Watch app directory\n    ./bin/fswatch ./app\n    ```\n\n- Via `inotifywait`, support Linux.\n\n    1.Install [inotify-tools](https://github.com/rvoicilas/inotify-tools).\n\n    2.Run command in your project root directory.\n\n    ```bash\n    # Watch current directory\n    ./bin/inotify\n    # Watch app directory\n    ./bin/inotify ./app\n    ```\n\n- When the above methods does not work, the ultimate solution: set `max_request=1,worker_num=1`, so that `Worker` process will restart after processing a request. The performance of this method is very poor, `so only development environment use`.\n\n## Get the instance of `SwooleServer` in your project\n\n```php\n/**\n * $swoole is the instance of `Swoole\\WebSocket\\Server` if enable WebSocket server, otherwise `Swoole\\Http\\Server`\n * @var \\Swoole\\WebSocket\\Server|\\Swoole\\Http\\Server $swoole\n */\n$swoole = app('swoole');\nvar_dump($swoole->stats());\n$swoole->push($fd, 'Push WebSocket message');\n```\n\n## Use `SwooleTable`\n\n1.Define Table, support multiple.\n> All defined tables will be created before Swoole starting.\n\n```php\n// in file \"config/laravels.php\"\n[\n    // ...\n    'swoole_tables'  => [\n        // Scene：bind UserId & FD in WebSocket\n        'ws' => [// The Key is table name, will add suffix \"Table\" to avoid naming conflicts. Here defined a table named \"wsTable\"\n            'size'   => 102400,// The max size\n            'column' => [// Define the columns\n                ['name' => 'value', 'type' => \\Swoole\\Table::TYPE_INT, 'size' => 8],\n            ],\n        ],\n        //...Define the other tables\n    ],\n    // ...\n];\n```\n\n2.Access `Table`: all table instances will be bound on `SwooleServer`, access by `app('swoole')->xxxTable`.\n\n```php\nnamespace App\\Services;\nuse Hhxsv5\\LaravelS\\Swoole\\WebSocketHandlerInterface;\nuse Swoole\\Http\\Request;\nuse Swoole\\WebSocket\\Frame;\nuse Swoole\\WebSocket\\Server;\nclass WebSocketService implements WebSocketHandlerInterface\n{\n    /**@var \\Swoole\\Table $wsTable */\n    private $wsTable;\n    public function __construct()\n    {\n        $this->wsTable = app('swoole')->wsTable;\n    }\n    // Scene：bind UserId & FD in WebSocket\n    public function onOpen(Server $server, Request $request)\n    {\n        // var_dump(app('swoole') === $server);// The same instance\n        /**\n         * Get the currently logged in user\n         * This feature requires that the path to establish a WebSocket connection go through middleware such as Authenticate.\n         * E.g:\n         * Browser side: var ws = new WebSocket(\"ws://127.0.0.1:5200/ws\");\n         * Then the /ws route in Laravel needs to add the middleware like Authenticate.\n         * Route::get('/ws', function () {\n         *     // Respond any content with status code 200\n         *     return 'websocket';\n         * })->middleware(['auth']);\n         */\n        // $user = Auth::user();\n        // $userId = $user ? $user->id : 0; // 0 means a guest user who is not logged in\n        $userId = mt_rand(1000, 10000);\n        // if (!$userId) {\n        //     // Disconnect the connections of unlogged users\n        //     $server->disconnect($request->fd);\n        //     return;\n        // }\n        $this->wsTable->set('uid:' . $userId, ['value' => $request->fd]);// Bind map uid to fd\n        $this->wsTable->set('fd:' . $request->fd, ['value' => $userId]);// Bind map fd to uid\n        $server->push($request->fd, \"Welcome to LaravelS #{$request->fd}\");\n    }\n    public function onMessage(Server $server, Frame $frame)\n    {\n        // Broadcast\n        foreach ($this->wsTable as $key => $row) {\n            if (strpos($key, 'uid:') === 0 && $server->isEstablished($row['value'])) {\n                $content = sprintf('Broadcast: new message \"%s\" from #%d', $frame->data, $frame->fd);\n                $server->push($row['value'], $content);\n            }\n        }\n    }\n    public function onClose(Server $server, $fd, $reactorId)\n    {\n        $uid = $this->wsTable->get('fd:' . $fd);\n        if ($uid !== false) {\n            $this->wsTable->del('uid:' . $uid['value']); // Unbind uid map\n        }\n        $this->wsTable->del('fd:' . $fd);// Unbind fd map\n        $server->push($fd, \"Goodbye #{$fd}\");\n    }\n}\n```\n\n## Multi-port mixed protocol\n\n> For more information, please refer to [Swoole Server AddListener](https://www.swoole.co.uk/docs/modules/swoole-server-methods#swoole_server-addlistener)\n\nTo make our main server support more protocols not just Http and WebSocket, we bring the feature `multi-port mixed protocol` of Swoole in LaravelS and name it `Socket`. Now, you can build `TCP/UDP` applications easily on top of Laravel.\n\n1. Create `Socket` handler class, and extend `Hhxsv5\\LaravelS\\Swoole\\Socket\\{TcpSocket|UdpSocket|Http|WebSocket}`.\n\n    ```php\n    namespace App\\Sockets;\n    use Hhxsv5\\LaravelS\\Swoole\\Socket\\TcpSocket;\n    use Swoole\\Server;\n    class TestTcpSocket extends TcpSocket\n    {\n        public function onConnect(Server $server, $fd, $reactorId)\n        {\n            \\Log::info('New TCP connection', [$fd]);\n            $server->send($fd, 'Welcome to LaravelS.');\n        }\n        public function onReceive(Server $server, $fd, $reactorId, $data)\n        {\n            \\Log::info('Received data', [$fd, $data]);\n            $server->send($fd, 'LaravelS: ' . $data);\n            if ($data === \"quit\\r\\n\") {\n                $server->send($fd, 'LaravelS: bye' . PHP_EOL);\n                $server->close($fd);\n            }\n        }\n        public function onClose(Server $server, $fd, $reactorId)\n        {\n            \\Log::info('Close TCP connection', [$fd]);\n            $server->send($fd, 'Goodbye');\n        }\n    }\n    ```\n\n    These `Socket` connections share the same worker processes with your `HTTP`/`WebSocket` connections. So it won't be a problem at all if you want to deliver tasks, use `SwooleTable`, even Laravel components such as DB, Eloquent and so on.\n    At the same time, you can access `Swoole\\Server\\Port` object directly by member property `swoolePort`.\n\n    ```php\n    public function onReceive(Server $server, $fd, $reactorId, $data)\n    {\n        $port = $this->swoolePort; // Get the `Swoole\\Server\\Port` object\n    }\n    ```\n\n    ```php\n    namespace App\\Http\\Controllers;\n    class TestController extends Controller\n    {\n        public function test()\n        {\n            /**@var \\Swoole\\Http\\Server|\\Swoole\\WebSocket\\Server $swoole */\n            $swoole = app('swoole');\n            // $swoole->ports: Traverse all Port objects, https://www.swoole.co.uk/docs/modules/swoole-server/multiple-ports\n            $port = $swoole->ports[0]; // Get the `Swoole\\Server\\Port` object, $port[0] is the port of the main server\n            foreach ($port->connections as $fd) { // Traverse all connections\n                // $swoole->send($fd, 'Send tcp message');\n                // if($swoole->isEstablished($fd)) {\n                //     $swoole->push($fd, 'Send websocket message');\n                // }\n            }\n        }\n    }\n    ```\n\n2. Register Sockets.\n\n    ```php\n    // Edit `config/laravels.php`\n    //...\n    'sockets' => [\n        [\n            'host'     => '127.0.0.1',\n            'port'     => 5291,\n            'type'     => SWOOLE_SOCK_TCP,// Socket type: SWOOLE_SOCK_TCP/SWOOLE_SOCK_TCP6/SWOOLE_SOCK_UDP/SWOOLE_SOCK_UDP6/SWOOLE_UNIX_DGRAM/SWOOLE_UNIX_STREAM\n            'settings' => [// Swoole settings：https://www.swoole.co.uk/docs/modules/swoole-server-methods#swoole_server-addlistener\n                'open_eof_check' => true,\n                'package_eof'    => \"\\r\\n\",\n            ],\n            'handler'  => \\App\\Sockets\\TestTcpSocket::class,\n            'enable'   => true, // whether to enable, default true\n        ],\n    ],\n    ```\n\n    About the heartbeat configuration, it can only be set on the `main server` and cannot be configured on `Socket`, but the `Socket` inherits the heartbeat configuration of the `main server`.\n\n    For TCP socket, `onConnect` and `onClose` events will be blocked when `dispatch_mode` of Swoole is `1/3`, so if you want to unblock these two events please set `dispatch_mode` to `2/4/5`.\n\n    ```php\n    'swoole' => [\n        //...\n        'dispatch_mode' => 2,\n        //...\n    ];\n    ```\n\n3. Test.\n\n- TCP: `telnet 127.0.0.1 5291`\n\n- UDP: [Linux] `echo \"Hello LaravelS\" > /dev/udp/127.0.0.1/5292`\n\n4. Register example of other protocols.\n\n    - UDP\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5292,\n            'type'     => SWOOLE_SOCK_UDP,\n            'settings' => [\n                'open_eof_check' => true,\n                'package_eof'    => \"\\r\\n\",\n            ],\n            'handler'  => \\App\\Sockets\\TestUdpSocket::class,\n        ],\n    ],\n    ```\n\n    - Http\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5293,\n            'type'     => SWOOLE_SOCK_TCP,\n            'settings' => [\n                'open_http_protocol' => true,\n            ],\n            'handler'  => \\App\\Sockets\\TestHttp::class,\n        ],\n    ],\n    ```\n\n    - WebSocket: The main server must `turn on WebSocket`, that is, set `websocket.enable` to `true`.\n    ```php\n    'sockets' => [\n        [\n            'host'     => '0.0.0.0',\n            'port'     => 5294,\n            'type'     => SWOOLE_SOCK_TCP,\n            'settings' => [\n                'open_http_protocol'      => true,\n                'open_websocket_protocol' => true,\n            ],\n            'handler'  => \\App\\Sockets\\TestWebSocket::class,\n        ],\n    ],\n    ```\n\n## Coroutine\n\n> [Swoole Coroutine](https://www.swoole.co.uk/coroutine)\n\n- Warning: The order of code execution in the coroutine is out of order. The data of the request level should be isolated by the coroutine ID. However, there are many singleton and static attributes in Laravel/Lumen, the data between different requests will affect each other, it's `Unsafe`. For example, the database connection is a singleton, the same database connection shares the same PDO resource. This is fine in the synchronous blocking mode, but it does not work in the asynchronous coroutine mode. Each query needs to create different connections and maintain IO state of different connections, which requires a connection pool.\n\n- `DO NOT` enable the coroutine, only the custom process can use the coroutine.\n\n## Custom process\n\n> Support developers to create special work processes for monitoring, reporting, or other special tasks. Refer [addProcess](https://www.swoole.co.uk/docs/modules/swoole-server-methods#swoole_server-addprocess).\n\n1. Create Proccess class, implements CustomProcessInterface.\n\n    ```php\n    namespace App\\Processes;\n    use App\\Tasks\\TestTask;\n    use Hhxsv5\\LaravelS\\Swoole\\Process\\CustomProcessInterface;\n    use Hhxsv5\\LaravelS\\Swoole\\Task\\Task;\n    use Swoole\\Coroutine;\n    use Swoole\\Http\\Server;\n    use Swoole\\Process;\n    class TestProcess implements CustomProcessInterface\n    {\n        /**\n         * @var bool Quit tag for Reload updates\n         */\n        private static $quit = false;\n\n        public static function callback(Server $swoole, Process $process)\n        {\n            // The callback method cannot exit. Once exited, Manager process will automatically create the process \n            while (!self::$quit) {\n                \\Log::info('Test process: running');\n                // sleep(1); // Swoole < 2.1\n                Coroutine::sleep(1); // Swoole>=2.1: Coroutine & Runtime will be automatically enabled for callback(). Pay attention to the compatibility between the components used and the coroutines. If they are not compatible, only some coroutines can be enabled, such as: \\Swoole\\Runtime::enableCoroutine(SWOOLE_HOOK_TCP | SWOOLE_HOOK_SLEEP | SWOOLE_HOOK_FILE);\n                 // Deliver task in custom process, but NOT support callback finish() of task.\n                // Note: Modify task_ipc_mode to 1 or 2 in config/laravels.php, see https://www.swoole.co.uk/docs/modules/swoole-server/configuration\n                $ret = Task::deliver(new TestTask('task data'));\n                var_dump($ret);\n                // The upper layer will catch the exception thrown in the callback and record it in the Swoole log, and then this process will exit. The Manager process will re-create the process after 3 seconds, so developers need to try/catch to catch the exception by themselves to avoid frequent process creation.\n                // throw new \\Exception('an exception');\n            }\n        }\n        // Requirements: LaravelS >= v3.4.0 & callback() must be async non-blocking program.\n        public static function onReload(Server $swoole, Process $process)\n        {\n            // Stop the process...\n            // Then end process\n            \\Log::info('Test process: reloading');\n            self::$quit = true;\n            // $process->exit(0); // Force exit process\n        }\n        // Requirements: LaravelS >= v3.7.4 & callback() must be async non-blocking program.\n        public static function onStop(Server $swoole, Process $process)\n        {\n            // Stop the process...\n            // Then end process\n            \\Log::info('Test process: stopping');\n            self::$quit = true;\n            // $process->exit(0); // Force exit process\n        }\n    }\n    ```\n\n2. Register TestProcess.\n\n    ```php\n    // Edit `config/laravels.php`\n    // ...\n    'processes' => [\n        'test' => [ // Key name is process name\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false, // Whether redirect stdin/stdout, true or false\n            'pipe'     => 0,     // The type of pipeline, 0: no pipeline 1: SOCK_STREAM 2: SOCK_DGRAM\n            'enable'   => true,  // Whether to enable, default true\n            //'num'    => 3   // To create multiple processes of this class, default is 1\n            //'queue'    => [ // Enable message queue as inter-process communication, configure empty array means use default parameters\n            //    'msg_key'  => 0,    // The key of the message queue. Default: ftok(__FILE__, 1).\n            //    'mode'     => 2,    // Communication mode, default is 2, which means contention mode\n            //    'capacity' => 8192, // The length of a single message, is limited by the operating system kernel parameters. The default is 8192, and the maximum is 65536\n            //],\n            //'restart_interval' => 5, // After the process exits abnormally, how many seconds to wait before restarting the process, default 5 seconds\n        ],\n    ],\n    ```\n\n3. Note: The callback() cannot quit. If quit, the Manager process will re-create the process.\n\n4. Example: Write data to a custom process.\n\n    ```php\n    // config/laravels.php\n    'processes' => [\n        'test' => [\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false,\n            'pipe'     => 1,\n        ],\n    ],\n    ```\n\n    ```php\n    // app/Processes/TestProcess.php\n    public static function callback(Server $swoole, Process $process)\n    {\n        while ($data = $process->read()) {\n            \\Log::info('TestProcess: read data', [$data]);\n            $process->write('TestProcess: ' . $data);\n        }\n    }\n    ```\n\n    ```php\n    // app/Http/Controllers/TestController.php\n    public function testProcessWrite()\n    {\n        /**@var \\Swoole\\Process[] $process */\n        $customProcesses = \\Hhxsv5\\LaravelS\\LaravelS::getCustomProcesses();\n        $process = $customProcesses['test'];\n        $process->write('TestController: write data' . time());\n        var_dump($process->read());\n    }\n    ```\n\n## Common components\n\n### Apollo\n> `LaravelS` will pull the `Apollo` configuration and write it to the `.env` file when starting. At the same time, `LaravelS` will start the custom process `apollo` to monitor the configuration and automatically `reload` when the configuration changes.\n\n1. Enable Apollo: add `--enable-apollo` and Apollo parameters to the startup parameters.\n    \n    ```bash\n    php bin/laravels start --enable-apollo --apollo-server=http://127.0.0.1:8080 --apollo-app-id=LARAVEL-S-TEST\n    ```\n\n2. Support hot updates(optional).\n\n    ```php\n    // Edit `config/laravels.php`\n    'processes' => Hhxsv5\\LaravelS\\Components\\Apollo\\Process::getDefinition(),\n    ```\n\n    ```php\n    // When there are other custom process configurations\n    'processes' => [\n        'test' => [\n            'class'    => \\App\\Processes\\TestProcess::class,\n            'redirect' => false,\n            'pipe'     => 1,\n        ],\n        // ...\n    ] + Hhxsv5\\LaravelS\\Components\\Apollo\\Process::getDefinition(),\n    ```\n\n3. List of available parameters.\n\n| Parameter | Description | Default | Demo |\n| -------- | -------- | -------- | -------- |\n| apollo-server | Apollo server URL | - | --apollo-server=http://127.0.0.1:8080 |\n| apollo-app-id | Apollo APP ID | - | --apollo-app-id=LARAVEL-S-TEST |\n| apollo-namespaces | The namespace to which the APP belongs, support specify the multiple | application | --apollo-namespaces=application --apollo-namespaces=env |\n| apollo-cluster | The cluster to which the APP belongs | default | --apollo-cluster=default |\n| apollo-client-ip | IP of current instance, can also be used for grayscale publishing | Local intranet IP | --apollo-client-ip=10.2.1.83 |\n| apollo-pull-timeout | Timeout time(seconds) when pulling configuration | 5 | --apollo-pull-timeout=5 |\n| apollo-backup-old-env | Whether to backup the old configuration file when updating the configuration file `.env` | false | --apollo-backup-old-env |\n\n### Prometheus\n> Support Prometheus monitoring and alarm, Grafana visually view monitoring metrics. Please refer to [Docker Compose](https://github.com/hhxsv5/docker) for the environment construction of Prometheus and Grafana.\n\n1. Require extension [APCu >= 5.0.0](https://pecl.php.net/package/apcu), please install it by `pecl install apcu`.\n\n2. Copy the configuration file `prometheus.php` to the `config` directory of your project. Modify the configuration as appropriate.\n    ```bash\n    # Execute commands in the project root directory\n    cp vendor/hhxsv5/laravel-s/config/prometheus.php config/\n    ```\n    If your project is `Lumen`, you also need to manually load the configuration `$app->configure('prometheus');` in `bootstrap/app.php`.\n\n3. Configure `global` middleware: `Hhxsv5\\LaravelS\\Components\\Prometheus\\RequestMiddleware::class`. In order to count the request time consumption as accurately as possible, `RequestMiddleware` must be the `first` global middleware, which needs to be placed in front of other middleware.\n\n4. Register ServiceProvider: `Hhxsv5\\LaravelS\\Components\\Prometheus\\ServiceProvider::class`.\n\n5. Configure the CollectorProcess in `config/laravels.php` to collect the metrics of Swoole Worker/Task/Timer processes regularly.\n    ```php\n    'processes' => Hhxsv5\\LaravelS\\Components\\Prometheus\\CollectorProcess::getDefinition(),\n    ```\n\n6. Create the route to output metrics.\n    ```php\n    use Hhxsv5\\LaravelS\\Components\\Prometheus\\Exporter;\n\n    Route::get('/actuator/prometheus', function () {\n        $result = app(Exporter::class)->render();\n        return response($result, 200, ['Content-Type' => Exporter::REDNER_MIME_TYPE]);\n    });\n    ```\n\n7. Complete the configuration of Prometheus and start it.\n    ```yml\n    global:\n      scrape_interval: 5s\n      scrape_timeout: 5s\n      evaluation_interval: 30s\n    scrape_configs:\n    - job_name: laravel-s-test\n      honor_timestamps: true\n      metrics_path: /actuator/prometheus\n      scheme: http\n      follow_redirects: true\n      static_configs:\n      - targets:\n        - 127.0.0.1:5200 # The ip and port of the monitored service\n    # Dynamically discovered using one of the supported service-discovery mechanisms\n    # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config\n    # - job_name: laravels-eureka\n    #   honor_timestamps: true\n    #   scrape_interval: 5s\n    #   metrics_path: /actuator/prometheus\n    #   scheme: http\n    #   follow_redirects: true\n      # eureka_sd_configs:\n      # - server: http://127.0.0.1:8080/eureka\n      #   follow_redirects: true\n      #   refresh_interval: 5s\n    ```\n\n8. Start Grafana, then import [panel json](https://github.com/hhxsv5/laravel-s/tree/PHP-8.x/grafana-dashboard.json).\n\n<img src=\"https://raw.githubusercontent.com/hhxsv5/laravel-s/PHP-8.x/grafana-dashboard.png\" height=\"800px\" alt=\"Grafana Dashboard\">\n\n## Other features\n\n### Configure Swoole events\n\nSupported events:\n\n| Event | Interface | When happened |\n| -------- | -------- | -------- |\n| ServerStart | Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStartInterface | Occurs when the Master process is starting, `this event should not handle complex business logic, and can only do some simple work of initialization`. |\n| ServerStop | Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStopInterface | Occurs when the server exits normally, `CANNOT use async or coroutine related APIs in this event`. |\n| WorkerStart | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStartInterface | Occurs after the Worker/Task process is started, and the Laravel initialization has been completed. |\n| WorkerStop | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStopInterface | Occurs after the Worker/Task process exits normally |\n| WorkerError | Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerErrorInterface | Occurs when an exception or fatal error occurs in the Worker/Task process |\n\n1.Create an event class to implement the corresponding interface.\n```php\nnamespace App\\Events;\nuse Hhxsv5\\LaravelS\\Swoole\\Events\\ServerStartInterface;\nuse Swoole\\Atomic;\nuse Swoole\\Http\\Server;\nclass ServerStartEvent implements ServerStartInterface\n{\n    public function __construct()\n    {\n    }\n    public function handle(Server $server)\n    {\n        // Initialize a global counter (available across processes)\n        $server->atomicCount = new Atomic(2233);\n\n        // Invoked in controller: app('swoole')->atomicCount->get();\n    }\n}\n```\n\n```php\nnamespace App\\Events;\nuse Hhxsv5\\LaravelS\\Swoole\\Events\\WorkerStartInterface;\nuse Swoole\\Http\\Server;\nclass WorkerStartEvent implements WorkerStartInterface\n{\n    public function __construct()\n    {\n    }\n    public function handle(Server $server, $workerId)\n    {\n        // Initialize a database connection pool\n        // DatabaseConnectionPool::init();\n    }\n}\n```\n2.Configuration.\n```php\n// Edit `config/laravels.php`\n'event_handlers' => [\n    'ServerStart' => [\\App\\Events\\ServerStartEvent::class], // Trigger events in array order\n    'WorkerStart' => [\\App\\Events\\WorkerStartEvent::class],\n],\n```\n\n### Serverless\n\n#### Alibaba Cloud Function Compute\n> [Function Compute](https://www.alibabacloud.com/help/product/50980.htm).\n\n1.Modify `bootstrap/app.php` and set the storage directory. Because the project directory is read-only, the `/tmp` directory can only be read and written.\n\n```php\n$app->useStoragePath(env('APP_STORAGE_PATH', '/tmp/storage'));\n```\n\n2.Create a shell script `laravels_bootstrap` and grant `executable permission`.\n\n```bash\n#!/usr/bin/env bash\nset +e\n\n# Create storage-related directories\nmkdir -p /tmp/storage/app/public\nmkdir -p /tmp/storage/framework/cache\nmkdir -p /tmp/storage/framework/sessions\nmkdir -p /tmp/storage/framework/testing\nmkdir -p /tmp/storage/framework/views\nmkdir -p /tmp/storage/logs\n\n# Set the environment variable APP_STORAGE_PATH, please make sure it's the same as APP_STORAGE_PATH in .env\nexport APP_STORAGE_PATH=/tmp/storage\n\n# Start LaravelS\nphp bin/laravels start\n```\n\n3.Configure `template.xml`.\n\n```xml\nROSTemplateFormatVersion: '2015-09-01'\nTransform: 'Aliyun::Serverless-2018-04-03'\nResources:\n  laravel-s-demo:\n    Type: 'Aliyun::Serverless::Service'\n    Properties:\n      Description: 'LaravelS Demo for Serverless'\n    fc-laravel-s:\n      Type: 'Aliyun::Serverless::Function'\n      Properties:\n        Handler: laravels.handler\n        Runtime: custom\n        MemorySize: 512\n        Timeout: 30\n        CodeUri: ./\n        InstanceConcurrency: 10\n        EnvironmentVariables:\n          BOOTSTRAP_FILE: laravels_bootstrap\n\n```\n\n## Important notices\n\n### Singleton Issue\n\n- Under FPM mode, singleton instances will be instantiated and recycled in every request, request start=>instantiate instance=>request end=>recycled instance.\n\n- Under Swoole Server, All singleton instances will be held in memory, different lifetime from FPM, request start=>instantiate instance=>request end=>do not recycle singleton instance. So need developer to maintain status of singleton instances in every request.\n\n- Common solutions:\n\n    1. Write a `XxxCleaner` class to clean up the singleton object state. This class implements the interface `Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\CleanerInterface` and then registers it in `cleaners` of `laravels.php`.\n\n    2. `Reset` status of singleton instances by `Middleware`.\n\n    1. Re-register `ServiceProvider`, add `XxxServiceProvider` into `register_providers` of file `laravels.php`. So that reinitialize singleton instances in every request [Refer](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings.md#register_providers).\n\n### Cleaners\n> [Configuration cleaners](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/Settings.md#cleaners).\n\n### Known issues\n> [Known issues](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/KnownIssues.md): a package of known issues and solutions.\n\n### Debugging method\n\n- Logging; if you want to output to the console, you can use `stderr`, Log::channel('stderr')->debug('debug message').\n\n- [Laravel Dump Server](https://github.com/beyondcode/laravel-dump-server)(Laravel 5.7 has been integrated by default).\n\n### Read request\nRead request by `Illuminate\\Http\\Request` Object, $_ENV is readable, $_SERVER is partially readable, `CANNOT USE` $_GET/$_POST/$_FILES/$_COOKIE/$_REQUEST/$_SESSION/$GLOBALS.\n\n```php\npublic function form(\\Illuminate\\Http\\Request $request)\n{\n    $name = $request->input('name');\n    $all = $request->all();\n    $sessionId = $request->cookie('sessionId');\n    $photo = $request->file('photo');\n    // Call getContent() to get the raw POST body, instead of file_get_contents('php://input')\n    $rawContent = $request->getContent();\n    //...\n}\n```\n\n### Output response\nRespond by `Illuminate\\Http\\Response` Object, compatible with echo/vardump()/print_r()，`CANNOT USE` functions dd()/exit()/die()/header()/setcookie()/http_response_code().\n\n```php\npublic function json()\n{\n    return response()->json(['time' => time()])->header('header1', 'value1')->withCookie('c1', 'v1');\n}\n```\n\n### Persistent connection\n`Singleton connection` will be resident in memory, it is recommended to turn on `persistent connection` for better performance.\n1. Database connection, it `will` reconnect automatically `immediately` after disconnect.\n\n```php\n// config/database.php\n'connections' => [\n    'my_conn' => [\n        'driver'    => 'mysql',\n        'host'      => env('DB_MY_CONN_HOST', 'localhost'),\n        'port'      => env('DB_MY_CONN_PORT', 3306),\n        'database'  => env('DB_MY_CONN_DATABASE', 'forge'),\n        'username'  => env('DB_MY_CONN_USERNAME', 'forge'),\n        'password'  => env('DB_MY_CONN_PASSWORD', ''),\n        'charset'   => 'utf8mb4',\n        'collation' => 'utf8mb4_unicode_ci',\n        'prefix'    => '',\n        'strict'    => false,\n        'options'   => [\n            // Enable persistent connection\n            \\PDO::ATTR_PERSISTENT => true,\n        ],\n    ],\n],\n```\n\n2. Redis connection, it `won't` reconnect automatically `immediately` after disconnect, and will throw an exception about lost connection, reconnect next time. You need to make sure that `SELECT DB` correctly before operating Redis every time.\n\n```php\n// config/database.php\n'redis' => [\n    'client' => env('REDIS_CLIENT', 'phpredis'), // It is recommended to use phpredis for better performance.\n    'default' => [\n        'host'       => env('REDIS_HOST', 'localhost'),\n        'password'   => env('REDIS_PASSWORD', null),\n        'port'       => env('REDIS_PORT', 6379),\n        'database'   => 0,\n        'persistent' => true, // Enable persistent connection\n    ],\n],\n```\n\n### About memory leaks\n\n- Avoid using global variables. If necessary, please clean or reset them manually.\n\n- Infinitely appending element into `static`/`global` variable will lead to OOM(Out of Memory).\n\n    ```php\n    class Test\n    {\n        public static $array = [];\n        public static $string = '';\n    }\n\n    // Controller\n    public function test(Request $req)\n    {\n        // Out of Memory\n        Test::$array[] = $req->input('param1');\n        Test::$string .= $req->input('param2');\n    }\n    ```\n\n- Memory leak detection method\n\n    1. Modify `config/laravels.php`: `worker_num=1, max_request=1000000`, remember to change it back after test;\n\n    2. Add routing `/debug-memory-leak` without `route middleware` to observe the memory changes of the `Worker` process;\n\n    ```php\n    Route::get('/debug-memory-leak', function () {\n        global $previous;\n        $current = memory_get_usage();\n        $stats = [\n            'prev_mem' => $previous,\n            'curr_mem' => $current,\n            'diff_mem' => $current - $previous,\n        ];\n        $previous = $current;\n        return $stats;\n    });\n    ```\n\n    3. Start `LaravelS` and request `/debug-memory-leak` until `diff_mem` is less than or equal to zero; if `diff_mem` is always greater than zero, it means that there may be a memory leak in `Global Middleware` or `Laravel Framework`;\n    \n    4. After completing `Step 3`, `alternately` request the business routes and `/debug-memory-leak` (It is recommended to use `ab`/`wrk` to make a large number of requests for business routes), the initial increase in memory is normal. After a large number of requests for the business routes, if `diff_mem` is always greater than zero and `curr_mem` continues to increase, there is a high probability of memory leak; If `curr_mem` always changes within a certain range and does not continue to increase, there is a low probability of memory leak.\n\n    5. If you still can't solve it, [max_request](https://www.swoole.co.uk/docs/modules/swoole-server/configuration#max_request) is the last guarantee.\n\n### Linux kernel parameter adjustment\n> [Linux kernel parameter adjustment](https://wiki.swoole.com/#/other/sysctl?id=%e5%86%85%e6%a0%b8%e5%8f%82%e6%95%b0%e8%b0%83%e6%95%b4)\n\n### Pressure test\n> [Pressure test](https://wiki.swoole.com/wiki/page/62.html)\n\n## Alternatives\n\n- [swooletw/laravel-swoole](https://github.com/swooletw/laravel-swoole)\n\n## Sponsor\n\n- [PayPal](https://www.paypal.me/hhxsv5)\n\n- [BTC](https://www.blockchain.com/btc/address/367HnAzVTAEk8offesDhcsCQswnugsE54u)\n\n- [Gitee](https://gitee.com/hhxsv5/laravel-s?donate=true)\n\n## License\n\n[MIT](https://github.com/hhxsv5/laravel-s/blob/PHP-8.x/LICENSE)\n"
        },
        {
          "name": "Settings-CN.md",
          "type": "blob",
          "size": 5.8916015625,
          "content": "# LaravelS 配置项\n\n## listen_ip\n> `string` 监听的IP，监听本机`127.0.0.1`(IPv4) `::1`(IPv6)，监听所有地址 `0.0.0.0`(IPv4) `::`(IPv6)， 默认`127.0.0.1`。\n\n## listen_port\n> `int` 监听的端口，如果端口小于1024则需要`root`权限，默认 `5200`。\n\n## socket_type\n> 默认`SWOOLE_SOCK_TCP`。通常情况下，无需关心这个配置。若需Nginx代理至`UnixSocket Stream`文件，则需修改为`SWOOLE_SOCK_UNIX_STREAM`，此时`listen_ip`则是`UnixSocket Stream`文件的路径。\n\n## server\n> `string` 当通过LaravelS响应数据时，设置HTTP头部`Server`的值，若为空则不设置，默认 `LaravelS`。\n\n## handle_static\n> `bool` 是否开启LaravelS处理静态资源(要求 `Swoole >= 1.7.21`，若`Swoole >= 1.9.17`则由Swoole自己处理)，默认`false`，建议Nginx处理静态资源，LaravelS仅处理动态资源。静态资源的默认路径为`base_path('public')`，可通过修改`swoole.document_root`变更。\n\n## laravel_base_path\n> `string` `Laravel/Lumen`的基础路径，默认`base_path()`，可用于配置`符号链接`。\n\n## inotify_reload.enable\n> `bool` 是否开启`Inotify Reload`，用于当修改代码后实时Reload所有worker进程，依赖库[inotify](http://pecl.php.net/package/inotify)，通过命令`php --ri inotify`检查是否可用，默认`false`，`建议仅开发环境开启`，[修改监听数上限](https://github.com/hhxsv5/laravel-s/blob/master/KnownIssues-CN.md#inotify%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E6%95%B0%E8%BE%BE%E5%88%B0%E4%B8%8A%E9%99%90)。\n \n## inotify_reload.watch_path\n> `string` `Inotify` 监控的文件路径，默认有`base_path()`。\n\n## inotify_reload.file_types\n> `array` `Inotify` 监控的文件类型，默认有`.php`。\n\n## inotify_reload.excluded_dirs\n> `array` `Inotify` 监控时需要排除(或忽略)的目录，默认`[]`，示例：`[base_path('vendor')]`。\n\n## inotify_reload.log\n> `bool` 是否输出Reload的日志，默认`true`。\n\n## event_handlers\n> `array` 配置`Swoole`的事件回调函数，key-value格式，key为事件名，value为实现了事件处理接口的类，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E9%85%8D%E7%BD%AEswoole%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0)。\n\n## websocket.enable\n> `bool` 是否启用WebSocket服务器。启用后WebSocket服务器监听的IP和端口与Http服务器相同，默认`false`。\n\n## websocket.handler\n> `string` WebSocket逻辑处理的类名，需实现接口`WebSocketHandlerInterface`，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E5%90%AF%E7%94%A8websocket%E6%9C%8D%E5%8A%A1%E5%99%A8)。\n\n## sockets\n> `array` 配置`TCP/UDP`套接字列表，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E5%A4%9A%E7%AB%AF%E5%8F%A3%E6%B7%B7%E5%90%88%E5%8D%8F%E8%AE%AE)。\n\n## processes\n> `array` 配置自定义进程列表，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%9B%E7%A8%8B)。\n\n## timer\n> `array` 配置毫秒定时器，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E6%AF%AB%E7%A7%92%E7%BA%A7%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1)。\n\n## swoole_tables\n> `array` 定义的`swoole_table`列表，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E4%BD%BF%E7%94%A8swoole_table)。\n\n## cleaners\n> `array` `每次请求`的清理器列表，用于清理一些残留的全局变量、单例对象、静态属性，避免多次请求间数据污染。这些清理器类必须实现接口`Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\CleanerInterface`。清理的顺序与数组的顺序保持一致。[这些清理器](https://github.com/hhxsv5/laravel-s/blob/master/src/Illuminate/CleanerManager.php#L31)默认已启用，无需再配置。\n\n```php\n// 如果你的项目中使用到了Session、Authentication、Passport，需配置如下清理器\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n],\n```\n\n```php\n// 如果你的项目中使用到了包\"tymon/jwt-auth\"，需配置如下清理器\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\JWTCleaner::class,\n],\n```\n\n```php\n// 如果你的项目中使用到了包\"spatie/laravel-menu\"，需配置如下清理器\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\MenuCleaner::class,\n],\n```\n\n```php\n// 如果你的项目中使用到了包\"encore/laravel-admin\"，需配置如下清理器\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\LaravelAdminCleaner::class,\n],\n```\n\n```php\n// 如果你的项目中使用到了包\"jqhph/dcat-admin\"\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\DcatAdminCleaner::class,\n],\n```\n\n```php\n// 如果你的项目中使用到了包\"tightenco/ziggy\"，解决\"Ziggy is not defined\"\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\ZiggyCleaner::class,\n],\n```\n\n## register_providers\n> `array` `每次请求`需要重新注册的`Service Provider`列表，若存在`boot()`方法，会自动执行。一般用于清理`注册了单例的ServiceProvider`。\n\n```php\n//...\n'register_providers' => [\n    \\Xxx\\Yyy\\XxxServiceProvider::class,\n],\n//...\n```\n\n## destroy_controllers\n> `array` 每次请求后自动销毁控制器，解决单例控制器的问题，参考[示例](https://github.com/hhxsv5/laravel-s/blob/master/KnownIssues-CN.md#%E5%8D%95%E4%BE%8B%E6%8E%A7%E5%88%B6%E5%99%A8)。\n\n## swoole\n> `array` Swoole的`原始`配置项，请参考[Swoole服务器配置项](https://wiki.swoole.com/#/server/setting)。"
        },
        {
          "name": "Settings.md",
          "type": "blob",
          "size": 5.9853515625,
          "content": "# LaravelS Settings\n\n## listen_ip\n> `string` The listening ip, like local address `127.0.0.1`(IPv4) `::1`(IPv6), all addresses `0.0.0.0`(IPv4) `::`(IPv6), default `127.0.0.1`.\n\n## listen_port\n> `int` The listening port, need `root` permission if port less than `1024`, default `5200`.\n\n## socket_type\n> `int` Default `SWOOLE_SOCK_TCP`. Usually, you don’t need to care about it. Unless you want Nginx to proxy to the `UnixSocket Stream` file, you need to modify it to `SWOOLE_SOCK_UNIX_STREAM`, and `listen_ip` is the path of `UnixSocket Stream` file.\n\n## server\n> `string` Set HTTP header `Server` when respond by LaravelS, default `LaravelS`.\n\n## handle_static\n> `bool` Whether handle the static resource by LaravelS(Require `Swoole >= 1.7.21`, Handle by Swoole if `Swoole >= 1.9.17`), default `false`, Suggest that Nginx handles the statics and LaravelS handles the dynamics. The default path of static resource is `base_path('public')`, you can modify `swoole.document_root` to change it.\n\n## laravel_base_path\n> `string` The basic path of `Laravel/Lumen`, default `base_path()`, be used for `symbolic link`.\n\n## inotify_reload.enable\n> `bool` Whether enable the `Inotify Reload` to reload all worker processes when your code is modified, depend on [inotify](http://pecl.php.net/package/inotify), use `php --ri inotify` to check whether the available. default `false`, `recommend to enable in development environment only`, change [Watchers Limit](https://github.com/hhxsv5/laravel-s/blob/master/KnownIssues.md#inotify-reached-the-watchers-limit).\n\n## inotify_reload.watch_path\n> `string` The file path that `Inotify` watches, default `base_path()`.\n\n## inotify_reload.file_types\n> `array` The file types that `Inotify` watches, default `['.php']`.\n\n## inotify_reload.excluded_dirs\n> `array` The excluded/ignored directories that `Inotify` watches, default `[]`, eg: `[base_path('vendor')]`.\n\n## inotify_reload.log\n> `bool` Whether output the reload log, default `true`.\n\n## event_handlers\n> `array` Configure the event callback function of `Swoole`, key-value format, key is the event name, and value is the class that implements the event processing interface, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#configuring-the-event-callback-function-of-swoole).\n\n## websocket.enable\n> `bool` Whether enable WebSocket Server. The Listening address of WebSocket Sever is the same as Http Server, default `false`.\n\n## websocket.handler\n> `string` The class name for WebSocket handler, needs to implement interface `WebSocketHandlerInterface`, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#enable-websocket-server).\n\n## sockets\n> `array` The socket list for TCP/UDP, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#multi-port-mixed-protocol).\n\n## processes\n> `array` The custom process list, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#custom-process).\n\n## timer\n> `array` The millisecond timer, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#millisecond-cron-job).\n\n## swoole_tables\n> `array` The defined of `swoole_table` list, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#use-swoole_table).\n\n## cleaners\n> `array` The list of cleaners for `each request` is used to clean up some residual global variables, singleton objects, and static properties to avoid data pollution between requests, these classes must implement interface `Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\CleanerInterface`. The order of cleanup is consistent with the order of the arrays. [These cleaners](https://github.com/hhxsv5/laravel-s/blob/master/src/Illuminate/CleanerManager.php#L31) enabled by default, and do not need to be configured.\n\n```php\n// Need to configure the following cleaners if you use the session/authentication/passport in your project\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n],\n```\n\n```php\n// Need to configure the following cleaners if you use the package \"tymon/jwt-auth\" in your project\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\JWTCleaner::class,\n],\n```\n\n```php\n// Need to configure the following cleaners if you use the package \"spatie/laravel-menu\" in your project\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\MenuCleaner::class,\n],\n```\n\n```php\n// Need to configure the following cleaners if you use the package \"encore/laravel-admin\" in your project\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\LaravelAdminCleaner::class,\n],\n```\n\n```php\n// Need to configure the following cleaners if you use the package \"jqhph/dcat-admin\" in your project\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\SessionCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\AuthCleaner::class,\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\DcatAdminCleaner::class,\n],\n```\n\n```php\n// Need to configure the following cleaners if you use the package \"tightenco/ziggy\" in your project to solve \"Ziggy is not defined\"\n'cleaners' => [\n    Hhxsv5\\LaravelS\\Illuminate\\Cleaners\\ZiggyCleaner::class,\n],\n```\n\n## register_providers\n> `array` The `Service Provider` list, will be re-registered `each request`, and run method `boot()` if it exists. Usually, be used to clear the `Service Provider` which registers `Singleton` instances.\n\n```php\n//...\n'register_providers' => [\n    \\Xxx\\Yyy\\XxxServiceProvider::class,\n],\n//...\n```\n\n## destroy_controllers\n> `array` Automatically destroy the controllers after each request to solve the problem of the singleton controllers, refer [Demo](https://github.com/hhxsv5/laravel-s/blob/master/KnownIssues.md#singleton-controller).\n\n## swoole\n> `array` Swoole's `original` configuration items, refer [Swoole Server Configuration](https://www.swoole.co.uk/docs/modules/swoole-server/configuration)."
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.521484375,
          "content": "{\n  \"name\": \"hhxsv5/laravel-s\",\n  \"type\": \"library\",\n  \"license\": \"MIT\",\n  \"support\": {\n    \"issues\": \"https://github.com/hhxsv5/laravel-s/issues\",\n    \"source\": \"https://github.com/hhxsv5/laravel-s\"\n  },\n  \"description\": \"🚀 LaravelS is an out-of-the-box adapter between Laravel/Lumen and Swoole.\",\n  \"keywords\": [\n    \"laravels\",\n    \"laravel-s\",\n    \"swoole\",\n    \"laravel\",\n    \"lumen\",\n    \"async\",\n    \"coroutine\",\n    \"server\",\n    \"http\",\n    \"websocket\",\n    \"tcp\",\n    \"udp\",\n    \"process\",\n    \"task\",\n    \"timer\",\n    \"inotify\",\n    \"performance\"\n  ],\n  \"homepage\": \"https://github.com/hhxsv5/laravel-s\",\n  \"authors\": [\n    {\n      \"name\": \"Xie Biao\",\n      \"email\": \"hhxsv5@sina.com\"\n    }\n  ],\n  \"require\": {\n    \"php\": \">=8.2\",\n    \"ext-curl\": \"*\",\n    \"ext-json\": \"*\",\n    \"ext-pcntl\": \"*\",\n    \"swoole/ide-helper\": \"@dev\",\n    \"symfony/console\": \">=6.4.0\"\n  },\n  \"suggest\": {\n    \"ext-swoole\": \"Coroutine-based concurrency library for PHP, require >= 1.7.19.\",\n    \"ext-inotify\": \"Inotify, used to real-time reload.\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Hhxsv5\\\\LaravelS\\\\\": \"src\"\n    }\n  },\n  \"extra\": {\n    \"laravel\": {\n      \"providers\": [\n        \"Hhxsv5\\\\LaravelS\\\\Illuminate\\\\LaravelSServiceProvider\"\n      ]\n    }\n  },\n  \"bin\": [\n    \"bin/fswatch\"\n  ],\n  \"prefer-stable\": true,\n  \"minimum-stability\": \"dev\",\n  \"require-dev\": {\n    \"phpunit/phpunit\": \">=4.8.36\"\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Hhxsv5\\\\LaravelS\\\\Tests\\\\\": \"tests\"\n    }\n  },\n  \"scripts\": {\n    \"test\": \"./vendor/bin/phpunit -c phpunit.xml\"\n  }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "grafana-dashboard.json",
          "type": "blob",
          "size": 58.0361328125,
          "content": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"limit\": 100,\n        \"name\": \"Annotations & Alerts\",\n        \"showIn\": 0,\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"\",\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 1,\n  \"id\": 1,\n  \"iteration\": 1734057491478,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 30,\n      \"panels\": [],\n      \"title\": \"HTTP Request\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"hiddenSeries\": false,\n      \"id\": 6,\n      \"interval\": null,\n      \"legend\": {\n        \"avg\": true,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"maxDataPoints\": null,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application, method)\",\n          \"hide\": false,\n          \"interval\": \"1\",\n          \"legendFormat\": \"{{application}}-{{method}}\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application)\",\n          \"hide\": false,\n          \"interval\": \"1\",\n          \"legendFormat\": \"{{application}}\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(rate(swoole_request_count{application=\\\"$application\\\"}[1m])) by (application)\",\n          \"hide\": false,\n          \"interval\": \"1\",\n          \"legendFormat\": \"{{application}}-Swoole\",\n          \"refId\": \"C\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(rate(swoole_request_count{application=\\\"$application\\\"}[1m])) by (application)-sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application)\",\n          \"hide\": true,\n          \"interval\": \"1\",\n          \"legendFormat\": \"{{application}}-Not Included(404...)\",\n          \"refId\": \"D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total RPS\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:550\",\n          \"format\": \"reqps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:551\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 1\n      },\n      \"hiddenSeries\": false,\n      \"id\": 4,\n      \"interval\": null,\n      \"legend\": {\n        \"avg\": true,\n        \"current\": false,\n        \"max\": true,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(20, sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application, method, uri))\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"1\",\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Top RPS\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:143\",\n          \"format\": \"reqps\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:144\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"hiddenSeries\": false,\n      \"id\": 8,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(20, sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\",status=~\\\"5..\\\"}[1m])) by (application, method, uri))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total 5xx\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:74\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:75\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": 1\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 9\n      },\n      \"hiddenSeries\": false,\n      \"id\": 10,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(20, sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\",status=~\\\"5..\\\"}[1m])) by (application, method, uri) / sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application, method, uri))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"5xx Percentage\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"min\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:242\",\n          \"format\": \"percentunit\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:243\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"hiddenSeries\": false,\n      \"id\": 2,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(20, sum(rate(http_server_requests_seconds_sum{application=\\\"$application\\\"}[1m])) by (application, method, uri)/sum(rate(http_server_requests_seconds_count{application=\\\"$application\\\"}[1m])) by (application, method, uri))\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Avg Duration\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:24\",\n          \"format\": \"µs\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:25\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 17\n      },\n      \"hiddenSeries\": false,\n      \"id\": 40,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(20, max(http_server_requests_seconds_max{application=\\\"$application\\\"}) by (application, method, uri))\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Max Duration\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:24\",\n          \"format\": \"µs\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:25\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": true,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 26\n      },\n      \"hiddenSeries\": false,\n      \"id\": 24,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": false,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_request_count{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"1\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total Requests\",\n      \"tooltip\": {\n        \"shared\": false,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"series\",\n        \"name\": null,\n        \"show\": false,\n        \"values\": [\n          \"current\"\n        ]\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:568\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:569\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": true,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 26\n      },\n      \"hiddenSeries\": false,\n      \"id\": 12,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": false,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"topk(10, sum(http_server_requests_seconds_count{application=\\\"$application\\\"}) by (application, method, uri))\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"1\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Top Requests\",\n      \"tooltip\": {\n        \"shared\": false,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"series\",\n        \"name\": null,\n        \"show\": false,\n        \"values\": [\n          \"current\"\n        ]\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:568\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:569\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": true,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 35\n      },\n      \"hiddenSeries\": false,\n      \"id\": 22,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": false,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"bottomk(10, sum(http_server_requests_seconds_count{application=\\\"$application\\\"}) by (application, method, uri))\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"1\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{method}}-{{uri}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Bottom Requests\",\n      \"tooltip\": {\n        \"shared\": false,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"series\",\n        \"name\": null,\n        \"show\": false,\n        \"values\": [\n          \"current\"\n        ]\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:568\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:569\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 44\n      },\n      \"id\": 39,\n      \"panels\": [],\n      \"title\": \"CPU/Memory Stats\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 45\n      },\n      \"hiddenSeries\": false,\n      \"id\": 21,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"system_load_average_1m{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} 1m\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"system_load_average_5m{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} 5m\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"system_load_average_15m{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} 15m\",\n          \"refId\": \"C\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_cpu_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} CPU\",\n          \"refId\": \"D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Load Average\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 45\n      },\n      \"hiddenSeries\": false,\n      \"id\": 19,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"apcu_seg_size{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}} Total\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"apcu_avail_mem{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Available\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"APCu Memory\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": 2,\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 54\n      },\n      \"hiddenSeries\": false,\n      \"id\": 25,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Current Used\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_real_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} System Allocated\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Memory Usage(Worker)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": 2,\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 54\n      },\n      \"hiddenSeries\": false,\n      \"id\": 26,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Current Used\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_real_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} System Allocated\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Memory Usage(Task Worker)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": 2,\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 62\n      },\n      \"hiddenSeries\": false,\n      \"id\": 37,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Current Used\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_memory_real_usage{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} System Allocated\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Memory Usage(Timer)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": 2,\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 71\n      },\n      \"id\": 32,\n      \"panels\": [],\n      \"title\": \"Swoole Stats\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 72\n      },\n      \"hiddenSeries\": false,\n      \"id\": 16,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_worker_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Total\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_idle_worker_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Idle\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Worker Num\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1069\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1070\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 72\n      },\n      \"hiddenSeries\": false,\n      \"id\": 17,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_task_worker_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Total\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_task_idle_worker_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Idle\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_tasking_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}} Tasking\",\n          \"refId\": \"C\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Task Worker Num\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1069\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1070\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 80\n      },\n      \"hiddenSeries\": false,\n      \"id\": 20,\n      \"legend\": {\n        \"avg\": true,\n        \"current\": true,\n        \"max\": true,\n        \"min\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"swoole_connection_num{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{application}}-{{instance}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Connection Num\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": true,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 80\n      },\n      \"hiddenSeries\": false,\n      \"id\": 23,\n      \"interval\": null,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": false,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"time()-swoole_start_time{application=\\\"$application\\\",instance=~\\\"$instance\\\"}\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"1\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Up Time\",\n      \"tooltip\": {\n        \"shared\": false,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"series\",\n        \"name\": null,\n        \"show\": false,\n        \"values\": [\n          \"current\"\n        ]\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:568\",\n          \"format\": \"dtdhms\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:569\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 89\n      },\n      \"id\": 34,\n      \"panels\": [],\n      \"title\": \"GC Status\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 90\n      },\n      \"hiddenSeries\": false,\n      \"id\": 28,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_runs{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Runs\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_collected{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Collected\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_threshold{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Threshold\",\n          \"refId\": \"C\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_roots{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"worker\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Roots\",\n          \"refId\": \"D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"GC Status(Worker)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": null,\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 90\n      },\n      \"hiddenSeries\": false,\n      \"id\": 27,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_runs{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Runs\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_collected{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Collected\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_threshold{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Threshold\",\n          \"refId\": \"C\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_roots{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"task\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Roots\",\n          \"refId\": \"D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"GC Status(Task Worker)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": null,\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {},\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 98\n      },\n      \"hiddenSeries\": false,\n      \"id\": 36,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pluginVersion\": \"7.5.11\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_runs{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Runs\",\n          \"refId\": \"A\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_collected{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Collected\",\n          \"refId\": \"B\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_threshold{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Threshold\",\n          \"refId\": \"C\"\n        },\n        {\n          \"exemplar\": true,\n          \"expr\": \"sum(swoole_process_gc_roots{application=\\\"$application\\\",instance=~\\\"$instance\\\",process_type=\\\"timer\\\"}) by (application, instance)\",\n          \"hide\": false,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{application}}-{{instance}}  Roots\",\n          \"refId\": \"D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"GC Status(Timer)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"$$hashKey\": \"object:1328\",\n          \"decimals\": null,\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"$$hashKey\": \"object:1329\",\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 27,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"allValue\": \"''\",\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"Lumen\",\n          \"value\": \"Lumen\"\n        },\n        \"datasource\": null,\n        \"definition\": \"label_values(application)\",\n        \"description\": null,\n        \"error\": null,\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Application\",\n        \"multi\": false,\n        \"name\": \"application\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(application)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"allValue\": \"\",\n        \"current\": {\n          \"selected\": true,\n          \"text\": [\n            \"All\"\n          ],\n          \"value\": [\n            \"$__all\"\n          ]\n        },\n        \"datasource\": null,\n        \"definition\": \"label_values(swoole_connection_num{application=\\\"$application\\\"},instance)\",\n        \"description\": null,\n        \"error\": null,\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Instance\",\n        \"multi\": true,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(swoole_connection_num{application=\\\"$application\\\"},instance)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-24h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"LaravelS Service Monitor\",\n  \"uid\": \"GHNOMaF7z\",\n  \"version\": 7\n}"
        },
        {
          "name": "grafana-dashboard.png",
          "type": "blob",
          "size": 1004.951171875,
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 2.9384765625,
          "content": "<svg data-v-423bf9ae=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 226.77551139567802 60\" class=\"font\"><!----><!----><defs data-v-423bf9ae=\"\"><linearGradient data-v-423bf9ae=\"\" gradientTransform=\"rotate(25)\" id=\"83061931-a8ee-446f-9411-18575971cd6c\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"><stop data-v-423bf9ae=\"\" offset=\"0%\" style=\"stop-color: rgb(214, 65, 63); stop-opacity: 1;\"></stop><stop data-v-423bf9ae=\"\" offset=\"100%\" style=\"stop-color: rgb(66, 133, 211); stop-opacity: 1;\"></stop></linearGradient></defs><g data-v-423bf9ae=\"\" id=\"e7ddf80a-7629-4fa2-bab1-ed897fbc5609\" fill=\"url(#83061931-a8ee-446f-9411-18575971cd6c)\" transform=\"matrix(6.1224488604322,0,0,6.1224488604322,-0.0000031648800273842426,-4.285714427340487)\"><path d=\"M0.98 9.51L3.53 9.51L3.53 10.50L0 10.50L0 9.51L0 0.70L0.98 0.70L0.98 9.51ZM7.80 10.50L6.55 2.67L5.84 7.20L6.55 7.20L6.55 8.18L5.68 8.18L5.31 10.50L4.31 10.50L4.69 8.18L4.31 8.18L4.31 7.20L4.84 7.20L5.88 0.70L7.22 0.70L8.79 10.50L7.80 10.50ZM9.34 10.50L9.34 4.62L10.32 4.62L10.32 10.50L9.34 10.50ZM9.34 0.70L12.17 0.70L12.17 0.70Q12.61 0.70 12.94 1.03L12.94 1.03L12.94 1.03Q13.27 1.36 13.27 1.82L13.27 1.82L13.27 4.48L13.27 4.48Q13.27 4.94 12.94 5.27L12.94 5.27L12.94 5.27Q12.61 5.60 12.17 5.60L12.17 5.60L11.82 5.60L13.27 10.50L12.22 10.50L10.53 4.62L12.17 4.62L12.17 4.62Q12.29 4.62 12.29 4.48L12.29 4.48L12.29 1.82L12.29 1.82Q12.29 1.68 12.17 1.68L12.17 1.68L10.32 1.68L10.32 4.62L9.34 1.68L9.34 0.70ZM17.53 10.50L16.28 2.67L15.57 7.20L16.28 7.20L16.28 8.18L15.41 8.18L15.04 10.50L14.04 10.50L14.42 8.18L14.04 8.18L14.04 7.20L14.57 7.20L15.61 0.70L16.95 0.70L18.52 10.50L17.53 10.50ZM22.55 0.70L23.55 0.70L21.98 10.50L20.64 10.50L19.07 0.70L20.06 0.70L21.31 8.54L22.55 0.70ZM27.92 1.68L25.37 1.68L25.37 4.62L27.41 4.62L27.41 5.60L25.37 5.60L25.37 9.52L27.92 9.52L27.92 10.50L24.39 10.50L24.39 4.62L25.37 4.62L24.39 1.68L24.39 0.70L27.92 0.70L27.92 1.68ZM29.81 9.51L32.35 9.51L32.35 10.50L28.83 10.50L28.83 9.51L28.83 0.70L29.81 0.70L29.81 9.51ZM37.04 2.86L36.06 2.86L36.06 1.81L36.06 1.81Q36.06 1.67 35.92 1.67L35.92 1.67L34.40 1.67L34.40 1.67Q34.26 1.67 34.26 1.81L34.26 1.81L34.26 4.47L34.26 4.47Q34.26 4.56 34.34 4.59L34.34 4.59L35.92 4.59L35.92 4.59Q36.40 4.59 36.72 4.92L36.72 4.92L36.72 4.92Q37.04 5.25 37.04 5.71L37.04 5.71L37.04 9.39L37.04 9.39Q37.04 9.81 36.78 10.12L36.78 10.12L36.78 10.12Q36.51 10.43 36.11 10.50L36.11 10.50L34.22 10.50L34.22 10.50Q33.81 10.43 33.54 10.12L33.54 10.12L33.54 10.12Q33.28 9.81 33.28 9.39L33.28 9.39L33.28 8.34L34.26 8.34L34.26 9.39L34.26 9.39Q34.26 9.53 34.40 9.53L34.40 9.53L35.92 9.53L35.92 9.53Q36.06 9.53 36.06 9.39L36.06 9.39L36.06 5.71L36.06 5.71Q36.06 5.61 35.98 5.59L35.98 5.59L34.40 5.59L34.40 5.59Q33.94 5.59 33.61 5.26L33.61 5.26L33.61 5.26Q33.28 4.93 33.28 4.47L33.28 4.47L33.28 1.81L33.28 1.81Q33.28 1.39 33.54 1.08L33.54 1.08L33.54 1.08Q33.81 0.77 34.22 0.70L34.22 0.70L36.11 0.70L36.11 0.70Q36.51 0.77 36.78 1.08L36.78 1.08L36.78 1.08Q37.04 1.39 37.04 1.81L37.04 1.81L37.04 2.86Z\"></path></g><!----><!----></svg>"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.6552734375,
          "content": "<phpunit\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/6.3/phpunit.xsd\"\n        bootstrap=\"vendor/autoload.php\"\n        colors=\"true\"\n        convertErrorsToExceptions=\"true\"\n        convertNoticesToExceptions=\"true\"\n        convertWarningsToExceptions=\"true\"\n        processIsolation=\"false\"\n        stopOnError=\"false\"\n        stopOnFailure=\"false\"\n        stopOnIncomplete=\"false\"\n        stopOnSkipped=\"false\"\n        stopOnRisky=\"false\"\n        timeoutForSmallTests=\"1\"\n        timeoutForMediumTests=\"10\"\n        timeoutForLargeTests=\"60\"\n        verbose=\"false\">\n    <testsuites>\n        <testsuite name=\"laravel-s\">\n            <directory phpVersion=\"7.4.0\" phpVersionOperator=\">=\" suffix=\"Test.php\">tests</directory>\n            <exclude>tests/TestCase.php</exclude>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">tests</directory>\n        </whitelist>\n    </filter>\n    <php>\n        <const name=\"PHPUNIT\" value=\"true\"/>\n    </php>\n    <logging>\n        <log type=\"coverage-html\" target=\"coverage/report\" lowUpperBound=\"35\"\n             highLowerBound=\"70\"/>\n        <log type=\"coverage-clover\" target=\"coverage/coverage.xml\"/>\n        <log type=\"coverage-php\" target=\"coverage/coverage.serialized\"/>\n        <log type=\"coverage-text\" target=\"php://stdout\" showUncoveredFiles=\"false\"/>\n        <log type=\"junit\" target=\"coverage/logfile.xml\"/>\n        <log type=\"testdox-html\" target=\"coverage/testdox.html\"/>\n        <log type=\"testdox-text\" target=\"coverage/testdox.txt\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "sponsor.png",
          "type": "blob",
          "size": 116.57421875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}