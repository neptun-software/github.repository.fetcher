{
  "metadata": {
    "timestamp": 1736711975607,
    "page": 444,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "saloonphp/saloon",
      "stars": 2115,
      "defaultBranch": "v3",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2294921875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml,neon,neon.dist}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.26953125,
          "content": "/.github export-ignore\n/tests export-ignore\n/art export-ignore\n.editorconfig export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\nphpunit.xml export-ignore\n.php-cs-fixer.dist.php export-ignore\nphpstan.dist.neon export-ignore\nphpstan.baseline.neon export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3232421875,
          "content": "# Operating system files and directories\n.DS_Store\n._.DS_Store\n\n# Editors and IDEs\n/.fleet\n/.idea\n/.vscode\n\n# Project dependencies\n/vendor\n/composer.lock\n\n# Caches, externally stored stuff, etc\n.php-cs-fixer.cache\n.phpunit.result.cache\ntests/Fixtures/Saloon/Testing\n.phpunit.cache/test-results\n\n# environments/configs\nphpstan.neon\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.4833984375,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__,\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true)\n    ->exclude(['vendor', 'node_modules']);\n\n$config = new PhpCsFixer\\Config();\n\n// Rules from: https://cs.symfony.com/doc/rules/index.html\n\nreturn $config->setRules([\n    '@PSR2' => true,\n    'array_syntax' => ['syntax' => 'short'],\n    'ordered_imports' => ['sort_algorithm' => 'length'],\n    'no_unused_imports' => true,\n    'not_operator_with_successor_space' => true,\n    'trailing_comma_in_multiline' => true,\n    'single_quote' => ['strings_containing_single_quote_chars' => true],\n    'phpdoc_scalar' => true,\n    'unary_operator_spaces' => true,\n    'binary_operator_spaces' => true,\n    'blank_line_before_statement' => [\n        'statements' => ['declare', 'return', 'throw', 'try'],\n    ],\n    'phpdoc_single_line_var_spacing' => true,\n    'phpdoc_var_without_name' => true,\n    'method_argument_space' => [\n        'on_multiline' => 'ensure_fully_multiline',\n        'keep_multiple_spaces_after_comma' => true,\n    ],\n    'return_type_declaration' => [\n        'space_before' => 'none'\n    ],\n    'declare_strict_types' => true,\n    'blank_line_after_opening_tag' => true,\n    'single_import_per_statement' => true,\n    'mb_str_functions' => true,\n    'no_superfluous_phpdoc_tags' => true,\n    'no_blank_lines_after_phpdoc' => true,\n    'no_empty_phpdoc' => true,\n    'phpdoc_trim' => true,\n])->setFinder($finder);\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2024 Sam Carré\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.1923828125,
          "content": "{\n    \"name\": \"saloonphp/saloon\",\n    \"description\": \"Build beautiful API integrations and SDKs with Saloon\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"sammyjo20\",\n        \"saloon\",\n        \"sdk\",\n        \"api\",\n        \"api-integrations\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Sam Carré\",\n            \"email\": \"29132017+Sammyjo20@users.noreply.github.com\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"homepage\": \"https://github.com/saloonphp/saloon\",\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"guzzlehttp/guzzle\": \"^7.6\",\n        \"guzzlehttp/promises\": \"^1.5 || ^2.0\",\n        \"guzzlehttp/psr7\": \"^2.0\",\n        \"psr/http-factory\": \"^1.0\",\n        \"psr/http-message\": \"^1.1 || ^2.0\"\n    },\n    \"require-dev\": {\n        \"ext-simplexml\": \"*\",\n        \"friendsofphp/php-cs-fixer\": \"^3.5\",\n        \"illuminate/collections\": \"^9.39 || ^10.0\",\n        \"league/flysystem\": \"^3.0\",\n        \"pestphp/pest\": \"^2.10\",\n        \"phpstan/phpstan\": \"^1.11.4\",\n        \"saloonphp/xml-wrangler\": \"^1.1\",\n        \"spatie/ray\": \"^1.33\",\n        \"symfony/dom-crawler\": \"^6.0 || ^7.0\",\n        \"symfony/var-dumper\": \"^6.3 || ^7.0\"\n    },\n    \"conflict\": {\n        \"sammyjo20/saloon\": \"*\"\n    },\n    \"suggest\": {\n        \"illuminate/collections\": \"Required for the response collect() method.\",\n        \"symfony/dom-crawler\": \"Required for the response dom() method.\",\n        \"saloonphp/xml-wrangler\": \"Required for the response xmlReader() method.\",\n        \"symfony/var-dumper\": \"Required for default debugging drivers.\"\n    },\n    \"minimum-stability\": \"stable\",\n    \"autoload\": {\n        \"psr-4\": {\n            \"Saloon\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Saloon\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"dealerdirect/phpcodesniffer-composer-installer\": true,\n            \"pestphp/pest-plugin\": true\n        },\n        \"sort-packages\": true\n    },\n    \"scripts\": {\n        \"fix-code\": [\n            \"./vendor/bin/php-cs-fixer fix --allow-risky=yes\"\n        ],\n        \"test\": [\n            \"./vendor/bin/pest -p\"\n        ],\n        \"pstan\": [\n            \"./vendor/bin/phpstan analyse\"\n        ]\n    }\n}\n"
        },
        {
          "name": "phpstan.baseline.neon",
          "type": "blob",
          "size": 2.4423828125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Method Saloon\\\\\\\\Http\\\\\\\\Connector\\\\:\\\\:defaultSender\\\\(\\\\) should return Saloon\\\\\\\\Contracts\\\\\\\\Sender but returns object\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Http/Connector.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$contents of static method Saloon\\\\\\\\Data\\\\\\\\RecordedResponse\\\\:\\\\:fromFile\\\\(\\\\) expects string, bool\\\\|string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Http/Faking/Fixture.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockClient\\\\:\\\\:getLastResponse\\\\(\\\\) should return Saloon\\\\\\\\Http\\\\\\\\Response\\\\|null but returns \\\\(callable\\\\)\\\\|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\Fixture\\\\|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockResponse\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Http/Faking/MockClient.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockClient\\\\:\\\\:getRecordedResponses\\\\(\\\\) should return array\\\\<Saloon\\\\\\\\Http\\\\\\\\Response\\\\> but returns array\\\\<\\\\(callable\\\\)\\\\|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\Fixture\\\\|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockResponse\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Http/Faking/MockClient.php\n\n\t\t-\n\t\t message: \"#^Parameter \\\\#1 \\\\$response of method Saloon\\\\\\\\Http\\\\\\\\PendingRequest\\\\:\\\\:executeResponsePipeline\\\\(\\\\) expects Saloon\\\\\\\\Http\\\\\\\\Response\\\\, GuzzleHttp\\\\\\\\Promise\\\\\\\\PromiseInterface\\\\|Saloon\\\\\\\\Http\\\\\\\\Response given.$#\"\n\t\t count: 1\n\t\t path: src/Traits/Connector/SendsRequests.php\n\n\t\t-\n\t\t message: \"#^Call to an undefined method GuzzleHttp\\\\\\\\Promise\\\\\\\\PromiseInterface\\\\|Saloon\\\\\\\\Http\\\\\\\\Response\\\\:\\\\:then\\\\(\\\\).$#\"\n\t\t count: 1\n\t\t path: src/Traits/Connector/SendsRequests.php\n\n\t\t-\n\t\t message: \"#^Property Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockClient::$recordedResponses (array<(callable():mixed)|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\Fixture|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockResponse>) does not accept non-empty-array<(callable():mixed)|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\Fixture|Saloon\\\\\\\\Http\\\\\\\\Faking\\\\\\\\MockResponse|Saloon\\\\\\\\Http\\\\\\\\Response>.$#\"\n\t\t count: 1\n\t\t path: src/Http/Faking/MockClient.php\n\n\t\t-\n\t\t message: \"#^Parameter \\\\#1 \\\\$object of method ReflectionMethod\\\\:\\\\:invoke\\\\(\\\\) expects object\\\\|null, class-string\\\\|object given.$#\"\n\t\t count: 2\n\t\t path: src/Traits/Macroable.php\n\n\t\t-\n\t\t message: \"#^Parameter \\\\#1 \\\\$callback of function call_user_func_array expects callable\\\\(\\\\)\\\\: mixed, \\\\(callable\\\\(\\\\)\\\\: mixed\\\\)\\\\|object given.$#\"\n\t\t count: 4\n\t\t path: src/Traits/Macroable.php\n\n\t\t-\n\t\t message: \"#^Match arm is unreachable because previous comparison is always true.$#\"\n\t\t count: 1\n\t\t path: src/Http/Pool.php\n"
        },
        {
          "name": "phpstan.dist.neon",
          "type": "blob",
          "size": 0.7099609375,
          "content": "#############################################################################################\n# Don't edit this config file directly.                                                     #\n# For temporary, or local overrides, create a file named 'phpstan.neon' alongside this one. #\n#############################################################################################\n\nincludes:\n- phpstan.baseline.neon\n\nparameters:\n  # Add one of the editorUrl's in your phpstan.neon file for direct editor/IDE links in the terminal.\n  #editorUrl: 'phpstorm://open?file=%%file%%&line=%%line%%'\n  #editorUrl: 'vscode://file/%%file%%:%%line%%'\n\n  level: 7\n\n  paths:\n  - src\n\n  ignoreErrors:\n  - \"#^Unsafe usage of new static\\\\(\\\\)\\\\.$#\"\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.5546875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.1/phpunit.xsd\" bootstrap=\"vendor/autoload.php\" colors=\"true\" cacheDirectory=\".phpunit.cache\">\n  <testsuites>\n    <testsuite name=\"Test Suite\">\n      <directory suffix=\"Test.php\">./tests</directory>\n    </testsuite>\n  </testsuites>\n  <coverage/>\n  <source>\n    <include>\n      <directory suffix=\".php\">./app</directory>\n      <directory suffix=\".php\">./src</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}