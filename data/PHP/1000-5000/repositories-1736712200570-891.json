{
  "metadata": {
    "timestamp": 1736712200570,
    "page": 891,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/psr-http-message-bridge",
      "stars": 1278,
      "defaultBranch": "7.2",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "/Tests export-ignore\n/phpunit.xml.dist export-ignore\n/.git* export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.056640625,
          "content": "vendor/\ncomposer.lock\nphpunit.xml\n/Tests/Fixtures/App/var\n"
        },
        {
          "name": "ArgumentValueResolver",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.0166015625,
          "content": "CHANGELOG\n=========\n\n6.4\n---\n\n * Import the bridge into the Symfony monorepo and synchronize releases\n * Remove `ArgumentValueResolverInterface` from `PsrServerRequestResolver`\n * Support `php-http/discovery` for auto-detecting PSR-17 factories\n\n2.3.1\n-----\n\n * Don't rely on `Request::getPayload()` to populate the parsed body\n\n2.3.0\n-----\n\n * Leverage `Request::getPayload()` to populate the parsed body of PSR-7 requests\n * Implement `ValueResolverInterface` introduced with Symfony 6.2\n\n2.2.0\n-----\n\n * Drop support for Symfony 4\n * Bump minimum version of PHP to 7.2\n * Support version 2 of the psr/http-message contracts\n\n2.1.3\n-----\n\n * Ignore invalid HTTP headers when creating PSR7 objects\n * Fix for wrong type passed to `moveTo()`\n\n2.1.2\n-----\n\n * Allow Symfony 6\n\n2.1.0\n-----\n\n * Added a `PsrResponseListener` to automatically convert PSR-7 responses returned by controllers\n * Added a `PsrServerRequestResolver` that allows injecting PSR-7 request objects into controllers\n\n2.0.2\n-----\n\n * Fix populating server params from URI in HttpFoundationFactory\n * Create cookies as raw in HttpFoundationFactory\n * Fix BinaryFileResponse with Content-Range PsrHttpFactory\n\n2.0.1\n-----\n\n * Don't normalize query string in PsrHttpFactory\n * Fix conversion for HTTPS requests\n * Fix populating default port and headers in HttpFoundationFactory\n\n2.0.0\n-----\n\n * Remove DiactorosFactory\n\n1.3.0\n-----\n\n * Added support for streamed requests\n * Added support for Symfony 5.0+\n * Fixed bridging UploadedFile objects\n * Bumped minimum version of Symfony to 4.4\n\n1.2.0\n-----\n\n * Added new documentation links\n * Bumped minimum version of PHP to 7.1\n * Added support for streamed responses\n\n1.1.2\n-----\n\n * Fixed createResponse\n\n1.1.1\n-----\n\n * Deprecated DiactorosFactory, use PsrHttpFactory instead\n * Removed triggering of deprecation\n\n1.1.0\n-----\n\n * Added support for creating PSR-7 messages using PSR-17 factories\n\n1.0.2\n-----\n\n * Fixed request target in PSR7 Request (mtibben)\n\n1.0.1\n-----\n\n * Added support for Symfony 4 (dunglas)\n\n1.0.0\n-----\n\n * Initial release\n"
        },
        {
          "name": "EventListener",
          "type": "tree",
          "content": null
        },
        {
          "name": "Factory",
          "type": "tree",
          "content": null
        },
        {
          "name": "HttpFoundationFactoryInterface.php",
          "type": "blob",
          "size": 0.96484375,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Bridge\\PsrHttpMessage;\n\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n/**\n * Creates Symfony Request and Response instances from PSR-7 ones.\n *\n * @author Kévin Dunglas <dunglas@gmail.com>\n */\ninterface HttpFoundationFactoryInterface\n{\n    /**\n     * Creates a Symfony Request instance from a PSR-7 one.\n     */\n    public function createRequest(ServerRequestInterface $psrRequest, bool $streamed = false): Request;\n\n    /**\n     * Creates a Symfony Response instance from a PSR-7 one.\n     */\n    public function createResponse(ResponseInterface $psrResponse, bool $streamed = false): Response;\n}\n"
        },
        {
          "name": "HttpMessageFactoryInterface.php",
          "type": "blob",
          "size": 0.92578125,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Bridge\\PsrHttpMessage;\n\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Psr\\Http\\Message\\ServerRequestInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n/**\n * Creates PSR HTTP Request and Response instances from Symfony ones.\n *\n * @author Kévin Dunglas <dunglas@gmail.com>\n */\ninterface HttpMessageFactoryInterface\n{\n    /**\n     * Creates a PSR-7 Request instance from a Symfony one.\n     */\n    public function createRequest(Request $symfonyRequest): ServerRequestInterface;\n\n    /**\n     * Creates a PSR-7 Response instance from a Symfony one.\n     */\n    public function createResponse(Response $symfonyResponse): ResponseInterface;\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2004-present Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.421875,
          "content": "PSR-7 Bridge\n============\n\nProvides integration for PSR7.\n\nResources\n---------\n\n * [Documentation](https://symfony.com/doc/current/components/psr7.html)\n * [Contributing](https://symfony.com/doc/current/contributing/index.html)\n * [Report issues](https://github.com/symfony/symfony/issues) and\n   [send Pull Requests](https://github.com/symfony/symfony/pulls)\n   in the [main Symfony repository](https://github.com/symfony/symfony)\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.34375,
          "content": "{\n    \"name\": \"symfony/psr-http-message-bridge\",\n    \"type\": \"symfony-bridge\",\n    \"description\": \"PSR HTTP message bridge\",\n    \"keywords\": [\"http\", \"psr-7\", \"psr-17\", \"http-message\"],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Fabien Potencier\",\n            \"email\": \"fabien@symfony.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=8.2\",\n        \"psr/http-message\": \"^1.0|^2.0\",\n        \"symfony/http-foundation\": \"^6.4|^7.0\"\n    },\n    \"require-dev\": {\n        \"symfony/browser-kit\": \"^6.4|^7.0\",\n        \"symfony/config\": \"^6.4|^7.0\",\n        \"symfony/event-dispatcher\": \"^6.4|^7.0\",\n        \"symfony/framework-bundle\": \"^6.4|^7.0\",\n        \"symfony/http-kernel\": \"^6.4|^7.0\",\n        \"nyholm/psr7\": \"^1.1\",\n        \"php-http/discovery\": \"^1.15\",\n        \"psr/log\": \"^1.1.4|^2|^3\"\n    },\n    \"conflict\": {\n        \"php-http/discovery\": \"<1.15\",\n        \"symfony/http-kernel\": \"<6.4\"\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"php-http/discovery\": false\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Bridge\\\\PsrHttpMessage\\\\\": \"\" },\n        \"exclude-from-classmap\": [\n            \"/Tests/\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8525390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/9.3/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony PSR-7 HTTP message Bridge Test Suite\">\n            <directory>./Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./</directory>\n        </include>\n        <exclude>\n            <directory>./Resources</directory>\n            <directory>./Tests</directory>\n            <directory>./vendor</directory>\n        </exclude>\n    </coverage>\n</phpunit>\n"
        }
      ]
    }
  ]
}