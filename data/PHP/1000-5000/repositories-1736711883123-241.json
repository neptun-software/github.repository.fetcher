{
  "metadata": {
    "timestamp": 1736711883123,
    "page": 241,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Codiad/Codiad",
      "stars": 2846,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5537109375,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\n# Matches multiple files with brace expansion notation\n# Set default charset\n[*.{js,php}]\ncharset = utf-8\nindent_style = space\nindent_size = 4\n\n# 4 space indentation\n[*.min.js]\nindent_style = space\nindent_size = 0\n\n\n# Matches the exact files either package.json or .travis.yml\n[{composer.json,.travis.yml,build.xml}]\nindent_style = space\nindent_size = 2"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "*~\n*\\#\n*.swp\nconfig.php\ndata/\nworkspace/\nplugins/*\n!plugins/README.md\nthemes/*\n!themes/default/\n!themes/README.md\n.project\n.buildpath\n.settings/\n.svn/\nvendor/\ncomposer.lock\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.3193359375,
          "content": "language: php \n\nphp:\n  - 5.6\n  - 7.0\n\nenv:\n  global:\n    # PHP Code Sniffer special rules\n    - R_CLASS=\"Squiz.Classes.ValidClassName\" # must use CamleClasName    \n    - R_CONST=\"Generic.NamingConventions.UpperCaseConstantName\" # const must UPPERCASE\n    - R_FILE=\"PSR1.Files.SideEffects\" # a file declare , or executes logic, not both \n    - R_LINE=\"Generic.Files.LineLength\" #\n    - R_METHOD=\"PSR1.Methods.CamelCapsMethodName\" # must use camleMethodName\n    - R_NS=\"PSR1.Classes.ClassDeclaration\" # class must use Namespace\n    - CS_INGNORE=\"components/install/view.php\"    # ingore Files\n  matrix:\n    #strict mode to check formatting\n    - STRICT=true \n    # exclude some special or unsupported conventions\n    - STRICT=false\n\n#allow failures\nmatrix:\n  allow_failures:\n    - env: STRICT=true\n\n#install dependence\ninstall:\n  - composer install --prefer-dist --verbose\n\n#init the env to exclude\nbefore_script:\n  # STRICT mode only exclude Namespace and LineLength\n  - if [[ \"$STRICT\" == \"true\" ]];then\n      export CS_EXCLUDE=\"$R_LINE,$R_NS\";\n    else\n      export CS_EXCLUDE=\"$R_CLASS,$R_CONST,$R_FILE,$R_LINE,$R_METHOD,$R_NS\";\n    fi\n  - echo $CS_EXCLUDE\n\n# check formatting and Syntax\nscript:\n  - ./vendor/bin/phpcs components\n      --standard=PSR2\n      --exclude=\"$CS_EXCLUDE\"\n      --ignore=\"$CS_INGNORE\"\n      --colors\n      --extensions=php\n"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 0.4033203125,
          "content": "Authors Ordered By First Contribution\n--------------------------------------------------\n\nKent Safranski - @fluidbyte <kent@fluidbyte.net>\nTim Holum - @tholum\nGaurab Paul - @lorefnon\nShawn A - @tablatronix\nFlorent Galland - @Flolagale\nLuc Verdier - @Verdier\nDanny Morabito - @newsocialifecom <staff@newsocialife.com>\nAlexander D - @daeks\nJean-Philippe Zolesio - @holblin\n\nand all the other contributors - Thanks!\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7177734375,
          "content": "# How to Contribute\n\nYour contributions are welcome and we're very open about how contributions are made, however, to keep order to things please take the following into consideration:\n\n* Check the issues to ensure that someone else isn't already working on the bug or feature\n* Submit an issue for bugs and feature additions before you start with it\n* Familiarize yourself with the documentation in the [Wiki](https://github.com/Codiad/Codiad/wiki)\n\nThere is an established format for `components` which utilizes one JS (`init.js`) and one CSS (`screen.css`) which is handled by the loader file. Any other resources used should be loaded or accessed from one of these.\n\n**Don't Reinvent the Wheel!** There's an API and defined, easy-to-understand set of methods for a reason - use them.\n\nStick to the conventions defined in other components as closely as possible. \n\n* Utilize the same commenting structure\n* Use underscores in namespaces instead of interCaps\n* Use intend with 4 spaces in your code\n* Use single quotes for parameternames and double quotes for strings \n* When working with the editor utilize the `active` object whenever possible instead of going direct to the `editor`\n\n**Javascript Formatting**\n\nIn order to maintain a consistant code structure to the code across the application please run any changes through JSBeautifier (http://jsbeautifier.org/) with the default settings.\n\nIf you have questions, please ask. Submit an issue or [contact us directly](mailto:dev@codiad.com). \n\n**PHP Formatting**\n\nIn order to maintain a consistant code structure we follow PSR2 standards and using travis CI to validate a proper formatting.\n\n[![Build Status](https://travis-ci.org/Codiad/Codiad.svg?branch=master)](https://travis-ci.org/Codiad/Codiad)\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 0.619140625,
          "content": "CODIAD INSTALLATION\n----------------------------------------------------------------------\n\nTo install simply place the contents of the system in a web accessible\nfolder.\n\nEnsure that the following have write capabilities:\n\n    /config.php\n    /data\n    /workspace\n    \nNavigate in your browser to the URL where the system is placed and the\ninstaller screen will appear. If any dependencies have not been met the\nsystem will alert you.\n\nEnter the requested information to create a user account, project, and\nset your timezone and submit the form. If everything goes as planned \nyou will be greeted with a login screen.\n\nHappy coding!\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.1064453125,
          "content": "*  Copyright (c) Codiad & Kent Safranski (codiad.com)\n*\n*  Permission is hereby granted, free of charge, to any person obtaining\n*  a copy of this software and associated documentation files (the\n*  \"Software\"), to deal in the Software without restriction, including\n*  without limitation the rights to use, copy, modify, merge, publish,\n*  distribute, sublicense, and/or sell copies of the Software, and to\n*  permit persons to whom the Software is furnished to do so, subject to\n*  the following conditions:\n*  \n*  The above copyright notice and this permission notice shall be\n*  included in all copies or substantial portions of the Software.\n*  \n*  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n*  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n*  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n*  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.080078125,
          "content": "# Codiad Web IDE\n\nCodiad is a web-based IDE framework with a small footprint and minimal requirements. \n\nCodiad was built with simplicity in mind, allowing for fast, interactive development without the massive overhead of some of the larger desktop editors. That being said even users of IDE's such as Eclipse, NetBeans and Aptana are finding Codiad's simplicity to be a huge benefit. While simplicity was key, we didn't skimp on features and have a team of dedicated developer actively adding more.\n\nFor more information on the project please check out the **[check out the Wiki](https://github.com/Codiad/Codiad/wiki)** or **[the Codiad Website](http://www.codiad.com)**\n\n## Unmaintained Status\n\nGiven its age and number of viable alternatives now available, Codiad is no longer under active maintenance by core contributors. You may use the [issues](https://github.com/Codiad/Codiad/issues) for seeking community help on any ongoing issues, however, the code maintained in this repository is unlikely to be updated.\n\nDistributed under the MIT-Style License. See `LICENSE.txt` file for more information.\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 0.4453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<project name=\"Codiad\" basedir=\".\" default=\"phpcs\">\n\n\t<fileset id=\"components\" dir=\"./components\">\n\t\t<include name=\"**/*.php\" />\n\t</fileset>\n\n\t<target name=\"phpcs\">\n\t\t<phpcodesniffer\n\t\t\tstandard=\"PSR2\"\n\t\t\tshowSniffs=\"false\"\n\t\t\tshowWarnings=\"true\"\n\t\t haltonerror=\"${build.haltonanalysiserror}\">\n\t\t\t<fileset refid=\"components\" />\n\t\t\t<formatter type=\"full\" usefile=\"false\" />\n\t\t</phpcodesniffer>\n\t</target>\n\n</project>\n"
        },
        {
          "name": "common.php",
          "type": "blob",
          "size": 11.60546875,
          "content": "<?php\n    /*\n    *  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n    *  as-is and without warranty under the MIT License. See\n    *  [root]/license.txt for more. This information must remain intact.\n    */\n\n    Common::startSession();\n\n    //////////////////////////////////////////////////////////////////\n    // Common Class\n    //////////////////////////////////////////////////////////////////\n\n    class Common {\n\n        //////////////////////////////////////////////////////////////////\n        // PROPERTIES\n        //////////////////////////////////////////////////////////////////\n\n        public static $debugMessageStack = array();\n\n        //////////////////////////////////////////////////////////////////\n        // METHODS\n        //////////////////////////////////////////////////////////////////\n\n        // -----------------------------||----------------------------- //\n\n        //////////////////////////////////////////////////////////////////\n        // Construct\n        //////////////////////////////////////////////////////////////////\n\n        public static function construct(){\n            global $cookie_lifetime;\n            $path = str_replace(\"index.php\", \"\", $_SERVER['SCRIPT_FILENAME']);\n            foreach (array(\"components\",\"plugins\") as $folder) {\n                if(strpos($_SERVER['SCRIPT_FILENAME'], $folder)) {\n                    $path = substr($_SERVER['SCRIPT_FILENAME'],0, strpos($_SERVER['SCRIPT_FILENAME'], $folder));\n                    break;\n                }\n            }\n\n            if(file_exists($path.'config.php')){ require_once($path.'config.php'); }\n\n            if(!defined('BASE_PATH')) {\n                define('BASE_PATH', rtrim(str_replace(\"index.php\", \"\", $_SERVER['SCRIPT_FILENAME']),\"/\"));\n            }\n\n            if(!defined('COMPONENTS')) {\n                define('COMPONENTS', BASE_PATH . '/components');\n            }\n\n            if(!defined('PLUGINS')) {\n                define('PLUGINS', BASE_PATH . '/plugins');\n            }\n\n            if(!defined('DATA')) {\n                define('DATA', BASE_PATH . '/data');\n            }\n\n            if(!defined('THEMES')){\n                define(\"THEMES\", BASE_PATH . \"/themes\");\n            }\n\n            if(!defined('THEME')){\n                define(\"THEME\", \"default\");\n            }\n            \n            if(!defined('LANGUAGE')){\n                define(\"LANGUAGE\", \"en\");\n            }\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // SESSIONS\n        //////////////////////////////////////////////////////////////////\n\n        public static function startSession() {\n            Common::construct();\n\n            global $cookie_lifetime;\n            if(isset($cookie_lifetime) && $cookie_lifetime != \"\") {\n                ini_set(\"session.cookie_lifetime\", $cookie_lifetime);\n            }\n\n            //Set a Session Name\n            session_name(md5(BASE_PATH));\n\n            session_start();\n            \n            //Check for external authentification\n            if(defined('AUTH_PATH')){\n                require_once(AUTH_PATH);\n            }\n\n            global $lang;\n            if (isset($_SESSION['lang'])) {\n                include BASE_PATH.\"/languages/{$_SESSION['lang']}.php\";\n            } else {\n                include BASE_PATH.\"/languages/\".LANGUAGE.\".php\";\n            }\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Read Content of directory\n        //////////////////////////////////////////////////////////////////\n        \n        public static function readDirectory($foldername) {\n          $tmp = array();\n          $allFiles = scandir($foldername);\n          foreach ($allFiles as $fname){\n              if($fname == '.' || $fname == '..' ){\n                  continue;\n              }\n              if(is_dir($foldername.'/'.$fname)){\n                  $tmp[] = $fname;\n              }\n          }\n          return $tmp;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Log debug message\n        // Messages will be displayed in the console when the response is\n        // made with the formatJSEND function.\n        //////////////////////////////////////////////////////////////////\n\n        public static function debug($message) {\n            Common::$debugMessageStack[] = $message;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // URLs\n        //////////////////////////////////////////////////////////////////\n\n        public static function getConstant($key, $default = null) {\n          return defined($key) ? constant($key) : $default;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Localization\n        //////////////////////////////////////////////////////////////////\n\n        public static function i18n($key, $args = array()) {\n            echo Common::get_i18n($key, $args);\n        }\n\n        public static function get_i18n($key, $args = array()) {\n            global $lang;\n            $key = ucwords(strtolower($key)); //Test, test TeSt and tESt are exacly the same\n            $return = isset($lang[$key]) ? $lang[$key] : $key;\n            foreach($args as $k => $v)\n                $return = str_replace(\"%{\".$k.\"}%\", $v, $return);\n            return $return;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Check Session / Key\n        //////////////////////////////////////////////////////////////////\n\n        public static function checkSession(){\n            // Set any API keys\n            $api_keys = array();\n            // Check API Key or Session Authentication\n            $key = \"\";\n            if(isset($_GET['key'])){ $key = $_GET['key']; }\n            if(!isset($_SESSION['user']) && !in_array($key,$api_keys)){\n                exit('{\"status\":\"error\",\"message\":\"Authentication Error\"}');\n            }\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Get JSON\n        //////////////////////////////////////////////////////////////////\n\n        public static function getJSON($file,$namespace=\"\"){\n            $path = DATA . \"/\";\n            if($namespace != \"\"){\n                $path = $path . $namespace . \"/\";\n                $path = preg_replace('#/+#','/',$path);\n            }\n\n            $json = file_get_contents($path . $file);\n            $json = str_replace([\"\\n\\r\", \"\\r\", \"\\n\"], \"\", $json);\n            $json = str_replace(\"|*/?>\",\"\",str_replace(\"<?php/*|\",\"\",$json));\n            $json = json_decode($json,true);\n            return $json;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Save JSON\n        //////////////////////////////////////////////////////////////////\n\n        public static function saveJSON($file,$data,$namespace=\"\"){\n            $path = DATA . \"/\";\n            if($namespace != \"\"){\n                $path = $path . $namespace . \"/\";\n                $path = preg_replace('#/+#','/',$path);\n                if(!is_dir($path)) mkdir($path);\n            }\n\n            $data = \"<?php\\r\\n/*|\" . json_encode($data) . \"|*/\\r\\n?>\";\n            $write = fopen($path . $file, 'w') or die(\"can't open file \".$path.$file);\n            fwrite($write, $data);\n            fclose($write);\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Format JSEND Response\n        //////////////////////////////////////////////////////////////////\n\n        public static function formatJSEND($status,$data=false){\n\n            /// Debug /////////////////////////////////////////////////\n            $debug = \"\";\n            if(count(Common::$debugMessageStack) > 0) {\n                $debug .= ',\"debug\":';\n                $debug .= json_encode(Common::$debugMessageStack);\n            }\n\n            // Success ///////////////////////////////////////////////\n            if($status==\"success\"){\n                if($data){\n                    $jsend = '{\"status\":\"success\",\"data\":'.json_encode($data).$debug.'}';\n                }else{\n                    $jsend = '{\"status\":\"success\",\"data\":null'.$debug.'}';\n                }\n\n            // Error /////////////////////////////////////////////////\n            }else{\n                $jsend = '{\"status\":\"error\",\"message\":\"'.$data.'\"'.$debug.'}';\n            }\n\n            // Return ////////////////////////////////////////////////\n            return $jsend;\n\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Check Function Availability\n        //////////////////////////////////////////////////////////////////\n\n        public static function checkAccess() {\n            return !file_exists(DATA . \"/\" . $_SESSION['user'] . '_acl.php');\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Check Path\n        //////////////////////////////////////////////////////////////////\n\n        public static function checkPath($path) {\n            if(file_exists(DATA . \"/\" . $_SESSION['user'] . '_acl.php')){\n                foreach (getJSON($_SESSION['user'] . '_acl.php') as $projects=>$data) {\n                    if (strpos($path, $data) === 0) {\n                        return true;\n                    }\n                }\n            } else {\n                foreach(getJSON('projects.php') as $project=>$data){\n                    if (strpos($path, $data['path']) === 0) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n\n        //////////////////////////////////////////////////////////////////\n        // Check Function Availability\n        //////////////////////////////////////////////////////////////////\n\n        public static function isAvailable($func) {\n            if (ini_get('safe_mode')) return false;\n            $disabled = ini_get('disable_functions');\n            if ($disabled) {\n                $disabled = explode(',', $disabled);\n                $disabled = array_map('trim', $disabled);\n                return !in_array($func, $disabled);\n            }\n            return true;\n        }\n\n        //////////////////////////////////////////////////////////////////\n        // Check If Path is absolute\n        //////////////////////////////////////////////////////////////////\n\n        public static function isAbsPath( $path ) {\n            return ($path[0] === '/' || $path[1] === ':')?true:false;\n        }\n        \n        //////////////////////////////////////////////////////////////////\n        // Check If WIN based system\n        //////////////////////////////////////////////////////////////////\n\n        public static function isWINOS( ) {\n            return (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN');\n        }\n\n    }\n\n    //////////////////////////////////////////////////////////////////\n    // Wrapper for old method names\n    //////////////////////////////////////////////////////////////////\n\n    function debug($message) { Common::debug($message); }\n    function i18n($key, $args = array()) { echo Common::i18n($key, $args); }\n    function get_i18n($key, $args = array()) { return Common::get_i18n($key, $args); }\n    function checkSession(){ Common::checkSession(); }\n    function getJSON($file,$namespace=\"\"){ return Common::getJSON($file,$namespace); }\n    function saveJSON($file,$data,$namespace=\"\"){ Common::saveJSON($file,$data,$namespace); }\n    function formatJSEND($status,$data=false){ return Common::formatJSEND($status,$data); }\n    function checkAccess() { return Common::checkAccess(); }\n    function checkPath($path) { return Common::checkPath($path); }\n    function isAvailable($func) { return Common::isAvailable($func); }\n?>\n"
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.1533203125,
          "content": "{\n  \"name\": \"codiad/codiad\",\n  \"type\": \"application\",\n  \"keywords\": [\"ide\",\"development\",\"environment\",\"editor\"],\n  \"homepage\": \"http://www.codiad.com\",\n  \"license\": \"MIT\",\n  \"description\": \"Codiad is a web-based IDE framework with a small footprint and minimal requirements. The system is still early in development, and while it has been proven extremely stable please be sure have a backup system if you use it in any production work.\",\n  \"authors\": [\n    {\n      \"name\": \"Kent Safranski @fluidbyte\",\n      \"email\": \"kent@fluidbyte.net\"\n    },\n    {\n      \"name\": \"@tholum\"\n    },\n    {\n      \"name\": \"@lorefnon\"\n    },\n    {\n      \"name\": \"@tablatronix\"\n    },\n    {\n      \"name\": \"@Flolagale\"\n    },\n    {\n      \"name\": \"@Verdier\"\n    },\n    {\n      \"name\": \"Danny Morabito @newsocialifecom\",\n      \"email\": \"codiad@newsocialife.com\"\n    },\n    {\n      \"name\": \"@daeks\"\n    },\n    {\n      \"name\": \"@holblin\"\n    }\n  ],\n  \"minimum-stability\": \"dev\",\n  \"require\":\n  {\n    \"php\": \">=5.2.0\"\n  },\n  \"require-dev\":\n  {\n  \t\"phing/phing\": \"2.*\",\n    \"squizlabs/php_codesniffer\": \"*\"\n  },\n  \"extra\":\n  {\n    \"installer-paths\":\n    {\n      \"apps/{$name}\": [\"codiad/codiad\"]\n    }\n  }\n}\n"
        },
        {
          "name": "config.example.php",
          "type": "blob",
          "size": 1.70703125,
          "content": "<?php\n\n/*\n*  Copyright (c) Codiad & Kent Safranski (codiad.com), distributed\n*  as-is and without warranty under the MIT License. See\n*  [root]/license.txt for more. This information must remain intact.\n*/\n\n//////////////////////////////////////////////////////////////////\n// CONFIG\n//////////////////////////////////////////////////////////////////\n\n// PATH TO CODIAD\ndefine(\"BASE_PATH\", \"absolute/path/to/codiad\");\n\n// BASE URL TO CODIAD (without trailing slash)\ndefine(\"BASE_URL\", \"domain.tld\");\n\n// THEME : default, modern or clear (look at /themes)\ndefine(\"THEME\", \"default\");\n\n// ABSOLUTE PATH, this is used as whitelist for absolute path projects \ndefine(\"WHITEPATHS\", BASE_PATH . \",/home\");\n\n// SESSIONS (e.g. 7200)\n$cookie_lifetime = \"0\";\n\n// TIMEZONE\ndate_default_timezone_set(\"America/Chicago\");\n\n// Allows to overwrite the default language\n//define(\"LANGUAGE\", \"en\");\n\n// External Authentification\n//define(\"AUTH_PATH\", \"/path/to/customauth.php\");\n\n//////////////////////////////////////////////////////////////////\n// ** DO NOT EDIT CONFIG BELOW **\n//////////////////////////////////////////////////////////////////\n\n// PATHS\ndefine(\"COMPONENTS\", BASE_PATH . \"/components\");\ndefine(\"PLUGINS\", BASE_PATH . \"/plugins\");\ndefine(\"THEMES\", BASE_PATH . \"/themes\");\ndefine(\"DATA\", BASE_PATH . \"/data\");\ndefine(\"WORKSPACE\", BASE_PATH . \"/workspace\");\n\n// URLS\ndefine(\"WSURL\", BASE_URL . \"/workspace\");\n\n// Marketplace\n//define(\"MARKETURL\", \"http://market.codiad.com/json\");\n\n// Update Check\n//define(\"UPDATEURL\", \"http://update.codiad.com/?v={VER}&o={OS}&p={PHP}&w={WEB}&a={ACT}\");\n//define(\"ARCHIVEURL\", \"https://github.com/Codiad/Codiad/archive/master.zip\");\n//define(\"COMMITURL\", \"https://api.github.com/repos/Codiad/Codiad/commits\");\n\n?>\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 1.123046875,
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 18.646484375,
          "content": "<?php\n\nrequire_once('common.php');\n\n// Context Menu\n$context_menu = file_get_contents(COMPONENTS . \"/filemanager/context_menu.json\");\n$context_menu = json_decode($context_menu,true);\n\n// Right Bar\n$right_bar = file_get_contents(COMPONENTS . \"/right_bar.json\");\n$right_bar = json_decode($right_bar,true);\n\n// Read Components, Plugins, Themes\n$components = Common::readDirectory(COMPONENTS);\n$plugins = Common::readDirectory(PLUGINS);\n$themes = Common::readDirectory(THEMES);\n\n// Theme\n$theme = THEME;\nif(isset($_SESSION['theme'])) {\n  $theme = $_SESSION['theme'];\n}\n\n?>\n<!doctype html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title><?php i18n(\"CODIAD\"); ?></title>\n    <?php\n    // Load System CSS Files\n    $stylesheets = array(\"jquery.toastmessage.css\",\"reset.css\",\"fonts.css\",\"screen.css\");\n   \n    foreach($stylesheets as $sheet){\n        if(file_exists(THEMES . \"/\". $theme . \"/\".$sheet)){\n            echo('<link rel=\"stylesheet\" href=\"themes/'.$theme.'/'.$sheet.'\">');\n        } else {\n            echo('<link rel=\"stylesheet\" href=\"themes/default/'.$sheet.'\">');\n        }\n    }\n    \n    // Load Component CSS Files    \n    foreach($components as $component){\n        if(file_exists(THEMES . \"/\". $theme . \"/\" . $component . \"/screen.css\")){\n            echo('<link rel=\"stylesheet\" href=\"themes/'.$theme.'/'.$component.'/screen.css\">');\n        } else {\n            if(file_exists(\"themes/default/\" . $component . \"/screen.css\")){\n                echo('<link rel=\"stylesheet\" href=\"themes/default/'.$component.'/screen.css\">');\n            } else {\n                if(file_exists(COMPONENTS . \"/\" . $component . \"/screen.css\")){\n                    echo('<link rel=\"stylesheet\" href=\"components/'.$component.'/screen.css\">');\n                }\n            }\n        }\n    }\n    \n    // Load Plugin CSS Files    \n    foreach($plugins as $plugin){\n        if(file_exists(THEMES . \"/\". $theme . \"/\" . $plugin . \"/screen.css\")){\n            echo('<link rel=\"stylesheet\" href=\"themes/'.$theme.'/'.$plugin.'/screen.css\">');\n        } else {\n            if(file_exists(\"themes/default/\" . $plugin . \"/screen.css\")){\n                echo('<link rel=\"stylesheet\" href=\"themes/default/'.$plugin.'/screen.css\">');\n            } else {\n                if(file_exists(PLUGINS . \"/\" . $plugin . \"/screen.css\")){\n                    echo('<link rel=\"stylesheet\" href=\"plugins/'.$plugin.'/screen.css\">');\n                }\n            }\n        }\n    }\n    ?>\n    <link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\" />\n</head>\n\n<body>\n    <script>\n    var i18n = (function(lang) {\n        return function(word,args) {\n            var x;\n            var returnw = (word in lang) ? lang[word] : word;\n            for(x in args){\n                returnw=returnw.replace(\"%{\"+x+\"}%\",args[x]);   \n            }\n            return returnw;\n        }\n    })(<?php echo json_encode($lang); ?>)\n    </script>\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\n    <script>!window.jQuery && document.write(unescape('%3Cscript src=\"js/jquery-1.7.2.min.js\"%3E%3C/script%3E'));</script>\n    <script src=\"js/jquery-ui-1.8.23.custom.min.js\"></script>\n    <script src=\"js/jquery.css3.min.js\"></script>\n    <script src=\"js/jquery.easing.js\"></script>\n    <script src=\"js/jquery.toastmessage.js\"></script>\n    <script src=\"js/amplify.min.js\"></script>\n    <script src=\"js/localstorage.js\"></script>\n    <script src=\"js/jquery.hoverIntent.min.js\"></script>\n    <script src=\"js/system.js\"></script>\n    <script src=\"js/sidebars.js\"></script>\n    <script src=\"js/modal.js\"></script>\n    <script src=\"js/message.js\"></script>\n    <script src=\"js/jsend.js\"></script>\n    <script src=\"js/instance.js?v=<?php echo time(); ?>\"></script>\n    <div id=\"message\"></div>\n    <?php\n\n    //////////////////////////////////////////////////////////////////\n    // NOT LOGGED IN\n    //////////////////////////////////////////////////////////////////\n\n    if(!isset($_SESSION['user'])){\n\n        $path = rtrim(str_replace(\"index.php\", \"\", $_SERVER['SCRIPT_FILENAME']),\"/\");\n\n        $users = file_exists($path . \"/data/users.php\");\n        $projects = file_exists($path . \"/data/projects.php\");\n        $active = file_exists($path . \"/data/active.php\");\n\n        if(!$users && !$projects && !$active){\n            // Installer\n            require_once('components/install/view.php');\n        }else{\n            // Login form\n            ?>\n\n            <form id=\"login\" method=\"post\" style=\"position: fixed; width: 350px; top: 30%; left: 50%; margin-left: -175px; padding: 35px;\">\n\n                <label><span class=\"icon-user login-icon\"></span> <?php i18n(\"Username\"); ?></label>\n                <input type=\"text\" name=\"username\" autofocus=\"autofocus\" autocomplete=\"off\">\n\n                <label><span class=\"icon-lock login-icon\"></span> <?php i18n(\"Password\"); ?></label>\n                <input type=\"password\" name=\"password\">\n                \n                <div class=\"language-selector\">\n                    <label><span class=\"icon-picture login-icon\"></span> <?php i18n(\"Theme\"); ?></label>\n                    <select name=\"theme\" id=\"theme\">\n                        <option value=\"default\"><?php i18n(\"Default\"); ?></option>\n                        <?php\n                        include 'languages/code.php';\n                        foreach($themes as $theme): \n                            if(file_exists(THEMES.\"/\" . $theme . \"/theme.json\")) {\n                                $data = file_get_contents(THEMES.\"/\" . $theme . \"/theme.json\");\n                                $data = json_decode($data,true);\n                            ?>\n                            <option value=\"<?php echo $theme; ?>\" <?php if($theme == THEME) { echo \"selected\"; } ?>><?php if($data[0]['name'] != '') { echo $data[0]['name']; } else { echo $theme; } ?></option>\n                        <?php } endforeach; ?>\n                    </select>\n                    <label><span class=\"icon-language login-icon\"></span> <?php i18n(\"Language\"); ?></label>\n                    <select name=\"language\" id=\"language\">\n                        <?php\n                        include 'languages/code.php';\n                        foreach(glob(\"languages/*.php\") as $filename): \n                            $lang_code = str_replace(array(\"languages/\", \".php\"), \"\", $filename);\n                            if(!isset($languages[$lang_code])) continue;\n                            $lang_disp = ucfirst(strtolower($languages[$lang_code]));\n                            ?>\n                            <option value=\"<?php echo $lang_code; ?>\" <?php if ($lang_code == \"en\"){echo \"selected\";}?>><?php echo $lang_disp; ?></option>\n                        <?php endforeach; ?>\n                    </select>\n                </div>\n                \n                <button><?php i18n(\"Login\"); ?></button>\n\n                <a class=\"show-language-selector\"><?php i18n(\"More\"); ?></a>\n\n            </form>\n\n            <script src=\"components/user/init.js\"></script>\n            <?php\n\n        }\n\n    //////////////////////////////////////////////////////////////////\n    // AUTHENTICATED\n    //////////////////////////////////////////////////////////////////\n\n    }else{\n\n    ?>\n\n    <div id=\"workspace\">\n\n        <div id=\"sb-left\" class=\"sidebar\">\n            <div id=\"sb-left-title\">\n                <a id=\"lock-left-sidebar\" class=\"icon-lock icon\"></a>\n                <?php if (!common::isWINOS()) { ?>\n                <a id=\"finder-quick\" class=\"icon icon-archive\"></a>\n                <a id=\"tree-search\" class=\"icon-search icon\"></a>\n                <h2 id=\"finder-label\"> <?php i18n(\"Explore\"); ?> </h2>\n                <div id=\"finder-wrapper\">\n                   <a id=\"finder-options\" class=\"icon icon-cog\"></a>\n                   <div id=\"finder-inner-wrapper\">\n                   <input type=\"text\" id=\"finder\"></input>\n                   </div>\n                   <ul id=\"finder-options-menu\" class=\"options-menu\">\n                      <li class=\"chosen\"><a data-option=\"left_prefix\"><?php i18n(\"Prefix\"); ?></a></li>\n                      <li><a data-option=\"substring\"><?php i18n(\"Substring\"); ?></a></li>\n                      <li><a data-option=\"regexp\"><?php i18n(\"Regular expression\"); ?></a></li>\n                      <li><a data-action=\"search\"><?php i18n(\"Search File Contents\"); ?></a></li>\n                   </ul>\n                </div>\n                <?php } ?>\n            </div>\n\n            <div class=\"sb-left-content\">\n                <div id=\"context-menu\" data-path=\"\" data-type=\"\">\n\n                    <?php\n\n                        ////////////////////////////////////////////////////////////\n                        // Load Context Menu\n                        ////////////////////////////////////////////////////////////\n\n                        foreach($context_menu as $menu_item=>$data){\n\n                            if($data['title']=='Break'){\n                                echo('<hr class=\"'.$data['applies-to'].'\">');\n                            } else{\n                                echo('<a class=\"'.$data['applies-to'].'\" onclick=\"'.$data['onclick'].'\"><span class=\"'.$data['icon'].'\"></span>'.get_i18n($data['title']).'</a>');\n                            }\n\n                        }\n                        \n                        foreach ($plugins as $plugin){\n                             if(file_exists(PLUGINS . \"/\" . $plugin . \"/plugin.json\")) {\n                                $pdata = file_get_contents(PLUGINS . \"/\" . $plugin . \"/plugin.json\");\n                                $pdata = json_decode($pdata,true);\n                                if(isset($pdata[0]['contextmenu'])) {\n                                    foreach($pdata[0]['contextmenu'] as $contextmenu) {\n                                        if((!isset($contextmenu['admin']) || ($contextmenu['admin']) && checkAccess()) || !$contextmenu['admin']){\n                                            if(isset($contextmenu['applies-to']) && isset($contextmenu['action']) && isset($contextmenu['icon']) && isset($contextmenu['title'])) {\n                                                echo('<hr class=\"'.$contextmenu['applies-to'].'\">');\n                                                echo('<a class=\"'.$contextmenu['applies-to'].'\" onclick=\"'.$contextmenu['action'].'\"><span class=\"'.$contextmenu['icon'].'\"></span>'.$contextmenu['title'].'</a>');\n                                            }\n                                        }\n                                    }\n                                }\n                             }\n                        }\n\n                ?>\n\n                </div>\n\n                <div id=\"file-manager\"></div>\n\n                <ul id=\"list-active-files\"></ul>\n\n            </div>\n            \n            <div id=\"side-projects\" class=\"sb-left-projects\">\n                <div id=\"project-list\" class=\"sb-project-list\">\n                \n                    <div class=\"project-list-title\">\n                        <h2><?php i18n(\"Projects\"); ?></h2>\n                        <a id=\"projects-collapse\" class=\"icon-down-dir icon\" alt=\"<?php i18n(\"Collapse\"); ?>\"></a>\n                        <?php if(checkAccess()) { ?>\n                        <a id=\"projects-manage\" class=\"icon-archive icon\"></a>\n                        <a id=\"projects-create\" class=\"icon-plus icon\" alt=\"<?php i18n(\"Create Project\"); ?>\"></a>\n                        <?php } ?>\n                    </div>\n                    \n                    <div class=\"sb-projects-content\"></div>\n                    \n                </div>\n            </div>\n\n            <div class=\"sidebar-handle\"><span>||</span></div>\n\n        </div>\n\n        <div id=\"cursor-position\"><?php i18n(\"Ln\"); ?>: 0 &middot; <?php i18n(\"Col\"); ?>: 0</div>\n\n        <div id=\"editor-region\">\n            <div id=\"editor-top-bar\">\n                <ul id=\"tab-list-active-files\"> </ul>\n                <div id=\"tab-dropdown\">\n                    <a id=\"tab-dropdown-button\" class=\"icon-down-open\"></a>\n                </div>\n                <div id=\"tab-close\">\n                    <a id=\"tab-close-button\" class=\"icon-cancel-circled\" title=\"<?php i18n(\"Close All\") ?>\"></a>\n                </div>\n                <ul id=\"dropdown-list-active-files\"></ul>\n                <div class=\"bar\"></div>\n            </div>\n\n            <div id=\"root-editor-wrapper\"></div>\n\n            <div id=\"editor-bottom-bar\">\n                <a id=\"settings\" class=\"ico-wrapper\"><span class=\"icon-doc-text\"></span><?php i18n(\"Settings\"); ?></a>\n                \n                <?php\n\n                    ////////////////////////////////////////////////////////////\n                    // Load Plugins\n                    ////////////////////////////////////////////////////////////\n                    \n                    foreach ($plugins as $plugin){\n                         if(file_exists(PLUGINS . \"/\" . $plugin . \"/plugin.json\")) {\n                            $pdata = file_get_contents(PLUGINS . \"/\" . $plugin . \"/plugin.json\");\n                            $pdata = json_decode($pdata,true);\n                            if(isset($pdata[0]['bottombar'])) {\n                                foreach($pdata[0]['bottombar'] as $bottommenu) {\n                                    if((!isset($bottommenu['admin']) || ($bottommenu['admin']) && checkAccess()) || !$bottommenu['admin']){\n                                        if(isset($bottommenu['action']) && isset($bottommenu['icon']) && isset($bottommenu['title'])) {\n                                            echo('<div class=\"divider\"></div>');\n                                            echo('<a onclick=\"'.$bottommenu['action'].'\"><span class=\"'.$bottommenu['icon'].'\"></span>'.$bottommenu['title'].'</a>');\n                                        }\n                                    }\n                                }\n                            }\n                         }\n                    }\n\n                ?>\n                \n                <div class=\"divider\"></div>\n                <a id=\"split\" class=\"ico-wrapper\"><span class=\"icon-layout\"></span><?php i18n(\"Split\"); ?></a>\n                <div class=\"divider\"></div>\n                <a id=\"current-mode\"><span class=\"icon-layout\"></span></a>                \n                <div class=\"divider\"></div>\n                <div id=\"current-file\"></div>\n            </div>\n            <div id=\"changemode-menu\" class=\"options-menu\">\n            </div>\n            <ul id=\"split-options-menu\" class=\"options-menu\">\n              <li id=\"split-horizontally\"><a> <?php i18n(\"Split Horizontally\"); ?> </a></li>\n              <li id=\"split-vertically\"><a> <?php i18n(\"Split Vertically\"); ?> </a></li>\n              <li id=\"merge-all\"><a> <?php i18n(\"Merge all\"); ?> </a></li>\n            </ul>\n        </div>\n\n        <div id=\"sb-right\" class=\"sidebar\">\n\n            <div class=\"sidebar-handle\"><span><a class=\"icon-menu\"></a></span></div>\n            <div id=\"sb-right-title\">\n                <span id=\"lock-right-sidebar\" class=\"icon-switch icon\"></span>\n            </div>\n\n            <div class=\"sb-right-content\">\n\n                <?php\n\n                ////////////////////////////////////////////////////////////\n                // Load Right Bar\n                ////////////////////////////////////////////////////////////\n\n                foreach($right_bar as $item_rb=>$data){\n                    if(!isset($data['admin'])) {\n                      $data['admin'] = false;\n                    }\n                    if($data['title']=='break'){\n                        if(!$data['admin'] || $data['admin'] && checkAccess()) {\n                            echo(\"<hr>\");\n                        }\n                    }else if($data['title']!='break' && $data['title']!='pluginbar' && $data['onclick'] == ''){\n                        if(!$data['admin'] || $data['admin'] && checkAccess()) {\n                            echo(\"<hr><div class='sb-right-category'>\".get_i18n($data['title']).\"</div>\");\n                        }\n                    }else if ($data['title']=='pluginbar'){\n                        if(!$data['admin'] || $data['admin'] && checkAccess()) {\n                            foreach ($plugins as $plugin){\n                                 if(file_exists(PLUGINS . \"/\" . $plugin . \"/plugin.json\")) {\n                                    $pdata = file_get_contents(PLUGINS . \"/\" . $plugin . \"/plugin.json\");\n                                    $pdata = json_decode($pdata,true);\n                                    if(isset($pdata[0]['rightbar'])) {\n                                        foreach($pdata[0]['rightbar'] as $rightbar) {\n                                            if((!isset($rightbar['admin']) || ($rightbar['admin']) && checkAccess()) || !$rightbar['admin']){\n                                                if(isset($rightbar['action']) && isset($rightbar['icon']) && isset($rightbar['title'])) {\n                                                    echo('<a onclick=\"'.$rightbar['action'].'\"><span class=\"'.$rightbar['icon'].'\"></span>'.get_i18n($rightbar['title']).'</a>');\n                                                }\n                                            }\n                                        }\n                                        //echo(\"<hr>\");\n                                    }\n                                 }\n                            }\n                        }\n                    } else{\n                        if(!$data['admin'] || $data['admin'] && checkAccess()) {\n                            echo('<a onclick=\"'.$data['onclick'].'\"><span class=\"'.$data['icon'].' bigger-icon\"></span>'.get_i18n($data['title']).'</a>');\n                        }\n                    }\n\n                }\n\n                ?>\n\n            </div>\n\n        </div>\n\n    </div>\n\n    <div id=\"modal-overlay\"></div>\n    <div id=\"modal\"><div id=\"close-handle\" class=\"icon-cancel\" onclick=\"codiad.modal.unload();\"></div><div id=\"drag-handle\" class=\"icon-location\"></div><div id=\"modal-content\"></div></div>\n\n    <iframe id=\"download\"></iframe>\n\n    <div id=\"autocomplete\"><ul id=\"suggestions\"></ul></div>\n\n    <!-- ACE -->\n    <script src=\"components/editor/ace-editor/ace.js\"></script>\n\n    <!-- COMPONENTS -->\n    <?php\n\n        //////////////////////////////////////////////////////////////////\n        // LOAD COMPONENTS\n        //////////////////////////////////////////////////////////////////\n\n        // JS\n        foreach($components as $component){\n            if(file_exists(COMPONENTS . \"/\" . $component . \"/init.js\")){\n                echo('<script src=\"components/'.$component.'/init.js\"></script>\"');\n            }\n        }\n        \n        foreach($plugins as $plugin){\n            if(file_exists(PLUGINS . \"/\" . $plugin . \"/init.js\")){\n                echo('<script src=\"plugins/'.$plugin.'/init.js\"></script>\"');\n            }\n        }\n\n    }\n\n    ?>\n\n</body>\n</html>\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "languages",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "style_guide.php",
          "type": "blob",
          "size": 23.822265625,
          "content": "<!doctype html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>CODIAD STYLE GUIDE</title>\n    <link rel=\"stylesheet\" href=\"themes/default/reset.css\">\n    <link rel=\"stylesheet\" href=\"themes/default/fonts.css\">\n    <link rel=\"stylesheet\" href=\"themes/default/screen.css\">\n    <style type=\"text/css\">\n        html { overflow: scroll; }\n        body { width: 100%; margin: 0 auto; overflow: scroll; }\n        td .icon { font-size: 30px; display: inline; padding-top: 0; margin-top: 0; }\n        p { padding: 15px 0; margin: 0; font-weight: bold; }\n        label { margin-top: 25px; }\n        #container { width: 600px; margin: 50px auto; }\n        .item-icon { float: right; }\n    </style>\n</head>\n\n<body>\n\n    <div id=\"container\">\n\n    <label>Form Fields</label>\n    \n    <p>Code:</p>\n    \n    <pre>&lt;input type=&quot;text&quot;&gt;\n    \n&lt;select&gt;\n    &lt;option value=&quot;one&quot;&lt;Option One&lt;/option&gt;\n    &lt;option value=&quot;two&quot;&lt;Option Two&lt;/option&gt;\n    &lt;option value=&quot;three&quot;&lt;Option Three&lt;/option&gt;\n&lt;/select&gt;\n\n\n&lt;textarea&gt;&lt;/textarea&gt;</pre>\n\n    <p>Output:</p>\n    \n    <input type=\"text\">\n    \n    <select>\n        <option value=\"one\">Option One</option>\n        <option value=\"two\">Option Two</option>\n        <option value=\"three\">Option Three</option>\n    </select>\n    \n    <textarea></textarea>\n\n    <label>Buttons</label>\n    \n    <p>Code:</p>\n    \n    <pre>&lt;button class=&quot;btn-left&quot;&gt;Left Button&lt;/button&gt;&lt;button class=&quot;btn-mid&quot;&gt;Mid Button&lt;/button&gt;&lt;button class=&quot;btn-right&quot;&gt;Right Button&lt;/button&gt;</pre>\n    \n    <p>Output:</p>\n    \n    <button class=\"btn-left\">Left Button</button><button class=\"btn-mid\">Mid Button</button><button class=\"btn-right\">Right Button</button>\n    \n    \n    <br><br>\n    <label>Icons</label>\n\n    <table style=\"font-weight: normal; width: 100%; margin: 0 auto;\" cellpadding=\"5\">\n        <tr>\n            <td>\nicon-note                 : <span class=\"item-icon      icon-note           \"></span><br>\nicon-note-beamed          : <span class=\"item-icon      icon-note-beamed    \"></span><br>\nicon-music                : <span class=\"item-icon      icon-music          \"></span><br>\nicon-search               : <span class=\"item-icon      icon-search         \"></span><br>\nicon-flashlight           : <span class=\"item-icon      icon-flashlight     \"></span><br>\nicon-mail                 : <span class=\"item-icon      icon-mail           \"></span><br>\nicon-heart                : <span class=\"item-icon      icon-heart          \"></span><br>\nicon-heart-empty          : <span class=\"item-icon      icon-heart-empty    \"></span><br>\nicon-star                 : <span class=\"item-icon      icon-star           \"></span><br>\nicon-star-empty           : <span class=\"item-icon      icon-star-empty     \"></span><br>\nicon-user                 : <span class=\"item-icon      icon-user           \"></span><br>\nicon-users                : <span class=\"item-icon      icon-users          \"></span><br>\nicon-user-add             : <span class=\"item-icon      icon-user-add       \"></span><br>\nicon-video                : <span class=\"item-icon      icon-video          \"></span><br>\nicon-picture              : <span class=\"item-icon      icon-picture        \"></span><br>\nicon-camera               : <span class=\"item-icon      icon-camera         \"></span><br>\nicon-layout               : <span class=\"item-icon      icon-layout         \"></span><br>\nicon-menu                 : <span class=\"item-icon      icon-menu           \"></span><br>\nicon-check                : <span class=\"item-icon      icon-check          \"></span><br>\nicon-cancel               : <span class=\"item-icon      icon-cancel         \"></span><br>\nicon-cancel-circled       : <span class=\"item-icon      icon-cancel-circled \"></span><br>\nicon-cancel-squared       : <span class=\"item-icon      icon-cancel-squared \"></span><br>\nicon-plus                 : <span class=\"item-icon      icon-plus           \"></span><br>\nicon-plus-circled         : <span class=\"item-icon      icon-plus-circled   \"></span><br>\nicon-plus-squared         : <span class=\"item-icon      icon-plus-squared   \"></span><br>\nicon-minus                : <span class=\"item-icon      icon-minus          \"></span><br>\nicon-minus-circled        : <span class=\"item-icon      icon-minus-circled  \"></span><br>\nicon-minus-squared        : <span class=\"item-icon      icon-minus-squared  \"></span><br>\nicon-help                 : <span class=\"item-icon      icon-help           \"></span><br>\nicon-help-circled         : <span class=\"item-icon      icon-help-circled   \"></span><br>\nicon-info                 : <span class=\"item-icon      icon-info           \"></span><br>\nicon-info-circled         : <span class=\"item-icon      icon-info-circled   \"></span><br>\nicon-back                 : <span class=\"item-icon      icon-back           \"></span><br>\nicon-home                 : <span class=\"item-icon      icon-home           \"></span><br>\nicon-link                 : <span class=\"item-icon      icon-link           \"></span><br>\nicon-attach               : <span class=\"item-icon      icon-attach         \"></span><br>\nicon-lock                 : <span class=\"item-icon      icon-lock           \"></span><br>\nicon-lock-open            : <span class=\"item-icon      icon-lock-open      \"></span><br>\nicon-eye                  : <span class=\"item-icon      icon-eye            \"></span><br>\nicon-tag                  : <span class=\"item-icon      icon-tag            \"></span><br>\nicon-bookmark             : <span class=\"item-icon      icon-bookmark       \"></span><br>\nicon-bookmarks            : <span class=\"item-icon      icon-bookmarks      \"></span><br>\nicon-flag                 : <span class=\"item-icon      icon-flag           \"></span><br>\nicon-thumbs-up            : <span class=\"item-icon      icon-thumbs-up      \"></span><br>\nicon-thumbs-down          : <span class=\"item-icon      icon-thumbs-down    \"></span><br>\nicon-download             : <span class=\"item-icon      icon-download       \"></span><br>\nicon-upload               : <span class=\"item-icon      icon-upload         \"></span><br>\nicon-upload-cloud         : <span class=\"item-icon      icon-upload-cloud   \"></span><br>\nicon-reply                : <span class=\"item-icon      icon-reply          \"></span><br>\nicon-reply-all            : <span class=\"item-icon      icon-reply-all      \"></span><br>\nicon-forward              : <span class=\"item-icon      icon-forward        \"></span><br>\nicon-quote                : <span class=\"item-icon      icon-quote          \"></span><br>\nicon-code                 : <span class=\"item-icon      icon-code           \"></span><br>\nicon-export               : <span class=\"item-icon      icon-export         \"></span><br>\nicon-pencil               : <span class=\"item-icon      icon-pencil         \"></span><br>\nicon-feather              : <span class=\"item-icon      icon-feather        \"></span><br>\nicon-print                : <span class=\"item-icon      icon-print          \"></span><br>\nicon-retweet              : <span class=\"item-icon      icon-retweet        \"></span><br>\nicon-keyboard             : <span class=\"item-icon      icon-keyboard       \"></span><br>\nicon-comment              : <span class=\"item-icon      icon-comment        \"></span><br>\nicon-chat                 : <span class=\"item-icon      icon-chat           \"></span><br>\nicon-bell                 : <span class=\"item-icon      icon-bell           \"></span><br>\nicon-attention            : <span class=\"item-icon      icon-attention      \"></span><br>\nicon-alert                : <span class=\"item-icon      icon-alert          \"></span><br>\nicon-vcard                : <span class=\"item-icon      icon-vcard          \"></span><br>\nicon-address              : <span class=\"item-icon      icon-address        \"></span><br>\nicon-location             : <span class=\"item-icon      icon-location       \"></span><br>\nicon-map                  : <span class=\"item-icon      icon-map            \"></span><br>\nicon-direction            : <span class=\"item-icon      icon-direction      \"></span><br>\nicon-compass              : <span class=\"item-icon      icon-compass        \"></span><br>\nicon-cup                  : <span class=\"item-icon      icon-cup            \"></span><br>\nicon-trash                : <span class=\"item-icon      icon-trash          \"></span><br>\nicon-doc                  : <span class=\"item-icon      icon-doc            \"></span><br>\nicon-docs                 : <span class=\"item-icon      icon-docs           \"></span><br>\nicon-doc-landscape        : <span class=\"item-icon      icon-doc-landscape  \"></span><br>\nicon-doc-text             : <span class=\"item-icon      icon-doc-text       \"></span><br>\nicon-doc-text-inv         : <span class=\"item-icon      icon-doc-text-inv   \"></span><br>\nicon-newspaper            : <span class=\"item-icon      icon-newspaper      \"></span><br>\nicon-book-open            : <span class=\"item-icon      icon-book-open      \"></span><br>\nicon-book                 : <span class=\"item-icon      icon-book           \"></span><br>\nicon-folder               : <span class=\"item-icon      icon-folder         \"></span><br>\nicon-archive              : <span class=\"item-icon      icon-archive        \"></span><br>\nicon-box                  : <span class=\"item-icon      icon-box            \"></span><br>\nicon-rss                  : <span class=\"item-icon      icon-rss            \"></span><br>\n</td>\n<td>\nicon-phone                : <span class=\"item-icon      icon-phone          \"></span><br>\nicon-cog                  : <span class=\"item-icon      icon-cog            \"></span><br>\nicon-tools                : <span class=\"item-icon      icon-tools          \"></span><br>\nicon-share                : <span class=\"item-icon      icon-share          \"></span><br>\nicon-shareable            : <span class=\"item-icon      icon-shareable      \"></span><br>\nicon-basket               : <span class=\"item-icon      icon-basket         \"></span><br>\nicon-bag                  : <span class=\"item-icon      icon-bag            \"></span><br>\nicon-calendar             : <span class=\"item-icon      icon-calendar       \"></span><br>\nicon-login                : <span class=\"item-icon      icon-login          \"></span><br>\nicon-logout               : <span class=\"item-icon      icon-logout         \"></span><br>\nicon-mic                  : <span class=\"item-icon      icon-mic            \"></span><br>\nicon-mute                 : <span class=\"item-icon      icon-mute           \"></span><br>\nicon-sound                : <span class=\"item-icon      icon-sound          \"></span><br>\nicon-volume               : <span class=\"item-icon      icon-volume         \"></span><br>\nicon-clock                : <span class=\"item-icon      icon-clock          \"></span><br>\nicon-hourglass            : <span class=\"item-icon      icon-hourglass      \"></span><br>\nicon-lamp                 : <span class=\"item-icon      icon-lamp           \"></span><br>\nicon-light-down           : <span class=\"item-icon      icon-light-down     \"></span><br>\nicon-light-up             : <span class=\"item-icon      icon-light-up       \"></span><br>\nicon-adjust               : <span class=\"item-icon      icon-adjust         \"></span><br>\nicon-block                : <span class=\"item-icon      icon-block          \"></span><br>\nicon-resize-full          : <span class=\"item-icon      icon-resize-full    \"></span><br>\nicon-resize-small         : <span class=\"item-icon      icon-resize-small   \"></span><br>\nicon-popup                : <span class=\"item-icon      icon-popup          \"></span><br>\nicon-publish              : <span class=\"item-icon      icon-publish        \"></span><br>\nicon-window               : <span class=\"item-icon      icon-window         \"></span><br>\nicon-arrow-combo          : <span class=\"item-icon      icon-arrow-combo    \"></span><br>\nicon-down-circled         : <span class=\"item-icon      icon-down-circled   \"></span><br>\nicon-left-circled         : <span class=\"item-icon      icon-left-circled   \"></span><br>\nicon-right-circled        : <span class=\"item-icon      icon-right-circled  \"></span><br>\nicon-up-circled           : <span class=\"item-icon      icon-up-circled     \"></span><br>\nicon-down-open            : <span class=\"item-icon      icon-down-open      \"></span><br>\nicon-left-open            : <span class=\"item-icon      icon-left-open      \"></span><br>\nicon-right-open           : <span class=\"item-icon      icon-right-open     \"></span><br>\nicon-up-open              : <span class=\"item-icon      icon-up-open        \"></span><br>\nicon-down-open-mini       : <span class=\"item-icon      icon-down-open-mini \"></span><br>\nicon-left-open-mini       : <span class=\"item-icon      icon-left-open-mini \"></span><br>\nicon-right-open-mini      : <span class=\"item-icon      icon-right-open-mini\"></span><br>\nicon-up-open-mini         : <span class=\"item-icon      icon-up-open-mini   \"></span><br>\nicon-down-open-big        : <span class=\"item-icon      icon-down-open-big  \"></span><br>\nicon-left-open-big        : <span class=\"item-icon      icon-left-open-big  \"></span><br>\nicon-right-open-big       : <span class=\"item-icon      icon-right-open-big \"></span><br>\nicon-up-open-big          : <span class=\"item-icon      icon-up-open-big    \"></span><br>\nicon-down                 : <span class=\"item-icon      icon-down           \"></span><br>\nicon-left                 : <span class=\"item-icon      icon-left           \"></span><br>\nicon-right                : <span class=\"item-icon      icon-right          \"></span><br>\nicon-up                   : <span class=\"item-icon      icon-up             \"></span><br>\nicon-down-dir             : <span class=\"item-icon      icon-down-dir       \"></span><br>\nicon-left-dir             : <span class=\"item-icon      icon-left-dir       \"></span><br>\nicon-right-dir            : <span class=\"item-icon      icon-right-dir      \"></span><br>\nicon-up-dir               : <span class=\"item-icon      icon-up-dir         \"></span><br>\nicon-down-bold            : <span class=\"item-icon      icon-down-bold      \"></span><br>\nicon-left-bold            : <span class=\"item-icon      icon-left-bold      \"></span><br>\nicon-right-bold           : <span class=\"item-icon      icon-right-bold     \"></span><br>\nicon-up-bold              : <span class=\"item-icon      icon-up-bold        \"></span><br>\nicon-down-thin            : <span class=\"item-icon      icon-down-thin      \"></span><br>\nicon-left-thin            : <span class=\"item-icon      icon-left-thin      \"></span><br>\nicon-right-thin           : <span class=\"item-icon      icon-right-thin     \"></span><br>\nicon-up-thin              : <span class=\"item-icon      icon-up-thin        \"></span><br>\nicon-ccw                  : <span class=\"item-icon      icon-ccw            \"></span><br>\nicon-cw                   : <span class=\"item-icon      icon-cw             \"></span><br>\nicon-arrows-ccw           : <span class=\"item-icon      icon-arrows-ccw     \"></span><br>\nicon-level-down           : <span class=\"item-icon      icon-level-down     \"></span><br>\nicon-level-up             : <span class=\"item-icon      icon-level-up       \"></span><br>\nicon-shuffle              : <span class=\"item-icon      icon-shuffle        \"></span><br>\nicon-loop                 : <span class=\"item-icon      icon-loop           \"></span><br>\nicon-switch               : <span class=\"item-icon      icon-switch         \"></span><br>\nicon-play                 : <span class=\"item-icon      icon-play           \"></span><br>\nicon-stop                 : <span class=\"item-icon      icon-stop           \"></span><br>\nicon-pause                : <span class=\"item-icon      icon-pause          \"></span><br>\nicon-record               : <span class=\"item-icon      icon-record         \"></span><br>\nicon-to-end               : <span class=\"item-icon      icon-to-end         \"></span><br>\nicon-to-start             : <span class=\"item-icon      icon-to-start       \"></span><br>\nicon-fast-forward         : <span class=\"item-icon      icon-fast-forward   \"></span><br>\nicon-fast-backward        : <span class=\"item-icon      icon-fast-backward  \"></span><br>\nicon-progress-0           : <span class=\"item-icon      icon-progress-0     \"></span><br>\nicon-progress-1           : <span class=\"item-icon      icon-progress-1     \"></span><br>\nicon-progress-2           : <span class=\"item-icon      icon-progress-2     \"></span><br>\nicon-progress-3           : <span class=\"item-icon      icon-progress-3     \"></span><br>\nicon-target               : <span class=\"item-icon      icon-target         \"></span><br>\nicon-palette              : <span class=\"item-icon      icon-palette        \"></span><br>\nicon-list                 : <span class=\"item-icon      icon-list           \"></span><br>\nicon-list-add             : <span class=\"item-icon      icon-list-add       \"></span><br>\nicon-signal               : <span class=\"item-icon      icon-signal         \"></span><br>\n</td>\n<td>\nicon-trophy               : <span class=\"item-icon      icon-trophy         \"></span><br>\nicon-battery              : <span class=\"item-icon      icon-battery        \"></span><br>\nicon-back-in-time         : <span class=\"item-icon      icon-back-in-time   \"></span><br>\nicon-monitor              : <span class=\"item-icon      icon-monitor        \"></span><br>\nicon-mobile               : <span class=\"item-icon      icon-mobile         \"></span><br>\nicon-network              : <span class=\"item-icon      icon-network        \"></span><br>\nicon-cd                   : <span class=\"item-icon      icon-cd             \"></span><br>\nicon-inbox                : <span class=\"item-icon      icon-inbox          \"></span><br>\nicon-install              : <span class=\"item-icon      icon-install        \"></span><br>\nicon-globe                : <span class=\"item-icon      icon-globe          \"></span><br>\nicon-cloud                : <span class=\"item-icon      icon-cloud          \"></span><br>\nicon-cloud-thunder        : <span class=\"item-icon      icon-cloud-thunder  \"></span><br>\nicon-flash                : <span class=\"item-icon      icon-flash          \"></span><br>\nicon-moon                 : <span class=\"item-icon      icon-moon           \"></span><br>\nicon-flight               : <span class=\"item-icon      icon-flight         \"></span><br>\nicon-paper-plane          : <span class=\"item-icon      icon-paper-plane    \"></span><br>\nicon-leaf                 : <span class=\"item-icon      icon-leaf           \"></span><br>\nicon-lifebuoy             : <span class=\"item-icon      icon-lifebuoy       \"></span><br>\nicon-mouse                : <span class=\"item-icon      icon-mouse          \"></span><br>\nicon-briefcase            : <span class=\"item-icon      icon-briefcase      \"></span><br>\nicon-suitcase             : <span class=\"item-icon      icon-suitcase       \"></span><br>\nicon-dot                  : <span class=\"item-icon      icon-dot            \"></span><br>\nicon-dot-2                : <span class=\"item-icon      icon-dot-2          \"></span><br>\nicon-dot-3                : <span class=\"item-icon      icon-dot-3          \"></span><br>\nicon-brush                : <span class=\"item-icon      icon-brush          \"></span><br>\nicon-magnet               : <span class=\"item-icon      icon-magnet         \"></span><br>\nicon-infinity             : <span class=\"item-icon      icon-infinity       \"></span><br>\nicon-erase                : <span class=\"item-icon      icon-erase          \"></span><br>\nicon-chart-pie            : <span class=\"item-icon      icon-chart-pie      \"></span><br>\nicon-chart-line           : <span class=\"item-icon      icon-chart-line     \"></span><br>\nicon-chart-bar            : <span class=\"item-icon      icon-chart-bar      \"></span><br>\nicon-chart-area           : <span class=\"item-icon      icon-chart-area     \"></span><br>\nicon-tape                 : <span class=\"item-icon      icon-tape           \"></span><br>\nicon-graduation-cap       : <span class=\"item-icon      icon-graduation-cap \"></span><br>\nicon-language             : <span class=\"item-icon      icon-language       \"></span><br>\nicon-ticket               : <span class=\"item-icon      icon-ticket         \"></span><br>\nicon-water                : <span class=\"item-icon      icon-water          \"></span><br>\nicon-droplet              : <span class=\"item-icon      icon-droplet        \"></span><br>\nicon-air                  : <span class=\"item-icon      icon-air            \"></span><br>\nicon-credit-card          : <span class=\"item-icon      icon-credit-card    \"></span><br>\nicon-floppy               : <span class=\"item-icon      icon-floppy         \"></span><br>\nicon-clipboard            : <span class=\"item-icon      icon-clipboard      \"></span><br>\nicon-megaphone            : <span class=\"item-icon      icon-megaphone      \"></span><br>\nicon-database             : <span class=\"item-icon      icon-database       \"></span><br>\nicon-drive                : <span class=\"item-icon      icon-drive          \"></span><br>\nicon-bucket               : <span class=\"item-icon      icon-bucket         \"></span><br>\nicon-thermometer          : <span class=\"item-icon      icon-thermometer    \"></span><br>\nicon-key                  : <span class=\"item-icon      icon-key            \"></span><br>\nicon-flow-cascade         : <span class=\"item-icon      icon-flow-cascade   \"></span><br>\nicon-flow-branch          : <span class=\"item-icon      icon-flow-branch    \"></span><br>\nicon-flow-tree            : <span class=\"item-icon      icon-flow-tree      \"></span><br>\nicon-flow-line            : <span class=\"item-icon      icon-flow-line      \"></span><br>\nicon-flow-parallel        : <span class=\"item-icon      icon-flow-parallel  \"></span><br>\nicon-rocket               : <span class=\"item-icon      icon-rocket         \"></span><br>\nicon-gauge                : <span class=\"item-icon      icon-gauge          \"></span><br>\nicon-traffic-cone         : <span class=\"item-icon      icon-traffic-cone   \"></span><br>\nicon-cc                   : <span class=\"item-icon      icon-cc             \"></span><br>\nicon-cc-by                : <span class=\"item-icon      icon-cc-by          \"></span><br>\nicon-cc-nc                : <span class=\"item-icon      icon-cc-nc          \"></span><br>\nicon-cc-nc-eu             : <span class=\"item-icon      icon-cc-nc-eu       \"></span><br>\nicon-cc-nc-jp             : <span class=\"item-icon      icon-cc-nc-jp       \"></span><br>\nicon-cc-sa                : <span class=\"item-icon      icon-cc-sa          \"></span><br>\nicon-cc-nd                : <span class=\"item-icon      icon-cc-nd          \"></span><br>\nicon-cc-pd                : <span class=\"item-icon      icon-cc-pd          \"></span><br>\nicon-cc-zero              : <span class=\"item-icon      icon-cc-zero        \"></span><br>\nicon-cc-share             : <span class=\"item-icon      icon-cc-share       \"></span><br>\nicon-cc-remix             : <span class=\"item-icon      icon-cc-remix       \"></span><br>\nicon-rdio                 : <span class=\"item-icon      icon-rdio           \"></span><br>\nicon-rdio-circled         : <span class=\"item-icon      icon-rdio-circled   \"></span><br>\nicon-spotify              : <span class=\"item-icon      icon-spotify        \"></span><br>\nicon-spotify-circled      : <span class=\"item-icon      icon-spotify-circled\"></span><br>\nicon-qq                   : <span class=\"item-icon      icon-qq             \"></span><br>\nicon-renren               : <span class=\"item-icon      icon-renren         \"></span><br>\nicon-mixi                 : <span class=\"item-icon      icon-mixi           \"></span><br>\nicon-behance              : <span class=\"item-icon      icon-behance        \"></span><br>\nicon-vkontakte            : <span class=\"item-icon      icon-vkontakte      \"></span><br>\nicon-smashing             : <span class=\"item-icon      icon-smashing       \"></span><br>\nicon-sweden               : <span class=\"item-icon      icon-sweden         \"></span><br>\nicon-db-shape             : <span class=\"item-icon      icon-db-shape       \"></span><br>\nicon-logo-db              : <span class=\"item-icon      icon-logo-db        \"></span><br>\n            </td>\n        </tr>\n    </table>\n\n    </div>\n\n</body>\n</html>\n"
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "workspace",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}