{
  "metadata": {
    "timestamp": 1736711951141,
    "page": 391,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "smarty-php/smarty",
      "stars": 2279,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4521484375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n*.php text eol=lf\n*.y   text eol=lf\n*.lex text eol=lf\n\n# exclude from git export\n/tests export-ignore\n/utilities export-ignore\n/docker-compose.yml export-ignore\n/.github export-ignore\n/run_tests_for_all_php_versions.sh export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/make-release.sh export-ignore\n/phpunit.sh export-ignore\n/phpunit.xml export-ignore\n/TODO.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.068359375,
          "content": "\n.idea/\n\n/site\n\nphpunit*\n.phpunit.result.cache\nvendor/*\ncomposer.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 152.8623046875,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [5.4.3] - 2024-12-23\n- Fix PHP backtraces by qualifying/replacing `call_user_func_array` calls [#1074](https://github.com/smarty-php/smarty/issues/1074)\n\n\n## [5.4.2] - 2024-11-20\n\n\n- Support the deprecations introduced in PHP 8.4 and added tests for PHP 8.4 [#1043](https://github.com/smarty-php/smarty/pull/1043)\n\n## [5.4.1] - 2024-08-29\n\n\n- Enable (and fix) unit tests for Windows [#1046](https://github.com/smarty-php/smarty/pull/1046)\n- Fix the use of \"extends:\" to define the inheritance tree on Windows [#1018](https://github.com/smarty-php/smarty/issues/1018)\n\n## [5.4.0] - 2024-08-14\n- Fixing forced OpCache invalidation on every template include, which is resulting in fast raising wasted OpCache memory [#1007](https://github.com/smarty-php/smarty/issues/1007) \n- Improvement of auto-escaping [#1030](https://github.com/smarty-php/smarty/pull/1030)\n\n\n## [5.3.1] - 2024-06-16\n- Fixed error when using section with nocache [#1034](https://github.com/smarty-php/smarty/issues/1034)\n\n\n## [5.3.0] - 2024-05-30\n- Fix warning when calling hasVariable for an undefined variable [#977](https://github.com/smarty-php/smarty/issues/977)\n- Added `$smarty->prependTemplateDir()` method [#1022](https://github.com/smarty-php/smarty/issues/1022)\n\n\n## [5.2.0] - 2024-05-28\n- Fixed a code injection vulnerability in extends-tag. This addresses CVE-2024-35226.\n- Added `$smarty->setCacheModifiedCheck()` setter for cache_modified_check\n- Added a PSR-4 loading script to allow Smarty to be used without Composer [#1017](https://github.com/smarty-php/smarty/pull/1017)\n\n\n## [5.1.0] - 2024-04-22\n- Prevent deprecation notices during compilation in PHP8.3 [#996](https://github.com/smarty-php/smarty/issues/996)\n- Fix that getTemplateVars would return an array of objects instead of the assigned variables values [#994](https://github.com/smarty-php/smarty/issues/994)\n- Fix Smarty::assign() not returning $this when called with an array as first parameter [#972](https://github.com/smarty-php/smarty/pull/972)\n- Documented support for `{if $element is in $array}` syntax [#937](https://github.com/smarty-php/smarty/issues/937)\n- Added support for `{if $element is not in $array}` syntax [#937](https://github.com/smarty-php/smarty/issues/937)\n- Using stream variables in templates now throws a deprecation notice [#933](https://github.com/smarty-php/smarty/pull/933)\n- Internal compiler classes always return a string (the internal has_code flag has been removed for simplicity) [#918](https://github.com/smarty-php/smarty/pull/918)\n- Fix invalid classnames in Runtime code for foreach [#1000](https://github.com/smarty-php/smarty/issues/1000)\n\n## [5.0.2] - 2024-03-28\n- Fix Smarty::assign() not returning $this when called with an array as first parameter [#972](https://github.com/smarty-php/smarty/pull/972)\n\n## [5.0.1] - 2024-03-27\n- Fix error in Smarty\\Smarty::compileAllTemplates() by including missing FilesystemIterator class [#966](https://github.com/smarty-php/smarty/issues/966)  \n\n## [5.0.0] - 2024-03-25\n- Fixed that scoped variables would overwrite parent scope [#952](https://github.com/smarty-php/smarty/issues/952)\n- Removed publicly accessible `$tpl->_var_stack` variable\n\n### Fixed\n- Too many shorthand attributes error when using a modifier as a function with more than 3 parameters in an expression [#949](https://github.com/smarty-php/smarty/issues/949)\n\n### Removed\n- Dropped support for undocumented `{time()}` added in v5.0.0 since we already have the documented `{$smarty.now}`\n\n## [5.0.0-rc3] - 2024-02-26\n\n### Added\n- PHP8.3 support [#925](https://github.com/smarty-php/smarty/issues/925)\n- Backlink to GitHub in docs\n- Explain how to do escaping and set-up auto-escaping in docs [#865](https://github.com/smarty-php/smarty/issues/865)\n- Link to variable scope page in the documentation for the assign tag [#878](https://github.com/smarty-php/smarty/issues/878)\n- Add support for implode, substr and json_encode as modifiers/functions in templates [#939](https://github.com/smarty-php/smarty/issues/939)\n- Add template path to CompilerException to enable rich debug features [#935](https://github.com/smarty-php/smarty/issues/935)\n\n### Fixed\n- The {debug} tag was broken in v5 [#922](https://github.com/smarty-php/smarty/issues/922)\n- Documentation on `{if $x is even by $y}` syntax\n- Fix incorrect compilation of expressions when escape_html=true [#930](https://github.com/smarty-php/smarty/pull/930)\n\n## [5.0.0-rc2] - 2023-11-11\n\n### Fixed\n- Registered output filters wouldn't run [#899](https://github.com/smarty-php/smarty/issues/899)\n- Use of negative numbers in {math} equations [#895](https://github.com/smarty-php/smarty/issues/895)\n- Do not auto-html-escape custom function results [#906](https://github.com/smarty-php/smarty/issues/906)\n- Fix case-sensitive tag names [#907](https://github.com/smarty-php/smarty/issues/907)\n\n### Removed\n- Removed `$smarty->registered_filters` array\n\n## [5.0.0-rc1] - 2023-08-08\n\n### Added\n- Added support for PHP8.2\n- Added a new way to extend Smarty functionality using `Smarty::addExtension()` or `Smarty::setExtensions()`. Please see the docs for more information.\n- Custom tags can accept positional parameters, so you can write a block compiler that support this: `{trans \"Jack\" \"dull boy\"}All work and no play makes %s a %s.{/trans}` [#164](https://github.com/smarty-php/smarty/issues/164)\n- Full support for ternary operator: `{$test ? $a : $b}` and `{$var ?: $value_if_falsy}` [#881](https://github.com/smarty-php/smarty/issues/881)\n- Full support for null coalescing operator: `{$var ?? $value_if_null}` [#882](https://github.com/smarty-php/smarty/issues/882)\n\n### Changed\n- All Smarty code is now in the \\Smarty namespace. For simple use-cases, you only need to add\n  `use \\Smarty\\Smarty;` to your script and everything will work. If you extend Smarty or use\n  Smarty plug-ins, please review your code to see if they assume specific class or method names.\n  E.g.: `Smarty_Internal_Template` is now `\\Smarty\\Template\\`, `SmartyException` is now `\\Smarty\\Exception`.\n- Template variable scope bubbling has been simplified and made more consistent. \n  The global scope now equals the Smarty scope in order to avoid global state side effects. Please read\n  the documentation for more details.\n- Lexers and Parsers PHP files are reliably generated from sources (.y and .plex) using the make file \n- Smarty now always runs in multibyte mode, using `symfony/polyfill-mbstring` if required. Please use the\n  multibyte extension for optimal performance.\n- Smarty no longer calls `mb_internal_encoding()` and doesn't check for deprecated `mbstring.func_overload` ini directive [#480](https://github.com/smarty-php/smarty/issues/480)\n- Generated `<script>` tags lo longer have deprecated `type=\"text/javascript\"` or `language=\"Javascript\"` attributes [#815](https://github.com/smarty-php/smarty/issues/815)\n- Smarty will throw a compiler exception instead of silently ignoring a modifier on a function call, like this: `{include|dot:\"x-template-id\" file=\"included.dot.tpl\"}` [#526](https://github.com/smarty-php/smarty/issues/526) \n- The documentation was largely rewritten\n\n### Deprecated\n- `$smarty->getPluginsDir()`\n- `$smarty->loadFilter()`\n- `$smarty->setPluginsDir()`\n- `$smarty->assignGlobal()`\n- Using `$smarty->registerFilter()` for registering variable filters will trigger a notice.\n\n### Removed\n- Dropped support for PHP7.1\n- Removed `$smarty->left_delimiter` and `$smarty->right_delimiter`, use `$smarty->getLeftDelimiter()`/`$smarty->setLeftDelimiter()` and `$smarty->getRightDelimiter()`/`$smarty->setRightDelimiter()`\n- Removed support for the `$cache_attrs` parameter for registered plugins\n- Removed support for undocumented `{make_nocache}` tag\n- Removed support for deprecated `{insert}` tag, the 'insert' plugin type and the associated $smarty->trusted_dir variable\n- Removed the undocumented `{block_parent}` and `{parent}` alternatives to `{$smarty.block.parent}`\n- Removed the undocumented `{block_child}` and `{child}` alternatives to `{$smarty.block.child}`\n- Removed support for loading config files into a non-local scope using `{config_load}` from a template \n- Removed `$smarty->autoload_filters` in favor of `$smarty->registerFilter()`\n- Removed `$smarty->trusted_dir` and `$smarty->allow_php_templates` since support for executing php scripts from templates has been dropped  \n- Removed `$smarty->php_functions` and `$smarty->php_modifiers`. \n- You can no longer use native PHP-functions or userland functions in your templates without registering them. If you need a function in your templates,\n  register it first.\n- Removed support for `$smarty->getTags()`\n- Removed the abandoned `$smarty->direct_access_security` setting\n- Dropped support for `$smarty->plugins_dir` and `$smarty->use_include_path`. If you must, use `$smarty->addPluginsDir()` instead,\n  but it's better to use Smarty::addExtension() to add an extension or Smarty::registerPlugin to\n  quickly register a plugin using a callback function.\n- Removed constants such as SMARTY_DIR to prevent global side effects.\n- Removed direct access to `$smarty->template_dir`. Use `$smarty->setTemplateDir()`.\n- Removed direct access to `$smarty->cache_dir`. Use `$smarty->setCacheDir()`.\n- Removed direct access to `$smarty->compile_dir`. Use `$smarty->setCompileDir()`.\n- Removed `$smarty->loadPlugin()`, use `$smarty->registerPlugin()` instead.\n- Removed `$smarty->appendByRef()` and `$smarty->assignByRef()`.\n- Removed `$smarty->_current_file`\n- Removed `$smarty->allow_ambiguous_resources` (ambiguous resources handlers should still work)\n\n### Fixed\n- `|strip_tags` does not work if the input is 0 [#890](https://github.com/smarty-php/smarty/issues/890)\n\n## [4.3.2] - 2023-07-19\n\n### Fixed\n- `$smarty->muteUndefinedOrNullWarnings()` now also mutes PHP8 warnings for undefined properties\n\n## [4.3.1] - 2023-03-28\n\n### Security\n- Fixed Cross site scripting vulnerability in Javascript escaping. This addresses CVE-2023-28447.\n\n### Fixed\n- `$smarty->muteUndefinedOrNullWarnings()` now also mutes PHP7 notices for undefined array indexes [#736](https://github.com/smarty-php/smarty/issues/736)\n- `$smarty->muteUndefinedOrNullWarnings()` now treats undefined vars and array access of a null or false variables \n  equivalent across all supported PHP versions\n- `$smarty->muteUndefinedOrNullWarnings()` now allows dereferencing of non-objects across all supported PHP versions [#831](https://github.com/smarty-php/smarty/issues/831)\n- PHP 8.1 deprecation warnings on null strings in modifiers [#834](https://github.com/smarty-php/smarty/pull/834)\n\n## [4.3.0] - 2022-11-22\n\n### Added\n- PHP8.2 compatibility [#775](https://github.com/smarty-php/smarty/pull/775)\n\n### Changed\n- Include docs and demo in the releases [#799](https://github.com/smarty-php/smarty/issues/799)\n- Using PHP functions as modifiers now triggers a deprecation notice because we will drop support for this in the next major release [#813](https://github.com/smarty-php/smarty/issues/813) \n- Dropped remaining references to removed PHP-support in Smarty 4 from docs, lexer and security class. [#816](https://github.com/smarty-php/smarty/issues/816)\n- Support umask when writing (template) files and set dir permissions to 777 [#548](https://github.com/smarty-php/smarty/issues/548) [#819](https://github.com/smarty-php/smarty/issues/819) \n \n### Fixed\n- Output buffer is now cleaned for internal PHP errors as well, not just for Exceptions [#514](https://github.com/smarty-php/smarty/issues/514)\n- Fixed recursion and out of memory errors when caching in complicated template set-ups using inheritance and includes [#801](https://github.com/smarty-php/smarty/pull/801)\n- Fixed PHP8.1 deprecation errors in strip_tags \n- Fix Variable Usage in Exception message when unable to load subtemplate [#808](https://github.com/smarty-php/smarty/pull/808)\n- Fixed PHP8.1 deprecation notices for strftime [#672](https://github.com/smarty-php/smarty/issues/672)\n- Fixed PHP8.1 deprecation errors passing null to parameter in trim [#807](https://github.com/smarty-php/smarty/pull/807)\n- Adapt Smarty upper/lower functions to be codesafe (e.g. for Turkish locale) [#586](https://github.com/smarty-php/smarty/pull/586)\n- Bug fix for underscore and limited length in template name in custom resources [#581](https://github.com/smarty-php/smarty/pull/581)\n\n## [4.2.1] - 2022-09-14\n\n### Security\n- Applied appropriate javascript and html escaping in mailto plugin to counter injection attacks [#454](https://github.com/smarty-php/smarty/issues/454)\n\n### Fixed\n- Fixed PHP8.1 deprecation notices in modifiers (upper, explode, number_format and replace) [#755](https://github.com/smarty-php/smarty/pull/755) and [#788](https://github.com/smarty-php/smarty/pull/788)\n- Fixed PHP8.1 deprecation notices in capitalize modifier [#789](https://github.com/smarty-php/smarty/issues/789)\n- Fixed use of `rand()` without a parameter in math function [#794](https://github.com/smarty-php/smarty/issues/794)\n- Fixed unselected year/month/day not working in html_select_date [#395](https://github.com/smarty-php/smarty/issues/395)\n\n## [4.2.0] - 2022-08-01\n\n### Fixed\n- Fixed problems with smarty_mb_str_replace [#549](https://github.com/smarty-php/smarty/issues/549)\n- Fixed second parameter of unescape modifier not working [#777](https://github.com/smarty-php/smarty/issues/777)\n\n### Changed\n- Updated HTML of the debug template [#599](https://github.com/smarty-php/smarty/pull/599)\n\n## [4.1.1] - 2022-05-17\n\n### Security\n- Prevent PHP injection through malicious block name or include file name. This addresses CVE-2022-29221\n\n### Fixed\n- Exclude docs and demo from export and composer [#751](https://github.com/smarty-php/smarty/pull/751)\n- PHP 8.1 deprecation notices in demo/plugins/cacheresource.pdo.php [#706](https://github.com/smarty-php/smarty/issues/706)\n- PHP 8.1 deprecation notices in truncate modifier [#699](https://github.com/smarty-php/smarty/issues/699)\n- Math equation `max(x, y)` didn't work anymore [#721](https://github.com/smarty-php/smarty/issues/721)\n- Fix PHP 8.1 deprecated warning when calling rtrim [#743](https://github.com/smarty-php/smarty/pull/743)\n- PHP 8.1: fix deprecation in escape modifier [#727](https://github.com/smarty-php/smarty/pull/727)\n\n## [4.1.0] - 2022-02-06\n\n### Added\n- PHP8.1 compatibility [#713](https://github.com/smarty-php/smarty/pull/713)\n\n## [4.0.4] - 2022-01-18\n\n### Fixed\n- Fixed illegal characters bug in math function security check [#702](https://github.com/smarty-php/smarty/issues/702)\n\n## [4.0.3] - 2022-01-10\n\n### Security\n- Prevent evasion of the `static_classes` security policy. This addresses CVE-2021-21408\n\n## [4.0.2] - 2022-01-10\n\n### Security\n- Prevent arbitrary PHP code execution through maliciously crafted expression for the math function. This addresses CVE-2021-29454\n\n## [4.0.1] - 2022-01-09\n\n### Security\n- Rewrote the mailto function to not use `eval` when encoding with javascript\n\n## [4.0.0] - 2021-11-25\n\n## [4.0.0-rc.0] - 2021-10-13\n\n### Added\n- You can now use `$smarty->muteUndefinedOrNullWarnings()` to activate convert warnings about undefined or null template vars to notices when running PHP8\n\n### Changed\n- Switch CI from Travis to Github CI\n- Updated unit tests to avoid skipped and risky test warnings\n\n### Removed\n- Dropped support for PHP7.0 and below, so Smarty now requires PHP >=7.1\n- Dropped support for php asp tags in templates (removed from php since php7.0)\n- Dropped deprecated API calls that where only accessible through SmartyBC\n- Dropped support for {php} and {include_php} tags and embedded PHP in templates. Embedded PHP will now be passed through as is.\n- Removed all PHP_VERSION_ID and compare_version checks and conditional code blocks that are now no longer required\n- Dropped deprecated SMARTY_RESOURCE_CHAR_SET and SMARTY_RESOURCE_DATE_FORMAT constants\n- Dropped deprecated Smarty::muteExpectedErrors and Smarty::unmuteExpectedErrors API methods\n- Dropped deprecated $smarty->getVariable() method. Use $smarty->getTemplateVars() instead.\n- $smarty->registerResource() no longer accepts an array of callback functions\n\n## [3.1.40] - 2021-10-13\n\n### Changed\n- modifier escape now triggers a E_USER_NOTICE when an unsupported escape type is used https://github.com/smarty-php/smarty/pull/649\n\n### Security\n- More advanced javascript escaping to handle https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements thanks to m-haritonov\n\n## [3.1.39] - 2021-02-17\n\n### Security\n- Prevent access to `$smarty.template_object` in sandbox mode. This addresses CVE-2021-26119.\n- Fixed code injection vulnerability by using illegal function names in `{function name='blah'}{/function}`. This addresses CVE-2021-26120.\n\n## [3.1.38] - 2021-01-08\n\n### Fixed\n- Smarty::SMARTY_VERSION wasn't updated https://github.com/smarty-php/smarty/issues/628\n\n## [3.1.37] - 2021-01-07\n\n### Changed\n- Changed error handlers and handling of undefined constants for php8-compatibility (set $errcontext argument optional) https://github.com/smarty-php/smarty/issues/605\n- Changed expected error levels in unit tests for php8-compatibility\n- Travis unit tests now run for all php versions >= 5.3, including php8\n- Travis runs on Xenial where possible\n\n### Fixed\n- PHP5.3 compatibility fixes\n- Brought lexer source functionally up-to-date with compiled version\n\n## [3.1.36] - 2020-04-14\n\n### Fixed\n - Smarty::SMARTY_VERSION wasn't updated in v3.1.35 https://github.com/smarty-php/smarty/issues/584\n\n## [3.1.35] - 2020-04-14\n - remove whitespaces after comments https://github.com/smarty-php/smarty/issues/447\n - fix foreachelse on arrayiterators https://github.com/smarty-php/smarty/issues/506\n - fix files contained in git export archive for package maintainers https://github.com/smarty-php/smarty/issues/325\n - throw SmartyException when setting caching attributes for cacheable plugin https://github.com/smarty-php/smarty/issues/457\n - fix errors that occured where isset was replaced with null check such as https://github.com/smarty-php/smarty/issues/453\n - unit tests are now in the repository\n\n## 3.1.34 release - 05.11.2019\n13.01.2020\n - fix typo in exception message (JercSi)\n - fix typehint warning with callable (bets4breakfast)\n - add travis badge and compatability info to readme (matks)\n - fix stdClass cast when compiling foreach (carpii)\n - fix wrong set/get methods for memcached (IT-Experte)\n - fix pborm assigning value to object variables in smarty_internal_compile_assign (Hunman)\n - exclude error_reporting.ini from git export (glensc)\n\n## 3.1.34-dev-6 -\n30.10.2018\n - bugfix a nested subblock in an inheritance child template was not replace by\n   outer level block with same name in same child template https://github.com/smarty-php/smarty/issues/500\n\n29.10.2018\n - bugfix Smarty::$php_handling == PHP_PASSTHRU (default) did eat the \"\\n\" (newline) character if it did directly followed\n   a PHP tag like \"?>\" or other https://github.com/smarty-php/smarty/issues/501\n\n14.10.2018\n - bugfix autoloader exit shortcut https://github.com/smarty-php/smarty/issues/467\n\n11.10.2018\n - bugfix {insert} not works when caching is enabled and included template is present\n   https://github.com/smarty-php/smarty/issues/496\n - bugfix in date-format modifier; NULL at date string or default_date did not produce correct output\n   https://github.com/smarty-php/smarty/pull/458\n\n09.10.2018\n - bugfix fix of 26.8.2017 https://github.com/smarty-php/smarty/issues/327\n   modifier is applied to sum expression https://github.com/smarty-php/smarty/issues/491\n - bugfix indexed arrays could not be defined \"array(...)\"\"\n\n18.09.2018\n  - bugfix large plain text template sections without a Smarty tag > 700kB could\n    could fail in version 3.1.32 and 3.1.33 because PHP preg_match() restrictions\n    https://github.com/smarty-php/smarty/issues/488\n\n## 3.1.33 release - 12.09.2018\n## 3.1.33-dev-12 -\n03.09.2018\n  - bugfix {foreach} using new style property access like {$item@property} on\n    Smarty 2 style named foreach loop could produce errors https://github.com/smarty-php/smarty/issues/484\n\n31.08.2018\n  - bugfix some custom left and right delimiters like '{^' '^}' did not work\n    https://github.com/smarty-php/smarty/issues/450 https://github.com/smarty-php/smarty/pull/482\n\n  - reformating for PSR-2 coding standards https://github.com/smarty-php/smarty/pull/483\n\n  - bugfix on Windows absolute filepathes did fail if the drive letter was followed by a linux DIRECTORY_SEPARATOR\n    like C:/  at Smarty > 3.1.33-dev-5 https://github.com/smarty-php/smarty/issues/451\n\n  - PSR-2 code style fixes for config and template file Lexer/Parser generated with\n    the Smarty Lexer/Parser generator from https://github.com/smarty-php/smarty-lexer\n    https://github.com/smarty-php/smarty/pull/483\n\n26.08.2018\n  - bugfix/enhancement {capture} allow variable as capture block name in Smarty special variable\n    like $smarty.capture.$foo https://github.com/smarty-php/smarty/issues/478 https://github.com/smarty-php/smarty/pull/481\n\n## 3.1.33-dev-6 -\n19.08.2018\n  - fix PSR-2 coding standards and PHPDoc blocks https://github.com/smarty-php/smarty/pull/452\n    https://github.com/smarty-php/smarty/pull/475\n    https://github.com/smarty-php/smarty/pull/473\n  - bugfix PHP5.2 compatibility https://github.com/smarty-php/smarty/pull/472\n\n## 3.1.33-dev-4 -\n17.05.2018\n - bugfix strip-block produces different output in Smarty v3.1.32 https://github.com/smarty-php/smarty/issues/436\n - bugfix Smarty::compileAllTemplates ignores `$extension` parameter https://github.com/smarty-php/smarty/issues/437\n   https://github.com/smarty-php/smarty/pull/438\n - improvement do not compute total property in {foreach} if not needed https://github.com/smarty-php/smarty/issues/443\n - bugfix  plugins may not be loaded when setMergeCompiledIncludes is true https://github.com/smarty-php/smarty/issues/435\n\n26.04.2018\n - bugfix  regarding Security Vulnerability did not solve the problem under Linux.\n   Security issue CVE-2018-16831\n\n## 3.1.32 - (24.04.2018)\n24.04.2018\n - bugfix  possible Security Vulnerability in Smarty_Security class.\n\n26.03.2018\n - bugfix plugins may not be loaded if {function} or {block} tags are executed in nocache mode\n   https://github.com/smarty-php/smarty/issues/371\n\n26.03.2018\n - new feature {parent} =  {$smarty.block.parent} {child} =  {$smarty.block.child}\n\n23.03.2018\n - bugfix preg_replace could fail on large content resulting in a blank page https://github.com/smarty-php/smarty/issues/417\n\n21.03.2018\n - bugfix {$smarty.section...} used outside {section}{/section} showed incorrect values if {section}{/section} was called inside\n   another loop https://github.com/smarty-php/smarty/issues/422\n - bugfix short form of {section} attributes did not work https://github.com/smarty-php/smarty/issues/428\n\n17.03.2018\n - improvement Smarty::compileAllTemplates() exit with a non-zero status code if max errors is reached https://github.com/smarty-php/smarty/pull/402\n\n16.03.2018\n - bugfix extends resource did not work with user defined left/right delimiter https://github.com/smarty-php/smarty/issues/419\n\n22.11.2017\n - bugfix {break} and {continue} could fail if {foreach}{/foreach} did contain other\n   looping tags like {for}, {section} and {while} https://github.com/smarty-php/smarty/issues/323\n\n20.11.2017\n  - bugfix rework of newline spacing between tag code and template text.\n    now again identical with Smarty2 (forum topic 26878)\n  - replacement of \" by '\n\n05.11.2017\n  - lexer/parser optimization\n  - code cleanup and optimizations\n  - bugfix {$smarty.section.name.loop} used together with {$smarty.section.name.total} could produce\n    wrong results (forum topic 27041)\n\n26.10.2017\n  - bugfix Smarty version was  not filled in header comment of compiled and cached  files\n  - optimization replace internal Smarty::$ds property by DIRECTORY_SEPARATOR\n  - deprecate functions Smarty::muteExpectedErrors() and Smarty::unmuteExpectedErrors()\n    as Smarty does no longer use error suppression like @filemtime().\n    for backward compatibility code is moved from Smarty class to an external class and still can be\n    called.\n  - correction of PHPDoc blocks\n  - minor code cleanup\n\n21.10.2017\n  - bugfix custom delimiters could fail since modification of  version 3.1.32-dev-23\n    https://github.com/smarty-php/smarty/issues/394\n\n18.10.2017\n  - bugfix fix implementation of unclosed block tag in double quoted string of 12.10.2017\n    https://github.com/smarty-php/smarty/issues/396 https://github.com/smarty-php/smarty/issues/397\n    https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n12.10.2017\n  - bugfix $smarty.block.child and $smarty.block.parent could not be used like any\n    $smarty special variable https://github.com/smarty-php/smarty/issues/393\n  - unclosed block tag in double quoted string must throw compiler exception.\n     https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n07.10.2017\n  - bugfix modification of 9.8.2017 did fail on some recursive\n    tag nesting. https://github.com/smarty-php/smarty/issues/389\n\n26.8.2017\n  - bugfix chained modifier failed when last modifier parameter is a signed value\n    https://github.com/smarty-php/smarty/issues/327\n  - bugfix templates filepath with multibyte characters did not work\n    https://github.com/smarty-php/smarty/issues/385\n  - bugfix {make_nocache} did display code if the template did not contain other nocache code\n    https://github.com/smarty-php/smarty/issues/369\n\n09.8.2017\n  - improvement repeated delimiter like {{ and }} will be treated as literal\n    https://groups.google.com/forum/#!topic/smarty-developers/h9r82Bx4KZw\n\n05.8.2017\n  - bugfix wordwrap modifier could fail if used in nocache code.\n    converted plugin file shared.mb_wordwrap.php into modifier.mb_wordwrap.php\n  - cleanup of _getSmartyObj()\n\n31.7.2017\n  - Call clearstatcache() after mkdir() failure https://github.com/smarty-php/smarty/pull/379\n\n30.7.2017\n  - rewrite mkdir() bugfix to retry automatically see https://github.com/smarty-php/smarty/pull/377\n    https://github.com/smarty-php/smarty/pull/379\n\n21.7.2017\n  - security possible PHP code injection on custom resources at display() or fetch()\n    calls if the resource does not sanitize the template name\n  - bugfix fix 'mkdir(): File exists' error on create directory from parallel\n    processes https://github.com/smarty-php/smarty/pull/377\n  - bugfix solve preg_match() hhvm parameter problem https://github.com/smarty-php/smarty/pull/372\n\n27.5.2017\n  - bugfix change compiled code for registered function and modifiers to called as callable to allow closures\n    https://github.com/smarty-php/smarty/pull/368, https://github.com/smarty-php/smarty/issues/273\n  - bugfix https://github.com/smarty-php/smarty/pull/368 did break the default plugin handler\n  - improvement replace phpversion() by PHP_VERSION constant.\n    https://github.com/smarty-php/smarty/pull/363\n\n21.5.2017\n  - performance store flag for already required shared plugin functions in static variable or\n    Smarty's $_cache to improve performance when plugins are often called\n    https://github.com/smarty-php/smarty/commit/51e0d5cd405d764a4ea257d1bac1fb1205f74528#commitcomment-22280086\n  - bugfix remove special treatment of classes implementing ArrayAccess in {foreach}\n    https://github.com/smarty-php/smarty/issues/332\n  - bugfix remove deleted files by clear_cache() and clear_compiled_template() from\n    ACP cache if present, add some is_file() checks to avoid possible warnings on filemtime()\n    caused by above functions.\n    https://github.com/smarty-php/smarty/issues/341\n  - bugfix version 3.1.31 did fail under PHP 5.2\n    https://github.com/smarty-php/smarty/issues/365\n\n19.5.2017\n  - change properties $accessMap and $obsoleteProperties from private to protected\n    https://github.com/smarty-php/smarty/issues/351\n  - new feature The named capture buffers can now be accessed also as array\n    See NEWS_FEATURES.txt https://github.com/smarty-php/smarty/issues/366\n  - improvement check if ini_get() and ini_set() not disabled\n    https://github.com/smarty-php/smarty/pull/362\n\n24.4.2017\n  - fix spelling https://github.com/smarty-php/smarty/commit/e3eda8a5f5653d8abb960eb1bc47e3eca679b1b4#commitcomment-21803095\n\n17.4.2017\n  - correct generated code on empty() and isset() call, observe change PHP behaviour since PHP 5.5\n    https://github.com/smarty-php/smarty/issues/347\n\n14.4.2017\n  - merge pull requests https://github.com/smarty-php/smarty/pull/349, https://github.com/smarty-php/smarty/pull/322 and    https://github.com/smarty-php/smarty/pull/337 to fix spelling and annotation\n\n13.4.2017\n  - bugfix array_merge() parameter should be checked https://github.com/smarty-php/smarty/issues/350\n\n## 3.1.31 - (14.12.2016)\n  23.11.2016\n   - move template object cache into static variables\n\n  19.11.2016\n  - bugfix inheritance root child templates containing nested {block}{/block} could call sub-bock content from parent\n    template https://github.com/smarty-php/smarty/issues/317\n  - change version checking\n\n 11.11.2016\n  - bugfix when Smarty is using a cached template object on Smarty::fetch() or Smarty::isCached() the inheritance data\n    must be removed https://github.com/smarty-php/smarty/issues/312\n  - smaller speed optimization\n\n 08.11.2016\n  - add bootstrap file to load and register Smarty_Autoloader. Change composer.json to make it known to composer\n\n 07.11.2016\n  - optimization of lexer speed https://github.com/smarty-php/smarty/issues/311\n\n 27.10.2016\n  - bugfix template function definitions array has not been cached between Smarty::fetch() and Smarty::display() calls\n    https://github.com/smarty-php/smarty/issues/301\n\n 23.10.2016\n  - improvement/bugfix when Smarty::fetch() is called on a template object the inheritance and tplFunctions property\n    should be copied to the called template object\n\n 21.10.2016\n  - bugfix for compile locking touched timestamp of old compiled file was not restored on compilation error https://github.com/smarty-php/smarty/issues/308\n\n 20.10.2016\n  - bugfix nocache code was not removed in cache file when subtemplate did contain PHP short tags in text but no other\n    nocache code https://github.com/smarty-php/smarty/issues/300\n\n 19.10.2016\n  - bugfix {make_nocache $var} did fail when variable value did contain '\\' https://github.com/smarty-php/smarty/issues/305\n  - bugfix {make_nocache $var} remove spaces from variable value https://github.com/smarty-php/smarty/issues/304\n\n 12.10.2016\n  - bugfix {include} with template names including variable or constants could fail after bugfix from\n     28.09.2016 https://github.com/smarty-php/smarty/issues/302\n\n 08.10.2016\n  - optimization move runtime extension for template functions into Smarty objects\n\n 29.09.2016\n  - improvement new Smarty::$extends_recursion property to disable execution of {extends} in templates called by extends resource\n     https://github.com/smarty-php/smarty/issues/296\n\n 28.09.2016\n  - bugfix the generated code for calling a subtemplate must pass the template resource name in single quotes https://github.com/smarty-php/smarty/issues/299\n  - bugfix nocache hash was not removed for <?xml ?> tags in subtemplates https://github.com/smarty-php/smarty/issues/300\n\n 27.09.2016\n  - bugfix when Smarty does use an internally cached template object on Smarty::fetch() calls\n           the template and config variables must be cleared https://github.com/smarty-php/smarty/issues/297\n\n 20.09.2016\n  - bugfix some $smarty special template variables are no longer accessed as real variable.\n    using them on calls like {if isset($smarty.foo)} or {if empty($smarty.foo)} will fail\n    http://www.smarty.net/forums/viewtopic.php?t=26222\n  - temporary fix for https://github.com/smarty-php/smarty/issues/293 main reason still under investigation\n  - improvement new tags {block_parent} {block_child} in template inheritance\n\n 19.09.2016\n  - optimization clear compiled and cached folder completely on detected version change\n  - cleanup convert cache resource file method clear into runtime extension\n\n 15.09.2016\n  - bugfix assigning a variable in if condition by function like {if $value = array_shift($array)} the function got called twice https://github.com/smarty-php/smarty/issues/291\n  - bugfix function plugins called with assign attribute like {foo assign='bar'} did not output returned content because\n           because assumption was made that it was assigned to a variable https://github.com/smarty-php/smarty/issues/292\n  - bugfix calling $smarty->isCached() on a not existing cache file with $smarty->cache_locking = true; could cause a 10 second delay http://www.smarty.net/forums/viewtopic.php?t=26282\n  - improvement make Smarty::clearCompiledTemplate() on custom resource independent from changes of templateId computation\n\n 11.09.2016\n  - improvement {math} misleading E_USER_WARNING messages when parameter value = null https://github.com/smarty-php/smarty/issues/288\n  - improvement move often used code snippets into methods\n  - performance Smarty::configLoad() did load unneeded template source object\n\n 09.09.2016\n  - bugfix/optimization {foreach} did not execute the {foreachelse} when iterating empty objects https://github.com/smarty-php/smarty/pull/287\n  - bugfix {foreach} must keep the @properties when restoring a saved $item variable as the properties might be used outside {foreach} https://github.com/smarty-php/smarty/issues/267\n  - improvement {foreach} observe {break n} and {continue n} nesting levels when restoring saved $item and $key variables\n\n 08.09.2016\n  - bugfix implement wrapper for removed method getConfigVariable() https://github.com/smarty-php/smarty/issues/286\n\n 07.09.2016\n  - bugfix using nocache like attribute with value true like {plugin nocache=true} did not work https://github.com/smarty-php/smarty/issues/285\n  - bugfix uppercase TRUE, FALSE and NULL did not work when security was enabled https://github.com/smarty-php/smarty/issues/282\n  - bugfix when {foreach} was looping over an object the total property like {$item@total} did always return 1 https://github.com/smarty-php/smarty/issues/281\n  - bugfix {capture}{/capture} did add in 3.1.30 unintended additional blank lines https://github.com/smarty-php/smarty/issues/268\n\n 01.09.2016\n  - performance require_once should be called only once for shared plugins https://github.com/smarty-php/smarty/issues/280\n\n 26.08.2016\n  - bugfix change of 23.08.2016 failed on linux when use_include_path = true\n\n 23.08.2016\n  - bugfix remove constant DS as shortcut for DIRECTORY_SEPARATOR as the user may have defined it to something else https://github.com/smarty-php/smarty/issues/277\n\n 20.08-2016\n  - bugfix {config_load ... scope=\"global\"} shall not throw an arror but fallback to scope=\"smarty\" https://github.com/smarty-php/smarty/issues/274\n  - bugfix {make_nocache} failed when using composer autoloader https://github.com/smarty-php/smarty/issues/275\n\n 14.08.2016\n  - bugfix $smarty_>debugging = true; did E_NOTICE messages when {eval} tag was used https://github.com/smarty-php/smarty/issues/266\n  - bugfix Class 'Smarty_Internal_Runtime_ValidateCompiled' not found when upgrading from some older Smarty versions with existing\n           compiled or cached template files https://github.com/smarty-php/smarty/issues/269\n  - optimization remove unneeded call to update acopes when {assign} scope and template scope was local (default)\n\n## 3.1.30 - (07.08.2016)\n\n 07.08.2016\n  - bugfix update of 04.08.2016 was incomplete\n\n 05.08.2016\n  - bugfix compiling of templates failed when the Smarty delimiter did contain '/' https://github.com/smarty-php/smarty/issues/264\n  - updated error checking at template and config default handler\n\n 04.08.2016\n  - improvement move template function source parameter into extension\n\n 26.07.2016\n  - optimization unneeded loading of compiled resource\n\n 24.07.2016\n  - regression this->addPluginsDir('/abs/path/to/dir') adding absolute path without trailing '/' did fail https://github.com/smarty-php/smarty/issues/260\n\n 23.07.2016\n  - bugfix setTemplateDir('/') and setTemplateDir('') did create wrong absolute filepath https://github.com/smarty-php/smarty/issues/245\n  - optimization of filepath normalization\n  - improvement remove double function declaration in plugin shared.escape_special_cars.php https://github.com/smarty-php/smarty/issues/229\n\n 19.07.2016\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n  - bugfix {math} shell injection vulnerability patch provided by Tim Weber\n\n 18.07.2016\n  - bugfix {foreach} if key variable and item@key attribute have been used both the key variable was not updated https://github.com/smarty-php/smarty/issues/254\n  - bugfix modifier on plugins like {plugin|modifier ... } did fail when the plugin does return an array https://github.com/smarty-php/smarty/issues/228\n  - bugfix avoid opcache_invalidate to result in ErrorException when opcache.restrict_api is not empty https://github.com/smarty-php/smarty/pull/244\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n\n 14.07.2016\n  - bugfix wrong parameter on compileAllTemplates() and compileAllConfig() https://github.com/smarty-php/smarty/issues/231\n\n 13.07.2016\n  - bugfix PHP 7 compatibility on registered compiler plugins https://github.com/smarty-php/smarty/issues/241\n  - update testInstall() https://github.com/smarty-php/smarty/issues/248https://github.com/smarty-php/smarty/issues/248\n  - bugfix enable debugging could fail when template objects did already exists https://github.com/smarty-php/smarty/issues/237\n  - bugfix template function data should be merged when loading subtemplate https://github.com/smarty-php/smarty/issues/240\n  - bugfix wrong parameter on compileAllTemplates() https://github.com/smarty-php/smarty/issues/231\n\n 12.07.2016\n  - bugfix {foreach} item variable must be created also on empty from array https://github.com/smarty-php/smarty/issues/238 and https://github.com/smarty-php/smarty/issues/239\n  - bugfix enableSecurity() must init cache flags https://github.com/smarty-php/smarty/issues/247\n\n 27.05.2016\n  - bugfix/improvement of compileAlltemplates() follow symlinks in template folder (PHP >= 5.3.1) https://github.com/smarty-php/smarty/issues/224\n      clear internal cache and expension handler for each template to avoid possible conflicts https://github.com/smarty-php/smarty/issues/231\n\n 16.05.2016\n  - optimization {foreach} compiler and processing\n  - broken PHP 5.3 and 5.4 compatibility\n\n 15.05.2016\n  - optimization and cleanup of resource code\n\n 10.05.2016\n  - optimization of inheritance processing\n\n 07.05.2016\n  -bugfix Only variables should be assigned by reference https://github.com/smarty-php/smarty/issues/227\n\n 02.05.2016\n  - enhancement {block} tag names can now be variable https://github.com/smarty-php/smarty/issues/221\n\n 01.05.2016\n  - bugfix same relative filepath at {include} called from template in different folders could display wrong sub-template\n\n 29.04.2016\n  - bugfix {strip} remove space on linebreak between html tags https://github.com/smarty-php/smarty/issues/213\n\n 24.04.2016\n  - bugfix nested {include} with relative file path could fail when called in {block} ... {/block} https://github.com/smarty-php/smarty/issues/218\n\n 14.04.2016\n  - bugfix special variable {$smarty.capture.name} was not case sensitive on name https://github.com/smarty-php/smarty/issues/210\n  - bugfix the default template handler must calculate the source uid https://github.com/smarty-php/smarty/issues/205\n\n 13.04.2016\n  - bugfix template inheritance status must be saved when calling sub-templates https://github.com/smarty-php/smarty/issues/215\n\n 27.03.2016\n  - bugfix change of 11.03.2016 cause again {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 11.03.2016\n  - optimization of capture and security handling\n  - improvement $smarty->clearCompiledTemplate() should return on recompiled or uncompiled resources\n\n 10.03.2016\n  - optimization of resource processing\n\n 09.03.2016\n  - improvement rework of 'scope' attribute handling see see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/194\n    https://github.com/smarty-php/smarty/issues/186 https://github.com/smarty-php/smarty/issues/179\n  - bugfix correct Autoloader update of 2.3.2014 https://github.com/smarty-php/smarty/issues/199\n\n 04.03.2016\n  - bugfix change from 01.03.2016 will cause $smarty->isCached(..) failure if called multiple time for same template\n    (forum topic 25935)\n\n 02.03.2016\n  - revert autoloader optimizations because of unexplainable warning when using plugins https://github.com/smarty-php/smarty/issues/199\n\n 01.03.2016\n  - bugfix template objects must be cached on $smarty->fetch('foo.tpl) calls incase the template is fetched\n    multiple times (forum topic 25909)\n\n 25.02.2016\n  - bugfix wrong _realpath with 4 or more parent-directories https://github.com/smarty-php/smarty/issues/190\n  - optimization of _realpath\n  - bugfix instanceof expression in template code must be treated as value https://github.com/smarty-php/smarty/issues/191\n\n 20.02.2016\n  - bugfix {strip} must keep space between hmtl tags. Broken by changes of 10.2.2016 https://github.com/smarty-php/smarty/issues/184\n  - new feature/bugfix  {foreach}{section} add 'properties' attribute to force compilation of loop properties\n    see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/189\n\n 19.02.2016\n  - revert output buffer flushing on display, echo content again because possible problems when PHP files had\n    characters (newline} after ?> at file end https://github.com/smarty-php/smarty/issues/187\n\n 14.02.2016\n  - new tag {make_nocache} read NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/110\n  - optimization of sub-template processing\n  - bugfix using extendsall as default resource and {include} inside {block} tags could produce unexpected results https://github.com/smarty-php/smarty/issues/183\n  - optimization of tag attribute compiling\n  - optimization make compiler tag object cache static for higher compilation speed\n\n 11.02.2016\n  - improvement added KnockoutJS comments to trimwhitespace outputfilter https://github.com/smarty-php/smarty/issues/82\n    https://github.com/smarty-php/smarty/pull/181\n\n 10.02.2016\n  - bugfix {strip} must keep space on output creating smarty tags within html tags https://github.com/smarty-php/smarty/issues/177\n  - bugfix wrong precedence on special if conditions like '$foo is ... by $bar' could cause wrong code https://github.com/smarty-php/smarty/issues/178\n  - improvement because of ambiguities the inline constant support has been removed from the $foo.bar syntax https://github.com/smarty-php/smarty/issues/149\n  - bugfix other {strip} error with output tags between hmtl https://github.com/smarty-php/smarty/issues/180\n\n 09.02.2016\n  - move some code from parser into compiler\n  - reformat all code for unique style\n  - update/bugfix scope attribute handling reworked. Read the newfeatures.txt file\n\n 05.02.2016\n  - improvement internal compiler changes\n\n 01.02.2016\n  - bugfix {foreach} compilation failed when $smarty->merge_compiled_includes = true and pre-filters are used.\n\n 29.01.2016\n  - bugfix implement replacement code for _tag_stack property https://github.com/smarty-php/smarty/issues/151\n\n 28.01.2016\n  - bugfix allow windows network filepath or wrapper (forum topic 25876) https://github.com/smarty-php/smarty/issues/170\n  - bugfix if fetch('foo.tpl') is called on a template object the $parent parameter should default to the calling template object https://github.com/smarty-php/smarty/issues/152\n\n 27.01.2016\n  - revert bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n    update of yesterdays fix\n  - bugfix string resource could inject code at {block} or inline subtemplates through PHP comments https://github.com/smarty-php/smarty/issues/157\t\t\n  - bugfix output filters did not observe nocache code flhttps://github.com/smarty-php/smarty/issues/154g https://github.com/smarty-php/smarty/issues/160\n  - bugfix {extends} with relative file path did not work https://github.com/smarty-php/smarty/issues/154\n    https://github.com/smarty-php/smarty/issues/158\n  - bugfix {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 26.01.2016\n  - improvement observe Smarty::$_CHARSET in debugging console https://github.com/smarty-php/smarty/issues/169\n  - bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n\n 02.01.2016\n  - update scope handling\n  - optimize block plugin compiler\n  - improvement runtime checks if registered block plugins are callable\n\n 01.01.2016\n  - remove Smarty::$resource_cache_mode property\n\n 31.12.2015\n  - optimization of {assign}, {if} and {while} compiled code\n\n 30.12.2015\n  - bugfix plugin names starting with \"php\" did not compile https://github.com/smarty-php/smarty/issues/147\n\n 29.12.2015\n  - bugfix Smarty::error_reporting was not observed when display() or fetch() was called on template objects https://github.com/smarty-php/smarty/issues/145\n\n 28.12.2015\n  - optimization of {foreach} code size and processing\n\n 27.12.2015\n  - improve inheritance code\n  - update external methods\n  - code fixes\n  - PHPdoc updates\n\n 25.12.2015\n  - compile {block} tag code and its processing into classes\n  - optimization replace hhvm extension by inline code\n  - new feature If ACP is enabled force an apc_compile_file() when compiled or cached template was updated\n\n 24.12.2015\n  - new feature Compiler does now observe the template_dir setting and will create separate compiled files if required\n  - bugfix post filter did fail on template inheritance https://github.com/smarty-php/smarty/issues/144\n\n 23.12.2015\n  - optimization move internal method decodeProperties back into template object\n  - optimization move subtemplate processing back into template object\n  - new feature Caching does now observe the template_dir setting and will create separate cache files if required\n\n 22.12.2015\n  - change $xxx_dir properties from private to protected in case Smarty class gets extended\n  - code optimizations\n\n 21.12.2015\n  - bugfix a filepath starting with '/' or '\\' on windows should normalize to the root dir\n    of current working drive https://github.com/smarty-php/smarty/issues/134\n  - optimization of filepath normalization\n  - bugfix {strip} must remove all blanks between html tags https://github.com/smarty-php/smarty/issues/136\n\n - 3.1.29 - (21.12.2015)\n 21.12.2015\n  - optimization improve speed of filetime checks on extends and extendsall resource\n\n 20.12.2015\n  - bugfix failure when the default resource type was set to 'extendsall' https://github.com/smarty-php/smarty/issues/123\n  - update compilation of Smarty special variables\n  - bugfix add addition check for OS type on normalization of file path https://github.com/smarty-php/smarty/issues/134\n  - bugfix the source uid of the extendsall resource must contain $template_dir settings https://github.com/smarty-php/smarty/issues/123\n\n 19.12.2015\n  - bugfix using $smarty.capture.foo in expressions could fail https://github.com/smarty-php/smarty/pull/138\n  - bugfix broken PHP 5.2 compatibility https://github.com/smarty-php/smarty/issues/139\n  - remove no longer used code\n  - improvement make sure that compiled and cache templates never can contain a trailing '?>?\n\n 18.12.2015\n  - bugfix regression when modifier parameter was followed by math https://github.com/smarty-php/smarty/issues/132\n\n 17.12.2015\n  - bugfix {$smarty.capture.nameFail} did lowercase capture name https://github.com/smarty-php/smarty/issues/135\n  - bugfix using {block append/prepend} on same block in multiple levels of inheritance templates could fail (forum topic 25827)\n  - bugfix text content consisting of just a single '0' like in {if true}0{/if} was suppressed (forum topic 25834)\n\n 16.12.2015\n  - bugfix {foreach} did fail if from atrribute is a Generator class https://github.com/smarty-php/smarty/issues/128\n  - bugfix direct access $smarty->template_dir = 'foo'; should call Smarty::setTemplateDir() https://github.com/smarty-php/smarty/issues/121\n\n 15.12.2015\n  - bugfix  {$smarty.cookies.foo} did return the $_COOKIE array not the 'foo' value https://github.com/smarty-php/smarty/issues/122\n  - bugfix  a call to clearAllCache() and other should clear all internal template object caches (forum topic 25828)\n\n 14.12.2015\n  - bugfix  {$smarty.config.foo} broken in 3.1.28 https://github.com/smarty-php/smarty/issues/120\n  - bugfix  multiple calls of {section} with same name droped E_NOTICE error https://github.com/smarty-php/smarty/issues/118\n\n - 3.1.28 - (13.12.2015)\n 13.12.2015\n  - bugfix {foreach} and {section} with uppercase characters in name attribute did not work (forum topic 25819)\n  - bugfix $smarty->debugging_ctrl = 'URL' did not work (forum topic 25811)\n  - bugfix Debug Console could display incorrect data when using subtemplates\n\n 09.12.2015\n  - bugfix Smarty did fail under PHP 7.0.0 with use_include_path = true;\n\n 09.12.2015\n  - bugfix {strip} should exclude some html tags from stripping, related to fix for https://github.com/smarty-php/smarty/issues/111\n\n 08.12.2015\n  - bugfix internal template function data got stored in wrong compiled file https://github.com/smarty-php/smarty/issues/114\n\n 05.12.2015\n  -bugfix {strip} should insert a single space https://github.com/smarty-php/smarty/issues/111\n\n 25.11.2015\n  -bugfix a left delimter like '[%' did fail on [%$var_[%$variable%]%] (forum topic 25798)\n\n 02.11.2015\n  - bugfix {include} with variable file name like {include file=\"foo_`$bar`.tpl\"} did fail in 3.1.28-dev https://github.com/smarty-php/smarty/issues/102\n\n 01.11.2015\n  - update config file processing\n\n 31.10.2015\n  - bugfix add missing $trusted_dir property to SmartyBC class (forum topic 25751)\n\n 29.10.2015\n  - improve template scope handling\n\n 24.10.2015\n  - more optimizations of template processing\n  - bugfix Error when using {include} within {capture} https://github.com/smarty-php/smarty/issues/100\n\n 21.10.2015\n  - move some code into runtime extensions\n\n 18.10.2015\n  - optimize filepath normalization\n  - rework of template inheritance\n  - speed and size optimizations\n  - bugfix under HHVM temporary cache file must only be created when caches template was updated\n  - fix compiled code for new {block} assign attribute\n  - update code generated by template function call handler\n\n 18.09.2015\n  - bugfix {if $foo instanceof $bar} failed to compile if 2nd value is a variable https://github.com/smarty-php/smarty/issues/92\n\n 17.09.2015\n  - bugfix {foreach} first attribute was not correctly reset since commit 05a8fa2 of 02.08.2015 https://github.com/smarty-php/smarty/issues/90\n\n 16.09.2015\n  - update compiler by moving no longer needed properties, code optimizations and other\n\n 14.09.2015\n  - optimize autoloader\n  - optimize subtemplate handling\n  - update template inheritance processing\n  - move code of {call} processing back into Smarty_Internal_Template class\n  - improvement invalidate OPCACHE for cleared compiled and cached template files (forum topic 25557)\n  - bugfix unintended multiple debug windows (forum topic 25699)\n\n 30.08.2015\n  - size optimization move some runtime functions into extension\n  - optimize inline template processing\n  - optimization merge inheritance child and parent templates into one compiled template file\n\n 29.08.2015\n  - improvement convert template inheritance into runtime processing\n  - bugfix {$smarty.block.parent} did always reference the root parent block https://github.com/smarty-php/smarty/issues/68\n\n 23.08.2015\n  - introduce Smarty::$resource_cache_mode and cache template object of {include} inside loop\n  - load seldom used Smarty API methods dynamically to reduce memory footprint\n  - cache template object of {include} if same template is included several times\n  - convert debug console processing to object\n  - use output buffers for better performance and less memory usage\n  - optimize nocache hash processing\n  - remove not really needed properties\n  - optimize rendering\n  - move caching to Smarty::_cache\n  - remove properties with redundant content\n  - optimize Smarty::templateExists()\n  - optimize use_include_path processing\n  - relocate properties for size optimization\n  - remove redundant code\n  - bugfix compiling super globals like {$smarty.get.foo} did fail in the master branch https://github.com/smarty-php/smarty/issues/77\n\n 06.08.2015\n  - avoid possible circular object references caused by parser/lexer objects\n  - rewrite compileAll... utility methods\n  - commit several  internal improvements\n  - bugfix Smarty failed when compile_id did contain \"|\"\n\n 03.08.2015\n  - rework clear cache methods\n  - bugfix compileAllConfig() was broken since 3.1.22 because of the changes in config file processing\n  - improve getIncludePath() to return directory if no file was given\n\n 02.08.2015\n  - optimization and code cleanup of {foreach} and {section} compiler\n  - rework {capture} compiler\n\n 01.08.2015\n  - update DateTime object can be instance of DateTimeImmutable since PHP5.5 https://github.com/smarty-php/smarty/pull/75\n  - improvement show resource type and start of template source instead of uid on eval: and string: resource (forum topic 25630)\n\n 31.07.2015\n  - optimize {foreach} and {section} compiler\n\n 29.07.2015\n  - optimize {section} compiler for speed and size of compiled code\n\n 28.07.2015\n  - update for PHP 7 compatibility\n\n 26.07.2015\n  - improvement impement workaround for HHVM PHP incompatibillity https://github.com/facebook/hhvm/issues/4797\n\n 25.07.2015\n  - bugfix parser did hang on text starting <?something https://github.com/smarty-php/smarty/issues/74\n\n 20.07.2015\n  - bugfix config files got recompiled on each request\n  - improvement invalidate PHP 5.5 opcache for recompiled and cached templates  https://github.com/smarty-php/smarty/issues/72\n\n 12.07.2015\n  - optimize {extends} compilation\n\n 10.07.2015\n  - bugfix force file: resource in demo resource.extendsall.php\n\n 08.07.2015\n  - bugfix convert each word of class names to ucfirst in in compiler. (forum topic 25588)\n\n 07.07.2015\n  - improvement allow fetch() or display() called on a template object to get output from other template\n     like $template->fetch('foo.tpl') https://github.com/smarty-php/smarty/issues/70\n  - improvement Added $limit parameter to regex_replace modifier #71\n  - new feature multiple indices on file: resource\n\n 06.07.2015\n  - optimize {block} compilation\n  - optimization get rid of __get and __set in source object\n\n 01.07.2015\n  - optimize compile check handling\n  - update {foreach} compiler\n  - bugfix debugging console did not display string values containing \\n, \\r or \\t correctly https://github.com/smarty-php/smarty/issues/66\n  - optimize source resources\n\n 28.06.2015\n  - move $smarty->enableSecurity() into Smarty_Security class\n  - optimize security isTrustedResourceDir()\n  - move auto load filter methods into extension\n  - move $smarty->getTemplateVars() into extension\n  - move getStreamVariable() into extension\n  - move $smarty->append() and $smarty->appendByRef() into extension\n  - optimize autoloader\n  - optimize file path normalization\n  - bugfix PATH_SEPARATOR was replaced by mistake in autoloader\n  - remove redundant code\n\n 27.06.2015\n  - bugfix resolve naming conflict between custom Smarty delimiter '<%' and PHP ASP tags https://github.com/smarty-php/smarty/issues/64\n  - update $smarty->_realpath for relative path not starting with './'\n  - update Smarty security with new realpath handling\n  - update {include_php} with new realpath handling\n  - move $smarty->loadPlugin() into extension\n  - minor compiler optimizations\n  - bugfix allow function plugins with name ending with 'close' https://github.com/smarty-php/smarty/issues/52\n  - rework of $smarty->clearCompiledTemplate() and move it to its own extension\n\n 19.06.2015\n  - improvement allow closures as callback at $smarty->registerFilter() https://github.com/smarty-php/smarty/issues/59\n\n - 3.1.27- (18.06.2015)\n 18.06.2015\n  - bugfix another update on file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n - 3.1.26- (18.06.2015)\n 18.06.2015\n  - bugfix file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n 17.06.2015\n  - bugfix calling a plugin with nocache option but no other attributes like {foo nocache} caused call to undefined function https://github.com/smarty-php/smarty/issues/55\n\n - 3.1.25- (15.06.2015)\n 15.06.2015\n  - optimization of smarty_cachereource_keyvaluestore.php code\n\n 14.06.2015\n  - bugfix a relative sub template path could fail if template_dir path did contain /../ https://github.com/smarty-php/smarty/issues/50\n  - optimization rework of path normalization\n  - bugfix an output tag with variable, modifier followed by an operator like {$foo|modifier+1} did fail https://github.com/smarty-php/smarty/issues/53\n\n 13.06.2015\n  - bugfix a custom cache resource using smarty_cachereource_keyvaluestore.php did fail if php.ini mbstring.func_overload = 2 (forum topic 25568)\n\n 11.06.2015\n  - bugfix the lexer could hang on very large quoted strings (forum topic 25570)\n\n 08.06.2015\n  - bugfix using {$foo} as array index like $bar.{$foo} or in double quoted string like \"some {$foo} thing\" failed https://github.com/smarty-php/smarty/issues/49\n\n 04.06.2015\n  - bugfix possible error message on unset() while compiling {block} tags https://github.com/smarty-php/smarty/issues/46\n\n 01.06.2015\n  - bugfix <?xml ... ?> including template variables broken  since 3.1.22 https://github.com/smarty-php/smarty/issues/47\n\n 27.05.2015\n  - bugfix {include} with variable file name must not create by default individual cache file (since 3.1.22) https://github.com/smarty-php/smarty/issues/43\n\n 24.05.2015\n  - bugfix if condition string 'neq' broken due to a typo https://github.com/smarty-php/smarty/issues/42\n\n - 3.1.24- (23.05.2015)\n 23.05.2015\n  - improvement on php_handling to allow very large PHP sections, better error handling\n  - improvement allow extreme large comment sections (forum 25538)\n\n 21.05.2015\n  - bugfix broken PHP 5.2 compatibility when compiling <?php tags https://github.com/smarty-php/smarty/issues/40\n  - bugfix named {foreach} comparison like $smarty.foreach.foobar.index > 1 did compile into wrong code https://github.com/smarty-php/smarty/issues/41\n\n 19.05.2015\n  - bugfix compiler did overwrite existing variable value when setting the nocache attribute https://github.com/smarty-php/smarty/issues/39\n  - bugfix output filter trimwhitespace could run into the pcre.backtrack_limit on large output (code.google issue 220)\n  - bugfix compiler could run into the pcre.backtrack_limit on larger comment or {php} tag sections (forum 25538)\n\n 18.05.2015\n  - improvement introduce shortcuts in lexer/parser rules for most frequent terms for higher\n    compilation speed\n\n 16.05.2015\n  - bugfix {php}{/php} did work just for single lines https://github.com/smarty-php/smarty/issues/33\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement reduce number of lexer tokens on operators and if conditions\n  - improvement higher compilation speed by modified lexer/parser generator at \"smarty/smarty-lexer\"\n\n 13.05.2015\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement of debugging:\n      - use fresh Smarty object to display the debug console because of possible problems when the Smarty\n        was extended or Smarty properties had been modified in the class source\n      - display Smarty version number\n      - Truncate lenght of Origin display and extend strin value display to 80 character\n  - bugfix in Smarty_Security  'nl2br' should be a trusted modifier, not PHP function (code.google issue 223)\n\n 12.05.2015\n  - bugfix {$smarty.constant.TEST} did fail  on undefined constant https://github.com/smarty-php/smarty/issues/28\n  - bugfix access to undefined config variable like {#undef#} did fail https://github.com/smarty-php/smarty/issues/29\n  - bugfix in nested {foreach} saved item attributes got overwritten https://github.com/smarty-php/smarty/issues/33\n\n - 3.1.23 - (12.05.2015)\n 12.05.2015\n  - bugfix of smaller performance issue introduce in 3.1.22 when caching is enabled\n  - bugfix missig entry for smarty-temmplate-config in autoloader\n\n - 3.1.22 - tag was deleted because 3.1.22 did fail caused by the missing entry for smarty-temmplate-config in autoloader\n 10.05.2015\n  - bugfix custom cache resource did not observe compile_id and cache_id when $cache_locking == true\n  - bugfix cache lock was not handled correctly after timeout when $cache_locking == true\n  - improvement added constants for $debugging\n\n 07.05.2015\n  - improvement of the debugging console. Read NEW_FEATURES.txt\n  - optimization of resource class loading\n\n 06.05.2015\n  - bugfix in 3.1.22-dev cache resource must not be loaded for subtemplates\n  - bugfix/improvement in 3.1.22-dev cache locking did not work as expected\n\n 05.05.2015\n  - optimization on cache update when main template is modified\n  - optimization move <?php ?> handling from parser to new compiler module\n\n 05.05.2015\n  - bugfix code could be messed up when {tags} are used in multiple attributes https://github.com/smarty-php/smarty/issues/23\n\n 04.05.2015\n  - bugfix Smarty_Resource::parseResourceName incompatible with Google AppEngine (https://github.com/smarty-php/smarty/issues/22)\n  - improvement use is_file() checks to avoid errors suppressed by @ which could still cause problems (https://github.com/smarty-php/smarty/issues/24)\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508) 2nd fix\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508)\n\n 23.04.2015\n  - bugfix a nocache template variable used as parameter at {insert} was by mistake cached\n\n 20.04.2015\n  - bugfix at a template function containing nocache code a parmeter could overwrite a template variable of same name\n\n 27.03.2015\n  - bugfix Smarty_Security->allow_constants=false; did also disable true, false and null (change of 16.03.2015)\n  - improvement added a whitelist for trusted constants to security Smarty_Security::$trusted_constants (forum topic 25471)\n\n 20.03.2015\n  - bugfix make sure that function properties get saved only in compiled files containing the fuction definition {forum topic 25452}\n  - bugfix correct update of global variable values on exit of template functions. (reported under Smarty Developers)\n\n 16.03.2015\n - bugfix  problems with {function}{/function} and {call} tags in different subtemplate cache files {forum topic 25452}\n - bugfix  Smarty_Security->allow_constants=false; did not disallow direct usage of defined constants like {SMARTY_DIR} {forum topic 25457}\n - bugfix  {block}{/block} tags did not work inside double quoted strings https://github.com/smarty-php/smarty/issues/18\n\n\n 15.03.2015\n - bugfix  $smarty->compile_check must be restored before rendering of a just updated cache file {forum 25452}\n\n 14.03.2015\n - bugfix  {nocache}  {/nocache} tags corrupted code when used within a nocache section caused by a nocache template variable.\n\n - bugfix  template functions defined with {function} in an included subtemplate could not be called in nocache\n           mode with {call... nocache} if the subtemplate had it's own cache file {forum 25452}\n\n 10.03.2015\n - bugfix {include ... nocache} whith variable file or compile_id attribute was not executed in nocache mode.\n\n 12.02.2015\n - bugfix multiple Smarty::fetch() of same template when $smarty->merge_compiled_includes = true; could cause function already defined error\n\n 11.02.2015\n - bugfix recursive {includes} did create E_NOTICE message when $smarty->merge_compiled_includes = true; (github issue #16)\n\n 22.01.2015\n - new feature security can now control access to static methods and properties\n                see also NEW_FEATURES.txt\n\n 21.01.2015\n - bugfix clearCompiledTemplates(), clearAll() and clear() could try to delete whole drive at wrong path permissions because realpath() fail (forum 25397)\n - bugfix 'self::' and 'parent::' was interpreted in template syntax as static class\n\n 04.01.2015\n - push last weeks changes to github\n\n - different optimizations\n - improvement automatically create different versions of compiled templates and config files depending\n   on property settings.\n - optimization restructure template processing by moving code into classes it better belongs to\n - optimization restructure config file processing\n\n 31.12.2014\n - bugfix use function_exists('mb_get_info') for setting Smarty::$_MBSTRING.\n   Function mb_split could be overloaded depending on php.ini mbstring.func_overload\n\n\n 29.12.2014\n - new feature security can now limit the template nesting level by property $max_template_nesting\n                see also NEW_FEATURES.txt (forum 25370)\n\n 29.12.2014\n - new feature security can now disable special $smarty variables listed in property $disabled_special_smarty_vars\n                see also NEW_FEATURES.txt (forum 25370)\n\n 27.12.2014\n  - bugfix clear internal _is_file_cache when plugins_dir was modified\n\n 13.12.2014\n  - improvement optimization of lexer and parser resulting in a up to 30% higher compiling speed\n\n 11.12.2014\n  - bugfix resolve parser ambiguity between constant print tag {CONST} and other smarty tags after change of 09.12.2014\n\n 09.12.2014\n  - bugfix variables $null, $true and $false did not work after the change of 12.11.2014 (forum 25342)\n  - bugfix call of template function by a variable name did not work after latest changes (forum 25342)\n\n 23.11.2014\n  - bugfix a plugin with attached modifier could fail if the tag was immediately followed by another Smarty tag (since 3.1.21) (forum 25326)\n\n 13.11.2014\n  - improvement move autoload code into Autoloader.php. Use Composer autoloader when possible\n\n 12.11.2014\n - new feature added support of namespaces to template code\n\n 08.11.2014 - 10.11.2014\n - bugfix subtemplate called in nocache mode could be called with wrong compile_id when it did change on one of the calling templates\n - improvement add code of template functions called in nocache mode dynamically to cache file (related to bugfix of 01.11.2014)\n - bugfix Debug Console did not include all data from merged compiled subtemplates\n\n 04.11.2014\n - new feature $smarty->debugging = true; => overwrite existing Debug Console window (old behaviour)\n               $smarty->debugging = 2; => individual Debug Console window by template name\n\n 03.11.2014\n - bugfix Debug Console did not show included subtemplates since 3.1.17 (forum 25301)\n - bugfix Modifier debug_print_var did not limit recursion or prevent recursive object display at Debug Console\n    (ATTENTION: parameter order has changed to be able to specify maximum recursion)\n - bugfix Debug consol did not include subtemplate information with $smarty->merge_compiled_includes = true\n - improvement The template variables are no longer displayed as objects on the Debug Console\n - improvement $smarty->createData($parent = null, $name = null) new optional name parameter for display at Debug Console\n - addition of some hooks for future extension of Debug Console\n\n 01.11.2014\n - bugfix and enhancement on subtemplate {include} and template {function} tags.\n   * Calling a template which has a nocache section could fail if it was called from a cached and a not cached subtemplate.\n   * Calling the same subtemplate cached and not cached with the $smarty->merge_compiled_includes enabled could cause problems\n   * Many smaller related changes\n\n 30.10.2014\n - bugfix access to class constant by object like {$object::CONST} or variable class name {$class::CONST} did not work (forum 25301)\n\n 26.10.2014\n - bugfix E_NOTICE message was created during compilation when ASP tags '<%' or '%>' are in template source text\n - bugfix merge_compiled_includes option failed when caching  enables and same subtemplate was included cached and not cached\n\n - 3.1.21 - (18.10.2014)\n 18.10.2014\n  - composer moved to github\n\n 17.10.2014\n - bugfix on $php_handling security and optimization of smarty_internal_parsetree (Thue Kristensen)\n\n 16.10.2014\n - bugfix composer.json update\n\n 15.10.2014\n - bugfix calling a new created cache file with fetch() and Smarty::CACHING_LIFETIME_SAVED multiple times did fail (forum 22350)\n\n 14.10.2014\n - bugfix any tag placed within \"<script language=php>\" will throw a security exception to close all thinkable holes\n - bugfix classmap in root composer.json should start at \"libs/...\"\n - improvement cache is_file(file_exists) results of loadPlugin() to avoid unnecessary calls during compilation (Issue 201}\n\n 12.10.2014\n - bugfix a comment like \"<script{*foo*} language=php>\" bypassed $php_handling checking (Thue Kristensen)\n - bugfix change of 08.10.2014 could create E_NOTICE meassage when using \"<?php\" tags\n - bugfix \"<script language=php>\" with $php_handling PHP_PASSTHRU was executed in {nocache} sections\n\n - 3.1.20 - (09.10.2014)\n 08.10.2014\n - bugfix security mode of \"<script language=php>\" must be controlled by $php_handling property (Thue Kristensen)\n\n 01.10.2014\n - bugfix template resource of inheritance blocks could get invalid if the default resource type is not 'file'(Issue 202)\n - bugfix existing child {block} tag must override parent {block} tag append / prepend setting (topic 25259)\n\n 02.08.2014\n - bugfix modifier wordwrap did output break string wrong if first word was exceeding length with cut = true (topic 25193)\n\n 24.07.2014\n - bugfix cache clear when cache folder does not exist\n\n 16.07.2014\n - enhancement remove BOM automatically from template source (topic 25161)\n\n 04.07.2014\n - bugfix the bufix of 02.06.2014 broke correct handling of child templates with same name but different template folders in extends resource (issue 194 and topic 25099)\n\n - 3.1.19 - (30.06.2014)\n 20.06.2014\n - bugfix template variables could not be passed as parameter in {include} when the include was in a {nocache} section (topic 25131)\n\n 17.06.2014\n - bugfix large template text of some charsets could cause parsing errors (topic 24630)\n\n 08.06.2014\n - bugfix registered objects did not work after spelling fixes of 06.06.2014\n - bugfix {block} tags within {literal} .. {/literal} got not displayed correctly (topic 25024)\n - bugfix UNC WINDOWS PATH like \"\\\\psf\\path\\to\\dir\" did not work as template directory (Issue 192)\n - bugfix {html_image} security check did fail on files relative to basedir (Issue 191)\n\n 06.06.2014\n - fixed PHPUnit outputFilterTrimWhitespaceTests.php assertion of test result\n - fixed spelling, PHPDoc , minor errors, code cleanup\n\n 02.06.2014\n - using multiple cwd with relative template dirs could result in identical compiled file names. (issue 194 and topic 25099)\n\n 19.04.2014\n - bugfix calling createTemplate(template, data) with empty data array caused notice of array to string conversion (Issue 189)\n - bugfix clearCompiledTemplate() did not delete files on WINDOWS when a compile_id was specified\n\n 18.04.2014\n - revert bugfix of 5.4.2014 because %-e date format is not supported on all operating systems\n\n - 3.1.18 - (07.04.2014)\n 06.04.2014\n - bugfix template inheritance fail when using custom resource after patch of 8.3.2014 (Issue 187)\n - bugfix update of composer file (Issue 168 and 184)\n\n 05.04.2014\n - bugfix default date format leads to extra spaces when displaying dates with single digit days (Issue 165)\n\n 26.03.2014\n - bugfix Smart_Resource_Custom should not lowercase the resource name (Issue 183)\n\n 24.03.2014\n - bugfix using a {foreach} property like @iteration could fail when used in inheritance parent templates (Issue 182)\n\n 20.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 18.03.2014\n - revert change of 17.03.2014\n\n17.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 15.03.2014\n - bugfix Smarty_CacheResource_Keyvaluestore did use different keys on read/writes and clearCache() calls (Issue 169)\n\n 13.03.2014\n - bugfix clearXxx() change of 27.1.2014 did not work when specifing cache_id or compile_id  (forum topic 24868 and 24867)\n\n - 3.1.17 -\n 08.03.2014\n - bugfix relative file path {include} within {block} of child templates did throw exception on first call (Issue 177)\n\n 17.02.2014\n - bugfix Smarty failed when executing PHP on HHVM (Hip Hop 2.4) because uniqid('',true) does return string with ',' (forum topic 20343)\n\n 16.02.2014\n - bugfix a '//' or '\\\\' in template_dir path could produce wrong path on relative filepath in {include} (Issue 175)\n\n 05.02.2014\n - bugfix shared.literal_compiler_param.php did throw an exception when literal did contain a '-' (smarty-developers group)\n\n 27.01.2014\n - bugfix $smarty->debugging = true; did show the variable of the $smarty object not the variables used in display() call (forum topic 24764)\n - bugfix clearCompiledTemplate(), clearAll() and clear() should use realpath to avoid possible exception from RecursiveDirectoryIterator (Issue 171)\n\n 26.01.2014\n - bugfix  undo block nesting checks for {nocache} for reasons like forum topic 23280 (forum topic 24762)\n\n 18.01.2014\n - bugfix the compiler did fail when using template inheritance and recursive {include} (smarty-developers group)\n\n 11.01.2014\n - bugfix \"* }\" (spaces before right delimiter) was interpreted by mistake as comment end tag (Issue 170)\n - internals  content cache should be clear when updating cache file\n\n 08.01.2014\n - bugfix Smarty_CacheResource_Custom did not handle template resource type specifications on clearCache() calls (Issue 169)\n - bugfix SmartyBC.class.php should use require_once to load Smarty.class.php (forum topic 24683)\n\n - 3.1.16 -\n 15.12.2013\n - bugfix {include} with {block} tag handling (forum topic 24599, 24594, 24682) (Issue 161)\n   Read 3.1.16_RELEASE_NOTES for more details\n - enhancement additional debug output at $smarty->_parserdebug = true;\n\n 07.11.2013\n - bugfix too restrictive handling of {include} within {block} tags. 3.1.15 did throw errors where 3.1.14 did not (forum topic 24599)\n - bugfix compiler could fail if PHP mbstring.func_overload is enabled  (Issue 164)\n\n 28.10.2013\n - bugfix variable resource name at custom resource plugin did not work within {block} tags (Issue 163)\n - bugfix notice \"Trying to get property of non-object\" removed (Issue 163)\n - bugfix correction of modifier capitalize fix from 3.10.2013  (issue 159)\n - bugfix multiple {block}s with same name in parent did not work (forum topic 24631)\n\n 20.10.2013\n - bugfix a variable file name at {extends} tag did fail (forum topic 24618)\n\n 14.10.2013\n - bugfix yesterdays fix could result in an undefined variable\n\n 13.10.2013\n - bugfix variable names on {include} in template inheritance did unextepted error message (forum topic 24594) (Issue 161)\n.- bugfix relative includes with same name like {include './foo.tpl'} from different folder failed (forum topic 24590)(Issue 161)\n\n 04.10.2013\n - bugfix variable file names at {extends} had been disbabled by mistake with the rewrite of\n   template inheritance of 24.08.2013   (forum topic 24585)\n\n03.10.2013\n - bugfix loops using modifier capitalize did eat up memory (issue 159)\n\n - Smarty 3.1.15 -\n01.10.2013\n - use current delimiters in compiler error messages (issue 157)\n - improvement on performance when using error handler and multiple template folders (issue 152)\n\n17.09.2013\n - improvement added patch for additional SmartyCompilerException properties for better access to source information (forum topic 24559)\n\n16.09.2013\n - bugfix recompiled templates did not show on first request with zend opcache cache (forum topic 24320)\n\n13.09.2013\n - bugfix html_select_time defaulting error for the Meridian dropdown (forum topic 24549)\n\n09.09.2012\n- bugfix incorrect compiled code with array(object,method) callback at registered Variable Filter (forum topic 24542)\n\n27.08.2013\n- bugfix delimiter followed by linebreak did not work as auto literal after update from 24.08.2013 (forum topic 24518)\n\n24.08.2013\n- bugfix and enhancement\n  Because several recent problems with template inheritance the {block} tag compiler has been rewriten\n   - Error messages shown now the correct child template file and line number\n   - The compiler could fail on some larger UTF-8 text block (forum topic 24455)\n   - The {strip} tag can now be placed outside {block} tags in child templates (forum topic 24289)\n- change SmartyException::$escape  is now false by default\n- change PHP traceback has been remove for SmartyException and SmartyCompilerException\n\n14.08.2013\n- bugfix compiled filepath of config file did not observe different config_dir (forum topic 24493)\n\n13.08.2013\n- bugfix the internal resource cache did not observe config_dir changes (forum topic 24493)\n\n12.08.2013\n- bugfix internal $tmpx variables must be unique over all inheritance templates (Issue 149)\n\n10.08.2013\n- bugfix a newline was eaten when a <?xml ... ?> was passed by a Smarty variable and caching was enabled (forum topic 24482)\n\n29.07.2013\n- bugfix headers already send warning thrown when using 'SMARTY_DEBUG=on' from URL (Issue 148)\n\n27.07.2013\n- enhancement allow access to properties of registered opjects for Smarty2 BC (forum topic 24344)\n\n26.07.2013\n- bugfix template inheritance nesting problem (forum topic 24387)\n\n15.7.2013\n- update code generated by PSR-2 standards fixer which introduced PHP 5.4 incompatibilities of 14.7.2013\n\n14.7.2013\n- bugfix increase of internal maximum parser stacksize to allow more complex tag code {forum topic 24426}\n- update for PHP 5.4 compatibility\n- reformat source to PSR-2 standard\n\n12.7.2013\n- bugfix Do not remove '//' from file path at normalization (Issue 142)\n\n2.7.2013\n- bugfix trimwhitespace would replace captured items in wrong order (forum topic 24387)\n\n## Smarty-3.1.14 -\n27.06.2013\n- bugfix removed PHP 5.5 deprecated preg_replace /e option in modifier capitalize (forum topic 24389)\n\n17.06.2013\n- fixed spelling in sources and documentation (from smarty-developers forum Veres Lajos)\n- enhancement added constant SMARTY::CLEAR_EXPIRED for the change of 26.05.2013 (forum topic 24310)\n- bugfix added smarty_security.php to composer.json (Issue 135)\n\n26.05.2013\n- enhancement an expire_time of -1 in clearCache() and clearAllCache() will delete outdated cache files\n  by their individual cache_lifetime used at creation (forum topic 24310)\n\n21.05.2013\n- bugfix modifier strip_tags:true was compiled into wrong code (Forum Topic 24287)\n- bugfix /n after ?> in Smarty.class.php did start output buffering (Issue 138)\n\n25.04.2013\n- bugfix escape and wordrap modifier could be compiled into wrong code when used in {nocache}{/nocache}\n  section but caching is disabled  (Forum Topic 24260)\n\n05.04.2013\n- bugfix post filter must not run when compiling inheritance child blocks (Forum Topic 24094)\n- bugfix after the fix for Issue #130 compiler exceptions got double escaped (Forum Topic 24199)\n\n28.02.2013\n- bugfix nocache blocks could be lost when using CACHING_LIFETIME_SAVED (Issue #133)\n- bugfix Compile ID gets nulled when compiling child blocks (Issue #134)\n\n\n24.01.2013\n- bugfix wrong tag type in smarty_internal_templatecompilerbase.php could cause wrong plugin search order (Forum Topic 24028)\n\n## Smarty-3.1.13 -\n13.01.2013\n- enhancement allow to disable exception message escaping by SmartyException::$escape = false;  (Issue #130)\n\n09.01.2013\n- bugfix compilation did fail when a prefilter did modify an {extends} tag c\n- bugfix template inheritance could fail if nested {block} tags in childs did contain {$smarty.block.child} (Issue #127)\n- bugfix template inheritance could fail if {block} tags in childs did have similar name as used plugins (Issue #128)\n- added abstract method declaration doCompile() in Smarty_Internal_TemplateCompilerBase (Forum Topic 23969)\n\n06.01.2013\n- Allow '://' URL syntax in template names of stream resources  (Issue #129)\n\n27.11.2012\n- bugfix wrong variable usage in smarty_internal_utility.php (Issue #125)\n\n26.11.2012\n- bugfix global variable assigned within template function are not seen after template function exit (Forum Topic 23800)\n\n24.11.2012\n- made SmartyBC loadable via composer (Issue #124)\n\n20.11.2012\n- bugfix assignGlobal() called from plugins did not work (Forum Topic 23771)\n\n13.11.2012\n- adding attribute \"strict\" to html_options, html_checkboxes, html_radios to only print disabled/readonly attributes if their values are true or \"disabled\"/\"readonly\" (Issue #120)\n\n01.11.2012\n- bugfix muteExcpetedErrors() would screw up for non-readable paths (Issue #118)\n\n## Smarty-3.1.12  -\n14.09.2012\n- bugfix template inheritance failed to compile with delimiters {/ and /} (Forum Topic 23008)\n\n11.09.2012\n- bugfix escape Smarty exception messages to avoid possible script execution\n\n10.09.2012\n- bugfix tag option flags and shorttag attributes did not work when rdel started with '=' (Forum Topic 22979)\n\n31.08.2012\n- bugfix resolving relative paths broke in some circumstances (Issue #114)\n\n22.08.2012\n- bugfix test MBString availability through mb_split, as it could've been compiled without regex support (--enable-mbregex).\n  Either we get MBstring's full package, or we pretend it's not there at all.\n\n21.08.2012\n- bugfix $auto_literal = false did not work with { block} tags in child templates\n  (problem was reintroduced after fix in 3.1.7)(Forum Topic 20581)\n\n17.08.2012\n- bugfix compiled code of nocache sections could contain wrong escaping (Forum Topic 22810)\n\n15.08.2012\n- bugfix template inheritance did produce wrong code if subtemplates with {block} was\n  included several times (from smarty-developers forum)\n\n14.08.2012\n- bugfix PHP5.2 compatibility compromised by SplFileInfo::getBasename() (Issue 110)\n\n01.08.2012\n- bugfix avoid PHP error on $smarty->configLoad(...) with invalid section specification (Forum Topic 22608)\n\n30.07.2012\n-bugfix {assign} in a nocache section should not overwrite existing variable values\n   during compilation (issue 109)\n\n28.07.2012\n- bugfix array access of config variables did not work (Forum Topic 22527)\n\n19.07.2012\n- bugfix the default plugin handler did create wrong compiled code for static class methods\n  from external script files (issue 108)\n\n## Smarty-3.1.11 -\n30.06.2012\n- bugfix {block.. hide} did not work as nested child (Forum Topic 22216)\n\n25.06.2012\n- bugfix the default plugin handler did not allow static class methods for modifier (issue 85)\n\n24.06.2012\n- bugfix escape modifier support for PHP < 5.2.3 (Forum Topic 21176)\n\n11.06.2012\n- bugfix the patch for Topic 21856 did break tabs between tag attributes (Forum Topic 22124)\n\n## Smarty-3.1.10  -\n09.06.2012\n- bugfix the compiler did ignore registered compiler plugins for closing tags (Forum Topic 22094)\n- bugfix the patch for Topic 21856 did break multiline tags (Forum Topic 22124)\n\n## Smarty-3.1.9 -\n07.06.2012\n- bugfix fetch() and display() with relative paths (Issue 104)\n- bugfix treat \"0000-00-00\" as 0 in modifier.date_format (Issue 103)\n\n24.05.2012\n- bugfix Smarty_Internal_Write_File::writeFile() could cause race-conditions on linux systems (Issue 101)\n- bugfix attribute parameter names of plugins may now contain also \"-\"  and \":\"  (Forum Topic 21856)\n- bugfix add compile_id to cache key of of source (Issue 97)\n\n22.05.2012\n- bugfix recursive {include} within {section} did fail (Smarty developer group)\n\n12.05.2012\n- bugfix {html_options} did not properly escape values (Issue 98)\n\n03.05.2012\n- bugfix make HTTP protocall version variable (issue 96)\n\n02.05.2012\n- bugfix  {nocache}{block}{plugin}... did produce wrong compiled code when caching is disabled (Forum Topic 21572, issue 95)\n\n12.04.2012\n- bugfix Smarty did eat the linebreak after the <?xml...?> closing tag (Issue 93)\n- bugfix concurrent cache updates could create a warning (Forum Topic 21403)\n\n08.04.2012\n- bugfix \"\\\\\" was not escaped correctly when generating nocache code (Forum Topic 21364)\n\n30.03.2012\n- bugfix template inheritance did  not throw exception when a parent template was deleted (issue 90)\n\n27.03.2012\n- bugfix prefilter did run multiple times on inline subtemplates compiled into several main templates (Forum Topic 21325)\n- bugfix implement Smarty2's behaviour of variables assigned by reference in SmartyBC. {assign} will affect all references.\n  (issue 88)\n\n21.03.2012\n- bugfix compileAllTemplates() and compileAllConfig() did not return the number of compiled files (Forum Topic 21286)\n\n13.03.2012\n- correction of yesterdays bugfix (Forum Topic 21175 and 21182)\n\n12.03.2012\n- bugfix a double quoted string of \"$foo\" did not compile into PHP \"$foo\" (Forum Topic 21175)\n- bugfix template inheritance did set $merge_compiled_includes globally true\n\n03.03.2012\n- optimization of compiling speed when same modifier was used several times\n\n02.03.2012\n- enhancement the default plugin handler can now also resolve undefined modifier (Smarty::PLUGIN_MODIFIER)\n  (Issue 85)\n\n## Smarty-3.1.8  -\n19.02.2012\n- bugfix {include} could result in a fatal error if used in appended or prepended nested {block} tags\n  (reported by mh and Issue 83)\n- enhancement added Smarty special variable $smarty.template_object to return the current template object (Forum Topic 20289)\n\n\n07.02.2012\n- bugfix increase entropy of internal function names in compiled and cached template files (Forum Topic 20996)\n- enhancement cacheable parameter added to default plugin handler, same functionality as in registerPlugin (request by calguy1000)\n\n06.02.2012\n- improvement stream_resolve_include_path() added to Smarty_Internal_Get_Include_Path (Forum Topic 20980)\n- bugfix fetch('extends:foo.tpl') always yielded $source->exists == true (Forum Topic 20980)\n- added modifier unescape:\"url\", fix (Forum Topic 20980)\n- improvement replaced some calls of preg_replace with str_replace (Issue 73)\n\n30.01.2012\n- bugfix Smarty_Security internal $_resource_dir cache wasn't properly propagated\n\n27.01.2012\n- bugfix Smarty did not a template name of \"0\" (Forum Topic 20895)\n\n20.01.2012\n- bugfix typo in Smarty_Internal_Get_IncludePath did cause runtime overhead (Issue 74)\n- improvment remove unneeded assigments (Issue 75 and 76)\n- fixed typo in template parser\n- bugfix output filter must not run before writing cache when template does contain nocache code (Issue 71)\n\n02.01.2012\n- bugfix {block foo nocache} did not load plugins within child {block} in nocache mode (Forum Topic 20753)\n\n29.12.2011\n- bugfix enable more entropy in Smarty_Internal_Write_File for \"more uniqueness\" and Cygwin compatibility (Forum Topic 20724)\n- bugfix embedded quotes in single quoted strings did not compile correctly in {nocache} sections (Forum Topic 20730)\n\n28.12.2011\n- bugfix Smarty's internal header code must be excluded from postfilters (issue 71)\n\n22.12.2011\n- bugfix the new lexer of 17.12.2011 did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n- bugfix template inheritace did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n\n20.12.2011\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return\n  content after {$smarty.block.child} (Forum Topic 20564)\n\n## Smarty-3.1.7 -\n18.12.2011\n- bugfix strings ending with \" in multiline strings of config files failed to compile (issue #67)\n- added chaining to Smarty_Internal_Templatebase\n- changed unloadFilter() to not return a boolean in favor of chaining and API conformity\n- bugfix unregisterObject() raised notice when object to unregister did not exist\n- changed internals to use Smarty::$_MBSTRING ($_CHARSET, $_DATE_FORMAT) for better unit testing\n- added Smarty::$_UTF8_MODIFIER for proper PCRE charset handling (Forum Topic 20452)\n- added Smarty_Security::isTrustedUri() and Smarty_Security::$trusted_uri to validate\n  remote resource calls through {fetch} and {html_image} (Forum Topic 20627)\n\n17.12.2011\n- improvement of compiling speed by new handling of plain text blocks in the lexer/parser (issue #68)\n\n16.12.2011\n- bugfix the source exits flag and timestamp was not setup when template was in php include path (issue #69)\n\n9.12.2011\n- bugfix {capture} tags around recursive {include} calls did throw exception (Forum Topic 20549)\n- bugfix $auto_literal = false did not work with { block} tags in child templates (Forum Topic 20581)\n- bugfix template inheritance: do not include code of {include} in overloaded {block} into compiled\n  parent template (Issue #66}\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return expected\n  result (Forum Topic 20564)\n\n## Smarty-3.1.6  -\n30.11.2011\n- bugfix is_cache() for individual cached subtemplates with $smarty->caching = CACHING_OFF did produce\n  an exception (Forum Topic 20531)\n\n29.11.2011\n- bugfix added exception if the default plugin handler did return a not static callback (Forum Topic 20512)\n\n25.11.2011\n- bugfix {html_select_date} and {html_slecet_time} did not default to current time if \"time\" was not specified\n  since r4432 (issue 60)\n\n24.11.2011\n- bugfix a subtemplate later used as main template did use old variable values\n\n21.11.2011\n- bugfix cache file could include unneeded modifier plugins under certain condition\n\n18.11.2011\n- bugfix declare all directory properties private to map direct access to getter/setter also on extended Smarty class\n\n16.11.2011\n- bugfix Smarty_Resource::load() did not always return a proper resource handler (Forum Topic 20414)\n- added escape argument to html_checkboxes and html_radios (Forum Topic 20425)\n\n## Smarty-3.1.5  -\n14.11.2011\n- bugfix allow space between function name and open bracket (forum topic 20375)\n\n09.11.2011\n- bugfix different behaviour of uniqid() on cygwin. See https://bugs.php.net/bug.php?id=34908\n  (forum topic 20343)\n\n01.11.2011\n- bugfix {if} and {while} tags without condition did not throw a SmartyCompilerException (Issue #57)\n- bugfix multiline strings in config files could fail on longer strings (reopened Issue #55)\n\n22.10.2011\n- bugfix smarty_mb_from_unicode() would not decode unicode-points properly\n- bugfix use catch Exception instead UnexpectedValueException in\n  clearCompiledTemplate to be PHP 5.2 compatible\n\n21.10.2011\n- bugfix apostrophe in plugins_dir path name failed (forum topic 20199)\n- improvement sha1() for array keys longer than 150 characters\n- add Smarty::$allow_ambiguous_resources to activate unique resource handling (Forum Topic 20128)\n\n20.10.2011\n- @silenced unlink() in Smarty_Internal_Write_File since debuggers go haywire without it.\n- bugfix Smarty::clearCompiledTemplate() threw an Exception if $cache_id was not present in $compile_dir when $use_sub_dirs = true.\n- bugfix {html_select_date} and {html_select_time} did not properly handle empty time arguments (Forum Topic 20190)\n- improvement removed unnecessary sha1()\n\n19.10.2011\n- revert PHP4 constructor message\n- fixed PHP4 constructor message\n\n## Smarty-3.1.4 -\n19.10.2011\n- added exception when using PHP4 style constructor\n\n16.10.2011\n- bugfix testInstall() did not propery check cache_dir and compile_dir\n\n15.10.2011\n- bugfix Smarty_Resource and Smarty_CacheResource runtime caching (Forum Post 75264)\n\n14.10.2011\n- bugfix unique_resource did not properly apply to compiled resources (Forum Topic 20128)\n- add locking to custom resources (Forum Post 75252)\n- add Smarty_Internal_Template::clearCache() to accompany isCached() fetch() etc.\n\n13.10.2011\n- add caching for config files in Smarty_Resource\n- bugfix disable of caching after isCached() call did not work (Forum Topic 20131)\n- add concept unique_resource to combat potentially ambiguous template_resource values when custom resource handlers are used (Forum Topic 20128)\n- bugfix multiline strings in config files could fail on longer strings (Issue #55)\n\n11.10.2011\n- add runtime checks for not matching {capture}/{/capture} calls (Forum Topic 20120)\n\n10.10.2011\n- bugfix variable name typo in {html_options} and {html_checkboxes} (Issue #54)\n- bugfix <?xml> tag did create wrong output when caching enabled and the tag was in included subtemplate\n- bugfix Smarty_CacheResource_mysql example was missing strtotime() calls\n\n## Smarty-3.1.3  -\n07.10.2011\n- improvement removed html comments from {mailto} (Forum Topic 20092)\n- bugfix testInstall() would not show path to internal plugins_dir (Forum Post 74627)\n- improvement testInstall() now showing resolved paths and checking the include_path if necessary\n- bugfix html_options plugin did not handle object values properly (Issue #49, Forum Topic 20049)\n- improvement html_checkboxes and html_radios to accept null- and object values, and label_ids attribute\n- improvement removed some unnecessary count()s\n- bugfix parent pointer was not set when fetch() for other template was called on template object\n\n06.10.2011\n- bugfix switch lexer internals depending on mbstring.func_overload\n- bugfix start_year and end_year of {html_select_date} did not use current year as offset base (Issue #53)\n\n05.10.2011\n- bugfix of problem introduced with r4342 by replacing strlen() with isset()\n- add environment configuration issue with mbstring.func_overload Smarty cannot compensate for (Issue #45)\n- bugfix nofilter tag option did not disable default modifier\n- bugfix html_options plugin did not handle null- and object values properly (Issue #49, Forum Topic 20049)\n\n04.10.2011\n- bugfix assign() in plugins called in subtemplates did change value also in parent template\n- bugfix of problem introduced with r4342 on math plugin\n- bugfix output filter should not run on individually cached subtemplates\n- add unloadFilter() method\n- bugfix has_nocache_code flag was not reset before compilation\n\n## Smarty-3.1.2  -\n03.10.2011\n- improvement add internal $joined_template_dir property instead computing it on the fly several times\n\n01.10.2011\n- improvement replaced most in_array() calls by more efficient isset() on array_flip()ed haystacks\n- improvement replaced some strlen($foo) > 3 calls by isset($foo[3])\n- improvement Smarty_Internal_Utility::clearCompiledTemplate() removed redundant strlen()s\n\n29.09.2011\n- improvement of Smarty_Internal_Config::loadConfigVars() dropped the in_array for index look up\n\n28.09.2011\n- bugfix on template functions called nocache calling other template functions\n\n27.09.2011\n- bugfix possible warning \"attempt to modify property of non-object\" in {section} (issue #34)\n- added chaining to \\Smarty\\Data so $smarty->assign('a',1)->assign('b',2); is possible now\n- bugfix remove race condition when a custom resource did change timestamp during compilation\n- bugfix variable property did not work on objects variable in template\n- bugfix smarty_make_timestamp() failed to process DateTime objects properly\n- bugfix wrong resource could be used on compile check of custom resource\n\n26.09.2011\n- bugfix repeated calls to same subtemplate did not make use of cached template object\n\n24.09.2011\n- removed internal muteExpectedErrors() calls in favor of having the implementor call this once from his application\n- optimized muteExpectedErrors() to pass errors to the latest registered error handler, if appliccable\n- added compile_dir and cache_dir to list of muted directories\n- improvment better error message for undefined templates at {include}\n\n23.09.2011\n- remove unused properties\n- optimization use real function instead anonymous function for preg_replace_callback\n- bugfix a relative {include} in child template blocks failed\n- bugfix direct setting of $template_dir, $config_dir, $plugins_dir in __construct() of an\n  extended Smarty class created problems\n- bugfix error muting was not implemented for cache locking\n\n## Smarty 3.1.1  -\n22.09.2011\n- bugfix {foreachelse} does fail if {section} was nested inside {foreach}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n21.09.2011\n- bugfix look for mixed case plugin file names as in 3.0 if not found try all lowercase\n- added $error_muting to suppress error messages even for badly implemented error_handlers\n- optimized autoloader\n- reverted ./ and ../ handling in fetch() and display() - they're allowed again\n\n20.09.2011\n- bugfix removed debug echo output while compiling template inheritance\n- bugfix relative paths in $template_dir broke relative path resolving in {include \"../foo.tpl\"}\n- bugfix {include} did not work inside nested {block} tags\n- bugfix {assign} with scope root and global did not work in all cases\n\n19.09.2011\n- bugfix regression in Smarty_CacheReource_KeyValueStore introduced by r4261\n- bugfix output filter shall not run on included subtemplates\n\n18.09.2011\n- bugfix template caching did not care about file.tpl in different template_dir\n- bugfix {include $file} was broken when merge_compiled_incluges = true\n- bugfix {include} was broken when merge_compiled_incluges = true and same indluded template\n  was used in different main templates in one compilation run\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n17.09.2011\n- bugfix lock_id for file resource would create invalid filepath\n- bugfix resource caching did not care about file.tpl in different template_dir\n\n## Smarty 3.1.0  -\n15/09/2011\n- optimization of {foreach}; call internal _count() method only when \"total\" or \"last\" {foreach} properties are used\n\n11/09/2011\n- added  unregisterObject() method\n\n06/09/2011\n- bugfix  isset() did not work in templates on config variables\n\n03/09/2011\n- bugfix createTemplate() must default to cache_id and compile_id of Smarty object\n- bugfix Smarty_CacheResource_KeyValueStore must include $source->uid in cache filepath to keep templates with same\n  name but different folders separated\n- added cacheresource.apc.php example in demo folder\n\n02/09/2011\n- bugfix cache lock file must use absolute filepath\n\n01/09/2011\n- update of cache locking\n\n30/08/2011\n- added locking mechanism to CacheResource API (implemented with File and KeyValueStores)\n\n28/08/2011\n- bugfix clearCompileTemplate() did not work for specific template subfolder or resource\n\n27/08/2011\n- bugfix {$foo|bar+1} did create syntax error\n\n26/08/2011\n- bugfix when generating nocache code which contains double \\\n- bugfix handle race condition if cache file was deleted between filemtime and include\n\n17/08/2011\n- bugfix CacheResource_Custom bad internal fetch() call\n\n15/08/2011\n- bugfix CacheResource would load content twice for KeyValueStore and Custom handlers\n\n06/08/2011\n- bugfix {include} with scope attribute could execute in wrong scope\n- optimization of compile_check processing\n\n03/08/2011\n- allow comment tags to comment {block} tags out in child templates\n\n26/07/2011\n- bugfix experimental getTags() method did not work\n\n24/07/2011\n- sure opened output buffers are closed on exception\n- bugfix {foreach} did not work on IteratorAggregate\n\n22/07/2011\n- clear internal caches on clearAllCache(), clearCache(), clearCompiledTemplate()\n\n21/07/2011\n- bugfix value changes of variable values assigned to Smarty object could not be seen on repeated $smarty->fetch() calls\n\n17/07/2011\n- bugfix {$smarty.block.child} did drop a notice at undefined child\n\n15/07/2011\n- bugfix individual cache_lifetime of {include} did not work correctly inside {block} tags\n- added caches for Smarty_Internal_TemplateSource and Smarty_Internal_TemplateCompiled to reduce I/O for multiple cache_id rendering\n\n14/07/2011\n- made Smarty::loadPlugin() respect the include_path if required\n\n13/07/2011\n- optimized internal file write functionality\n- bugfix PHP did eat line break on nocache sections\n- fixed typo of Smarty_Security properties $allowed_modifiers and $disabled_modifiers\n\n06/07/2011\n- bugfix variable modifier must run befor gereral filtering/escaping\n\n04/07/2011\n- bugfix use (?P<name>) syntax at preg_match as some pcre libraries failed on (?<name>)\n- some performance improvement when using generic getter/setter on template objects\n\n30/06/2011\n- bugfix generic getter/setter of Smarty properties used on template objects did throw exception\n- removed is_dir and is_readable checks from directory setters for better performance\n\n28/06/2011\n- added back support of php template resource as undocumented feature\n- bugfix automatic recompilation on version change could drop undefined index notice on old 3.0 cache and compiled files\n- update of README_3_1_DEV.txt and moved into the distribution folder\n- improvement show first characters of eval and string templates instead sha1 Uid in debug window\n\n## Smarty 3.1-RC1 -\n25/06/2011\n- revert change of 17/06/2011. $_smarty varibale removed. call loadPlugin() from inside plugin code if required\n- code cleanup, remove no longer used properties and methods\n- update of PHPdoc comments\n\n23/06/2011\n- bugfix {html_select_date} would not respect current time zone\n\n19/06/2011\n- added $errors argument to testInstall() functions to suppress output.\n- added plugin-file checks to testInstall()\n\n18/06/2011\n- bugfix mixed use of same subtemplate inline and not inline in same script could cause a warning during compilation\n\n17/06/2011\n- bugfix/change use $_smarty->loadPlugin() when loading nested depending plugins via loadPlugin\n- bugfix {include ... inline} within {block}...{/block} did fail\n\n16/06/2011\n- bugfix do not overwrite '$smarty' template variable when {include ... scope=parent} is called\n- bugfix complete empty inline subtemplates did fail\n\n15/06/2011\n- bugfix template variables where not accessable within inline subtemplates\n\n12/06/2011\n- bugfix removed unneeded merging of template variable when fetching includled subtemplates\n\n10/06/2011\n- made protected properties $template_dir, $plugins_dir, $cache_dir, $compile_dir, $config_dir accessible via magic methods\n\n09/06/2011\n- fix smarty security_policy issue in plugins {html_image} and {fetch}\n\n05/06/2011\n- update of SMARTY_VERSION\n- bugfix made getTags() working again\n\n04/06/2011\n- allow extends resource in file attribute of {extends} tag\n\n03/06/2011\n- added {setfilter} tag to set filters for variable output\n- added escape_html property to control autoescaping of variable output\n\n27/05/2011\n- added allowed/disabled tags and modifiers in security for sandboxing\n\n23/05/2011\n- added base64: and urlencode: arguments to eval and string resource types\n\n22/05/2011\n- made time-attribute of {html_select_date} and {html_select_time} accept arrays as defined by attributes prefix and field_array\n\n13/05/2011\n- remove setOption / getOption calls from SamrtyBC class\n\n02/05/2011\n- removed experimental setOption() getOption() methods\n- output returned content also on opening tag calls of block plugins\n- rewrite of default plugin handler\n- compile code of variable filters for better performance\n\n20/04/2011\n- allow {php} {include_php} tags and PHP_ALLOW handling only with the SmartyBC class\n- removed support of php template resource\n\n20/04/2011\n- added extendsall resource example\n- optimization of template variable access\n- optimization of subtemplate handling {include}\n- optimization of template class\n\n01/04/2011\n- bugfix quote handling in capitalize modifier\n\n28/03/2011\n- bugfix stripslashes() requried when using PCRE e-modifier\n\n04/03/2011\n- upgrade to new PHP_LexerGenerator version 0.4.0 for better performance\n\n27/02/2011\n- ignore .svn folders when clearing cache and compiled files\n- string resources do not need a modify check\n\n26/02/2011\n- replaced smarty_internal_wrapper by SmartyBC class\n- load utility functions as static methods instead through __call()\n- bugfix in extends resource when subresources are used\n- optimization of modify checks\n\n25/02/2011\n- use $smarty->error_unassigned to control NOTICE handling on unassigned variables\n\n21/02/2011\n- added new new compile_check mode COMPILECHECK_CACHEMISS\n- corrected new cloning behaviour of createTemplate()\n- do no longer store the compiler object as property in the compile_tag classes to avoid possible memory leaks\n  during compilation\n\n19/02/2011\n- optimizations on merge_compiled_includes handling\n- a couple of optimizations and bugfixes related to new resource structure\n\n17/02/2011\n- changed ./ and ../ behaviour\n\n14/02/2011\n- added {block ... hide} option to suppress block if no child is defined\n\n13/02/2011\n- update handling of recursive subtemplate calls\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n12/02/2011\n- new class Smarty_Internal_TemplateBase with shared methods of Smarty and Template objects\n- optimizations of template processing\n- made register... methods permanet\n- code for default_plugin_handler\n- add automatic recompilation at version change\n\n04/02/2011\n- change in Smarty_CacheResource_Custom\n- bugfix cache_lifetime did not compile correctly at {include} after last update\n- moved isCached processing into CacheResource class\n- bugfix new CacheResource API did not work with disabled compile_check\n\n03/02/2011\n- handle template content as function to improve speed on multiple calls of same subtemplate and isCached()/display() calls\n- bugfixes and improvents in the new resource API\n- optimizations of template class code\n\n25/01/2011\n- optimized function html_select_time\n\n22/01/2011\n- added Smarty::$use_include_path configuration directive for Resource API\n\n21/01/2011\n- optimized function html_select_date\n\n19/01/2011\n- optimized outputfilter trimwhitespace\n\n18/01/2011\n- bugfix Config to use Smarty_Resource to fetch sources\n- optimized Smarty_Security's isTrustedDir() and isTrustedPHPDir()\n\n17/01/2011\n- bugfix HTTP headers for CGI SAPIs\n\n16/01/2011\n- optimized internals of Smarty_Resource and Smarty_CacheResource\n\n14/01/2011\n- added modifiercompiler escape to improve performance of escaping html, htmlall, url, urlpathinfo, quotes, javascript\n- added support to choose template_dir to load from: [index]filename.tpl\n\n12/01/2011\n- added unencode modifier to revert results of encode modifier\n- added to_charset and from_charset modifier for character encoding\n\n11/01/2011\n- added SMARTY_MBSTRING to generalize MBString detection\n- added argument $lc_rest to modifier.capitalize to lower-case anything but the first character of a word\n- changed strip modifier to consider unicode white-space, too\n- changed wordwrap modifier to accept UTF-8 strings\n- changed count_sentences modifier to consider unicode characters and treat sequences delimited by ? and ! as sentences, too\n- added argument $double_encode to modifier.escape (applies to html and htmlall only)\n- changed escape modifier to be UTF-8 compliant\n- changed textformat block to be UTF-8 compliant\n- optimized performance of mailto function\n- fixed spacify modifier so characters are not prepended and appended, made it unicode compatible\n- fixed truncate modifier to properly use mb_string if possible\n- removed UTF-8 frenzy from count_characters modifier\n- fixed count_words modifier to treat \"hello-world\" as a single word like str_count_words() does\n- removed UTF-8 frenzy from upper modifier\n- removed UTF-8 frenzy from lower modifier\n\n01/01/2011\n- optimize smarty_modified_escape for hex, hexentity, decentity.\n\n28/12/2010\n- changed $tpl_vars, $config_vars and $parent to belong to \\Smarty\\Data\n- added Smarty::registerCacheResource() for dynamic cache resource object registration\n\n27/12/2010\n- added Smarty_CacheResource API and refactored existing cache resources accordingly\n- added Smarty_CacheResource_Custom and Smarty_CacheResource_Mysql\n\n26/12/2010\n- added Smarty_Resource API and refactored existing resources accordingly\n- added Smarty_Resource_Custom and Smarty_Resource_Mysql\n- bugfix Smarty::createTemplate() to return properly cloned template instances\n\n24/12/2010\n- optimize smarty_function_escape_special_chars() for PHP >= 5.2.3\n\n## SVN 3.0 trunk  -\n14/05/2011\n- bugfix error handling at stream resources\n\n13/05/2011\n- bugfix condition starting with \"-\" did fail at {if} and {while} tags\n\n22/04/2011\n- bugfix allow only fixed string as file attribute at {extends} tag\n\n01/04/2011\n- bugfix do not run filters and default modifier when displaying the debug template\n- bugfix of embedded double quotes within multi line strings (\"\"\")\n\n29/03/2011\n- bugfix on error message in smarty_internal_compile_block.php\n- bugfix mb handling in strip modifier\n- bugfix for Smarty2 style registered compiler function on unnamed attribute passing like {tag $foo $bar}\n\n17/03/2011\n- bugfix on default {function} parameters when {function} was used in nocache sections\n- bugfix on compiler object destruction. compiler_object property was by mistake unset.\n\n09/03/2011\n-bugfix a variable filter should run before modifiers on an output tag (see change of 23/07/2010)\n\n08/03/2011\n- bugfix loading config file without section should load only defaults\n\n03/03/2011\n- bugfix \"smarty\" template variable was not recreated when cached templated had expired\n- bugfix internal rendered_content must be cleared after subtemplate was included\n\n01/03/2011\n- bugfix replace modifier did not work in 3.0.7 on systems without multibyte support\n- bugfix {$smarty.template} could return in 3.0.7 parent template name instead of\n         child name when it needed to compile\n\n25/02/2011\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n\n24/02/2011\n- bugfix $smarty->clearCache('some.tpl') did by mistake cache the template object\n\n18/02/2011\n- bugfix removed possible race condition when isCached() was called for an individually cached subtemplate\n- bugfix force default debug.tpl to be loaded by the file resource\n\n17/02/2011\n-improvement not to delete files starting with '.' from cache and template_c folders on clearCompiledTemplate() and clearCache()\n\n16/02/2011\n-fixed typo in exception message of Smarty_Internal_Template\n-improvement allow leading spaces on } tag closing if auto_literal is enabled\n\n13/02/2011\n- bufix replace $smarty->triggerError() by exception\n- removed obsolete {popup_init..} plugin from demo templates\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n## Smarty 3.0.7  -\n09/02/2011\n- patched vulnerability when using {$smarty.template}\n\n01/02/2011\n- removed assert() from config and template parser\n\n31/01/2011\n- bugfix the lexer/parser did fail on special characters like VT\n\n16/01/2011\n-bugfix of ArrayAccess object handling in internal _count() method\n-bugfix of Iterator object handling in internal _count() method\n\n14/01/2011\n-bugfix removed memory leak while processing compileAllTemplates\n\n12/01/2011\n- bugfix in {if} and {while} tag compiler when using assignments as condition and nocache mode\n\n10/01/2011\n- bugfix when using {$smarty.block.child} and name of {block} was in double quoted string\n- bugfix updateParentVariables() was called twice when leaving {include} processing\n\n- bugfix mb_str_replace in replace and escape modifiers work with utf8\n\n31/12/2010\n- bugfix dynamic configuration of $debugging_crtl did not work\n- bugfix default value of $config_read_hidden changed to false\n- bugfix format of attribute array on compiler plugins\n- bugfix getTemplateVars() could return value from wrong scope\n\n28/12/2010\n- bugfix multiple {append} tags failed to compile.\n\n22/12/2010\n- update do not clone the Smarty object an internal createTemplate() calls to increase performance\n\n21/12/2010\n- update html_options to support class and id attrs\n\n17/12/2010\n- bugfix added missing support of $cache_attrs for registered plugins\n\n15/12/2010\n- bugfix assignment as condition in {while} did drop an E_NOTICE\n\n14/12/2010\n- bugfix when passing an array as default parameter at {function} tag\n\n13/12/2010\n- bugfix {$smarty.template} in child template did not return right content\n- bugfix Smarty3 did not search the PHP include_path for template files\n\n## Smarty 3.0.6  -\n\n12/12/2010\n- bugfix fixed typo regarding yesterdays change to allow streamWrapper\n\n11/12/2010\n- bugfix nested block tags in template inheritance child templates did not work correctly\n- bugfix {$smarty.current_dir} in child template did not point to dir of child template\n- bugfix changed code when writing temporary compiled files to allow stream_wrapper\n\n06/12/2010\n- bugfix getTemplateVars() should return 'null' instead dropping E_NOTICE on an unassigned variable\n\n05/12/2010\n- bugfix missing declaration of $smarty in Smarty class\n- bugfix empty($foo) in {if} did drop a notice when $foo was not assigned\n\n01/12/2010\n- improvement of {debug} tag output\n\n27/11/2010\n-change run output filter before cache file is written. (same as in Smarty2)\n\n24/11/2011\n-bugfix on parser at  !$foo|modifier\n-change parser logic when assignments used as condition in {if] and {while} to allow assign to array element\n\n23/11/2011\n-bugfix allow integer as attribute name in plugin calls\n-change  trimm whitespace from error message, removed long list of expected tokens\n\n22/11/2010\n- bugfix on template inheritance when an {extends} tag was inserted by a prefilter\n- added error message for illegal variable file attributes at {extends...} tags\n\n## Smarty 3.0.5  -\n\n\n19/11/2010\n- bugfix on block plugins with modifiers\n\n18/11/2010\n- change on handling of unassigned template variable -- default will drop E_NOTICE\n- bugfix on Smarty2 wrapper load_filter() did not work\n\n17/11/2010\n- bugfix on {call} with variable function name\n- bugfix on {block} if name did contain '-'\n- bugfix in function.fetch.php , referece to undefined $smarty\n\n16/11/2010\n- bugfix whitespace in front of \"<?php\" in smarty_internal_compile_private_block_plugin.php\n- bugfix {$smarty.now} did compile incorrectly\n- bugfix on reset(),end(),next(),prev(),current() within templates\n- bugfix on default parameter for {function}\n\n15/11/2010\n- bugfix when using {$smarty.session} as object\n- bugfix scoping problem on $smarty object passed to filters\n- bugfix captured content could not be accessed globally\n- bugfix Smarty2 wrapper functions could not be call from within plugins\n\n## Smarty 3.0.4  -\n\n14/11/2010\n- bugfix isset() did not allow multiple parameter\n- improvment of some error messages\n- bugfix html_image did use removed property $request_use_auto_globals\n- small performace patch in Smarty class\n\n13/11/2010\n- bugfix  overloading problem when $smarty->fetch()/display() have been used in plugins\n\t\t\t\t(introduced with 3.0.2)\n- code cleanup\n\t\t\t\t\t\t\t\t\n## Smarty 3.0.3  -\n\n13/11/2010\n- bugfix on {debug}\n- reverted location of loadPlugin() to Smarty class\n- fixed comments in plugins\n- fixed internal_config (removed unwanted code line)\n- improvement  remove last linebreak from {function} definition\n\n## Smarty 3.0.2  -\n\n12/11/2010\n- reactivated $error_reporting property handling\n- fixed typo in compile_continue\n- fixed security in {fetch} plugin\n- changed back plugin parameters to two. second is template object\n  with transparent access to Smarty object\n- fixed {config_load} scoping form compile time to run time\n\n## Smarty 3.0.0  -\n\n\n\n11/11/2010\n- major update including some API changes\n\n10/11/2010\n- observe compile_id also for config files\n\n09/11/2010\n-bugfix on  complex expressions as start value for {for} tag\nrequest_use_auto_globals\n04/11/2010\n- bugfix do not allow access of dynamic and private object members of assigned objects when\n  security is enabled.\n\n01/11/2010\n- bugfix related to E_NOTICE change.  {if empty($foo)} did fail when $foo contained a string\n\n28/10/2010\n- bugfix on compiling modifiers within $smarty special vars like {$smarty.post.{$foo|lower}}\n\n27/10/2010\n- bugfix default parameter values did not work for template functions included with {include}\n\n25/10/2010\n- bugfix for E_NOTICE change, array elements did not work as modifier parameter\n\n20/10/2010\n- bugfix for the E_NOTICE change\n\n19/10/2010\n- change Smarty does no longer mask out E_NOTICE by default during template processing\n\n13/10/2010\n- bugfix removed ambiguity between ternary and stream variable in template syntax\n- bugfix use caching properties of template instead of smarty object when compiling child {block}\n- bugfix {*block}...{/block*} did throw an exception in template inheritance\n- bugfix on template inheritance using nested eval or string resource in {extends} tags\n- bugfix on output buffer handling in isCached() method\n\n##  RC4 -\n\n01/10/2010\n- added {break} and {continue} tags for flow control of {foreach},{section},{for} and {while} loops\n- change of 'string' resource. It's no longer evaluated and compiled files are now stored\n- new 'eval' resource which evaluates a template without saving the compiled file\n- change in isCached() method to allow multiple calls for the same template\n\n25/09/2010\n- bugfix on some compiling modifiers\n\n24/09/2010\n- bugfix merge_compiled_includes flag was not restored correctly in {block} tag\n\n22/09/2010\n- bugfix on default modifier\n\n18/09/2010\n- bugfix untility compileAllConfig() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n- bugfix on templateExists() for extends resource\n\n17/09/2010\n- bugfix {$smarty.template} and {$smarty.current_dir} did not compile correctly within {block} tags\n- bugfix corrected error message on missing template files in extends resource\n- bugfix untility compileAllTemplates() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n\n16/09/2010\n- bugfix when a doublequoted modifier parameter did contain Smarty tags and ':'\n\n15/09/2010\n- bugfix resolving conflict between '<%'/'%>' as custom Smarty delimiter and ASP tags\n- use ucfirst for resource name on internal resource class names\n\n12/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n10/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n08/09/2010\n- allow multiple template inheritance branches starting in subtemplates\n\n07/09/2010\n- bugfix {counter} and {cycle} plugin assigned result to smarty variable not in local(template) scope\n- bugfix templates containing just {strip} {/strip} tags did produce an error\n\n\n23/08/2010\n- fixed E_STRICT errors for uninitialized variables\n\n22/08/2010\n- added attribute cache_id to {include} tag\n\n13/08/2010\n- remove exception_handler property from Smarty class\n- added Smarty's own exceptions SmartyException and SmartyCompilerException\n\n09/08/2010\n- bugfix on modifier with doublequoted strings as parameter containing embedded tags\n\n06/08/2010\n- bugfix when cascading some modifier like |strip|strip_tags modifier\n\n05/08/2010\n- added plugin type modifiercompiler to produce compiled modifier code\n- changed standard modifier plugins to the compiling versions whenever possible\n- bugfix in nocache sections {include} must not cache the subtemplate\n\n02/08/2010\n- bugfix strip did not work correctly in conjunction with comment lines\n\n31/07/2010\n- bugfix on nocache attribute at {assign} and {append}\n\n30/07/2010\n- bugfix passing scope attributes in doublequoted strings did not work at {include} {assign} and {append}\n\n25/07/2010\n- another bugfix of change from 23/07/2010 when compiling modifier\n\n24/07/2010\n- bugfix of change from 23/07/2010 when compiling modifier\n\n23/07/2010\n- changed execution order. A variable filter does now run before modifiers on output of variables\n- bugfix use always { and } as delimiter for debug.tpl\n\n\n22/07/2010\n- bugfix in templateExists() method\n\n20/07/2010\n- fixed handling of { strip } tag with whitespaces\n\n15/07/2010\n- bufix  {$smarty.template} does include now the relative path, not just filename\n\n##  RC3 -\n\n\n\n\n15/07/2010\n- make the date_format modifier work also on objects of the DateTime class\n- implementation of parsetrees in the parser to close security holes and remove unwanted empty line in HTML output\n\n08/07/2010\n- bugfix on assigning multidimensional arrays within templates\n- corrected bugfix for truncate modifier\n\n07/07/2010\n- bugfix the truncate modifier needs to check if the string is utf-8 encoded or not\n- bugfix support of script files relative to trusted_dir\n\n06/07/2010\n- create exception on recursive {extends} calls\n- fixed reported line number at \"unexpected closing tag \" exception\n- bugfix on escape:'mail' modifier\n- drop exception if 'item' variable is equal 'from' variable in {foreach} tag\n\n01/07/2010\n- removed call_user_func_array calls for optimization of compiled code when using registered modifiers and plugins\n\n25/06/2010\n- bugfix escaping \" when block tags are used within doublequoted strings\n\n24/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls in Smarty_Internal_Utility\n- added $smarty->register->templateClass() and $smarty->unregister->templateClass() methods for supporting static classes with namespace\n\n\n22/06/2010\n- allow spaces between typecast and value in template syntax\n- bugfix get correct count of traversables in {foreach} tag\n\n21/06/2010\n- removed use of PHP shortags SMARTY_PHP_PASSTHRU mode\n- improved speed of cache->clear() when a compile_id was specified and use_sub_dirs is true\n\n20/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls\n- closed security hole when php.ini asp_tags = on\n\n18/06/2010\n- added __toString method to the Smarty_Variable class\n\n\n14/06/2010\n- make handling of Smarty comments followed by newline BC to Smarty2\n\n\n##  RC2 -\n\n\n\n13/06/2010\n- bugfix Smarty3 did not handle hexadecimals like 0x0F as numerical value\n- bugifx Smarty3 did not accept numerical constants like .1 or 2. (without a leading or trailing digit)\n\n11/06/2010\n- bugfix the lexer did fail on larger {literal} ... {/literal} sections\n\n03/06/2010\n- bugfix on calling template functions like Smarty tags\n\n01/06/2010\n- bugfix on template functions used with template inheritance\n- removed /* vim: set expandtab: */ comments\n- bugfix of auto literal problem introduce with fix of 31/05/2010\n\n31/05/2010\n- bugfix the parser did not allow some smarty variables with special name like $for, $if, $else and others.\n\n27/05/2010\n- bugfix on object chaining using variable properties\n- make scope of {counter} and {cycle} tags again global as in Smarty2\n\n26/05/2010\n- bugfix removed decrepated register_resource call in smarty_internal_template.php\n\n25/05/2010\n- rewrite of template function handling to improve speed\n- bugfix on file dependency when merge_compiled_includes = true\n\n\n16/05/2010\n- bugfix when passing parameter with numeric name like {foo 1='bar' 2='blar'}\n\n14/05/2010\n- bugfix compile new config files if compile_check and force_compile = false\n- added variable static classes names to template syntax\n\n11/05/2010\n- bugfix  make sure that the cache resource is loaded in all conditions when template methods getCached... are called externally\n- reverted the change 0f 30/04/2010. With the exception of forward references template functions can be again called by a standard tag.\n\n10/05/2010\n- bugfix on {foreach} and {for} optimizations of 27/04/2010\n\n09/05/2010\n- update of template and config file parser because of minor parser generator bugs\n\n07/05/2010\n- bugfix on {insert}\n\n06/05/2010\n- bugfix when merging compiled templates and objects are passed as parameter of the {include} tag\n\n05/05/2010\n- bugfix on {insert} to cache parameter\n- implementation of $smarty->default_modifiers as in Smarty2\n- bugfix on getTemplateVars method\n\n01/05/2010\n- bugfix on handling of variable method names at object chaning\n\n30/04/2010\n- bugfix when comparing timestamps in sysplugins/smarty_internal_config.php\n- work around of a substr_compare bug in older PHP5 versions\n- bugfix on template inheritance for tag names starting with \"block\"\n- bugfix on {function} tag with name attribute in doublequoted strings\n- fix to make calling of template functions unambiguously by madatory usage of the {call} tag\n\n##  RC1 -\n\n27/04/2010\n- change default of $debugging_ctrl to 'NONE'\n- optimization of compiled code of {foreach} and {for} loops\n- change of compiler for config variables\n\n27/04/2010\n- bugfix in $smarty->cache->clear() method. (do not cache template object)\n\n\n17/04/2010\n- security fix in {math} plugin\n\n\n12/04/2010\n- bugfix in smarty_internal_templatecompilerbase (overloaded property)\n- removed parser restrictions in using true,false and null as ID\n\n07/04/2010\n- bugfix typo in smarty_internal_templatecompilerbase\n\n31/03/2010\n- compile locking by touching old compiled files to avoid concurrent compilations\n\n29/03/2010\n- bugfix allow array definitions as modifier parameter\n- bugfix observe compile_check property when loading config files\n- added the template object as third filter parameter\n\n25/03/2010\n- change of utility->compileAllTemplates() log messages\n- bugfix on nocache code in {function} tags\n- new method utility->compileAllConfig() to compile all config files\n\n24/03/2010\n- bugfix on register->modifier() error messages\n\n23/03/2010\n- bugfix on template inheritance when calling multiple child/parent relations\n- bugfix on caching mode SMARTY_CACHING_LIFETIME_SAVED and cache_lifetime = 0\n\n22/03/2010\n- bugfix make directory separator operating system independend in compileAllTemplates()\n\n21/03/2010\n- removed unused code in compileAllTemplates()\n\n19/03/2010\n- bugfix for multiple {/block} tags on same line\n\n17/03/2010\n- bugfix make $smarty->cache->clear() function independent from caching status\n\n16/03/2010\n- bugfix on assign attribute at registered template objects\n- make handling of modifiers on expression BC to Smarty2\n\n15/03/2010\n- bugfix on block plugin calls\n\n11/03/2010\n- changed parsing of <?php and ?> back to Smarty2 behaviour\n\n08/03/2010\n- bugfix on uninitialized properties in smarty_internal_template\n- bugfix on $smarty->disableSecurity()\n\n04/03/2010\n- bugfix allow uppercase chars in registered resource names\n- bugfix on accessing chained objects of static classes\n\n01/03/2010\n- bugfix on nocache code in {block} tags if child template was included by {include}\n\n27/02/2010\n- allow block tags inside double quoted string\n\n26/02/2010\n- cache modified check implemented\n- support of access to a class constant from an object (since PHP 5.3)\n\n24/02/2010\n- bugfix on expressions in doublequoted string enclosed in backticks\n- added security property $static_classes for static class security\n\n18/02/2010\n- bugfix on parsing Smarty tags inside <?xml ... ?>\n- bugfix on truncate modifier\n\n17/02/2010\n- removed restriction that modifiers did require surrounding parenthesis in some cases\n- added {$smarty.block.child} special variable for template inheritance\n\n16/02/2010\n- bugfix on <?xml ... ?> tags for all php_handling modes\n- bugfix on parameter of variablefilter.htmlspecialchars.php plugin\n\n14/02/2010\n- added missing _plugins property in smarty.class.php\n- bugfix $smarty.const... inside doublequoted strings and backticks was compiled into wrong PHP code\n\n12/02/2010\n- bugfix on nested {block} tags\n- changed Smarty special variable $smarty.parent to $smarty.block.parent\n- added support of nested {bock} tags\n\n10/02/2010\n- avoid possible notice on $smarty->cache->clear(...), $smarty->clear_cache(....)\n- allow Smarty tags inside <? ... ?> tags in SMARTY_PHP_QUOTE and SMARTY_PHP_PASSTHRU mode\n- bugfix at new \"for\" syntax like {for $x=1 to 10 step 2}\n\n09/02/2010\n- added $smarty->_tag_stack for tracing block tag hierarchy\n\n08/02/2010\n- bugfix  use template fullpath at §smarty->cache->clear(...), $smarty->clear_cache(....)\n- bugfix of cache filename on extended templates when force_compile=true\n\n07/02/2010\n- bugfix on changes of 05/02/2010\n- preserve line endings type form template source\n- API changes (see README file)\n\n05/02/2010\n- bugfix on modifier and block plugins with same name\n\n02/02/2010\n- retaining newlines at registered functions and function plugins\n\n01/25/2010\n- bugfix cache resource was not loaded when caching was globally off but enabled at a template object\n- added test that $_SERVER['SCRIPT_NAME'] does exist in Smarty.class.php\n\n01/22/2010\n- new method $smarty->createData([$parent]) for creating a data object (required for bugfixes below)\n- bugfix config_load() method now works also on a data object\n- bugfix get_config_vars() method now works also on a data and template objects\n- bugfix clear_config() method now works also on a data and template objects\n\n01/19/2010\n- bugfix on plugins if same plugin was called from a nocache section first and later from a cached section\n\n\n###beta 7###\n\n\n01/17/2010\n- bugfix on $smarty.const... in double quoted strings\n\n01/16/2010\n- internal change of config file lexer/parser on handling of section names\n- bugfix on registered objects (format parameter of register_object was not handled correctly)\n\n01/14/2010\n- bugfix on backslash within single quoted strings\n- bugfix allow absolute filepath for config files\n- bugfix on special Smarty variable $smarty.cookies\n- revert handling of newline on no output tags like {if...}\n- allow special characters in config file section names for Smarty2 BC\n\n01/13/2010\n- bugfix on {if} tags\n\n01/12/2010\n- changed back modifier handling in parser. Some restrictions still apply:\n    if modifiers are used in side {if...} expression or in mathematical expressions\n    parentheses must be used.\n- bugfix the {function..} tag did not accept the name attribute in double quotes\n- closed possible security hole at <?php ... ?> tags\n- bugfix of config file parser on large config files\n\n\n###beta 6####\n\n01/11/2010\n- added \\n to the compiled code of the {if},{else},{elseif},{/if} tags to get output of newlines as expected by the template source\n- added missing support of insert plugins\n- added optional nocache attribute to {block} tags in parent template\n- updated <?php...?> handling supporting now heredocs and newdocs. (thanks to Thue Jnaus Kristensen)\n\n01/09/2010\n- bugfix on nocache {block} tags in parent templates\n\n01/08/2010\n- bugfix on variable filters. filter/nofilter attributes did not work on output statements\n\n01/07/2010\n- bugfix on file dependency at template inheritance\n- bugfix on nocache code at template inheritance\n\n01/06/2010\n- fixed typo in smarty_internal_resource_registered\n- bugfix for custom delimiter at extends resource and {extends} tag\n\n01/05/2010\n- bugfix sha1() calculations at extends resource and some general improvments on sha1() handling\n\n\n01/03/2010\n- internal change on building cache files\n\n01/02/2010\n- update cached_timestamp at the template object after cache file is written to avoid possible side effects\n- use internally always SMARTY_CACHING_LIFETIME_* constants\n\n01/01/2010\n- bugfix for obtaining plugins which must be included (related to change of 12/30/2009)\n- bugfix for {php} tag (trow an exception if allow_php_tag = false)\n\n12/31/2009\n- optimization of generated code for doublequoted strings containing variables\n- rewrite of {function} tag handling\n  - can now be declared in an external subtemplate\n  - can contain nocache sections (nocache_hash handling)\n  - can be called in noccache sections (nocache_hash handling)\n  - new {call..} tag to call template functions with a variable name {call name=$foo}\n- fixed nocache_hash handling in merged compiled templates\n\n12/30/2009\n- bugfix for plugins defined in the script as smarty_function_foo\n\n12/29/2009\n- use sha1() for filepath encoding\n- updates on nocache_hash handling\n- internal change on merging some data\n- fixed cache filename for custom resources\n\n12/28/2009\n- update for security fixes\n- make modifier plugins always trusted\n- fixed bug loading modifiers in child template at template inheritance\n\n12/27/2009\n--- this is a major update with a couple of internal changes ---\n- new config file lexer/parser (thanks to Thue Jnaus Kristensen)\n- template lexer/parser fixes for PHP and {literal} handing (thanks to Thue Jnaus Kristensen)\n- fix on registered plugins with different type but same name\n- rewrite of plugin handling (optimized execution speed)\n- closed a security hole regarding PHP code injection into cache files\n- fixed bug in clear cache handling\n- Renamed a couple of internal classes\n- code cleanup for merging compiled templates\n- couple of runtime optimizations (still not all done)\n- update of getCachedTimestamp()\n- fixed bug on modifier plugins at nocache output\n\n12/19/2009\n- bugfix on comment lines in config files\n\n12/17/2009\n- bugfix of parent/global variable update at included/merged subtemplates\n- encode final template filepath into filename of compiled and cached files\n- fixed {strip} handling in auto literals\n\n12/16/2009\n- update of changelog\n- added {include file='foo.tpl' inline}  inline option to merge compiled code of subtemplate into the calling template\n\n12/14/2009\n- fixed sideefect of last modification (objects in array index did not work anymore)\n\n12/13/2009\n- allow boolean negation (\"!\") as operator on variables outside {if} tag\n\n12/12/2009\n- bugfix on single quotes inside {function} tag\n- fix short append/prepend attributes in {block} tags\n\n12/11/2009\n- bugfix on clear_compiled_tpl (avoid possible warning)\n\n12/10/2009\n- bugfix on {function} tags and template inheritance\n\n12/05/2009\n- fixed problem when a cached file was fetched several times\n- removed unneeded lexer code\n\n12/04/2009\n- added max attribute to for loop\n- added security mode allow_super_globals\n\n12/03/2009\n- template inheritance: child templates can now call functions defined by the {function} tag in the parent template\n- added {for $foo = 1 to 5 step 2}  syntax\n- bugfix for {$foo.$x.$y.$z}\n\n12/01/2009\n- fixed parsing of names of special formated tags like if,elseif,while,for,foreach\n- removed direct access to constants in templates because of some syntax problems\n- removed cache resource plugin for mysql from the distribution\n- replaced most hard errors (exceptions) by softerrors(trigger_error) in plugins\n- use $template_class property for template class name when compiling {include},{eval} and {extends} tags\n\n11/30/2009\n- map 'true' to SMARTY_CACHING_LIFETIME_CURRENT for the $smarty->caching parameter\n- allow {function} tags within {block} tags\n\n11/28/2009\n- ignore compile_id at debug template\n- added direct access to constants in templates\n- some lexer/parser optimizations\n\n11/27/2009\n- added cache resource MYSQL plugin\n\n11/26/2009\n- bugfix on nested doublequoted strings\n- correct line number on unknown tag error message\n- changed {include} compiled code\n- fix on checking dynamic varibales with error_unassigned = true\n\n11/25/2009\n- allow the following writing for boolean: true, TRUE, True, false, FALSE, False\n- {strip} tag functionality rewritten\n\n11/24/2009\n- bugfix for $smarty->config_overwrite = false\n\n11/23/2009\n- suppress warnings on unlink caused by race conditions\n- correct line number on unknown tag error message\n\n------- beta 5\n11/23/2009\n- fixed configfile parser for text starting with a numeric char\n- the default_template_handler_func may now return a filepath to a template source\n\n11/20/2009\n- bugfix for empty config files\n- convert timestamps of registered resources to integer\n\n11/19/2009\n- compiled templates are no longer touched with the filemtime of template source\n\n11/18/2009\n- allow integer as attribute name in plugin calls\n\n------- beta 4\n11/18/2009\n- observe umask settings when setting file permissions\n- avoide unneeded cache file creation for subtemplates which did occur in some situations\n- make $smarty->_current_file available during compilation for Smarty2 BC\n\n11/17/2009\n- sanitize compile_id and cache_id (replace illegal chars with _)\n- use _dir_perms and _file_perms properties at file creation\n- new constant SMARTY_RESOURCE_DATE_FORMAT (default '%b %e, %Y') which is used as default format in modifier date_format\n- added {foreach $array as $key=>$value} syntax\n- renamed extend tag and resource to extends: {extends file='foo.tol'} , $smarty->display('extends:foo.tpl|bar.tpl);\n- bugfix cycle plugin\n\n11/15/2009\n- lexer/parser optimizations on quoted strings\n\n11/14/2009\n- bugfix on merging compiled templates when source files got removed or renamed.\n- bugfix modifiers on registered object tags\n- fixed locaion where outputfilters are running\n- fixed config file definitions at EOF\n- fix on merging compiled templates with nocache sections in nocache includes\n- parser could run into a PHP error on wrong file attribute\n\n11/12/2009\n- fixed variable filenames in {include_php} and {insert}\n- added scope to Smarty variables in the {block} tag compiler\n- fix on nocache code in child {block} tags\n\n11/11/2009\n- fixed {foreachelse}, {forelse}, {sectionelse} compiled code at nocache variables\n- removed checking for reserved variables\n- changed debugging handling\n\n11/10/2009\n- fixed preg_qoute on delimiters\n\n11/09/2009\n- lexer/parser bugfix\n- new SMARTY_SPL_AUTOLOAD constant to control the autoloader option\n- bugfix for {function} block tags in included templates\n\n11/08/2009\n- fixed alphanumeric array index\n- bugfix on complex double quoted strings\n\n11/05/2009\n- config_load method can now be called on data and template objects\n\n11/04/2009\n- added typecasting support for template variables\n- bugfix on complex indexed special Smarty variables\n\n11/03/2009\n- fixed parser error on objects with special smarty vars\n- fixed file dependency for {incude} inside {block} tag\n- fixed not compiling on non existing compiled templates when compile_check = false\n- renamed function names of autoloaded Smarty methods to Smarty_Method_....\n- new security_class property (default is Smarty_Security)\n\n11/02/2009\n- added neq,lte,gte,mod as aliases to if conditions\n- throw exception on illegal Smarty() constructor calls\n\n10/31/2009\n- change of filenames in sysplugins folder for internal spl_autoload function\n- lexer/parser changed for increased compilation speed\n\n10/27/2009\n- fixed missing quotes in include_php.php\n\n10/27/2009\n- fixed typo in method.register_resource\n- pass {} through as literal\n\n10/26/2009\n- merge only compiled subtemplates into the compiled code of the main template\n\n10/24/2009\n- fixed nocache vars at internal block tags\n- fixed merging of recursive includes\n\n10/23/2009\n- fixed nocache var problem\n\n10/22/2009\n- fix trimwhitespace outputfilter parameter\n\n10/21/2009\n- added {$foo++}{$foo--} syntax\n- buxfix changed PHP \"if (..):\" to \"if (..){\" because of possible bad code when concenating PHP tags\n- autoload Smarty internal classes\n- fixed file dependency for config files\n- some code optimizations\n- fixed function definitions on some autoloaded methods\n- fixed nocache variable inside if condition of {if} tag\n\n10/20/2009\n- check at compile time for variable filter to improve rendering speed if no filter is used\n- fixed bug at combination of {elseif} tag and {...} in double quoted strings of static class parameter\n\n10/19/2009\n- fixed compiled template merging on variable double quoted strings as name\n- fixed bug in caching mode 2 and cache_lifetime -1\n- fixed modifier support on block tags\n\n10/17/2009\n- remove ?>\\n<?php and ?><?php sequences from compiled template\n\n10/15/2009\n- buxfix on assigning array elements inside templates\n- parser bugfix on array access\n\n10/15/2009\n- allow bit operator '&' inside {if} tag\n- implementation of ternary operator\n\n10/13/2009\n- do not recompile evaluated templates if reused just with other data\n- recompile config files when config properties did change\n- some lexer/parser otimizations\n\n10/11/2009\n- allow {block} tags inside included templates\n- bugfix for resource plugins in Smarty2 format\n- some optimizations of internal.template.php\n\n10/11/2009\n- fixed bug when template with same name is used with different data objects\n- fixed bug with double quoted name attribute at {insert} tag\n- reenabled assign_by_ref and append_by_ref methods\n\n10/07/2009\n- removed block nesting checks for {capture}\n\n10/05/2009\n- added support of \"isinstance\" to {if} tag\n\n10/03/2009\n- internal changes to improve performance\n- fix registering of filters for classes\n\n10/01/2009\n- removed default timezone setting\n- reactivated PHP resource for simple PHP templates. Must set allow_php_templates = true to enable\n- {PHP} tag can be enabled by allow_php_tag = true\n\n09/30/2009\n- fixed handling template_exits method for all resource types\n- bugfix for other cache resources than file\n- the methods assign_by_ref is now wrapped to assign, append_by_ref to append\n- allow arrays of variables pass in display, fetch and createTemplate calls\n  $data = array('foo'=>'bar','foo2'=>'blar');\n  $smarty->display('my.tpl',$data);\n\n09/29/2009\n- changed {php} tag handling\n- removed support of Smarty::instance()\n- removed support of PHP resource type\n- improved execution speed of {foreach} tags\n- fixed bug in {section} tag\n\n09/23/2009\n- improvements and bugfix on {include} tag handling\nNOTICE: existing compiled template and cache files must be deleted\n\n09/19/2009\n- replace internal \"eval()\" calls by \"include\" during rendering process\n- speed improvment for templates which have included subtemplates\n    the compiled code of included templates is merged into the compiled code of the parent template\n- added logical operator \"xor\" for {if} tag\n- changed parameter ordering for Smarty2 BC\n    fetch($template, $cache_id = null, $compile_id = null, $parent = null)\n    display($template, $cache_id = null, $compile_id = null, $parent = null)\n    createTemplate($template, $cache_id = null, $compile_id = null, $parent = null)\n- property resource_char_set is now replaced by constant SMARTY_RESOURCE_CHAR_SET\n- fixed handling of classes in registered blocks\n- speed improvement of lexer on text sections\n\n09/01/2009\n- dropped nl2br as plugin\n- added '<>' as comparission operator in {if} tags\n- cached caching_lifetime property to cache_liftime for backward compatibility with Smarty2.\n  {include} optional attribute is also now cache_lifetime\n- fixed trigger_error method (moved into Smarty class)\n- version is now  Beta!!!\n\n\n08/30/2009\n- some speed optimizations on loading internal plugins\n\n\n08/29/2009\n- implemented caching of registered Resources\n- new property 'auto_literal'. if true(default)  '{ ' and ' }' interpreted as literal, not as Smarty delimiter\n\n\n08/28/2009\n- Fix on line breaks inside {if} tags\n\n08/26/2009\n- implemented registered resources as in Smarty2. NOTE: caching does not work yet\n- new property 'force_cache'. if true it forces the creation of a new cache file\n- fixed modifiers on arrays\n- some speed optimization on loading internal classes\n\n\n08/24/2009\n- fixed typo in lexer definition for '!==' operator\n- bugfix - the ouput of plugins was not cached\n- added global variable SCRIPT_NAME\n\n08/21/2009\n- fixed problems whitespace in conjuction with custom delimiters\n- Smarty tags can now be used as value anywhere\n\n08/18/2009\n- definition of template class name moded in internal.templatebase.php\n- whitespace parser changes\n\n08/12/2009\n- fixed parser problems\n\n08/11/2009\n- fixed parser problems with custom delimiter\n\n08/10/2009\n- update of mb support in plugins\n\n\n08/09/2009\n- fixed problems with doublequoted strings at name attribute of {block} tag\n- bugfix at scope attribute of {append} tag\n\n08/08/2009\n- removed all internal calls of Smarty::instance()\n- fixed code in double quoted strings\n\n08/05/2009\n- bugfix mb_string support\n- bugfix of \\n.\\t etc in double quoted strings\n\n07/29/2009\n- added syntax for variable config vars  like  #$foo#\n\n07/28/2009\n- fixed parsing of $smarty.session vars containing objects\n\n07/22/2009\n- fix of \"$\" handling in double quoted strings\n\n07/21/2009\n- fix that {$smarty.current_dir} return correct value within {block} tags.\n\n07/20/2009\n- drop error message on unmatched {block} {/block} pairs\n\n07/01/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php (missing ,)\n\n06/24/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php\n\n06/22/2009\n- fix on \\n and spaces inside smarty tags\n- removed request_use_auto_globals propert as it is no longer needed because Smarty 3 will always run under PHP 5\n\n\n06/18/2009\n- fixed compilation of block plugins when caching enabled\n- added $smarty.current_dir  which returns the current working directory\n\n06/14/2009\n- fixed array access on super globals\n- allow smarty tags within xml tags\n\n06/13/2009\n- bugfix at extend resource: create unique files for compiled template and cache for each combination of template files\n- update extend resource to handle appen and prepend block attributes\n- instantiate classes of plugins instead of calling them static\n\n06/03/2009\n- fixed repeat at block plugins\n\n05/25/2009\n- fixed problem with caching of compiler plugins\n\n05/14/2009\n- fixed directory separator handling\n\n05/09/2009\n- syntax change for stream variables\n- fixed bug when using absolute template filepath and caching\n\n05/08/2009\n- fixed bug of {nocache}  tag in included templates\n\n05/06/2009\n- allow that plugins_dir folder names can end without directory separator\n\n05/05/2009\n- fixed E_STRICT incompabilities\n- {function} tag bug fix\n- security policy definitions have been moved from plugins folder to file Security.class.php in libs folder\n- added allow_super_global configuration to security\n\n04/30/2009\n- functions defined with the {function} tag now always have global scope\n\n04/29/2009\n- fixed problem with directory setter methods\n- allow that cache_dir can end without directory separator\n\n04/28/2009\n- the {function} tag can no longer overwrite standard smarty tags\n- inherit functions defined by the {fuction} tag into subtemplates\n- added {while <statement>} sytax to while tag\n\n04/26/2009\n- added trusted stream checking to security\n- internal changes at file dependency check for caching\n\n04/24/2009\n- changed name of {template} tag to {function}\n- added new {template} tag\n\n04/23/2009\n- fixed access of special smarty variables from included template\n\n04/22/2009\n- unified template stream syntax with standard Smarty resource syntax  $smarty->display('mystream:mytemplate')\n\n04/21/2009\n- change of new style syntax for forach. Now:  {foreach $array as $var}  like in PHP\n\n04/20/2009\n- fixed \"$foo.bar  ...\" variable replacement in double quoted strings\n- fixed error in {include} tag with variable file attribute\n\n04/18/2009\n- added stream resources  ($smarty->display('mystream://mytemplate'))\n- added stream variables  {$mystream:myvar}\n\n04/14/2009\n- fixed compile_id handling on {include} tags\n- fixed append/prepend attributes in {block} tag\n- added  {if  'expression' is in 'array'}  syntax\n- use crc32 as hash for compiled config files.\n\n04/13/2009\n- fixed scope problem with parent variables when appending variables within templates.\n- fixed code for {block} without childs (possible sources for notice errors removed)\n\n04/12/2009\n- added append and prepend attribute to {block} tag\n\n04/11/2009\n- fixed variables in 'file' attribute of {extend} tag\n- fixed problems in modifiers (if mb string functions not present)\n\n04/10/2009\n- check if mb string functions available otherwise fallback to normal string functions\n- added global variable scope SMARTY_GLOBAL_SCOPE\n- enable 'variable' filter by default\n- fixed {$smarty.block.parent.foo}\n- implementation of a 'variable' filter as replacement for default modifier\n\n04/09/2009\n- fixed execution of filters defined by classes\n- compile the always the content of {block} tags to make shure that the filters are running over it\n- syntax corrections on variable object property\n- syntax corrections on array access in dot syntax\n\n04/08/2009\n- allow variable object property\n\n04/07/2009\n- changed variable scopes to SMARTY_LOCAL_SCOPE, SMARTY_PARENT_SCOPE, SMARTY_ROOT_SCOPE to avoid possible conflicts with user constants\n- Smarty variable global attribute replaced with scope attribute\n\n04/06/2009\n- variable scopes LOCAL_SCOPE, PARENT_SCOPE, ROOT_SCOPE\n- more getter/setter methods\n\n04/05/2009\n- replaced new array looping syntax {for $foo in $array} with {foreach $foo in $array} to avoid confusion\n- added append array for short form of assign  {$foo[]='bar'} and allow assignments to nested arrays {$foo['bla']['blue']='bar'}\n\n04/04/2009\n- make output of template default handlers cachable and save compiled source\n- some fixes on yesterdays update\n\n04/03/2006\n- added registerDefaultTemplateHandler method and functionallity\n- added registerDefaultPluginHandler method and functionallity\n- added {append} tag to extend Smarty array variabled\n\n04/02/2009\n- added setter/getter methods\n- added $foo@first and $foo@last properties at {for} tag\n- added $set_timezone (true/false) property to setup optionally the default time zone\n\n03/31/2009\n- bugfix smarty.class and internal.security_handler\n- added compile_check configuration\n- added setter/getter methods\n\n03/30/2009\n- added all major setter/getter methods\n\n03/28/2009\n- {block} tags can be nested now\n- md5 hash function replace with crc32 for speed optimization\n- file order for exted resource inverted\n- clear_compiled_tpl and clear_cache_all will not touch .svn folder any longer\n\n03/27/2009\n- added extend resource\n\n03/26/2009\n- fixed parser not to create error on `word` in double quoted strings\n- allow PHP  array(...)\n- implemented  $smarty.block.name.parent to access parent block content\n- fixed smarty.class\n\n\n03/23/2009\n- fixed {foreachelse} and {forelse} tags\n\n03/22/2009\n- fixed possible sources for notice errors\n- rearrange SVN into distribution and development folders\n\n03/21/2009\n- fixed exceptions in function plugins\n- fixed notice error in Smarty.class.php\n- allow chained objects to span multiple lines\n- fixed error in modifiers\n\n03/20/2009\n- moved /plugins folder into /libs folder\n- added noprint modifier\n- autoappend a directory separator if the xxxxx_dir definition have no trailing one\n\n03/19/2009\n- allow array definition as modifier parameter\n- changed modifier to use multi byte string funktions.\n\n03/17/2009\n- bugfix\n\n03/15/2009\n- added {include_php} tag for BC\n- removed @ error suppression\n- bugfix fetch did always repeat output of first call when calling same template several times\n- PHPunit tests extended\n\n03/13/2009\n- changed block syntax to be Smarty like  {block:titel} -> {block name=titel}\n- compiling of {block} and {extend} tags rewriten for better performance\n- added special Smarty variable block  ($smarty.block.foo} returns the parent definition of block foo\n- optimization of {block} tag compiled code.\n- fixed problem with escaped double quotes in double quoted strings\n\n03/12/2009\n- added support of template inheritance by {extend } and {block } tags.\n- bugfix comments within literals\n- added scope attribuie to {include} tag\n\n03/10/2009\n- couple of bugfixes and improvements\n- PHPunit tests extended\n\n03/09/2009\n- added support for global template vars.  {assign_global...}  $smarty->assign_global(...)\n- added direct_access_security\n- PHPunit tests extended\n- added missing {if} tag conditions like \"is div by\" etc.\n\n03/08/2009\n- splitted up the Compiler class to make it easier to use a coustom compiler\n- made default plugins_dir relative to Smarty root and not current working directory\n- some changes to make the lexer parser better configurable\n- implemented {section} tag for Smarty2 BC\n\n03/07/2009\n- fixed problem with comment tags\n- fixed problem with #xxxx in double quoted string\n- new {while} tag implemented\n- made lexer and paser class configurable as $smarty property\n- Smarty method get_template_vars implemented\n- Smarty method get_registered_object implemented\n- Smarty method trigger_error implemented\n- PHPunit tests extended\n\n03/06/2009\n- final changes on config variable handling\n- parser change - unquoted strings will by be converted into single quoted strings\n- PHPunit tests extended\n- some code cleanup\n- fixed problem on catenate strings with expression\n- update of count_words modifier\n- bugfix on comment tags\n\n\n03/05/2009\n- bugfix on <?xml...> tag with caching enabled\n- changes on exception handling (by Monte)\n\n03/04/2009\n- added support for config variables\n- bugfix on <?xml...> tag\n\n03/02/2009\n- fixed unqouted strings within modifier parameter\n- bugfix parsing of mofifier parameter\n\n03/01/2009\n- modifier chaining works now as in Smarty2\n\n02/28/2009\n- changed handling of unqouted strings\n\n02/26/2009\n- bugfix\n- changed $smarty.capture.foo to be global for Smarty2 BC.\n\n02/24/2009\n- bugfix {php} {/php} tags for backward compatibility\n- bugfix for expressions on arrays\n- fixed usage of \"null\" value\n- added $smarty.foreach.foo.first and $smarty.foreach.foo.last\n\n02/06/2009\n- bugfix for request variables without index  for example $smarty.get\n- experimental solution for variable functions in static class\n\n02/05/2009\n- update of popup plugin\n- added config variables to template parser (load config functions still missing)\n- parser bugfix for empty quoted strings\n\n02/03/2009\n- allow array of objects as static class variabales.\n- use htmlentities at source output at template errors.\n\n02/02/2009\n- changed search order on modifiers to look at plugins folder first\n- parser bug fix for modifier on array elements  $foo.bar|modifier\n- parser bug fix on single quoted srings\n- internal: splitted up compiler plugin files\n\n02/01/2009\n- allow method chaining on static classes\n- special Smarty variables  $smarty.... implemented\n- added {PHP} {/PHP} tags for backward compatibility\n\n01/31/2009\n- added {math} plugin for Smarty2 BC\n- added template_exists method\n- changed Smarty3 method enable_security() to enableSecurity() to follow camelCase standards\n\n01/30/2009\n- bugfix in single quoted strings\n- changed syntax for variable property access from $foo:property to $foo@property because of ambiguous syntax at modifiers\n\n01/29/2009\n- syntax for array definition changed from (1,2,3) to [1,2,3] to remove ambiguous syntax\n- allow  {for $foo in [1,2,3]} syntax\n- bugfix in double quoted strings\n- allow <?xml...?> tags in template even if short_tags are enabled\n\n01/28/2009\n- fixed '!==' if condition.\n\n01/28/2009\n- added support of {strip} {/strip} tag.\n\n01/27/2009\n- bug fix on backticks in double quoted strings at objects\n\n01/25/2009\n- Smarty2 modfiers added to SVN\n\n01/25/2009\n- bugfix allow arrays at object properties in Smarty syntax\n- the template object is now passed as additional parameter at plugin calls\n- clear_compiled_tpl method completed\n\n01/20/2009\n- access to class constants implemented  ( class::CONSTANT )\n- access to static class variables implemented ( class::$variable )\n- call of static class methods implemented ( class::method() )\n\n01/16/2009\n- reallow leading _ in variable names  {$_var}\n- allow array of objects  {$array.index->method()} syntax\n- finished work on clear_cache and clear_cache_all methods\n\n01/11/2009\n- added support of {literal} tag\n- added support of {ldelim} and {rdelim} tags\n- make code compatible to run with E_STRICT error setting\n\n01/08/2009\n- moved clear_assign and clear_all_assign to internal.templatebase.php\n- added assign_by_ref, append and append_by_ref methods\n\n01/02/2009\n- added load_filter method\n- fished work on filter handling\n- optimization of plugin loading\n\n12/30/2008\n- added compiler support of registered object\n- added backtick support in doubled quoted strings for backward compatibility\n- some minor bug fixes and improvments\n\n12/23/2008\n- fixed problem of not working \"not\" operator in if-expressions\n- added handling of compiler function plugins\n- finished work on (un)register_compiler_function method\n- finished work on (un)register_modifier method\n- plugin handling from plugins folder changed for modifier plugins\n  deleted - internal.modifier.php\n- added modifier chaining to parser\n\n12/17/2008\n- finished (un)register_function method\n- finished (un)register_block method\n- added security checking for PHP functions in PHP templates\n- plugin handling from plugins folder rewritten\n  new - internal.plugin_handler.php\n  deleted - internal.block.php\n  deleted - internal.function.php\n- removed plugin checking from security handler\n\n12/16/2008\n\n- new start of this change_log file\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.5,
          "content": "# Contributing to Smarty\n\nFirst off, thanks for taking the time to contribute! ❤️\n\n> And if you like the project, but just don't have time to contribute, that's fine. There are other easy ways to support the project and show your appreciation, which we would also be very happy about:\n> - Star the project\n> - Tell a friend about it\n> - Refer this project in your project's readme\n> - Mention the project at local meetups and tell your friends/colleagues\n\n## I Have a Question\n\n> If you want to ask a question, we assume that you have read the available [Documentation](https://smarty-php.github.io/smarty).\n\nBefore you ask a question, it is best to search for existing [Issues](https://github.com/smarty-php/smarty/issues) that might help you. \nIn case you have found a suitable issue and still need clarification, you can write your question in this issue. \nIt is also advisable to search the internet for answers first.\n\nIf you then still feel the need to ask a question and need clarification, we recommend the following:\n\n- [Open an Issue](https://github.com/smarty-php/smarty/issues/new).\n- Provide as much context as you can about what you're running into.\n- Provide Smarty and PHP versions\n\nWe will then take care of the issue as soon as possible.\n\n## I Want To Contribute\n\n> ### Legal Notice\n> When contributing to this project, you must agree that you have authored 100% of the content, \n> that you have the necessary rights to the content and that the content you contribute may be provided under the project license.\n\n### Reporting Bugs\n\n#### Before Submitting a Bug Report\n\nA good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to \ninvestigate carefully, collect information and describe the issue in detail in your report. Please complete the \nfollowing steps in advance to help us fix any potential bug as fast as possible.\n\n- Make sure that you are using the latest version.\n- Determine if your bug is really a bug and not an error on your side. (Make sure that you have read the [documentation](https://smarty-php.github.io/smarty). If you are looking for support, you might want to check [this section](#i-have-a-question)).\n- To see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the [bug tracker](https://github.com/smarty-php/smarty/issues?q=label%3Abug).\n- Also make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue.\n- Collect information about the bug:\n  - For an Exception: please provide the Stack trace\n  - OS (Windows, Linux, macOS)\n  - PHP version\n  - Smarty version\n  - A minimal snippet of (your) code that triggers the bug\n  - Expected output versus actual output\n  - Can you reliably reproduce the issue? And can you also reproduce it with older versions?\n\n#### How Do I Submit a Good Bug Report?\n\n> You must never report security related issues, vulnerabilities or bugs including sensitive information to the issue tracker, or elsewhere in public. \n> For sensitive bugs, please see [SECURITY.md](SECURITY.md).\n\nWe use GitHub issues to track bugs and errors. If you run into an issue with the project:\n\n- Open an [Issue](https://github.com/smarty-php/smarty/issues/new). (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.)\n- Explain the behavior you would expect and the actual behavior.\n- Please provide as much context as possible and describe the *reproduction steps* that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case.\n- Provide the information you collected in the previous section.\n\nOnce it's filed:\n\n- The project team will label the issue accordingly.\n- A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as `needs-repro`. Bugs with the `needs-repro` tag will not be addressed until they are reproduced.\n- If the team is able to reproduce the issue, it will be marked `needs-fix`, as well as possibly other tags (such as `critical`), and the issue will be left to be implemented by someone.\n\n\n\n### Suggesting Enhancements\n\nThis section guides you through submitting an enhancement suggestion for CONTRIBUTING.md, **including completely new features and minor improvements to existing functionality**. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.\n\n\n#### Before Submitting an Enhancement\n\n- Make sure that you are using the latest version.\n- Read the [documentation](https://smarty-php.github.io/smarty) carefully and find out if the functionality is already covered, maybe by an individual configuration.\n- Perform a [search](https://github.com/smarty-php/smarty/issues) to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.\n- Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.\n\n\n#### How Do I Submit a Good Enhancement Suggestion?\n\nEnhancement suggestions are tracked as [GitHub issues](https://github.com/smarty-php/smarty/issues).\n\n- Use a **clear and descriptive title** for the issue to identify the suggestion.\n- Provide a **step-by-step description of the suggested enhancement** in as many details as possible.\n- **Describe the current behavior** and **explain which behavior you expected to see instead** and why. At this point you can also tell which alternatives do not work for you.\n- You may want to **include screenshots and animated GIFs** which help you demonstrate the steps or point out the part which the suggestion is related to. You can use [this tool](https://www.cockos.com/licecap/) to record GIFs on macOS and Windows, and [this tool](https://github.com/colinkeenan/silentcast) or [this tool](https://github.com/GNOME/byzanz) on Linux.\n- **Explain why this enhancement would be useful** to most CONTRIBUTING.md users. You may also want to point out the other projects that solved it better and which could serve as inspiration.\n\n\n### Improving The Documentation\n\nThe [docs](docs/index.md) are written in markdown, configured in [mkdocs.yml](mkdocs.yml) and published \nto [GitHub pages](https://smarty-php.github.io/smarty) using [mkdocs](https://www.mkdocs.org/) and [mike](https://github.com/jimporter/mike).\n\nTo preview the docs while you are writing, run:\n```bash\nmkdocs serve\n```\nThis should launch a local web server and give you a link to open in your browser.\n\nWhen you are finished, commit your changes and provide a [Pull Request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request).\n\n#### Publishing the docs\nIf you are a maintainer, you can publish the document using [mike](https://github.com/jimporter/mike). Make sure you provide the correct version.\n\n```bash\nmike deploy 5.x\n```\n\n## Attribution\nThis guide is based on the **contributing.md**. [Make your own](https://contributing.md/)!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 8.0087890625,
          "content": "Smarty: the PHP compiling template engine\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 3.0 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n See the GNU Lesser General Public License below for more details.\n\n\n                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.884765625,
          "content": "all: lexers parsers\n\nlexers: src/Lexer/ConfigfileLexer.php src/Lexer/TemplateLexer.php\nparsers: src/Parser/ConfigfileParser.php src/Parser/TemplateParser.php\n\nsrc/Lexer/ConfigfileLexer.php: src/Lexer/ConfigfileLexer.plex\n\tphp ./utilities/make-lexer.php src/Lexer/ConfigfileLexer.plex src/Lexer/ConfigfileLexer.php\n\nsrc/Lexer/TemplateLexer.php: src/Lexer/TemplateLexer.plex\n\tphp ./utilities/make-lexer.php src/Lexer/TemplateLexer.plex src/Lexer/TemplateLexer.php\n\nsrc/Parser/ConfigfileParser.php: src/Parser/ConfigfileParser.y\n\tphp ./utilities/make-parser.php src/Parser/ConfigfileParser.y src/Parser/ConfigfileParser.php\n\nsrc/Parser/TemplateParser.php: src/Parser/TemplateParser.y\n\tphp ./utilities/make-parser.php src/Parser/TemplateParser.y src/Parser/TemplateParser.php\n\nclean:\n\trm -f src/Lexer/ConfigfileLexer.php src/Lexer/TemplateLexer.php src/Parser/ConfigfileParser.php src/Parser/TemplateParser.php"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.6474609375,
          "content": "# Smarty template engine\nSmarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic. \n\n![CI](https://github.com/smarty-php/smarty/workflows/CI/badge.svg)\n\n## Documentation\nRead the [documentation](https://smarty-php.github.io/smarty/) to find out how to use it. \n\n## Requirements\nSmarty v5 can be run with PHP 7.2 to PHP 8.4.\n\n## Installation\nSmarty versions 3.1.11 or later can be installed with [Composer](https://getcomposer.org/).\n\nTo get the latest stable version of Smarty use:\n```bash\ncomposer require smarty/smarty\n````\n\nMore in the [Getting Started](./docs/getting-started.md) section of the docs.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.71875,
          "content": "# Security Policy\n\n## Supported Versions\n\nSmarty currently supports the latest minor version of Smarty 4 and Smarty 5.\n\n| Version | Supported          |\n|---------|--------------------|\n| 5.0.x   | :white_check_mark: |\n| 4.3.x   | :white_check_mark: |\n| < 4.3   | :x:                |\n\n## Reporting a Vulnerability\n\nIf you have discovered a security issue with Smarty, please contact us at mail [at] simonwisselink.nl. Do not \ndisclose your findings publicly and **PLEASE** do not file an Issue (because that would disclose your findings \npublicly.)\n \nWe will try to confirm the vulnerability and develop a fix if appropriate. When we release the fix, we will publish \na security release. Please let us know if you want to be credited.\n"
        },
        {
          "name": "TODO.txt",
          "type": "blob",
          "size": 1.2041015625,
          "content": "# @TODO\n\n## CI-building optimization\n- compiled & cached templates should not contain references to local filesystem paths. Add an optional rootpath param\n  to `(add|set)TemplateDir` or as a separate method. Make it default to `getcwd()`. If a relative path is passed to\n  `(add|set)TemplateDir`, prefix it with the rootpath at runtime, but do not store the path.\n\n## Review direct variable property access\n- review ->value{$index} in ForTag\n\n## include inline\n- Re-introduce merge_compiled_includes and the {include inline} attribute?\n\n## Output buffering\n- Fix ob_ output buffering commands being scattered around the codebase\n\n## Review public static vars\n- such as _CHARSET and _IS_WINDOWS\n\n## Block / inheritance\n- Consider phasing out $smarty.block.child as this reverses the inheritance hierarchy and might cause infinite loops\n  when combined with $smarty.block.parent\n\n## Plugin system\n- fix template security checks in one place in compiler\n\n## Beatify output\n- compiled templates could be proper classes, possibly using [nette/php-generator](https://packagist.org/packages/nette/php-generator)\n\n## Unrelated / other\n- review (and avoid) use of 'clone' keyword\n- what is 'user literal support', why are unit tests skipped?\n"
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.259765625,
          "content": "{\n    \"name\": \"smarty/smarty\",\n    \"type\": \"library\",\n    \"description\": \"Smarty - the compiling PHP template engine\",\n    \"keywords\": [\n        \"templating\"\n    ],\n    \"homepage\": \"https://smarty-php.github.io/smarty/\",\n    \"license\": \"LGPL-3.0\",\n    \"authors\": [\n        {\n            \"name\": \"Monte Ohrt\",\n            \"email\": \"monte@ohrt.com\"\n        },\n        {\n            \"name\": \"Uwe Tews\",\n            \"email\": \"uwe.tews@googlemail.com\"\n        },\n        {\n            \"name\": \"Rodney Rehm\",\n            \"email\": \"rodney.rehm@medialize.de\"\n        },\n        {\n            \"name\": \"Simon Wisselink\",\n            \"homepage\": \"https://www.iwink.nl/\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/smarty-php/smarty/issues\",\n        \"forum\": \"https://github.com/smarty-php/smarty/discussions\"\n    },\n    \"require\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"symfony/polyfill-mbstring\": \"^1.27\"\n    },\n    \"autoload\": {\n        \"psr-4\" : {\n            \"Smarty\\\\\" : \"src/\"\n        },\n        \"files\": [\n            \"src/functions.php\"\n        ]\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"5.0.x-dev\"\n        }\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^8.5 || ^7.5\",\n        \"smarty/smarty-lexer\": \"^4.0.2\"\n    }\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.7353515625,
          "content": "version: \"2\"\nservices:\n  base:\n    build:\n      context: .\n      dockerfile: ./utilities/testrunners/php72/Dockerfile\n    volumes:\n      - smarty-code:/app\n    working_dir: /app\n  php72:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php72/Dockerfile\n  php73:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php73/Dockerfile\n  php74:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php74/Dockerfile\n  php80:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php80/Dockerfile\n  php81:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php81/Dockerfile\n  php82:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php82/Dockerfile\n  php83:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php83/Dockerfile\n  php84:\n    extends:\n      service: base\n    build:\n      dockerfile: ./utilities/testrunners/php84/Dockerfile\nvolumes:\n  smarty-code:\n\nx-mutagen:\n  sync:\n    defaults:\n      symlink:\n        mode: \"posix-raw\"\n      ignore:\n        vcs: true\n        paths:\n          - \".docker\"\n          - \".env.docker\"\n          - \".bundles\"\n          - \"docker-compose.yml\"\n          - \".idea\"\n          - \".DS_Store\"\n      mode: \"two-way-resolved\"\n      configurationBeta:\n        permissions:\n          defaultOwner: \"id:${APP_USER_ID}\"\n          defaultGroup: \"id:${APP_GROUP_ID}\"\n          defaultFileMode: 0666\n          defaultDirectoryMode: 0755\n      permissions:\n        defaultOwner: \"id:${APP_USER_ID}\"\n        defaultGroup: \"id:${APP_GROUP_ID}\"\n    smarty-code:\n      alpha: \".\"\n      beta: \"volume://smarty-code\"\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "make-release.sh",
          "type": "blob",
          "size": 0.6064453125,
          "content": "#!/bin/bash\n\nif [[ \"$1\" =~ ^5\\.[0-9\\.]+(-rc[0-9]+)?$ ]]; then\n   printf 'Creating release %s\\n' \"$1\"\nelse\n   echo \"Invalid version number: $1. This script can only make v5.x.x releases.\"\n   exit 1;\nfi\n\ngit checkout -b \"release/$1\"\n\nphp utilities/update-changelog.php $1\nphp utilities/update-smarty-version-number.php $1\n\ngit add changelog CHANGELOG.md src/Smarty.php\ngit commit -m \"version bump\"\n\ngit checkout master\ngit pull\ngit merge --no-ff \"release/$1\"\ngit branch -d \"release/$1\"\ngit tag -a \"v$1\" -m \"Release $1\"\n\nprintf 'Done creating release %s\\n' \"$1\"\nprintf 'Run `git push --follow-tags origin` to publish it.\\n'\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 9.7607421875,
          "content": "site_name: Smarty Documentation\ntheme:\n  name: material\n  palette:\n    primary: amber\n  features:\n    - content.code.copy\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.instant\n    - navigation.tracking\n  icon:\n    logo: material/lightbulb-on\n  favicon: img/favicon.ico\n\nextra:\n  version:\n    provider: mike\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n\nnav:\n  - Home: 'index.md'\n  - 'Getting started':\n    - Introduction: 'getting-started.md'\n    - 'Upgrading from an older version': 'upgrading.md'\n  - 'Language reference':\n    - 'Basic Syntax':\n        - Introduction: 'designers/language-basic-syntax/index.md'\n        - Comments: 'designers/language-basic-syntax/language-syntax-comments.md'\n        - Variables: 'designers/language-basic-syntax/language-syntax-variables.md'\n        - Operators: 'designers/language-basic-syntax/language-syntax-operators.md'\n        - Tags: 'designers/language-basic-syntax/language-syntax-tags.md'\n        - Attributes: 'designers/language-basic-syntax/language-syntax-attributes.md'\n        - Quotes: 'designers/language-basic-syntax/language-syntax-quotes.md'\n        - 'Escaping Smarty parsing': 'designers/language-basic-syntax/language-escaping.md'\n    - 'Variables':\n        - 'Introduction': 'designers/language-variables/index.md'\n        - 'Assigned from PHP': 'designers/language-variables/language-assigned-variables.md'\n        - 'Variable scopes': 'designers/language-variables/language-variable-scopes.md'\n        - 'From config files': 'designers/language-variables/language-config-variables.md'\n        - '{$smarty}': 'designers/language-variables/language-variables-smarty.md'\n    - 'Modifiers':\n        - 'Introduction': 'designers/language-modifiers/index.md'\n        - 'capitalize': 'designers/language-modifiers/language-modifier-capitalize.md'\n        - 'cat': 'designers/language-modifiers/language-modifier-cat.md'\n        - 'count': 'designers/language-modifiers/language-modifier-count.md'\n        - 'count_characters': 'designers/language-modifiers/language-modifier-count-characters.md'\n        - 'count_paragraphs': 'designers/language-modifiers/language-modifier-count-paragraphs.md'\n        - 'count_sentences': 'designers/language-modifiers/language-modifier-count-sentences.md'\n        - 'count_words': 'designers/language-modifiers/language-modifier-count-words.md'\n        - 'date_format': 'designers/language-modifiers/language-modifier-date-format.md'\n        - 'debug_print_var': 'designers/language-modifiers/language-modifier-debug-print-var.md'\n        - 'default': 'designers/language-modifiers/language-modifier-default.md'\n        - 'escape': 'designers/language-modifiers/language-modifier-escape.md'\n        - 'from_charset': 'designers/language-modifiers/language-modifier-from-charset.md'\n        - 'indent': 'designers/language-modifiers/language-modifier-indent.md'\n        - 'is_array': 'designers/language-modifiers/language-modifier-is_array.md'\n        - 'isset': 'designers/language-modifiers/language-modifier-isset.md'\n        - 'join': 'designers/language-modifiers/language-modifier-join.md'\n        - 'json_encode': 'designers/language-modifiers/language-modifier-json-encode.md'\n        - 'lower': 'designers/language-modifiers/language-modifier-lower.md'\n        - 'noprint': 'designers/language-modifiers/language-modifier-noprint.md'\n        - 'number_format': 'designers/language-modifiers/language-modifier-number-format.md'\n        - 'nl2br': 'designers/language-modifiers/language-modifier-nl2br.md'\n        - 'raw': 'designers/language-modifiers/language-modifier-raw.md'\n        - 'regex_replace': 'designers/language-modifiers/language-modifier-regex-replace.md'\n        - 'replace': 'designers/language-modifiers/language-modifier-replace.md'\n        - 'round': 'designers/language-modifiers/language-modifier-round.md'\n        - 'spacify': 'designers/language-modifiers/language-modifier-spacify.md'\n        - 'split': 'designers/language-modifiers/language-modifier-split.md'\n        - 'str_repeat': 'designers/language-modifiers/language-modifier-str-repeat.md'\n        - 'string_format': 'designers/language-modifiers/language-modifier-string-format.md'\n        - 'strip': 'designers/language-modifiers/language-modifier-strip.md'\n        - 'strip_tags': 'designers/language-modifiers/language-modifier-strip-tags.md'\n        - 'strlen': 'designers/language-modifiers/language-modifier-strlen.md'\n        - 'substr': 'designers/language-modifiers/language-modifier-substr.md'\n        - 'to_charset': 'designers/language-modifiers/language-modifier-to-charset.md'\n        - 'truncate': 'designers/language-modifiers/language-modifier-truncate.md'\n        - 'unescape': 'designers/language-modifiers/language-modifier-unescape.md'\n        - 'upper': 'designers/language-modifiers/language-modifier-upper.md'\n        - 'wordwrap': 'designers/language-modifiers/language-modifier-wordwrap.md'\n    - 'Builtin Tags':\n        - 'Introduction': 'designers/language-builtin-functions/index.md'\n        - '{append}': 'designers/language-builtin-functions/language-function-append.md'\n        - '{assign}': 'designers/language-builtin-functions/language-function-assign.md'\n        - '{block}': 'designers/language-builtin-functions/language-function-block.md'\n        - '{call}': 'designers/language-builtin-functions/language-function-call.md'\n        - '{capture}': 'designers/language-builtin-functions/language-function-capture.md'\n        - '{config_load}': 'designers/language-builtin-functions/language-function-config-load.md'\n        - '{debug}': 'designers/language-builtin-functions/language-function-debug.md'\n        - '{extends}': 'designers/language-builtin-functions/language-function-extends.md'\n        - '{for}': 'designers/language-builtin-functions/language-function-for.md'\n        - '{foreach}': 'designers/language-builtin-functions/language-function-foreach.md'\n        - '{function}': 'designers/language-builtin-functions/language-function-function.md'\n        - '{if},{elseif},{else}': 'designers/language-builtin-functions/language-function-if.md'\n        - '{include}': 'designers/language-builtin-functions/language-function-include.md'\n        - '{insert}': 'designers/language-builtin-functions/language-function-insert.md'\n        - '{ldelim},{rdelim}': 'designers/language-builtin-functions/language-function-ldelim.md'\n        - '{literal}': 'designers/language-builtin-functions/language-function-literal.md'\n        - '{nocache}': 'designers/language-builtin-functions/language-function-nocache.md'\n        - '{section}': 'designers/language-builtin-functions/language-function-section.md'\n        - '{setfilter}': 'designers/language-builtin-functions/language-function-setfilter.md'\n        - '{strip}': 'designers/language-builtin-functions/language-function-strip.md'\n        - '{while}': 'designers/language-builtin-functions/language-function-while.md'\n    - 'Custom Tags':\n        - 'Introduction': 'designers/language-custom-functions/index.md'\n        - '{counter}': 'designers/language-custom-functions/language-function-counter.md'\n        - '{cycle}': 'designers/language-custom-functions/language-function-cycle.md'\n        - '{debug}': 'designers/language-custom-functions/language-function-debug.md'\n        - '{eval}': 'designers/language-custom-functions/language-function-eval.md'\n        - '{fetch}': 'designers/language-custom-functions/language-function-fetch.md'\n        - '{html_checkboxes}': 'designers/language-custom-functions/language-function-html-checkboxes.md'\n        - '{html_image}': 'designers/language-custom-functions/language-function-html-image.md'\n        - '{html_options}': 'designers/language-custom-functions/language-function-html-options.md'\n        - '{html_radios}': 'designers/language-custom-functions/language-function-html-radios.md'\n        - '{html_select_date}': 'designers/language-custom-functions/language-function-html-select-date.md'\n        - '{html_select_time}': 'designers/language-custom-functions/language-function-html-select-time.md'\n        - '{html_table}': 'designers/language-custom-functions/language-function-html-table.md'\n        - '{mailto}': 'designers/language-custom-functions/language-function-mailto.md'\n        - '{math}': 'designers/language-custom-functions/language-function-math.md'\n        - '{textformat}': 'designers/language-custom-functions/language-function-textformat.md'\n    - 'designers/config-files.md'\n    - 'designers/chapter-debugging-console.md'\n  - 'API':\n      - 'Basics': 'api/basics.md'\n      - 'Configuring Smarty': 'api/configuring.md'\n      - 'Rendering a template': 'api/rendering.md'\n      - 'Using data in templates':\n          - 'Assigning variables': 'api/variables/assigning.md'\n          - 'Config files': 'api/variables/config-files.md'\n          - 'Using streams': 'api/variables/streams.md'\n          - 'Objects': 'api/variables/objects.md'\n          - 'Static class methods': 'api/variables/static-class-methods.md'\n      - 'Template inheritance': 'api/inheritance.md'\n      - 'Filters':\n          - 'Output filters': 'api/filters/output-filters.md'\n          - 'Prefilters': 'api/filters/prefilters.md'\n          - 'Postfilters': 'api/filters/postfilters.md'\n      - 'Template resources': 'api/resources.md'\n      - 'Caching':\n        - 'Basics': 'api/caching/basics.md'\n        - 'Multiple caches per template': 'api/caching/multiple-caches-per-template.md'\n        - 'Custom cache storage layers': 'api/caching/custom-storage-layers.md'\n      - 'Extending Smarty':\n          - 'Introduction': 'api/extending/introduction.md'\n          - 'Custom tags': 'api/extending/tags.md'\n          - 'Custom block tags': 'api/extending/block-tags.md'\n          - 'Custom modifiers': 'api/extending/modifiers.md'\n          - 'Creating an extension': 'api/extending/extensions.md'\n      - 'Security': 'api/security.md'\n\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.41796875,
          "content": "<phpunit\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/4.5/phpunit.xsd\"\n        bootstrap=\"tests/Bootstrap.php\"\n        colors=\"true\"\n        backupGlobals=\"false\"\n        backupStaticAttributes=\"false\"\n        forceCoversAnnotation=\"false\"\n        processIsolation=\"false\"\n        stopOnError=\"false\"\n        stopOnFailure=\"false\"\n        stopOnIncomplete=\"false\"\n        stopOnSkipped=\"false\"\n        stopOnRisky=\"false\"\n        timeoutForSmallTests=\"1\"\n        timeoutForMediumTests=\"10\"\n        timeoutForLargeTests=\"60\"\n        verbose=\"false\">\n    <testsuites>\n        <testsuite name=\"foo\">\n            <directory>./tests/UnitTests/</directory>\n            <exclude>./tests/UnitTests/CacheResourceTests/Memcache/CacheResourceCustomMemcacheTest.php</exclude>\n            <exclude>./tests/UnitTests/CacheResourceTests/Apc/CacheResourceCustomApcTest.php</exclude>\n            <exclude>./tests/UnitTests/CacheModify/ModifiedSince/HttpModifiedSinceTest.php</exclude>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">libs</directory>\n            <directory suffix=\".php\">libs/plugins</directory>\n            <directory suffix=\".php\">libs/sysplugins</directory>\n            <directory suffix=\".php\">demo/plugins</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "run-tests-for-all-php-versions.sh",
          "type": "blob",
          "size": 0.603515625,
          "content": "#!/bin/bash\n\n# Runs tests for all supported PHP versions\n# Usage examples:\n# - ./run-tests-for-all-php-versions.sh --group 20221124\n# - ./run-tests-for-all-php-versions.sh --exclude-group slow\n\nCOMPOSE_CMD=\"mutagen-compose\"\n\n$COMPOSE_CMD run --rm php72 ./run-tests.sh $@ && \\\n$COMPOSE_CMD run --rm php73 ./run-tests.sh $@ && \\\n$COMPOSE_CMD run --rm php74 ./run-tests.sh $@ && \\\n$COMPOSE_CMD run --rm php80 ./run-tests.sh $@ && \\\n$COMPOSE_CMD run --rm php81 ./run-tests.sh $@ && \\\n$COMPOSE_CMD run --rm php82 ./run-tests.sh $@\n$COMPOSE_CMD run --rm php83 ./run-tests.sh $@\n$COMPOSE_CMD run --rm php84 ./run-tests.sh $@\n"
        },
        {
          "name": "run-tests.sh",
          "type": "blob",
          "size": 0.2783203125,
          "content": "#!/bin/sh\n\n# Runs composer update, echoes php version and runs PHPUnit\n# Usage examples:\n# - ./run-tests.sh --group 20221124\n# - ./run-tests.sh --exclude-group slow\n\ncomposer update --quiet\n#php -r 'echo \"\\nPHP version \" . phpversion() . \". \";'\nphp ./vendor/phpunit/phpunit/phpunit $@\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utilities",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}