{
  "metadata": {
    "timestamp": 1736711837259,
    "page": 149,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/csv",
      "stars": 3358,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2314453125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.js]\nindent_size = 2\n\n[*.css]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7431640625,
          "content": "* text=auto\n\n/.editorconfig                export-ignore\n/.gitattributes               export-ignore\n/.github                      export-ignore\n/.gitignore                   export-ignore\n/.php-cs-fixer.php            export-ignore\n/docs                         export-ignore\n/build                        export-ignore\n/test_files                   export-ignore\n/CHANGELOG.md                 export-ignore\n/Makefile                     export-ignore\n/phpbench.json                export-ignore\n/phpstan.neon                 export-ignore\n/phpunit.xml                  export-ignore\n/README.md                    export-ignore\n/**/*Test.php                 export-ignore\n/**/*TestCase.php             export-ignore\n/**/*Bench.php                export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.111328125,
          "content": ".idea\n.php_cs.cache\n.php-cs-fixer.cache\n.phpunit.cache/\nbuild\ncomposer.lock\ndocs/_site\nvendor\n/nbproject/private/\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 2.1982421875,
          "content": "<?php\n\nuse PhpCsFixer\\Runner\\Parallel\\ParallelConfigFactory;\n\n$header = <<<EOF\nLeague.Csv (https://csv.thephpleague.com)\n\n(c) Ignace Nyamagana Butera <nyamsprod@gmail.com>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__ . '/src')\n;\n\n$config = new PhpCsFixer\\Config();\n\nreturn $config\n    ->setParallelConfig(ParallelConfigFactory::detect())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'concat_space' => ['spacing' => 'none'],\n        'header_comment' => [\n            'comment_type' => 'PHPDoc',\n            'header' => $header,\n            'location' => 'after_open',\n            'separate' => 'both',\n        ],\n        'global_namespace_import' => [\n            'import_classes' => true,\n            'import_constants' => true,\n            'import_functions' => true,\n        ],\n        'new_with_parentheses' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_comment' => true,\n        'no_leading_import_slash' => true,\n        'no_superfluous_phpdoc_tags' => true,\n        'no_trailing_comma_in_singleline' => true,\n        'no_unused_imports' => true,\n        'nullable_type_declaration_for_default_null_value' => true,\n        'ordered_imports' => ['imports_order' => ['class', 'function', 'const'], 'sort_algorithm' => 'alpha'],\n        'phpdoc_add_missing_param_annotation' => ['only_untyped' => true],\n        'phpdoc_align' => ['align' => 'left'],\n        'phpdoc_no_empty_return' => false,\n        'phpdoc_order' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_to_comment' => true,\n        'phpdoc_summary' => true,\n        'psr_autoloading' => true,\n        'return_type_declaration' => ['space_before' => 'none'],\n        'blank_lines_before_namespace' => true,\n        'single_quote' => true,\n        'space_after_semicolon' => true,\n        'ternary_operator_spaces' => true,\n        'trailing_comma_in_multiline' => true,\n        'trim_array_spaces' => true,\n        'whitespace_after_comma_in_array' => true,\n        'yoda_style' => true,\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 46.890625,
          "content": "# Changelog\n\nAll Notable changes to `Csv` will be documented in this file\n\n## [Next](https://github.com/thephpleague/csv/compare/9.21.0...master) - TBD\n\n### Added\n\n- `Writer::necessaryEnclosure`\n\n### Deprecated\n\n- `Writer::relaxEnclosure` use `Writer::necessaryEnclosure`\n\n### Fixed\n\n- `Comparison::CONTAINS` must check the value is a string before calling `str_compare` [#548](https://github.com/thephpleague/csv/pull/548) by [cage-is](https://github.com/cage-is)\n- Fix testing to improve Debian integration [#549](https://github.com/thephpleague/csv/pull/549) by [David Pr√©vot and tenzap](https://github.com/tenzap)\n- `Bom::tryFromSequence` and `Bom::fromSequence` supports the `Reader` and `Writer` class.\n\n### Removed\n\n- None\n\n## [9.21.0](https://github.com/thephpleague/csv/compare/9.20.1...9.21.0) - 2025-01-08\n\n### Added\n\n- `TabularDataReader::map` method.\n- `StreamFilter` class\n- `CallbackStreamFilter` class\n- `AbstractCsv::appendStreamFilterOnRead`\n- `AbstractCsv::appendStreamFilterOnWrite`\n- `AbstractCsv::prependStreamFilterOnRead`\n- `AbstractCsv::prependStreamFilterOnWrite`\n- `Stream::getMode` returns the underlying stream mode; internal codebase.\n\n### Deprecated\n\n- `AbstractCsv::addStreamFilter` use `AbstractCsv::appendStreamFilterOnRead` or `AbstractCsv::appendStreamFilterOnWrite` instead.\n\n### Fixed\n\n- Improve `CharsetConverter` and `SwapDelimiter` internal code.\n- Fix `supportStreamFilterOnRead`and `supportStreamFilterOnWrite` to expose the document real stream filter capabilities.\n\n### Removed\n\n- None\n\n## [9.20.1](https://github.com/thephpleague/csv/compare/9.20.0...9.20.1) - 2024-12-18\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- [#554](https://github.com/thephpleague/csv/pull/544) Fix stream filte removal by [crocodele](https://github.com/crocodele)\n- Fix Statement callback and closure signature\n\n### Removed\n\n- None\n\n## [9.20.0](https://github.com/thephpleague/csv/compare/9.19.0...9.20.0) - 2024-12-13\n\n### Added\n\n- `XMLConverter::formatter`\n- `HTMLConverter::formatter`\n- `Writer::encloseNone`\n- `Writer::encloseNecessary`\n- `Writer::noEnclosure`\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- `JsonConverter::formatter` now accepts callable before only `Closure` where accepted.\n- The protected property `Writer::$enclose_all` is no longer a boolean but an integer\n\n### Removed\n\n- None\n\n## [9.19.0](https://github.com/thephpleague/csv/compare/9.18.0...9.19.0) - 2024-12-08\n\n### Added\n\n- `JsonConverter::withPrettyPrint` now accepts an optional `$identSize` parameter as its unique parameter.\n- `Statement::when` to enable conditionable query building.\n- Using PHP8.4 `Deprecated` attribute to signal deprecated public API methods and constants.\n\n### Deprecated\n\n- `JsonConverter::indentSize`\n\n### Fixed\n\n- Adding forgotten support for `callable` in the `Query\\Constraint` namespace.\n- Fix `HttpHeaders::forFileDownload` to be inline with RFC2183 and HTTP field name and value best practices.\n\n### Remove\n\n- None\n\n## [9.18.0](https://github.com/thephpleague/csv/compare/9.17.0...9.18.0) - 2024-10-18\n\n### Added\n\n- `League\\Csv\\JsonConverter::chunkSize`\n- `League\\Csv\\AbstractCsv::download`\n\n### Deprecated\n\n- `League\\Csv\\AbstractCsv::output` use `League\\Csv\\AbstractCsv::download` instead\n- `League\\Csv\\FragmentFinder` and derived methods are marked as **experimental** as their results will be changed in the next major version.\n\n### Fixed\n\n- `League\\Csv\\JsonConverter::download` the filename is now nullable\n- `League\\Csv\\XMLConverter::download` the filename is now nullable\n- `League\\Csv\\JsonConverter::save` throws a `TypeError` exception if the `$destination` type is not supported.\n\n### Remove\n\n- None\n\n## [9.17.0](https://github.com/thephpleague/csv/compare/9.16.0...9.17.0) - 2024-10-10\n\n### Added\n\n- `League\\Csv\\SwapDelimiter::apppendTo`\n- `League\\Csv\\SwapDelimiter::prependTo`\n- `League\\Csv\\CharsetConverter::apppendTo`\n- `League\\Csv\\CharsetConverter::prependTo`\n- `League\\Csv\\XMLConverter::download`\n- `League\\Csv\\JsonConverter`\n- `League\\Csv\\Constraint\\Criteria::andNot`\n- `League\\Csv\\Constraint\\Criteria::orNot`\n- `League\\Csv\\Constraint\\Criteria::xorNot`\n- `League\\Csv\\Serializer\\MapRecord` attribute\n- adding the `convertEmptyStringToNull` options to `MapCell` and to `MapRecord` to improve string and `null` conversion\n- adding the `trimFieldValueBeforeCasting` options to `MapCell` and to `MapRecord` to improve string conversion\n- adding the `trimElementValueBeforeCasting` option to `CasToArray` to improve conversion during denormalization\n- adding the `headerOffset` option to `CasToArray` to improve conversion during denormalization. The optoon is only used with the CSV shape.\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- `Cast*` methods accept more input type to improve Denormalization usage when `Reader::addFormatter` is used or when the collection contains data other than string and `null`.\n- `Stream::getSize` is added to the internal `Stream` class\n- `Stream::getContents` is added to the internal `Stream` class\n- `MapIterator::toIterator` is added to the internal class `MapIterator` class to convert any `iterable` into an `Iterator`.\n- Casting a CSV to an `array` it now will be a collection of array instead of a simple `array`.\n- Added the internal class `HttpHeaders` to improve file download throughout the codebase.\n\n### Removed\n\n- `leage\\csv-doctrine` is no longer a sub-split of the main `league/csv` package.\n\n## [9.16.0](https://github.com/thephpleague/csv/compare/9.15.0...9.16.0) - 2024-05-24\n\n### Added\n\n- `Bom` enum\n- `Stream::ftell`\n- `Statement::orderByAsc`\n- `Statement::orderByDesc`\n- `Statement::andWhere`\n- `Statement::whereNot`\n- `Statement::orWhere`\n- `Statement::xorWhere`\n- `Statement::andWhereColumn`\n- `Statement::whereNotColumn`\n- `Statement::orWhereColumn`\n- `Statement::xorWhereColumn`\n- `Statement::andWhereOffset`\n- `Statement::whereNotOffset`\n- `Statement::orWhereOffset`\n- `Statement::xorWhereOffset`\n- `Query` feature to allow easier filtering, ordering and querying tabular data\n\n### Deprecated\n\n- `ByteSequence` Interface use the `Bom` enum instead\n- `Info::fetchBOMSequence` use `Bom::tryFromSequence` instead\n- `League\\Csv\\Doctrine` use the new `League\\Csv\\Constraint` feature instead\n- `League\\Csv\\Statement::create` arguments; The method should be used without any argument at all. All arguments will be removed in the next major version.\n\n### Fixed\n\n- `Reader` and `ResultSet` docblocks\n- internal code uses `Bom` enum instead of `Info::fetchBOMSequence`\n- the `AbstractCsv` BOM related properties are moved to being `Bom` instances instead of nullable string.\n- `setOutpuBOM` will only accept valid BOM sequences all other values except the empty string will throw a `ValueError` exception;\n- The package no longer requires the `ext-mbstring` extension to work. But you should have it install in your system in order to use the `mbstring` related stream filters.\n- Issue [#524](https://github.com/thephpleague/csv/issues/524) fix issue with `ResultSet::chunkBy` not working as documented.\n\n### Removed\n\n- None\n\n## [9.15.0](https://github.com/thephpleague/csv/compare/9.14.0...9.15.0) - 2023-02-20\n\n### Added\n\n- `Statement::select`\n- `TabularDataReader::getRecordsAsObject`\n- `TabularDataReader::chunkBy`\n- `TabularDataReader::mapHeader`\n\n### Deprecated\n\n- `TabularDataReader::getObjects` use `TabularDataReader::getRecordsAsObject` instead\n\n### Fixed\n\n- `Reader::select` and `ResultSet::select` now internally use `Statement::select`\n- `Statement` should not throw when `LimitIterator` is used in combinaison with `ArrayIterator`.\n- `Statement` internal codebase improvement.\n- Using the `$header` argument on `Statement::process` is no longer deprecated. `E_USER_DEPRECATED` is no longer triggered.\n- BOM stripping no longer depends on the `mbstring` extension\n- `TabularDataReader::fetchColumn` is no longer deprecated\n\n### Removed\n\n- None\n\n## [9.14.0](https://github.com/thephpleague/csv/compare/9.13.0...9.14.0) - 2023-12-29\n\n### Added\n\n- `League\\Csv\\TabularDataReader::nthAsObject` equivalent to `nth` but returns an object or `null`\n- `League\\Csv\\TabularDataReader::firstAsObject` equivalent to `first` but returns an object or null\n- `League\\Csv\\Serializer\\Denormalizer::types` list all the registered types\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- None\n\n### Removed\n\n- None\n\n## [9.13.0](https://github.com/thephpleague/csv/compare/9.12.0...9.13.0) - 2023-12-16\n\n### Added\n\n- `League\\Csv\\SwapDelimiter` stream filter to allow working with multibyte CSV delimiter\n- `League\\Csv\\Serializer\\AfterMapping` to work around the limitation of not using the class constructor during denormalization.\n- `League\\Csv\\Serializer\\Denormalizer` to allow registering type alias to improve callback usage.\n- `League\\Csv\\Serializer\\MapCell` has a new property `ignore` to allow ignoring a property or a method during denormalization.\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- None\n\n### Removed\n\n- None\n\n## [9.12.0](https://github.com/thephpleague/csv/compare/9.11.0...9.12.0) - 2023-12-02\n\n### Added\n\n- `TabulatDataReader::value`\n- `TabulatDataReader::select`\n- `TabulatDataReader::getObjects`\n- `TabulatDataReader::matching`\n- `TabulatDataReader::matchingFirst` \n- `TabulatDataReader::matchingFirstOrFail`\n- `ResultSet::fromRecords`\n- `Stream::setMaxLineLen`\n- `Stream::getMaxLineLen`\n- `League\\Csv\\Serializer\\Denormalizer` to allow denormalizing records into objects [#508](https://github.com/thephpleague/csv/issues/508)\n- `League\\Csv\\FragmentFinder` to implement [RFC7111](https://www.rfc-editor.org/rfc/rfc7111)\n\n### Deprecated\n\n- Using the `$header` argument on `Statement::process` is deprecated and will be removed in\nthe next version. Use `TabularDataReader::getRecords` on the returned value instead.\nIt's usage will trigger a `E_USER_DEPRECATED` call.\n\n### Fixed\n\n- The optional `$header` argument for `TabularDataReader::getRecords` becomes a full mapper between the records column offset and the column names [#498](https://github.com/thephpleague/csv/issues/498)\n- `ResultSet` constructor now allows the records to be an `array`.\n- The internal `Stream` object will throw a `RuntimeException` if the rewind action fails\n- if calls to `fseek` fails (returns `-1` ) a `RuntimeException` will be thrown.\n- `Stream` can iterate and return the full line respecting `SplFielObject` flags. Previously it only returned the CSV records.\n- `MapIterator::fromIterable` to instantiate a `MapIterator` object from any iterable structure.\n\n### Removed\n\n- None\n\n## [9.11.0](https://github.com/thephpleague/csv/compare/9.10.0...9.11.0) - 2023-09-23\n\n### Added\n\n- `EscapeFormula::unescapeRecord` does the opposite of `EscapeFormula::escapeRecord`\n- `TabularReader::each` (implemented on the `Reader` and the `ResultSet` object)\n- `TabularReader::exists` (implemented on the `Reader` and the `ResultSet` object)\n- `TabularReader::reduce`  (implemented on the `Reader` and the `ResultSet` object)\n- `TabularReader::filter` (implemented on the `Reader` and the `ResultSet` object)\n- `TabularReader::slice` (implemented on the `Reader` and the `ResultSet` object)\n- `TabularReader::sorted` (implemented on the `Reader` and the `ResultSet` object)\n- `Reader::addFormatter` (implemented on the `Reader` and the `ResultSet` object)\n\n### Deprecated\n\n- `EscapeFormula::__invoke` use `EscapeFormula::escapeRecord` instead\n\n### Fixed\n\n- None\n\n### Removed\n\n- None\n\n## [9.10.0] - 2023-08-04\n\n### Added\n\n- `Writer::forceEnclosure` and `Writer::relaxEnclosure` to control the presence of enclosure in the generated CSV\n- `Writer::getEndOfLine` and `Writer::setEndOfLine` \n\n### Deprecated\n\n- `EncloseField` stream filter in favor of the new `Writer::forceEnclosure` method.\n- `Writer::getNewline` and `Writer::setNewline` in favor of `Writer::getEndOfLine` and `Writer::setEndOfLine`\n\n### Fixed\n\n- `Stream::fwrite` to allow writing to a file in a normalized way. Internal use.\n- Documentation Fixed removing unreleased documented feature by [@nclavaud](https://github.com/nclavaud)\n\n### Removed\n\n- None\n\n## [9.9.0] - 2023-03-11\n\n### Added\n\n- `TabularDataWriter` interface to represent how to write to a tabular data document.\n- `TabularDataReader::first` to replace `TabularDataReader::fetchOne`\n- `TabularDataReader::nth` to replace `TabularDataReader::fetchOne`\n- `CharsetConverter::addBOMSkippingTo` to improve BOM skipping see [bug #483](https://github.com/thephpleague/csv/issues/483)\n\n### Deprecated\n\n- `TabularDataReader::fetchOne`\n\n### Fixed\n\n- `Stream::createFromResource`\n- `Stream::__construct` is made private. The class is already marked as internal so BC break does not apply on it.\n\n- Using PHP8 feature to rewrite internal codebase\n- Replaced simple comparisons with strict comparison operator where types are obvious in internal codebase by [@astepin](https://github.com/astepin)\n- Marked class constants explicitly as public by [@astepin](https://github.com/astepin)\n- Minimal support version PHP8.1.2\n- Fix Docblock and method signature using PHP8 feature (Union Type)\n- Fix Internal codebase around `seek` usage and `[#75917](https://bugs.php.net/bug.php?id=75917) requires PHP8.1.2\n- Remove internal usage of deprecated methods\n\n### Removed\n\n- `Stream::fwrite` The class is already marked as internal so BC break does not apply on it.\n- `Stream::fgets` The class is already marked as internal so BC break does not apply on it.\n- Drop support for PHP7 and PHP8.0\n- Polyfill to enable using fputcsv `$eol` argument\n\n## [9.8.0] - 2022-01-04\n\n### Added\n\n- Added PHP7.4 typed properties where applicable\n- `TabularDataReader::fetchColumnByName` to replace `TabularDataReader::fetchColumn`\n- `TabularDataReader::fetchColumnByOffset` to replace `TabularDataReader::fetchColumn`\n\n### Deprecated\n\n- `TabularDataReader::fetchColumn` use `TabularDataReader::fetchColumnByOffset` or `TabularDataReader::fetchColumnByName` instead\n\n### Fixed\n\n- `AbstractCsv` constructor is marked final via docblock.  \n The method should never be extended or changed in child classes to avoid unexpected behaviour\n\n### Removed\n\n- PHP7.3 support\n- Remove internal `EmptyEscapeParser` Polyfill used in `Reader` class\n- Remove PHP7.4 polyfill features in `Writer` class\n\n## [9.7.4] - 2021-11-30\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- Bug fix `EscapeFormula` to follow OWASP latest recommendation [PR #452](https://github.com/thephpleague/csv/pull/452)  \nthanks to [@robertfausk](https://github.com/robertfausk) and [@Lehmub](https://github.com/Lehmhub)\n\n### Removed\n\n- None\n\n## [9.7.3] - 2021-11-21\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- Update PHPStan requirement for development\n- Improve Documentation generation thanks to [pdelre](https://github.com/pdelre)\n- PHP8.1 compliance: using `ReturnTypeWillChange` to avoid emitting a unnecessary deprecation notice. thanks to [cedric-anne](https://github.com/cedric-anne)\n\n### Removed\n\n- None\n\n## [9.7.2] - 2021-10-05\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- Update dependencies requirement for development\n- PHP8.1 compliance: replace `FILTER_SANITIZE_STRING` by `FILTER_UNSAFE_RAW`\n- PHP8.1 compliance: remove duplicated public properties declaration\n- PHP8.1 compliance: add support for fputcsv `$eol` argument\n\n### Removed\n\n- None\n\n## [9.7.1] - 2021-04-17\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- fix writer filter [#421](https://github.com/thephpleague/csv/pull/421) by [LosingBattle](https://github.com/cpj555)\n\n### Removed\n\n- None\n\n## [9.7.0] - 2021-03-26\n\n### Added\n\n- `League\\Csv\\SyntaxError::duplicateColumnNames` to expose column name duplicates during header usage\n- `League\\Csv\\UnableToProcessCsv` as the new Exception Marker Interface\n- `League\\Csv\\UnavailableStream` as the new Exception\n- `League\\Csv\\Info::getDelimiterStats` to replace the namespace function `delimiter_detect`\n- `League\\Csv\\Info::fetchBOMSequence` to replace the namespace function `bom_match`\n- `League\\Csv\\AbstractCsv::toString` to replace `League\\Csv\\AbstractCsv::getContent` and `League\\Csv\\AbstractCsv::__toString`\n- `League\\Csv\\XMLConverter::create` to replace `League\\Csv\\XMLConverter::__construct`\n- `League\\Csv\\HTMLConverter::create` to replace `League\\Csv\\HTMLConverter::__construct`\n- `League\\Csv\\AbstractCsv::supportsStreamFilterOnRead` and `League\\Csv\\AbstractCsv::supportsStreamFilterOnWrite` to replace `League\\Csv\\AbstractCsv::supportsStreamFilter` and `League\\Csv\\AbstractCsv::getStreamFilterMode`\n\n### Deprecated\n\n- `League\\Csv\\delimiter_detect` use `League\\Csv\\Info::getDelimiterStats`\n- `League\\Csv\\bom_match` use `League\\Csv\\Info::fetchBOMSequence`\n- `League\\Csv\\AbstractCsv::getContent` use `League\\Csv\\AbstractCsv::toString`\n- `League\\Csv\\AbstractCsv::getStreamFilterMode` use `League\\Csv\\AbstractCsv::supportsStreamFilterOnRead` or `League\\Csv\\AbstractCsv::supportsStreamFilterOnWrite`\n- `League\\Csv\\AbstractCsv::supportsStreamFilter` use `League\\Csv\\AbstractCsv::supportsStreamFilterOnRead` or `League\\Csv\\AbstractCsv::supportsStreamFilterOnWrite`\n- Calling exceptions constructor, use named constructors instead.\n- `League\\Csv\\XMLConverter::__construct` use `League\\Csv\\XMLConverter::create`\n- `League\\Csv\\HTMLConverter::__construct` use `League\\Csv\\HTMLConverter::create`\n\n### Fixed\n\n- Move tests into the `src` directory\n- Fixed encoder method resolver implementation\n- all classes marked as `@internal` are now final\n- `League\\Csv\\AbstractCsv::STREAM_FILTER_MODE` constant replaces `League\\Csv\\AbstractCsv::$stream_filter_mode`\n\n### Removed\n\n- PHP7.2 support\n- `League\\Csv\\AbstractCsv::$stream_filter_mode`\n\n## [9.6.2] - 2020-12-10\n\n### Added\n\n- Using Github actions as development tools.\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- Adding official support for PHP8 [#405](https://github.com/thephpleague/csv/pull/405) and [#406](https://github.com/thephpleague/csv/pull/406) by [Ion Bazan](https://github.com/IonBazan)\n\n### Removed\n\n- Removing Travis and Scrutinizr as development tools\n\n## [9.6.1] - 2020-09-05\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- BOM sequence processing fix [#394](https://github.com/thephpleague/csv/issues/394)\n\n### Removed\n\n- None\n\n## [9.6.0] - 2020-03-17\n\n### Added\n\n- More return types and type parameters as supported in PHP7.2+\n- `League\\Csv\\Statement::create` named constructor to ease constraint builder instantiation\n- `League\\Csv\\Statement` can now also process `League\\Csv\\ResultSet` instances.\n- `League\\Csv\\TabularDataReader` interface to represent how to read tabular data\n- `League\\Csv\\ResultSet::getRecords` has an optional `$header` second argument to make the method works like `League\\Csv\\Reader::getRecords`\n- `League\\Csv\\ResultSet::createFromTabularDataReader` create a new instance from `League\\Csv\\TabularDataReader` implementing class.\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `League\\Csv\\Reader` no longer uses `__call` to implement `fetchOne`, `fetchPairs` and `fetchColumn` methods.\n\n### Removed\n\n- Internal polyfill for `is_iterable`\n- Internal polyfill for `is_nullable_int`\n- Support for PHP7.0 and PHP7.1\n\n## [9.5.0] - 2019-12-15\n\n### Added\n\n- Improve package exception throwing by adding new exceptions classes that extends\nthe `League\\Csv\\Exception` exception marker class [#360](https://github.com/thephpleague/csv/issues/360), [#361](https://github.com/thephpleague/csv/issues/360)\nfeature proposed and developed by [Darren Miller](https://github.com/dmlogic)\n  - `League\\Csv\\UnavailableFeature`\n  - `League\\Csv\\InvalidArgument`\n  - `League\\Csv\\SyntaxError`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- bug fix `bom_match` function see issue [#363](https://github.com/thephpleague/csv/issues/363) resolved based on PR from [Jerry Martinez](https://github.com/jmwebservices)\n- bug fix `delemiter_detect` function see issue [#366](https://github.com/thephpleague/csv/issues/366)\n\n### Removed\n\n- Nothing\n\n## [9.4.1] - 2019-10-17\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- bug fix the escape mechanism polyfill  [#358](https://github.com/thephpleague/csv/pull/358) fix provided by [on2](https://github.com/on2)\n\n### Removed\n\n- Nothing\n\n## [9.4.0] - 2019-10-02\n\n### Added\n\n- Adding support for controlling empty record presence in `Reader::getRecords` return value.\n  - `Reader::includeEmptyRecords`\n  - `Reader::skipEmptyRecords`\n  - `Reader::isEmptyRecordsIncluded`\n\n- Adding support for controlling Input BOM usage in the library:\n  - `AbstractCsv::skipInputBOM`\n  - `AbstractCsv::includeInputBOM`\n  - `AbstractCsv::isInputBOMIncluded`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `EmptyEscapeParser::parse` no longer auto skip empty records\n\n### Removed\n\n- Nothing\n\n## [9.3.0] - 2019-07-30\n\n### Added\n\n- `XMLConverter::import` see [#348](https://github.com/thephpleague/csv/pull/348) thanks [@kusabi](https://github.com/kusabi)\n- Support for `thead`, `tfoot` and `tbody` in `HTMLConverter::convert` via the addition of\nprotected methods `HTMLConverter::addHTMLAttributes` and `HTMLConverter::appendHeaderSection` [#348](https://github.com/thephpleague/csv/pull/348) thanks [@kusabi](https://github.com/kusabi)\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Internal improvement in `Reader` dockblock thanks [@ghobaty](https://github.com/ghobaty).\n- Improve strict comparison when using `preg_match`.\n- Improve CSV control in `Stream`.\n\n### Removed\n\n- Nothing\n\n## [9.2.1] - 2019-06-08\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `AbstractCSV::chunk` see [#325](https://github.com/thephpleague/csv/pull/325) remove CSV flags from the Stream class to avoid infinite loop.\n- Internal improve `HTMLConverter`.\n\n### Removed\n\n- Nothing\n\n## [9.2.0] - 2019-03-08\n\n### Added\n\n- Supports for PHP7.4 empty string for the escape character\n- Supports for empty string for the escape character with a polyfill for PHP7.4- versions.\n- `AbstractCSV::getPathname` see [#321](https://github.com/thephpleague/csv/pull/321) thanks [@tomkyle](https://github.com/tomkyle)\n\n### Deprecated\n\n- `League\\Csv\\RFC4180Field` use `AbstractCSV::setEscape` method with an empty string instead.\n\n### Fixed\n\n- `AbstractCSV::__construct` correctly initializes properties\n- `AbstractCSV::createFromString` named constructor default argument is now an empty string\n- `AbstractCSV::setEscape` now accepts an empty string like `fputcsv` and `fgetcsv`\n- `Writer::insertOne` fixes throwing exception when record can not be inserted\n- `XMLConverter` convert to string the record value to avoid PHP warning on `null` value\n- Internal `Stream::createFromString` named constructor default argument is now an empty string\n- Internal `Stream::fwrite` improved\n- Internal `Stream::__destruct` no longer emit warning on invalid stream filter removal.\n- Internal `Stream::seek` returns `0` if the seeked position `0` is valid see [#321](https://github.com/thephpleague/csv/pull/332) thanks [@HaozhouChen](https://github.com/HaozhouChen)\n\n- `Reader:getHeader` when the record is an empty line.\n\n### Removed\n\n- Nothing\n\n## [9.1.4] - 2018-05-01\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `Writer::setFlushThreshold` should accept 1 as an argument [#289](https://github.com/thephpleague/csv/issue/289)\n- `CharsetConverter::convert` should not try to convert numeric value [#287](https://github.com/thephpleague/csv/issue/287)\n\n### Removed\n\n- Nothing\n\n## [9.1.3] - 2018-03-12\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `Writer::insertOne` allow empty array to be added to the CSV (allow inserting empty row)\n- Removed all return type from named constructor see [#285](https://github.com/thephpleague/csv/pull/285)\n- Added PHPStan for static code analysis\n\n### Removed\n\n- Nothing\n\n## 8.2.3 - 2018-02-06\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- `Reader::fetchAssoc` no longer throws exception because of a bug in PHP7.2+ [issue #279](https://github.com/thephpleague/csv/issues/279)\n\n### Removed\n\n- None\n\n## [9.1.2] - 2018-02-05\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `is_iterable` polyfill for PHP7.0\n- `Reader::getHeader` no longer throws exception because of a bug in PHP7.2+ [issue #279](https://github.com/thephpleague/csv/issues/279)\n\n### Removed\n\n- Nothing\n\n## [9.1.1] - 2017-11-28\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- issue with `error_get_last` usage when using a modified PHP error handler see [#254](https://github.com/thephpleague/csv/issues/254) - fixed by [@csiszarattila](https://github.com/csiszarattila)\n\n- Removed seekable word from Stream exception messages.\n\n### Removed\n\n- Nothing\n\n## [9.1.0] - 2017-10-20\n\n### Added\n\n- Support for non-seekable stream. When seekable feature are required an exceptions will be thrown.\n- `League\\Csv\\EncloseField` to force enclosure insertion on every field. [#269](https://github.com/thephpleague/csv/pull/269)\n- `League\\Csv\\EscapeFormula` a League CSV formatter to prevent CSV Formula Injection in Spreadsheet programs.\n- `League\\Csv\\RFC4180Field::addTo` accept an option `$replace_whitespace` argument to improve RFC4180 compliance.\n- `League\\Csv\\Abstract::getContent` to replace `League\\Csv\\Abstract::__toString`. The `__toString` method may trigger a Fatal Error with non-seekable stream, instead you are recommended to used the new `getContent` method which will trigger an exception instead.\n\n### Deprecated\n\n- `League\\Csv\\Abstract::__toString` use `League\\Csv\\Abstract::getContent` instead. the `__toString` triggers a Fatal Error when used on a non-seekable CSV document. use the `getContent` method instead which will trigger an exception instead.\n\n### Fixed\n\n- Bug fixes headers from AbstractCsv::output according to RFC6266 [#250](https://github.com/thephpleague/csv/issues/250)\n- Make sure the internal source still exists before closing it [#251](https://github.com/thephpleague/csv/issues/251)\n- Make sure the `Reader::createFromPath` default open mode is `r` see [#258](https://github.com/thephpleague/csv/pull/258) and [#266](https://github.com/thephpleague/csv/pull/266)\n\n### Removed\n\n- Nothing\n\n## [9.0.1] - 2017-08-21\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- CSV controls not applied when calling Writer::insertOne\n\n### Removed\n\n- Nothing\n\n## [9.0.0] - 2017-08-18\n\n### Added\n\n- Improved CSV Records selection\n  - `League\\Csv\\Reader::getRecords` to access all CSV records\n  - `League\\Csv\\Statement` provides a constraint builder to select CSV records.\n  - `League\\Csv\\ResultSet` represents the result set of the selected CSV records.\n  - `League\\Csv\\delimiter_detect` function to detect CSV delimiter character\n- Improved CSV document header selection.\n  - `League\\Csv\\Reader::getHeader`\n  - `League\\Csv\\Reader::getHeaderOffset`\n  - `League\\Csv\\Reader::setHeaderOffset`\n- Improved CSV Records conversion\n  - `League\\Csv\\CharsetConverter` converts CSV records charset.\n  - `League\\Csv\\XMLConverter` converts CSV records into DOMDocument\n  - `League\\Csv\\HTMLConverter` converts CSV records into HTML table.\n- Improved Exception handling\n  - `League\\Csv\\Exception` the default exception\n  - `League\\Csv\\CannotInsertRecord`\n- Improved CSV document output\n  - `League\\Csv\\AbstractCsv::chunk` method to output the CSV document in chunk\n  - `League\\Csv\\bom_match` function to detect BOM sequence in a given string\n  - `League\\Csv\\ByteSequence` interface to decoupled BOM sequence from CSV documents\n- Improved CSV records column count consistency on insertion\n  - `League\\Csv\\ColumnConsistency`\n- Improved CSV document flush mechanism on insertion\n  - `League\\Csv\\Writer::setFlushThreshold`\n  - `League\\Csv\\Writer::getFlushThreshold`\n- Improve RFC4180 compliance\n  - `League\\Csv\\RFC4180Field` to format field according to RFC4180 rules\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Improved CSV record insertion\n  - `League\\Csv\\Writer::insertOne` only accepts an array and returns a integer\n  - `League\\Csv\\Writer::insertAll` only accepts an iterable of array and returns an integer\n\n- Normalized CSV offset returned value\n  - `League\\Csv\\Reader::fetchColumn` always returns the CSV document original offset.\n\n### Removed\n\n- `examples` directory\n- `PHP5` support\n- The following method is removed because The BOM API is simplified:\n  - `League\\Csv\\AbstractCsv::stripBOM`\n- All conversion methods are removed in favor of the conversion classes:\n  - `League\\Csv\\Writer::jsonSerialize`\n  - `League\\Csv\\AbstractCsv::toHTML`\n  - `League\\Csv\\AbstractCsv::toXML`\n  - `League\\Csv\\AbstractCsv::setInputEncoding`\n  - `League\\Csv\\AbstractCsv::getInputEncoding`\n- The following methods are removed because the PHP stream filter API is simplified:\n  - `League\\Csv\\AbstractCsv::isActiveStreamFilter`\n  - `League\\Csv\\AbstractCsv::setStreamFilterMode`\n  - `League\\Csv\\AbstractCsv::appendStreamFilter`\n  - `League\\Csv\\AbstractCsv::prependStreamFilter`\n  - `League\\Csv\\AbstractCsv::removeStreamFilter`\n  - `League\\Csv\\AbstractCsv::clearStreamFilters`\n- The following methods are removed because switching between connections is no longer possible:\n  - `League\\Csv\\AbstractCsv::newReader`\n  - `League\\Csv\\AbstractCsv::newWriter`\n  - `League\\Csv\\Reader::getNewline`\n  - `League\\Csv\\Reader::setNewline`\n- The Exception mechanism is improved thus the following class is removed:\n  - `League\\Csv\\Exception\\InvalidRowException`;\n- The CSV records filtering methods are removed in favor of the `League\\Csv\\Statement` class:\n  - `League\\Csv\\AbstractCsv::addFilter`,\n  - `League\\Csv\\AbstractCsv::addSortBy`,\n  - `League\\Csv\\AbstractCsv::setOffset`,\n  - `League\\Csv\\AbstractCsv::setLimit`;\n- CSV records selecting API methods is simplified:\n  - `League\\Csv\\Reader::each`\n  - `League\\Csv\\Reader::fetch`\n  - `League\\Csv\\Reader::fetchAll`\n  - `League\\Csv\\Reader::fetchAssoc`\n  - `League\\Csv\\Reader::fetchPairsWithoutDuplicates`\n- Formatting and validating CSV records on insertion is simplified, the following methods are removed:\n  - `League\\Csv\\Writer::hasFormatter`\n  - `League\\Csv\\Writer::removeFormatter`\n  - `League\\Csv\\Writer::clearFormatters`\n  - `League\\Csv\\Writer::hasValidator`\n  - `League\\Csv\\Writer::removeValidator`\n  - `League\\Csv\\Writer::clearValidators`\n  - `League\\Csv\\Writer::getIterator`\n- The following Formatters and Validators classes are removed from the package:\n  - `League\\Csv\\Plugin\\SkipNullValuesFormatter`\n  - `League\\Csv\\Plugin\\ForbiddenNullValuesValidator`\n  - `League\\Csv\\Plugin\\ColumnConsistencyValidator` *replace by `League\\Csv\\ColumnConsistency`*\n- `League\\Csv\\Writer` no longers implements the `IteratorAggregate` interface\n- `League\\Csv\\AbstractCsv::fetchDelimitersOccurrence` is removed *replace by `League\\Csv\\delimiter_detect` function*\n\n## 8.2.2 - 2017-07-12\n\n### Added\n\n- None\n\n### Deprecated\n\n- None\n\n### Fixed\n\n- `Writer::insertOne` was silently failing when inserting record in a CSV document in non-writing mode.\n- bug fix docblock\n\n### Removed\n\n- None\n\n## 8.2.1 - 2017-02-22\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- internal `Reader::getRow` when using a `StreamIterator` [issue #213](https://github.com/thephpleague/csv/issues/213)\n- Removed `@deprecated` from selected methods [issue #208](https://github.com/thephpleague/csv/issues/213)\n\n### Removed\n\n- Nothing\n\n## 8.2.0 - 2017-01-25\n\n### Added\n\n- `AbstractCsv::createFromStream` to enable working with resource stream [issue #202](https://github.com/thephpleague/csv/issues/202)\n\n### Deprecated\n\n- `League\\Csv\\AbstractCsv::stripBom`\n- `League\\Csv\\Reader::getOffset`\n- `League\\Csv\\Reader::getLimit`\n- `League\\Csv\\Reader::getSortBy`\n- `League\\Csv\\Reader::getFilter`\n- `League\\Csv\\Reader::setOffset`\n- `League\\Csv\\Reader::setLimit`\n- `League\\Csv\\Reader::addSortBy`\n- `League\\Csv\\Reader::addFilter`\n- `League\\Csv\\Reader::fetch`\n- `League\\Csv\\Reader::each`\n- `League\\Csv\\Reader::fetchPairsWithoutDuplicates`\n- `League\\Csv\\Reader::fetchAssoc`\n- `League\\Csv\\Writer::removeFormatter`\n- `League\\Csv\\Writer::hasFormatter`\n- `League\\Csv\\Writer::clearFormatters`\n- `League\\Csv\\Writer::removeValidator`\n- `League\\Csv\\Writer::hasValidator`\n- `League\\Csv\\Writer::clearValidators`\n- `League\\Csv\\Writer::jsonSerialize`\n- `League\\Csv\\Writer::toHTML`\n- `League\\Csv\\Writer::toXML`\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 8.1.2 - 2016-10-27\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- BOM filtering fix [issue #184](https://github.com/thephpleague/csv/issues/184)\n- `AbstractCsv::BOM_UTF32_LE` value fixed\n\n### Removed\n\n- Nothing\n\n## 8.1.1 - 2016-09-05\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `getInputBOM` method name is now consistent everywhere in the API [PR #171](https://github.com/thephpleague/csv/pull/171)\n- preserve fileObject CSV controls [commit #8a20c56](https://github.com/thephpleague/csv/commit/8a20c56144effa552a8cba5d8c626063222975b7)\n- Change `output` method header content-type value to `text/csv` [PR #175](https://github.com/thephpleague/csv/pull/175)\n\n### Removed\n\n- Nothing\n\n## 8.1.0 - 2016-05-31\n\n### Added\n\n- The package now includes its own autoloader.\n- `Ouput::getInputEncoding`\n- `Ouput::setInputEncoding`\n\n### Deprecated\n\n- `Ouput::getEncodingFrom` replaced by `Ouput::getInputEncoding`\n- `Ouput::setEncodingFrom` replaced by `Ouput::setInputEncoding`\n\n### Fixed\n\n- Stream Filters are now url encoded before usage [issue #72](https://github.com/thephpleague/csv/issues/72)\n- All internal parameters are now using the snake case format\n\n### Removed\n\n- Nothing\n\n## 8.0.0 - 2015-12-11\n\n### Added\n\n- `Reader::fetchPairs`\n- `Reader::fetchPairsWithoutDuplicates`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `Reader::fetchColumn` and `Reader::fetchAssoc` now return `Iterator`\n- `Reader::fetchAssoc` callable argument expects an indexed row using the submitted keys as its first argument\n- `Reader::fetchColumn` callable argument expects the selected column value as its first argument\n- Default value on `setOutputBOM` is removed\n- `AbstractCsv::getOutputBOM` always return a string\n- `AbstractCsv::getInputBOM` always return a string\n\n### Removed\n\n- `Controls::setFlags`\n- `Controls::getFlags`\n- `Controls::detectDelimiterList`\n- `QueryFilter::removeFilter`\n- `QueryFilter::removeSortBy`\n- `QueryFilter::hasFilter`\n- `QueryFilter::hasSortBy`\n- `QueryFilter::clearFilter`\n- `QueryFilter::clearSortBy`\n- `Reader::query`\n- The `$newline` argument from `AbstractCsv::createFromString`\n\n## 7.2.0 - 2015-11-02\n\n### Added\n\n- `Reader::fetch` replaces `League\\Csv\\Reader::query` for naming consistency\n- `Controls::fetchDelimitersOccurrence` to replace `Controls::detectDelimiterList` the latter gives erronous results\n\n### Deprecated\n\n- `Controls::detectDelimiterList`\n- `Reader::query`\n- The `$newline` argument from `AbstractCsv::createFromString`\n\n### Fixed\n\n- Streamming feature no longer trim filter name argument [issue #122](https://github.com/thephpleague/csv/issues/122)\n- Fix default `SplFileObject` flags usage [PR #130](https://github.com/thephpleague/csv/pull/130)\n- `AbstractCsv::createFromString` no longer trim the submitted string [issue #132](https://github.com/thephpleague/csv/issues/132)\n\n### Removed\n\n- Nothing\n\n## 7.1.2 - 2015-06-10\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Enclosures should be removed when a BOM sequence is stripped [issue #102](http://github.com/thephpleague/csv/issues/99)\n\n### Removed\n\n- Nothing\n\n## 7.1.1 - 2015-05-20\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `SplFileObject` flags were not always applied using query filter [issue #99](http://github.com/thephpleague/csv/issues/99)\n\n### Removed\n\n- Nothing\n\n## 7.1.0 - 2015-05-06\n\n### Added\n\n- `stripBOM` query filtering method to ease removing the BOM sequence when querying the CSV document.\n- All query filters are now accessible in the `Writer` class for conversion methods.\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Internal code has been updated to take into account [issue #68479](http://bugs.php.net/68479)\n- `setFlags` on conversion methods SplFileObject default flags are `SplFileObject::READ_AHEAD|SplFileObject::SKIP_EMPTY`\n- `insertOne` now takes into account the escape character when modified after the first insert.\n\n### Removed\n\n- Nothing\n\n## 7.0.1 - 2015-03-23\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `setFlags`: `SplFileObject::DROP_NEW_LINE` can be remove using `setFlags` method.\n\n### Removed\n\n- Nothing\n\n## 7.0.0 - 2015-02-19\n\n### Added\n\n- A new flexible mechanism to format and validate a row before its insertion by adding\n  - `Writer::addFormatter` to add a formatter to the `Writer` object\n  - `Writer::removeFormatter` to remove an already registered formatter\n  - `Writer::hasFormatter` to detect the presence of a formatter\n  - `Writer::clearFormatters` to clear all registered formatter\n  - `Writer::addValidator` to add a validator to the `Writer` object\n  - `Writer::removeValidator` to remove an already registered validator\n  - `Writer::hasValidator` to detect the presence of a validator\n  - `Writer::clearValidators` to clear all registered validator\n  - `League\\Csv\\Exception\\InvalidRowException` exception thrown when row validation failed\n- Classes to maintain removed features from the `Writer` class\n  - `League\\Csv\\Plugin\\ColumnConsistencyValidator` to validate column consistency on insertion\n  - `League\\Csv\\Plugin\\ForbiddenNullValuesValidator` to validate `null` value on insertion\n  - `League\\Csv\\Plugin\\SkipNullValuesFormatter` to format `null` value on insertion\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `jsonSerialize`, `toXML` and `toHTML` output can be modified using `Reader` query options methods.\n- `AbstractCSV::detectDelimiterList` index keys now represents the occurrence of the found delimiter.\n- `getNewline` and `setNewline` are accessible on the `Reader` class too.\n- the named constructor `createFromString` now accepts the `$newline` sequence as a second argument to specify the last added new line character to better work with interoperability.\n- Default value on CSV controls setter methods `setDelimiter`, `setEnclosure` and `setEscape` are removed\n- Default `SplFileObject` flags value is now `SplFileObject::READ_CSV|SplFileObject::DROP_NEW_LINE`\n- All CSV properties are now copied when using `newReader` and `newWriter` methods\n- BOM addition on output improved by removing if found the existing BOM character\n- the `AbstractCSV::output` method now returns the number of bytes send to the output buffer\n- `Reader::fetchColumn` will automatically filter out non existing values from the return array\n\n### Removed\n\n- Setting `ini_set(\"auto_detect_line_endings\", true);` is no longer set in the class constructor. Mac OS X users must explicitly set this ini options in their script.\n- `Writer` and `Reader` default constructor are removed from public API in favor of the named constructors.\n- All `Writer` methods and constant related to CSV data validation and formatting before insertion\n  - `Writer::getNullHandlingMode`\n  - `Writer::setNullHandlingMode`\n  - `Writer::setColumnsCount`\n  - `Writer::getColumnsCount`\n  - `Writer::autodetectColumnsCount`\n  - `Writer::NULL_AS_EXCEPTION`\n  - `Writer::NULL_AS_EMPTY`\n  - `Writer::NULL_AS_SKIP_CELL`\n\n## 6.3.0 - 2015-01-21\n\n### Added\n\n- `AbstractCSV::setOutputBOM`\n- `AbstractCSV::getOutputBOM`\n- `AbstractCSV::getInputBOM`\n\nto manage BOM character with CSV.\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 6.2.0 - 2014-12-12\n\n### Added\n\n- `Writer::setNewline` , `Writer::getNewline`  to control the newline sequence character added at the end of each CSV row.\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 6.1.0 - 2014-12-08\n\n### Added\n\n- `Reader::fetchAssoc` now also accepts an integer as first argument representing a row index.\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 6.0.1 - 2014-11-12\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Bug Fixed `detectDelimiterList`\n\n### Removed\n\n- Nothing\n\n## 6.0.0 - 2014-08-28\n\n### Added\n\n- Stream Filter API in `League\\Csv\\AbstractCsv`\n- named constructors `createFromPath` and `createFromFileObject` in `League\\Csv\\AbstractCsv` to ease CSV object instantiation\n- `detectDelimiterList` in `League\\Csv\\AbstractCsv` to replace and remove the use of `RuntimeException` in `detectDelimiter`\n- `setEncodingFrom` and `setDecodingFrom` in `League\\Csv\\AbstractCsv` to replace `setEncoding` and `getEncoding` for naming consistency\n- `newWriter` and `newReader` methods in `League\\Csv\\AbstractCsv` to replace `Writer::getReader` and `Reader::getWriter`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `League\\Csv\\Reader::each` more strict `$callable` MUST returns `true`\n\n### Remove\n\n- `League\\Csv\\AbstractCsv::detectDelimiter`\n- `League\\Csv\\AbstractCsv::setEncoding` and `League\\Csv\\AbstractCsv::getEncoding`\n- `League\\Csv\\Reader::setSortBy`\n- `League\\Csv\\Reader::setFilter`\n- `League\\Csv\\Reader::getWriter`\n- `League\\Csv\\Writer::getReader`\n- `League\\Csv\\Reader::fetchCol`\n\n## 5.4.0 - 2014-04-17\n\n### Added\n\n- `League\\Csv\\Writer::setColumnsCount`, `League\\Csv\\Writer::getColumnsCount`, `League\\Csv\\Writer::autodetectColumnsCount` to enable column consistency in writer mode\n- `League\\Csv\\Reader::fetchColumn` replaces `League\\Csv\\Reader::fetchCol` for naming consistency\n\n### Deprecated\n\n- `League\\Csv\\Reader::fetchCol`\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 5.3.1 - 2014-04-09\n\n### Added\n\n- Nothing\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `$open_mode` defaults to `r+` in `League\\Csv\\AbstractCsv` constructors\n\n### Removed\n\n- Nothing\n\n## 5.3.0 - 2014-03-24\n\n### Added\n\n- `League\\Csv\\Writer::setNullHandlingMode` and `League\\Csv\\Writer::getNullHandlingMode` to handle `null` value\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `setting ini_set(\"auto_detect_line_endings\", true);` no longer needed for Mac OS\n\n### Removed\n\n- Nothing\n\n## 5.2.0 - 2014-03-13\n\n### Added\n\n- `League\\Csv\\Reader::addSortBy`, `League\\Csv\\Reader::removeSortBy`, `League\\Csv\\Reader::hasSortBy`, `League\\Csv\\Reader::clearSortBy` to improve sorting\n- `League\\Csv\\Reader::clearFilter` to align extract filter capabilities to sorting capabilities\n\n### Deprecated\n\n- `League\\Csv\\Reader::setSortBy` replaced by a better implementation\n\n### Fixed\n\n- `League\\Csv\\Reader::setOffset` now defaults to 0;\n- `League\\Csv\\Reader::setLimit` now defaults to -1;\n- `detectDelimiter` bug fixes\n\n### Removed\n\n- Nothing\n\n## 5.1.0 - 2014-03-11\n\n### Added\n\n- `League\\Csv\\Reader::each` to ease CSV import data\n- `League\\Csv\\Reader::addFilter`, `League\\Csv\\Reader::removeFilter`, `League\\Csv\\Reader::hasFilter` to improve extract filter capabilities\n- `detectDelimiter` method to `League\\Csv\\AbstractCsv` to sniff CSV delimiter character.\n\n### Deprecated\n\n- `League\\Csv\\Reader::setFilter` replaced by a better implementation\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 5.0.0 - 2014-02-28\n\n### Added\n\n- Change namespace from `Bakame\\Csv` to `League\\Csv`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- Nothing\n\n## 4.2.1 - 2014-02-22\n\n### Fixed\n\n- `$open_mode` validation is done by PHP internals directly\n\n### Removed\n\n- Nothing\n\n## 4.2.0 - 2014-02-17\n\n### Added\n\n- `toXML` method to transcode the CSV into a XML in `Bakame\\Csv\\AbstractCsv`\n\n### Fixed\n\n- `toHTML` method bug in `Bakame\\Csv\\AbstractCsv`\n- `output` method accepts an optional `$filename` argument\n- `Bakame\\Csv\\Reader::fetchCol` defaults to `$columnIndex = 0`\n- `Bakame\\Csv\\Reader::fetchOne` defaults to `$offset = 0`\n\n## 4.1.2 - 2014-02-14\n\n### Added\n\n- Move from `PSR-0` to `PSR-4` to autoload the library\n\n## 4.1.1 - 2014-02-14\n\n### Fixed\n\n- `Bakame\\Csv\\Reader` methods fixed\n- `jsonSerialize` bug fixed\n\n## 4.1.0 - 2014-02-07\n\n### Added\n\n- `getEncoding` and `setEncoding` methods to `Bakame\\Csv\\AbstractCsv`\n\n### Fixed\n\n- `Bakame\\Csv\\Writer::insertOne` takes into account CSV controls\n- `toHTML` method takes into account encoding\n\n## 4.0.0 - 2014-02-05\n\n### Added\n\n- `Bakame\\Csv\\Writer`\n- `Bakame\\Csv\\Writer` and `Bakame\\Csv\\Reader` extend `Bakame\\Csv\\AbstractCsv`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- `Bakame\\Csv\\Reader::fetchOne` is no longer deprecated\n- `Bakame\\Csv\\Reader::fetchCol` no longer accepts a third parameter `$strict`\n\n### Removed\n\n- `Bakame\\Csv\\Codec` now the library is composer of 2 main classes\n- `Bakame\\Csv\\Reader::getFile`\n- `Bakame\\Csv\\Reader::fetchValue`\n- `Bakame\\Csv\\Reader` no longer implements the `ArrayAccess` interface\n\n## 3.3.0 - 2014-01-28\n\n### Added\n\n- `Bakame\\Csv\\Reader` implements `IteratorAggregate` Interface\n- `Bakame\\Csv\\Reader::createFromString` to create a CSV object from a raw string\n- `Bakame\\Csv\\Reader::query` accept an optional `$callable` parameter\n\n### Deprecated\n\n- `Bakame\\Csv\\Reader::getFile` in favor of `Bakame\\Csv\\Reader::getIterator`\n\n### Removed\n\n- `Bakame\\Csv\\ReaderInterface` useless interface\n\n### Fixed\n\n- `Bakame\\Csv\\Reader::fetch*` `$callable` parameter is normalized to accept an array\n- `Bakame\\Csv\\Reader::fetchCol` accepts a third parameter `$strict`\n\n## 3.2.0 - 2014-01-16\n\n### Added\n\n- `Bakame\\Csv\\Reader` implements the following interfaces `JsonSerializable` and `ArrayAccess`\n- `Bakame\\Csv\\Reader::toHTML` to output the CSV as a HTML table\n- `Bakame\\Csv\\Reader::setFilter`, `Bakame\\Csv\\Reader::setSortBy`, `Bakame\\Csv\\Reader::setOffset`, `Bakame\\Csv\\Reader::setLimit`, `Bakame\\Csv\\Reader::query` to perform SQL like queries on the CSV content.\n- `Bakame\\Csv\\Codec::setFlags`, `Bakame\\Csv\\Codec::getFlags`, Bakame\\Csv\\Codec::__construct : add an optional `$flags` parameter to enable the use of `SplFileObject` constants flags\n\n### Deprecated\n\n- `Bakame\\Csv\\Reader::fetchOne` replaced by `Bakame\\Csv\\Reader::offsetGet`\n- `Bakame\\Csv\\Reader::fetchValue` useless method\n\n## 3.1.0 - 2014-01-13\n\n### Added\n\n- `Bakame\\Csv\\Reader::output` output the CSV data directly in the output buffer\n- `Bakame\\Csv\\Reader::__toString` can be use to echo the raw CSV\n\n## 3.0.1 - 2014-01-10\n\n### Fixed\n\n- `Bakame\\Csv\\Reader::fetchAssoc` when users keys and CSV row data don't have the same length\n\n## 3.0.0 - 2014-01-10\n\n### Added\n\n- `Bakame\\Csv\\ReaderInterface`\n- `Bakame\\Csv\\Reader` class\n\n### Fixed\n\n- `Bakame\\Csv\\Codec::loadString`returns a `Bakame\\Csv\\Reader` object\n- `Bakame\\Csv\\Codec::loadFile` returns a `Bakame\\Csv\\Reader` object\n- `Bakame\\Csv\\Codec::save` returns a `Bakame\\Csv\\Reader` object\n\n## 2.0.0 - 2014-01-09\n\n### Added\n\n- `Bakame\\Csv\\CsvCodec` class renamed `Bakame\\Csv\\Codec`\n\n### Deprecated\n\n- Nothing\n\n### Fixed\n\n- Nothing\n\n### Removed\n\n- `Bakame\\Csv\\Codec::create` from public API\n\n## 1.0.0 - 2013-12-03\n\nInitial Release of `Bakame\\Csv`\n\n[Next]: https://github.com/thephpleague/csv/compare/9.12.0...master\n[9.10.0]: https://github.com/thephpleague/csv/compare/9.9.0...9.10.0\n[9.9.0]: https://github.com/thephpleague/csv/compare/9.8.0...9.9.0\n[9.8.0]: https://github.com/thephpleague/csv/compare/9.7.4...9.8.0\n[9.7.4]: https://github.com/thephpleague/csv/compare/9.7.3...9.7.4\n[9.7.3]: https://github.com/thephpleague/csv/compare/9.7.2...9.7.3\n[9.7.2]: https://github.com/thephpleague/csv/compare/9.7.1...9.7.2\n[9.7.1]: https://github.com/thephpleague/csv/compare/9.7.0...9.7.1\n[9.7.0]: https://github.com/thephpleague/csv/compare/9.6.2...9.7.0\n[9.6.2]: https://github.com/thephpleague/csv/compare/9.6.1...9.6.2\n[9.6.1]: https://github.com/thephpleague/csv/compare/9.6.0...9.6.1\n[9.6.0]: https://github.com/thephpleague/csv/compare/9.5.0...9.6.0\n[9.5.0]: https://github.com/thephpleague/csv/compare/9.4.1...9.5.0\n[9.4.1]: https://github.com/thephpleague/csv/compare/9.4.0...9.4.1\n[9.4.0]: https://github.com/thephpleague/csv/compare/9.3.0...9.4.0\n[9.3.0]: https://github.com/thephpleague/csv/compare/9.2.1...9.3.0\n[9.2.1]: https://github.com/thephpleague/csv/compare/9.2.0...9.2.1\n[9.2.0]: https://github.com/thephpleague/csv/compare/9.1.4...9.2.0\n[9.1.4]: https://github.com/thephpleague/csv/compare/9.1.3...9.1.4\n[9.1.3]: https://github.com/thephpleague/csv/compare/9.1.2...9.1.3\n[9.1.2]: https://github.com/thephpleague/csv/compare/9.1.1...9.1.2\n[9.1.1]: https://github.com/thephpleague/csv/compare/9.1.0...9.1.1\n[9.1.0]: https://github.com/thephpleague/csv/compare/9.0.1...9.1.0\n[9.0.1]: https://github.com/thephpleague/csv/compare/9.0.0...9.0.1\n[9.0.0]: https://github.com/thephpleague/csv/compare/8.2.2...9.0.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.064453125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 ignace nyamagana butera\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.89453125,
          "content": "# CSV\n\n[![Latest Version](https://img.shields.io/github/release/thephpleague/csv.svg?style=flat-square)](https://github.com/thephpleague/csv/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Build](https://github.com/thephpleague/csv/workflows/build/badge.svg)](https://github.com/thephpleague/csv/actions?query=workflow%3A%22build%22)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/csv.svg?style=flat-square)](https://packagist.org/packages/league/csv)\n\nCsv is a library to ease parsing, writing and filtering CSV in PHP. \nThe library goal is to be powerful while remaining lightweight,\nby utilizing PHP native classes whenever possible.\n\n## Highlights\n\n- Easy to use API\n- Read and Write to CSV documents in a memory efficient and scalable way\n- Support PHP stream filtering capabilities\n- Transform CSV documents into popular format (JSON, XML or HTML)\n- Fully documented\n- Fully unit tested\n- Framework-agnostic\n\n## Documentation\n\nFull documentation can be found at [csv.thephpleague.com](https://csv.thephpleague.com).\n\n## System Requirements\n\nYou need the `ext-filter` extension to use `Csv` and the latest stable version of PHP is recommended.\n\nPlease find below the PHP support for `Csv` version 9.\n\n| Min. Library Version | Min. PHP Version | Max. Supported PHP Version |\n|----------------------|------------------|----------------------------|\n| 9.0.0                | PHP 7.0.10       | PHP 7.1.x                  |\n| 9.1.2                | PHP 7.0.10       | PHP 7.2.x                  |\n| 9.2.0                | PHP 7.0.10       | PHP 7.4.x                  |\n| 9.6.0                | PHP 7.2.5        | PHP 7.4.x                  |\n| 9.6.2                | PHP 7.2.5        | PHP 8.0.x                  |\n| 9.7.0                | PHP 7.3.0        | PHP 8.0.x                  |\n| 9.7.3                | PHP 7.3.0        | PHP 8.1.x                  |\n| 9.8.0                | PHP 7.4.0        | PHP 8.1.x                  |\n| 9.9.0                | PHP 8.1.2        | PHP 8.x                    |\n\n## Install\n\nInstall `Csv` using Composer.\n\n```bash\ncomposer require league/csv:^9.0\n```\n\n## Configuration\n\n> [!WARNING]\n> **Starting with PHP8.4 Deprecation notices will be trigger if you do not explicitly set the escape parameter.**\n> see [Deprecation for PHP8.4](https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_proprietary_csv_escaping_mechanism) and [CSV and PHP8.4](https://nyamsprod.com/blog/csv-and-php8-4/)\n\n> [!TIP]\n> If your CSV document was created or is read on a **Legacy Macintosh computer**, add the following lines before \nusing the library to help [PHP detect line ending](http://php.net/manual/en/function.fgetcsv.php#refsect1-function.fgetcsv-returnvalues).\n\n```php\nif (!ini_get('auto_detect_line_endings')) {\n    ini_set('auto_detect_line_endings', '1');\n}\n```\n\n> [!WARNING]\n> **The ini setting is deprecated since PHP version 8.1 and will be removed in PHP 9.0**\n\n## Testing\n\nThe library has:\n\n- a [PHPUnit](https://phpunit.de) test suite.\n- a coding style compliance test suite using [PHP CS Fixer](https://cs.symfony.com/).\n- a code analysis compliance test suite using [PHPStan](https://github.com/phpstan/phpstan).\n\nTo run the tests, run the following command from the project folder.\n\n```bash\ncomposer test\n```\n\n## Contributing\n\nContributions are welcome and will be fully credited. Please see [CONTRIBUTING](.github/CONTRIBUTING.md) and [CONDUCT](.github/CODE_OF_CONDUCT.md) for details.\n\n## Security\n\nIf you discover any security related issues, please email nyamsprod@gmail.com instead of using the issue tracker.\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Credits\n\n- [ignace nyamagana butera](https://github.com/nyamsprod)\n- [All Contributors](https://github.com/thephpleague/csv/graphs/contributors)\n\n## License\n\nThe MIT License (MIT). Please see [LICENSE](LICENSE) for more information.\n"
        },
        {
          "name": "autoload.php",
          "type": "blob",
          "size": 0.3310546875,
          "content": "<?php\n\nrequire __DIR__ . '/src/functions_include.php';\n\nspl_autoload_register(static function (string $class): void {\n    if (!str_starts_with($class, 'League\\Csv\\\\')) {\n        return;\n    }\n\n    $file = __DIR__ . '/src/' . str_replace('\\\\', '/', substr($class, 11)).'.php';\n    if (is_readable($file)) {\n        require $file;\n    }\n});\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.7958984375,
          "content": "{\n    \"name\": \"league/csv\",\n    \"type\": \"library\",\n    \"description\" : \"CSV data manipulation made easy in PHP\",\n    \"keywords\": [\"csv\", \"import\", \"export\", \"read\", \"write\", \"filter\", \"convert\", \"transform\"],\n    \"license\": \"MIT\",\n    \"homepage\" : \"https://csv.thephpleague.com\",\n    \"authors\": [\n        {\n            \"name\" : \"Ignace Nyamagana Butera\",\n            \"email\" : \"nyamsprod@gmail.com\",\n            \"homepage\" : \"https://github.com/nyamsprod/\",\n            \"role\" : \"Developer\"\n        }\n    ],\n    \"support\": {\n        \"docs\": \"https://csv.thephpleague.com\",\n        \"issues\": \"https://github.com/thephpleague/csv/issues\",\n        \"rss\": \"https://github.com/thephpleague/csv/releases.atom\",\n        \"source\": \"https://github.com/thephpleague/csv\"\n    },\n    \"funding\": [\n        {\n            \"type\": \"github\",\n            \"url\": \"https://github.com/sponsors/nyamsprod\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1.2\",\n        \"ext-filter\": \"*\"\n    },\n    \"require-dev\": {\n        \"ext-dom\": \"*\",\n        \"ext-xdebug\": \"*\",\n        \"friendsofphp/php-cs-fixer\": \"^3.64.0\",\n        \"phpbench/phpbench\": \"^1.3.1\",\n        \"phpstan/phpstan\": \"^1.12.11\",\n        \"phpstan/phpstan-deprecation-rules\": \"^1.2.1\",\n        \"phpstan/phpstan-phpunit\": \"^1.4.1\",\n        \"phpstan/phpstan-strict-rules\": \"^1.6.1\",\n        \"phpunit/phpunit\": \"^10.5.16 || ^11.4.3\",\n        \"symfony/var-dumper\": \"^6.4.8 || ^7.1.8\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\Csv\\\\\": \"src/\"\n        },\n        \"files\": [\"src/functions_include.php\"]\n    },\n    \"scripts\": {\n        \"benchmark\": \"phpbench run src --report=default\",\n        \"phpcs\": \"PHP_CS_FIXER_IGNORE_ENV=1 php-cs-fixer fix -vvv --diff --dry-run --allow-risky=yes --ansi\",\n        \"phpcs:fix\": \"php-cs-fixer fix -vvv --allow-risky=yes --ansi\",\n        \"phpstan\": \"phpstan analyse -c phpstan.neon --ansi --memory-limit=256M\",\n        \"phpunit\": \"XDEBUG_MODE=coverage phpunit --coverage-text\",\n        \"phpunit:min\": \"phpunit --no-coverage\",\n        \"test\": [\n            \"@phpunit\",\n            \"@phpstan\",\n            \"@phpcs\"\n        ]\n    },\n    \"scripts-descriptions\": {\n        \"benchmark\": \"Runs benchmarks on writing and reader CSV documents\",\n        \"phpcs\": \"Runs coding style test suite\",\n        \"phpstan\": \"Runs complete codebase static analysis\",\n        \"phpunit\": \"Runs unit and functional testing\",\n        \"test\": \"Runs full test suite\"\n    },\n    \"suggest\": {\n        \"ext-iconv\" : \"Needed to ease transcoding CSV using iconv stream filters\",\n        \"ext-dom\" : \"Required to use the XMLConverter and the HTMLConverter classes\",\n        \"ext-mbstring\": \"Needed to ease transcoding CSV using mb stream filters\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"9.x-dev\"\n        }\n    },\n    \"config\": {\n        \"sort-packages\": true\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpbench.json",
          "type": "blob",
          "size": 0.21875,
          "content": "{\n    \"$schema\": \"vendor/phpbench/phpbench/phpbench.schema.json\",\n    \"runner.bootstrap\": \"vendor/autoload.php\",\n    \"runner.path\": \"benchmarks\",\n    \"runner.file_pattern\": \"*Bench.php\",\n    \"runner.php_disable_ini\": true\n}\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.7177734375,
          "content": "includes:\n    - vendor/phpstan/phpstan-deprecation-rules/rules.neon\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n    - vendor/phpstan/phpstan-phpunit/rules.neon\nparameters:\n    ignoreErrors:\n        - identifier: missingType.generics\n        - identifier: missingType.iterableValue\n        - '#implements deprecated interface League\\\\Csv\\\\ByteSequence#'\n        - '#Attribute class Deprecated does not exist.#'\n        - '#Parameter \\#4 \\$params of function stream_filter_(pre|ap)pend expects array, mixed given#'\n    level: max\n    paths:\n        - src\n    reportUnmatchedIgnoredErrors: true\n    treatPhpDocTypesAsCertain: false\n    parallel:\n        processTimeout: 300.0\n\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.0830078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.3/phpunit.xsd\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <coverage>\n    <report>\n      <clover outputFile=\"build/clover.xml\"/>\n      <html outputDirectory=\"build/coverage\"/>\n      <xml outputDirectory=\"build/coverage-xml\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"CSV Test Suite\">\n      <directory suffix=\"Test.php\">src</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/junit.xml\"/>\n  </logging>\n  <source>\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n    <exclude>\n      <directory suffix=\"Test.php\">src</directory>\n      <directory suffix=\"TestCase.php\">src</directory>\n      <directory suffix=\"Bench.php\">src</directory>\n      <directory suffix=\"_include.php\">src</directory>\n    </exclude>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_files",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}