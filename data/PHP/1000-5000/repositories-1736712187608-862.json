{
  "metadata": {
    "timestamp": 1736712187608,
    "page": 862,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Seldaek/jsonlint",
      "stars": 1324,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.19140625,
          "content": ".gitattributes export-ignore\n.github export-ignore\n.gitignore export-ignore\nphpstan.neon.dist export-ignore\nphpstan-baseline.neon export-ignore\nphpunit.xml.dist export-ignore\n/tests export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "vendor\ncomposer.lock\ncomposer.phar\n.phpunit.result.cache"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.4443359375,
          "content": "You can find newer changelog entries in [GitHub releases](https://github.com/Seldaek/jsonlint/releases)\n\n### 1.10.0 (2023-05-11)\n\n  * Added ALLOW_COMMENTS flag to parse while allowing (and ignoring) inline `//` and multiline `/* */` comments in the JSON document (#81)\n\n### 1.9.0 (2022-04-01)\n\n  * Internal cleanups and type fixes\n\n### 1.8.1 (2020-08-13)\n\n  * Added type annotations\n\n### 1.8.0 (2020-04-30)\n\n  * Improved lexer performance\n  * Added (tentative) support for PHP 8\n  * Fixed wording of error reporting for invalid strings when the error happened after the 20th character\n\n### 1.7.2 (2019-10-24)\n\n  * Fixed issue decoding some unicode escaped characters (for \" and ')\n\n### 1.7.1 (2018-01-24)\n\n  * Fixed PHP 5.3 compatibility in bin/jsonlint\n\n### 1.7.0 (2018-01-03)\n\n  * Added ability to lint multiple files at once using the jsonlint binary\n\n### 1.6.2 (2017-11-30)\n\n  * No meaningful public changes\n\n### 1.6.1 (2017-06-18)\n\n  * Fixed parsing of `0` as invalid\n\n### 1.6.0 (2017-03-06)\n\n  * Added $flags arg to JsonParser::lint() to take the same flag as parse() did\n  * Fixed backtracking performance issues on long strings with a lot of escaped characters\n\n### 1.5.0 (2016-11-14)\n\n  * Added support for PHP 7.1 (which converts `{\"\":\"\"}` to an object property called `\"\"` and not `\"_empty_\"` like 7.0 and below).\n\n### 1.4.0 (2015-11-21)\n\n  * Added a DuplicateKeyException allowing for more specific error detection and handling\n\n### 1.3.1 (2015-01-04)\n\n  * Fixed segfault when parsing large JSON strings\n\n### 1.3.0 (2014-09-05)\n\n  * Added parsing to an associative array via JsonParser::PARSE_TO_ASSOC\n  * Fixed a warning when rendering parse errors on empty lines\n\n### 1.2.0 (2014-07-20)\n\n  * Added support for linting multiple files at once in bin/jsonlint\n  * Added a -q/--quiet flag to suppress the output\n  * Fixed error output being on STDOUT instead of STDERR\n  * Fixed parameter parsing\n\n### 1.1.2 (2013-11-04)\n\n  * Fixed handling of Unicode BOMs to give a better failure hint\n\n### 1.1.1 (2013-02-12)\n\n  * Fixed handling of empty keys in objects in certain cases\n\n### 1.1.0 (2012-12-13)\n\n  * Added optional parsing of duplicate keys into key.2, key.3, etc via JsonParser::ALLOW_DUPLICATE_KEYS\n  * Improved error reporting for common mistakes\n\n### 1.0.1 (2012-04-03)\n\n  * Added optional detection and error reporting for duplicate keys via JsonParser::DETECT_KEY_CONFLICTS\n  * Added ability to pipe content through stdin into bin/jsonlint\n\n### 1.0.0 (2012-03-12)\n\n  * Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2011 Jordi Boggiano\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.423828125,
          "content": "JSON Lint\n=========\n\n[![Build Status](https://github.com/Seldaek/jsonlint/actions/workflows/continuous-integration.yml/badge.svg)](https://github.com/Seldaek/jsonlint/actions/workflows/continuous-integration.yml)\n\nUsage\n-----\n\n```php\nuse Seld\\JsonLint\\JsonParser;\n\n$parser = new JsonParser();\n\n// returns null if it's valid json, or a ParsingException object.\n$parser->lint($json);\n\n// Call getMessage() on the exception object to get\n// a well formatted error message error like this\n\n// Parse error on line 2:\n// ... \"key\": \"value\"    \"numbers\": [1, 2, 3]\n// ----------------------^\n// Expected one of: 'EOF', '}', ':', ',', ']'\n\n// Call getDetails() on the exception to get more info.\n\n// returns parsed json, like json_decode() does, but slower, throws\n// exceptions on failure.\n$parser->parse($json);\n```\n\nYou can also pass additional flags to `JsonParser::lint/parse` that tweak the functionality:\n\n- `JsonParser::DETECT_KEY_CONFLICTS` throws an exception on duplicate keys.\n- `JsonParser::ALLOW_DUPLICATE_KEYS` collects duplicate keys. e.g. if you have two `foo` keys they will end up as `foo` and `foo.2`.\n- `JsonParser::PARSE_TO_ASSOC` parses to associative arrays instead of stdClass objects.\n- `JsonParser::ALLOW_COMMENTS` parses while allowing (and ignoring) inline `//` and multiline `/* */` comments in the JSON document.\n- `JsonParser::ALLOW_DUPLICATE_KEYS_TO_ARRAY` collects duplicate keys. e.g. if you have two `foo` keys the `foo` key will become an object (or array in assoc mode) with all `foo` values accessible as an array in `$result->foo->__duplicates__` (or `$result['foo']['__duplicates__']` in assoc mode).\n\nExample:\n\n```php\n$parser = new JsonParser;\ntry {\n    $parser->parse(file_get_contents($jsonFile), JsonParser::DETECT_KEY_CONFLICTS);\n} catch (DuplicateKeyException $e) {\n    $details = $e->getDetails();\n    echo 'Key '.$details['key'].' is a duplicate in '.$jsonFile.' at line '.$details['line'];\n}\n```\n\n> **Note:** This library is meant to parse JSON while providing good error messages on failure. There is no way it can be as fast as php native `json_decode()`.\n>\n> It is recommended to parse with `json_decode`, and when it fails parse again with seld/jsonlint to get a proper error message back to the user. See for example [how Composer uses this library](https://github.com/composer/composer/blob/56edd53046fd697d32b2fd2fbaf45af5d7951671/src/Composer/Json/JsonFile.php#L283-L318):\n\n\nInstallation\n------------\n\nFor a quick install with Composer use:\n\n```bash\ncomposer require seld/jsonlint\n```\n\nJSON Lint can easily be used within another app if you have a\n[PSR-4](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md)\nautoloader, or it can be installed through [Composer](https://getcomposer.org/)\nfor use as a CLI util.\nOnce installed via Composer you can run the following command to lint a json file or URL:\n\n    $ bin/jsonlint file.json\n\nRequirements\n------------\n\n- PHP 5.3+\n- [optional] PHPUnit 3.5+ to execute the test suite (phpunit --version)\n\nSubmitting bugs and feature requests\n------------------------------------\n\nBugs and feature request are tracked on [GitHub](https://github.com/Seldaek/jsonlint/issues)\n\nAuthor\n------\n\nJordi Boggiano - <j.boggiano@seld.be> - <http://twitter.com/seldaek>\n\nLicense\n-------\n\nJSON Lint is licensed under the MIT License - see the LICENSE file for details\n\nAcknowledgements\n----------------\n\nThis library is a port of the JavaScript [jsonlint](https://github.com/zaach/jsonlint) library.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7353515625,
          "content": "{\n    \"name\": \"seld/jsonlint\",\n    \"description\": \"JSON Linter\",\n    \"keywords\": [\"json\", \"parser\", \"linter\", \"validator\"],\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jordi Boggiano\",\n            \"email\": \"j.boggiano@seld.be\",\n            \"homepage\": \"https://seld.be\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^5.3 || ^7.0 || ^8.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^4.8.35 || ^5.7 || ^6.0 || ^8.5.13\",\n        \"phpstan/phpstan\": \"^1.11\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Seld\\\\JsonLint\\\\\": \"src/Seld/JsonLint/\" }\n    },\n    \"bin\": [\"bin/jsonlint\"],\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\",\n        \"phpstan\": \"vendor/bin/phpstan analyse\"\n    }\n}\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 0.759765625,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Cannot access offset 1 on array\\\\|bool\\\\|float\\\\|int\\\\|stdClass\\\\|string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Seld/JsonLint/JsonParser.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Seld\\\\\\\\JsonLint\\\\\\\\JsonParser\\\\:\\\\:\\\\$vstack \\\\(list\\\\<array\\\\|bool\\\\|float\\\\|int\\\\|stdClass\\\\|string\\\\|null\\\\>\\\\) does not accept non\\\\-empty\\\\-array\\\\<int\\\\<\\\\-3, max\\\\>, array\\\\|bool\\\\|float\\\\|int\\\\|stdClass\\\\|string\\\\|null\\\\>\\\\.$#\"\n\t\t\tcount: 4\n\t\t\tpath: src/Seld/JsonLint/JsonParser.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Seld\\\\\\\\JsonLint\\\\\\\\JsonParser\\\\:\\\\:\\\\$vstack \\\\(list\\\\<array\\\\|bool\\\\|float\\\\|int\\\\|stdClass\\\\|string\\\\|null\\\\>\\\\) does not accept non\\\\-empty\\\\-array\\\\<int\\\\<\\\\-3, max\\\\>, mixed\\\\>\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Seld/JsonLint/JsonParser.php\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.283203125,
          "content": "includes:\n    - phpstan-baseline.neon\n    - vendor/phpstan/phpstan/conf/bleedingEdge.neon\n\nparameters:\n    level: 8\n\n    treatPhpDocTypesAsCertain: false\n\n    paths:\n        - src/\n        - tests/\n\n    ignoreErrors:\n        - '/Method JsonParserTest::[a-zA-Z0-9]+\\(\\) has no return type/'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.66796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         syntaxCheck=\"false\"\n         bootstrap=\"tests/bootstrap.php\"\n>\n    <testsuites>\n        <testsuite name=\"JSON Lint Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./src/Seld/JsonLint/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}