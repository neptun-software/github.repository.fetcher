{
  "metadata": {
    "timestamp": 1736711863265,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "postaddictme/instagram-php-scraper",
      "stars": 3122,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.103515625,
          "content": ".idea\nvendor/\ncomposer.phar\ncomposer.lock\n.DS_Store\nphpunit.phar\ntests/sessions\nphpunit.xml\nsettings.json\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 2.6123046875,
          "content": "                   Instagram PHP Scraper Change Log\n                   ================================\nVersion v0.4.5\n--------------\n- Enh: BIG thing. Get best resolutions for medias possible\n\nVersion v0.4.4\n--------------\n- Bug: Image urls broken for some medias in getMediaByCode()\n\nVersion v0.4.3\n--------------\n- Enh: Make methods getContentsFromUrl() and generateRandomString() static\n\nVersion v0.4.2\n--------------\n- Bug: Fix 405 error with fetching accounts by id\n- Bug: Fix 405 error with fetching comments by id\n\nVersion v0.4.1\n--------------\n- Enh: Url encode endpoints to support for example Japan language\n\nVersion v0.4.0\n--------------\n- Enh: New methods to paginate medias getPaginateMedias() and getPaginateMediasByTag()\n\nVersion v0.3.5\n--------------\n- Enh: Convenient media pagination getMediasByTag()\n\nVersion v0.3.4\n--------------\n- Bug: Fix media urls\n\nVersion v0.3.3\n--------------\n- Bug: Include class Location and Comment in InstagramScraper.php\n- Enh: Add locationId\n\nVersion v0.3.2\n--------------\n- Enh: Add phpunit tests\n- Bug: Check if video views exist in Media::fromApi() method\n- Enh: Add getLocationTopMediasById() method\n- Enh: Add getLocationMediasById() method\n- Enh: Add Location model and getLocationById method\n\nVersion v0.3.1\n--------------\n- Enh: Add locationName property to Media\n\nVersion v0.3.0\n--------------\n- Enh: Change all methods in Instagram class to static\n- Enh: Add Instagram::getMediaCommentsByCode(). From now you can download ALL comments from media. (Tested on 8000 comments)\n- Enh: Add Instagram::getMediaCommentsById(). Same as above but with mediaId.\n\nVersion v0.2.6\n--------------\n- Enh: Include Tag class\n- Enh: Clean image urls in fromTagPage() method\n- Enh: Add getTopMediasByTagName() method\n- Enh: New type of URLs\n- Enh: Add methods: Media::getIdFromCode()\n- Enh: Add methods: Instagram::getMediaById()\n- Enh: Fixes #15. Add likesCount, commentsCount properties.\n\nVersion v0.2.5\n--------------\n- Enh: Add method. Search accounts by username\n- Enh: Add method. Search tags by tag name\n\nVersion v0.2.4\n--------------\n- Bug: Fix when pagination return only first page and never the rest\n\nVersion v0.2.3\n--------------\n- Bug: Require library with composer\n\nVersion v0.2.2\n--------------\n- Enh: Remove concatenation in constants to support PHP versions before 5.6\n- Bug: In pagination in getMediasByTag() and getMedias() methods\n\nVersion v0.2.1\n--------------\n- Bug: Include Endpoints class\n\nVersion v0.2.0\n--------------\n- Enh: New way of scraping data\n- Enh: New method getMediasByTag() available\n- Enh: Moved models and exceptions to own packages\n- Enh: Add Endpoints class to store and generate endpoint links"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.041015625,
          "content": "Add getPaginateMediasByLocationId Function"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "MIT License\n\nCopyright (c) 2016-2019 Raiymbek Kapishev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.388671875,
          "content": "# Instagram PHP Scraper\nThis library is based on the Instagram web version. We develop it because nowadays it is hard to get an approved Instagram application. The purpose is to support every feature that the web desktop and mobile version support. \n\n## Dependencies\n- PHP >= 7.2\n- [PSR-16](http://www.php-fig.org/psr/psr-16/)\n- [PSR-18](http://www.php-fig.org/psr/psr-18/)\n\n\n## Code Example\n```php\nuse Phpfastcache\\Helper\\Psr16Adapter;\n\n$instagram = \\InstagramScraper\\Instagram::withCredentials(new \\GuzzleHttp\\Client(), 'username', 'password', new Psr16Adapter('Files'));\n$instagram->login();\n$account = $instagram->getAccountById(3);\necho $account->getUsername();\n```\n\nSome methods do not require authentication: \n```php\n$instagram = new \\InstagramScraper\\Instagram(new \\GuzzleHttp\\Client());\n$nonPrivateAccountMedias = $instagram->getMedias('kevin');\necho $nonPrivateAccountMedias[0]->getLink();\n```\n\nIf you use authentication it is recommended to cache the user session. In this case you don't need to run the `$instagram->login()` method every time your program runs:\n\n```php\nuse Phpfastcache\\Helper\\Psr16Adapter;\n\n$instagram = \\InstagramScraper\\Instagram::withCredentials(new \\GuzzleHttp\\Client(), 'username', 'password', new Psr16Adapter('Files'));\n$instagram->login(); // will use cached session if you want to force login $instagram->login(true)\n$instagram->saveSession();  //DO NOT forget this in order to save the session, otherwise have no sense\n$account = $instagram->getAccountById(3);\necho $account->getUsername();\n```\n\nUsing proxy for requests:\n\n```php\n// https://docs.guzzlephp.org/en/stable/request-options.html#proxy\n$instagram = new \\InstagramScraper\\Instagram(new \\GuzzleHttp\\Client(['proxy' => 'tcp://localhost:8125']));\n// Request with proxy\n$account = $instagram->getAccount('kevin');\n\\InstagramScraper\\Instagram::setHttpClient(new \\GuzzleHttp\\Client());\n// Request without proxy\n$account = $instagram->getAccount('kevin');\n```\n\n## Installation\n\n### Using composer\n\n```sh\ncomposer.phar require raiym/instagram-php-scraper phpfastcache/phpfastcache\n```\nor \n```sh\ncomposer require raiym/instagram-php-scraper phpfastcache/phpfastcache\n```\n\n### If you don't have composer\nYou can download it [here](https://getcomposer.org/download/).\n\n## Examples\nSee examples [here](https://github.com/postaddictme/instagram-php-scraper/tree/master/examples).\n\n## Other\nJava library: https://github.com/postaddictme/instagram-java-scraper\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.927734375,
          "content": "{\n  \"name\": \"raiym/instagram-php-scraper\",\n  \"description\": \"Instagram PHP Scraper. Get account information, photos and videos without any authorization\",\n  \"keywords\": [\n    \"instagram\",\n    \"scraper\"\n  ],\n  \"type\": \"library\",\n  \"homepage\": \"https://github.com/raiym/instagram-php-scraper\",\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"raiym\",\n      \"email\": \"r.kapishev@gmail.com\"\n    }\n  ],\n  \"require\": {\n    \"php\": \">=7.2\",\n    \"ext-curl\": \"*\",\n    \"ext-json\": \"*\",\n    \"psr/simple-cache\": \">=1.0\",\n    \"psr/http-client\": \"~1.0\",\n    \"guzzlehttp/psr7\": \"^1.7\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^7.0\",\n    \"phpfastcache/phpfastcache\": \"^7.1\",\n    \"guzzlehttp/guzzle\": \"^7.2\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"InstagramScraper\\\\\": \"src/InstagramScraper/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"InstagramScraper\\\\Tests\\\\\": \"tests/\"\n    }\n  },\n  \"support\": {\n    \"email\": \"r.kapishev@gmail.com\"\n  }\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.36328125,
          "content": "<phpunit\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/5.5/phpunit.xsd\"\n         bootstrap=\"./vendor/autoload.php\"\n         >\n    <php>\n        <env name=\"LOGIN\" value=\"raiym\"/>\n        <env name=\"PASSWORD\" value=\"redacted\"/>\n        <env name=\"USER_AGENT\" value=\"\"/>\n    </php>\n</phpunit>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}