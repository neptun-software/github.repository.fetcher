{
  "metadata": {
    "timestamp": 1736711912738,
    "page": 306,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phoronix-test-suite/phoronix-test-suite",
      "stars": 2575,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.4091796875,
          "content": "Michael Larabel <Michael@phoronix.com> <michael@phx-laptop.(none)>\nMichael Larabel <Michael@phoronix.com> <michael@phoronix.com>\nMichael Larabel <Michael@phoronix.com> <michael@phxmichael.hsd1.il.comcast.net>\nMichael Larabel <Michael@phoronix.com> <michael@mubuntu.(none)>\nMichael Larabel <Michael@phoronix.com> <michaellarabel@users.noreply.github.com>\nMichael Larabel <Michael@phoronix.com> <Michael AT phoronix.com>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.279296875,
          "content": "Copyright 2008 - 2024 by Phoronix Media.\n\nLead Architects:\n\n- Michael Larabel <michael@phoronix.com>\n- Matthew Tippett <matthew@phoronix.com>\n\nThere's also other individuals and organizations who have contributed patches, ideas, and made other contributions to the Phoronix Test Suite.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 126.7060546875,
          "content": "PHORONIX TEST SUITE CHANGE-LOG\n\nPhoronix Test Suite 10.8.5\n[GIT]\n\npts-core: PHP 8.2/8.3 warning fixes\npts-core: Various bug fixes\nphodevi: Hardware/software detection updates\n\nPhoronix Test Suite 10.8.4\n3 July 2022\n\npts-core: Allow sub-folders within PTS_EXTRA_SYSTEM_LOGS_DIR when uploading to Phoromatic server\npts-core: Fix TOTAL_LOOP_TIME handling\npts-core: openSUSE external dependency handling fixes\nphodevi: Support for reporting video BIOS version\nphodevi: Budgie desktop version detection\nphodevi: Avoid deprecated wmic usage on Windows\nphoromatic: Input sanitization updates in the result viewer\n\nPhoronix Test Suite 10.8.3\n23 April 2022\n\npts-core: Workaround Ubuntu 22.04 apt-get crashing the entire process on dependency installation\npts-core: Improved TTF font file detection\npts-core: Minor random fixes\nphodevi: Apple M1 detection on Linux\n\nPhoronix Test Suite 10.8.2\n13 February 2022\n\npts-core: Arch Linux external dependency updates\npts-core: Workaround/fix PHP 5.4 usage with RHEL7-based distributions\npts-core: Convert compiler / multicore / single-threaded test suites into virtual test suites since their properties can be auto-determined based on OB metadata to avoid manually maintaining them\npts-core: Add virtual test suites for \"riscv\" and \"aarch64\" to make it easy to show test profiles that can run successfully on RISC-V and 64-bit Arm hardware\nphodevi: Improved detection for components found on the Steam Deck and other hardware\nphodevi: Add Arm Cortex-X1C detection\nphodevi: CPU temperature reporting for additional SoCs such as the Raspberry Pi 400\nphoromatic: Additional input sanitization and validation improvements\n\nPhoronix Test Suite 10.8.1\n23 January 2022\n\npts-core: Log external dependencies attempted to be installed to phoronix-test-suite-dependencies.log\npts-core: Allow PTS_DISPLAY_MODE to override other display mode preferences (e.g. short mode requested inline)\npts-core: Optional Download Cache Server interface support for HTTPS\npts-core: Support for archiving test profile change-logs locally rather than having to always query OpenBenchmarking.org server\npts-core: Allow caching of some OpenBenchmarking.org overview metrics locally for reducing repetitive OpenBenchmarking.org load/queries\npts-core: Allow displaying more overview metrics from OpenBenchmarking.org in the web view and info sub-command now that it's cached\npts-core: Make rendering of Perf Per Core/Thread/Clock/RAM opt-in from the result viewer\nphoromatic: Allow binary log file uploads by default when Phoromatic Server is 10.8+\nphoromatic: Input sanitization updates for Phoromatic Server and other security improvements\nphoromatic: Move \"Create A Test Profile\" page behind an opt-in rootadmin Phoromatic Server option\nphoromatic: Log update script output\nphodevi: GPU vRAM usage reporting for modern AMDGPU DRM versions\nphodevi: Use \"-NoProfile\" with powershell for possible performance benefits\nphodevi: Avoid including kernel version in Mesa/OpenGL string\nphodevi: Arm Neoverse-V1 / Cortex-X2 identification\n\nPhoronix Test Suite 10.8.0\n25 December 2021\n\npts-core: Remaining PHP 8.1 warnings/fixes addressed\npts-core: Various macOS 12 warning fixes\npts-core: Allow using OUTPUT_DIR / OUTPUT_FILE environment variables to control result-file-to* sub-commands\npts-core: Improved JSON output generation, add option to the result viewer\npts-core: Add result-file-to-html sub-command and simple inline HTML result output option from result viewer\npts-core: Allow sorting results by test date/time\npts-core: Add TEST_EXECUTION_SORT environment variable to allow sorting test run order in more ways\npts-core: Consolidate/centralize handling of environment variable options to pts_env\npts-core: Add remove-incomplete-results-from-result-file helper command to remove results with incomplete or missing data\npts-core: Add REMOVE_TESTS_ON_COMPLETION environment variable as another way to have tests auto-uninstall/remove after running\npts-core: Improved test installation / test run-time error reporting and detection\npts-core: Allow recording/archiving install and runtime errors within installation metadata\npts-core: Add list-failed-installs sub-command for showing tests that failed to install\npts-core: Add list-test-errors sub-command for showing test run-time errors\npts-core: Add variables sub-command for showing environment variable descriptions and what is set\npts-core: Dynamic detection of Windows download folder location\npts-core: Improved Zip handling on Windows\nphodevi: Add detection for Arm Cortex-A710 and Neoverse-N2 cores\nphodevi: Add detection for AMD Zen 4 cores\nphodevi: Add detection for Intel Raptor Lake\nphodevi: Allow better detecting model number on Windows/Linux for Dell and Apple laptops\nphodevi: CPU temperature monitoring on Windows\nphodevi: Show \"energy_performance_preference\" CPU frequency scaling value where relevant\nphodevi: Linux CPUFreq EPP reporting support\nphodevi: Report Windows 10+ security features\nphodevi: Add PHODEVI_SANITIZE environment variable for those wanting to strip out certain hardware/software strings from system information\ncleanup: Add module that can auto uninstall tests not run in a given amount of time\nphoromatic: Allow relevant PTS environment variables to be exposed for setting by Phoromatic Server for benchmarks/schedules as \"advanced options\" area\nphoromatic: Use the unified result viewer code for presenting result graphs and other result page data\nphoromatic: Make use of shared/common result viewer code to allow adding/editing annotations, editing result file title/description, and deleting individual results from within the result viewer\nphoromatic: Efficiency improvement for when viewing result with just one result file\nphoromatic: Allow Phoromatic client to connect to Phoromatic HTTPS servers\nphoromatic: Allow optionally uploading test install/run logs to the Phoromatic Server\nphoromatic: Alow \"Run A Benchmark\" area to execute conventional PTS/system test suites\nphoromatic: Allow test schedules page to add suites to a schedule rather than only adding just test profiles\nphoromatic: Add option to settings page to always un-install/remove tests after execution for all Phoromatic testing\nphoromatic: Allow environment variables to also be set on a global basis from the Phoromatic Server Settings page\nphoromatic: Allow test installation metadata to be submitted to Phoromatic Server so from systems area can show currently installed tests and any errors\nphoromatic: Opt-in (settings page) support for streaming in-progress benchmark results to the Phoromatic Server between test runs so results can be viewed from the server as they are completed\nphoromatic: Unifying more result viewer and Phoromatic common display code\n\nPhoronix Test Suite 10.6.1\n10 October 2021\n\npts-core: Allow reporting test run errors inline / as part of the result file XML with null/empty results\npts-core: Remove the old, long deprecated static/JavaScript PTS result viewer that hasn't been used except for rare fallbacks since PTS pre-9.0\npts-core: PHP 8.1 deprecation warning/error fixes\npts-core: Support launching PHP web server with PHP_CLI_SERVER_WORKERS to allow multiple workers/threads\npts-core: Windows batch file handling test execution fix\npts-core: Allow running merge-results when pointing to specific XML files outside of standard paths\npts-core: Various minor fixes\nphoromatic: Fix possible case of local test profile download issues from Phoromatic Server\nphoromatic: Warn when lacking database write access for Phoromatic Server\nphoromatic: Support (opt-in) handling of non-text file log files\nphoromatic: Allow uploading of system logs after initial upload of result XML to deal with HTTP size limitations and other factors with large logs\nphoromatic: Use the unified/common log viewer for viewing logs from the Phoromatic web interface\nphoromatic: Tweaking of the Phoromatic CSS style to bring it more uniform with OpenBenchmarking.org / PTS Local Result Viewer / first update in ~6 years...\nphodevi: Improve detection of new Intel oneAPI DPC++/C++ Compiler\nphodevi: ACPI Platform Profile reporting support on Linux\nphodevi: Support reporting NVIDIA BAR1 total memory / Radeon vRAM visible memory (Resizable BAR / ReBAR status)\n\nPhoronix Test Suite 10.4.0\n16 May 2021\n\npts-core: Ubuntu 21.04 dependency updates for changed/removed package names\npts-core: Add \"auto-resolution-wide\" option\npts-core: Add $CPU_THREADS_PER_CORE helper\npts-core: Allow perf-per-dollar-per-hour in the result viewer, extending perf-per-dollar HTML helper\npts-core: Add PTS_EXTRA_SYSTEM_LOGS_DIR environment variable to allow pointing to directory of extra system log files\npts-core: Add RepositoryURL option for test profiles\nphodevi: Intel Linux graphics string format improvement\nphoromatic: Treat set context scripts as a file rather than executing it as a buffer\nphoromatic: Allow passing Phodevi system properties to Phoromatic Server\nphodevi: Add some new properties, port some pts_network info to phodevi interfaces\nsystem_monitor: Adjust perf-per precision\n\nPhoronix Test Suite 10.4.0 Milestone 1\n17 March 2021\n\npts-core: Optimize out sorting percentile values array excess times\npts-core: Optimization to avoid re-parsing test profile definition multiple times\npts-core: Optimization to avoid re-parsing installed test metadata multiple times\npts-core: Allow longer HTTP timeouts on OpenBenchmarking.org result uploads if needed\npts-core: Allow sorting runs within a result file from within the result viewer web interface\n\nPhoronix Test Suite 10.2.2\n17 February 2021\n\npts-core: Add helper text when hitting a download with no working mirrors\npts-core: Various external dependency updates\npts-core: Add enable-repo sub-command for more easily enabling new OpenBenchmarking.org repos\npts-core: Result viewer fix for the limit drop down menu potentially not being activated in some cases\npts-core: Allow renaming runs within the result viewer\nphoromatic: Ensure pcntl_signal is present before starting Phoromatic Server\nphoromatic: PHP 8 compatibility fixes\nphodevi: Fix display driver name potentially being reported inaccurate for some obscure graphics cards / driver configurations\nphodevi: Export current GPU graphics card PCI device ID (GPU_DEVICE_ID) for some games/tests relying on it for configuration\n\nPhoronix Test Suite 10.2.1\n1 February 2021\n\npts-core: Add \"InstallRequiresInternet\" option for test profiles that is more narrow (install time only) than the existing \"RequiresInternet\"\npts-core: Add check-tests sub-command\npts-core: Fix possible crash on PDF output\npts-core: Various small fixes and tweaks\npts-core: Fix PHP8 + cURL download error\npts_Graph: A number of minor SVG standards compliance updates\nphodevi: Log Transparent Huge Pages setting as part of system details\nphodevi: Don't bother parsing the X.org log if it grows too big\n\nPhoronix Test Suite 10.2.0\n5 January 2021\n\npts-core: PHP8 detection improvements\npts-core: For estimated run time, avoid over-calculating time if test has no options but multiple outputs\npts-core: Updated (Open)Mandriva external dependencies\npts_Graph: Minor enhancements\nphodevi: Add support for reporting ACPI Platform Profile and INT340x Workload Hint\n\nPhoronix Test Suite 10.2.0 Milestone 3\n21 December 2020\n\npts-core: Add debug-unhandled-dependencies option\npts-core: Default to 2.5% std dev threshold default on new installs\npts-core: BSD external dependency updates\npts-core: Various refinements to the text user interface\npts-core: When a test profile hits a failed download / broken mirror, report that URL to OpenBenchmarking.org\nphodevi: Don't restore the Phodevi cache if the /etc/machine-id changed (or /etc/hostname as fallback)\n\nPhoronix Test Suite 10.2.0 Milestone 2\n6 December 2020\n\npts-core: Transition to new JSON-based data format for managing test install metadata while maintaining backwards compatibility with prior XML format\npts-core: Begin tracking test run-times per-hash (all configured test options) for more detailed time tracking and in turn time estimates on subsequent runs\npts-core: Increase compression factor when uploading benchmark results\npts-core: Last minute fixes for PHP 8.0 compatibility\nphodevi: Report if CPUFreq Boost enabled/disabled\nturbostat: Add TurboStat module to easily generate turbostat dumps on a per-test basis to log files\nphoromatic: Much faster web viewer performance especially with large databases\n\nPhoronix Test Suite 10.2.0 Milestone 1\n21 November 2020\n\npts-core: Log lock_stat, config.gz, dmidecode to system logs\npts-core: Only show Apple options when running on macOS\npts-core: Add extra safeguard around FORCE_TIMES_TO_RUN for disabling dynamic run count\nob_auto_compare: Intelligently choose more relevant reference results\nphodevi: macOS CPU temperature monitoring support\nphodevi: Support for reading WattsUp Pro power meter data directly without utility using WATTS_UP_METER=<USB TTY>\nphodevi: Report Google Compute Engine machine type as part of motherboard string\nphodevi: Add dumpe2fs to system logs when running on EXT4 and root\nphodevi: Add block size reporting\nphodevi: CPU power reporting for Ampere Altra\nphodevi: Various Ampere Altra hardware detection/reporting improvements\nphodevi: Support reading CPU package power consumption on macOS using powermetrics\n\nPhoronix Test Suite 10.0.1\n21 October 2020\n\npts-core: Fix for older versions of PHP such as in RHEL7\npts-core: Add Thermald version reporting to system table when active\nphodevi: Detection improvements for new CPUs\nphodevi: Avoid \"11th Gen Intel\" CPU string\nphodevi: Update for NVMe drive reporting with KIOXIA, Toshiba sometimes not reporting their brand first\n\nPhoronix Test Suite 10.0.0\n13 October 2020\n\npts-core: Ensure any post-run script is triggered still under halt-testing/skip-test conditions\npts-core: Allow batch processing of performance per dollar metrics\nphodevi: Add Intel AMX presence detection\nphodevi: Add detection for Intel Alder Lake, Jasper Lake, Sapphire Rapids, and others\nphoromatic: Ensure Windows tests get displayed even if running the Phoromatic Server on Linux\nflush_caches: Add module to flush system caches between runs\ntest_timeout: Add module to quit a test run if it exceeds a predefined time limit or 'auto' determination\n\nPhoronix Test Suite 10.0.0 Milestone 3\n1 October 2020\n\npts-core: Don't show Vulkan options if Vulkan support is known to be unavailable/broken\npts-core: Add OptionSelect tag support within test suite definitions\npts-core: Allow * wildcard match in FileCheck handling within external dependency XML\npts-core: Add \"OS\" TestType\npts-core: Various external dependency updates\npts-core: Continued tweaking to the analytics engine\nphodevi: Add Neoverse N2, Cortex-X1 detection and other Arm CPU updates\npts_Graph: Various improvements\n\nPhoronix Test Suite 10.0.0 Milestone 2\n12 September 2020\n\npts-core: Honor NO_COLOR environment variable for disabling terminal coloring\npts-core: Allow launching just the result viewer from systemd (phoronix-result-server.service)\npts-core: Result viewer UI tweaks\npts-core: Minor fixes\npts-core: Add RequiresRootInstall test profile option\npts-core: Result file text output tweaks\npts-core: More robust test result parsing in certain time formats\n\nPhoronix Test Suite 10.0.0 Milestone 1\n19 August 2020\n\npts-core: Add keep-results-in-result-file sub-command\npts-core: Split the dynamic result viewer into its own embed class for result file handling to allow for easy re-use by OpenBenchmarking, Phoromatic, etc\npts-core: Various changes for supporting the new OpenBenchmarking.org infrastructure\npts_Graph: Add histogram type\nphodevi: CPU core name / family detection to friendly strings (OpenBenchmarking.org driven)\nphodevi: Report core name via system-info command\nphodevi: Various storage HDD/SSD detection reporting improvements\nphodevi: Ampere Altra detection\nphodevi: macOS/Apple hardware detection improvements\n\nPhoronix Test Suite 9.8.0\n9 July 2020\n\npts-core: Handling of cases where all options are unsupported (such as CUDA and OpenCL tests with no valid backends found) to avoid prompts\npts-core: Be more liberal in allowing CUDA/OpenCL GPU compute tests to run fine without display server active\npts-core: Fix for not filling test suites of contained tests in some select cases (sub-suites listing in results viewer)\npts-core: Allow creating new virtual test suites that are not prefixed by a OB repository\nphodevi: NVIDIA GPU detection within WSL2\ndocker: Rewritten phoronix/pts Docker implementation based on Ubuntu 20.04 LTS\n\nPhoronix Test Suite 9.8.0 Milestone 2\n24 June 2020\n\npts-core: Add client side plumbing for estimated test install time from OpenBenchmarking.org\npts-core: Add estimate-install-time sub-command, show estimated install time when installing a test\npts-core: Improve web browser selection logic for result viewer\npts-core: Add search field to the result viewer areas for limiting based on title/argument matching\npts-core: Various minor fixes\npts-core: Don't show OpenCL test options if no OpenCL drivers/adapters appear present\nphodevi: Fix for incorrect monitor count when parsing X.Org log\nphodevi: Warning fixes for latest WSL\n\nPhoronix Test Suite 9.8.0 Milestone 1\n3 June 2020\n\npts-core: When an install fails, try a newer minor version update to that test profile if available (fixes broken download mirrors, etc)\npts-core: When a newer minor version of a test profile is installed and a requested (older) one is not, use the newer compatible version\npts-core: Rewrite virtual test suite implementation\npts-core: Add handler for ensuring reported system time is accurate, otherwise calculate current date/time using offsets\npts-core: When scanning test suites on disk, ensure the latest test suite version is used\npts-core: Add test-to-suite-map sub-command\npts-core: Fix for loading the result viewer JavaScript / CSS when running on a Windows host\npts-core: For tests requiring root but not run initially as root and using monitoring data, drop the first run to ensure sudo promot doesn't skew time\npts-core: Fix PHP8 error in the 'info' sub-command\npts-core: Other PHP deprecation code tweaks\nphodevi: Add amd_energy Linux driver support\n\nPhoronix Test Suite 9.6.1\n25 May 2020\n\npts-core: Show unit/scale in CSV export\npts-core: When limiting results to show in result viewer, keep child objects that match the desired type for the parent\npts-core: Add rebuild-test-suite option for regenerating suite XML all cleaned up\npts-core: Allow exporting result files to XML test suites via the result viewer\nlinux_perf: Reporting many more events\npts-core: External dependency updates\npts_Graph: graph code tweaks\nphodevi: Avoid macOS reporting X-Core string before Intel CPU string\nphodevi: Sway compositor version detection\nphodevi: Detection of newer Arm CPU cores\n\nPhoronix Test Suite 9.6.0\n21 April 2020\n\npts-core: Allow building virtual suites off external dependencies\npts-core: Various result viewer improvements\npts-core: Allow saving results under stress-run\npts-core: Responsive/mobile result viewer improvements\npts-core: Show local tests within the build-suite sub-command\npts-core: Show local suites within the list-installed-suites sub-command\npts_Graph: Restore capability for drawing mini graphs for all results in a result file overview\n\nPhoronix Test Suite 9.6.0 Milestone 3\n12 April 2020\n\npts-core: Allow automated per-thread/core/clock/RAM graphs within the result viewer\npts-core: Result viewer add \"Limit displaying results to tests within:\"\npts-core: From the result viewer allow \"Show Geometric Means Per-Suite/Category\"\npts-core: Add workload-topology sub-command\npts-core: Allow adding deprecated tests to build-suite\npts-core: CSV export improvements\npts-core: Add \"Do Not Show Results With Incomplete Data\" to the result viewer\npts-core: Allow test suite \"Status\" tag\npts-core: Don't report OB updates on deprecated tests or suites\n\nPhoronix Test Suite 9.6.0 Milestone 2\n5 April 2020\n\npts-core: Documentation updates\npts-core: External dependency updates\npts-core: Allow listing test profiles within the result viewer\npts-core: Allow listing test suites and test suite data within the result viewer\npts-core: Allow showing test profile information within the result viewer\npts-core: Various other updates to the result viewer\npts-core: Add vaapi as possible external dependency\nupdate_checker: Add message of the day support\n\nPhoronix Test Suite 9.6.0 Milestone 1\n24 March 2020\n\npts-core: Add new analyze-run-times sub-command\npts-core: Allow hiding results from within the result viewer\npts-core: Allow generating performance-per-dollar metrics from within the result file\npts-core: Allow showing system logs from the result viewer\npts-core: Allow showing test description within the result viewer\npts-core: Fixes for running the result viewer from a website sub directory in correctly loading assets\npts-core: Add result viewer option \"hide noisy results\"\npts-core: Add result viewer option \"hide results with little change/spread\"\npts-core: Add result viewer option \"only show results where X faster than Y\"\npts-core: Add XML export to result viewer export menu\npts-core: Support deleting runs from the result viewer\npts-core: Improve the print view from the result viewer\nphodevi: BSD tweaks/fixes\n\nPhoronix Test Suite 9.4.1\n4 March 2020\n\nVarious minor bug fixes and OpenBenchmarking.org cache update\n\nPhoronix Test Suite 9.4.0-Vestby\n25 February 2020\n\npts-core: Add option in the result viewer to allow compacting multi-option test results into single graphs\npts-core: Add option in the result viewer to allow compacting multi-version test results into single graphs\npts-core: Add Parent tag to result file schema for specifying relation to other result objects\npts-core: Report test profile support errors when intended\npts-core: Fix showing NVIDIA test options on non-Linux NVIDIA platforms\npts-core: Don't show delete/annotation options for dynamically generated result objects where those options are not relevant\npts-core: Allow showing performance-per-suite option within result viewer\npts_Graph: When going to PDF with GD library, just use the OB rather than temporary file\npts_Graph: Restore support for error bars on vertical bar graph rendering\npts_Graph: Support for simpler view / rendering without header/footer\n\nPhoronix Test Suite 9.4.0 Milestone 3\n18 February 2020\n\npts-core: Add PDF bookmarks to result graphs on PDF result file generation\npts-core: Add automated executive summary of result files via executive-summary sub-command and PDF result export\npts-core: Add remove-result-from-result-file sub-command (slightly different from remove-results-from-result-file)\npts-core: Set SaveTestLogs = TRUE by default\npts-core: Set SaveInstallationLogs = TRUE by default\npts-core: Refactor test-logs (SaveTestLogs) handling\npts-core: Refactor test installation logs handling\npts-core: More verbose reporting of system/external dependency solving status\npts-core: Get the modern result viewer working on Windows\npts-core: Support for showing test logs from the result viewer\npts-core: Support for showing install logs from the result viewer\npts-core: PDF output improvements\npts-core: Fix for some suites not showing up on list-suites sub-command\npts-core: Report \"Test Suites Containing This Test\" in the info sub-command on tests\npts-core: On PDF export allow showing geometric means of tests based on their test suite connections\npts-core: Add intersect sub-command for showing tests common between multiple results/suites\n\nPhoronix Test Suite 9.4.0 Milestone 2\n5 February 2020\n\npts-core: Add config options allowing to modify or delete result files from the result viewer\npts-core: Allow deleting results from the result viewer\npts-core: Allow editing result file information from result viewer\npts-core: Allow deleting results (graphs) from result file in result viewer\npts-core: Add ability to annotate (comment) on result graphs within the result viewer\npts-core: Support converting graphs to PNG/PDF with Inkscape or svg-convert when PHP GD is not installed/enabled\npts-core: Add Persistent Memory disk targets for disk test\n\nPhoronix Test Suite 9.4.0 Milestone 1\n13 January 2020\n\npts-core: Allow test profile test options to expose more helper information strings\npts-core: External dependency updates\npts-core: When a test fails to install due to linker error, try to run that missing library through the external dependency handler to hint at the name\npts-core: When a test fails to install due missing header file, try to run that missing library through the external dependency handler to hint at the name\npts_Graph: Pass/fail graph formatting improvements\nphodevi: Convert large RAM capacity basic strings into GB rather than large MB\nphodevi: Add support for Linux 5.6+ drivetemp kernel module for ATA drive temperatures\n\nPhoronix Test Suite 9.2.1\n11 December 2019\n\npts-core: Fix for Debian packaging generator\npts-core: FIx for install script that could lead to Phoromatic Server instance not fully launching\n\nPhoronix Test Suite 9.2.0-Hurdal\n3 December 2019\n\npts-core: Fix for sensor-driven result outputs (e.g. power)\npts-core: Clean up precision handling on graphs\npts-core: Add run-subset sub-command\npts-core: Add Clear Linux external dependencies handling for when not relying upon the Clear bundles that include all known dependencies\nphodevi: More robust ACPI power_meter handling\nphodevi: Support reading the NVMe drive temperature via HWMON on Linux 5.5+\nphoromatic: Use the new shared result viewer settings handling in common with the dynamic result viewer\n\nPhoronix Test Suite 9.2.0 Milestone 2\n13 November 2019\n\npts-core: Drop auto-compare sub-command since currently buggy / too server resource intensive\npts-core: Add FORCE_MIN_DURATION_PER_TEST\npts-core: Don't sort geometric mean results when the only difference between result identifiers is numeric in nature\npts-core: Allow preserving the precision of the original workload under test if not overriden by test profile\npts-core: Record and report CPU microcode version in benchmark result file\nsystem_monitor: Allow multiple PERFORMANCE_PER_SENSOR= to be delimited by comma\n\nPhoronix Test Suite 9.2.0 Milestone 1\n17 October 2019\n\npts-core: New possible external dependencies for gflags, clang, uuid, tclsh\npts-core: External dependencies updates for Windows\npts-core: Crash fix for macOS in regression from PTS 9.0.1 launcher change\n\nPhoronix Test Suite 9.0.1-Asker\n1 October 2019\n\npts-core: Fatal error fix for old PHP5 versions (RHEL 7) with pts_openbenchmarking_upload crash\npts-core: Set AllowResultUploadsToOpenBenchmarking = FALSE in enterprise-setup\nob_auto_compare: Show \"since [date]\" as part of the inline box plot\nob_auto_compare: Various tweaks/styling improvements to the inline box-plot display\nphodevi: New cpu.peak-freq sensor for reporting just the highest CPU core frequency at that moment\n\nPhoronix Test Suite 9.0.0-Asker\n16 September 2019\n\npts-core: Add stress-batch-run sub-command for behavior like stress-run but no prompts for test options\npts-core: Allow plotting all individual run results as a line graph\npts-core: Allow showing pie charts of wins/losses of tests\npts-core: Add support for showing \"new + updated tests\" via the invalid command helper\npts-core: Allow accessing the new result viewer via localhost too rather than just 127.0.0.1\npts_Graph: Restore pie chart support from PTS 6.0 state when dropped\n\nPhoronix Test Suite 9.0.0 Milestone 3\n3 September 2019\n\npts-core: Add AllowResultUploadsToOpenBenchmarking user config option\npts-core: Split OpenBenchmarking.org upload code into pts_openbenchmarking_upload file and allow it to be removed if wanting to strip out upload support\npts-core: Add \"ob-cache\" local cache of tests/suites to help offline use-cases\npts-core: Add hdf5 to the external dependency list\npts-core: Add libxml2 to the external dependency list\n\nPhoronix Test Suite 9.0.0 Milestone 2\n22 August 2019\n\npts-core: New result viewer improvements\npts-core: Various fixes and code cleanups\nphodevi: Add support for cpu.power sensor reading from Linux zenpower driver\n\nPhoronix Test Suite 9.0.0 Milestone 1\n25 July 2019\n\npts-core: Add 'expat' as possible external dependency\npts-core: Various PDF report improvements\npts-core: User-config syntax change LoadModules -> AutoLoadModules\npts-core: Also dynamically increase run count if any results outside 3-sigma limit\npts-core: Add compare-results-two-way sub-command\npts-core: Improve MultiMatch in test result parser\npts-core: Add IGNORE_RUNS environment variable\npts-core: Add result-file-confidence sub-command\npts_Graph: Add side-by-side 2-way comparison graph\npts_Graph: Fix for displaying line graphs with very small values\nphodevi: Support reading sys.power via IPMI PS1_Input_Power/PS2_Input_Power\nphodevi: More robust Arm CPU model detection improvements\nphodevi: Much faster CPU usage reading on large core count systems\n\nPhoronix Test Suite 8.8.1-Hvaler\n30 May 2019\n\npts-core: Various minor tweaks/fixes\nphodevi: Fix Linux CPU thread detection in some scenarios where inner-cores may be offlined\nphodevi: More robust CPU vulnerability reporting\nphodevi: Add initial reporting for Windows vulnerabilities via mdstool-cli\n\nPhoronix Test Suite 8.8.0-Hvaler\n13 May 2019\n\npts-core: Report on the POWER SMT setting in notes\npts-core: Add new/updated suite reporting\npts-core: In build-suite allow not binding test profile versions\npts-core: For list-suites, only show suites that have been updated within the past four years\npts_Graph: Report N on horizontal bar graphs\nphodevi: Intel Node Manager power_meter support for sys.power sensor\n\nPhoronix Test Suite 8.8.0 Milestone 3\n9 May 2019\n\npts-core: Add experimental dynamic-result-viewer\npts-core: Allow marking of test profile download files as optional\npts-core: Add \"everything\" virtual suite\npts-core: Set MESA_VK_WSI_PRESENT_MODE=immediate by default to work around possible 60 FPS RADV bug\npts-core: Rename remove-from-result-file to remove-run-from-result-file\npts-core: Add remove-results-from-result-file sub-command\nphodevi: Detect AVX-512 VNNI\nphodevi: Fix OpenJDK Java version detection\nphodevi: Expand memory temperature sensor to work for some ARM SBCs\nphodevi: Multi-monitor detection improvements\nphodevi: Add support for gpu.memory-usage sensor with new AMDGPU mem_busy_percent sysfs interface\nsystem_monitor: Add PERFORMANCE_PER_SENSOR= support for performance-per-(arbitrary sensor) rather than just supporting perf-per-Watt\nob_auto_compare: Show other results in result file on box plot\n\nPhoronix Test Suite 8.8.0 Milestone 2\n27 March 2019\n\npts-core: On new installs set 3.00% as deviation for increasing dynamic run count rather than 3.50%\npts-core: Add FORCE_MIN_TIMES_TO_RUN_CUTOFF= environment variable to toggle cutoff for FORCE_MIN_TIMES_TO_RUN behavior\npts-core: Add FORCE_TIMES_TO_RUN_MULTIPLE\npts-core: Add strict-benchmark option for enabling various options to ensure stricter behavior about the number of times to run each benchmark\npts-core: Add cpu-physical-threads / cpu-threads / auto-executable auto test run options\nphodevi: CPU-therm reporting via sysfs for CPU core temp\nphodevi: GPU-therm reporting via sysfs for GPU core temp\n\nPhoronix Test Suite 8.8.0 Milestone 1\n16 March 2019\n\npts-core: Allow FORCE_TIMES_TO_RUN to override debug-run/debug-benchmark single run behavior\npts-core: Various fallbacks/workarounds for those wanting to (unofficially) use PTS on Windows 8.1\npts-core: Other small tweaks and optimizations\npts-core: Fixes an odd scenario where on Windows after 2 runs, further runs of that test profile for current run could fail in select (random) instances\npts-core: Write out system notes for each system when generating PDF result output\npts-core: CSV output improvements\npts-core: Add result-file-raw-to-csv for dumping the raw/individual benchmark result run data\npts_Graph: Condensing improvements for large graphs\npts_Graph: Various formatting improvements\nphodevi: Intel GPU reporting improvements\nphodevi: BIOS version reporting support extended to Windows\nphodevi: ipmitool DMCI power sensor reporting for at least some POWER servers\n\nPhoronix Test Suite 8.6.1-Spydeberg\n21 February 2019\n\npts-core: Dynamically honoring the CLI terminal width (no longer cache the value on Linux/BSD/macOS)\npts-core: BSD external dependency updates\nob_auto_compare: Minor formatting updates\n\nPhoronix Test Suite 8.6.0-Spydeberg\n5 February 2019\n\npts-core: Other small tweaks and fixes\npts-core: Fix for \"/installed\" virtual suite not including the proprietary/commercial tests that are installed\nob_auto_compare: Allow showing more results in the embedded percentile graphs\n\nPhoronix Test Suite 8.6.0 Milestone 3\n27 January 2019\n\npts-core: Better handling on Windows when there are space(s) in the paths\npts-core: Add __event_post_run_stats module hook\npts-core: Inline display of result distributions from OpenBenchmarking.org on applicable results\npts-core: Don't try to run tests from result file(s) or suite(s) that were not installed\npts-core: More accurate time reporting when result files are passed to `phoronix-test-suite estimate-run-time`\nphodevi: Better reporting of NVMe drive strings on BSDs\n\nPhoronix Test Suite 8.6.0 Milestone 2\n19 January 2019\n\npts-core: Update Mac OS X to macOS references\npts-core: Add result-file-stats sub-command to show more test result statistics\npts-core: Show geometric mean and harmonic mean data at end of benchmarking process when relevant as part of post-run stats\npts-core: Improved formatting of file download text user interface for downloading of dependencies on Microsoft Windows\npts-core: Fix Loop 'Test i of n' Reporting\npts-core: A few warning fixes for PHP 7.3+\npts-core: External dependency handling support for OpenMandriva Lx 4.0 (transitioned from urpmi to DNF)\nphodevi: Report Windows Subsystem for Linux (WSL) to the system layer string\n\nPhoronix Test Suite 8.6.0 Milestone 1\n7 January 2019\n\npts-core: No longer clear test profile identifiers on secondary saved results\npts-core: Add compare-results-to-baseline sub-command for comparing one result file (baseline) against a set of results for text look at relative perf\npts-core: Minor fixes\npts-core: Show wins and losses summary after testing on large result files\npts-core: On two-way result files, after test completion show comparison of current result against previous result (baseline)\npts-core: Add ShowPostRunStatistics user configuration XML option to toggle whether various test statistics are printed at the end of testing\npts-core: Add recently-added-tests sub-command to show newly added test profiles / alternative to openbenchmarking-changes/recently-updated-tests\npts-core: Allow outputting line graphs to terminal interface as basic box plot graphs\nphodevi: Improve Linux multiple network device reporting\nphodevi: LXQt desktop version reporting\nphodevi: Update for Microsoft Windows Server 2019\nsystem_monitor: Allow outputting system monitor graphs to terminal interface inline\n\nPhoronix Test Suite 8.4.1-Skiptvet\n9 December 2018\n\npts-core: Workaround for RHEL 7.6 PHP having buggy CURL that is causing seg faults\npts-core: Ensure \".\" doesn't get set in PATH when launching phoronix-test-suite\npts-core: Allow PRESET_OPTIONS env var to be used when in batch mode\npts-core: FreeBSD updates\npts-core: Add PRESET_OPTIONS_VALUES environment variable that is similar to PRESET_OPTIONS but for explicit values\nphodevi: Improved Radeon AMDGPU frequency detection/reporting\nphodevi: Add support for reading GPU usage sensor with AMDGPU gpu_busy_percent sysfs interface\nphodevi: Updated gpu_voltage sensor for AMDGPU driver\nphodevi: Updated gpu_power sensor for AMDGPU driver\nphodevi: Updated gpu_fanspeed sensor for AMDGPU driver\nphodevi: Updated gpu_freq sensor for AMDGPU driver\nphodevi: Improved physical CPU core detection on DragonFlyBSD 5.4\nphodevi: Improved Spectre detection on DragonFlyBSD 5.4\nphodevi: Allow using NUM_CPU_CORES to override the number of exposed CPU threads/cores to tests (alternative to PTS_NPROC / NUMBER_OF_PROCESSORS)\nphodevi: Improved multi-disk reporting for non-Linux operating systems\nphodevi: Minor GPU string reporting improvement\n\nPhoronix Test Suite 8.4.0-Skiptvet\n26 November 2018\n\nphodevi: Various minor tweaks\n\nPhoronix Test Suite 8.4.0 Milestone 3\n20 November 2018\n\npts-core: Various external dependency updates\npts-core: Expose NUM_CPU_PHYSICAL_CORES to test profiles as alternative to NUM_CPU_CORES (logical count)\npts-core: Fix possible situation of openbenchmarking-refresh not updating when IndexCacheTTL is set to 0\npts-core: Allow branded colors to work in the terminal/CLI text graphs\npts-core: Continued POWER9 support improvements\npts-core: Add RemoveInstallDirectoryOnReinstall to toggle test re-installation behavior\npts_Graph: Fix for sometimes tick marker text overlapping\nphodevi: Improved physical CPU core detection for architectures like POWER\nphodevi: Improved CPU cache size detection\n\nPhoronix Test Suite 8.4.0 Milestone 2\n5 November 2018\n\npts-core: Allow passing PTS environment variables as arguments to PTS and then just have PTS set them in the environment\npts-core: Add dry-run test option\npts-core: Various result parser additions to help parsing of CSV frame-time data for more test profiles (games)\nphodevi: Vulkan driver reporting fix\n\nPhoronix Test Suite 8.4.0 Milestone 1\n8 October 2018\n\nphodevi: Report vRAM size on GPU model string in GB when over 1GB\npts-core: At run-time also report if test is deprecated/broken\npts-core: Add \"node-npm\" as an external dependency for Node.js + NPM\nphodevi: Drop information reporting support for the long ago Catalyst/fglrx driver stack that hasn't been supported/maintained in many years\n\nPhoronix Test Suite 8.2.0-Rakkestad\n11 September 2018\n\npts-core: Add RequiresDisplay test profile property to indicate if the test profile explicitly requires a monitor / display server to work\npts-core: Add RequiresNetwork test profile property to indicate if the test profile needs a working network connection\npts-core: Add RequiresInternet test profile property to indicate if the test profile needs a working Internet connection\npts-core: Don't install tests where the current run-time checks will fail\nphodevi: Improve CPU thread count detection when running under LXC\nphodevi: More robust DMI decode ignore value handling\nphodevi: Add extra fallback detection for LXC in system-layer\n\nPhoronix Test Suite 8.2.0 Milestone 4\n7 September 2018\n\npts-core: Fix behavior of \"Would you like to stop and install these tests now\"\npts-core: Add reinstall / re-install aliases to force-install\nob_auto_compare: Default first to trying to do an automated local result comparison\nphodevi: Amlogic SoC detection based on meson_cpufreq driver\nphodevi: Rockchip SoC fallback detection\nphodevi: Embedded ARM Cortex / ARM part model detection\nphodevi: Expanded sensor coverage using Intel RAPL\n\nPhoronix Test Suite 8.2.0 Milestone 3\n22 August 2018\n\npts-core: Minor updates to logic for determining how many times to dynamically increase run count on high variance results\npts-core: Show deprecated tests too when running list-all-tests\npts-core: Add DropNoisyResults option if wishing to not save results that have too high of deviation between runs\npts-core: Add PTS_DOWNLOAD_CACHE_OVERRIDE environment variable option on make-download-cache\npts-core: Add PTS_USER_PATH_OVERRIDE environment variable to override PTS_USER_PATH on initialization\npts-core: Add PTS_DOWNLOAD_CACHING_PLATFORM_LIMIT environment variable for make-download-cache\npts-core: Add list-cached-tests option\n\nPhoronix Test Suite 8.2.0 Milestone 2\n15 August 2018\n\npts-core: Add DivideResultDivisor to result parser\npts-core: Add libevent as possible external dependency\npts-core: Alert the user when the test install directory is on a file-system mounted with 'noexec'\npts-core: Optional support with PHP 7.3+ to also obtain network info using net_get_interfaces()\npts-core: Fix possible alignment issue with value/spacer on outputting text-based result graphs\npts-core: When Internet is not available and running list-tests, only show tests that are available via caches unless `list-all-tests` is run\npts-core: Rework `list-recommended-tests` to make use of download count information exposed via OB index repository data rather than needing to make fresh web query\npts-core: Show \"popular tests\" in the invalid command helper\npts-core: Allow stress-run to be triggered from interactive mode\npts-core: Allow comparing dynamic in-line result comparisons against local results when no Internet results matching or Internet not available\nphodevi: Reporting of L1TF / Level 1 Terminal Fault vulnerability\npts_Graph: Tweaks to text sizing on vertical bar graphs\n\nPhoronix Test Suite 8.2.0 Milestone 1\n21 July 2018\n\npts-core: Add readline-based autocompletion support for text-based menu selection lists\npts-core: Add readline-based autocompletion support for the result file save name for trying to match existing result file identifiers\npts-core: Add autocompletion support for result file identifier based on installed software/hardware\npts-core: Various Alpine Linux external dependency updates\npts-core: Various improvements to the Shell sub-command functionality, including auto-completion support\nphoromatic: From rootadmin allow the rootadmin to override/reset a user account password\nphodevi: Windows battery reporting discharge rate support\nphodevi: Improved multi CPU socket reporting on Windows\nphodevi: Various hardware/software detection improvements when running within Docker/containers\npgo: New module to provide for automated compiler PGO (Profile Guided Optimizations) testing on GCC/Clang\n\nPhoronix Test Suite 8.0.1-Aremark\n26 June 2018\n\npts-core: Add \"wine\" external dependency support\npts-core: Fix skip-test behavior\npts-core: Web browser handling improvements on Windows, other Windows updates\nphoromatic: Various minor fixes and enhancements\nphodevi: Add USE_WINE environment variable check, point it towards the wine binary you wish to test\n\nPhoronix Test Suite 8.0.0-Aremark\n5 June 2018\n\npts-core: Various macOS support tweaks/improvements\npts-core: Add external dependency support for Brew macOS package manager\npts-core: Avoid duplicate test identifiers on graphs\nphodevi: Improved X.Org Server version detection\n\nPhoronix Test Suite 8.0.0 Milestone 5\n30 May 2018\n\npts-core: Termux external dependency support\npts-core: Other minor tweaks and changes\nphoromatic: Better handling when the Phoromatic Server is run without an Internet connection or Internet disabled\nphoromatic: A wide variety of other Phoromatic Server optimizations and improvements\nphodevi: Add spec_store_bypass / Spectre Variant 4 reporting\n\nPhoronix Test Suite 8.0.0 Milestone 4\n16 May 2018\n\nphoromatic: Add a \"email all users\" option to the rootadmin page\nphoromatic: Improve search functionality on results page, allow boolean expressions, date ranges, many other search features\nphoromatic: Various search improvements to `phoronix-test-suite search`\nphoromatic: Allow new test profiles to be created from Phoromatic web UI\npts-core: New create-test-profile sub-command for guided process to test profile creation\npts-core: Basic changes, should be all that's needed for EU GDPR safeguards\nphodevi: RISC-V SiFive CPU detection\n\nPhoronix Test Suite 8.0.0 Milestone 3\n16 April 2018\n\npts-core: Improvements for BSD / FreeBSD support\npts-core: Add \"V8\" external dependency for V8 JavaScript engine\npts-core: Add initial AdvertiseServiceOpenBenchmarkRelay support\npts-core: Add new inspect-test-profile sub-command\npts-core: Add ColoredConsole option in user configuration file of AUTO / TRUE / FALSE to control colored text behavior\npts-core: Report each test's run-time to test-rin-times in result file XML\npts-core: More XSD / OpenBenchmarking.org schema handling work for future functionality\nphoromatic: Ensure environment variables set via Phoromatic web interface get passed to tests\nphodevi: BSD improvements\nbackup: A module providing initial backup/restore functionality for PTS/Phoromatic\n\nPhoronix Test Suite 8.0.0 Milestone 2\n24 March 2018\n\npts-core: Add DeleteOutputBefore and DeleteOutputAfter options to the result parser\npts-core: Fix for run-random-tests sub-command\npts-core: Native XML result parsing support via FileFormat = XML in the result parser for test profiles\npts-core: Add openbenchmarking-uploads sub-command for reporting recent result uploads from the local IP\nphodevi: reboot/shutdown support on Windows\n\nPhoronix Test Suite 8.0.0 Milestone 1\n8 March 2018\n\npts-core: Rewritten Windows support\npts-core: Add ~/install-message support where if a test profile installer writes there, that message will in turn be shown to the user on test install\npts-core: Support for using Cygwin's bash interpreter on Windows systems for better test profile parsing support\npts-core: When running on Windows, add new \"windows/\" OpenBenchmarking.org test repository\npts-core: Introduce basic phoronix-test-suite shell for easier PTS experience\npts-core: Allow XInclude support for test suites\nperf_per_dollar: Allow calculating cloud costs / perf-per via COST_PERF_PER_HOUR= environment variable\nphodevi: Cavium ThunderX detection\n\nPhoronix Test Suite 7.8.0-Folldal\n14 February 2018\n\npts-core: Various minor fixes\npts_Graph: Fix vertical bar graphs on many bars to be rendered\n\nPhoronix Test Suite 7.8.0 Milestone 3\n5 February 2018\n\npts-core: Fix crash in stress-run when PHP PCNTL is missing\npts-core: When installing a test that is marked deprecated/experimental/broken, ensure to convey that to the user\npts-core: When installing a test that is of license retail/restricted, ensure to convey that to the user\npts-core: Don't show tests in `list-available-tests` / `list-tests` that are not verified\npts-core: Improvements to `info` sub-command for test profiles in highlighting tests that may have problems and also show pre/post messages\npts_Graph: Fix when manually forcing line graphs sometimes still yielding bar graphs\nphodevi: spectre_v1 and spectre_v2 protection reporting\nphodevi: LXQt desktop detection\nphodevi: Don't cache the compiler in case external dependencies install a new compiler, etc\n\nPhoronix Test Suite 7.8.0 Milestone 2\n14 January 2018\n\npts-core: Allow local/other tests not part of OpenBenchmarking.org to be downloaded from a Phoromatic Server\npts-core: Fixes for make-download-cache sometimes not caching tests/suites\npts-core: Drop the pts_test_notes_manager since pts_test_run_manager already had better capabilities built-in\npts-core: Add dump-phodevi-properties helper to assist in debugging and porting to new platforms\npts-core: Interactive mode improvements\npts-core: The `phoronix-test-suite gui` has been unmaintained and can be considered deprecated\npts-core: Add `phoronix-test-suite search` for conducting basic searches from the CLI\npts-core: When running `phoronix-test-suite info <test profile>`, show the OpenBenchmarking.org change-log for that test profile too\npts-core: When running `phoronix-test-suite info <test profile>`, show local test results containing this test\nphodevi: Append BIOS version to end of motherboard string\nphodevi: Strip invalid chars from BIOS version parsing\nphodevi: Reworked property handling\nphodevi: KDE Plasma 5 detection improvements\npts_Graph: Add allow_box_plots graph configuration tunable\npts_Graph: Restore support for allowing vertical bar graphs, can be enabled by editing graph-config.json with bar_graphs_horizontal = false\n\nPhoronix Test Suite 7.8.0 Milestone 1\n8 January 2018\n\npts-core: Add meson to external dependencies\npts-core: Other external dependency updates\npts-core: Various minor improvements when running on Docker/containerized\npts-core: Phoroscript interpreter improvements for Windows\npts-core: Allow PTS_WEBSOCKET_PORT environment variable to be used to override WebSocket port when launching Phoromatic Server\nphodevi: Add some missing handling around /dev/vd* disks\nphodevi: Add BIOS version reporting property\n\nPhoronix Test Suite 7.6.0-Alvdal\n7 December 2017\n\npts-core: Just minor changes\n\nPhoronix Test Suite 7.6.0 Milestone 4\n3 December 2017\n\npts-core: Gentoo external dependency handling updates\npts-core: Better external dependency handling when running on EC2 instances\nphodevi: Add new gpu.memory-usage sensor initially supported on NVIDIA\n\nPhoronix Test Suite 7.6.0 Milestone 3\n21 November 2017\n\npts-core: Provide some basic graph size/count reporting on refresh-graphs sub-command\npts-core: make script shebang more portable\npts-core: Various styling updates\npts-core: More demanding debug-self-test\npts-core: Update Fedora's Python packages\npts_Graph: Turn line graphs to horizontal box plots if too much data to graph in space\nphodevi: physical CPU core detection count on macOS\nphodevi: GPU power consumption sensor support via nvidia-smi\nphodevi: NVMe drive temperature reporting on Linux\nphodevi: Better memory model detection on Linux\n\nPhoronix Test Suite 7.6.0 Milestone 2\n2 November 2017\n\npts-core: Add LEDE external dependency handling support\npts-core: Drop ports-based external dependency handling for FreeBSD and instead encourage pkg\npts-core: Network MAC address detection on OpenBSD\nphoronix-test-suite: Check for php-cli as binary option\nphodevi: Motherboard detection support on BSD using smbios.planar.product\nphodevi: hw.cpu_topology_core_ids support for physical core count on BSD\nphodevi: Allow BSD GPU detection via pciconf data\nphodevi: BSD chipset detection\nphodevi: VT EFIFB resolution detection\n\nPhoronix Test Suite 7.6.0 Milestone 1\n10 October 2017\n\npts-core: Add external dependency handling for MidnightBSD / mport\npts-core: Improved handling of IP/MAC detection to try to figure out the default interface\npts-core: Wake-On-LAN handling detection improvements\nphoromatic: Try using systemctl poweroff first when trying to turn off a system\nphodevi: Add memory.temp sensor\nphodevi: Fixed k10temp CPU temperature reporting\nphodevi: Add IPMI ambient temperature support\nphodevi: Some CPU/GPU temperature reporting improvements\nphodevi: Ignore reporting 'MS-DOS FAT32' EFI file-system on macOS\nphodevi: Add Bcache reporting support\nphodevi: Add APFS Apple File-System detection on macOS\nphodevi: Tweaks for macOS High Sierra\nphodevi: Restructure CPU core/thread reporting in system tables\nperf_per_dollar: Add \"phoronix-test-suite perf_per_dollar.add <result file>\" to allow perf-per-dollar graphs to be added after the fact\n\nPhoronix Test Suite 7.4.0-Tynset\n19 September 2017\n\npts-core: Improve command documentation categories/organization\npts-core: Fix install time reporting from the info sub-command when passing a test profile\npts-core: Add network-info sub-command\npts-core: Java external dependency updates\npts-core: Add maven external dependency\nphodevi: NVMe disk reporting on BSDs\npts_Graph: Allow line graphs to have adjustable floor/bottom to better present data on graph\n\nPhoronix Test Suite 7.4.0 Milestone 4\n11 September 2017\n\npts-core: Report on updated OpenBenchmarking.org index update when new/updated tests are introduced\npts-core: Add TEST_EXEC_PREPEND support\npts-core: Ensure XAUTHORITY gets passed if relevant to test execution\npts-core: Fixed dynamic dependency handling on Ubuntu 17.10 / apt-file with newer versions\npts-core: Fix warning about passing variables by ref to PTS modules\npts-core: Add nasm external dependency entries\npts-core: Ensure duplicate dependencies to install don't become present\nphodevi: Add basic Budgie desktop reporting\nphodevi: IPMI fan speed reporting\nphodevi: EPYC detection\ntoggle_screensaver: improved GNOME screensaver handling\ntoggle_screensaver: work better under Wayland / non-X environments where display server might not be detected\n\nPhoronix Test Suite 7.4.0 Milestone 3\n28 August 2017\n\npts-core: Reworked test exit status handling\nob_auto_compare: New module for seamless OpenBenchmarking.org result references\ngraphics_event_checker: Drop graphics_event_checker module as really provides no real benefit these days\nphodevi: Improve CPU physical core count detection for multi-socket systems\n\nPhoronix Test Suite 7.4.0 Milestone 2\n15 August 2017\n\npts-core: Resolve possibility of first graph missing when exporting results as PDF\nphodevi: WSLFS (Windows Subsystem for Linux) file-system detection\nphodevi: Add monitor detection based on parsing EDID supplied by `xrandr --prop` (works well for newer NVIDIA setups)\nphodevi: Initial \"system type\" support\n\nPhoronix Test Suite 7.4.0 Milestone 1\n31 July 2017\n\npts-core: Don't show PTS version when there is no sub-title, just leave it empty\npts-core: Add phoronix-test-suite unload-module sub-command\npts-core: Add phoronix-test-suite auto-load-module sub-command\npts-core: Drop juju scripts as appears unmaintained, happy to re-add if maintained\npts-core: Allow showing existing results from a result file in-progress on test runs\npts_Graph: Color tweaking\nphodevi: Clear up extra potential fluff in the GPU model string\nperf_tips: New module to indicate various performance tips to users\n\nPhoronix Test Suite 7.2.1-Trysil\n30 June 2017\n\npts-core: Don't pass arguments in quotes to pre/interim/post test scripts\npts-core: Minor optimization to is_test_profile() and more easily allow explicit paths to be used, overriding what's in OB cache\npts-core: Minor optimization to is_suite() and more easily allow explicit paths to be used, overriding what's in OB cache\npts-core: Fix warning in pts_test_result_parser\nphodevi: AVX-512 reporting\n\nPhoronix Test Suite 7.2.0-Trysil\n8 June 2017\n\npts-core: Add TurnCharsToSpace support to result parser\npts_Graph: Fix multi-way comparison detection\n\nPhoronix Test Suite 7.2.0 Milestone 4\n3 June 2017\n\npts-core: If a OB upload fails with system logs, try again without system logs\npts-core: Add basic dump-tests-to-git sub-command\npts-core: Add basic dump-suites-to-git sub-command\npts-core: Result parser fixes/improvements\npts-core: Additional safety checks around loading test result arguments from a result file\npts-core: Add \"vulkan-development\" external dependency\npts_Graph: Few tweaks/clean-ups\npts_Graph: Allow optionally specifying custom colors via the GRAPH_HIGHLIGHT environment variable\nphoromatic: Introduce support for setting a run-priority on test schedules\n\nPhoronix Test Suite 7.2.0 Milestone 3\n26 May 2017\n\npts-core: Result parser fixes for some advanced corner cases\npts-core: Add dump-file-info helper\nphodevi: Fallback for being able to read I/O scheduler on NVMe device on Linux\nphodevi: Monitor *DEBUG* environment variables\npts_Graph: Key alignment spacing fix\npts_Graph: Don't allow duplicate identifiers\npts_Graph: Various other alignment tweaks\nphoromatic: Handling for non-PCNTL support in Phoromatic client\n\nPhoronix Test Suite 7.2.0 Milestone 2\n4 May 2017\n\npts-core: Add SKIP_TESTS_HAVING_ARGS environment variable\npts-core: Parser improvements\nperf_per_dollar: Allow custom units, report on LIB graphs too\nphodevi: Add PGI compiler detection\n\nPhoronix Test Suite 7.2.0 Milestone 1\n14 April 2017\n\npts-core: Result parser improvements\npts-core: Add AppendToArgumentsDescription option to result parser capabilities\nsystem_monitor: Fix for when individual monitoring is disabled\nphodevi: Fix for listing dual 4K displays and other select multi-monitor configurations\n\nPhoronix Test Suite 7.0.1\n28 March 2017\n\npts-core: Support for network proxies with username/password requirement\npts-core: Improve formatting of text in 'info' sub-command\nphodevi: Improved detection for Quill AArch64 board and possibly other boards\nphodevi: Various sensor detection improvements for the Jetson TX2\nphodevi: Add fallback detection for ARM Mali\nreport_test_run_times: Add INSTALL_TIMES_ARE_A_BENCHMARK=1 option for generating install time graphs\nreport_test_run_times: Add INSTALL_SIZES_ARE_A_BENCHMARK=1 option for generating install size graphs\n\nPhoronix Test Suite 7.0.0-Ringsaker\n6 March 2017\n\npts-core: Make the AppStream meta data happy\npts-core: Improve formatting of PDF generation on large result files\nphodevi: Expand GCC version detection when -dumpversion isn't supported (e.g. gcc-snapshot of gcc 7.0.1)\n\nPhoronix Test Suite 7.0.0 Milestone 5\n28 February 2017\n\npts-core: Allow bzip2 compression of result file uploads to OpenBenchmarking.org\npts-core: Only preserve the original raw result string if it differs from the final result\npts-core: Show results in text mode when show-result sub-command is run without DISPLAY\nreport_test_run_times: new module to report test run times as result graphs\n\nPhoronix Test Suite 7.0.0 Milestone 4\n16 February 2017\n\npts-core: stress-run styling improvements\npts-core: External dependency XML updates\nphodevi: Continued tweaking on the new system information view\nphodevi: Append LLVM version to OpenGL driver string where relevant\npts_Graph: Continued tweaking of graph UI\npts_Graph: Allow more compact multi-way comparison graphs\npts_Graph: Various SVG size/efficiency optimizations\n\nPhoronix Test Suite 7.0.0 Milestone 3\n7 February 2017\n\npts-core: Add winners-and-losers sub-command for providing some first/last place finish stats\npts-core: Don't pass files greater than ~50MB to the result parser as likely too big to parse and invalid data like lots of warnings/errors from test\npts-core: Restructured test result parser\npts-core: Dropping of some deprecated checks\npts-core: Add ArgumentsDescription to the results-parser schema for appending a string to the used arguments description string on test execution\npts-core: Add the result-scale to the test profile comparison_hash (NOTE: any external data stores making use of the comparison_hash should thus rebuild their hash indexes)\npts-core: Allow one test run to generate multiple result outputs (graphs, etc) from multiple result-definition entries\npts-core: Drop secondary_linked_results handling now that all tests can create multiple result outputs natively, use that code path\npts-core: Add debug-result-parser sub-command as a way to debug test profile result-parser defintions, just scan for old test log files and don't actually execute test\npts-core: Restore setting the OpenBenchmarking.org ID to the ReferenceID field in the result file when cloning from OpenBenchmarking.org\npts-core: Various console coloring improvements\n\nPhoronix Test Suite 7.0.0 Milestone 2\n23 January 2017\n\npts-core: Indicate HIB/LIB result proportion when dumping results as CSV\npts-core: Introduce new view of system software/hardware details on test run and system-info command\npts-core: Drop detailed-system-info sub-command now that system-info is more verbose\npts-core: Eliminate pts_test_downloads_nye_XmlReader\npts-core: Eliminate pts_parse_results_nye_XmlReader abstraction\npts-core: A lot of cleanups / reworking of XML parsing in various components\npts-core: Cleanup phoronix-test-suite list-test-usage\nphodevi: Fix for hanging Windows client when requesting disk mount options\nphodevi: Don't rely upon X.Org DDX driver logic for determining GPU frequency since it's not portable to Wayland or with -modesetting DDX\nphodevi: Add microcode version reporting on Linux\n\nPhoronix Test Suite 7.0.0 Milestone 1\n12 January 2017\n\npts-core: Add estimate-run-time sub-command for estimating test/suite/result-file run length\npts-core: More external dependency coverage for BSDs\npts-core: Cleanup PTS_USER_LOCK / run-lock handling\npts_Graph: Add \"Ryzen\" product string to AMD's coloring\npts_Graph: Add \"Pentium\" product string to Intel's coloring\npts_Graph: Add option to disable color branding\nphoromatic: Set by default for SQLite database WAL journal mode / NORMAL synchronous\nphoromatic: Report status updates more often\n\nPhoronix Test Suite 6.8.0-Tana\n6 December 2016\n\nphoromatic: allow clearing warnings/errors of a system from the systems page\nphodevi: Rearrange ATI/AMD graphics checks\n\nPhoronix Test Suite 6.8.0 Milestone 3\n28 November 2016\n\npts-core: Ubuntu external dependency script fix\nphodevi: Improved video RAM detection via GLX_MESA_query_renderer\nphodevi: GPU detection improvements\nphodevi: vRAM detection change to help AMDGPU-PRO\nphodevi: Other product/model string improvements\n\nPhoronix Test Suite 6.8.0 Milestone 2\n15 November 2016\n\npts-core: Add new remove_inactive_systems option on systems page\npts-core: Fix malforming graphs when feeding many line graph results that are in a tracking-like manner that should be compacted to box plot\npts-core: Add PHP GD check as first thing when attempting to use result-file-to-pdf\npts-core: Add new module hooks for __test_log_output() and __post_test_run_system_logs()\nphodevi: Don't load Phodevi sensors prior to PHP 5.3 due to compatibility issues\nlog_exporter: Allow easily exporting test run and system logs via COPY_TEST_RUN_LOGS_TO and COPY_SYSTEM_LOGS_TO env vars\nflamegrapher: Experimental new module to generate Linux perf / FlameGraph graphs for each test being executed when active\nresults_custom_export: Example module for dumping PTS test results in custom formats\npts_Graph: Add Intel color highlighting for \"Celeron\" too\n\nPhoronix Test Suite 6.8.0 Milestone 1\n27 October 2016\n\npts-core: Add PHOROMATIC_HTTP_PORT environment variable for overriding Phoromatic Server HTTP port on starting it\npts-core: Don't preserve really large system logs (~1MB or greater per file)\npts-core: Strip http/https from proxy address if needed\npts-core: Update Solus external dependency handling\npts-core: Proper handling for when PHP ctype functions are not present\nphodevi: Also look for Vulkan ICDs at /usr/share/vulkan/icd.d/*.json\n\nPhoronix Test Suite 6.6.1\n29 September 2016\n\npts-core: Various BSD improvements\npts-core: Add list-not-installed-tests command (alias: list-uninstalled-tests)\npts-core: Detection for qupzilla browser when no alternative exists\npts-core: Add \"phoronix-test-suite php-conf\" sub-command to dump more useful PHP information for debugging\npts-core: Add python-scipy and python-sklearn external dependencies\nphodevi: Support for reporting memory frequency when overclocked if reported via \"Configured Clock Speed\" in dmidecode for RAM\n\nPhoronix Test Suite 6.6.0-Loppa\n6 September 2016\n\npts_Graph: On multi-way comparisons, always condense line graphs to modified box plots\n\nPhoronix Test Suite 6.6.0 Milestone 3\n26 August 2016\n\npts-core: Add OpenMandriva/urpmi PHP dependency helper to launcher\npts-core: After running tests, if no browser/display is available, offer to show results via CLI graph/text rendering\npts-core: Add a SVG DOM HTML back-end for lowering common SVG into pure HTML for cases like email clients where no SVG is supported\nhtml_results_export: New module exposed via EXPORT_RESULTS_HTML_EMAIL_TO and EXPORT_RESULTS_HTML_FILE_TO env vars for exporting HTML results\npts_Graph: When highlighting graph values, darken the color rather than use static color\n\nPhoronix Test Suite 6.6.0 Milestone 2\n7 August 2016\n\ndeploy: Update Debian packaging script\npts-core: Fix for upload-test-suite (on OpenBenchmarking.org side too)\npts-core: Show local suites in list-suites\npts-core: Ensure DragonFlyBSD pkg installation is done automatically\npts-core: Restructure bash on windows check\npts-core: Initial work on CLI terminal colored text output\nphoromatic: Web UI styling improvements\nphodevi: Show mdstat RAID Details when available\npts_Graph: Show extra disk details on system graph\n\nPhoronix Test Suite 6.6.0 Milestone 1\n6 July 2016\n\npts-core: Add OpenCV to external dependencies list\npts-core: Disable test cache share when run in stress-run mode\nphoromatic: Allow custom versions to be manually specified on test suite web UI page\npts_Graph: Show min/max results on multi-way comparisons\npts_Graph: Color string tweaks\nphodevi: Fix to allow GPU temperature sensor to work with AMDGPU-PRO driver stack\n\nPhoronix Test Suite 6.4.0-Hasvik\n2 June 2016\n\n[Only minor changes since 6.4 M4]\n\nPhoronix Test Suite 6.4.0 Milestone 4\n31 May 2016\n\npts-core: Automatically add used extra OpenBenchmarking.org repositories to the linked list\npts-core: Don't load empty tests on finish-run command\npts-core: Add perl-digest-md5 to external dependencies list\npts-core: Prevent duplicate tests/setting combinations from entering the same test run manager queue\npts-core: Fix for IE not scaling SVGs in the results viewer\npts-core: Finish new pts_test_suite API, port build-suite to it\nphoromatic: Support editing and deleting tests in local suites from the Phoromatic Server UI\nphodevi: More detection improvements for NVMe devices on Linux\n\nPhoronix Test Suite 6.4.0 Milestone 3\n26 May 2016\n\npts-core: XML formatting fix for non-OpenBenchmarking.org deployments\npts-core: Do more to avoid zombie processes in stress-run manager\npts-core: More robustness of the results parser with spaces (or lack of) near colons\npts-core: Rewritten pts_test_suite internals\nphodevi: Support for reading AMDGPU OverDrive overclock offset\nphoromatic: Add generalized \"Testing\" page to Phoromatic Server\nwatchdog: new PTS module for checking sensor readings to suspend/quit testing if exceeded\n\nPhoronix Test Suite 6.4.0 Milestone 2\n6 May 2016\n\npts-core: Allow XML formatting from the Phoromatic Server web interface\npts-core: Reformat stress-run log messages\npts-core: Add \"redis-server\" as a potential external dependency for providing Redis\npts-core: Statically set dynamic_run_count_on_length_or_less to 60\npts-core: Adaptively increase regression threshold level in points_of_possible_interest() when too many results are being flagged\nphoromatic: Fix selecting the same test itself on the \"build suite\" page\nphoromatic: Do hard deletes when deleting results from admin area or results page\nphoromatic: Add basic support for deleting \"local suites\" from Phoromatic web UI\nphoromatic: Allow exporting system test run/build errors to the exported public results viewer\nphoromatic: Add PTS_NO_REBOOT_ON_NETWORK_FAILURE environment variable for clients where if network failure occurs, Phoromatic clients will not reboot\nphodevi: Add ambient.temp sensor for reporting ambient temperature, currently supports temperv14 USB sensors\n\nPhoronix Test Suite 6.4.0 Milestone 1\n25 April 2016\n\npts-core: Many improvements to stress-run functionality\npts-core: Add Midori to supported browser list\npts-core: Add default logging support while running stress-run using phoronix-test-suite-stress.log filename\npts-core: Additional fallback for locating if running PTS as a user from their home directory\npts-core: Append date to phoronix-test-suite-stress-XXX.log when running stress-run\nphoromatic: Initial server-side implementation of new stress-run support via Phoromatic Server when going to \"Run A Benchmark\" and opting for stress mode\nphoromatic: Initial client-side implementation of new stress-run support\nphoromatic: Add basic email notification support to the Phoromatic export results viewer\nphoromatic: Say \"Stress Testing - XXX\" as Phoromatic status messages when in stress-run mode\nphoromatic: Add links to schedules/tickets from dashboard and system pages for active schedule/ticket on that system at the moment\nphoromatic: Fix for handling post-run event script\nphoromatic: Only run tests once each time called upon in stress-run mode\nphoromatic: Show systems in groups on benchmark ticketing page\nphoromatic: Don't reset fields when building suite and adding additional tests\n\nPhoronix Test Suite 6.2.2\n9 March 2016\n\npts-core: Fix for crash in stress-run mode\npts-core: Add OpenSUSE dynamic reverse dependency handler\npts-core: For the new result viewer, add Epiphany to the web browser list\npts-core: Void Linux external dependency support\npts-core: Alpine Linux (APK) external dependency support\nphoromatic: Don't use a proxy (if available) when trying to connect from Phoromatic client to server\n\nPhoronix Test Suite 6.2.1\n23 February 2016\n\nphodevi: Extra Vulkan information reporting\nphodevi: Add OpenCL version reporting to system software string\nperf_per_dollar: Fix for uninitialized test_result object\n\nPhoronix Test Suite 6.2-Gamvik\n16 February 2016\n\npts_Graph: Fixes\npts_Graph: Support for branded colors on more graphs\nphodevi: plumbing Vulkan\nmatisk: Fixes\n\nPhoronix Test Suite 6.2 Milestone 5\n5 February 2016\n\npts-core: Add golang as possible external dependency\nphodevi: Optimization for slightly faster start-up time\nphoromatic: Add WoL details to the maintenace table page\nphodevi: Sensor clean-up and fixes  (Jakub Maleszewski)\nmatisk: Restore the MATISK module for testing  (Jakub Maleszewski)\n\nPhoronix Test Suite 6.2 Milestone 4\n26 January 2016\n\npts-core: Fix for some test profiles not showing up in list-tests sub-command\npts-core: Add function for optionally removing unchanged results\npts-core: Add function for optionally removing noisy results\npts-core: Rework PDF generation of test results\nphoromatic: Add option to result viewer for exposing possible points of interest\nphoromatic: Add view_results_since support to the export results viewer\npts_Graph: Fix for graphs sometime not rendering correctly on multi-way comparisons\n\nPhoronix Test Suite 6.2 Milestone 3\n7 January 2016\n\npts-core: Add system to default list of repositories\npts-core: Allow result graph footnotes to be added during test time by writing to ~/pts-footnote\npts-core: Optimize array usage along hot paths\npts-core: Add httpd as a possible external dependency\npts_Graph: Rendering fix for collision of result identifiers\nphoromatic: Add LimitNetworkCommunication option\nphoromatic: Fix in listing tests on schedules page when dealing with cache mismatch\ndeploy: JuJu update from upstream\n\nPhoronix Test Suite 6.2 Milestone 2\n2 January 2016\n\npts-core: Add FullOutput configuration option for dumping all pre/post/interim information to standard output\npts-core: Add MinimalTestTime user configuration option\nphodevi: Software string detection improvements\nphodevi: Support for PTS_NPROC environment variable to override reported CPU core count\nphoromatic: Export viewer tweaks\n\nPhoronix Test Suite 6.2 Milestone 1\n15 December 2015\n\npts-core: Begin work on dynamic dependency handler infrastructure\npts-core: Add new TestProfile/SystemDependencies field to test profile specification\npts-core: Basic implementation of SystemDependencies for dynamically resolving system/external dependencies based on file name\nphoromatic: Allow public listing of download cache files when navigating in browser to /download-cache.php\nphodevi: Assume Windows is 64-bit when environment variable check fails\nphodevi: Support sys.power sensor monitoring fallback on BAT1\n\nPhoronix Test Suite 6.0.1\n20 November 2015\n\nphodevi: Fix potential errors in sensors\n\nPhoronix Test Suite 6.0-Hammerfest\n16 November 2015\n\npts-core: Stop logging lsusb as on some systems calling the command will hang\npts-core: Move common dependencies later in the external dependency handling process\npts_Graph: Fix multi-way comparison line graphs from color collision\nphodevi: NVIDIA Jetson TX1 GPU thermal monitoring support and likely will work for some other boards too\n\nPhoronix Test Suite 6.0 Milestone 6\n12 November 2015\n\npts-core: Windows updates\npts-core: Random fixes\npts-core / phodevi: Merge the complete system sensors rework: https://github.com/phoronix-test-suite/phoronix-test-suite/pull/92 (Jakub Maleszewski)\npts-core: pts_openbenchmarking::available_tests() don't show deprecated test profiles by default\nphodevi: Support reporting /sys/firmware/devicetree/base/model for part of motherboard/SBC string\nphoromatic: Final styling for hammerfest\n\nPhoronix Test Suite 6.0 Milestone 5\n4 November 2015\n\npts-core: Rewrite of the local results viewer, now use HTML+JS rather than XSL\npts-core: Fix finish-run command functionality\npts-core: Fix results getting compacted into single result comparison object when using a local test without version post-fix\npts-core: Fix CSV result output when there are missing results\npts-core: Properly handle spaces in shell_exec() export\npts-core: Other small fixes\nphodevi: Support for finding the Xorg.0.log in ~/.local/share/xorg/ with Debian now using that for non-root X Server\nphoromatic: Tweaks\ndocumentation: Update HTML template style\n\nPhoronix Test Suite 6.0 Milestone 4\n25 October 2015\n\nphoromatic: Start of reworking the web interface\nphoromatic: Initial responsive design, mobile friendly\nphoromatic: Support for exporting results as XML via the viewer\nlinux_perf: Add new module to provide perf output reporting on a per-test-run basis when LINUX_PERF=1 environment variable is set\npts_Graph: Tweaks\n\nPhoronix Test Suite 6.0 Milestone 3\n9 October 2015\n\npts_Graph: Continued SVG optimization work\npts-core: Fix \"auto-disks\" test option to not show partitions\npts-core: Various fixes\npts-core: Finish work on auto-authenticating clients / settings page option to automatically approve newly added systems by default\npts-core: Add extra warning about RequiresRoot=TRUE tests\npts-core: Detect NVMe drives when looking for block devices for disk testing\npts-core: Add \"smartmontools\" as new PTS External Dependency\npts-core: Rewrite the DragonFlyBSD external dependency handling to now use dports pkg rather than pkgsrc\npts-core: Add NO_HTTPS environment variable option for systems that have trouble with HTTPS\n\nPhoronix Test Suite 6.0 Milestone 2\n24 September 2015\n\npts-core: Just mention PHP 5.3 as the new base requirement. Code still should largely work with PHP 5.2, but don't advertise it\npts-core: Add FileFormat optional tag to result parser with CSV support\npts-core: Add debug-render-test for helping to optimize the graph/result rendering process\npts-core: Rendering optimizations when handling lots of result files / graphs / result identifiers\npts-core: Rework and optimize the pts_result_file\npts-core: Implement new, faster result merger\npts-core: Allow the test_run_manager to run directly with a result_file\npts-core: Do test execution with proc_open(), allow modules to tap the process\npts-core: Add support for emitting SVG files with g tag to save space\npts-core: Fix breakage of pass/fail type tests in result parser\npts-core: Drop unused PIE_CHART type\nphodevi: AMDGPU Linux detection improvements\nphoromatic: Add \"Tests\" page\npts_Graph: Don't embed the PNG logo directly into the SVG file, but rely on HTTPS link\npts_Graph: Support coloring based on brand\npts_Graph: Implement new internal graph rendering interfaces, other major rewrites\n\nPhoronix Test Suite 6.0 Milestone 1\n26 August 2015\n\npts-core: Show estimated date/time next to estimated duration left on tests\npts-core: Support /usr/lib/os-release for stateless systems\npts-core: Allow listing multiple items via the info sub-command\npts-core: Add new test profile parsing back-end\npts-core: Unconditionally always ensure __GL_SYNC_TO_VBLANK=0\npts-core: Fixes for test profile validation following recent restructuring\npts-core: WebSocket fixes\npts-core: Fix bash completion\nphoromatic: Improvements when server addressing setup fails\npts_Graph: Support reporting a min result on graphs when there is no max value to be reported\ntoggle_screensaver: GNOME 3 update\nperf_per_dollar: Add performance-per-dollar calculator module based on environment variable input\nsystem_monitor: Support reporting a meta/overall performance-per-Watt result at end of result file when activated\nphodevi: Add BcacheFS superblock\n\nPhoronix Test Suite 5.8.1\n23 June 2015\n\npts-core: Misc warning fixes\npts-core: Fix result file validation against XML schema\npts-core: Never show /boot/efi as possible benchmark writable mount point\npts-core: Don't report which errors on launcher\nphoromatic: Add button to schedules page to allow skipping current trigger\nphoromatic: Pass extra attributes during PDF generation to allow for PDF sorting, etc\nphoromatic: Allow basic sub-targeting as part of test schedule trigger URLs\nphoromatic: Enhancements to the main page\nphoromatic: Result tracker detection improvements\nphoromatic: Sort systems on main page\n\nPhoronix Test Suite 5.8-Belev\n5 June 2015\n\npts-core: Don't needlessly write out config file each time if nothing relevant has changed\npts-core: Automatically re-install tests if compiler flag environment variables change\npts-core: Add attr as an external dependency\npts-core: Fix for reading multiple dependency names\nphoromatic: Reboot system if comm fails 10+ times on client\nphoromatic: Add global checkbox to key pages\nphoromatic: Track core version of clients in database\nphoromatic: Refresh OB repository lists prior to benchmarks\nphoromatic: Additional validation on result uploads\nphodevi: Some basic hardware reporting improvements that help the MIPS Creator CI20\n\nPhoronix Test Suite 5.8 Milestone 5\n28 May 2015\n\npts-core: Major performance improvements when merging many result files\npts-core: Faster result file parsing\npts-core: Stress-run improvements\nphoromatic: Improved tracker page\nphoromatic: Updated maintenance page\nphoromatic: Log tick sensors into sensors-pool\nphoromatic: Show prominent sensors via the dashboard\nphoromatic: Add graphs to systems page\nphoromatic: Scale SVG result graphs to better page size\nphoromatic: Add phoromatic.export-results-for-account-schedules option\nphoromatic: Add the Phoromatic Export Viewer\n\nPhoronix Test Suite 5.8 Milestone 4\n20 May 2015\n\npts-core: Support for using DNF directly when available on Fedora\nphodevi: Report kernel's build date when detected it's running on a daily/devel/RC kernel\nphodevi: Fix for Radeon GPU voltage reporting\nphodevi: Improved open-source GPU frequency detection when X Server not active\nphoromatic: Various fixes\nphoromatic: Add support for specifying custom client update script via account settings page to keep clients PTS updated\nphoromatic: Change interface of reporting sensor values\n\nPhoronix Test Suite 5.8 Milestone 3\n12 May 2015\n\npts-core: Separate out WebSocket server back-ends\nphoromatic: Honor show_local_tests_only option via the build suite page\nphoromatic: Fix jumping on page on checkbox selection when scrolling\nphoromatic: Don't print network connectivity messages\nphoromatic: Set Phoromatic System Variables set by server on Phoromatic clients as env vars\nphoromatic: Lots of early Web Sockets work\nphoromatic: Initial support for the Mongoose Embedded Web Server, used by default if php-cgi and mongoose binaries are found in PATH\nphoromatic: Support for tick thread\nphoromatic: Support for reporting system sensors and client log to systems page\nphoromatic: Add support for real-time halt testing and rebooting from the Phoromatic Web UI\n\nPhoronix Test Suite 5.8 Milestone 2\n21 April 2015\n\npts-core: Fix potential crash in list-installed-suites sub-command\npts-core: Enforce CCACHE_DISABLE=1 during install/runtime testing\npts-core: Finish removal of hhvm-server support since it's long been discontinued upstream\npts-core: Add pts-core/hooks/startup\nphodevi: Reporting of Btrfs RAID levels to system component table when running disk tests\nphoromatic: Workaround for instr() usage in SQLite that caused issues with older distributions\nphoromatic: Add LetPublicViewResults option and new public results listing page\nphoromatic: Update results selection on rootadmin data page\nphoromatic: Start work on nginx server configuration (not yet working)\nphoromatic: Add \"System Targets\" info to benchmark ticket page & \"View All Past Tickets\"\n\nPhoronix Test Suite 5.8 Milestone 1\n2 April 2015\n\npts-core: Start moving possible deployment scripts into deploy/ directory\npts-core: Move phoromatic-client and phoromatic-server Upstart job files to deploy/\npts-core: Move phoromatic-client and phoromatic-server systemd service files to deploy/\npts-core: Add very basic result-file-to-json sub-command\npts-core: Drop AnonymousHardwareReporting / AnonymousSoftwareReporting as no longer used on OpenBenchmarking.org\nPull in JuJu scripts from https://github.com/juju-solutions/pts to deploy/juju\nphodevi: More allowance for clients to recover Internet connection / server communication failure\nphoromatic: Clean-up main page schedule for schedules with no associated systems\nphoromatic: Show matching ticket results in the compare results column on results page\nphoromatic: Allow results page to be limited to particular hash or ticket matches\nphoromatic: Allow results page search box to also search system's hardware/software components\nphoromatic: Fix for removing a system from all groups on the \"system group editing\" systems page\nphoromatic: Allow per-system overriding of whether automatic power-offs of system are permitted\nphoromatic: Get rid of block-poweroff file check in client module now that it can be done per-system from server-side\nphoromatic: Allow WoL power-ups for honoring benchmark tickets\nphoromatic: Unify more code from start.php into phoromatic_server\nphoromatic: Always unset the GRUB recordfail when applicable\nphoromatic: Add \"System Maintenance Table\"\nphoromatic: Add \"PowerOnSystemDaily\" setting option to ensure regardless of schedule that systems will at least power-up/communicate daily if enabled\nphoromatic: New checkbox handling on results page to manage comparisons and multi-delete results\nphoromatic: Start work on new main page\n\nPhoronix Test Suite 5.6.0-Dedilovo\n24 March 2015\n\npts-core: Drop bilde_renderer since it's been deprecated for a while\npts-core: Yield /dev/mapper/* points in auto-disk-mount-points\npts-core: Detect Internet presence for enterprise-setup\npts-core: cli_set_process_title() still emits error on OS X so block its usage\npts-core: Fix potential warning in detailed-system-info sub-command\nphodevi: HFS+ file-system fallback detection on OS X\nphodevi: Workaround Hyper Threading detection on OS X\nphoromatic: Add universal search functionality from web interface\nphoromatic: Improve formatting of annotations\nphoromatic: Mark system state as unknown when communication fails and hits the event server check\nphoromatic: Don't attempt to open DB in read-only mode if phoromatic.db not yet made\n\nPhoronix Test Suite 5.6 Milestone 5\n11 March 2015\n\npts-core: Ignore test run locking in stress/multi-run mode\npts-core: Allow 128 character result identifier strings\npts-core: Switch the dump-documentation sub-command to generating the README in md format\nphoromatic: Change the custom From email sender to Reply-To\nphoromatic: Finish hooking-up multi-test/stress-run functionality via the benchmark page\nphoromatic: Send emails from rootadmin or group admin's email address where applicable rather than no-reply@\nphoromatic: Scroll bar on local suites page condensing\nphoromatic: Add \"End Ticket\" option to benchmark page\nphoromatic: Allow stress tests up to 90 days\nphoromatic: Allow stress runs up to 24 concurrent tests\nphoromatic: Add basic support for annotating/commenting on result files and individual graphs\nphoromatic: Add support for the user to delete annotations\n\nPhoronix Test Suite 5.6 Milestone 4\n25 February 2015\n\npts-core: Improvements to phoronix-test-suite make-download-cache\nphoromatic: Add \"admin data\" page to let the rootadmin permanently delete schedules/results/systems\nphoromatic: Allow for system identifier variable in benchmark tickets of .SYSTEM\nphoromatic: Allow for system identifier variable in benchmark tickets of .GROUP\nphoromatic: Allow tickets to be removed from the individual benchmark page\nphoromatic: Allow creating new group accounts from the rootadmin page\nphoromatic: Add support for repeating tickets\nphoromatic: Add basic support for system variables\n\nPhoronix Test Suite 5.6 Milestone 3\n15 February 2015\n\nphoromatic: Allow triggers to be deleted\nphoromatic: Rely on caching for determining pre-existing cached test profiles from the web UI\nphoromatic: Add result RSS support\nphoromatic: Add new option to results page\nphoromatic: Enforce new PTS sign-on whenever the PTS core version changes due to potential interface changes\nphoromatic: Working build suite page\nphoromatic: Add support for local suites page\nphoromatic: Add benchmark page\nphoromatic: Add support for viewing issued benchmark tickets\nphoromatic: Add option to force rebuild of results databases\nphoromatic: Prepend system ID to result string when running multiple tests without variables\nphoromatic: Add \"Test All Options\" opton to build suite page\n\nPhoronix Test Suite 5.6 Milestone 2\n4 February 2015\n\npts-core: Various fixes\npts-core: Deb/RPM build packaging improvements.\npts-core: Add Markdown Readme file\npts-core: Add hidden ?seed_accountid= option to the welcome / account creation page for custom 6 character ID\npts-core: Fix for session save path on Fedora when running as normal user\npts-core: Import copy of FPDF locally for PDF rendering\nphoromatic: Add a public view of test results by going to result page entry -> Result Export -> Public Viewer\nphoromatic: Add basic \"Upload To OpenBenchmarking.org\" link from test result page\nphoromatic: Allow users to reset their own password by navigating to the settings page\nphoromatic: Add \"group name\" concept to Phoromatic group of accounts\nphoromatic: Improved formatting of the public-viewer page\nphoromatic: Allow downloading results as PDF\nphoromatic: Allow disabling new account registration by setting custom string via rootadmin's config page\nphoromatic: Allow setting a main page message string to show users once logging into their account, via rootadmin's config page\nphoromatic: Don't show idling systems on the dashboard\nphoromatic: Add IP ping test to system claim page\nphoromatic: Introduce PPRID structure as universal unique identifier for results between accounts\nphoromatic: Allow optional result sharing between groups / unique accounts (controlled via settings)\nphoromatic: Add \"force result sharing\" option to rootadmin to override per-account settings\nphoromatic: New result compare functionality\nphoromatic: Support for limiting results to a certain time period\nphoromatic: Add comparable results listing on individual result pages\nphoromatic: Register module-discovered Phoromatic Servers with pts-core\nphoromatic: Add \"Only Advertise Cached Tests\" option to rootadmin\nphoromatic: Download latest OpenBenchmarking.org test suites/profiles in background thread from the event server\nphoromatic: Add option to pre-seed test installs to systems when otherwise idling\nphoromatic: Support for exporting result files to download as CSV or TXT\nphoromatic: Add phoromatic.list-results sub-command for clients to view recent results\nphoromatic: Add phoromatic.clone sub-command for clients to clone viewable test results\n\nPhoronix Test Suite 5.6 Milestone 1\n13 January 2015\n\npts-core: Add \"short\" display mode\npts-core: Add stress-run command to allow for concurrent stress testing / burn-in / torture testing\npts-core: Add TOTAL_LOOP_TIME support to stress-run\npts-core: Add TOTAL_LOOP_TIME=infinite support to stress-run for testing in an infinite loop\npts-core: Add support for libframetime output result parsing\nphoromatic: Initial commit of basic tracker page\nphoromatic: Better recovery of existing Phoromatic accounts on reloaded systems where the machine self ID changed\ntimed_screenshot: Fix for crash when PHP GD missing\n\nPhoronix Test Suite 5.4.1-Lipki\n23 December 2014\n\npts-core: Update AppData and systemd service files\npts-core: Add csv-dump-frame-latencies support to result parser\nphoromatic: Improve formatting of result strings when merging random result files together\nphoromatic: Add enterprise-setup sub-command\nphoromatic: Attempt to detect and report IP address next to requested MAC address claim on the system claim page\n\nPhoronix Test Suite 5.4.0-Lipki\n9 December 2014\n\nphoromatic: Main page update\nphoromatic: Various updates\n\nPhoronix Test Suite 5.4 Milestone 7\n1 December 2014\n\npts-core: Improve MAC address acquisition on systems with multiple NICs\nphoromatic: Add add_new_users_to_account option for adding new users automatically to existing account\nphoromatic: Allow changing the admin level for users by the main administrator from the Users page\nphoromatic: Report systems MAC address from the systems page\nphoromatic: Report network's Wake-On-LAN information to Phoromatic Server\nphoromatic: Add notification option to email to users when systems appear hung for more than an hour\nphoromatic: Add option to power off systems when no more scheduled tests are scheduled for the day\nphoromatic: Add option to network wake on lan (WoL) systems when needed for testing\nphoromatic: Allow logging of Phoromatic set user context execution\nphoromatic: Add support for viewing system logs from the result page link on right hand side\nphoromatic: Support for disabling accounts via rootadmin\nphoromatic: Track elapsed time during the testing process, report to Phoromatic Server\nphoromatic: Allow Phoromatic Servers to be specified via a simple text file at PTS_USER_PATH/phoromatic-servers\nphoromatic: Add \"configure Phoromatic client via SSH\" to Phoromatic Server\nphoromatic: Allow IP/MAC based system claiming from Phoromatic Server UI\nphoromatic: Allow blocking poweroffs by touching modules-data/phoromatic/block-poweroff\nphoromatic: Prominently show \"systems needing attention\" from the server UI\nphoromatic: More email reporting of hung systems / systems not running tests when they should\nphoromatic: Add custom Wake-On-LAN packet generator if etherwake isn't found on server\nphoromatic: Show schedules/group on system page\nphoromatic: Hook in estimated time remaining for task\nphoromatic: Report percent complete of task to server\nphoromatic: Add system component table\nphoromatic: Add new reporting features to server\nphoromatic: Add system dashboard\nphoromatic: Add legacy init.d script support\nphoromatic: Rework idle support and add maintenance mode support to client\nphoromatic: Implement maintenance mode on server side\n\nPhoronix Test Suite 5.4 Milestone 6\n19 November 2014\n\npts-core: Fix result merging when PTS test identifier is null, use title string instead as identifier\npts-core: Check for PHP Sockets support\npts-core: Enhanced make-download-cache\npts-core: Enhance PHP_BIN detection\npts-core: Use system's zip library if PHP ZIP is not available\nphoromatic: Upstart phoromatic-server job is working (tested on Scientific Linux 6.6)\nphoromatic: Add \"Run Test Schedule Now\" button to test schedule page to allow for easy one-time/manual testing\nphoromatic: Add some basic statistics to the rootadmin page\nphoromatic: Allow the PhoromaticStorage location to be modified from the webUI when logging in as rootadmin\nphoromatic: Allow the download cache location to be modified from the webUI when logging in as rootadmin\nphoromatic: Allow the network proxy details to be modified from the webUI when logging in as rootadmin\nphoromatic: Allow the HTTP / WebSocket ports to be modified from the webUI when logging in as rootadmin\nphoromatic: Increase memory_limit on download cache downloads\nphoromatic: Expose all possible video modes as test options\nphoromatic: Show recent triggers on a test schedule's page\nphoromatic: Add \"Upload results to OpenBenchmarking.org\" option to settings page\nphoromatic: Fix for deactivating options on settings page\nphoromatic: Remember last successful Phoromatic Server connection\nphoromatic: Add reboot and shutdown commands to Phoromatic module\n\nPhoronix Test Suite 5.4 Milestone 5\n10 November 2014\n\npts-core: Improvements when running as a systemd service / daemon\npts-core: Prefer firefox over Epiphany browser\nphoromatic: Implement email notifications on result uploads\nphoromatic: Implement email notifications on system generated errors/warnings\nphoromatic: Implement email notifications on new systems added\nphoromatic: Allow easily comparing a result file to other results for that given schedule ID\nphoromatic: Improve formatting of lists\nphoromatic: Add times viewed to results\nphoromatic: Add \"show only results with variation\" to result viewing page\nphoromatic: Add result flagging to the main page\nphoromatic: Allow other/unscheduled test results to be uploaded to the Phoromatic Server using the phoromatic.upload-result sub-command\nphoromatic: Show file/path locations when starting the Phoromatic Server\nphoromatic: Use a randomly chosen available port by default when starting the Phoromatic Server if no ports are defined\nphoromatic: Add basic root administrator support to the Phoronix web interface\npts_Graph: Shrink size of sub-title text strings when they're too long\n\nPhoronix Test Suite 5.4 Milestone 4\n5 November 2014\n\npts-core: Add 3840 x 2160 (4K UHD) to more of the mode-setting fall-back modes\npts-core: Start working on support for using standard Linux file-system hierarchy when running as root as a service\npts-core: Add PhoromaticStorage option to Phoronix Test Suite user configuration XML file\nphoromatic: Reporting of overall result counts for given test schedules\nphoromatic: Report benchmarking / test run errors to server\nphoromatic: Show system errors/warnings from the Phoromatic web UI\nphoromatic: Don't attempt to re-run test schedules on clients if they previously reported errors/warnings for that schedule / trigger ID combination\nphoromatic: Usernames need to be at least four characters long\nphoromatic: Add a schedule overview to the schedules page\nphoromatic: Add today's scheduled events to the side bar\nphoromatic: Improve result identifier / title reporting for results\nphoromatic: Implement \"Power User\" account level\nphoromatic: Add normalize results option to the phoromatic result page\nphoromatic: Support for jumping to test results page for XXX past days of test from schedule page\nphodevi: IBM POWER hardware detection improvements\n\nPhoronix Test Suite 5.4 Milestone 3\n20 October 2014\n\npts-core: Introduce basic system logging capabilities for services\npts-core: Try downloading files from remote download caches up to two times in event of failure / checksum issues\nphoromatic: Start a basic logger of Phoromatic Server events\nphoromatic: Add new create schedule interface\nphoromatic: Properly hook in system ID / group validation for test schedules\nphoromatic: Support for editing schedules from the web UI\nphoromatic: Support for activating/deactivating \"deleting\" test schedules from the web UI\nphoromatic: Support for reporting the network MAC address (for later WoL purposes)\nphoromatic: Update the CSS style\nphoromatic: Add support for the main administrator to create multiple users associated with the same account\nphoromatic: Add support for \"viewer accounts\" where they can view data but not alter/write data\nphoromatic: Fix for adding systems to groups\nphoromatic: Support for mass editing of systems in groups via the systems page\nphoromatic: Support for removing system groups\nphoromatic: Introduce activity stream and logging of user events / display from \"activity events\" page\nphoromatic: Support for merging result files from the results page by clicking on each of them once\nphoromatic: Support for deleting results from the web UI's results page\n\nPhoronix Test Suite 5.4 Milestone 2\n5 October 2014\n\npts-core: Add \"ResultAfterString\" to test result parser XML schema\npts-core: Other result file parsing improvements/fixes\npts-core: Rename debug-run mode to debug-benchmark, add extra features\npts-core: Separate out NoNetworkCommunication user option into NoInternetCommunication/NoNetworkCommunication user config options for those still wanting LAN/intranet support\npts-core: Add support to PTS clients for automatically finding Phoromatic Servers using Avahi zero-conf network discovery\npts-core: Improvements to make-download-cache\npts-core: Improved detection of file downloads that fail and serve HTML 404/not found responses\npts-core: Convert to a JSON-based representation instead of XML for the pts-download-cache file\npts-core: Various file hash checking improvements during test installation\npts-core: Allow Phoronix Test Suite clients to automatically discover Phoromatic download-cache archives\npts-core: Rewrite most of the RPM package generator\npts-core: Support /usr/share/phoronix-test-suite/download-cache as another download cache by default\npts-core: Client support for being able to obtain OpenBenchmarking.org index/test/suite data from local Phoromatic Servers\npts-core: Improved dump-core-storage output\npts-core: Introduce machine_self_id as UUIDv5 compliant self-generated unique identifier for each PTS client\npts-core: Allow result file titles up to 126 characters in length\npts-core: Add start of basic Phoromatic Server systemd service file\npts-core: Add start of basic Phoromatic Server Upstart conf file\npts-core: Introduce make-openbenchmarking-cache sub-command for trying to cache all test/suite meta-data from OpenBenchmarking.org\npts-core: Allow PhoromaticServers user-config.xml to specify static Phoromatic Server IP:port information\npts-core: Initial Upstart and systemd configurations for the Phoromatic clients\nphoromatic: Begin allowing results to be stored locally, not dependent on OpenBenchmarking.org storage\nphoromatic: Advertise Phoromatic Server using Avahi zero-conf networking service when avahi-publish available and AdvertiseServiceZeroConf user config option is TRUE\nphoromatic: Automatically setup download-cache over Phoromatic HTTP with the system's local download-cache archive\nphoromatic: Allow sharing OpenBenchmarking.org index/test/suite cache data from server with local Phoromatic clients\nphoromatic: Support pts-core's machine_self_id for system identification as an alternative to OpenBenchmarking.org GSID\nphoromatic: Add phoromatic.explore sub-command for showing discovered Phoromatic servers and their server/debugging information\nphoromatic: Add a cache settings page to the web interface\nphodevi: Allow GPU frequency detection for DRM/KMS drivers when no X Server DDX is detected\nphodevi: Allow multiple providers for one VFS entry in case of failure in prior commands/files\nphodevi: Allow reading X Server log from the systemd journalctl\nphodevi: Restructure when /etc/os-release is parsed for obtaining OS name/version information\nsystem_monitor: Allow user-set time interval period between sensor measurements using MONITOR_INTERVAL environment variable\n\nPhoronix Test Suite 5.4 Milestone 1\n5 September 2014\n\npts-core: Sanitize pts_result_file user strings\npts-core: Don't set memory_limit with HHVM\npts-core: Drop phoromatic_legacy support (old Phoromatic.com version)\nsystem_monitor: Correct perf-per-Watt calculation for LIB results\nphodevi: Support Nouveau's pstate formatting changes to read core/mem MHz on newer kernels\nphodevi: Support for reading monitor EDID over sysfs, decoding descriptors, and obtaining monitor name (should improve monitor name reporting for Intel Linux systems)\nphodevi: Improved SoC detection\npts_LineGraph: Alignment fix for keys\n\nPhoronix Test Suite 5.2.1-Khanino\n11 July 2014\n\npts-core: Add VDPAU as a dependency to the xorg-video external dependency on more platforms\npts-core: Don't check OpenBenchmarking.org credentials when the network is down\npts-core: Rework result-file-to-text sub-command, show text-based graph results\nphodevi: Improve NVIDIA binary driver GPU utilization detection\nphodevi: Add DDE / Deepin Desktop Environment detection\npts_Graph: Few minor graph alignment corrections\n\nPhoronix Test Suite 5.2.0-Khanino\n5 June 2014\n\npts-core: Support for GZ compressing result file XML data before uploading to OpenBenchmarking.org\npts_Graph: Further graphing improvements\n\nPhoronix Test Suite 5.2 Milestone 4\n29 May 2014\n\npts-core: Always report the CPU scaling governor to the system table\npts-core: Add auto-sort-result-file option\nphoromatic: Improve the systems' page\nphoromatic: Allow up to three connection failures before quitting\npts_Graph: Improved, cleaner, and more accurate rendering of the pts_OverViewGraph\npts_Graph: Make the horizontal box chart graph in good shape\npts_Graph: Revert earlier render_graph_value_ticks() change by mufasa72 as it produced inaccurate tick values\npts_Graph: use the horizontal box plot when rendering frame times for large number of results\npts_Graph: Various other graphing improvements\n\nPhoronix Test Suite 5.2 Milestone 3\n22 May 2014\n\npts-core: Be more strict in handling DynamicRunCount option\nphoromatic: Cleaning up more of the Phoromatic UI\nphoromatic: Support for updating the system status\nsystem_monitor: Allow extra idling time at begin and end of testing process\npts_Graph: Improve formatting of line graph keys\nphodevi: Detection support for KDE Frameworks 5 / Plasma Next desktop\n\nPhoronix Test Suite 5.2 Milestone 2\n18 May 2014\n\npts-core: Add RUN_TESTS_IN_RANDOM_ORDER environment variable to cause tests to run in a random order\npts-core: Add sdl2-development to PTS External Dependencies\npts-core: Fix regression from 5.2m1 that broke some areas of the GUI / web interface\npts_Graph: Render min/avg/max stats at top of line graphs (thanks to mufasa72)\n\nPhoronix Test Suite 5.2 Milestone 1\n8 May 2014\n\npts-core: Fix for not writing null test result file titles\npts-core: Fix & improvements to PRESET_OPTIONS environment variable\npts-core: Rename old/legacy phoromatic module to phoromaric_legacy\npts-core: Allow a range of test run options to be inputted (e.g. 2-5) to complement just a single test option or delimited by commas\npts-core: Fix for NOT saving test results when in batch-run mode and configured against saving\npts-core: Allow TEST_RESULTS_IDENTIFIER environment variable to be used when running tests unconditionally\nphodevi: Improvement for detecting optimal NVIDIA Linux GPU core frequency on modern GPUs\nphodevi: Add GPU usage reporting support to open-source AMD Radeon driver via RadeonTOP\n\nPhoronix Test Suite 5.0.1-Plavsk\n2 April 2014\n\npts-core: Add \"libudev1:i386\" to \"32bit-compatibility\" external dependency for Ubuntu Linux\npts-core: Add invalid command helper to force-install sub-command\npts-core: Add \"pcre\" external dependency\npts-core: Add pushover_net module as a way of sending iOS/Android push notifications of results using Pushover.net\npts-core: Ensure the result file description properly updates when adding to result files with new data\npts-core: Add edit-result-file command that allows for editing a result file's title and description\npts-core: Workaround HTTPS OpenBenchmarking.org proxy issue\npts-core: Improved handling when the system's php.ini is using a restricted open_basedir setting\npts-core: Arch Linux support improvements\npts-core: When PTS client fails to find ZIP support, emit a PTS error\npts-core: Ship an AppData file (phoronix-test-suite.appdata.xml)\ntoggle_screensaver: Disable on OS X since there is no support for automatically disabling the OS X screensaver and causes collision with MacPorts\nphodevi: Add extra checks to ensure NVIDIA blob doesn't get reported as Nouveau DDX due to kernel changes\n\nPhoronix Test Suite 5.0-Plavsk\n12 March 2014\n\npts-core: Improvements to run-random-tests\npts-core: Support for running the HTML5 UI on Microsoft Windows\npts-core: Rename RemoteAccessAllowed user configuration option to RemoteAccessPort\nphodevi: Improve MATE detection\nphodevi: Improve desktop environment recognition with $DESKTOP_SESSION\nphodevi: Ensure GCC's minor version number is reported\n\nPhoronix Test Suite 5.0 Milestone 3\n3 March 2014\n\npts-core: Windows 8.1 support improvements\npts-core: Add SKIP_TESTING_SUBSYSTEMS environment variable, partially based on former ONLY_TEST_TYPES\npts-core: Add a run-random-tests command to run random tests/workloads on the system\nphodevi: Improve NVIDIA DDX version detection\nphodevi: Improve audio detection\nphodevi: Add extra fallback for trying to read Radeon DRM core and memory frequencies on recent kernels\n\nPhoronix Test Suite 5.0 Milestone 2\n17 February 2014\n\npts-core: Add rename-result-file option\npts-core: WebSocket bug-fixes\npts-core: Other bug-fixes\npts-core: Disable the compiler-mask by default on FreeBSD/PC-BSD due to potential test installation issues on 10.0-RELEASE\npts-core: Split webui command into gui and start-remote-gui-server (local HTML5 GUI support) commands (remote + local HTML5 GUI support)\n\nPhoronix Test Suite 5.0 Milestone 1\n6 February 2014\n\npts-core: Add web-server-launcher support\npts-core: Support starting HHVM as a web server\npts-core: Startup speed optimizations\npts-core: Cleaned up code error reporting/handling\npts-core: Add server remote access and password options to user-config.xml user configuration options\npts-core: Adjust handling of PTS OpenBenchmarking.org downloading of test profile order and hash handling\npts-core: Reduce unnecessary communication with OpenBenchmarking.org network server\npts-core: Support system identifier strings up to 64 characters\npts-core: Add LIMIT_ELAPSED_TEST_TIME to limit the amount of time (in minutes) for a given Phoronix Test Suite process to complete its testing\npts-core: Allow null descriptor strings\npts-core: Fix regex for version string\npts-core: Random fixes\nphodevi: Various improvements\nphodevi: Improved disk scheduler fallback reporting\ndocumentation: Update to point out new Git location at github.com/phoronix-test-suite/ over Phorogit\nnye_Xml: Fix for writing zeros in XML tags when using the \"when not empty\" function\n\nPhoronix Test Suite 4.8.6-Sokndal\n10 December 2013\n\npts-core: Print out pre/interim/post test script outputs when running in debug-run mode\npts-core: DragonFlyBSD 3.6.0 support improvements\npts-core: Support using DragonFlyBSD dports package management system for external dependencies\npts-core: NO_FILE_HASH_CHECKS environment variable also doesn't enforce MD5/SHA256 checks on make-download-cache sub-command\npts-core: Pass test arguments to pre/interim/post test profile scripts; ESET / Michal Zatloukal patch\npts-core: Don't do dynamic test run counts when using system_monitor module\npts-core: Support reading the full terminal width using stty as tput cols doesn't seem to report anything but 80 with shell_exec()\npts-core: Add \"tiff\" external dependency for providing libtiff and header files\npts-core: Don't offer to save test results when using debug-run mode\nphodevi: Support reading monitor vendor/model numbers when using the binary NVIDIA Linux driver, including recent versions\nphodevi: Improve multi-monitor resolution reporting when sharing an X.Org Server\nphodevi: Remove more useless compiler path argument reports\ntoggle_screensaver: Auto unload module when no display server found\n\nPhoronix Test Suite 4.8.5-Sokndal\n22 November 2013\n\npts-core: Improve formatting of interrupt messages with the (default) concise display mode\npts-core: Don't remove test install files on installation failures\npts-core: Allow download-test-files command to use OpenBenchmarking.org IDs\npts-core: Don't dynamically increase the test run count when dealing with cache shares\npts-core: Fix for not opening the web-browser in batch mode\npts-core: Add zypper SUSE help support when not finding PHP\nphodevi: Add support for Nouveau PSTATE parsing on Linux 3.13+\nphodevi: Recognize 'HIS' (Hightech Information System) graphics cards\nphodevi: Recognize 'ZOTAC' graphics cards\nphodevi: Fix redundant monitor model reporting detection on Catalyst\nphodevi: Add support for NVIDIA-Settings GPUUtilization in gpu.usage sensor\n\nPhoronix Test Suite 4.8.4-Sokndal\n7 November 2013\n\npts-core: Allow web browsers and graphics tests to work on $WAYLAND_DISPLAY when $DISPLAY is not set\npts-core: Fix for libstdc++ on Gentoo external dependency\npts-core: Add a ResultScale XML tag option for the results-parser to provide custom ResultScale values depending upon selected parser option\npts-core: Add a ResultProportion XML tag option for the results-parser to provide custom result proportion values depending upon selected parser option\npts-core: Add ResultPrecision XML tag to results-parser for setting math precision of decimal points on result (default remains 2)\npts-core: Add support for writing to $INSTALL_FOOTNOTE during test installations to report custom footnote on generated graphs\npts-core: Add SuiteSparse, TinyXML, DUNE external dependencies\npts-core: Add opencl header external dependencies for more platforms\npts-core: Refresh OpenBenchmarking.org repository index data file once upon hitting missing test profile\npts_Graph: Improve precision of increments for graph results with sub-1 values\nphodevi: Protect against \"undefined\" memory strings from DMI data\nphodevi: Add Wayland Weston version detection\nphodevi: Detect gnome-shell-wayland\nphodevi: Add support for CPU node-count property for number of physical CPU nodes\n\nPhoronix Test Suite 4.8.3-Sokndal\n2 October 2013\n\npts-core: Fix openmpi on Gentoo external dependency\npts-core: Detect graphics comparison when GPU changes with audio string\npts-core: Don't use HTTPS on proxies when connecting to OpenBenchmarking.org\npts-core: Add VersionSpecific capability to external dependencies handling for package(s) that may only be in certain OS versions\npts-core: Ensure xscreensaver is deactivated\npts-core: Support toggling GNOME3 screensaver on GNOME 3.8+ where org.gnome.desktop.screensaver idle-activation-enabled -> org.gnome.desktop.session idle-delay\nphodevi: Fix for parsing long PCI string values\nphodevi: Improve Intel GPU model detection with recent xf86-video-intel DDX\n\nPhoronix Test Suite 4.8.2-Sokndal\n30 August 2013\n\npts-core: Fix for reporting environment variables to system notes on system graph table\npts-core: Fix OpenBenchmarking.org class issue for select code paths\n\nPhoronix Test Suite 4.8.1-Sokndal\n14 August 2013\n\npts-core: Fix OpenBenchmarking.org log-ins\n\nPhoronix Test Suite 4.8.0-Sokndal\n13 August 2013\n\npts-core: When PHP is missing, for apt-get/yum distributions report the likely command needed to run\npts-core: Don't prompt to install missing/failed tests when using the 'benchmark' command\nphodevi: Support for reading the Radeon DRM driver's current core/memory frequencies when DPM is enabled (Linux 3.11+)\nphodevi: Support for reading the top Radeon DRM driver core/memory frequency via dmesg when DPM is enabled (Linux 3.11+)\nphodevi: Support for reading the Radeon DRM driver's current GPU (vddc) voltage when DPM is enabled (Linux 3.11+)\nphoromatic: Updated module against latest upstream Phoromatic.com Server\n\nPhoronix Test Suite 4.8 Milestone 5\n6 August 2013\n\npts-core: Add php5-json as a dependency now on Debian packages since Ubuntu split it up and no longer in php5-cli\npts-core: Add support for reporting set kernel module parameters to notes on the system table graph\npts-core: Add support for reporting of important environment variables to notes on the system table graph\npts-core: Changes needed for modern Phoromatic\npts_Graph: Add new automated color chooser for line graph color selection\npts_Graph: Slight rework to code handling the remove of common words from result identifiers\nphodevi: Add support for Intel DRM driver's gt_max_freq_mhz for obtaining maximum GPU frequency on modern kernels\nphodevi: Add support for Intel DRM driver's gt_cur_freq_mhz for obtaining current GPU frequency on modern kernels\nphodevi: Only prepend AIB vendor to NVIDIA and AMD GPU strings\nphodevi: Add system.kernel-parameters property for reading kernel command line parameters\nphodevi: Add support for checking the __GL_FSAA_MODE environment variable\nphodevi: Add support for checking the __GL_LOG_MAX_ANISO environment variable\nphodevi: Add 0xc36400 super block for CephFS\nphodevi: Add unity-system-compositor version detection\n\nPhoronix Test Suite 4.8 Milestone 4\n24 July 2013\n\npts-core: Add initial support for test profile's downloads.xml to have a SHA256 hash for files\npts-core: Rename NO_MD5_CHECKS environment variable to NO_FILE_HASH_CHECKS\npts-core: Add PTS5 codenames from Tulskaya oblast / Tula Oblast Russian region\npts-core: Support fixes for Facebook HipHop Virtual Machine for PHP HHVM 2.1.0\npts-core: Fix text corruption bug with auto shortening of identifiers on multi-way comparisons\npts_Graph: Fix auto shortening when the first identifier is only one word\nphodevi: Support ECS and eVGA graphics card AIB vendor detection\n\nPhoronix Test Suite 4.8 Milestone 3\n19 July 2013\n\npts-core: Add few more cases of error detection on failed test install\npts-core: Round download size totals in the concise display mode for large files\npts-core: Add missing PreInstallMessage and PostInstallMessage to the OpenBenchmarking.org test profile schema and writer\npts-core: Allow test results to have \"secondary_linked_results\"\npts-core: Add initial support for frame latency / jitter secondary result graphs\npts_Graph: Assume any version of Google Chrome/Chromium can render SVG\npts_Graph: Only prepend 'v' to version string on graphs if first character is numeric\ntoggle-screensaver: Support doing \"xscreensaver-command -exit\" when needed\nphodevi: Add more stock fallback display modes\nphodevi: Ensure MB/GB are reported on OS X memory strings\nphodevi: Workaround Linux 3.10 kernel reporting bogus frequencies for scaling_max_freq on some Intel CPUs\nphodevi: Support prepending the graphics card / AIB vendor on GPU strings\n\nPhoronix Test Suite 4.8 Milestone 2\n6 July 2013\n\npts-core: Expand Mandriva Linux external dependency support to distributions having urpmi\npts-core: Add Apple OS X font paths for use by the GD graph renderer\npts-core: Add \"/usr/lib64/\" to the automated external dependency verification path\npts-core: Allow passing multiple test identifiers to remove with remove-from-result-file command\npts-core: Give a warning when the results viewer opens in the KDE Konqueror web-browser\nphodevi: Break operating system string at \"(\"\nphodevi: Don't return \"n/a\" from LSB release strings\nphodevi: IceWM window manager detection\nphodevi: Add gpu.temp safety check to prevent against AMD Catalyst OverDrive sending garbage\nphodevi: Fix for XRandR resolution query on XMir\nphodevi: Support using systemd-detect-virt as fallback for detecting Linux virtualization method\n\nPhoronix Test Suite 4.8 Milestone 1\n20 June 2013\n\npts-core: Don't show null error strings on failed test installations\npts-core: Allow test profiles to pass min/max data results through JSON to graphs using MIN_ and MAX_ prefixes\npts-core: Support displaying min/max data from the concise (default) display mode text output\nphodevi: MHz -> GHz fix for the cpu.freq sensor on Apple OS X\nphodevi: Add fallback support for using ioreg for calculating sys.power power draw on Apple OS X\nphodevi: Support reporting multiple monitor models from Xorg.0.log\n\nPhoronix Test Suite 4.6.1-Utsira\n6 June 2013\n\npts-core: Add ONLY_TEST_TYPES environment variable for skipping test profiles that don't belong to a certain hardware type\npts-core: Ensure extract-from-result-file opens the proper HTML web-browser\npts-core: Ensure copy-run-in-result-file opens the proper HTML web-browser\npts-core: Ensure reorder-result-file opens the proper HTML web-browser\npts-core: Ensure rename-identifier-in-result-file opens the proper HTML web-browser\npts-core: Ensure remove-from-result-file opens the proper HTML web-browser\npts-core: Reworked handling of browser launching in batch mode\npts-core: Launch the web browser to display results when using internal-run mode\nphodevi: Add Haswell BMI2 detection\nphodevi: Support vm_stat with the memory.usage sensor, works on OS X\nphodevi: Add new network.usage sensor for Apple OS X contributed by ESET\n\nPhoronix Test Suite 4.6.0-Utsira\n21 May 2013\n\nphodevi: Report CPU scaling driver along side the CPU scaling governor\n\nPhoronix Test Suite 4.6 Milestone 2\n16 May 2013\n\npts-core: Support compiler masking on short binaries\npts-core: More advanced detection of compiler flags within the compiler masking process\npts-core: DragonFlyBSD external dependency packaging updates\npts-core: Various fixes\nphodevi: Fix for cpu.freq sensor reading on Apple OS X\n\nPhoronix Test Suite 4.6 Milestone 1\n11 April 2013\n\npts-core: Official support for Facebook's HipHop HHVM PHP\npts-core: Introduce new pts_define interface\npts-core: Add debug-self-test option for running a self-hosting PHP/PTS performance test\npts-core: Support PHP 5.4's cli_set_process_title() function\npts-core: For now don't use PHP CURL on HipHop HHVM due to issues\npts-core: Ubuntu 13.04's sudo seems to have problems with the external dependency handling\npts-core: Add internal-run command for running benchmarks in semi-automated manner and without uploading data to OpenBenchmarking.org\nphodevi: Fix for memory reporting on OS X\nphodevi: Improved LLVM Clang compiler version detection with modern Apple Xcode\nphodevi: Improved Intel Linux GPU overclocking frequency detection\nphodevi: Fix for detecting new (319.xx) NVIDIA Linux driver X.Org driver\n\nPhoronix Test Suite 4.4.1-Forsand\n14 March 2013\n\npts-core: Add the arm-linux-gnueabihf library directory for PTS External Dependency checks\npts-core: Add SKIP_ALL_TEST_SUPPORT_CHECKS environment variable\npts-core: Fix screen resolution listening when the resolution fails to be detected through Phodevi\npts-core: Update openSUSE external dependencies\npts-core: Strip \"project\" from reported strings\nphodevi: Add support for detecting the Razor-qt desktop environment\nphodevi: No longer report the Catalyst marketing version number since the DDX is no longer reporting it reliably\nphodevi: Detect if the X.Org Server DDX module was unloaded\nphodevi: Reorder DDX driver fallback detection\nphodevi: Cleanse eCryptfs sig and cipher from showing in mounts file\nphodevi: Improve Linux memory RAM type detection\n\nPhoronix Test Suite 4.4.0-Forsand\n26 February 2013\n\npts-core: Improvement for detecting installed libraries for external dependency handling\npts-core: Address redundant dash handling within the result file save name\nphodevi: Support for detecting SurfaceFlinger (Google Android)\nphodevi: Ensure non-ASCII characters are removed from Phodevi properties\nphodevi: Support for reading the OpenGL Core Profile information via glxinfo\n\nPhoronix Test Suite 4.4 Milestone 3\n14 February 2013\n\npts-core: Incorporate xx.yy (of xx.yy.zz) test profile version string into test result comparison_hash\npts-core: Return contained tests hash for result files as a raw SHA1\npts-core: Improving passing of compiler flags/options to be reported on test result graphs\npts-core: Support specifying just relative include files, shared libraries, and command names for file check in PTS External Dependencies\npts-core: Faster PTS External Dependencies resolution and file checking\npts-core: Support for falling back right away to the generic file check lists for packages if not supplied by OS-specific list\npts-core: Add MacPorts PTS External Dependencies support for handling some package dependencies on Apple Mac OS X\npts-core: Allow 3D tests to run when LLVMpipe OpenGL is present regardless of the display driver loaded for the graphics card\nphodevi: Add file-system magic blocks for eCryptfs, AuFS, LustreFS, and Panasas PanFS\nphodevi: Add AVX2 (Advanced Vector Extensions 2) CPU instruction set detection\nphodevi: Support for detecting the new F2FS file-system\n\nPhoronix Test Suite 4.4 Milestone 2\n30 January 2013\n\npts-core: Improvement for detecting errors from failed test installations\npts-core: Allow \"Deprecated\" flag for ProfileStatus in the XML test profile schema\npts-core: Support for scanning test run log files automatically to look for errors when tests fail to execute\npts-core: Remove duplicate \"libtool\" PTS External Dependency\npts-core: Complete rewrite of the FreeBSD external dependency handling to use ports collection\npts-core: Enable BSD support for checking exit codes on test installation and test execution\npts-core: Various BSD support improvements\npts-core: Begin on DragonFlyBSD pkgsrc-based external dependency solution\nphodevi: Fix to improve Xfce version detection when Gtk-Warnings are thrown before the version string\nphodevi: Add Enlightenment desktop environment detection support\nphodevi: Add Consort Desktop Environment (GNOME Fork) detection support\n\nPhoronix Test Suite 4.4 Milestone 1\n23 January 2013\n\npts-core: Introduce 'common-dependencies' concept to PTS External Dependencies\npts-core: Fix reporting of some already installed dependencies\npts-core: Support for listing 'local/' tests from the list-supported-tests command\npts-core: Support for test profiles providing a 'support-check.sh' file\npts-core: Support for reporting the Graphics AA/AF values to the system notes table\npts-core: Add a public version of the TODO list\npts-core: Don't attempt copying install.log to install-failed.log on empty files\npts-core: Add fallback to allow matching an operating system to an external dependencies package list based upon the detected package manager\npts-core: When anonymous usage reporting is enabled, report test installation failures to OpenBenchmarking.org for analyzing problem\npts-core: Support for detecting common errors within test profile install failures and reporting the relevant information to the user\npts-core: When installing many tests and there are install failures, conveniently show the errors at the end\npts-core: When installing multiple tests, report any unknown test profiles/suites\npts-core: Faster loading of list-available-tests command by not forcing all test profile data be downloaded\npts-core: Progressively download OpenBenchmarking.org in list-available-suites command to display information faster\nphodevi: Improve Nouveau video RAM memory capacity detection on newer Linux kernels\nphodevi: Warning fix for Radeon GPU frequency detection\nphodevi: Drop \"special_settings_string\" support\nphodevi: Support for checking if the Gallium3D anti-aliasing level was overrode using GALLIUM_MSAA environment variable\n\nPhoronix Test Suite 4.2.0-Randaberg\n20 December 2012\n\npts-core: Fix SVG render detection on Firefox/Gecko 17.0\npts-core: Fix for breaking quoted args with internal spaces (reported by _rubio_)\npts-core: Add glibc-static to build-utilities external dependency on Fedora\npts-core: Fix for using the SKIP_TESTS environment variable causing a fatal error\npts-core: Phoronix Test Suite 4.4 is codenamed Forsand\nphodevi: Improved detection of power consumption from batteries in certain Linux configurations\n\nPhoronix Test Suite 4.2 Milestone 3\n22 November 2012\n\npts-core: Don't report null times for estimated run-time\nphodevi: Support for determining the build configuration on LLVM 3.2 where llvm-ld is llvm-link\nphodevi: Hard fall-back support for detecting the xf86-video-modesetting driver usage\ntoggle_screensaver: Disable blanking of the terminal screen when running tests\n\nPhoronix Test Suite 4.2 Milestone 2\n22 October 2012\n\npts-core: Add list-recommended-tests option for providing subsystem test recommendations based upon OpenBenchmarking.org popularity/usage\npts-core: Add auto-compare option for automatically determining relevant OpenBenchmarking.org result comparisons based upon software/hardware\npts-core: Allow passing test profile names to auto-compare to seed it with the test(s) you wish to use for comparison\npts-core: OpenBenchmarking.org now supports system log payload sizes up to 2MB\npts-core: Object-ify PTS external dependency handling\nphodevi: Split some functions into new phodevi_base class\n\nPhoronix Test Suite 4.2 Milestone 1\n8 October 2012\n\npts-core: Support download caches at /media/*/*/download-cache/\npts-core: Support OPENGL_DRIVER as a run-time variable\npts-core: For external dependency handling, treat Linaro as Ubuntu\npts-core: Check for null distribution-specific external dependency package names\npts-core: Formatting improvements to result-file-to-text output\npts-core: Add openssl-development as a new test external dependency\npts-core: Don't warn on out-of-date test profiles when being run in batch mode\nphodevi: Support for reading the VirtualBox version of Beta/RC versions\nphodevi: Better support detection for Exynos ARM cores\nphodevi: Initial support for reading node power over IPMI\nphodevi: Initial support for reading core temperature over IPMI\nphodevi: On Linux attempt to determine the install RAM's vendor and product part number\ntoggle_screensaver: Support for module suspending the Xfce4 desktop screensaver using xfconf-query\npts_Graph: Fix for vertical/rotated text in SVG -> GD translation\n\nPhoronix Test Suite 4.0.1\n21 August 2012\n\npts-core: Allow shortened test profile versions inputted by user to be expanded to matching latest version in stream\npts-core: Allow shortened test suite versions inputted by user to be expanded to matching latest version in stream\npts-core: Add list-unsupported-tests option for debugging purposes\npts-core: Add subversion as a PTS External Dependency\npts-core: Add git as a PTS External Dependency\npts-core: Add superlu as a PTS External Dependency\npts-core: Add libtool as a PTS External Dependency\npts-core: Hash within the result file all of the contained tests\npts-core: Support for anonymous usage reporting of test installation times to OpenBenchmarking.org\nphodevi: Fix memory RAM DIMM count detection in select configurations\nphodevi: Intel GPU string reporting improvement\nphodevi: Support for detecting multiple GPUs on Apple OS X\nphodevi: Support for detecting Gallium3D XA\nphodevi: Support for llvm-link on LLVM 3.2svn\n\nPhoronix Test Suite 4.0.0-Suldal\n23 July 2012\n\npts-core: Initial implementation of the PTS4 Local Results Viewer\npts-core: Initial command of ob-test-profile-analyze\npts-core: Fix for installing Ubuntu external dependencies in a headless mode\npts-core: Disable webui since it won't be ready until PTS 4.2\npts-core: External dependencies fix for SUSE Linux Enterprise Server 11\nphodevi: Additional fall-back support when GPU driver doesn't expose all standard mode-setting modes\nphodevi: Support for detecting and reading the version of the Cinnamon Desktop Environment\ntimed_screenshot: Overhaul of the timed screenshot PTS module\ntimed_screenshot: Compress PNG images\n\nPhoronix Test Suite 4.0 Milestone 4\n29 June 2012\n\npts-core: Support download caches at /run/media/*/*/download-cache/\npts-core: Set SKIP_TEST_SUPPORT_CHECKS=1 environment variable for debugging purposes to run tests on unsupported platforms\npts_Graph: Only render as much room for pts_OverViewGraph as there are for what will be rendered (bar graph values)\nphodevi: Ensure DVD drives don't get reported on BSD operating systems when requesting disk drives\nphodevi: Improve graphics processor detection on Solaris 11 11/11 for non-NVIDIA GPUs\nsystem_monitor: Add support for handling i915_energy monitor reading in microJoules for each test run\nsystem_monitor: Place timer support for individual test runs within the module\n\nPhoronix Test Suite 4.0 Milestone 3\n22 May 2012\n\npts-core: Reformat user configuration input on test run\npts-core: Improve no-network support handling\npts-core: Streamline detailed-system-info collection\npts-core: Invalid command improvements\npts-core: Various alterations\npts-core: Make greater use of trigger_error\npts-core: Generate more relevant default result identifier strings based on subsystems under test on empty input\nphodevi: Support to attempt to detect the file-system underneath ecryptfs\npts-core: Debian control script update\n\nPhoronix Test Suite 4.0 Milestone 2\n29 April 2012\n\npts-core: Better recognize some open-source vs. closed-source graphics card/driver combination comparisons\npts-core: Fix potential crash in list-test-usage command\npts-core: Support for detecting FSGSBASE and RDRAND on Intel Ivy Bridge\npts-core: When detecting a CPU comparison, report the detailed CPU system table information\npts-core: When detecting a GPU/OpenGL comparison, report the detailed GPU system table information\npts-core: Fix PRESET_OPTIONS failing when specifying an option value rather than its index\npts-core: Archive vdpauinfo when available\nphodevi: Detection support for Intel IOC (Intel Offline Compiler) OpenCL SDK\nphodevi: Support for detecting GLAMOR (Intel OpenGL-accelerated X.Org Driver) acceleration\npts_Graph: Fix rounding issue on pts tables that are very wide\npts_Graph: Add SideViewTable\ndocumentation: Add a basic text README to the root phoronix-test-suite directory\n\nPhoronix Test Suite 4.0 Milestone 1\n12 April 2012\n\npts-core: Add AutoSortRunQueue option that by default automatically sorts the test execution queue to run similar tests together\npts-core: Expose more verbose information within detailed-system-info command\npts-core: Remove recover-run command since with new PTS4 changes the finish-run command will provide the same functionality\npts-core: Track the CPU scaling governor configuration between test runs\npts-core: Report 2D acceleration information to system table report on graphics test runs\npts-core: Support for showing test notes on multi-way comparisons\npts-core: Fix compatibility with the new pts_Graph renderer back-end for result-file-to-pdf option\npts-core: Add p7zip as a possible external dependency\npts-core: When running OpenCL tests, report the number of available compute cores\npts_Graph: Begin work on PHP 5.4 \"webui\" option (currently far from incomplete/experimental)\npts_Graph: Tweak spacing on pts_Table\npts_Graph: Re-factor most text vertical offsets to not use dominant-baseline since Opera still doesn't support this SVG attribute properly\npts_Graph: Begin unifying the Phoronix Test Suite and OpenBenchmarking.org theme\npts_Graph: Fix for emitted GD poly-lines being always black\npts_Graph: Begin work on block diagram graph (currently incomplete/experimental)\nphodevi: Remove support for the deprecated HAL Linux fall-backs\nphodevi: LLVM compiler reporting build configuration enhancements\nphodevi: Support for reporting multiple mmcblk* disk devices\nphodevi: Report /sys/hypervisor/type as a system layer\nphodevi: Fix LXDE version detection\nphodevi: Support for reporting the Openbox version\nphodevi: Read Nouveau clock current frequencies rather than maximum frequencies (performance_level)\nphodevi: Initial implementation of the Phodevi VFS (Virtual File-System; Still A Work In Progress)\ngraphics_event_checker: Override NVIDIA SyncToVBlank so it's always disabled\nsystem_monitor: Allow performance per Watt to be automatically calculated if PERFORMANCE_PER_WATT is set\n\n###\n\nFor the change-log from older Phoronix Test Suite releases, view the Phoronix Test Suite Git repository\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.080078125,
          "content": "# Phoronix Test Suite 10.8.5\n![Phoronix Test Suite](pts-core/static/images/pts-308x160.png)\n\nThe **Phoronix Test Suite** is the most comprehensive testing and benchmarking\nplatform available for Linux, Solaris, macOS, Windows, and BSD operating\nsystems. The Phoronix Test Suite allows for carrying out tests in a fully\nautomated manner from test installation to execution and reporting. All tests\nare meant to be easily reproducible, easy-to-use, and support fully automated\nexecution. The Phoronix Test Suite is open-source under the GNU GPLv3 license\nand is developed by Phoronix Media in cooperation with partners.\n\n[Phoronix Test Suite\nDocumentation](https://github.com/phoronix-test-suite/phoronix-test-suite/blob/master/documentation/phoronix-test-suite.md)\n\nThe Phoronix Test Suite itself is an open-source framework for conducting\nautomated tests along with reporting of test results, detection of installed\nsystem software/hardware, and other features. This framework is designed to be\nan extensible architecture so that new test profiles and suites can be easily\nadded to represent performance benchmarks, unit tests, and other quantitative\nand qualitative (e.g. image quality comparison and pass/fail) measurements.\nAvailable through OpenBenchmarking.org, a collaborative storage platform\ndeveloped in conjunction with the Phoronix Test Suite, are more than 600\nindividual test profiles and more than 200 test suites available by default from\nthe Phoronix Test Suite. Independent users are also able to upload their test\nresults, profiles, and suites to OpenBenchmarking.org.\n\nA test profile is a single test that can be executed by the Phoronix Test Suite\n-- with a series of options possible within every test -- and a test suite is a\nseamless collection of test profiles and/or additional test suites. A test\nprofile consists of a set of Bash/shell scripts and XML files while a test suite\nis a single XML file. Modules for the Phoronix Test Suite also allow for\nintegration with git-bisect and other revision control systems for per-commit\nregression testing, system sensor monitoring, and other extras.\n\n[OpenBenchmarking.org](https://www.openbenchmarking.org/) also allows for\nconducting side-by-side result comparisons, a central location for storing and\nsharing test results, and collaborating over test data.\n[Phoromatic](https://www.phoromatic.com/) is a complementary platform to\nOpenBenchmarking.org and the Phoronix Test Suite for interfacing with Phoronix\nTest Suite client(s) to automatically execute test runs on a timed, per-commit,\nor other trigger-driven basis. Phoromatic is designed for enterprise and allows\nfor the easy management of multiple networked systems running Phoronix Test\nSuite clients via a single web-based interface.\n\nProfessional support and custom engineering for the Phoronix Test Suite,\nPhoromatic, and OpenBenchmarking.org is available by contacting\n<https://www.phoronix-test-suite.com/>.\n\nFull details on the Phoronix Test Suite setup and usage is available from the\nincluded HTML/PDF documentation within the phoronix-test-suite package and from\nthe [Phoronix Test Suite documentation directory](documentation/).\n\n## Installation & Setup\n\nThe Phoronix Test Suite is supported on Linux, *BSD, Solaris, macOS, and Windows\nsystems. However, the most full-featured and well supported operating system for\nconducting the tests is Linux with some non-basic functionality not being\navailable under all platforms. The Phoronix Test Suite software/framework is\ncompatible with all major CPU architectures (e.g. i686, x86_64, ARM / AArch64,\nRISC-V, POWER 64-bit), but not all of the test profiles/suites are compatible\nwith all architectures.\n\nThe Phoronix Test Suite can be installed for system-wide usage or run locally\nwithout installation from the extracted tar.gz/zip package. The only hard\ndependency on the Phoronix Test Suite is having command-line support for PHP\n(PHP 5.3+) installed. A complete PHP stack (e.g. with web server) is **not**\nneeded, but merely the PHP command-line support, which is widely available from\noperating system package managers under the name `php`, `php7-cli`, `php5-cli`,\n`php7` or `php8`.\n\n## Usage\n\nThe process to download, install/setup, execute, and report the results of a\nbenchmark can be as simple as a command such as `phoronix-test-suite benchmark\nsmallpt` to run a simple CPU test profile. If wishing to simply install a test,\nit's a matter of running `phoronix-test-suite install <test or suite name>` and\nto run it's `phoronix-test-suite run <test or suite name>`. There's also a batch\nmode for non-interactive benchmarking by first running `phoronix-test-suite\nbatch-setup` and then using the `batch-run` sub-command rather than `run`. For\nmore guidance see the [Phoronix Test Suite\ndocumentation](documentation/phoronix-test-suite.md).\n\nViewing installed system hardware and software is available via\n`phoronix-test-suite system-info`.\n\nFacilitating a result comparison from OpenBenchmarking.org can be done by\nrunning, for example, `phoronix-test-suite benchmark 1204293-BY-PHORONIX357` if\nwishing to compare the results of the\n`https://openbenchmarking.org/result/1204293-BY-PHORONIX357` result file.\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.203125,
          "content": "# Issue Reporting\n\nPublic issues can be reported on GitHub via https://github.com/phoronix-test-suite/phoronix-test-suite/issues\n\nSecurity issues can be reported via email to security@phoronix-test-suite.com\n"
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 5.7734375,
          "content": "#!/bin/sh\n\n# Phoronix Test Suite\n# URLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n# Copyright (C) 2008 - 2019, Phoronix Media\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Generic Phoronix Test Suite installer\n\n# To install into a chroot, set $DESTDIR to the corresponding directory.\n\nif [ \"X$1\" = \"X\" ]\nthen\n\tINSTALL_PREFIX=\"/usr\"\nelse\n\tINSTALL_PREFIX=\"$1\"\nfi\n\n# Ensure the user is in the correct directory\nif [ ! -f pts-core/phoronix-test-suite.php ]\nthen\n\tcat <<'EOT'\n\nTo install the Phoronix Test Suite you must first change directories to phoronix-test-suite/. For support visit: http://www.phoronix-test-suite.com/\n\nEOT\nexit\nfi\n\nmkdir -p $DESTDIR$INSTALL_PREFIX\nif [ ! -w $DESTDIR$INSTALL_PREFIX ]\nthen\n\techo \"ERROR: $DESTDIR$INSTALL_PREFIX is not writable. Run this installer as root or specify a different directory prefix as the first argument sent to this script.\"\n\texit\nfi\n\nrm -rf $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/\nrm -rf $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\n\nmkdir -p $DESTDIR$INSTALL_PREFIX/bin/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/metainfo/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/applications/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/icons/hicolor/48x48/apps/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/man/man1/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/\nmkdir -p $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\nmkdir -p $DESTDIR$INSTALL_PREFIX/../etc/bash_completion.d/\n#mkdir -p $DESTDIR$INSTALL_PREFIX/../usr/lib/systemd/system/\n#mkdir -p $DESTDIR$INSTALL_PREFIX/../etc/init/\n\ncp ChangeLog $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\ncp COPYING $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\ncp AUTHORS $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\n\ncd documentation/\ncp -r * $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/\ncd ..\nrm -rf $DESTDIR$INSTALL_PREFIX/share/doc/phoronix-test-suite/man-pages/\n\ncp documentation/man-pages/*.1 $DESTDIR$INSTALL_PREFIX/share/man/man1/\ncp pts-core/static/bash_completion $DESTDIR$INSTALL_PREFIX/../etc/bash_completion.d/phoronix-test-suite\ncp pts-core/static/images/phoronix-test-suite.png $DESTDIR$INSTALL_PREFIX/share/icons/hicolor/48x48/apps/phoronix-test-suite.png\ncp pts-core/static/phoronix-test-suite.desktop $DESTDIR$INSTALL_PREFIX/share/applications/\ncp pts-core/static/phoronix-test-suite-launcher.desktop $DESTDIR$INSTALL_PREFIX/share/applications/\ncp pts-core/static/com.phoronix_test_suite.phoronix_test_suite.metainfo.xml $DESTDIR$INSTALL_PREFIX/share/metainfo/\n\nmkdir -p $DESTDIR$INSTALL_PREFIX/../usr/lib/systemd/system/\ncp deploy/*-systemd/*.service $DESTDIR$INSTALL_PREFIX/../usr/lib/systemd/system/\n\n# mkdir -p $DESTDIR$INSTALL_PREFIX/../etc/init/\n# cp pts-core/static/upstart/*.conf $DESTDIR$INSTALL_PREFIX/../etc/init/\n\nrm -rf $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core\ncp -r pts-core $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/\ncp -r ob-cache $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/\ncp -r deploy $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/static/phoronix-test-suite.desktop\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/static/phoronix-test-suite-launcher.desktop\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/openbenchmarking.org/openbenchmarking-mime.xml\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/static/bash_completion\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/static/images/openbenchmarking.png\nrm -f $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/static/images/%phoronix-test-suite.png\n\n\nsed 's:export PTS_DIR=$(readlink -f `dirname $0`):export PTS_DIR='\"$INSTALL_PREFIX\"'\\/share\\/phoronix-test-suite:g' phoronix-test-suite > $DESTDIR$INSTALL_PREFIX/bin/phoronix-test-suite\nchmod +x $DESTDIR$INSTALL_PREFIX/bin/phoronix-test-suite\n\n# sed 's:\\$url = PTS_PATH . \\\"documentation\\/index.html\\\";:\\$url = \\\"'\"$INSTALL_PREFIX\"'\\/share\\/doc\\/packages\\/phoronix-test-suite\\/index.html\\\";:g' pts-core/commands/gui_gtk.php > $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/commands/gui_gtk.php\n\n# XDG MIME OpenBenchmarking support\nif [ \"X$DESTDIR\" = \"X\" ] && which xdg-mime >/dev/null && which xdg-icon-resource >/dev/null\nthen\n\t#No chroot\n\txdg-mime install pts-core/openbenchmarking.org/openbenchmarking-mime.xml\n\txdg-icon-resource install --context mimetypes --size 64 pts-core/static/images/openbenchmarking.png application-x-openbenchmarking\nelse\n\t#chroot\n\tmkdir -p $DESTDIR$INSTALL_PREFIX/share/mime/packages/\n\tmkdir -p $DESTDIR$INSTALL_PREFIX/share/icons/hicolor/64x64/mimetypes/\n\tcp pts-core/openbenchmarking.org/openbenchmarking-mime.xml $DESTDIR$INSTALL_PREFIX/share/mime/packages/\n\tcp pts-core/static/images/openbenchmarking.png $DESTDIR$INSTALL_PREFIX/share/icons/hicolor/64x64/mimetypes/application-x-openbenchmarking.png\n\nfi\n\necho -e \"\\nPhoronix Test Suite Installation Completed\\n\nExecutable File: $INSTALL_PREFIX/bin/phoronix-test-suite\nDocumentation: $INSTALL_PREFIX/share/doc/phoronix-test-suite/\nPhoronix Test Suite Files: $INSTALL_PREFIX/share/phoronix-test-suite/\\n\"\n\nif [ \"X$DESTDIR\" != \"X\" ]\nthen\n\techo \"Installed to chroot: $DESTDIR\"\n\techo \"Please update your desktop and mime-database manually\"\nfi\n\n"
        },
        {
          "name": "install.bat",
          "type": "blob",
          "size": 1.3203125,
          "content": "@echo off\n\n:: Phoronix Test Suite\n:: URLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n:: Copyright (C) 2018 - 2020, Phoronix Media\n::\n:: This program is free software; you can redistribute it and/or modify\n:: it under the terms of the GNU General Public License as published by\n:: the Free Software Foundation; either version 3 of the License, or\n:: (at your option) any later version.\n::\n:: This program is distributed in the hope that it will be useful,\n:: but WITHOUT ANY WARRANTY; without even the implied warranty of\n:: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n:: GNU General Public License for more details.\n::\n:: You should have received a copy of the GNU General Public License\n:: along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n:: Generic Phoronix Test Suite installer for Windows\n\n:: Ensure the user is in the correct directory\nIf Not Exist \"pts-core\\phoronix-test-suite.php\" (\necho \"To install the Phoronix Test Suite you must first change directories to phoronix-test-suite. For support visit: http://www.phoronix-test-suite.com/\"\nexit\n)\nset destination=\"C:\\phoronix-test-suite\"\nmd %destination%\n:: cd /d %destination%\n:: for /F \"delims=\" %%i in ('dir /b') do (rmdir \"%%i\" /s/q || del \"%%i\" /s/q)\n\nxcopy \"%cd%\" %destination% /E\necho Phoronix Test Suite installed to %destination%\n"
        },
        {
          "name": "install_macos",
          "type": "blob",
          "size": 5.7353515625,
          "content": "#!/bin/sh\n\n# Phoronix Test Suite\n# URLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n# Copyright (C) 2008 - 2019, Phoronix Media\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Generic Phoronix Test Suite installer\n\n# To install into a chroot, set $DESTDIR to the corresponding directory.\n\ndie() {\n\tprintf '%s\\n' \"$1\" >&2\n\texit \"${2:-1}\"\n}\n\nif [ \"X$1\" = \"X\" ]\nthen\n\tINSTALL_PREFIX=\"/usr\"\nelse\n\tINSTALL_PREFIX=\"$1\"\nfi\n\n# Ensure the user is in the correct directory\nif [ ! -f pts-core/phoronix-test-suite.php ]\nthen\n\tdie '\n\tTo install the Phoronix Test Suite you must first change directories to phoronix-test-suite/. For support visit: http://www.phoronix-test-suite.com/\n'\nfi\n\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"\nif [ ! -w \"$DESTDIR$INSTALL_PREFIX\" ]\nthen\n\tdie \"ERROR: $DESTDIR$INSTALL_PREFIX is not writable. Run this installer as root or specify a different directory prefix as the first argument sent to this script.\"\nfi\n\nrm -rf \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/\nrm -rf \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\n\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/bin/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/applications/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/icons/hicolor/48x48/apps/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/man/man1/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/../etc/bash_completion.d/\n#mkdir -p $DESTDIR$INSTALL_PREFIX/../usr/lib/systemd/system/\n#mkdir -p $DESTDIR$INSTALL_PREFIX/../etc/init/\n\ncp ChangeLog \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\ncp COPYING \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\ncp AUTHORS \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\n\ncd documentation/ || exit\ncp -r * \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/\ncd ..\nrm -rf \"$DESTDIR$INSTALL_PREFIX\"/share/doc/phoronix-test-suite/man-pages/\n\ncp documentation/man-pages/*.1 \"$DESTDIR$INSTALL_PREFIX\"/share/man/man1/\ncp pts-core/static/bash_completion \"$DESTDIR$INSTALL_PREFIX\"/../etc/bash_completion.d/phoronix-test-suite\ncp pts-core/static/images/phoronix-test-suite.png \"$DESTDIR$INSTALL_PREFIX\"/share/icons/hicolor/48x48/apps/phoronix-test-suite.png\ncp pts-core/static/phoronix-test-suite.desktop \"$DESTDIR$INSTALL_PREFIX\"/share/applications/\ncp pts-core/static/phoronix-test-suite-launcher.desktop \"$DESTDIR$INSTALL_PREFIX\"/share/applications/\n\nmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/../usr/lib/systemd/system/\ncp deploy/*-systemd/*.service \"$DESTDIR$INSTALL_PREFIX\"/../usr/lib/systemd/system/\n\n# mkdir -p $DESTDIR$INSTALL_PREFIX/../etc/init/\n# cp pts-core/static/upstart/*.conf $DESTDIR$INSTALL_PREFIX/../etc/init/\n\nrm -rf \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core\ncp -r pts-core \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/\ncp -r ob-cache \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/\ncp -r deploy \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/static/phoronix-test-suite.desktop\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/static/phoronix-test-suite-launcher.desktop\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/openbenchmarking.org/openbenchmarking-mime.xml\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/static/bash_completion\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/static/images/openbenchmarking.png\nrm -f \"$DESTDIR$INSTALL_PREFIX\"/share/phoronix-test-suite/pts-core/static/images/%phoronix-test-suite.png\n\n\nsed -e 's:export PTS_DIR=$(actualpath \"$(dirname \"$0\")\"):export PTS_DIR='\"$INSTALL_PREFIX\"'\\/share\\/phoronix-test-suite:g' phoronix-test-suite > $DESTDIR$INSTALL_PREFIX/bin/phoronix-test-suite\nchmod +x \"$DESTDIR$INSTALL_PREFIX\"/bin/phoronix-test-suite\n\n# sed 's:\\$url = PTS_PATH . \\\"documentation\\/index.html\\\";:\\$url = \\\"'\"$INSTALL_PREFIX\"'\\/share\\/doc\\/packages\\/phoronix-test-suite\\/index.html\\\";:g' pts-core/commands/gui_gtk.php > $DESTDIR$INSTALL_PREFIX/share/phoronix-test-suite/pts-core/commands/gui_gtk.php\n\n# XDG MIME OpenBenchmarking support\nif [ \"X$DESTDIR\" = \"X\" ] && which xdg-mime >/dev/null && which xdg-icon-resource >/dev/null\nthen\n\t#No chroot\n\txdg-mime install pts-core/openbenchmarking.org/openbenchmarking-mime.xml\n\txdg-icon-resource install --context mimetypes --size 64 pts-core/static/images/openbenchmarking.png application-x-openbenchmarking\nelse\n\t#chroot\n\tmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/mime/packages/\n\tmkdir -p \"$DESTDIR$INSTALL_PREFIX\"/share/icons/hicolor/64x64/mimetypes/\n\tcp pts-core/openbenchmarking.org/openbenchmarking-mime.xml \"$DESTDIR$INSTALL_PREFIX\"/share/mime/packages/\n\tcp pts-core/static/images/openbenchmarking.png \"$DESTDIR$INSTALL_PREFIX\"/share/icons/hicolor/64x64/mimetypes/application-x-openbenchmarking.png\n\nfi\n\nprintf '%b\\n' \"\\nPhoronix Test Suite Installation Completed\\n\nExecutable File: $INSTALL_PREFIX/bin/phoronix-test-suite\nDocumentation: $INSTALL_PREFIX/share/doc/phoronix-test-suite/\nPhoronix Test Suite Files: $INSTALL_PREFIX/share/phoronix-test-suite/\\n\"\n\nif [ \"X$DESTDIR\" != \"X\" ]\nthen\n\techo \"Installed to chroot: $DESTDIR\"\n\techo \"Please update your desktop and mime-database manually\"\nfi\n"
        },
        {
          "name": "ob-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "phoronix-test-suite",
          "type": "blob",
          "size": 10.5341796875,
          "content": "#!/bin/sh\n\n#\n#\tPhoronix Test Suite\n#\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n#\tCopyright (C) 2008 - 2021, Phoronix Media\n#\tCopyright (C) 2008 - 2021, Michael Larabel\n#\tphoronix-test-suite: The Phoronix Test Suite is an extensible open-source testing / benchmarking platform\n#\n#\tThis program is free software; you can redistribute it and/or modify\n#\tit under the terms of the GNU General Public License as published by\n#\tthe Free Software Foundation; either version 3 of the License, or\n#\t(at your option) any later version.\n#\n#\tThis program is distributed in the hope that it will be useful,\n#\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n#\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#\tGNU General Public License for more details.\n#\n#\tYou should have received a copy of the GNU General Public License\n#\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n\nif which sed >/dev/null 2>&1 ;\nthen\n\t# Remove the current dir from PATH if present, as it causes infinitely resursive shell scripts.\n\tPATH=\"`echo $PATH | sed -e s/:[\\.]:/:/g -e s/:[\\.]// -e  s/[\\.]://`\"\nfi\n\n# Full path to root directory of the actual Phoronix Test Suite code\nif [ -d /Applications ] && [ -d /usr/share/phoronix-test-suite/ ]\nthen\n\t# macOS has problems with the readlink code\n\texport PTS_DIR=\"/usr/share/phoronix-test-suite/\"\nelif [ -d /Applications ]\nthen\n\t# macOS has problems with the readlink code\n\texport PTS_DIR=`pwd`\nelse\n\texport PTS_DIR=$(readlink -f `dirname $0`)\nfi\n#export PTS_DIR=`pwd`\n\nexport PTS_MODE=\"CLIENT\"\nif which realpath >/dev/null 2>&1 ;\nthen\n\texport PTS_LAUNCHER=`realpath $0`\nelse\n\texport PTS_LAUNCHER=\"$PTS_DIR/phoronix-test-suite\"\nfi\n\nif [ $PTS_DIR != \"`pwd`\" ]\nthen\n\tcd $PTS_DIR\nfi\n\n# Run any start-up hooks, such as to pre-seed environment variables or other non-default behaviors / customizations\nif [ -d pts-core/hooks/startup ]\nthen\n\tfor file in pts-core/hooks/startup/*.sh\n\tdo\n\t\t./$file\n\tdone\nfi\n\n# Determine PHP binary location\nif [ ! \"X$PHP_BIN\" = \"X\" ] && [ -x $PHP_BIN ]\nthen\n\texport PHP_BIN=$PHP_BIN\nelif [ -x /usr/bin/php8 ] || [ -x /usr/local/bin/php8 ] || [ -x /usr/pkg/bin/php8 ]\nthen\n\texport PHP_BIN=\"php8\"\nelif [ -x /usr/bin/php7 ] || [ -x /usr/local/bin/php7 ] || [ -x /usr/pkg/bin/php7 ]\nthen\n\texport PHP_BIN=\"php7\"\nelif [ -x /usr/bin/php ] || [ -x /usr/pkg/bin/php ]\nthen\n\texport PHP_BIN=\"php\"\nelif [ -x /usr/php7/bin/php ]\nthen\n\texport PHP_BIN=\"/usr/php7/bin/php\"\nelif [ -x /usr/php8/bin/php ]\nthen\n\texport PHP_BIN=\"/usr/php8/bin/php\"\nelif [ -x /usr/php/bin/php ]\nthen\n\texport PHP_BIN=\"/usr/php/bin/php\"\nelif [ -x /usr/local/bin/php ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php\"\nelif [ -x /usr/local/bin/php-7.0 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-7.0\"\nelif [ -x /usr/local/bin/php-7.1 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-7.1\"\nelif [ -x /usr/local/bin/php-7.2 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-7.2\"\nelif [ -x /usr/local/bin/php-7.3 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-7.3\"\nelif [ -x /usr/local/bin/php-7.4 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-7.4\"\nelif [ -x /usr/local/bin/php-8.0 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-8.0\"\nelif [ -x /usr/local/bin/php-8.1 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-8.1\"\nelif [ -x /usr/local/bin/php-8.2 ]\nthen\n\texport PHP_BIN=\"/usr/local/bin/php-8.2\"\nelif [ -x /opt/bin/php ]\nthen\n\texport PHP_BIN=\"/opt/bin/php\"\nelif [ -x /usr/pkg/libexec/cgi-bin/php ]\nthen\n\texport PHP_BIN=\"/usr/pkg/libexec/cgi-bin/php\"\nelif which php >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php\"\nelif which php7 >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php7\"\nelif which php8 >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php8\"\nelif [ -x /usr/php5/bin/php ]\nthen\n\texport PHP_BIN=\"/usr/php5/bin/php\"\nelif [ -x /usr/bin/php5 ] || [ -x /usr/local/bin/php5 ] || [ -x /usr/pkg/bin/php5 ]\nthen\n\texport PHP_BIN=\"php5\"\nelif which php8 >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php8\"\nelif which php7 >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php7\"\nelif which php5 >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php5\"\nelif which php-cli >/dev/null 2>&1 ;\nthen\n\texport PHP_BIN=\"php-cli\"\nelse\n\texport PHP_BIN=\"\"\nfi\n\n# Make sure PHP is installed\nif [ \"X$PHP_BIN\" = \"X\" ]\nthen\n\tcat <<'EOT'\n\nPHP must be installed for the Phoronix Test Suite\nThe PHP command-line package is commonly called php-cli, php7-cli, php8-cli, or php.\nFor more information, see the included documentation or online via:\n\thttps://github.com/phoronix-test-suite/phoronix-test-suite/tree/master/documentation\n\nEOT\n\nif [ -x /usr/bin/zypper ]\nthen\n\t# SUSE / OpenSUSE\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# zypper install php8 php8-zip php8-openssl\"\n\techo \" \"\nelif [ -x /usr/bin/apt-get ]\nthen\n\t# Debian / Ubuntu Based Systems\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# apt-get install php-cli php-xml\"\n\techo \" \"\nelif [ -x /usr/bin/dnf ]\nthen\n\t# Modern Fedora\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# dnf install php-cli php-xml php-json\"\n\techo \" \"\nelif [ -x /usr/bin/yum ]\nthen\n\t# Red Hat / Fedora / etc\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# yum install php-cli php-xml php-json\"\n\techo \" \"\nelif [ -x /usr/bin/pkg_radd ]\nthen\n\t# BSD\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# pkg_radd php7 php7-json php7-zip php7-dom\"\n\techo \" \"\nelif [ -x /usr/bin/pacman ]\nthen\n\t# Arch Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# pacman -S php\"\n\techo \" \"\nelif [ -x /usr/local/sbin/pkg ] || [ -x /usr/sbin/pkg ]\nthen\n\t# DragonFlyBSD and others\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# pkg install php82 php82-dom php82-zip php82-simplexml\"\n\techo \" \"\nelif [ -x /usr/bin/swupd ]\nthen\n\t# Clear Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# swupd bundle-add os-testsuite-phoronix\"\n\techo \" \"\nelif [ -x /usr/pkg/bin/pkgin ]\nthen\n\t# NetBSD\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# pkgin install php php-zip\"\n\techo \" \"\nelif [ -x /usr/sbin/pkg_add ]\nthen\n\t# OpenBSD\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# pkg_add php php-zip\"\n\techo \" \"\nelif [ -x /usr/sbin/equo ]\nthen\n\t# Sabayon\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# equo install dev-lang/php\"\n\techo \" \"\nelif [ -x /usr/bin/xbps-install ] || [ -x /usr/sbin/xbps-install ]\nthen\n\t# Void Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# xbps-install -Sy php unzip\"\n\techo \" \"\nelif [ -x /usr/sbin/netpkg ]\nthen\n\t# Zenwalk\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# netpkg php\"\n\techo \" \"\nelif [ -x /usr/sbin/slackpkg ]\nthen\n\t# Slackware\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# slackpkg install php\"\n\techo \" \"\nelif [ -x /sbin/apk ]\nthen\n\t# Alpine Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# apk add php7 php7-dom php7-zip php7-json php7-simplexml\"\n\techo \" \"\nelif [ -x /usr/bin/urpmi ]\nthen\n\t# OpenMandriva Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# urpmi php-cli\"\n\techo \" \"\nelif [ -x /usr/bin/eopkg ]\nthen\n\t# Solus Linux\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# eopkg install php\"\n\techo \" \"\nelif [ -x /usr/sbin/mport ]\nthen\n\t# MidnightBSD\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# mport install php74 php74-dom php74-zip php74-json php74-simplexml php74-openssl\"\n\techo \" \"\nelif [ -x /bin/opkg ]\nthen\n\t# Linux Embedded Development Environment\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# opkg install php7-cli php7-mod-dom php7-mod-zip php7-mod-json php7-mod-simplexml\"\n\techo \" \"\nelif [ -x /usr/bin/equo ]\nthen\n\t# Sabayon\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# equo install php\"\n\techo \" \"\nelif [ -x /usr/bin/emerge ]\nthen\n\t# Gentoo\n\techo \"The command to likely run for your operating system is: \"\n\techo \"# emerge dev-lang/php\"\n\techo \" \"\nelif [ -x /usr/local/bin/brew ]\nthen\n\t# macOS Homebrew\n\techo \"The command to likely run for your operating system is: \"\n\techo \"$ brew install php\"\n\techo \" \"\nfi\n\nexit 1\nfi\n\nif [ ! -f pts-core/phoronix-test-suite.php ] && [ -f `dirname $0`/pts-core/phoronix-test-suite.php ]\nthen\n\tcd `dirname $0`\nfi\n\n# Ensure the user is in the correct directory\nif [ ! -f pts-core/phoronix-test-suite.php ]\nthen\n\tcat <<'EOT'\n\nTo run the Phoronix Test Suite locally you must first change directories to phoronix-test-suite/ \nor install the program using the install-sh script.\n\nFor support visit:\n                   https://www.phoronix-test-suite.com/\n                   https://github.com/phoronix-test-suite/phoronix-test-suite\n\nEOT\nexit\nfi\n\n# Command-specific conditions\ncase \"$1\" in\n\"test-module\" | \"debug-module\" | \"webui\")\n\texport PTS_IGNORE_MODULES=1\n\t;;\n\"debug-self-test\")\n\texport PTS_IGNORE_MODULES=1\n\texport PTS_SILENT_MODE=1\n\t;;\n\"enterprise-setup\")\n\texport PTS_SILENT_MODE=1\n\t;;\nesac\n\nexport PTS_EXT_LAUNCH_SCRIPT_DIR=`mktemp -d 2>/dev/null || mktemp -d -t ptstmp`\n\nPTS_PREPEND_LAUNCH=\"\"\n\n# check for options to inhibit screensaver short of using the toggle_screensaver module's toggling\n#if which kde-inhibit >/dev/null 2>&1\n#then\n#\t# https://invent.kde.org/plasma/kde-cli-tools/-/merge_requests/2\n#   Currently breaks input in some configurations, etc\n#\tPTS_PREPEND_LAUNCH='kde-inhibit --power --screenSaver'\n#\texport PTS_SCREENSAVER_PM_ALREADY_INHIBITED=1 # Setting to 1 will make toggle_screensaver PTS module disable\n#elif which systemd-inhibit >/dev/null 2>&1\n#then\n# Disable by default again due to https://github.com/phoronix-test-suite/phoronix-test-suite/pull/491#issuecomment-762899039\n#\tPTS_PREPEND_LAUNCH='systemd-inhibit --what=idle:sleep --who=\"Phoronix Test Suite\" --why=\"Phoronix Test Suite benchmarking\" '\n#\texport PTS_SCREENSAVER_PM_ALREADY_INHIBITED=1 # Setting to 1 will make toggle_screensaver PTS module disable\n#fi\n\n# Run The Phoronix Test Suite\nPTS_EXIT_STATUS=8\nwhile [ $PTS_EXIT_STATUS -eq 8 ]; do\n\tPTS_LAUNCH_ARGS=\"$@\"\n\tsh -c \"$PTS_PREPEND_LAUNCH $PHP_BIN $PTS_DIR/pts-core/phoronix-test-suite.php $PTS_LAUNCH_ARGS\"\n\tPTS_EXIT_STATUS=$?\ndone\n\nif [ -f $PTS_EXT_LAUNCH_SCRIPT_DIR/web-server-launcher ]\nthen\n\tchmod +x $PTS_EXT_LAUNCH_SCRIPT_DIR/web-server-launcher\n\texec $PTS_EXT_LAUNCH_SCRIPT_DIR/web-server-launcher\n\trm -f $PTS_EXT_LAUNCH_SCRIPT_DIR/web-server-launcher\nelif [ -f $PTS_EXT_LAUNCH_SCRIPT_DIR/phoromatic-server-launcher ]\nthen\n\tchmod +x $PTS_EXT_LAUNCH_SCRIPT_DIR/phoromatic-server-launcher\n\texec $PTS_EXT_LAUNCH_SCRIPT_DIR/phoromatic-server-launcher\n\trm -f $PTS_EXT_LAUNCH_SCRIPT_DIR/phoromatic-server-launcher\nfi\n# rm -rf $PTS_EXT_LAUNCH_SCRIPT_DIR\n"
        },
        {
          "name": "phoronix-test-suite.bat",
          "type": "blob",
          "size": 2.5341796875,
          "content": "::\tPhoronix Test Suite\n::\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n::\tCopyright (C) 2008 - 2021, Phoronix Media\n::\tCopyright (C) 2008 - 2021, Michael Larabel\n::\tphoronix-test-suite: The Phoronix Test Suite is an extensible open-source testing / benchmarking platform\n::\n::\tThis program is free software; you can redistribute it and/or modify\n::\tit under the terms of the GNU General Public License as published by\n::\tthe Free Software Foundation; either version 3 of the License, or\n::\t(at your option) any later version.\n::\n::\tThis program is distributed in the hope that it will be useful,\n::\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n::\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n::\tGNU General Public License for more details.\n::\n::\tYou should have received a copy of the GNU General Public License\n::\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n::\n\n:: Full path to root directory of the actual Phoronix Test Suite code\n@echo off\nset PTS_DIR=%~dp0\nset PTS_MODE=CLIENT\nset PTS_LAUNCHER=%0\n\n:: See if php was setup via Cygwin64, the benefit there is allowing access to PCNTL extensions, etc\n:: If exist C:\\cygwin64\\bin\\php.exe (\n:: set PHP_BIN=C:\\cygwin64\\bin\\php.exe\n:: )\n\n:: TODO: Other work to bring this up to sync with the *NIX phoronix-test-suite launcher\nIf defined PHP_BIN goto SkipBinSearch\n  \n:: Download PHP for Windows and then extract it\nIf not exist C:\\PHP\\php.exe (\necho Attempting to download and setup Windows PHP release.\nIf not exist php.zip (\npowershell -NoProfile -command \"& { $ProgressPreference = 'SilentlyContinue'; iwr http://phoronix-test-suite.com/benchmark-files/php-8.2.1-Win32-vs16-x64.zip -OutFile php.zip; $ProgressPreference = 'Continue' }\"\n)\npowershell -NoProfile -command \"& { Expand-Archive php.zip -DestinationPath C:\\PHP }\"\nIf not exist VC_redist.x64.exe (\necho Attempting to download and run Visual C++ Redistributable for Visual Studio 2019 support.\npowershell -NoProfile -command \"& { $ProgressPreference = 'SilentlyContinue'; iwr https://aka.ms/vs/16/release/VC_redist.x64.exe -OutFile VC_redist.x64.exe; $ProgressPreference = 'Continue' }\"\nVC_redist.x64.exe /install /quiet\n)\n  )\n:: Use the newly downloaded PHP location\nset PHP_BIN=C:\\PHP\\php.exe\n\n:SkipBinSearch\n\necho Starting the Phoronix Test Suite\nset PTS_SILENT_MODE=1\nstart /B %PHP_BIN% \"%PTS_DIR%\\pts-core\\phoronix-test-suite.php\" load_dynamic_result_viewer.start 2> NUL\ntimeout /t 1 > NUL\n\nset PTS_SILENT_MODE=0\n%PHP_BIN% \"%PTS_DIR%\\pts-core\\phoronix-test-suite.php\" %*\ntaskkill /F /IM php.exe > NUL\n"
        },
        {
          "name": "pts-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-highlights.md",
          "type": "blob",
          "size": 20.1494140625,
          "content": "# Phoronix Test Suite Release History\n\nPhoronix Test Suite 10.8\n======\n#### Release Date: 25 December 2021\n* Consolidated and unified handling of environment variables, exposing as well environment variables to Phoromatic\n* Improved test installation and test run-time error detection and reporting\n* Support improvements for macOS 12\n* Support improvements for PHP 8.1\n* Improved JSON result output generation\n* Phoromatic now uses the unified/shared result viewer code for an improved experience, along with other code sharing improvements\n* Phoromatic client support for connecting to HTTPS-only Phoromatic servers\n* Phoromatic now allows optionally uploading test run-time and installation logs\n* Phoromatic systems pages can now display test profile installation status overview\n* Phoromatic now supports streaming/incremental result uploads for viewing tentative results as benchmarks are finished\n* New sub-commands: remove-incomplete-results-from-result-file, result-file-to-html, list-failed-installs, variables, list-test-errors\n* New modules: cleanup\n\nPhoronix Test Suite 10.6\n======\n#### Release Date: 10 October 2021 | Codename: Tjeldsund\n* Improvements to the modern result viewer, removal of the deprecated legacy result viewer\n* Support for expressing test run/install errors inline as part of the result file\n* Initial compatibility with PHP 8.1\n* Many Phoromatic fixes & enhancements\n\nPhoronix Test Suite 10.4\n======\n#### Release Date: 16 May 2021 | Codename: Ibestad\n* Various optimizations and enhancements\n\nPhoronix Test Suite 10.2\n======\n#### Release Date: 5 January 2021 | Codename: Harstad\n* Significantly faster Phoromatic Web UI performance\n* Improved support for macOS 11 Big Sur, Apple Silicon (Apple M1)\n* Improved tracking of per-test/configuration run-time time requirements, improved test run-time estimation\n* Support for reporting broken download mirrors to OpenBenchmarking.org\n* BSD support updates (FreeBSD, DragonFlyBSD, OpenBSD, NetBSD)\n* Full PHP 8.0 compatibility\n* Various Phodevi software/hardware detection reporting improvements\n* New modules: turbostat\n\nPhoronix Test Suite 10.0\n======\n#### Release Date: 13 October 2020 | Codename: Finnsnes\n* New version/overhaul of OpenBenchmarking.org\n* Various hardware/software detection improvements with Phodevi\n* New modules: flush_caches, test_timeout\n\nPhoronix Test Suite 9.8\n======\n#### Release Date: 9 July 2020 | Codename: Nesodden\n* Improved handling of test install failure when a new minor test profile update is available tu automatically try\n* Improved detection of OpenCL and NVIDIA CUDA presence for avoiding some test option prompts when not supported\n* Estimated test install time reporting\n* Rewritten virtual test suite implementation\n* Early PHP 8.0 support\n* Linux AMD Energy driver support in Phodevi, NVIDIA GPU detection in WSL2, other cases\n\nPhoronix Test Suite 9.6\n======\n#### Release Date: 21 April 2020 | Codename: Nittedal\n* Continued improvements to the result viewer with many features added\n* New sub-commands: workload-topology, analyze-run-times\n\nPhoronix Test Suite 9.4\n======\n#### Release Date: 24 February 2020 | Codename: Vestby\n* Numerous result viewer improvements (showing logs within viewer, UI/UX improvements, new options, deleting results)\n* Support for annotating results that are then displayed below individual benchmark results\n* The modern result viewer now works on Microsoft Windows platforms\n* Support for showing performance-per-suite metrics\n* Numerous PDF result generation enhancements\n* Save test logs and save installation logs is now enabled by default\n* Improve reporting on test installation failures\n* New sub-commands: remove-result-from-result-file, intersect\n\nPhoronix Test Suite 9.2\n======\n#### Release Date: 3 December 2019 | Codename: Hurdal\n* Updated result viewer for Phoromatic Server\n* macOS support updates\n* Recording of CPU microcode revisions within the result file\n* Various graph handling improvements\n* Other fixes\n\nPhoronix Test Suite 9.0\n======\n#### Release Date: 17 September 2019 | Codename: Asker\n* New result viewer by default\n* Confidential test/result handling improvements and ability to permanently disable result uploading support\n* Offline handling improvements with now shipping a static cache of all tests/suites as of release time\n* PDF report generation improvements\n* New pie-chart graphing feature of wins/losses for a result file\n* New sub-commands: stress-batch-run, compare-results-two-way, result-file-confidence\n\nPhoronix Test Suite 8.8\n======\n#### Release Date: 13 May 2019 | Codename: Hvaler\n* Initial work on new result viewer (to be completed next cycle)\n* Phodevi improvements: AVX-512 VNNI detection, Intel Node Manager power reporting, OpenJDK/Java version detection improvements, RAM temperature reporting for some ARM SBCs, AMDGPU mem_busy_poercent handling, other hardware/software detection improvements\n* New sub-commands: remove-run-from-result-file, remove-results-from-result-file, strict-run/strict-benchmark, result-file-raw-to-csv\n* Continued Microsoft Windows support improvements\n\nPhoronix Test Suite 8.6\n======\n#### Release Date: 5 February 2019 | Codename: Spydeberg\n* CLI/terminal inline box plot graphing support\n* New OpenBenchmarking.org auto-compare view based upon result percentiles from all public data\n* New `phoronix-test-suite result-file-stats` sub-command\n* New post-run statistics displayed upon test completion\n* Various Windows and BSD hardware/support updates, among other Phodevi additions\n\nPhoronix Test Suite 8.4\n======\n#### Release Date: 26 November 2018 | Codename: Skiptvet\n* Improvements to the text-based/CLI graphs\n* Improvements to CSV frame-time parsing\n* Various Phodevi hardware/software detection refinements, including better IBM POWER9 detection\n* Various fixes and other minor refinements, external dependency updates\n\nPhoronix Test Suite 8.2\n======\n#### Release Date: 11 September 2018 | Codename: Rakkestad\n* Official Docker benchmarking image of the Phoronix Test Suite for reference benchmarking based on Clear Linux and available as \"phoronix/pts\" on Docker\n* Various ARM hardware detection improvements\n* CPU power reporting support using Intel RAPL\n* New sub-commands `phoronix-test-suite list-cached-tests` and `phoronix-test-suite list-all-tests`\n* New DropNoisyResults user configuration option if not wanting to save \"noisy\" results (high variance)\n* L1TF / Foreshadow mitigation reporting on Linux systems\n* Initial Readline-based tab-based text completion support for different TUI fields\n* New \"pgo\" module for easily carrying out benchmarks to analyze Profile-Guided Optimizations (PGO) compiler performance\n* Various usability enhancements\n\nPhoronix Test Suite 8.0\n======\n#### Release Date: 5 June 2018 | Codename: Aremark\n* Rewritten and overhauled Windows 10 / Windows Server 2016 support, now considered officially supported\n* Much improved BSD operating system support\n* Minor macOS support improvements, including optional support for the Brew package manager\n* Initial support for Termux for possible Android support in the future\n* New sub-commands `phoronix-test-suite create-test-profile` and `phoronix-test-suite inspect-test-profile` and `phoronix-test-suite openbenchmarking-uploads` and `phoronix-test-suite shell`\n* Much improved result search functionality from the Phoromatic Server\n* The ability to create new test profiles from the Phoromatic Server web interface\n* Better handling when Internet connection support is absent\n* SiFive RISC-V CPU detection, Cavium ThunderX, Spectre V4 reporting and other hardware/software reporting improvements in Phodevi\n* An integrated backup module for easily backing up and restoring of all PTS/Phoromatic data on a system\n\nPhoronix Test Suite 7.8\n======\n#### Release Date: 14 February 2018 | Codename: Folldal\n* Allow tests not part of OpenBenchmarking.org to be automatically cloned from a connected Phoromatic Server when needed\n* Improved reporting around deprecated/experimental/broken test profiles\n* New sub-commands `phoronix-test-suite search` and `phoronix-test-suite dump-phodevi-properties`\n* Reworked Phodevi property handler and other Phodevi improvements\n* Restored support for vertical bar graphs in pts_Graph\n* Spectre and Meltdown CPU vulnerability reporting\n\nPhoronix Test Suite 7.6\n======\n#### Release Date: 7 December 2017 | Codename: Alvdal\n* Significant BSD operating system support improvements\n* Official macOS High Sierra support\n* Various portability updates\n* External dependency updates, initial support for LEDE and MidnightBSD\n* Phodevi improvements: gpu.memory-usage and memory.temp sensors, various hardware/software detection improvements\n\nPhoronix Test Suite 7.4\n======\n#### Release Date: 19 September 2017 | Codename: Tynset\n* `phoronix-test-suite unload-module` and `phoronix-test-suite auto-load-module` and `phoronix-test-suite network-info` sub-commands\n* Inline showing of test results when benchmarking against an existing result file from the CLI\n* New `perf_tips` module for reporting various performance tips to users\n* New `ob_auto_compare` module to provide inline seamless OpenBenchmarking.org result references to tests currently running from CLI\n* Dropped `graphics_event_checker`\n* Improved screensaver handling\n* Various Phodevi improvements\n\nPhoronix Test Suite 7.2\n======\n#### Release Date: 8 June 2017 | Codename: Trysil\n* Result parser improvements\n* `phoronix-test-suite dump-file-info`, `phoronix-test-suite dump-tests-to-git`, `phoronix-test-suite dump-suites-to-git` sub-commands\n* Phoromatic support for setting run priorities on test schedules\n\nPhoronix Test Suite 7.0\n======\n#### Release Date: 6 March 2017 | Codename: Ringsaker\n* New `phoronix-test-suite estimate-run-time` and `phoronix-test-suite winners-and-losers` sub-commands\n* Phoromatic database improvements\n* New system software/hardware display formatting\n* Support for having one test run generate multiple test result outputs\n* `phoronix-test-suite stress-run` improvements\n\nPhoronix Test Suite 6.8\n======\n#### Release Date: 28 November 2016 | Codename: Tana\n* BSD support improvements.\n* New `phoronix-test-suite list-not-installed-tests` and `phoronix-test-suite php-conf` sub-commands\n* New `flamegrapher` module\n* New `results_custom_export` module\n* Phodevi hardware/software detection improvements\n\nPhoronix Test Suite 6.6\n======\n#### Release Date: 6 September 2016 | Codename: Loppa\n* Graphing improvements\n* Phoromatic web UI tweaks\n* Improved disk detail reporting\n\nPhoronix Test Suite 6.4\n======\n#### Release Date: 2 June 2016 | Codename: Hasvik\n* `phoronix-test-suite stress-run` improvements\n- Phoromatic support for stress testing\n- Phoromatic support for email notifications and other features\n- Watchdog module for suspending/stopping temperatures if sensor thresholds reached\n\nPhoronix Test Suite 6.2\n======\n#### Release Date: 16 February 2016 | Codename: Gamvik\n* Dynamic dependency handler infrastructure\n* Windows support improvements\n* LimitNetworkCommunication option\n* Reworked generation of PDF test results\n* Continued Phoromatic plumbing improvements\n* Initial Vulkan detection/support\n\nPhoronix Test Suite 6.0\n======\n#### Release Date: 16 November 2015 | Codename: Hammerfest\n* Rework of the Phoromatic web interface\n* New local results viewer using HTML+JS\n* Result parsing improvements\n* Rework of low-level infrastructure / underlying improvements / faster merging\n* Improved SVG graph generation\n* New graph rendering interface for pts_Graph\n\nPhoronix Test Suite 5.8\n======\n#### Release Date: 5 June 2015 | Codename: Belev\n* MIPS support improvements\n* Faster rendering of result files and other data processing improvements\n* Stress-run improvements\n* System sensor monitoring via the Phoromatic UI\n* Addition of the Phoromatic Results Export Viewer\n* Various Linux hardware & software detection improvements\n* Allow Phoronix Test Suite clients to be self-updated via update script passed from the Phoromatic Server\n* Mongoose web server support for the Phoromatic Server's HTTP instance\n* Support viewing system client logs via the Phoromatic Server UI\n* Numerous other improvements to Phoromatic\n\nPhoronix Test Suite 5.6\n======\n#### Release Date: 24 March 2015 | Codename: Dedilovo\n* Many Phoromatic Improvements\n* Phoromatic Server Search Support\n* Phoromatic Server Stress-Run Controls\n* Support For Commenting/Annotating Result Files\n* Support For Custom System Variables To Be Used By Result File Strings\n* Rootadmin additions & Controls\n* Support For Results Via RSS\n* Allow One-Time Benchmark Runs & Issuing Of Benchmark Tickets\n* Allow Uploading Of Results To OpenBenchmarking.org Via Viewer Page\n* Allow Forming Of Custom Test Suites Via Build Suite Page\n* Add stress-run Sub Command To Phoronix Test Suite Client\n* OS X Support Improvements\n\nPhoronix Test Suite 5.4\n======\n#### Release Date: 9 December 2014 | Codename: Lipki\n* Major overhaul to the built-in Phoromatic Server\n* Avahi zero-conf networking support\n* Improved download cache handling\n* IBM POWER8 hardware detection improvements\n* Various code refactoring & other improvements\n\nPhoronix Test Suite 5.2\n======\n#### Release Date: 5 June 2014 | Codename: Khanino\n* Tech Preview / Experimental Built-In Phoromatic Server\n* Result graphing improvements, including new box plot graphs\n* Phodevi software & hardware detection improvements\n* Phodevi Radeon GPU usage reporting via RadeonTOP\n* New Phoronix Test Suite sub-command options\n* Bug-fixes and other minor enhancements\n\nPhoronix Test Suite 5.0\n======\n#### Release Date: 12 March 2014 | Codename: Plavsk\n* Tech Preview / Experimental HTML5 GUI\n* Run-random-tests command\n* Phodevi Hardware/Software Detection Improvements\n* Start-up Speed Enhancements\n* Numerous bug-fixes\n* Assorted minor improvements\n\nPhoronix Test Suite 4.8\n======\n#### Release Date: 13 August 2013 | Codename: Sokndal\n* Minimum / maximum result reporting\n* Frame latency / jitter testing support\n* Improved hardware/software detection support\n* NVIDIA/AMD AIB GPU board detection support\n* Facebook HHVM (HipHop Virtual Machine) 2.1 support\n* Graph coloring improvements\n* System detail reporting improvements\n* Phodevi hardware sensor improvements\n* Phoromatic.com support improvements\n\nPhoronix Test Suite 4.6\n======\n#### Release Date: 21 May 2013 | Codename: Utsira\n* Compiler masking/flag improvements\n* Phodevi enhancements\n* DragonFlyBSD support improvements\n* Support for running under Facebook HHVM HipHop Virtual Machine\n* New internal-run sub-command\n* Phodevi hardware/software improvements\n\nPhoronix Test Suite 4.4\n======\n#### Release Date: 20 February 2013 | Codename: Forsand\n* Phodevi Hardware/Software Detection Improvements\n* OpenBenchmarking.org Integration Enhancements\n* Improved Reporting Of Test Installation Errors\n* Improved Reporting Of Test Run-Time Errors\n* Improved BSD Operating System Support\n* Rewritten PTS External Dependencies Handling\n* Improved Compiler/User Flag Reporting On Test Results\n\nPhoronix Test Suite 4.2\n======\n#### Release Date: 20 December 2012 | Codename: Randaberg\n* Desktop Support Improvements\n* Phodevi Support For IMPI Detection\n* New auto-compare Option For Facilitating Fully Automated Comparisons\n* Add list-recommended-tests Option\n* Various Minor Enhancements\n\nPhoronix Test Suite 4.0\n======\n#### Release Date: 23 July 2012 | Codename: Suldal\n* New Result Viewer Interface\n* Performance-per-Watt / Energy Monitoring Improvements\n* Hardware/Software Detection Improvements\n* Greater Documentation\n* New Result Analytical Features\n\nPhoronix Test Suite 3.8\n======\n#### Release Date: 19 March 2012 | Codename: Bygland\n* Improved Disk Reporting\n* Improved Compiler Option/Configuration Reporting\n* New Graph Renderer\n* Improved ARM / Mobile Device Support\n* Download Caching Enhancements\n* Re-written Graphics Event Checker\n* Support For Apple Mac OS X 10.8\n\nPhoronix Test Suite 3.6\n======\n#### Release Date: 13 December 2011 | Codename: Arendal\n* Enhanced Support For BSD, Solaris Operating Systems\n* Various Graphing Improvements\n* Expanded Phodevi Library Coverage\n* Greater OpenBenchmarking.org Integration\n* Various Bug Fixes\n\nPhoronix Test Suite 3.4\n======\n#### Release Date: 8 September 2011 | Codename: Lillesand\n* MATISK Benchmarking Module\n* Improved Phodevi Device Recognition\n* Graphing Improvements\n* Third-Party Test/Suite Uploading From The Phoronix Test Suite Client\n* Continued OpenBenchmarking.org Integration Enhancements\n* GNU Hurd Operating System Support\n\nPhoronix Test Suite 3.2\n======\n#### Release Date: 15 June 2011 | Codename: Grimstad\n* Facebook HipHop Compiler Support\n* Improved Software Detection\n* Improved Hardware Detection\n* Support For New System Sensors\n* Improved Wine Compatibility\n* Interactive Text Mode Support\n\nPhoronix Test Suite 3.0\n======\n#### Release Date: 26 February 2011 | Codename: Iveland\n* OpenBenchmarking.org Integration\n* Enhanced Multi-OS, Multi-Architecture Capabilities\n* Internal Architectural Enhancements\n* Improved Graph Rendering\n\nPhoronix Test Suite 2.8\n======\n#### Release Date: 31 August 2010 | Codename: Torsken\n* 134 Test Profiles\n* 56 Test Suites + PCQS\n* New Analytics Capabilities\n* New Installation & External Dependency Management Support\n* Improved Windows 7 x64 Support\n\nPhoronix Test Suite 2.6\n======\n#### Release Date: 24 May 2010 | Codename: Lyngen\n* 134 Test Profiles\n* 56 Test Suites + PCQS\n* New Test Results Parsing Mechanism\n* New PTS Results Viewer Interface\n* Phoromatic / Phoromatic Tracker Improvements\n* Functional Windows 7 x64 Support\n\nPhoronix Test Suite 2.4\n======\n#### Release Date: 24 February 2010 | Codename: Lenvik\n* 131 Test Profiles\n* 54 Test Suites + PCQS\n* Palm webOS / Optware Support\n* Improved *BSD OS Support\n* Image Quality Comparison Support\n* Improved Sensor Monitoring\n* GTK2 User Interface Enhancements\n* New Network Engine\n* Initial Phodevi / pts-core Support On Windows\n\nPhoronix Test Suite 2.2\n======\n#### Release Date: 16 November 2009 | Codename: Bardu\n* 120 Test Profiles\n* 50 Test Suites + PCQS\n* Automated Regression Tracking Module (Autonomous Git Bisecting)\n* Test Recovery Support\n* Statistical Significance Support\n* Anonymous Usage Reporting\n* Display Mode Support\n* Network Proxy Support\n* Overhauled GTK2 GUI\n\nPhoronix Test Suite 2.0\n======\n#### Release Date: 4 August 2009 | Codename: Sandtorg\n* 109 Test Profiles\n* 47 Test Suites + PCQS\n* Expanded Reference System Comparisons\n* Many New Test Options\n* Introduction Of Phodevi Library\n* Overhaul To GTK2 User Interface\n* New Test Profile Options\n* Initial Release Of PTS Desktop Live\n\nPhoronix Test Suite 1.8\n======\n#### Release Date: 6 April 2009 | Codename: Selbu\n* 90 Test Profiles\n* 39 Test Suites + PCQS\n* GTK2 Graphical User Interface\n* Enhanced *BSD Support\n* Support For Reference System Comparisons\n* Image Renderer Optimizations\n* Updated Test Options\n<a href=\"?k=changes_18\">Complete Change-Log</a>\n\nPhoronix Test Suite 1.6\n======\n#### Release Date: 20 January 2009 | Codename: Tydal\n* 89 Test Profiles\n* 36 Test Suites + PCQS\n* Options To Build Your Own Suite\n* An Adobe PDF Generator For Test Results\n* Support Multiple Arguments When Installing/Running Tests\n* Introduce bilde_renderer, Add Support For Rendering Adobe Flash / SWF Graphs\n* Support For Virtual Suites\n* New Features In pts-core\n* Numerous New Options\n\nPhoronix Test Suite 1.4\n======\n#### Release Date: 3 November 2008 | Codename: Orkdal\n* 84 Test Profiles\n* 34 Test Suites + PCQS\n* Mac OS X Support\n* Cascading Test Profiles\n* Self-Contained Test Profiles\n* More Modules\n* WINE-based Tests\n* OpenSolaris 2008.11 Support\n* SVG Graph Rendering Option\n<a href=\"?k=changes_14\">Complete Change-Log</a>\n\nPhoronix Test Suite 1.2\n======\n#### Release Date: 3 September 2008 | Codename: Malvik\n* 76 Test Profiles\n* 38 Test Suites\n* Improved Hardware Detection\n- Multi-Monitor Support\n- Multi-GPU Support\n* Modular Plug-in Framework\n- System Monitoring Module\n- E-Mail Results Module\n- Graphics Override Module\n- Screensaver Control Module\n* OpenSolaris 2008.05 Support\n* FreeBSD / *BSD Support\n* Improved Graph Rendering\n* Result Analysis Option\n* Improved Documentation\n\nPhoronix Test Suite 1.0\n======\n#### Release Date: 5 June 2008 | Codename: Trondheim\nInitial Stable Release\n* 57 Test Profiles\n* 23 Test Suites\n* Download Caching Support\n* XML-based Test / Suite System\n* Support For Managing External Dependencies\n* Basic Hardware, Software Detection Support\n* Automated Test Installation\n* Integrated Results Viewer\n* Line, Bar, Boolean Graphing Support\n* Batch Mode Support\n* Global Test Upload Capability\n* Support Across All Major Linux Distributions\n"
        }
      ]
    }
  ]
}