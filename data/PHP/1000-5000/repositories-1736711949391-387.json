{
  "metadata": {
    "timestamp": 1736711949391,
    "page": 387,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "orhanerday/open-ai",
      "stars": 2285,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4423828125,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.github export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/phpunit.xml.dist export-ignore\n/psalm.xml.dist export-ignore\n/tests export-ignore\n/.editorconfig export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/art export-ignore\n/docs export-ignore\n/UPGRADING.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.130859375,
          "content": ".idea\n.php_cs\n.php_cs.cache\n.phpunit.result.cache\nbuild\ncomposer.lock\ncoverage\ndocs\nphpunit.xml\npsalm.xml\nvendor\n.php-cs-fixer.cache\n\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.2236328125,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.6044921875,
          "content": "# Changelog\n\nAll notable changes to `open-ai` will be documented in this file.\n\n## 3.5 - 2023-02-10\n\n### What's Changed\n\n- Fix \"export-ignore\" does not work by @assert6 in https://github.com/orhanerday/open-ai/pull/43\n- Update README.md by @ali-wells in https://github.com/orhanerday/open-ai/pull/45\n- Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/orhanerday/open-ai/pull/47\n- Add customURL support. by @orhanerday in https://github.com/orhanerday/open-ai/pull/49\n\n### New Contributors\n\n- @assert6 made their first contribution in https://github.com/orhanerday/open-ai/pull/43\n- @ali-wells made their first contribution in https://github.com/orhanerday/open-ai/pull/45\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.4...3.5\n\n## 3.4 - 2023-01-03\n\n### What's Changed\n\n- Add organization support. by @orhanerday in https://github.com/orhanerday/open-ai/pull/40\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.3...3.4\n\n## 3.3 - 2022-12-28\n\n### What's Changed\n\n- Feature request: support stream by @orhanerday in https://github.com/orhanerday/open-ai/pull/37\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.2.1...3.3\n\n## 3.2.1 - 2022-12-07\n\n### What's Changed\n\n- Update README.md by @orhanerday\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.2...3.2.1\n\n## 3.2 - 2022-12-06\n\n### What's Changed\n\n- Ability to set a timeout value in seconds by @dsampaolo in https://github.com/orhanerday/open-ai/pull/31\n\n### New Contributors\n\n- @dsampaolo made their first contribution in https://github.com/orhanerday/open-ai/pull/31\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.1...3.2\n\n## 3.1 - 2022-11-22\n\n### What's Changed\n\n- Bump dependabot/fetch-metadata from 1.3.4 to 1.3.5 by @dependabot in https://github.com/orhanerday/open-ai/pull/28\n- Fix tests by @adetch in https://github.com/orhanerday/open-ai/pull/29\n- Add current completion endpoint by @adetch in https://github.com/orhanerday/open-ai/pull/30\n\n### New Contributors\n\n- @adetch made their first contribution in https://github.com/orhanerday/open-ai/pull/29\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/3.0...3.1\n\n## 3.0 - 2022-11-04\n\n### What's Changed\n\n- List models by @orhanerday in https://github.com/orhanerday/open-ai/pull/22\n- Implement edit feature by @orhanerday in https://github.com/orhanerday/open-ai/pull/23\n- Add Images feature by @orhanerday in https://github.com/orhanerday/open-ai/pull/24\n- Embeddings feature by @orhanerday in https://github.com/orhanerday/open-ai/pull/25\n- Add retrieve file content by @orhanerday in https://github.com/orhanerday/open-ai/pull/26\n- Add deprecated methods by @orhanerday in https://github.com/orhanerday/open-ai/pull/27\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/2.3...3.0\n\n## 2.3 - 2022-11-04\n\n### What's Changed\n\n- Fix documentation for Url Class by @Muchwat in https://github.com/orhanerday/open-ai/pull/18\n- Bump dependabot/fetch-metadata from 1.3.3 to 1.3.4 by @dependabot in https://github.com/orhanerday/open-ai/pull/19\n- feat: Add image generation api by @SheepFromHeaven in https://github.com/orhanerday/open-ai/pull/21\n\n### New Contributors\n\n- @Muchwat made their first contribution in https://github.com/orhanerday/open-ai/pull/18\n- @SheepFromHeaven made their first contribution in https://github.com/orhanerday/open-ai/pull/21\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/2.2...2.3\n\n## 2.2 - 2022-09-15\n\n### What's Changed\n\n- API for content filter, unit testing fixed and added documentation for content filtering by @bashar94 in https://github.com/orhanerday/open-ai/pull/17\n\n### New Contributors\n\n- @bashar94 made their first contribution in https://github.com/orhanerday/open-ai/pull/17\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/2.1...2.2\n\n## 2.1 - 2022-05-29\n\n### What's Changed\n\n- Adding more capabilities by @orhanerday in https://github.com/orhanerday/open-ai/pull/11\n- Files\n- Fine-tuning\n\n### New Contributors\n\n- @orhanerday made their first contribution in https://github.com/orhanerday/open-ai/pull/11\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/2.0...2.1\n\n## 2.0 - 2022-05-28\n\n### What's Changed\n\n- Orhanerday/open-ai now supports file uploads\n- Bump dependabot/fetch-metadata from 1.1.1 to 1.2.0 by @dependabot in https://github.com/orhanerday/open-ai/pull/3\n- Bump dependabot/fetch-metadata from 1.2.0 to 1.2.1 by @dependabot in https://github.com/orhanerday/open-ai/pull/4\n- Bump dependabot/fetch-metadata from 1.2.1 to 1.3.0 by @dependabot in https://github.com/orhanerday/open-ai/pull/5\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/orhanerday/open-ai/pull/6\n- Bump dependabot/fetch-metadata from 1.3.0 to 1.3.1 by @dependabot in https://github.com/orhanerday/open-ai/pull/7\n\n### New Contributors\n\n- @dependabot made their first contribution in https://github.com/orhanerday/open-ai/pull/3\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/1.1...2.0\n\n## 1.1 - 2022-02-01\n\n### **Big new**\n\n- [orhanerday/open-ai](https://github.com/orhanerday/open-ai) now supports PHP 8\n\n## What's Changed\n\n- Remove duplicate entry from the changelog by @johanvanhelden in https://github.com/orhanerday/open-ai/pull/1\n- Allow PHP8 by @mydnic in https://github.com/orhanerday/open-ai/pull/2\n\n## New Contributors\n\n- @johanvanhelden made their first contribution in https://github.com/orhanerday/open-ai/pull/1\n- @mydnic made their first contribution in https://github.com/orhanerday/open-ai/pull/2\n\n**Full Changelog**: https://github.com/orhanerday/open-ai/compare/1.0.0...1.1\n\n## 1.0.0 - 2021-12-22\n\n- initial release\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0693359375,
          "content": "The MIT License (MIT)\n\nCopyright (c) orhanerday <orhanerday@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 37.7734375,
          "content": "# OpenAI API Client in PHP\n\n<br />\n\n<br />\n\n\n## If you want to ensure this project stays alive and continues to faster improve, please please consider supporting it. Your help means a lot. Thank you!\n* [Buy me a coffee](https://www.buymeacoffee.com/orhane)\n* [Patreon](https://patreon.com/orhann)\n> ### ChatGPT API is currently supported, [click here](#chat-as-known-as-chatgpt-api) for the implementation introductions.\n\n<br />\n\n*A message from creator,<br />Thank you for visiting the __@orhanerday/open-ai__ repository! If you find this repository helpful or useful, we encourage you to **star** it\non GitHub. Starring a repository is a way to show your support for the project. It also helps to increase the visibility\nof the project and to let the community know that it is valuable. Thanks again for your support and we hope you find the\nrepository useful! <br /><br /> Orhan*\n\n<br />\n\n<br />\n\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/orhanerday/open-ai.svg?style=flat-square)](https://packagist.org/packages/orhanerday/open-ai)\n[![Total Downloads](https://img.shields.io/packagist/dt/orhanerday/open-ai.svg?style=flat-square)](https://packagist.org/packages/orhanerday/open-ai)\n\n<br />\n\n<br />\n\n<img src=\"./openai-elephpant.svg\" width=\"1250\" height=\"300\" alt=\"orhanerday-open-ai-logo\">\n\n<br />\n\n<br />\n\n# Featured in\n\n\n[![Jetbrains Blog](https://user-images.githubusercontent.com/22305274/222431781-86591161-ccd5-4889-bd80-97a0fd0fdf0d.png)](https://blog.jetbrains.com/phpstorm/2022/12/php-annotated-december-2022/#:~:text=orhanerday/open%2Dai%20%E2%80%93%20A%20PHP%20SDK%20for%20accessing%20the%20OpenAI%20GPT%2D3%20API)\n\n[![Laravel News](https://user-images.githubusercontent.com/22305274/222430084-be097d59-e6bc-408d-8adb-7b751d5a05b2.png)](https://laravel-news.com/openai-sdk-for-php)\n\n[![日思录](https://user-images.githubusercontent.com/22305274/222431699-f3a8a146-e27c-4fe3-8c93-1d762559752f.png)](http://tubring.cn/articles/59)\n\n[![logo_new](https://github.com/orhanerday/open-ai/assets/22305274/398b3a1e-7323-46f3-8a53-a9f115cf2281)](https://site-analyzer.ru/articles/openai-gpt-3-first-samples/)\n\n\n\n# Comparison With Other Packages\n\n| Project Name           | Required PHP Version (Lower is better) | Description                                                                                                                                                | Type (Official / Community) | Support                                                                                                                                  |\n|------------------------|----------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|------------------------------------------------------------------------------------------------------------------------------------------|\n| **orhanerday/open-ai** | **PHP 7.4+**                           | **Most downloaded, forked, contributed, huge community supported, and used PHP SDK for OpenAI GPT-3 and DALL-E. It also supports chatGPT-like streaming.** | Community                   | Available, ([Community driven Discord Server](https://discord.gg/xpGUD528XJ) or personal mail [orhann@duck.com](mailto:orhann@duck.com)) |\n| openai-** */c****t     | PHP 8.1+                               | OpenAI PHP API client.                                                                                                                                     | Community                   | -                                                                                                                                        |\n\n\n<br />\n\n## About this package\n\nFully open-source and secure community-maintained, PHP SDK for accessing the OpenAI GPT-3 API.\n\n> #### For more information, you can read laravel news [blog post](https://laravel-news.com/openai-sdk-for-php).\n> #### Free support is available. [Join our discord server](#join-our-discord-server)\n> #### To get started with this package, you'll first want to be familiar with the [OpenAI API documentation](https://beta.openai.com/docs/introduction) and [examples](https://beta.openai.com/examples). Also you can get help from our discord channel that called [#api-support](https://discord.gg/R9CpVUdqQR)\n\n## News\n\n- orhanerday/open-ai added to community libraries php [section](https://beta.openai.com/docs/libraries/php).\n- orhanerday/open-ai featured\n  on [PHPStorm blog post](https://blog.jetbrains.com/phpstorm/2022/12/php-annotated-december-2022/#:~:text=orhanerday/open%2Dai%20%E2%80%93%20A%20PHP%20SDK%20for%20accessing%20the%20OpenAI%20GPT%2D3%20API),\n  thanks JetBrains!\n\n> Requires PHP 7.4+\n\n## Join our discord server\n\n![Discord Banner 2](https://discordapp.com/api/guilds/1047074572488417330/widget.png?style=banner2)\n\n[Click here to join the Discord server](https://discord.gg/xpGUD528XJ)\n\n## Support this project\n\nAs you may know, OpenAI PHP is an open-source project wrapping tool for OpenAI. We rely on the support of our community\nto continue developing and maintaining the project, and one way that you can help is by making a donation.\n\nDonations allow us to cover expenses such as hosting costs(for testing), development tools, and other resources that are\nnecessary to keep the project running smoothly. Every contribution, no matter how small, helps us to continue improving\nOpenAI PHP for everyone.\n\nIf you have benefited from using OpenAI PHP and would like to support its continued development, we would greatly\nappreciate a donation of any amount. You can make a donation through;\n\n* [Buy me a coffee](https://www.buymeacoffee.com/orhane)\n* [Patreon](https://patreon.com/orhann)\n\nThank you for considering a donation to Orhanerday/OpenAI PHP SDK. Your support is greatly appreciated and helps to\nensure that the project can continue to grow and improve.\n\n*Sincerely,*\n\n**Orhan Erday** / Creator.\n\n# Documentation\nPlease visit https://orhanerday.gitbook.io/openai-php-api-1/\n\n# Endpoint Support\n\n- Chat\n    - [x] [ChatGPT API](#chat-as-known-as-chatgpt-api)\n- Models\n    - [x] [List models](https://beta.openai.com/docs/api-reference/models/list)\n    - [x] [Retrieve model](https://beta.openai.com/docs/api-reference/models/retrieve)\n- Completions\n    - [x] [Create completion](https://beta.openai.com/docs/api-reference/completions/create)\n- Edits\n    - [x] [Create edits](https://beta.openai.com/docs/api-reference/edits/create)\n- Images\n    - [x] [Create image](https://beta.openai.com/docs/api-reference/images/create)\n    - [x] [Create image edit](https://beta.openai.com/docs/api-reference/images/create-edit)\n    - [x] [Create image variation](https://beta.openai.com/docs/api-reference/images/create-variation)\n- Embeddings\n    - [x] [Create embeddings](https://beta.openai.com/docs/api-reference/embeddings/create)\n- Audio\n    - [x] [Text to Speech (TTS)](https://platform.openai.com/docs/guides/text-to-speech)\n    - [x] [Create transcription](https://platform.openai.com/docs/api-reference/audio/create)\n    - [x] [Create translation](https://platform.openai.com/docs/api-reference/audio/create)\n- Files\n    - [x] [List files](https://beta.openai.com/docs/api-reference/files/list)\n    - [x] [Upload file](https://beta.openai.com/docs/api-reference/files/upload)\n    - [x] [Delete file](https://beta.openai.com/docs/api-reference/files/delete)\n    - [x] [Retrieve file](https://beta.openai.com/docs/api-reference/files/retrieve)\n    - [x] [Retrieve file content](https://beta.openai.com/docs/api-reference/files/retrieve-content)\n- Fine-tunes\n    - [x] [Create fine-tune (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/create)\n    - [x] [List fine-tunes (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/list)\n    - [x] [Retrieve fine-tune (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/retrieve)\n    - [x] [Cancel fine-tune (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/cancel)\n    - [x] [List fine-tune events (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/events)\n    - [x] [Delete fine-tune model (beta)](https://beta.openai.com/docs/api-reference/fine-tunes/delete-model)\n- Moderation\n    - [x] [Create moderation](https://beta.openai.com/docs/api-reference/moderations/create)\n- ~~Engines~~ *(deprecated)*\n    - ~~[List engines](https://beta.openai.com/docs/api-reference/engines/list)~~\n    - ~~[Retrieve engine](https://beta.openai.com/docs/api-reference/engines/retrieve)~~\n- Assistants (beta)\n    - [x] [Create assistant](https://platform.openai.com/docs/api-reference/assistants/createAssistant)\n    - [x] [Retrieve assistant](https://platform.openai.com/docs/api-reference/assistants/getAssistant)\n    - [x] [Modify assistant](https://platform.openai.com/docs/api-reference/assistants/modifyAssistant)\n    - [x] [Delete assistant](https://platform.openai.com/docs/api-reference/assistants/deleteAssistant)\n    - [x] [Lists assistants](https://platform.openai.com/docs/api-reference/assistants/listAssistants)\n    - [x] [Create assistant file](https://platform.openai.com/docs/api-reference/assistants/createAssistantFile)\n    - [x] [Retrieve assistant file](https://platform.openai.com/docs/api-reference/assistants/getAssistantFile)\n    - [x] [Delete assistant file](https://platform.openai.com/docs/api-reference/assistants/deleteAssistantFile)\n    - [x] [List assistant files](https://platform.openai.com/docs/api-reference/assistants/listAssistantFiles)\n- Threads (beta)\n    - [x] [Create thread](https://platform.openai.com/docs/api-reference/threads/createThread)\n    - [x] [Retrieve thread](https://platform.openai.com/docs/api-reference/threads/getThread)\n    - [x] [Modify thread](https://platform.openai.com/docs/api-reference/threads/modifyThread)\n    - [x] [Delete thread](https://platform.openai.com/docs/api-reference/threads/deleteThread)\n- Messages (beta)\n    - [x] [Create message](https://platform.openai.com/docs/api-reference/messages/createMessage)\n    - [x] [Retrieve message](https://platform.openai.com/docs/api-reference/messages/getMessage)\n    - [x] [Modify message](https://platform.openai.com/docs/api-reference/messages/modifyMessage)\n    - [x] [Lists messages](https://platform.openai.com/docs/api-reference/messages/listMessages)\n    - [x] [Retrieve message file](https://platform.openai.com/docs/api-reference/messages/getMessageFile)\n    - [x] [List message files](https://platform.openai.com/docs/api-reference/messages/listMessageFiles)\n- Runs (beta)\n    - [x] [Create run](https://platform.openai.com/docs/api-reference/runs/createRun)\n    - [x] [Retrieve run](https://platform.openai.com/docs/api-reference/runs/getRun)\n    - [x] [Modify run](https://platform.openai.com/docs/api-reference/runs/modifyRun)\n    - [x] [Lists runs](https://platform.openai.com/docs/api-reference/runs/listRuns)\n    - [x] [Submit tool outputs](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs)\n    - [x] [Cancel run](https://platform.openai.com/docs/api-reference/runs/cancelRun)\n    - [x] [Create thread and run](https://platform.openai.com/docs/api-reference/runs/createThreadAndRun)\n    - [x] [Retrieve run step](https://platform.openai.com/docs/api-reference/runs/getRunStep)\n    - [x] [List run steps](https://platform.openai.com/docs/api-reference/runs/listRunSteps)\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require orhanerday/open-ai\n```\n\n## Quick Start ⚡\n\nBefore you get starting, you should set OPENAI_API_KEY as ENV key, and set OpenAI key as env value with the following\ncommands;\n\n_Powershell_\n\n```powershell\n$Env:OPENAI_API_KEY = \"sk-gjtv.....\"\n```\n\n_Cmd_\n\n```cmd\nset OPENAI_API_KEY=sk-gjtv.....\n```\n\n_Linux or macOS_\n\n```shell\nexport OPENAI_API_KEY=sk-gjtv.....\n```\n\n> Getting issues while setting up env? Please read\n> the [article](https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety) or you can check\n> my [StackOverflow answer](https://stackoverflow.com/a/73904271/15196622) for the Windows® ENV setup.\n\nCreate your `index.php` file and paste the following code part into the file.\n\n```php\n<?php\n\nrequire __DIR__ . '/vendor/autoload.php'; // remove this line if you use a PHP Framework.\n\nuse Orhanerday\\OpenAi\\OpenAi;\n\n$open_ai_key = getenv('OPENAI_API_KEY');\n$open_ai = new OpenAi($open_ai_key);\n\n$chat = $open_ai->chat([\n   'model' => 'gpt-3.5-turbo',\n   'messages' => [\n       [\n           \"role\" => \"system\",\n           \"content\" => \"You are a helpful assistant.\"\n       ],\n       [\n           \"role\" => \"user\",\n           \"content\" => \"Who won the world series in 2020?\"\n       ],\n       [\n           \"role\" => \"assistant\",\n           \"content\" => \"The Los Angeles Dodgers won the World Series in 2020.\"\n       ],\n       [\n           \"role\" => \"user\",\n           \"content\" => \"Where was it played?\"\n       ],\n   ],\n   'temperature' => 1.0,\n   'max_tokens' => 4000,\n   'frequency_penalty' => 0,\n   'presence_penalty' => 0,\n]);\n\n\nvar_dump($chat);\necho \"<br>\";\necho \"<br>\";\necho \"<br>\";\n// decode response\n$d = json_decode($chat);\n// Get Content\necho($d->choices[0]->message->content);\n```\n\n_Run the server with the following command_\n\n```shell\nphp -S localhost:8000 -t .\n```\n\n## NVIDIA NIM INTEGRATION\n\norhanerday/open-ai supports Nvidia NIM. The below example is MixtralAI. Check https://build.nvidia.com/explore/discover for more examples.\n\n```php\n<?php\n\nrequire __DIR__ . '/vendor/autoload.php'; // remove this line if you use a PHP Framework.\n\nuse Orhanerday\\OpenAi\\OpenAi;\n\n$nvidia_ai_key = getenv('NVIDIA_AI_API_KEY');\nerror_log($open_ai_key);\n$open_ai = new OpenAi($nvidia_ai_key);\n$open_ai->setBaseURL(\"https://integrate.api.nvidia.com\");\n$chat = $open_ai->chat([\n    'model' => 'mistralai/mixtral-8x7b-instruct-v0.1',\n    'messages' => [[\"role\" => \"user\", \"content\" => \"Write a limmerick about the wonders of GPU computing.\"]],\n    'temperature' => 0.5,\n    'max_tokens' => 1024,\n    'top_p' => 1,\n]);\n\nvar_dump($chat);\necho \"<br>\";\necho \"<br>\";\necho \"<br>\";\n// decode response\n$d = json_decode($chat);\n// Get Content\necho ($d->choices[0]->message->content);\n\n```\n\n\n## Usage\n\n### Load your key from an environment variable.\n\n> According to the following code `$open_ai` is the base variable for all open-ai operations.\n\n```php\nuse Orhanerday\\OpenAi\\OpenAi;\n\n$open_ai = new OpenAi(env('OPEN_AI_API_KEY'));\n```\n\n## Requesting organization\n\nFor users who belong to multiple organizations, you can pass a header to specify which organization is used for an API\nrequest.\nUsage from these API requests will count against the specified organization's subscription quota.\n\n````php\n$open_ai_key = getenv('OPENAI_API_KEY');\n$open_ai = new OpenAi($open_ai_key);\n$open_ai->setORG(\"org-IKN2E1nI3kFYU8ywaqgFRKqi\");\n````\n\n## Base URL\n\nYou can specify Origin URL with `setBaseURL()` method;\n\n````php\n$open_ai_key = getenv('OPENAI_API_KEY');\n$open_ai = new OpenAi($open_ai_key,$originURL);\n$open_ai->setBaseURL(\"https://ai.example.com/\");\n````\n\n## Use Proxy\n\nYou can use some proxy servers for your requests api;\n\n````php\n$open_ai->setProxy(\"http://127.0.0.1:1086\");\n````\n\n## Set header\n\n ```php\n$open_ai->setHeader([\"Connection\"=>\"keep-alive\"]);\n```\n\n## Get cURL request info\n\n> ### !!! WARNING:Your API key will expose if you add this method to your code, therefore remove the method before deployment. Be careful !\nYou can get cURL info after the request.\n\n````php\n$open_ai = new OpenAi($open_ai_key);\necho $open_ai->listModels(); // you should execute the request FIRST!\nvar_dump($open_ai->getCURLInfo()); // You can call the request\n````\n\n## Chat (as known as ChatGPT API)\n\nGiven a chat conversation, the model will return a chat completion response.\n\n ```php\n$complete = $open_ai->chat([\n    'model' => 'gpt-3.5-turbo',\n    'messages' => [\n        [\n            \"role\" => \"system\",\n            \"content\" => \"You are a helpful assistant.\"\n        ],\n        [\n            \"role\" => \"user\",\n            \"content\" => \"Who won the world series in 2020?\"\n        ],\n        [\n            \"role\" => \"assistant\",\n            \"content\" => \"The Los Angeles Dodgers won the World Series in 2020.\"\n        ],\n        [\n            \"role\" => \"user\",\n            \"content\" => \"Where was it played?\"\n        ],\n    ],\n    'temperature' => 1.0,\n    'max_tokens' => 4000,\n    'frequency_penalty' => 0,\n    'presence_penalty' => 0,\n]);\n```\n\n## Accessing the Element\n\n```php\n<?php\n// Dummy Response For Chat API\n$j = '\n{\n   \"id\":\"chatcmpl-*****\",\n   \"object\":\"chat.completion\",\n   \"created\":1679748856,\n   \"model\":\"gpt-3.5-turbo-0301\",\n   \"usage\":{\n      \"prompt_tokens\":9,\n      \"completion_tokens\":10,\n      \"total_tokens\":19\n   },\n   \"choices\":[\n      {\n         \"message\":{\n            \"role\":\"assistant\",\n            \"content\":\"This is a test of the AI language model.\"\n         },\n         \"finish_reason\":\"length\",\n         \"index\":0\n      }\n   ]\n}\n';\n\n// decode response\n$d = json_decode($j);\n\n// Get Content\necho($d->choices[0]->message->content);\n```\n\n> ### Related: [ChatGPT Clone Project](#chatgpt-clone-project)\n\n## Completions\n\nGiven a prompt, the model will return one or more predicted completions, and can also return the probabilities of\nalternative tokens at each position.\n\n ```php\n$complete = $open_ai->completion([\n    'model' => 'gpt-3.5-turbo-instruct',\n    'prompt' => 'Hello',\n    'temperature' => 0.9,\n    'max_tokens' => 150,\n    'frequency_penalty' => 0,\n    'presence_penalty' => 0.6,\n]);\n```\n\n### Stream Example\n\nThis feature might sound familiar from [ChatGPT](https://chat.openai.com/chat).\n\n<hr>\n\n#### ChatGPT Clone Project\n\nVideo of demo:\n\nhttps://user-images.githubusercontent.com/22305274/219878695-c76a58c0-5081-402c-a1b5-2b1fd971735a.mp4\n\nChatGPT clone is a simple web application powered by the OpenAI library and built with PHP. It allows users to chat with\nan AI language model that responds in real-time. Chat history is saved using cookies, and the project requires the use\nof an API key and enabled SQLite3.\n\nUrl of The ChatGPT-Clone Repo https://github.com/orhanerday/ChatGPT\n\n<hr>\n\nWhether to stream back partial progress. If set, tokens will be sent as\ndata-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event_stream_format)\nas they become available, with the stream terminated by a data: [DONE] message.\n\n ````php\n$open_ai = new OpenAi(env('OPEN_AI_API_KEY'));\n\n$opts = [\n    'prompt' => \"Hello\",\n    'temperature' => 0.9,\n    \"max_tokens\" => 150,\n    \"frequency_penalty\" => 0,\n    \"presence_penalty\" => 0.6,\n    \"stream\" => true,\n];\n\nheader('Content-type: text/event-stream');\nheader('Cache-Control: no-cache');\n\n$open_ai->completion($opts, function ($curl_info, $data) {\n    echo $data . \"<br><br>\";\n    echo PHP_EOL;\n    ob_flush();\n    flush();\n    return strlen($data);\n});\n\n````\n\nAdd this part inside `<body>` of the HTML\n\n ````php\n\n<div id=\"divID\">Hello</div>\n<script>\n    var eventSource = new EventSource(\"/\");\n    var div = document.getElementById('divID');\n\n\n    eventSource.onmessage = function (e) {\n       if(e.data == \"[DONE]\")\n       {\n           div.innerHTML += \"<br><br>Hello\";\n       }\n        div.innerHTML += JSON.parse(e.data).choices[0].text;\n    };\n    eventSource.onerror = function (e) {\n        console.log(e);\n    };\n</script>\n````\n\nYou should see a response like the in video;\n\nhttps://user-images.githubusercontent.com/22305274/209847128-f72c9345-dd34-46f0-bbc5-daf1d7b6121f.mp4\n\n## Edits\n\nCreates a new edit for the provided input, instruction, and parameters\n\n ```php\n    $result = $open_ai->createEdit([\n        \"model\" => \"text-davinci-edit-001\",\n        \"input\" => \"What day of the wek is it?\",\n        \"instruction\" => \"Fix the spelling mistakes\",\n    ]);\n```\n\n## Images (DALL·E)\n\n> All DALL·E Examples available in this [repo](https://github.com/orhanerday/DALLE-Examples).\n\nGiven a prompt, the model will return one or more generated images as urls or base64 encoded.\n\n### Create image\n\nCreates an image given a prompt.\n\n ```php\n$complete = $open_ai->image([\n    \"prompt\" => \"A cat drinking milk\",\n    \"n\" => 1,\n    \"size\" => \"256x256\",\n    \"response_format\" => \"url\",\n]);\n```\n\n### Create image edit\n\nCreates an edited or extended image given an original image and a prompt.\n> You need HTML upload for image edit or variation? Please\n> check [DALL·E Examples](https://github.com/orhanerday/DALLE-Examples)\n\n````php\n$otter = curl_file_create(__DIR__ . './files/otter.png');\n$mask = curl_file_create(__DIR__ . './files/mask.jpg');\n\n$result = $open_ai->imageEdit([\n    \"image\" => $otter,\n    \"mask\" => $mask,\n    \"prompt\" => \"A cute baby sea otter wearing a beret\",\n    \"n\" => 2,\n    \"size\" => \"1024x1024\",\n]);\n````\n\n### Create image variation\n\nCreates a variation of a given image.\n\n````php\n$otter = curl_file_create(__DIR__ . './files/otter.png');\n\n$result = $open_ai->createImageVariation([\n    \"image\" => $otter,\n    \"n\" => 2,\n    \"size\" => \"256x256\",\n]);\n````\n\n## Searches\n\n**_(Deprecated)_**\n> This endpoint is deprecated and will be removed on December 3rd, 2022\n> OpenAI developed new methods with better\n> performance. [Learn more.](https://help.openai.com/en/articles/6272952-search-transition-guide)\n\nGiven a query and a set of documents or labels, the model ranks each document based on its semantic similarity to the\nprovided query.\n\n```php\n$search = $open_ai->search([\n    'engine' => 'ada',\n    'documents' => ['White House', 'hospital', 'school'],\n    'query' => 'the president',\n]);\n```\n\n## Embeddings\n\nGet a vector representation of a given input that can be easily consumed by machine learning models and algorithms.\n\nRelated guide: [Embeddings](https://beta.openai.com/docs/guides/embeddings)\n\n### Create embeddings\n\n```php\n$result = $open_ai->embeddings([\n    \"model\" => \"text-similarity-babbage-001\",\n    \"input\" => \"The food was delicious and the waiter...\"\n]);\n```\n\n## Answers\n\n**_(Deprecated)_**\n\n> This endpoint is deprecated and will be removed on December 3rd, 2022\n> We’ve developed new methods with better\n> performance. [Learn more](https://help.openai.com/en/articles/6233728-answers-transition-guide).\n\nGiven a question, a set of documents, and some examples, the API generates an answer to the question based on the\ninformation in the set of documents. This is useful for question-answering applications on sources of truth, like\ncompany documentation or a knowledge base.\n\n  ```php\n$answer = $open_ai->answer([\n    'documents' => ['Puppy A is happy.', 'Puppy B is sad.'],\n    'question' => 'which puppy is happy?',\n    'search_model' => 'ada',\n    'model' => 'curie',\n    'examples_context' => 'In 2017, U.S. life expectancy was 78.6 years.',\n    'examples' => [['What is human life expectancy in the United States?', '78 years.']],\n    'max_tokens' => 5,\n    'stop' => [\"\\n\", '<|endoftext|>'],\n]);\n```\n\n## Classifications\n\n**_(Deprecated)_**\n> This endpoint is deprecated and will be removed on December 3rd, 2022\n> OpenAI developed new methods with better\n> performance. [Learn more.](https://help.openai.com/en/articles/6272941-classifications-transition-guide)\n\nGiven a query and a set of labeled examples, the model will predict the most likely label for the query. Useful as a\ndrop-in replacement for any ML classification or text-to-label task.\n\n ```php\n$classification = $open_ai->classification([\n    'examples' => [\n        ['A happy moment', 'Positive'],\n        ['I am sad.', 'Negative'],\n        ['I am feeling awesome', 'Positive'],\n    ],\n    'labels' => ['Positive', 'Negative', 'Neutral'],\n    'query' => 'It is a raining day =>(',\n    'search_model' => 'ada',\n    'model' => 'curie',\n]);\n```\n\n## Content Moderations\n\nGiven a input text, outputs if the model classifies it as violating OpenAI's content policy.\n\n```php\n$flags = $open_ai->moderation([\n    'input' => 'I want to kill them.'\n]);\n```\n\nKnow more about Content Moderations here: [OpenAI Moderations](https://beta.openai.com/docs/api-reference/moderations)\n\n## List engines\n\n**_(Deprecated)_**\n\n> The Engines endpoints are deprecated.\n> Please use their replacement, [Models](#list-models), instead. [Learn more](TODO?).\n\nLists the currently available engines, and provides basic information about each one such as the owner and availability.\n\n ```php\n$engines = $open_ai->engines();\n```\n\n## Audio\n\n### Text To Speech (TTS)\n\n```php\n\n$result = $open_ai->tts([\n    \"model\" => \"tts-1\", // tts-1-hd\n    \"input\" => \"I'm going to use the stones again. Hey, we'd be going in short-handed, you know\",\n    \"voice\" => \"alloy\", // echo, fable, onyx, nova, and shimmer\n]);\n\n// Save audio file\nfile_put_contents('tts-result.mp3', $result);\n```\n\n### Create Transcription\n\nTranscribes audio into the input language.\n\n```php\n$c_file = curl_file_create(__DIR__ . '/files/en-marvel-endgame.m4a');\n\n$result = $open_ai->transcribe([\n    \"model\" => \"whisper-1\",\n    \"file\" => $c_file,\n]);\n```\n#### Response\n\n```json\n{\n  \"text\": \"I'm going to use the stones again. Hey, we'd be going in short-handed, you know. Look, he's still got the stones, so... So let's get them. Use them to bring everyone back. Just like that? Yeah, just like that. Even if there's a small chance that we can undo this, I mean, we owe it to everyone who's not in this room to try. If we do this, how do we know it's going to end any differently than it did before? Because before you didn't have me. Hey, little girl, everybody in this room is about that superhero life. And if you don't mind my asking, where the hell have you been all this time? There are a lot of other planets in the universe. But unfortunately, they didn't have you guys. I like this one. Let's go get this son of a bitch.\"\n}\n```\n\n### Create Translation\n\nTranslates audio into English.\n\n_I use Turkish voice for translation thanks to famous science YouTuber [Barış Özcan](https://youtu.be/r2dQgdktUJg?t=90)_\n\n```php\n$c_file = curl_file_create(__DIR__ . '/files/tr-baris-ozcan-youtuber.m4a');\n\n$result = $open_ai->translate([\n    \"model\" => \"whisper-1\",\n    \"file\" => $c_file,\n]);\n```\n#### Response\n\n```json\n{\n  \"text\": \"GPT-3. Last month, the biggest leap in the world of artificial intelligence in recent years happened silently. Maybe the biggest leap of all time. GPT-3's beta version was released by OpenAI. When you hear such a sentence, you may think, what kind of leap is this? But be sure, this is the most advanced language model with the most advanced language model with the most advanced language ability. It can answer these artificial intelligence questions, it can translate and even write poetry. Those who have gained access to the API or API of GPT-3 have already started to make very interesting experiments. Let's look at a few examples together. Let's start with an example of aphorism. This site produces beautiful words that you can tweet. Start to actually do things with your words instead of just thinking about them.\"\n}\n```\n\n #### Need HTML upload for audio? Check [this](#upload-file-with-html-form) section and change api references. Example :\n\n```php\n...\n    echo $open_ai->translate(\n        [\n            \"purpose\" => \"answers\",\n            \"file\" => $c_file,\n        ]\n    );\n...\n// OR\n...\n    echo $open_ai->transcribe(\n        [\n            \"purpose\" => \"answers\",\n            \"file\" => $c_file,\n        ]\n    );\n...\n```\n\n## Files\n\nFiles are used to upload documents that can be used across features like Answers, Search, and Classifications\n\n### List files\n\nReturns a list of files that belong to the user's organization.\n\n```php\n$files = $open_ai->listFiles();\n```\n\n### Upload file\n\nUpload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the\nfiles uploaded by one organization can be up to 1 GB. Please contact OpenAI if you need to increase the storage limit.\n\n```php\n$c_file = curl_file_create(__DIR__ . 'files/sample_file_1.jsonl');\n$result = $open_ai->uploadFile([\n            \"purpose\" => \"answers\",\n            \"file\" => $c_file,\n]);\n```\n\n### Upload file with HTML Form\n\n```php\n<form action=\"index.php\" method=\"post\" enctype=\"multipart/form-data\">\n    Select file to upload:\n    <input type=\"file\" name=\"fileToUpload\" id=\"fileToUpload\">\n    <input type=\"submit\" value=\"Upload File\" name=\"submit\">\n</form>\n<?php\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Orhanerday\\OpenAi\\OpenAi;\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    ob_clean();\n    $open_ai = new OpenAi(env('OPEN_AI_API_KEY'));\n    $tmp_file = $_FILES['fileToUpload']['tmp_name'];\n    $file_name = basename($_FILES['fileToUpload']['name']);\n    $c_file = curl_file_create($tmp_file, $_FILES['fileToUpload']['type'], $file_name);\n\n    echo \"[\";\n    echo $open_ai->uploadFile(\n        [\n            \"purpose\" => \"answers\",\n            \"file\" => $c_file,\n        ]\n    );\n    echo \",\";\n    echo $open_ai->listFiles();\n    echo \"]\";\n\n}\n\n```\n\n### Delete file\n\n ```php\n$result = $open_ai->deleteFile('file-xxxxxxxx');\n```\n\n### Retrieve file\n\n ```php\n$file = $open_ai->retrieveFile('file-xxxxxxxx');\n```\n\n### Retrieve file content\n\n ```php\n$file = $open_ai->retrieveFileContent('file-xxxxxxxx');\n```\n\n## Fine-tunes\n\nManage fine-tuning jobs to tailor a model to your specific training data.\n\n### Create fine-tune\n\n ```php\n$result = $open_ai->createFineTune([\n        \"model\" => \"gpt-3.5-turbo-1106\",\n        \"training_file\" => \"file-U3KoAAtGsjUKSPXwEUDdtw86\",\n]);\n```\n\n### List fine-tune\n\n ```php\n$fine_tunes = $open_ai->listFineTunes();\n```\n\n### Retrieve fine-tune\n\n ```php\n$fine_tune = $open_ai->retrieveFineTune('ft-AF1WoRqd3aJAHsqc9NY7iL8F');\n```\n\n### Cancel fine-tune\n\n ```php\n$result = $open_ai->cancelFineTune('ft-AF1WoRqd3aJAHsqc9NY7iL8F');\n```\n\n### List fine-tune events\n\n ```php\n$fine_tune_events = $open_ai->listFineTuneEvents('ft-AF1WoRqd3aJAHsqc9NY7iL8F');\n```\n\n### Delete fine-tune model\n\n ```php\n$result = $open_ai->deleteFineTune('curie:ft-acmeco-2021-03-03-21-44-20');\n```\n\n## Retrieve engine\n\n**_(Deprecated)_**\n\nRetrieves an engine instance, providing basic information about the engine such as the owner and availability.\n\n ```php\n$engine = $open_ai->engine('davinci');\n```\n\n## Models\n\nList and describe the various models available in the API.\n\n### List models\n\nLists the currently available models, and provides basic information about each one such as the owner and availability.\n\n ```php\n$result = $open_ai->listModels();\n```\n\n### Retrieve model\n\nRetrieves a model instance, providing basic information about the model such as the owner and permissioning.\n\n ```php\n$result = $open_ai->retrieveModel(\"text-ada-001\");\n```\n\n## Printing results *i.e.* `$search`\n\n ```php\necho $search;\n```\n## Assistants (beta)\n\nAllows you to build AI assistants within your own applications.\n\n### Create assistant\n\nCreate an assistant with a model and instructions.\n\n```php\n$data = [\n    'model' => 'gpt-3.5-turbo',\n    'name' => 'my assistant',\n    'description' => 'my assistant description',\n    'instructions' => 'you should cordially help me',\n    'tools' => [],\n    'file_ids' => [],\n];\n\n$assistant = $open_ai->createAssistant($data);\n```\n\n### Retrieve assistant\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n\n$assistant = $open_ai->retrieveAssistant($assistantId);\n```\n\n### Modify assistant\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n$data = [\n    'name' => 'my modified assistant',\n    'instructions' => 'you should cordially help me again',\n];\n\n$assistant = $open_ai->modifyAssistant($assistantId, $data);\n```\n\n### Delete assistant\n\n```php\n$assistantId = 'asst_DgiOnXK7nRfyvqoXWpFlwESc';\n\n$assistant = $open_ai->deleteAssistant($assistantId);\n```\n\n### Lists assistants\n\nReturns a list of assistants.\n\n```php\n$query = ['limit' => 10];\n\n$assistants = $open_ai->listAssistants($query);\n```\n\n### Create assistant file\n\nCreate an assistant file by attaching a File to an assistant.\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n$fileId = 'file-jrNZZZBAPGnhYUKma7CblGoR';\n\n$file = $open_ai->createAssistantFile($assistantId, $fileId);\n```\n\n### Retrieve assistant file\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n$fileId = 'file-jrNZZZBAPGnhYUKma7CblGoR';\n\n$file = $open_ai->retrieveAssistantFile($assistantId, $fileId);\n```\n\n### Delete assistant file\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n$fileId = 'file-jrNZZZBAPGnhYUKma7CblGoR';\n\n$file = $open_ai->deleteAssistantFile($assistantId, $fileId);\n```\n\n### List assistant files\n\nReturns a list of assistant files.\n\n```php\n$assistantId = 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz';\n$query = ['limit' => 10];\n\n$files = $open_ai->listAssistantFiles($assistantId, $query);\n```\n\n## Threads (beta)\n\nCreate threads that assistants can interact with.\n\n### Create thread\n\n```php\n$data = [\n    'messages' => [\n        [\n            'role' => 'user',\n            'content' => 'Hello, what is AI?',\n            'file_ids' => [],\n        ],\n    ],\n];\n\n$thread = $open_ai->createThread($data);\n```\n\n### Retrieve thread\n\n```php\n$threadId = 'thread_YKDArENVWFDO2Xz3POifFYlp';\n\n$thread = $open_ai->retrieveThread($threadId);\n```\n\n### Modify thread\n\n```php\n$threadId = 'thread_YKDArENVWFDO2Xz3POifFYlp';\n$data = [\n    'metadata' => ['test' => '1234abcd'],\n];\n\n$thread = $open_ai->modifyThread($threadId, $data);\n```\n\n### Delete thread\n\n```php\n$threadId = 'thread_YKDArENVWFDO2Xz3POifFYlp';\n\n$thread = $open_ai->deleteThread($threadId);\n```\n\n## Messages (beta)\n\nCreate messages within threads.\n\n### Create message\n\n```php\n$threadId = 'thread_YKDArENVWFDO2Xz3POifFYlp';\n$data = [\n    'role' => 'user',\n    'content' => 'How does AI work? Explain it in simple terms.',\n];\n\n$message = $open_ai->createThreadMessage($threadId, $data);\n```\n\n### Retrieve message\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$messageId = 'msg_d37P5XgREsm6BItOcppnBO1b';\n\n$message = $open_ai->retrieveThreadMessage($threadId, $messageId);\n```\n\n### Modify message\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$messageId = 'msg_d37P5XgREsm6BItOcppnBO1b';\n$data = [\n    'metadata' => ['test' => '1234abcd'],\n];\n\n$message = $open_ai->modifyThreadMessage($threadId, $messageId, $data);\n```\n\n### Lists messages\n\nReturns a list of messages for a given thread.\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$query = ['limit' => 10];\n\n$messages = $open_ai->listThreadMessages($threadId, $query);\n```\n\n### Retrieve message file\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$messageId = 'msg_CZ47kAGZugAfeHMX6bmJIukP';\n$fileId = 'file-CRLcY63DiHphWuBrmDWZVCgA';\n\n$file = $open_ai->retrieveMessageFile($threadId, $messageId, $fileId);\n```\n\n### List message files\n\nReturns a list of message files.\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$messageId = 'msg_CZ47kAGZugAfeHMX6bmJIukP';\n$query = ['limit' => 10];\n\n$files = $open_ai->listMessageFiles($threadId, $messageId, $query);\n```\n\n## Runs (beta)\n\nRepresents an execution run on a thread.\n\n### Create run\n\n```php\n$threadId = 'thread_d86alfR2rfF7rASyV4V7hicz';\n$data = ['assistant_id' => 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz'];\n\n$run = $open_ai->createRun($threadId, $data);\n```\n\n### Retrieve run\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n\n$run = $open_ai->retrieveRun($threadId, $runId);\n```\n\n### Modify run\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n$data = [\n    'metadata' => ['test' => 'abcd1234'],\n];\n\n$run = $open_ai->modifyRun($threadId, $runId, $data);\n```\n\n### Lists runs\n\nReturns a list of runs belonging to a thread.\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$query = ['limit' => 10];\n\n$runs = $open_ai->listRuns($threadId, $query);\n```\n\n### Submit tool outputs\n\nWhen a run has the status: \"requires_action\" and required_action.type is submit_tool_outputs, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n$outputs = [\n    'tool_outputs' => [\n        ['tool_call_id' => 'call_abc123', 'output' => '28C'],\n    ],\n];\n\n$run = $open_ai->submitToolOutputs($threadId, $runId, $outputs);\n```\n\n### Cancel run\n\nCancels a run that is \"in_progress\".\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n\n$run = $open_ai->cancelRun($threadId, $runId);\n```\n\n### Create thread and run\n\nCreate a thread and run it in one request.\n\n```php\n$data = [\n    'assistant_id' => 'asst_zT1LLZ8dWnuFCrMFzqxFOhzz',\n    'thread' => [\n        'messages' => [\n            [\n                'role' => 'user',\n                'content' => 'Hello, what is AI?',\n                'file_ids' => [],\n            ],\n        ],\n    ],\n];\n\n$run = $open_ai->createThreadAndRun($data);\n```\n\n### Retrieve run step\n\nRetrieves a step in execution of a run.\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n$stepId = 'step_kwLG0vPQjqVyQHVoL7GVK3aG';\n\n$step = $open_ai->retrieveRunStep($threadId, $runId, $stepId);\n```\n\n### List run steps\n\nReturns a list of run steps belonging to a run.\n\n```php\n$threadId = 'thread_JZbzCYpYgpNb79FNeneO3cGI';\n$runId = 'run_xBKYFcD2Jg3gnfrje6fhiyXj';\n$query = ['limit' => 10];\n\n$steps = $open_ai->listRunSteps($threadId, $runId, $query);\n```\n\n## Testing\n\nTo run all tests:\n\n```bash\ncomposer test\n```\n\nTo run only those tests that work for most user (exclude those that require a missing folder or that hit deprecated\nendpoints no longer available to most users):\n\n```bash\n./vendor/bin/pest --group=working\n```\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](.github/CONTRIBUTING.md) for details.\n\n## Security Vulnerabilities\n\nPlease report security vulnerabilities to [orhanerday@gmail.com](mailto:orhanerday@gmail.com)\n\n## Credits\n\n- [Orhan Erday](https://github.com/orhanerday)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n\n## Donation\n\n<a href=\"https://www.buymeacoffee.com/orhane\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=orhanerday/open-ai&type=Date)](https://star-history.com/#orhanerday/open-ai&Date)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.169921875,
          "content": "{\n    \"name\": \"orhanerday/open-ai\",\n    \"description\": \"OpenAI GPT-3 Api Client in PHP\",\n    \"keywords\": [\n        \"orhanerday\",\n        \"open-ai\"\n    ],\n    \"homepage\": \"https://github.com/orhanerday/open-ai\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Orhan Erday\",\n            \"email\": \"orhanerday@gmail.com\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.4\",\n        \"ext-curl\": \"*\",\n        \"ext-json\": \"*\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"^3.0\",\n        \"pestphp/pest\": \"^1.20\",\n        \"spatie/ray\": \"^1.28\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Orhanerday\\\\OpenAi\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Orhanerday\\\\OpenAi\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/pest\",\n        \"test-coverage\": \"vendor/bin/pest --coverage\",\n        \"format\": \"vendor/bin/php-cs-fixer fix --allow-risky=yes\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "legal.md",
          "type": "blob",
          "size": 2.271484375,
          "content": "# orhanerday Open-Source Initiative\n\n## Introduction\n\nWelcome to the orhanerday Open-Source Initiative! This initiative, led by Orhan Erday, is committed to fostering collaboration and innovation in the development of open-source projects. The term \"orhanerday\" serves as the official nomenclature for this initiative, symbolizing its universal reach and applicability across borders, including the Republic of Türkiye and all nations globally.\n\n## Purpose\n\nThe primary purpose of the orhanerday Open-Source Initiative is to create a collaborative environment for individuals and communities interested in contributing to and benefiting from open-source projects. By using the term \"orhanerday,\" we aim to establish a distinctive identity for our initiative and ensure its recognition and protection.\n\n## Usage\n\nTo use the term \"orhanerday\" in the context of your projects or initiatives, follow these guidelines:\n\n1. **Recognition:** When referring to projects, events, or initiatives associated with the orhanerday Open-Source Initiative, kindly acknowledge the leadership of Orhan Erday.\n\n2. **Global Applicability:** The term \"orhanerday\" extends beyond geographical boundaries, encompassing projects and initiatives worldwide. Ensure its usage reflects this universal validity.\n\n3. **Protection:** To safeguard the integrity and purpose of the orhanerday Open-Source Initiative, we encourage users to respect the guidelines and values established by Orhan Erday.\n\n## Getting Involved\n\nWe welcome developers, contributors, and enthusiasts to join the orhanerday Open-Source Initiative. Whether you're interested in coding, documentation, or community engagement, there's a place for you in our collaborative ecosystem.\n\nTo get involved:\n\n1. Explore our [GitHub repository](https://github.com/orhanerday) for ongoing projects.\n2. Join our community forums and discussions to connect with like-minded individuals.\n3. Follow us on social media to stay updated on the latest news and events.\n\n## Contact\n\nFor inquiries, collaboration opportunities, or to report any concerns related to the orhanerday Open-Source Initiative, please contact us at [orhan@duck.com](mailto:orhan@duck.com).\n\nThank you for being a part of the orhanerday Open-Source Initiative! Together, let's build a vibrant and inclusive open-source community."
        },
        {
          "name": "openai-elephpant.svg",
          "type": "blob",
          "size": 3.5185546875,
          "content": "<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 334.21 334.22\"><path d=\"M414.1,253.4c-.28,93-75.16,167.17-168.48,166.85-92-.31-166-75.68-165.72-168.6.32-91.72,75.76-166,168.22-165.62C339.89,86.41,414.38,161.52,414.1,253.4ZM246.64,402.3c82.42,0,149.45-66.38,149.52-148.16C396.23,171,330,104.05,247.61,104c-83.18-.06-149.74,66.35-149.77,149.42C97.81,335.49,164.56,402.27,246.64,402.3Z\" transform=\"translate(-79.9 -86.03)\"/><path d=\"M236.26,294.18,215.93,185c3.67.24,7.06.3,10.4.75,1.8.24,2.41,1.83,2.33,3.6-.17,4-.69,8-.44,12,.95,14.9,6,28.15,17.49,38.12,8.14,7.09,18,9.69,28.79,8.55,1.63-.18,3.23-.57,4.85-.88a11.6,11.6,0,0,0,9-7.09c2.69-6.29,3.18-12.95,3.17-19.68,0-.16-.15-.32-.34-.69-1,3.1-1.63,6.11-2.78,8.91a108.61,108.61,0,0,1-5.32,11.16,8.5,8.5,0,0,1-8.27,4.37c-13.55-.55-24.22-6.44-31.52-17.86-6.57-10.27-8-21.71-6-33.52,1.9-10.89,8.88-17.71,19-21.47,11.23-4.18,22.92-4.7,34.72-4.11,4.92.25,9.82.71,14.73,1.08,7.68.58,13.51,4.8,18.71,9.95a80.22,80.22,0,0,1,20.68,35.28c2.71,9.35,4.07,18.84,2.68,28.59-1.54,10.82-6.4,20-13.65,28.06-4.18,4.67-7.87,9.79-11.71,14.77a10.29,10.29,0,0,0-1.4,3c-1.48,4.48-.05,7.35,4.37,9l1.48.55c4.41,1.62,5.39,4.75,2.63,8.61a15.32,15.32,0,0,1-8.9,6.11,6.26,6.26,0,0,1-4.49-1.22,33.28,33.28,0,0,1-12.11-15.65c-1.6-4.38-.5-8.44,1.54-12.3,2.45-4.64,5.13-9.15,7.67-13.74a15.66,15.66,0,0,0,1.26-3.09c1.22-4.09-1.37-7-5.65-6.56-4,.45-7,2.89-10,5.22s-5.77,4.77-8.77,7a14.32,14.32,0,0,0-6,10c-1.16,9.62.11,18.8,5.47,27.17a67.7,67.7,0,0,1,4.49,8.29c1.34,2.93.8,4.55-2.08,6a36.29,36.29,0,0,1-7.51,2.85A81.16,81.16,0,0,1,264.18,329a21.91,21.91,0,0,1-3.14-.24c-2.62-.38-3.37-1.27-3.45-3.89-.16-5.11-.18-10.23-.53-15.33a28.79,28.79,0,0,0-5.54-15.15c-3.39-4.63-7-5.16-11.93-2.08C238.57,293,237.48,293.52,236.26,294.18Zm86-72.28a5.11,5.11,0,0,0,4.2-5.69,5.05,5.05,0,0,0-5.92-4.1,5,5,0,1,0,1.72,9.79Z\" transform=\"translate(-79.9 -86.03)\"/><path d=\"M228.08,272.18l1.52,8.17c-7.61,6-15.14,12-22.9,17.8a7.24,7.24,0,0,1-5.5.74c-8.85-2.45-17.6-5.24-26.39-7.88-2.81-.85-5.65-1.6-8.56-2.43-.41,5.17,1.6,10.43,5.7,15.33,6.73,8,15.56,10.81,25.69,10.11,8-.55,14.7-4.22,20.81-9.26,4.43-3.66,9.15-7,13.74-10.46l2.15,11.54c-4.07,3.06-8.15,6.12-12.55,9.44a32,32,0,0,0,14.88,3.06l1.88,10.09a42.16,42.16,0,0,1-25.32-5.5,5.47,5.47,0,0,0-4.82-.65,43,43,0,0,1-24.3,1c-10.49-2.48-18.93-8.14-24.64-17.36A32.7,32.7,0,0,1,154.8,286c.17-2.33-.69-3.66-2.28-5.19-3-2.86-6.18-5.71-8.2-9.2-6.11-10.58-6.42-21.76-1.16-32.76,4.25-8.89,11.26-15.23,20.22-19.3a4.82,4.82,0,0,0,3-3.75c1.59-6.92,5.27-12.65,10.26-17.65a45.71,45.71,0,0,1,18.28-10.86L205,185.45l7,.19,2,10.57c-9.73-1.14-18.89.35-26.69,6.67-7.44,6-11.82,13.76-10.26,23.64,1.77,11.18,4,22.29,6.15,33.41a3.37,3.37,0,0,0,1.45,2.31c3.94,1.41,8,2.57,12.39,3.95-.21-1.5-.31-2.45-.48-3.38-2-10.9-3.76-21.85-6.12-32.67-1.09-4.94.45-7.95,4.27-10.77,7-5.15,13.77-10.61,20.64-15.94L217.42,215c-5.38,4.17-10.79,8.32-16.12,12.56-.89.71-2.15,1.91-2.05,2.74.5,4.07,1.39,8.09,2.23,12.58,3.36-2.61,6.33-5,9.35-7.23s6.12-4.48,9.19-6.71l2.15,11.54c-1.76-.13-3.42-1.58-5.31,0-4,3.21-8,6.3-12.09,9.39a3.39,3.39,0,0,0-1.4,3.8q1.37,6.56,2.46,13.18a3.35,3.35,0,0,0,2.7,3c4.21,1.2,8.49,2.23,12.57,3.78C223.93,274.64,226.08,274.31,228.08,272.18Zm-10.65,8.24c-2.28-.75-4-1.37-5.8-1.91q-17.38-5.28-34.77-10.52c-3.22-1-4.89-3-5.46-6.36-1.57-9.32-3.4-18.59-5.15-27.88-.19-1-.52-1.94-.8-3-8.69,4.09-14.33,13.77-14.64,23.16-.25,7.36,3.24,13.2,8.12,18.19a21.44,21.44,0,0,0,7.46,4.89c6.37,2.43,12.92,4.39,19.43,6.43,6,1.9,12.13,3.7,18.23,5.41a3.81,3.81,0,0,0,2.89-.4C210.35,286,213.64,283.36,217.43,280.42Z\" transform=\"translate(-79.9 -86.03)\"/></svg>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 1.1630859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    bootstrap=\"vendor/autoload.php\"\n    colors=\"true\"\n    convertErrorsToExceptions=\"true\"\n    convertNoticesToExceptions=\"true\"\n    convertWarningsToExceptions=\"true\"\n    processIsolation=\"false\"\n    stopOnFailure=\"false\"\n    executionOrder=\"random\"\n    failOnWarning=\"true\"\n    failOnRisky=\"true\"\n    failOnEmptyTestSuite=\"true\"\n    beStrictAboutOutputDuringTests=\"true\"\n    verbose=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"Orhanerday Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <coverage>\n        <include>\n            <directory suffix=\".php\">./src</directory>\n        </include>\n        <report>\n            <html outputDirectory=\"build/coverage\"/>\n            <text outputFile=\"build/coverage.txt\"/>\n            <clover outputFile=\"build/logs/clover.xml\"/>\n        </report>\n    </coverage>\n    <logging>\n        <junit outputFile=\"build/report.junit.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}