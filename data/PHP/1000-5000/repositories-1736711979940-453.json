{
  "metadata": {
    "timestamp": 1736711979940,
    "page": 453,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RubixML/ML",
      "stars": 2069,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.029296875,
          "content": "* text=auto\n\n*.php text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.15234375,
          "content": "test.model\n/site\n/vendor\ncomposer.lock\n.phpunit.result.cache\n.php-cs-fixer.cache\nThumbs.db\n.DS_Store\ndebug.log\n/test.png\npyvenv.cfg\n.venv\n.idea\n.vscode\n.vs\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 4.4013671875,
          "content": "<?php\n\nuse PhpCsFixer\\Finder;\nuse PhpCsFixer\\Config;\n\n$finder = Finder::create()->in(__DIR__)\n    ->exclude('docs');\n\n$config = new Config();\n\nreturn $config->setRules([\n    '@PSR2' => true,\n    'align_multiline_comment' => true,\n    'array_syntax' => ['syntax' => 'short'],\n    'backtick_to_shell_exec' => true,\n    'binary_operator_spaces' => true,\n    'blank_lines_before_namespace' => true,\n    'blank_line_after_namespace' => true,\n    'blank_line_after_opening_tag' => true,\n    'blank_line_before_statement' => [\n        'statements' => [\n            'break', 'case', 'continue', 'declare', 'default', 'do', 'for',\n            'if', 'foreach', 'return', 'switch', 'try', 'while',\n        ],\n    ],\n    'cast_spaces' => ['space' => 'single'],\n    'class_attributes_separation' => true,\n    'combine_consecutive_issets' => true,\n    'combine_consecutive_unsets' => true,\n    'compact_nullable_type_declaration' => true,\n    'concat_space' => ['spacing' => 'one'],\n    'fully_qualified_strict_types' => true,\n    'increment_style' => ['style' => 'pre'],\n    'linebreak_after_opening_tag' => true,\n    'list_syntax' => ['syntax' => 'short'],\n    'lowercase_cast' => true,\n    'lowercase_static_reference' => true,\n    'magic_constant_casing' => true,\n    'magic_method_casing' => true,\n    'multiline_comment_opening_closing' => true,\n    'multiline_whitespace_before_semicolons' => [\n        'strategy' => 'no_multi_line',\n    ],\n    'native_function_casing' => true,\n    'native_type_declaration_casing' => true,\n    'new_with_parentheses' => true,\n    'no_alternative_syntax' => true,\n    'no_blank_lines_after_class_opening' => true,\n    'no_blank_lines_after_phpdoc' => true,\n    'no_empty_statement' => true,\n    'no_extra_blank_lines' => true,\n    'no_leading_import_slash' => true,\n    'no_leading_namespace_whitespace' => true,\n    'no_mixed_echo_print' => ['use' => 'echo'],\n    'no_null_property_initialization' => true,\n    'no_short_bool_cast' => true,\n    'no_singleline_whitespace_before_semicolons' => true,\n    'no_spaces_around_offset' => true,\n    'no_superfluous_phpdoc_tags' => false,\n    'no_superfluous_elseif' => true,\n    'no_trailing_comma_in_singleline' => true,\n    'no_unneeded_control_parentheses' => true,\n    'no_unneeded_braces' => true,\n    'no_unset_cast' => true,\n    'no_unused_imports' => true,\n    'no_useless_else' => true,\n    'no_useless_return' => true,\n    'no_whitespace_before_comma_in_array' => true,\n    'no_whitespace_in_blank_line' => true,\n    'normalize_index_brace' => true,\n    'nullable_type_declaration_for_default_null_value' => true,\n    'object_operator_without_whitespace' => true,\n    'ordered_class_elements' => [\n        'order' => [\n            'use_trait', 'constant_public', 'constant_protected',\n            'constant_private', 'property_public_static', 'property_protected_static',\n            'property_private_static', 'property_public', 'property_protected',\n            'property_private', 'method_public_static', 'method_protected_static',\n            'method_private_static', 'construct', 'destruct', 'phpunit',\n            'method_public', 'method_protected', 'method_private', 'magic',\n        ],\n        'sort_algorithm' => 'none',\n    ],\n    'php_unit_fqcn_annotation' => true,\n    'php_unit_method_casing' => ['case' => 'camel_case'],\n    'phpdoc_add_missing_param_annotation' => ['only_untyped' => false],\n    'phpdoc_align' => ['align' => 'left'],\n    'phpdoc_line_span' => [\n        'const' => 'multi',\n        'method' => 'multi',\n        'property' => 'multi',\n    ],\n    'phpdoc_no_access' => true,\n    'phpdoc_no_empty_return' => true,\n    'phpdoc_no_useless_inheritdoc' => true,\n    'phpdoc_order' => true,\n    'phpdoc_scalar' => true,\n    'phpdoc_single_line_var_spacing' => true,\n    'phpdoc_to_comment' => false,\n    'phpdoc_trim' => true,\n    'phpdoc_trim_consecutive_blank_line_separation' => true,\n    'phpdoc_var_without_name' => true,\n    'protected_to_private' => true,\n    'return_assignment' => false,\n    'return_type_declaration' => ['space_before' => 'one'],\n    'semicolon_after_instruction' => true,\n    'short_scalar_cast' => true,\n    'simplified_null_return' => true,\n    'single_quote' => true,\n    'single_line_comment_style' => true,\n    'ternary_operator_spaces' => true,\n    'ternary_to_null_coalescing' => true,\n    'type_declaration_spaces' => true,\n    'trim_array_spaces' => true,\n    'unary_operator_spaces' => true,\n    'whitespace_after_comma_in_array' => true,\n])->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 35.15234375,
          "content": "- 2.5.2\n    - Fix bug in One-class SVM inferencing\n\n- 2.5.1\n    - Fix bug in SVM (SVC and SVR) inferencing\n\n- 2.5.0\n    - Added Vantage Point Spatial tree\n    - Blob Generator can now `simulate()` a Dataset object\n    - Added Wrapper interface\n    - Plus Plus added check for min number of sample seeds\n    - LOF prevent div by 0 local reachability density\n\n- 2.4.1\n    - Sentence Tokenizer fix Arabic and Farsi language support\n    - Optimize online variance updating\n\n- 2.4.0\n    - Add GELU activation function\n    - Add numParams() method to Network\n    - Neural Network Learners now report number of trainable parameters\n    - Regex Filter added pattern to match unicode emojis\n    - Custom escape character for CSV Extractor\n    \n- 2.3.4\n    - Add string literal type-hints\n\n- 2.3.3\n    - Optimize Adam and AdaMax Optimizers\n\n- 2.3.2\n    - Update PHP Stemmer to version 3\n\n- 2.3.1\n    - Fix PSR-3 log version compatibility issue\n    - Check for correct version of RBX format\n\n- 2.3.0\n    - Added BM25 Transformer\n    - Add `dropFeature()` method to the dataset object API\n    - Add neural network architecture visualization via GraphViz\n    \n- 2.2.2\n    - Fix Grid Search best model selection\n\n- 2.2.1\n    - Fix Extra Tree divide by zero when split finding\n\n- 2.2.0\n    - Added Image Rotator transformer\n    - Added One Vs Rest ensemble classifier\n    - Add variance and range to the Dataset `describe()` report\n    - Added Gower distance kernel\n    - Added `types()` method to Dataset\n    - Concatenator now accepts an iterator of iterators\n\n- 2.1.1\n    - Do not consider unset properties when determining revision\n\n- 2.1.0\n    - Added Probabilistic Metric interface\n    - Added Probabilistic and Top K Accuracy\n    - Added Brier Score Probabilistic Metric\n    - Export Decision Tree-based models in Graphviz \"dot\" format\n    - Added Graphviz helper class\n    - Graph subsystem memory and storage optimizations\n    \n- 2.0.2\n    - Fix Decision Tree max height terminating condition\n\n- 2.0.1\n    - Compensate for PHP 8.1 backward compatibility issues\n\n- 2.0.0\n    - Gradient Boost now uses gradient-based subsampling\n    - Allow Token Hashing Vectorizer custom hash functions\n    - Gradient Boost base estimator no longer configurable\n    - Move dummy estimators to the Extras package\n    - Increase default MLP window from 3 to 5\n    - Decrease default Gradient Boost window from 10 to 5\n    - Rename alpha regularization parameter to L2 penalty\n    - Added RBX serializer class property type change detection\n    - Rename boosting `estimators` param to `epochs`\n    - Neural net-based learners can now train for 0 epochs\n    - Rename Labeled `stratify()` to `stratifyByLabel()`\n    - Added Sparse Cosine distance kernel\n    - Cosine distance now optimized for dense and sparse vectors\n    - Word Count Vectorizer now uses min count and max ratio DFs\n    - Numeric String Converter now handles NAN and INFs\n    - Numeric String Converter is now Reversible\n    - Removed Numeric String Converter NAN_PLACEHOLDER constant\n    - Added MurmurHash3 and FNV1a 32-bit hashing functions to Token Hashing Vectorizer\n    - Changed Token Hashing Vectorizer max dimensions to 2,147,483,647\n    - Increase SQL Table Extractor batch size from 100 to 256\n    - Ranks Features interface no longer extends Stringable\n    - Verbose Learners now log change in loss\n    - Numerical instability logged as warning instead of info\n    - Added `header()` method to CSV and SQL Table Extractors\n    - `Argmax()` now throws exception when undefined\n    - MLP Learners recover from numerical instability with snapshot\n    - Rename Gzip serializer to Gzip Native\n    - Change RBX serializer constructor argument from base to level\n    - Rename Writeable extractor interface to Exporter\n    \n- 1.3.4\n    - Fix Decision Tree max height terminating condition\n\n- 1.3.3\n    - Forego unnecessary logistic computation in Logit Boost\n\n- 1.3.2\n    - Optimize Binary output layer\n\n- 1.3.1\n    - Update to Ok Bloomer 1.0 stable\n\n- 1.3.0\n    - Switch back to original fork of Tensor\n    - Added `maxBins` hyper-parameter to CART-based learners\n    - Added stream Deduplicator extractor\n    - Added the SiLU activation function\n    - Added Swish activation layer\n    \n- 1.2.4\n    - Refactor neural network parameter updates\n    - Allow set null logger\n\n- 1.2.3\n    - Fix Multiclass layer cross entropy gradient optimization\n\n- 1.2.2\n    - Allow empty dataset objects in `stack()`\n\n- 1.2.1\n    - Refactor stratified methods on Labeled dataset\n    - Narrower typehints\n\n- 1.2.0\n    - Added Logit Boost classifier\n    - Interval Discretizer variable or equi-depth binning\n    - Text Normalizers now lower or upper case\n\n- 1.1.3\n    - Min Max Normalizer compensate for 0 variance features\n\n- 1.1.2\n    - Improved random floating point number precision\n    - Deduplicate Preset seeder centroids\n    - Fix Gradient Boost learning rate upper bound\n    - Fix Loda histogram edge alignment\n\n- 1.1.1\n    - Fix Gradient Boost subsampling and importance scores\n    \n- 1.1.0\n    - Update to Scienide Tensor 3.0\n    - Added Nesterov's lookahead to Momentum Optimizer\n    - Added Reversible transformer interface\n    - MaxAbs, Z Score, and Robust scalers are now Reversible\n    - Min Max Normalizer now implements Reversible\n    - TF-IDF Transformer is now Reversible\n    - Added Preset cluster seeder\n    - Added Concatenator extractor\n\n- 1.0.3\n    - Do not remove `groups` property from symbol table\n\n- 1.0.2\n    - Fix KNN and Hot Deck imputer reset donor samples\n\n- 1.0.1\n    - Fix AdaMax optimizer when tensor extension loaded\n    - Prevent certain specification false negatives\n    - Add extension minimum version specification\n\n- 1.0.0\n    - No changes\n\n- 1.0.0-rc1\n    - Added Token Hashing Vectorizer transformer\n    - Added Word Stemmer tokenizer from Extras\n    - Remove HTML Stripper and Whitespace Remover transformers\n    - Rename steps() method to losses()\n    - Steps() now returns iterable progress table w/ header\n    - Remove rules() method on CART\n    - Removed results() and best() methods from Grid Search\n    - Change string representation of NAN to match PHP\n    - Added extra whitespace pattern to Regex Filter\n\n- 1.0.0-beta2\n    - Interval Discretizer now uses variable width histograms\n    - Added TF-IDF sublinear TF scaling and document length normalization\n    - Dataset filterByColumn() is now filter()\n    - Added Lambda Function transformer from Extras\n    - Rename Dataset column methods to feature\n    - Added Dataset general sort() using callback\n    - Confusion Matrix classes no longer selectable\n    - Remove Recursive Feature Eliminator transformer\n    - Metric range() now returns a Tuple object\n\n- 1.0.0-beta1\n    - Added variance smoothing to Gaussian NB, Mixture, and MLE\n    - Added MAD smoothing to Robust Z Score\n    - Added Writable extractor interface\n    - NDJSON and CSV extractors are now Writable\n    - Added SQL Table dataset extractor\n    - Changed Word Count Vectorizer DF constraints to proportions\n    - Change order of Naive Bayes hyper-parameters\n    - Persisters use RBX serializer by default\n    - Removed previously deprecated portions of the API\n    - Removed Embedder interface and namespace\n    - Change Robust Z Score alpha parameter name to beta\n    - Hold Out validator does not randomize by default\n    - Move Redis DB persister to extras package\n    - Remove Loda estimate bins static method\n    - Change Grid Search base estimator param name to class\n    - Remove Dataset cast to string preview\n    - Add Error Analysis error standard deviation and drop midrange\n    - Naive Bayes Laplace smoothing no longer effects priors\n    - Nearest Neighbors distance weighting off by default\n    - Promoted the Other namespace\n    - Moved Flysystem persister to the Extras package\n    - Change order of Loda hyper-parameters\n    - Persistent Model now accepts an optional serializer\n    - Persisters no longer interact directly with Persistables\n    - Remove Wrapper interface\n    - RBX serializer now accepts base Gzip parameter\n    - Gzip serializer no longer accepts base serializer\n    - Changed Gzip default compression level from 1 to 6\n    - Changed RBX default compression level from 9 to 6\n    - Do not persist training progress information\n    - Change underscores in Report property names to spaces\n    - Add saveTo() method to Encoding object\n    - Add Dataset exportTo() method\n    - Pipeline and Committee Machine are no longer Verbose\n    - Remove K Best feature selector (special case of RFE)\n    - Changed Error Analysis metrics\n    - Remove threat score from Multiclass Breakdown\n    - Rename Labels Are Missing exception\n    - Feature importances are no longer normalized\n    - Optimized CART binary categorical node splitting\n    - Interval Discretizer outputs numeric string categories\n    - Renamed Random Hot Deck Imputer\n    - Changed order of decision tree hyper-parameters\n\n- 0.4.1\n    - Optimized CART node splitting for low variance continuous features\n    - Fixed RBX serializer string representation\n    - Prevent overwrites when instantiating Unlabeled from iterator\n\n- 0.4.0\n    - Added Truncated SVD transformer\n    - Added Rubix Object File (RBX) format serializer\n    - Added class revision() method to the Persistable interface\n    - Added custom class revision mismatch exception\n    - Add Boolean Converter transformer\n    - Deprecated Igbinary serializer and move to Extras package\n    - Deprecate explainedVar() and noiseVar() methods on PCA and LDA\n    - Added missing extension specification and exception\n    \n- 0.3.2\n    - Fix t-SNE momentum gain bus error when using Tensor extension\n    - Optimize t-SNE matrix instantiation\n    - Refactor single sample inference methods\n    - Update the docs site\n\n- 0.3.1\n    - Fix CART feature importances purity increase overflow\n\n- 0.3.0\n    - Added K Best feature selector\n    - Added Flysystem 2.0 Persister\n    - Stateful and Elastic Transformers are now Persistable\n    - Added Gzip serializer for Persistable objects\n    - Added Sentence tokenizer\n    - Library now throws Rubix\\ML namespaced exceptions\n    - Added Scoring interface for estimators that score samples\n    - Deprecated the Ranking interface\n    - Add generic Trainable interface\n    - Decision Trees are now iterable\n    - Added K-Skip-N-Gram tokenizer and deprecated Skip Gram\n    - Single sample inference methods are now marked internal\n    - Deprecated Variance Threshold Filter\n    \n- 0.2.4\n    - Categorized and annotated internal API\n    - Fix context of preprocess() and combinations() methods\n    - Added version constants\n\n- 0.2.3\n    - Now compatible with PHP 8 GD Image types\n    - Dataset cast sample to array upon validation\n\n- 0.2.2\n    - Optimized CART quantile-based node splitting\n    - Fixed CART and Extra Tree min purity increase post pruning\n    - Fix ITree infinite loop splitting same samples\n\n- 0.2.1\n    - Optimized Stop Word Filter\n    - Allow list of empty regex patterns in Regex Filter\n    - Handle missing class definitions in Native and Igbinary\n    - Fixed infinite loop in Ball Tree & KD Tree grow method\n\n- 0.2.0\n    - Add Recursive Feature Eliminator feature selector\n    - Can now disable holdout validation in MLP learners\n    - TF-IDF Transformer additive Laplace smoothing now variable\n    - Added instability detection to gradient-based learners\n    - Gradient Boost validation set holdout can now be 0\n    - Specifications now extend base class\n    - Rename Dataset validate argument to verify\n    - Ball Tree Cluster nodes are now called Cliques\n    - ITree cells are now called Depth nodes\n    - Added Dataset join() method and deprecated augment()\n    - Added score() method to Ranking API and deprecated rank()\n    - Renamed Radius Neighbors anomalyClass to outlierClass\n    - HTML Stripper can now allow user-specified tags\n    - Sparse Random Projector now has variable sparsity\n    - Deprecated Dense Random Projector transformer\n    \n- 0.1.6\n    - Fix KNN Imputer spatial tree dependency injection\n\n- 0.1.5\n    - Compensate for zero vectors in Cosine kernel\n    - Fixed KMC2 random threshold calculation\n    - Fix Naive Bayes divide by zero when smoothing is 0\n\n- 0.1.4\n    - Optimized Cosine distance for sparse vectors\n\n- 0.1.3\n    - Optimized Cosine distance kernel\n    - Optimized (NaN) Safe Euclidean distance kernel\n    - Fixed markedness calculation in Multiclass Breakdown\n    - Prevent infinite loop during spatial tree path finding\n\n- 0.1.2\n    - Fixed Grid Search best hyper-parameters method\n    - Fixed K Means average loss calculation\n    - Fixed bootstrap estimators tiny bootstrap sets\n\n- 0.1.1\n    - Fixed Image Resizer placeholder image\n    - Fixed Filesystem no write permissions on instantiation\n    - Nicer Stringable object string representations\n    - Do not terminate empty Spatial tree leaf nodes\n    - Additional Filesystem persister checks\n    - Nicer Dataset object validation error messages\n\n- 0.1.0\n    - CV Report Generators now return Report objects\n    - Dataset describe methods now return Report objects\n    - Allow hyphens and apostrophes in Word Tokenizer\n    - Dataset conversion methods now return an Encoding object\n    - Encodings are now writeable to disk\n    - Allow classes to be selected for Confusion Matrix\n    - Fixed divide by zero in Multiclass Breakdown report\n    - Changed Random Projector minDimensions default max distortion\n    - Fixed Naive Bayes user-defined class prior probabilities\n    - Internal CV Learners now check for sufficient hold out data\n    - Fixed randomize empty dataset object\n    - Removed setPersister method from Persistent Model\n    - Added Dataset Has Dimensionality Specification\n    - Changed name of Tree max depth parameter to max height\n    - Fixed F Beta division by zero\n    - Dataset toCSV and toNDJSON accept optional header\n    - Nicer Verbose Learner logger output\n    - Screen Logger uses empty channel name by default\n\n- 0.1.0-rc5\n    - Improved logging for Verbose Learners\n    - Added max document frequency to Word Count Vectorizer\n    - Whitespace Trimmer is now a separate Transformer\n    - Text Normalizers no longer remove extra whitespace\n    - Added extra characters pattern to Regex Filter class constants\n    - Moved Lambda Function transformer to Extras package\n    - GaussianNB new class labels during partial train\n    - Decision Tree print ruleset now accepts a header\n    - Fixed Variance Threshold Filter drop categorical by default\n    - Removed AdaBoost return learned sample weights\n\n- 0.1.0-rc4\n    - Added Multibyte Text Normalizer transformer\n    - V Measure now has adjustable beta parameter\n    - Persistent Model is no longer Verbose\n    - Stop Word Filter now handles unicode characters\n\n- 0.1.0-rc3\n    - Embedders now adopt the Transformer API\n    - Added RanksFeatures interface\n    - Logistic Regression and Adaline now implement RanksFeatures\n    - Ridge now implements the RanksFeatures interface\n    - Added L2 regularization to Dense hidden layers\n    - Neural Network L2 regularization now optional\n    - Added MLP numerical instability checks\n    - Optimized Ball Tree nearest neighbors search\n    - Pipeline is now more verbose\n    - Renamed Dataset partition method to partitionByColumn\n    - Decreased default neural net learner batch size to 128\n    - Increased default K Means batch size to 128\n    - Renamed Dataset types method to featureTypes\n    - Efficient serialization of Word Count Vectorizer\n    - Decoupled Persistable interface from Learner\n    - Moved Gower Distance kernel to Extras package\n    - Moved SiLU activation function to Extras package\n    - Removed array_first and array_last from global functions\n    - Abstracted deferred Backend computations into Tasks\n    - Removed unused BST interface\n\n- 0.1.0-rc2\n    - Persistent Model now implements Verbose interface\n    - Tuned CART continuous feature quantile-based split finding\n    - N-gram and SkipGram use configurable base word tokenizer\n    - Moved Alpha Dropout hidden layer to Extras package\n    - Added Dataset merge and augment methods\n    - Removed Dataset prepend and append methods\n    - Lambda Function transformer now takes any callable\n    - Text Normalizer trim extra whitespace not optional\n    - Mean Shift minimum seeds now set at 20\n    - Standardized K Means inertial loss over batch count\n    - Added set persister method to Persistent Model\n    - Removed range() from neural network Cost Function interface\n    - Increased default neural net learner batch size to 200\n\n- 0.1.0-rc1\n    - Random Forest now handles imbalanced datasets\n    - Added early stopping window to AdaBoost\n    - Gaussian MLE now has automatic and adaptive threshold\n    - Loda now has automatic and adaptive threshold\n    - Variance Threshold Filter now selects top k features\n    - Added params method to Estimator and Embedder interface\n    - t-SNE now compatible with categorical distance kernels\n    - Grid Search implements the Wrapper interface\n    - Grid Search memorizes all results from last search\n    - Dataset fromIterator method accepts any iterable\n    - Column Picker throws exception if column not found\n    - Better hyper-parameter stringification\n    - Improved Dataset exception messages\n    - RMSE now default validation Metric for Regressors\n    - Added balanced accuracy and threat score to Multi-class report\n    - Pipeline and Persistent Model now implement Ranking\n    - Changed percentile to quantile in Stats helper\n    - Renamed Residual Analysis report to Error Analysis\n    - Changed namespace of specification objects\n\n- 0.0.19-beta\n    - Added SiLU self-stabilizing neural network activation function\n    - Dense hidden layers now have optional bias parameter\n    - KNN-based imputers accelerated by spatial tree\n    - Changed the default anomaly class for Radius Neighbors\n    - Removed additional methods from guessing Strategies\n    - Numeric String Converter now uses fixed NaN placeholder\n    - Missing Data Imputer now passes through other data types\n    - Changed order of Missing Data Imputer params\n    - Renamed high-level resource type to image type\n    - Added comb (n choose k) to global functions\n    - Image Vectorizer now has grayscale option\n    - Clusterers and Anomaly Detectors return integer predictions\n    - Ball Tree now compatible with categorical distance kernels\n    - Parallel Learners using Amp Backend are now persistable\n    - Changed order of Radius Neighbors hyper-parameters\n\n- 0.0.18-beta\n    - Now requires PHP 7.2 and above\n    - Added phpbench performance benchmarks\n    - Added JSON, NDJSON, CSV, and Column Picker Extractors\n    - Changed the way fromIterator method works on Dataset object\n    - Added Hyperplane dataset generator\n    - Changed the way noise is applied to Circle, Half Moon, etc.\n    - Changed name of Multilayer Perceptron classifier\n    - Deferred computations are now callable\n    - Removed range() from the activation function interface\n    - Added label type validation for supervised learners\n    - Added toArray, toJson, toCsv, toNdjson methods to Dataset API\n    - Can now preview a Dataset object in console by echoing it\n    - Changed Labeled dataset objects iteration and array access\n    - Removed zip and unzip methods on Labeled dataset\n    - Added describe by label method to Labeled dataset\n    - Changed the way fromIterator works on Dataset\n    - Added Regex Filter transformer\n    - Changed name of Igbinary serializer\n    - Changed dataset and label description\n\n- 0.0.17-beta\n    - Added Tensor extension compatibility\n    - Migrated to new Tensor library namespace\n    - Anomaly detector predictions now categorical\n    - Clusterers now predict categorical cluster labels\n    - Added extracting data section to docs\n    - Added code metrics\n    - Added training and inference sections to the docs\n    - Decision tree rules method now outputs a string\n    - Added drop row and column methods to dataset interface\n    - Dataset row() method is now sample()\n\n- 0.0.16-beta\n    - Radius Neighbors allows user-definable anomaly class\n    - Added KNN Imputer\n    - Added Random Hot Deck Imputer\n    - Missing Data Imputer now handles NaNs by default\n    - Added NaN safe Euclidean distance kernel\n    - Added Gower distance kernel\n    - Added Hamming distance kernel\n    - Dataset now requires homogeneous feature columns\n    - KNN now compatible with categorical features\n    - Added transform column method to dataset object\n    - Added describe method to dataset object\n    - Added describe labels method to Labeled dataset\n    - Added deduplicate method to dataset object\n    - Added unzip static factory for Labeled datasets from data table\n    - Changed the order of t-SNE hyper-parameters\n    - Added global transpose array helper function\n    - Renamed label key to classes in Multiclass Breakdown report\n    - Changed order of Gradient Boost and AdaBoost hyper-parameters\n    - Changed order of Loda hyper-parameters\n    - Added asString method to the Data Type helper class\n    - Added check for NaN labels in Labeled dataset\n    - Changed namespace of Data Type helper\n    - Numeric String Converter now handles NaN strings\n    - Added predict probabilities of a single sample method\n    - Added rank single sample trait\n\n- 0.0.15-beta\n    - Added Gaussian MLE anomaly detector\n    - Added early stopping window to Gradient Descent-based Learners\n    - Changed early stopping behavior of MLP-based estimators\n    - Added predict single sample method to Learner interface\n    - Changed method signature of random subset without replacement\n    - Changed K Means default max iterations\n    - Robust Z-Score now uses weighted combination of scores\n    - Cross validators now stratify dataset automatically\n    - Changed default k in K Fold validator\n    - Changed order of Loda hyperparameters\n    - Changed hyperparameter order of KNN-based learners\n    - Added method to return categories from One Hot Encoder\n    - Removed Lottery and Blurry Percentile guessing strategy\n    - Added Percentile guessing strategy\n    - Added shrinkage parameter to Wild Guess strategy\n    - Added additional methods to random Strategies\n    - Renamed Popularity Contest strategy to Prior\n    - Datasets now inherit from abstract parent Dataset class\n    - Removed Dataset interface\n    - Neural net parameter update in Layer instead of Optimizer\n    - Changed order of distance-based clusterer hyperparameters\n    - Improved cluster radius estimation in Mean Shift\n    - Naive Bayes now adaptive to new class labels\n    - Changed order of neural network learner hyperparameters\n    - Added safety switch to AdaBoost if weak learner worse than random\n    - Added min change early stopping to AdaBoost\n    - Added Patreon funding support\n\n- 0.0.14-beta\n    - Added feature importances to Gradient Boost\n    - Added progress monitoring to Gradient Boost w/ early stop\n    - Added Spatial and Decision tree interface\n    - Mean Shift compatible with Spatial trees\n    - K-d Neighbors base spatial tree configurable\n    - Radius Neighbors now uses base spatial tree\n    - Local Outlier Factor interchangeable base search tree\n    - DBSCAN now uses any Spatial tree for range searches\n    - CART uses downsampling on continuous features\n    - LOF and Isolation Forest contamination off by default\n    - Embed method now returns an array instead of dataset\n    - Fixed issue with Dataset partitioning\n    - Renamed Coordinate node to Hypercube\n    - KNN default k is now 5 instead of 3\n    - CART can now print a text representation of the decision rules\n    - Removed Local Outlier Factor brute force version\n    - Changed namespace of trees to Graph/Trees\n    - CART impurity tolerances are now hardcoded\n    - Changed order of CART hyperparameters\n    - Added Extra Tree base implementation\n    - Extra Tree splits are now unbiased\n    - Extra Tree Classifier now minimizes entropy\n    - Reduced the memory footprint of Binary Nodes\n    - Gradient Boost shrinkage bounded between 0 and 1\n    - Added random subset without replacement to dataset API\n    - Changed order of Gradient Boost hyperparameters\n    - Changed order of MLP hyperparameters\n    - Ranking interface is now a general interface\n    - Changed default t-SNE minimum gradient\n\n- 0.0.13-beta\n    - Added documentation site\n    - Added Regression and Classification Loss interfaces\n    - Robust Z-Score is now a Ranking anomaly detector\n    - Loda now defaults to auto detect bin count\n    - Removed tolerance param from Gradient Boost and AdaBoost\n    - Screen logger timestamp format now configurable\n    - Dropped Persistable contract between SVM-based learners\n    - Random Forest feature importances now serial\n    - Removed Robust Z-Score tolerance parameter\n    - Added slice method to Dataset API\n    - Loda now performs density estimation on the fly\n    - Transform labels now returns self for method chaining\n\n- 0.0.12-beta\n    - Added AdaMax neural network Optimizer\n    - Added Parallel interface for multiprocessing\n    - Added Backend processing interface\n    - Added Amp parallel and Serial processing Backends\n    - Random Forest uses parallel processing\n    - Added CPU helper and core auto detection\n    - Committee Machine is now a meta estimator\n    - Committee Machine now Parallel and Verbose\n    - Bootstrap Aggregator uses multiple processes\n    - Grid Search now trains in parallel\n    - K Fold, Leave P Out, and Monte Carlo validators now Parallel\n    - Added momentum to Batch Norm moving averages\n    - Custom Batch Norm and PReLU parameter initialization\n    - Added custom bias initialization to Dense layer\n    - Output layers now accept custom initializers\n    - Added Constant neural network parameter initializer\n    - Removed Exponential neural network Cost Function\n    - Filesystem save history is now either on or off\n    - Removed save history from Redis DB Persister\n    - Removed Model Orchestra meta-estimator\n    - Grid Search automatically retrains base estimator\n    - Added neural net Parameter namespace and interface\n    - Changed order of Loda hyperparameters\n    - Replaced F1 Score with F Beta metric\n    - Removed ISRU and Gaussian activation functions\n    - Fixed SELU derivative computation\n    - Changed adaptive optimizer default decay parameters\n    - Changed default learning rate of Stochastic Optimizer\n    - Added SMAPE (Symmetric MAPE) regression metric\n    - Added MAPE to Residual Analysis report\n    - Fixed MSLE computation in Residual Analysis report\n    - Renamed RMSError Metric to RMSE\n    - Embedders no longer implement Estimator interface\n    - Added error statistics to Residual Analysis report\n\n- 0.0.11-beta\n    - K Means now uses mini batch GD instead of SGD\n    - K Means in now an Online learner\n    - Added Adjusted Rand Index clustering metric\n    - Added Seeder Interface\n    - Added Random, K-MC2, and Plus Plus seeders\n    - Accelerated Mean Shift with Ball Tree\n    - Added radius estimation to Mean Shift\n    - K Means and Mean Shift now implement Probabilistic\n    - Gaussian Mixture now supports seeders\n    - Changed order of K Means hyperparameters\n    - Moved Ranking interface to anomaly detector namespace\n    - N-gram Tokenizer now outputs ranges of word tokens\n    - Changed default Fuzzy C Means hyper-parameters\n    - Added spatial partitioning to Dataset API\n    - Added Image Resizer transformer\n    - Image Vectorizer no longer resizes images\n    - Fixed adaptive optimizer bug upon binary unserialization\n    - Removed Quartile Standardizer\n    - Optimized Image Vectorizer using bitwise operations\n    - Pipeline is now more verbose\n\n- 0.0.10-beta\n    - Added Loda online anomaly detector\n    - Added Radius Neighbors classifier and regressor\n    - Added fast k-d LOF anomaly detector\n    - Added base Ball Tree implementation\n    - Added Ranking interface\n    - Changed Manifold namespace to Embedders\n    - Isolation Forest and LOF are now Ranking\n    - K Means is now Verbose\n    - Accelerated DBSCAN with Ball Tree\n    - Added upper bound to contamination hyperparameter\n    - Changed hyper-parameter order of Isolation Forest\n    - Optimized Interval Discretizer transformer\n    - K Means is no longer Online\n    - Removed Sign function\n    - Added Binary Tree interface\n    - Added bin count heuristic to Loda\n    - Changed order of k-d neighbors hyperparameters\n    - Removed Hamming distance kernel\n\n- 0.0.9-beta\n    - Added transform labels method to Labeled Dataset\n    - Added Data Type helper\n    - Pipeline and Persistent Model are now Probabilistic\n    - Added stack method to dataset API\n    - Changed merge method on dataset to append and prepend\n    - Implemented specifications\n    - Added data type compatibility for estimators\n    - Added compatibility method to validation metrics\n    - Added estimator compatibility to reports\n    - Added trained method to learner API\n    - Added fitted method to Stateful transformer API\n    - Changed ordinal of integer encoded data types\n    - Added Adaptive optimizer interface\n    - Changed Transformer transform API\n    - Removed prompt method from Persistent Model\n    - Removed JsonSerializable from Dataset Interface\n\n- 0.0.8-alpha\n    - Added Model Orchestra meta estimator\n    - Added Stop Word Filter transformer\n    - Added document frequency smoothing to TF-IDF Transformer\n    - Added Uniform neural net weight initializer\n    - Improved Gaussian Mixture numerical stability\n    - Fixed missing probabilities in Classification Tree\n    - Removed MetaEstimator interface\n    - Added model Wrapper interface\n    - AdaBoost is now probabilistic\n    - Added Constant guessing strategy\n    - Added N-Gram word tokenizer\n    - Added Skip-Gram word tokenizer\n    - Changed FCM and K Means default max epochs\n    - Added zip method to Labeled dataset\n    - Removed stop word filter from Word Count Vectorizer\n    - Changed order of t-SNE hyper-parameters\n    - Grid search now has automatic default Metric\n    - Base k-D Tree now uses highest variance splits\n    - Renamed Raw Pixel Encoder to Image Vectorizer\n\n- 0.0.7-alpha\n    - Added Support Vector Machine classifier and regressor\n    - Added One Class SVM anomaly detector\n    - Added Verbose interface for logging\n    - Added Linear Discriminant Analysis (LDA) transformer\n    - Manifold learners are now considered Estimators\n    - Transformers can now transform labels\n    - Added Cyclic neural net Optimizer\n    - Added k-d neighbors search with pruning\n    - Added post pruning to CART estimators\n    - Estimators with explicit loss functions are now Verbose\n    - Grid Search: Added option to retrain best model on full dataset\n    - Filesystem Persister now keeps backups of latest models\n    - Added loading backup models to Persister API\n    - Added PSR-3 compatible screen logger\n    - Grid Search is now Verbose\n    - t-SNE embedder is now Verbose\n    - Added Serializer interface\n    - Added Native and Binary serializers\n    - Fixed Naive Bayes reset category counts during partial train\n    - Pipeline and Persistent Model are now Verbose\n    - Classification and Regression trees now Verbose\n    - Random Forest can now return feature importances\n    - Gradient Boost now accepts base and booster estimators\n    - Blurry Median strategy is now Blurry Percentile\n    - Added Mean strategy\n    - Removed dataset save and load methods\n    - Subsumed Extractor api into Transformer\n    - Removed Concentration metric\n    - Changed Metric and Report API\n    - Added Text Normalizer transformer\n    - Added weighted predictions to KNN estimators\n    - Added HTML Stripper transformer\n\n- 0.0.6-alpha\n    - Added Gradient Boost regressor\n    - Added t-SNE embedder\n    - AdaBoost now uses SAMME multiclass algorithm\n    - Added Redis persister\n    - Added Max Absolute Scaler\n    - Added Principal Component Analysis transformer\n    - Pipeline is now Online and has elastic option\n    - Added Elastic interface for transformers\n    - Z Scale Standardizer is now Elastic\n    - Min Max Normalizer is now Elastic\n    - TF-IDF Transformer is now Elastic\n    - Added Huber Loss cost function\n    - Added Swiss Roll generator\n    - Moved Generators to the Datasets directory\n    - Added Persister interface for Persistable objects\n    - Added overwrite protection to Persistent Model meta estimator\n    - Multiclass Breakdown report now breaks down user-defined classes\n    - Renamed restore method to load on Datasets and Persisters\n    - Random Forest now accepts a base estimator instance\n    - CARTs now use max features heuristic by default\n    - Added build/quick factory methods to Datasets\n    - Added Interval Discretizer transformer\n    - GaussianNB and Naive Bayes now accept class prior probabilities\n    - Removed Image Patch Descriptor\n    - Added Learner interface for trainable estimators\n    - Added smart cluster initialization to K Means and Fuzzy C Means\n    - Circle and Half Moon generators now generate Labeled datasets\n    - Gaussian Mixture now uses K Means initialization\n    - Removed Isolation Tree anomaly detector\n\n- 0.0.5-alpha\n    - Added Gaussian Mixture clusterer\n    - Added Batch Norm hidden layer\n    - Added PReLU hidden layer\n    - Added Relative Entropy cost function to nn\n    - Added random weighted subset to datasets\n    - Committee Machine classifier only and added expert influence\n    - Added type method to Estimator API\n    - Removed classifier, detector, clusterer, regressor interfaces\n    - Added epsilon smoothing to Gaussian Naive Bayes\n    - Added option to fit priors in Naive Bayes classifiers\n    - Added Jaccard distance kernel\n    - Fixed Hamming distance calculation\n    - Added Alpha Dropout layer\n    - Fixed divide by 0 in Cross Entropy cost function\n    - Added scaling parameter to Exponential cost function\n    - Added Image Patch Descriptor extractor\n    - Added Texture Histogram descriptor\n    - Added Average Color descriptor\n    - Removed parameters from Dropout and Alpha Dropout layers\n    - Added option to remove biases in Dense and Placeholder1D layers\n    - Optimized Dataset objects\n    - Optimized matrix and vector operations\n    - Added grid params to Param helper\n    - Added Gaussian RBF activation function\n    - Renamed Quadratic cost function to Least Squares\n    - Added option to stratify dataset in Hold Out and K Fold\n    - Added Monte Carlo cross validator\n    - Implemented noise as layer instead of activation function\n    - Removed Identity activation function\n    - Added Xavier 1 and 2 initializers\n    - Added He initializer\n    - Added Le Cun initializer\n    - Added Normal (Gaussian) initializer\n\n- 0.0.4-alpha\n    - Added Dropout hidden layer\n    - Added K-d Neighbors classifier and regressor\n    - Added Extra Tree Regressor\n    - Added Adaline regressor\n    - Added sorting by column to Dataset\n    - Added sort by label to Labeled Dataset\n    - Added appending and prepending to Dataset\n    - Added Dataset Generators\n    - Added Noisy ReLU activation function\n    - Fixed bug in dataset stratified fold\n    - Added stop word filter to Word Count Vectorizer\n    - Added centering and scaling options for standardizers\n    - Added min dimensionality estimation on random projectors\n    - Added Gaussian Random Projector\n    - Removed Ellipsoidal distance kernel\n    - Added Thresholded ReLU activation function\n    - Changed API of Raw Pixel Encoder\n\n- 0.0.3-alpha\n    - Added Extra Tree classifier\n    - Random Forest now supports Extra Trees\n    - New Decision Tree implementation\n    - Added Canberra distance kernel\n    - Committee Machine is now a Meta Estimator Ensemble\n    - Added Bootstrap Aggregator Meta Estimator Ensemble\n    - Added Gaussian Naive Bayes\n    - Naive Bayes classifiers are now Online learners\n    - Added tolerance to Robust Z-Score detector\n    - Added Concentration clustering metric (Calinski Harabasz)\n\n- 0.0.2-alpha\n    - Added Anomaly Detection\n    - New Neural Net implementation\n    - Added static analysis\n    - Added Travis CI configuration\n\n- 0.0.1-alpha\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.0419921875,
          "content": "# Contributing Guidelines\nThank you for considering a contribution to Rubix ML. We believe that our contributors play the most important role in bringing powerful machine learning tools to the PHP language. Please read over the following guidelines so that we can continue to provide high quality machine learning tools that our users love.\n\n### Pull Request Checklist\nHere are a few things to check off before sending in a pull request ...\n\n- Your changes pass [static analysis](#static-analysis)\n- All [unit tests](#unit-testing) pass\n- Your changes are consistent with our [coding style](#coding-style)\n- Do your changes require updates to the documentation?\n- Does an entry to the CHANGELOG need to be added?\n- Have you read and agreed to our [CLA](#contributor-license-agreement)?\n\n> New to pull requests? Github has a great [howto](https://help.github.com/articles/about-pull-requests/) to get you started.\n\n### Code Review\nWe use pull requests as an opportunity to communicate with our contributors. Oftentimes, we can improve code readability, find bugs, and make optimizations during the code review process. Every pull request must have the approval from at least one core engineer before merging into the main codebase.\n\n### Contributor License Agreement\nTo ensure that project maintainers have the legal rights to license and distribute your code contributions, we ask that every contributor sign our [contributor license agreement](https://github.com/RubixML/Signatures/blob/master/CLA.md) (CLA). If you are a first-time contributor, you will automatically receive instructions on how to sign the agreement from our CLA bot with your first pull request.\n\n## Static Analysis\nStatic code analysis is an integral part of our overall testing and quality assurance strategy. Static analysis allows us to catch bugs before they make it into the codebase. Therefore, it is important that your updates pass static analysis at the level set by the project lead.\n\nTo run static analysis:\n```sh\n$ composer analyze\n```\n  \n## Unit Testing\nNew code will usually require an accompanying unit test. What to test depends on the type of change you are making. See the individual unit testing guidelines below.\n\nTo run the unit tests:\n```sh\n$ composer test\n```\n\n### General Object Testing\nLimiting tests to public methods is usually sufficient. It is also important to test for edge cases such as mistakes that the user might make to ensure they are handled properly.\n\n### Bugfix Testing\nBugs usually indicate an area of the code that has not been properly tested yet. When submitting a bug fix, please include a passing test that would have reproduced the bug prior to your changes.\n\n### Learner Testing\nWe use a unique end-to-end testing schema for all learners that involves generating a controlled training and testing set, training the learner, and then validating its predictions using an industry-standard scoring metric. The reason for this type of test is to be able to confirm that the learner offers the ability to generalize its training to new data. Since not all learners are the same, choose a dataset and minimum validation score that is appropriate for a real world use case.\n\n> **Note:** Be sure to seed the random number generator with a known constant in your tests to make them deterministic.\n\n## Coding Style\nRubix ML follows the PSR-2 coding style with additional rules to keep the codebase clean and reduce cognitive load for our developers. A consistent codebase allows for quicker debugging and generally a more pleasant developer experience.\n\nTo run the style checker:\n```sh\n$ composer check\n```\n\nTo run the automatic style fixer:\n```sh\n$ composer fix\n```\n\n### Naming\nUse accurate, descriptive, consistent, and concise nomenclature. A variable name should only describe the data that the variable contains. Prefer verbs for function and method names unless in the case of an accessor/getter function where the 'get' prefix may be dropped. Prioritize full names over abbreviations unless in the case where the abbreviation is the more common usage.\n\n#### Domain-driven Design\nWe employ the Domain Driven Design (DDD) methodology in our naming and design. The goal is to allow developers and domain experts to be able to use the same language when referring to concepts in our codebase. Therefore, it is crucial that your naming reflects the domain that your abstraction operates within.\n\n### Object Mutability\nObjects implemented in Rubix ML have a mutability policy of *generally* immutable which means properties are private or protected and state must be mutated only through a well-defined public API.\n\n### Comments\nPlease provide a docblock for every class, property, method, constant, and function that includes a brief description of what the thing does. Inline comments are strongly discouraged - instead use expressive syntax and abstractions to articulate your intent in code.\n\n### Anonymous Classes and Functions\nDue to a limitation in PHP that requires objects and functions to be named in order to be deserialized and since the library relies on serialization for persistence, we do not use anonymous classes or functions in our codebase. Instead, create a named class or function.\n\n## Benchmarks\nPerformance can be critical for some machine learning projects. To ensure that our users have the best experience, we benchmark every learner and use the information as a baseline to make optimizations. When contributing a new learner or transformer please include a benchmark.\n\nTo run the benchmarking suite:\n```sh\n$ composer benchmark\n```\n\n## Compiling the Docs\nWe use [Mkdocs](https://www.mkdocs.org) and [Mike](https://github.com/jimporter/mike) to compile the markdown documents in the `docs` folder to a versioned static document site.\n\nMake sure to have the following Python dependencies installed.\n\n```sh\n$ pip install mike mkdocs mkdocs-material mkdocs-git-revision-date-localized-plugin\n```\n\nTo serve the documentation site locally for development you can run the following commands from the terminal. Then, you'll be able to view the docs by navigating to `http://127.0.0.1:8000` in your browser.\n\n```sh\n$ mike deploy 'VERSION'\n\n$ mike serve\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0869140625,
          "content": "MIT License\n\nCopyright (c) 2023 The Rubix ML Community\nCopyright (c) 2023 Andrew DalPino\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.998046875,
          "content": "# Rubix ML\n\n[![PHP from Packagist](https://img.shields.io/packagist/php-v/rubix/ml.svg?style=flat&colorB=8892BF)](https://www.php.net/) [![Latest Stable Version](https://img.shields.io/packagist/v/rubix/ml.svg?style=flat&colorB=orange)](https://packagist.org/packages/rubix/ml) [![Downloads from Packagist](https://img.shields.io/packagist/dt/rubix/ml.svg?style=flat&colorB=red)](https://packagist.org/packages/rubix/ml) [![Code Checks](https://github.com/RubixML/ML/actions/workflows/ci.yml/badge.svg)](https://github.com/RubixML/ML/actions/workflows/ci.yml) [![GitHub](https://img.shields.io/github/license/RubixML/RubixML)](https://github.com/RubixML/ML/blob/master/LICENSE.md)\n\nA high-level machine learning and deep learning library for the [PHP](https://php.net) language.\n\n- **Developer-friendly** API is delightful to use\n- **40+** supervised and unsupervised learning algorithms\n- **Support** for ETL, preprocessing, and cross-validation\n- **Open source** and free to use commercially\n\n## Installation\nInstall Rubix ML into your project using [Composer](https://getcomposer.org/):\n```sh\n$ composer require rubix/ml\n```\n\n### Requirements\n- [PHP](https://php.net/manual/en/install.php) 7.4 or above\n\n#### Recommended\n- [Tensor extension](https://github.com/RubixML/Tensor) for fast Matrix/Vector computing\n\n#### Optional\n\n- [GD extension](https://php.net/manual/en/book.image.php) for image support\n- [Mbstring extension](https://www.php.net/manual/en/book.mbstring.php) for fast multibyte string manipulation\n- [SVM extension](https://php.net/manual/en/book.svm.php) for Support Vector Machine engine (libsvm)\n- [PDO extension](https://www.php.net/manual/en/book.pdo.php) for relational database support\n- [GraphViz](https://graphviz.org/) for graph visualization\n\n## Documentation\nRead the latest docs [here](https://docs.rubixml.com).\n\n## What is Rubix ML?\nRubix ML is a free open-source machine learning (ML) library that allows you to build programs that learn from your data using the PHP language. We provide tools for the entire machine learning life cycle from ETL to training, cross-validation, and production with over 40 supervised and unsupervised learning algorithms. In addition, we provide tutorials and other educational content to help you get started using ML in your projects.\n\n## Getting Started\nIf you are new to machine learning, we recommend taking a look at the [What is Machine Learning?](https://docs.rubixml.com/latest/what-is-machine-learning.html) section to get started. If you are already familiar with basic ML concepts, you can browse the [basic introduction](https://docs.rubixml.com/latest/basic-introduction.html) for a brief look at a typical Rubix ML project. From there, you can browse the official tutorials below which range from beginner to advanced skill level.\n\n### Tutorials & Example Projects\nCheck out these example projects using the Rubix ML library. Many come with instructions and a pre-cleaned dataset.\n\n- [CIFAR-10 Image Recognizer](https://github.com/RubixML/CIFAR-10)\n- [Color Clusterer](https://github.com/RubixML/Colors)\n- [Credit Default Risk Predictor](https://github.com/RubixML/Credit)\n- [Customer Churn Predictor](https://github.com/RubixML/Churn)\n- [Divorce Predictor](https://github.com/RubixML/Divorce)\n- [DNA Taxonomer](https://github.com/RubixML/DNA)\n- [Dota 2 Game Outcome Predictor](https://github.com/RubixML/Dota2)\n- [Human Activity Recognizer](https://github.com/RubixML/HAR)\n- [Housing Price Predictor](https://github.com/RubixML/Housing)\n- [Iris Flower Classifier](https://github.com/RubixML/Iris)\n- [MNIST Handwritten Digit Recognizer](https://github.com/RubixML/MNIST)\n- [Text Sentiment Analyzer](https://github.com/RubixML/Sentiment)\n- [Titanic Survival Predictor](https://github.com/Jenutka/titanic_php)\n\n## Interact With The Community\n\n- [Join Our Telegram Channel](https://t.me/RubixML)\n\n## Contributing\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.\n\n## License\nThe code is licensed [MIT](LICENSE) and the documentation is licensed [CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/).\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 4.177734375,
          "content": "{\n    \"name\": \"rubix/ml\",\n    \"type\": \"library\",\n    \"description\": \"A high-level machine learning and deep learning library for the PHP language.\",\n    \"homepage\": \"https://rubixml.com\",\n    \"license\": \"MIT\",\n    \"readme\": \"README.md\",\n    \"keywords\": [\n        \"adaboost\", \"ai\", \"algorithm\", \"analytics\", \"anomaly detection\", \"artificial intelligence\",\n        \"cart\", \"classification\", \"classifier\", \"clustering\", \"cross validation\", \"dataset\",\n        \"data science\", \"data mining\", \"dbscan\", \"deep learning\", \"dimensionality reduction\",\n        \"ensemble\", \"estimator\", \"etl\", \"feature extraction\", \"feature selection\", \"feature importance\",\n        \"gaussian mixture\", \"gbm\", \"gmm\", \"gradient boost\", \"grid search\", \"image recognition\",\n        \"imputation\", \"inference\", \"isolation forest\", \"k-means\", \"kmeans\", \"k-nearest neighbors\",\n        \"knn\", \"linear regression\", \"loda\", \"local outlier factor\", \"lof\", \"logistic regression\",\n        \"machine learning\", \"manifold learning\", \"mean shift\", \"ml\", \"mlp\", \"multilayer perceptron\",\n        \"naive bayes\", \"neural network\", \"natural language processing\", \"nearest neighbors\", \"nlp\",\n        \"outlier detection\", \"php\", \"php ai\", \"php machine learning\", \"php ml\", \"predictive modeling\",\n        \"prediction\", \"random forest\", \"ranking\", \"regression\", \"regressor\", \"recommendation\", \"ridge\",\n        \"rubix\", \"rubixml\", \"rubix ml\", \"softmax\", \"supervised learning\", \"support vector machine\",\n        \"svm\", \"text mining\", \"tf-idf\", \"tf idf\", \"t-sne\", \"tsne\", \"unsupervised learning\"\n    ],\n    \"authors\": [\n        { \n            \"name\": \"Andrew DalPino\",\n            \"homepage\": \"https://github.com/andrewdalpino\"\n        },\n        {\n            \"name\": \"Contributors\",\n            \"homepage\": \"https://github.com/RubixML/ML/graphs/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.4\",\n        \"ext-json\": \"*\",\n        \"amphp/parallel\": \"^1.3\",\n        \"andrewdalpino/okbloomer\": \"^1.0\",\n        \"psr/log\": \"^1.1|^2.0|^3.0\",\n        \"rubix/tensor\": \"^3.0\",\n        \"symfony/polyfill-mbstring\": \"^1.0\",\n        \"symfony/polyfill-php80\": \"^1.17\",\n        \"symfony/polyfill-php82\": \"^1.27\",\n        \"symfony/polyfill-php83\": \"^1.27\",\n        \"wamania/php-stemmer\": \"^3.0\"\n    },\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"^3.0\",\n        \"phpbench/phpbench\": \"^1.0\",\n        \"phpstan/extension-installer\": \"^1.0\",\n        \"phpstan/phpstan\": \"^1.0\",\n        \"phpstan/phpstan-phpunit\": \"^1.0\",\n        \"phpunit/phpunit\": \"^9.0\"\n    },\n    \"suggest\": {\n        \"ext-tensor\": \"For fast Matrix/Vector computing\",\n        \"ext-gd\": \"For image support\",\n        \"ext-mbstring\": \"For fast multibyte string manipulation\",\n        \"ext-svm\": \"For Support Vector Machine engine (libsvm)\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Rubix\\\\ML\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/constants.php\",\n            \"src/functions.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Rubix\\\\ML\\\\Tests\\\\\": \"tests/\",\n            \"Rubix\\\\ML\\\\Benchmarks\\\\\": \"benchmarks/\"\n        }\n    },\n    \"scripts\": {\n        \"build\": [\n            \"@composer install\",\n            \"@analyze\",\n            \"@test\",\n            \"@check\"\n        ],\n        \"analyze\": \"phpstan analyse -c phpstan.neon --memory-limit 1G\",\n        \"benchmark\": \"phpbench run --report=aggregate\",\n        \"check\": [\n            \"@putenv PHP_CS_FIXER_IGNORE_ENV=1\",\n            \"php-cs-fixer fix --config=.php-cs-fixer.dist.php -v --dry-run --using-cache=no\"\n        ],\n        \"fix\": \"php-cs-fixer fix --config=.php-cs-fixer.dist.php\",\n        \"test\": \"phpunit\"\n    },\n    \"config\": {\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true,\n        \"process-timeout\": 3000,\n        \"allow-plugins\": {\n            \"phpstan/extension-installer\": true\n        }\n    },\n    \"funding\": [\n        {\n            \"type\": \"github\",\n            \"url\": \"https://github.com/sponsors/andrewdalpino\"\n        }\n    ],\n    \"support\": {\n        \"docs\": \"https://docs.rubixml.com\",\n        \"issues\": \"https://github.com/RubixML/ML/issues\",\n        \"source\": \"https://github.com/RubixML/ML\",\n        \"chat\": \"https://t.me/RubixML\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 14.0439453125,
          "content": "site_name: 'Rubix ML'\n\ntheme:\n  name: material\n  logo: images/app-icon-medium.png\n  favicon: images/app-icon-small.png\n  icon:\n    repo: fontawesome/brands/github\n  features:\n    - navigation.tabs\n\nnav:\n  - Home: https://rubixml.com\n  - Getting Started:\n    - Welcome: index.md\n    - What is Machine Learning?: what-is-machine-learning.md\n    - Installation: installation.md\n    - Basic Introduction: basic-introduction.md\n  - User Guide:\n    - Representing Your Data: representing-your-data.md\n    - Extracting Data: extracting-data.md\n    - Preprocessing: preprocessing.md\n    - Exploring Data: exploring-data.md\n    - Choosing an Estimator: choosing-an-estimator.md\n    - Training: training.md\n    - Inference: inference.md\n    - Cross-validation: cross-validation.md\n    - Hyper-parameter Tuning: hyper-parameter-tuning.md\n    - Model Ensembles: model-ensembles.md\n    - Model Persistence: model-persistence.md\n  - API Reference:\n    - Fundamental Interfaces:\n      - Estimator: estimator.md\n      - Learner: learner.md\n      - Online: online.md\n      - Parallel: parallel.md\n      - Persistable: persistable.md\n      - Probabilistic: probabilistic.md\n      - Ranks Features: ranks-features.md\n      - Scoring: scoring.md\n      - Verbose: verbose.md\n    - Extractors:\n      - API Reference: extractors/api.md\n      - Column Filter: extractors/column-filter.md\n      - Column Picker: extractors/column-picker.md\n      - Concatenator: extractors/concatenator.md\n      - CSV: extractors/csv.md\n      - Deduplicator: extractors/deduplicator.md\n      - NDJSON: extractors/ndjson.md\n      - SQL Table: extractors/sql-table.md\n    - Dataset Objects:\n      - API Reference: datasets/api.md\n      - Generators:\n        - API Reference: datasets/generators/api.md\n        - Agglomerate: datasets/generators/agglomerate.md\n        - Blob: datasets/generators/blob.md\n        - Circle: datasets/generators/circle.md\n        - Half Moon: datasets/generators/half-moon.md\n        - Hyperplane: datasets/generators/hyperplane.md\n        - Swiss Roll: datasets/generators/swiss-roll.md\n      - Labeled: datasets/labeled.md\n      - Unlabeled: datasets/unlabeled.md\n    - Classifiers:\n      - AdaBoost: classifiers/adaboost.md\n      - Classification Tree: classifiers/classification-tree.md\n      - Extra Tree Classifier: classifiers/extra-tree-classifier.md\n      - Gaussian Naive Bayes: classifiers/gaussian-naive-bayes.md\n      - K-d Neighbors: classifiers/kd-neighbors.md\n      - K Nearest Neighbors: classifiers/k-nearest-neighbors.md\n      - Logistic Regression: classifiers/logistic-regression.md\n      - Logit Boost: classifiers/logit-boost.md\n      - Multilayer Perceptron: classifiers/multilayer-perceptron.md\n      - Naive Bayes: classifiers/naive-bayes.md\n      - One Vs Rest: classifiers/one-vs-rest.md\n      - Radius Neighbors: classifiers/radius-neighbors.md\n      - Random Forest: classifiers/random-forest.md\n      - Softmax Classifier: classifiers/softmax-classifier.md\n      - SVC: classifiers/svc.md\n    - Regressors:\n      - Adaline: regressors/adaline.md\n      - Extra Tree Regressor: regressors/extra-tree-regressor.md\n      - Gradient Boost: regressors/gradient-boost.md\n      - K-d Neighbors Regressor: regressors/kd-neighbors-regressor.md\n      - KNN Regressor: regressors/knn-regressor.md\n      - MLP Regressor: regressors/mlp-regressor.md\n      - Radius Neighbors Regressor: regressors/radius-neighbors-regressor.md\n      - Regression Tree: regressors/regression-tree.md\n      - Ridge: regressors/ridge.md\n      - SVR: regressors/svr.md\n    - Clusterers:\n      - Seeders:\n        - K-MC2: clusterers/seeders/k-mc2.md\n        - Plus Plus: clusterers/seeders/plus-plus.md\n        - Preset: clusterers/seeders/preset.md\n        - Random: clusterers/seeders/random.md\n      - DBSCAN: clusterers/dbscan.md\n      - Fuzzy C Means: clusterers/fuzzy-c-means.md\n      - Gaussian Mixture: clusterers/gaussian-mixture.md\n      - K Means: clusterers/k-means.md\n      - Mean Shift: clusterers/mean-shift.md\n    - Anomaly Detectors:\n      - Gaussian MLE: anomaly-detectors/gaussian-mle.md\n      - Isolation Forest: anomaly-detectors/isolation-forest.md\n      - Loda: anomaly-detectors/loda.md\n      - Local Outlier Factor: anomaly-detectors/local-outlier-factor.md\n      - One Class SVM: anomaly-detectors/one-class-svm.md\n      - Robust Z-Score: anomaly-detectors/robust-z-score.md\n    - Meta Estimators:\n      - Bootstrap Aggregator: bootstrap-aggregator.md\n      - Committee Machine: committee-machine.md\n      - Grid Search: grid-search.md\n      - Persistent Model: persistent-model.md\n      - Pipeline: pipeline.md\n    - Transformers:\n      - API Reference: transformers/api.md\n      - Standardization and Normalization:\n        - L1 Normalizer: transformers/l1-normalizer.md\n        - L2 Normalizer: transformers/l2-normalizer.md\n        - Max Absolute Scaler: transformers/max-absolute-scaler.md\n        - Min Max Normalizer: transformers/min-max-normalizer.md\n        - Robust Standardizer: transformers/robust-standardizer.md\n        - Z Scale Standardizer: transformers/z-scale-standardizer.md\n      - Dimensionality Reduction:\n        - Gaussian Random Projector: transformers/gaussian-random-projector.md\n        - Linear Discriminant Analysis: transformers/linear-discriminant-analysis.md\n        - Principal Component Analysis: transformers/principal-component-analysis.md\n        - Sparse Random Projector: transformers/sparse-random-projector.md\n        - Truncated SVD: transformers/truncated-svd.md\n        - t-SNE: transformers/t-sne.md\n      - Feature Conversion:\n        - Interval Discretizer: transformers/interval-discretizer.md\n        - One Hot Encoder: transformers/one-hot-encoder.md\n        - Numeric String Converter: transformers/numeric-string-converter.md\n        - Boolean Converter: transformers/boolean-converter.md\n      - Feature Expansion:\n        - Polynomial Expander: transformers/polynomial-expander.md\n      - Imputation:\n        - Hot Deck Imputer: transformers/hot-deck-imputer.md\n        - KNN Imputer: transformers/knn-imputer.md\n        - Missing Data Imputer: transformers/missing-data-imputer.md\n      - Natural Language:\n        - BM25 Transformer: transformers/bm25-transformer.md\n        - Regex Filter: transformers/regex-filter.md\n        - Text Normalizer: transformers/text-normalizer.md\n        - Multibyte Text Normalizer: transformers/multibyte-text-normalizer.md\n        - Stop Word Filter: transformers/stop-word-filter.md\n        - TF-IDF Transformer: transformers/tf-idf-transformer.md\n        - Token Hashing Vectorizer: transformers/token-hashing-vectorizer.md\n        - Word Count Vectorizer: transformers/word-count-vectorizer.md\n      - Images:\n        - Image Resizer: transformers/image-resizer.md\n        - Image Rotator: transformers/image-rotator.md\n        - Image Vectorizer: transformers/image-vectorizer.md\n      - Other:\n        - Lambda Function: transformers/lambda-function.md\n    - Neural Network:\n      - Hidden Layers:\n        - Activation: neural-network/hidden-layers/activation.md\n        - Batch Norm: neural-network/hidden-layers/batch-norm.md\n        - Dense: neural-network/hidden-layers/dense.md\n        - Dropout: neural-network/hidden-layers/dropout.md\n        - Noise: neural-network/hidden-layers/noise.md\n        - PReLU: neural-network/hidden-layers/prelu.md\n        - Swish: neural-network/hidden-layers/swish.md\n      - Activation Functions:\n        - ELU: neural-network/activation-functions/elu.md\n        - GELU: neural-network/activation-functions/gelu.md\n        - Hyperbolic Tangent: neural-network/activation-functions/hyperbolic-tangent.md\n        - Leaky ReLU: neural-network/activation-functions/leaky-relu.md\n        - ReLU: neural-network/activation-functions/relu.md\n        - SELU: neural-network/activation-functions/selu.md\n        - Sigmoid: neural-network/activation-functions/sigmoid.md\n        - Softmax: neural-network/activation-functions/softmax.md\n        - Soft Plus: neural-network/activation-functions/soft-plus.md\n        - Soft Sign: neural-network/activation-functions/softsign.md\n        - SiLU: neural-network/activation-functions/silu.md\n        - Thresholded ReLU: neural-network/activation-functions/thresholded-relu.md\n      - Cost Functions:\n        - Cross Entropy: neural-network/cost-functions/cross-entropy.md\n        - Huber Loss: neural-network/cost-functions/huber-loss.md\n        - Least Squares: neural-network/cost-functions/least-squares.md\n        - Relative Entropy: neural-network/cost-functions/relative-entropy.md\n      - Initializers:\n        - Constant: neural-network/initializers/constant.md\n        - He: neural-network/initializers/he.md\n        - LeCun: neural-network/initializers/lecun.md\n        - Normal: neural-network/initializers/normal.md\n        - Uniform: neural-network/initializers/uniform.md\n        - Xavier 1: neural-network/initializers/xavier-1.md\n        - Xavier 2: neural-network/initializers/xavier-2.md\n      - Optimizers:\n        - AdaGrad: neural-network/optimizers/adagrad.md\n        - Adam: neural-network/optimizers/adam.md\n        - AdaMax: neural-network/optimizers/adamax.md\n        - Cyclical: neural-network/optimizers/cyclical.md\n        - Momentum: neural-network/optimizers/momentum.md\n        - RMS Prop: neural-network/optimizers/rms-prop.md\n        - Step Decay: neural-network/optimizers/step-decay.md\n        - Stochastic: neural-network/optimizers/stochastic.md\n    - Graph:\n      - Trees:\n        - Ball Tree: graph/trees/ball-tree.md\n        - K-d Tree: graph/trees/k-d-tree.md\n        - Vantage Tree: graph/trees/vantage-tree.md\n    - Kernels:\n      - Distance:\n        - Canberra: kernels/distance/canberra.md\n        - Cosine: kernels/distance/cosine.md\n        - Diagonal: kernels/distance/diagonal.md\n        - Euclidean: kernels/distance/euclidean.md\n        - Gower: kernels/distance/gower.md\n        - Hamming: kernels/distance/hamming.md\n        - Jaccard: kernels/distance/jaccard.md\n        - Manhattan: kernels/distance/manhattan.md\n        - Minkowski: kernels/distance/minkowski.md\n        - Safe Euclidean: kernels/distance/safe-euclidean.md\n        - Sparse Cosine: kernels/distance/sparse-cosine.md\n      - SVM:\n        - Linear: kernels/svm/linear.md\n        - Polynomial: kernels/svm/polynomial.md\n        - RBF: kernels/svm/rbf.md\n        - Sigmoidal: kernels/svm/sigmoidal.md\n    - Cross Validation:\n      - Metrics:\n        - API Reference: cross-validation/metrics/api.md\n        - Accuracy: cross-validation/metrics/accuracy.md\n        - Brier Score: cross-validation/metrics/brier-score.md\n        - F Beta: cross-validation/metrics/f-beta.md\n        - Informedness: cross-validation/metrics/informedness.md\n        - MCC: cross-validation/metrics/mcc.md\n        - Mean Absolute Error: cross-validation/metrics/mean-absolute-error.md\n        - Mean Squared Error: cross-validation/metrics/mean-squared-error.md\n        - Median Absolute Error: cross-validation/metrics/median-absolute-error.md\n        - Probabilistic Accuracy: cross-validation/metrics/probabilistic-accuracy.md\n        - RMSE: cross-validation/metrics/rmse.md\n        - R Squared: cross-validation/metrics/r-squared.md\n        - SMAPE: cross-validation/metrics/smape.md\n        - Completeness: cross-validation/metrics/completeness.md\n        - Homogeneity: cross-validation/metrics/homogeneity.md\n        - Rand Index: cross-validation/metrics/rand-index.md\n        - Top K Accuracy: cross-validation/metrics/top-k-accuracy.md\n        - V Measure: cross-validation/metrics/v-measure.md\n      - Reports:\n        - API Reference: cross-validation/reports/api.md\n        - Aggregate Report: cross-validation/reports/aggregate-report.md\n        - Confusion Matrix: cross-validation/reports/confusion-matrix.md\n        - Contingency Table: cross-validation/reports/contingency-table.md\n        - Error Analysis: cross-validation/reports/error-analysis.md\n        - Multiclass Breakdown: cross-validation/reports/multiclass-breakdown.md\n      - Validators:\n        - API Reference: cross-validation/api.md\n        - Hold Out: cross-validation/hold-out.md\n        - K Fold: cross-validation/k-fold.md\n        - Leave P Out: cross-validation/leave-p-out.md\n        - Monte Carlo: cross-validation/monte-carlo.md\n    - Tokenizers:\n      - K-Skip-N-Gram: tokenizers/k-skip-n-gram.md\n      - N-Gram: tokenizers/n-gram.md\n      - Sentence: tokenizers/sentence.md\n      - Whitespace: tokenizers/whitespace.md\n      - Word: tokenizers/word.md\n      - Word Stemmer: tokenizers/word-stemmer.md\n    - Persisters:\n      - API Reference: persisters/api.md\n      - Filesystem: persisters/filesystem.md\n    - Serializers:\n      - API Reference: serializers/api.md\n      - Gzip Native: serializers/gzip-native.md\n      - Native: serializers/native.md\n      - RBX: serializers/rbx.md\n    - Loggers:\n      - Screen: loggers/screen.md\n    - Backends:\n      - Amp: backends/amp.md\n      - Serial: backends/serial.md\n    - Helpers:\n      - Params: helpers/params.md\n    - Strategies:\n      - Constant: strategies/constant.md\n      - K Most Frequent: strategies/k-most-frequent.md\n      - Mean: strategies/mean.md\n      - Percentile: strategies/percentile.md\n      - Prior: strategies/prior.md\n      - Wild Guess: strategies/wild-guess.md\n  - FAQ: faq.md\n\nextra:\n  version:\n    provider: mike\n  analytics:\n    provider: google\n    property: UA-136137674-1\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/RubixML\n    - icon: fontawesome/brands/telegram\n      link: https://t.me/RubixML\n\nuse_directory_urls: false\n\nplugins:\n  - search\n  - git-revision-date-localized:\n      type: date\n      enable_creation_date: true\n\nmarkdown_extensions:\n  - attr_list\n  - abbr\n  - admonition\n  - pymdownx.highlight:\n      extend_pygments_lang:\n        - name: php\n          lang: php\n          options:\n            startinline: true\n  - pymdownx.superfences\n  - pymdownx.arithmatex:\n      generic: true\n  - toc:\n      permalink: \"#\"\n  - footnotes\n\nextra_javascript:\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n  - js/custom.js\n\nextra_css:\n  - css/custom.css\n\nrepo_url: https://github.com/RubixML/ML\nsite_url: https://rubixml.com\nsite_description: 'A high-level machine learning and deep learning library for the PHP language.'\n\ncopyright: '&copy; 2022 The Rubix ML Community'\n"
        },
        {
          "name": "phpbench.json.dist",
          "type": "blob",
          "size": 0.1748046875,
          "content": "{\n    \"runner.bootstrap\": \"vendor/autoload.php\",\n    \"runner.path\": \"benchmarks\",\n    \"runner.progress\": \"blinken\",\n    \"runner.php_config\": {\n        \"memory_limit\": \"-1\"\n    }\n}"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.138671875,
          "content": "parameters:\n    level: 8\n    paths:\n        - 'src'\n        - 'tests'\n        - 'benchmarks'\n    excludePaths:\n        - src/Backends/Amp.php\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 2.4765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  backupGlobals=\"false\"\n  backupStaticAttributes=\"false\"\n  bootstrap=\"vendor/autoload.php\"\n  colors=\"true\"\n  convertErrorsToExceptions=\"true\"\n  convertNoticesToExceptions=\"true\"\n  convertWarningsToExceptions=\"true\"\n  forceCoversAnnotation=\"true\"\n  processIsolation=\"true\"\n  stopOnFailure=\"false\"\n  xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n>\n  <coverage processUncoveredFiles=\"true\">\n    <include>\n      <directory suffix=\".php\">src</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"Base\">\n      <directory>tests</directory>\n    </testsuite>\n    <testsuite name=\"Anomaly Detectors\">\n      <directory>tests/AnomalyDetectors</directory>\n    </testsuite>\n    <testsuite name=\"Backends\">\n      <directory>tests/Backends</directory>\n    </testsuite>\n    <testsuite name=\"Classifiers\">\n      <directory>tests/Classifiers</directory>\n    </testsuite>\n    <testsuite name=\"Clusterers\">\n      <directory>tests/Clusterers</directory>\n    </testsuite>\n    <testsuite name=\"Cross Validation\">\n      <directory>tests/CrossValidation</directory>\n    </testsuite>\n    <testsuite name=\"Datasets\">\n      <directory>tests/Datasets</directory>\n    </testsuite>\n    <testsuite name=\"Extractors\">\n      <directory>tests/Extractors</directory>\n    </testsuite>\n    <testsuite name=\"Graph\">\n      <directory>tests/Graph</directory>\n    </testsuite>\n    <testsuite name=\"Helpers\">\n      <directory>tests/Helpers</directory>\n    </testsuite>\n    <testsuite name=\"Kernels\">\n      <directory>tests/Kernels</directory>\n    </testsuite>\n    <testsuite name=\"Loggers\">\n      <directory>tests/Loggers</directory>\n    </testsuite>\n    <testsuite name=\"Neural Net\">\n      <directory>tests/NeuralNet</directory>\n    </testsuite>\n    <testsuite name=\"Persisters\">\n      <directory>tests/Persisters</directory>\n    </testsuite>\n    <testsuite name=\"Regressors\">\n      <directory>tests/Regressors</directory>\n    </testsuite>\n    <testsuite name=\"Specifications\">\n      <directory>tests/Specifications</directory>\n    </testsuite>\n    <testsuite name=\"Strategies\">\n      <directory>tests/Strategies</directory>\n    </testsuite>\n    <testsuite name=\"Tokenizers\">\n      <directory>tests/Transformers</directory>\n    </testsuite>\n    <testsuite name=\"Transformers\">\n      <directory>tests/Transformers</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <env name=\"ENV\" value=\"testing\"/>\n  </php>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}