{
  "metadata": {
    "timestamp": 1736711785293,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "beyondcode/expose",
      "stars": 4283,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0107421875,
          "content": "tests\n.git\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.228515625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".env-example",
          "type": "blob",
          "size": 0.0751953125,
          "content": "PORT=8080\nDOMAIN=example.com\nADMIN_USERNAME=username\nADMIN_PASSWORD=password\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3759765625,
          "content": "* text=auto\n\n/.github         export-ignore\n/tests           export-ignore\n/docs            export-ignore\n.gitattributes   export-ignore\n.gitignore       export-ignore\n.styleci.yml     export-ignore\n.scrutinizer.yml export-ignore\nBACKERS.md       export-ignore\nCONTRIBUTING.md  export-ignore\nCHANGELOG.md     export-ignore\nnodemod.json     export-ignore\nphpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": "/vendor\n/.idea\n/.vscode\n/.vagrant\n/composer.lock\n.phpunit.result.cache\nexpose.php\ndatabase/expose.db\n.expose.php\n.env\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.064453125,
          "content": "preset: laravel\n\ndisabled:\n  - single_class_element_per_statement\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.7412109375,
          "content": "# Changelog\n\n## 1.3.0 (2020-07-01)\n*   Feature: Add pagination to admin user interface\n*   Feature: Add request time to CLI output\n*   Feature: Add `X-Forwarded-Host` header\n*   Fix: Fix remaining time calculation\n*   Fix: Don't use underscores for automatic subdomain generation\n\n## 1.1.0 (2020-06-18)\n*   Feature: Allow overriding the subdomain when using `expose` without specifying `expose share` explicitly\n*   Show badges in the local dashboard for 3xx response statuses\n*   Fix: Updated minimum PHP dependency \n*   Fix: Added support for detecting the Windows user home path\n*   Fix: Use minified VueJS versions\n*   Various spelling fixes\n\n## 1.0.1 (2020-06-17)\n*   Fixes an issue when setting the auth token\n\n## 1.0.0 (2020-06-17)\n*   Initial release\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5380859375,
          "content": "FROM php:8.1-cli\n\nRUN apt-get update\nRUN apt-get install -y git libzip-dev zip\n\nRUN docker-php-ext-install zip\n\n# Get latest Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nCOPY . /src\nWORKDIR /src\n\n# install the dependencies\nRUN composer install -o --prefer-dist && chmod a+x expose\n\nENV port=8080\nENV domain=localhost\nENV username=username\nENV password=password\nENV exposeConfigPath=/src/config/expose.php\n\nCOPY docker-entrypoint.sh /usr/bin/\nRUN chmod 755 /usr/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Beyond Code GmbH <hello@beyondco.de>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.458984375,
          "content": "[![https://expose.dev/?ref=github](https://expose.dev/images/expose/og_card.png)](https://expose.dev/?ref=github)\n\n# Expose\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/beyondcode/expose.svg?style=flat-square)](https://packagist.org/packages/beyondcode/expose)\n[![Quality Score](https://img.shields.io/scrutinizer/g/beyondcode/expose.svg?style=flat-square)](https://scrutinizer-ci.com/g/beyondcode/expose)\n[![Total Downloads](https://img.shields.io/packagist/dt/beyondcode/expose.svg?style=flat-square)](https://packagist.org/packages/beyondcode/expose)\n\nAn open-source ngrok alternative - written in PHP.\n\n## ⭐️ Managed Expose & Expose Pro ⭐️\n\nYou can use a managed version with our proprietary platform and our free (EU) test server at the [official website](https://expose.dev). Upgrade to Expose Pro to use our global server network with your own custom domains and get high-speed tunnels all over the world.\n\n[Create an account](https://expose.dev)\n\n## Documentation\n\nFor installation instructions of your own server, in-depth usage and deployment details, please take a look at the [official documentation](https://expose.dev/docs).\n\n### Security\n\nIf you discover any security related issues, please email marcel@beyondco.de instead of using the issue tracker.\n\n## Credits\n\n- [Marcel Pociot](https://github.com/mpociot)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.json",
          "type": "blob",
          "size": 0.3623046875,
          "content": "{\n    \"chmod\": \"0755\",\n    \"directories\": [\n        \"app\",\n        \"bootstrap\",\n        \"database\",\n        \"resources\",\n        \"config\",\n        \"vendor\"\n    ],\n    \"exclude-dev-files\": false,\n    \"files\": [\n        \"composer.json\"\n    ],\n    \"exclude-composer-files\": false,\n    \"compression\": \"GZ\",\n    \"compactors\": [\n        \"KevinGH\\\\Box\\\\Compactor\\\\Json\"\n    ]\n}\n"
        },
        {
          "name": "builds",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.40625,
          "content": "{\n    \"name\": \"beyondcode/expose\",\n    \"type\": \"project\",\n    \"description\": \"Create public URLs for local sites through any firewall and VPN.\",\n    \"keywords\": [\n        \"expose\",\n        \"tunnel\",\n        \"ngrok\"\n    ],\n    \"homepage\": \"https://sharedwithexpose.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Marcel Pociot\",\n            \"email\": \"marcel@beyondco.de\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"ext-json\": \"*\",\n        \"laravel-zero/phar-updater\": \"^1.2\"\n    },\n    \"require-dev\": {\n        \"cboden/ratchet\": \"dev-master\",\n        \"clue/block-react\": \"^1.4\",\n        \"clue/reactphp-sqlite\": \"dev-modular-worker-for-phar-support\",\n        \"guzzlehttp/guzzle\": \"^7.4\",\n        \"guzzlehttp/psr7\": \"^1.7\",\n        \"illuminate/log\": \"^9.0\",\n        \"illuminate/http\": \"^9.0\",\n        \"illuminate/pipeline\": \"^9.0\",\n        \"illuminate/validation\": \"^9.0\",\n        \"laminas/laminas-http\": \"^2.13\",\n        \"laravel-zero/framework\": \"^9.0\",\n        \"mockery/mockery\": \"^1.4.2\",\n        \"octoper/cuzzle\": \"dev-master\",\n        \"nikic/php-parser\": \"^v4.10\",\n        \"nyholm/psr7\": \"^1.3\",\n        \"phpunit/phpunit\": \"^9.4.3\",\n        \"ratchet/pawl\": \"^0.3.5\",\n        \"react/http\": \"^1.1.0\",\n        \"react/socket\": \"^1.6\",\n        \"react/stream\": \"^1.1.1\",\n        \"riverline/multipart-parser\": \"^2.0\",\n        \"symfony/expression-language\": \"^5.2\",\n        \"symfony/http-kernel\": \"^6.0\",\n        \"symfony/psr-http-message-bridge\": \"^2.0\",\n        \"twig/twig\": \"^3.1\"\n    },\n    \"config\": {\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"app/\"\n        },\n        \"files\": [\n            \"app/helpers.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests/\"\n        }\n    },\n    \"repositories\": [\n        {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/seankndy/reactphp-sqlite\"\n        },\n        {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/beyondcode/Ratchet\"\n        },\n        {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/filkaris/cuzzle\"\n        }\n    ],\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"bin\": [\n        \"builds/expose\"\n    ],\n    \"scripts\": {\n        \"post-create-project-cmd\": [\n            \"@php application app:rename\"\n        ]\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.37109375,
          "content": "version: \"3.7\"\nservices:\n  expose:\n    image: beyondcodegmbh/expose-server:latest\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\n    ports:\n      - 8080:${PORT}\n    environment:\n      port: ${PORT}\n      domain: ${DOMAIN}\n      username: ${ADMIN_USERNAME}\n      password: ${ADMIN_PASSWORD}\n    restart: always\n    volumes:\n      - ./database/expose.db:/root/.expose\n"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 0.25,
          "content": "#!/bin/bash\n\nsed -i \"s|username|${username}|g\" ${exposeConfigPath} && sed -i \"s|password|${password}|g\" ${exposeConfigPath}\n\nif [[ $# -eq 0 ]]; then\n    exec /src/expose serve ${domain} --port ${port} --validateAuthTokens\nelse\n    exec /src/expose \"$@\"\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "expose",
          "type": "blob",
          "size": 1.921875,
          "content": "#!/usr/bin/env php\n<?php\n\nuse function Clue\\React\\SQLite\\runWorker;\n\ndefine('LARAVEL_START', microtime(true));\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n*/\n\n$autoloader = require file_exists(__DIR__.'/vendor/autoload.php') ?  __DIR__.'/vendor/autoload.php' : __DIR__.'/../../autoload.php';\n\n$options = getopt('', [\n    'sqlite-worker',\n]);\nif (isset($options['sqlite-worker'])) {\n    runWorker($_SERVER['argv'][2] ?? null);\n    exit;\n}\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running, we will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n"
        },
        {
          "name": "nodemon.json",
          "type": "blob",
          "size": 0.1630859375,
          "content": "{\n    \"verbose\": false,\n    \"ignore\": [\n        \".git\",\n        \".idea\"\n    ],\n    \"execMap\": {\n        \"php\": \"php\"\n    },\n    \"restartable\": \"r\",\n    \"ext\": \"php\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}