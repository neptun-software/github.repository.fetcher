{
  "metadata": {
    "timestamp": 1736711943024,
    "page": 370,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sebastianbergmann/phploc",
      "stars": 2338,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4169921875,
          "content": "/.github                export-ignore\n/.phive                 export-ignore\n/.psalm                 export-ignore\n/.php-cs-fixer.dist.php export-ignore\n/build                  export-ignore\n/build.xml              export-ignore\n/phive.xml              export-ignore\n/phpunit.xml            export-ignore\n/tests                  export-ignore\n/tools                  export-ignore\n/tools/*                binary\n\n*.php diff=php\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1240234375,
          "content": "/build/phar\n/build/*.phar*\n/.idea\n/composer.lock\n/vendor\n/.php-cs-fixer.php\n/.php-cs-fixer.cache\n/.phpunit.cache\n/.psalm/cache\n"
        },
        {
          "name": ".phive",
          "type": "tree",
          "content": null
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 12.0263671875,
          "content": "<?php declare(strict_types=1);\n$header = <<<'EOF'\nThis file is part of PHPLOC.\n\n(c) Sebastian Bergmann <sebastian@phpunit.de>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\n$finder = PhpCsFixer\\Finder::create()\n    ->files()\n    ->in(__DIR__ . '/src')\n    ->in(__DIR__ . '/tests/unit');\n\n$config = new PhpCsFixer\\Config;\n$config->setFinder($finder)\n    ->setRiskyAllowed(true)\n    ->setRules([\n        'align_multiline_comment' => true,\n        'array_indentation' => true,\n        'array_push' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'backtick_to_shell_exec' => true,\n        'binary_operator_spaces' => [\n            'operators' => [\n                '=' => 'align_single_space_minimal',\n                '+=' => 'align_single_space_minimal',\n                '-=' => 'align_single_space_minimal',\n                '*=' => 'align_single_space_minimal',\n                '/=' => 'align_single_space_minimal',\n                '=>' => 'align_single_space_minimal',\n            ],\n        ],\n        'blank_line_after_namespace' => true,\n        'blank_lines_before_namespace' => [\n            'max_line_breaks' => 1,\n            'min_line_breaks' => 0,\n        ],\n        'blank_line_before_statement' => [\n            'statements' => [\n                'break',\n                'case',\n                'continue',\n                'declare',\n                'default',\n                'do',\n                'exit',\n                'for',\n                'foreach',\n                'goto',\n                'if',\n                'include',\n                'include_once',\n                'phpdoc',\n                'require',\n                'require_once',\n                'return',\n                'switch',\n                'throw',\n                'try',\n                'while',\n                'yield',\n                'yield_from',\n            ],\n        ],\n        'cast_spaces' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'const' => 'none',\n                'method' => 'one',\n                'property' => 'only_if_meta'\n            ]\n        ],\n        'class_definition' => true,\n        'clean_namespace' => true,\n        'combine_consecutive_issets' => true,\n        'combine_consecutive_unsets' => true,\n        'combine_nested_dirname' => true,\n        'compact_nullable_typehint' => true,\n        'concat_space' => ['spacing' => 'one'],\n        'constant_case' => true,\n        'control_structure_braces' => true,\n        'control_structure_continuation_position' => true,\n        'curly_braces_position' => [\n            'anonymous_functions_opening_brace' => 'next_line_unless_newline_at_signature_end',\n            'anonymous_classes_opening_brace' => 'next_line_unless_newline_at_signature_end',\n        ],\n        'declare_equal_normalize' => ['space' => 'none'],\n        'declare_parentheses' => true,\n        'declare_strict_types' => true,\n        'dir_constant' => true,\n        'echo_tag_syntax' => true,\n        'elseif' => true,\n        'encoding' => true,\n        'ereg_to_preg' => true,\n        'explicit_indirect_variable' => true,\n        'explicit_string_variable' => true,\n        'fopen_flag_order' => true,\n        'full_opening_tag' => true,\n        'fully_qualified_strict_types' => true,\n        'function_declaration' => true,\n        'function_to_constant' => true,\n        'function_typehint_space' => true,\n        'get_class_to_class_keyword' => true,\n        'global_namespace_import' => [\n            'import_classes' => true,\n            'import_constants' => true,\n            'import_functions' => true,\n        ],\n        'header_comment' => ['header' => $header, 'separate' => 'none'],\n        'heredoc_to_nowdoc' => true,\n        'implode_call' => true,\n        'include' => true,\n        'increment_style' => [\n            'style' => 'post',\n        ],\n        'indentation_type' => true,\n        'integer_literal_case' => true,\n        'is_null' => true,\n        'lambda_not_used_import' => true,\n        'line_ending' => true,\n        'list_syntax' => ['syntax' => 'short'],\n        'logical_operators' => true,\n        'lowercase_cast' => true,\n        'lowercase_keywords' => true,\n        'lowercase_static_reference' => true,\n        'magic_constant_casing' => true,\n        'magic_method_casing' => true,\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n        ],\n        'method_chaining_indentation' => true,\n        'modernize_strpos' => true,\n        'modernize_types_casting' => true,\n        'multiline_comment_opening_closing' => true,\n        'multiline_whitespace_before_semicolons' => true,\n        'native_constant_invocation' => false,\n        'native_function_casing' => false,\n        'native_function_invocation' => [\n            'include' => [\n                '@internal',\n            ],\n        ],\n        'native_function_type_declaration_casing' => true,\n        'new_with_braces' => [\n            'named_class' => false,\n            'anonymous_class' => false,\n        ],\n        'no_alias_functions' => true,\n        'no_alias_language_construct_call' => true,\n        'no_alternative_syntax' => true,\n        'no_binary_string' => true,\n        'no_blank_lines_after_class_opening' => true,\n        'no_blank_lines_after_phpdoc' => true,\n        'no_break_comment' => true,\n        'no_closing_tag' => true,\n        'no_empty_comment' => true,\n        'no_empty_phpdoc' => true,\n        'no_empty_statement' => true,\n        'no_extra_blank_lines' => true,\n        'no_homoglyph_names' => true,\n        'no_leading_import_slash' => true,\n        'no_leading_namespace_whitespace' => true,\n        'no_mixed_echo_print' => ['use' => 'print'],\n        'no_multiline_whitespace_around_double_arrow' => true,\n        'no_multiple_statements_per_line' => true,\n        'no_null_property_initialization' => true,\n        'no_php4_constructor' => true,\n        'no_short_bool_cast' => true,\n        'no_singleline_whitespace_before_semicolons' => true,\n        'no_space_around_double_colon' => true,\n        'no_spaces_after_function_name' => true,\n        'no_spaces_around_offset' => true,\n        'no_superfluous_elseif' => true,\n        'no_superfluous_phpdoc_tags' => [\n            'allow_mixed' => true,\n        ],\n        'no_trailing_comma_in_singleline' => true,\n        'no_trailing_whitespace' => true,\n        'no_trailing_whitespace_in_comment' => true,\n        'no_trailing_whitespace_in_string' => true,\n        'no_unneeded_control_parentheses' => true,\n        'no_unneeded_curly_braces' => true,\n        'no_unneeded_final_method' => true,\n        'no_unneeded_import_alias' => true,\n        'no_unreachable_default_argument_value' => true,\n        'no_unset_cast' => true,\n        'no_unset_on_property' => true,\n        'no_unused_imports' => true,\n        'no_useless_concat_operator' => true,\n        'no_useless_else' => true,\n        'no_useless_nullsafe_operator' => true,\n        'no_useless_return' => true,\n        'no_useless_sprintf' => true,\n        'no_whitespace_before_comma_in_array' => true,\n        'no_whitespace_in_blank_line' => true,\n        'non_printable_character' => true,\n        'normalize_index_brace' => true,\n        'object_operator_without_whitespace' => true,\n        'octal_notation' => true,\n        'operator_linebreak' => [\n            'only_booleans' => true,\n            'position' => 'end',\n        ],\n        'ordered_class_elements' => [\n            'order' => [\n                'use_trait',\n                'constant_public',\n                'constant_protected',\n                'constant_private',\n                'property_public_static',\n                'property_protected_static',\n                'property_private_static',\n                'property_public',\n                'property_protected',\n                'property_private',\n                'method_public_static',\n                'construct',\n                'destruct',\n                'magic',\n                'phpunit',\n                'method_public',\n                'method_protected',\n                'method_private',\n                'method_protected_static',\n                'method_private_static',\n            ],\n        ],\n        'ordered_imports' => [\n            'imports_order' => [\n                'const',\n                'function',\n                'class',\n            ]\n        ],\n        'ordered_interfaces' => [\n            'direction' => 'ascend',\n            'order' => 'alpha',\n        ],\n        'ordered_traits' => true,\n        'ordered_types' => true,\n        'php_unit_set_up_tear_down_visibility' => true,\n        'php_unit_test_case_static_method_calls' => [\n            'call_type' => 'this',\n        ],\n        'phpdoc_add_missing_param_annotation' => false,\n        'phpdoc_align' => true,\n        'phpdoc_annotation_without_dot' => true,\n        'phpdoc_indent' => true,\n        'phpdoc_inline_tag_normalizer' => true,\n        'phpdoc_no_access' => true,\n        'phpdoc_no_alias_tag' => true,\n        'phpdoc_no_empty_return' => true,\n        'phpdoc_no_package' => true,\n        'phpdoc_no_useless_inheritdoc' => true,\n        'phpdoc_order' => true,\n        'phpdoc_order_by_value' => [\n            'annotations' => [\n                'covers',\n                'dataProvider',\n                'throws',\n                'uses',\n            ],\n        ],\n        'phpdoc_param_order' => true,\n        'phpdoc_return_self_reference' => true,\n        'phpdoc_scalar' => true,\n        'phpdoc_separation' => true,\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_summary' => true,\n        'phpdoc_tag_casing' => true,\n        'phpdoc_tag_type' => true,\n        'phpdoc_to_comment' => false,\n        'phpdoc_trim' => true,\n        'phpdoc_trim_consecutive_blank_line_separation' => true,\n        'phpdoc_types' => ['groups' => ['simple', 'meta']],\n        'phpdoc_types_order' => true,\n        'phpdoc_var_annotation_correct_order' => true,\n        'phpdoc_var_without_name' => true,\n        'pow_to_exponentiation' => true,\n        'protected_to_private' => true,\n        'return_assignment' => true,\n        'return_type_declaration' => ['space_before' => 'none'],\n        'self_accessor' => true,\n        'self_static_accessor' => true,\n        'semicolon_after_instruction' => true,\n        'set_type_to_cast' => true,\n        'short_scalar_cast' => true,\n        'simple_to_complex_string_variable' => true,\n        'simplified_null_return' => false,\n        'single_blank_line_at_eof' => true,\n        'single_class_element_per_statement' => true,\n        'single_import_per_statement' => true,\n        'single_line_after_imports' => true,\n        'single_line_comment_spacing' => true,\n        'single_quote' => true,\n        'single_space_around_construct' => true,\n        'single_trait_insert_per_statement' => true,\n        'space_after_semicolon' => true,\n        'spaces_inside_parentheses' => [\n            'space' => 'none',\n        ],\n        'standardize_increment' => true,\n        'standardize_not_equals' => true,\n        'statement_indentation' => true,\n        'static_lambda' => true,\n        'strict_param' => true,\n        'string_length_to_empty'=> true,\n        'string_line_ending' => true,\n        'switch_case_semicolon_to_colon' => true,\n        'switch_case_space' => true,\n        'switch_continue_to_break' => true,\n        'ternary_operator_spaces' => true,\n        'ternary_to_elvis_operator' => true,\n        'ternary_to_null_coalescing' => true,\n        'trailing_comma_in_multiline' => [\n            'elements' => [\n                'arguments',\n                'arrays',\n                'match',\n            ]\n        ],\n        'trim_array_spaces' => true,\n        'type_declaration_spaces' => [\n            'elements' => [\n                'function',\n            ],\n        ],\n        'types_spaces' => true,\n        'unary_operator_spaces' => true,\n        'visibility_required' => [\n            'elements' => [\n                'const',\n                'method',\n                'property',\n            ],\n        ],\n        'void_return' => true,\n        'whitespace_after_comma_in_array' => true,\n    ]);\n\nreturn $config;\n"
        },
        {
          "name": ".psalm",
          "type": "tree",
          "content": null
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 0.6845703125,
          "content": "# Changes in PHPLOC\n\nAll notable changes in PHPLOC are documented in this file using the [Keep a CHANGELOG](https://keepachangelog.com/) principles.\n\n## [8.0.0] - 202Y-MM-DD\n\n### Removed\n\n* The `--count-tests` CLI option as well as the functionality it controlled has been removed\n* The `--log-csv` CLI option as well as the functionality it controlled has been removed\n* The `--log-json` CLI option as well as the functionality it controlled has been removed\n* The `--log-xml` CLI option as well as the functionality it controlled has been removed\n* This tool is no longer supported on PHP 7.3, PHP 7.4, PHP 8.0, and PHP 8.1\n\n[8.0.0]: https://github.com/sebastianbergmann/phploc/compare/7.0.2...main\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4951171875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2009-2024, Sebastian Bergmann\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5458984375,
          "content": "# PHPLOC\n\n`phploc` is a tool for quickly measuring the size of a PHP project.\n\n## Installation\n\nThis tool is distributed as a [PHP Archive (PHAR)](https://php.net/phar):\n\n```bash\n$ wget https://phar.phpunit.de/phploc.phar\n\n$ php phploc.phar --version\n```\n\nUsing [Phive](https://phar.io/) is the recommended way for managing the tool dependencies of your project:\n\n```bash\n$ phive install phploc\n\n$ ./tools/phploc --version\n```\n\n**[It is not recommended to use Composer to download and install this tool.](https://docs.phpunit.de/en/main/installation.html#phar-or-composer)**\n\n## Usage Example\n\n```\n$ php phploc.phar src\nphploc 8.0-dev by Sebastian Bergmann.\n\nDirectories:                                        104\nFiles:                                              856\n\nLines of Code (LOC):                             67,955\nComment Lines of Code (CLOC):                    19,533 (28.74%)\nNon-Comment Lines of Code (NCLOC):               48,422 (71.26%)\nLogical Lines of Code (LLOC):                    18,478 (27.19%)\n\nClasses or Traits                                   662\n  Methods                                         3,389\n    Cyclomatic Complexity\n      Lowest                                       1.00\n      Average                                      2.00\n      Highest                                    156.00\n\nFunctions                                           185\n  Cyclomatic Complexity\n    Lowest                                         1.00\n    Average                                        1.00\n    Highest                                        1.00\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.173828125,
          "content": "# Security Policy\n\nIf you believe you have found a security vulnerability in PHPLOC, please report it to us through coordinated disclosure.\n\n**Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**\n\nInstead, please email `sebastian@phpunit.de`.\n\nPlease include as much of the information listed below as you can to help us better understand and resolve the issue:\n\n* The type of issue\n* Full paths of source file(s) related to the manifestation of the issue\n* The location of the affected source code (tag/branch/commit or direct URL)\n* Any special configuration required to reproduce the issue\n* Step-by-step instructions to reproduce the issue\n* Proof-of-concept or exploit code (if possible)\n* Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\n## Web Context\n\nPHPLOC is a command-line tool that is intended to be used in development environments only. There is no reason why PHPLOC should be installed on a webserver and/or in a production environment.\n\n**If you upload PHPLOC to a webserver then your deployment process is broken. On a more general note, if your `vendor` directory is publicly accessible on your webserver then your deployment process is also broken.**\n\nPlease note that if you upload PHPLOC to a webserver \"bad things\" may happen. [You have been warned.](https://thephp.cc/articles/phpunit-a-security-risk)\n\nPHPLOC is developed with a focus on development environments and the command-line. No specific testing or hardening with regard to using PHPLOC in an HTTP or web context or with untrusted input data is performed. PHPLOC might also contain functionality that intentionally exposes internal application data for debugging purposes.\n\nIf PHPLOC is used in a web application, the application developer is responsible for filtering inputs or escaping outputs as necessary and for verifying that the used functionality is safe for use within the intended context.\n\nVulnerabilities specific to the use outside a development context will be fixed as applicable, provided that the fix does not have an averse effect on the primary use case for development purposes.\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 5.4423828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"phploc\" default=\"setup\">\n    <target name=\"setup\" depends=\"clean,install-dependencies\"/>\n\n    <target name=\"clean\" description=\"Cleanup build artifacts\">\n        <delete dir=\"${basedir}/build/phar\"/>\n        <delete dir=\"${basedir}/vendor\"/>\n        <delete file=\"${basedir}/composer.lock\"/>\n        <delete>\n            <fileset dir=\"${basedir}/build\">\n                <include name=\"**/phploc*.phar\"/>\n                <include name=\"**/phploc*.phar.asc\"/>\n            </fileset>\n        </delete>\n    </target>\n\n    <target name=\"install-dependencies\" unless=\"dependencies-installed\" depends=\"-dependencies-installed\" description=\"Install dependencies with Composer\">\n        <exec executable=\"${basedir}/tools/composer\" taskname=\"composer\">\n            <arg value=\"update\"/>\n            <arg value=\"--no-interaction\"/>\n            <arg value=\"--no-progress\"/>\n            <arg value=\"--no-ansi\"/>\n        </exec>\n    </target>\n\n    <target name=\"update-tools\">\n        <exec executable=\"phive\">\n            <arg value=\"--no-progress\"/>\n            <arg value=\"update\"/>\n        </exec>\n    </target>\n\n    <target name=\"test\" depends=\"install-dependencies\" description=\"Run tests with PHPUnit\">\n        <exec executable=\"${basedir}/tools/phpunit\" failonerror=\"true\"/>\n    </target>\n\n    <target name=\"signed-phar\"\n            description=\"Create signed PHAR archive of PHPUnit and all its dependencies (release)\"\n            depends=\"phar\">\n        <exec executable=\"bash\" outputproperty=\"version\">\n            <arg value=\"-c\" />\n            <arg value=\"${basedir}/phploc --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'\" />\n        </exec>\n\n        <exec executable=\"gpg\" failonerror=\"true\">\n            <arg value=\"--armor\" />\n            <arg value=\"--detach-sign\" />\n            <arg path=\"${basedir}/build/phploc-${version}.phar\" />\n        </exec>\n    </target>\n\n    <target name=\"phar\"\n            description=\"Create PHAR archive of PHPLOC and all its dependencies\"\n            depends=\"setup,phar-build\">\n        <mkdir dir=\"${basedir}/build/phar\"/>\n    </target>\n\n    <target name=\"phar-build\">\n        <exec executable=\"bash\" outputproperty=\"version\">\n            <arg value=\"-c\" />\n            <arg value=\"${basedir}/phploc --version | awk 'BEGIN { ORS = &quot;&quot;; } {print $2}'\" />\n        </exec>\n\n        <copy todir=\"${basedir}/build/phar/src\">\n            <fileset dir=\"${basedir}/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/nikic/php-parser/LICENSE\" tofile=\"${basedir}/build/phar/nikic-php-parser/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/nikic-php-parser\">\n            <fileset dir=\"${basedir}/vendor/nikic/php-parser/lib\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/cli-parser/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-cli-parser/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-cli-parser\">\n            <fileset dir=\"${basedir}/vendor/sebastian/cli-parser/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/complexity/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-complexity/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-complexity\">\n            <fileset dir=\"${basedir}/vendor/sebastian/complexity/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/lines-of-code/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-lines-of-code/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-lines-of-code\">\n            <fileset dir=\"${basedir}/vendor/sebastian/lines-of-code/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/sebastian/version/LICENSE\" tofile=\"${basedir}/build/phar/sebastian-version/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/sebastian-version\">\n            <fileset dir=\"${basedir}/vendor/sebastian/version/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <copy file=\"${basedir}/vendor/phpunit/php-file-iterator/LICENSE\" tofile=\"${basedir}/build/phar/phpunit-php-file-iterator/LICENSE\"/>\n        <copy todir=\"${basedir}/build/phar/phpunit-php-file-iterator\">\n            <fileset dir=\"${basedir}/vendor/phpunit/php-file-iterator/src\">\n                <include name=\"**/*.php\" />\n            </fileset>\n        </copy>\n\n        <exec executable=\"${basedir}/build/phar-manifest.php\" output=\"${basedir}/build/phar/manifest.txt\"/>\n\n        <exec executable=\"${basedir}/tools/phpab\">\n            <arg value=\"--all\" />\n            <arg value=\"--phar\" />\n            <arg value=\"--hash\" />\n            <arg value=\"SHA-512\" />\n            <arg value=\"--output\" />\n            <arg path=\"${basedir}/build/phploc-${version}.phar\" />\n            <arg value=\"--template\" />\n            <arg path=\"${basedir}/build/phar-autoload.php.in\" />\n            <arg value=\"--indent\" />\n            <arg value=\"            \" />\n            <arg path=\"${basedir}/build/phar\" />\n        </exec>\n\n        <chmod file=\"${basedir}/build/phploc-${version}.phar\" perm=\"ugo+rx\"/>\n    </target>\n\n    <target name=\"-dependencies-installed\">\n        <available file=\"${basedir}/vendor\" property=\"dependencies-installed\" type=\"dir\"/>\n    </target>\n</project>\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.1005859375,
          "content": "{\n    \"name\": \"phploc/phploc\",\n    \"description\": \"A tool for quickly measuring the size of a PHP project\",\n    \"homepage\": \"https://github.com/sebastianbergmann/phploc\",\n    \"license\": \"BSD-3-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"Sebastian Bergmann\",\n            \"email\": \"sebastian@phpunit.de\",\n            \"role\": \"lead\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/sebastianbergmann/phploc/issues\"\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"8.2.0\"\n        },\n        \"optimize-autoloader\": true,\n        \"sort-packages\": true\n    },\n    \"prefer-stable\": true,\n    \"require\": {\n        \"php\": \">=8.2\",\n        \"nikic/php-parser\": \"^4.17\",\n        \"phpunit/php-file-iterator\": \"^4.1\",\n        \"sebastian/cli-parser\": \"^2.0\",\n        \"sebastian/complexity\": \"^3.1\",\n        \"sebastian/lines-of-code\": \"^2.0\",\n        \"sebastian/version\": \"^4.0\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"src/\"\n        ]\n    },\n    \"bin\": [\n        \"phploc\"\n    ],\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-main\": \"8.0-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phploc",
          "type": "blob",
          "size": 0.7568359375,
          "content": "#!/usr/bin/env php\n<?php\n/*\n * This file is part of PHPLOC.\n *\n * (c) Sebastian Bergmann <sebastian@phpunit.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n$loaded = false;\n\nforeach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {\n    if (file_exists($file)) {\n        require $file;\n        $loaded = true;\n        break;\n    }\n}\n\nif (!$loaded) {\n    die(\n        'You need to set up the project dependencies using the following commands:' . PHP_EOL .\n        'wget http://getcomposer.org/composer.phar' . PHP_EOL .\n        'php composer.phar install' . PHP_EOL\n    );\n}\n\nexit((new \\SebastianBergmann\\PHPLOC\\Application)->run($_SERVER['argv']));\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.9765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.3/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         cacheDirectory=\".phpunit.cache\"\n         executionOrder=\"depends,defects\"\n         requireCoverageMetadata=\"true\"\n         beStrictAboutCoverageMetadata=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n         colors=\"true\">\n    <testsuites>\n        <testsuite name=\"unit\">\n            <directory>tests/unit</directory>\n        </testsuite>\n\n        <testsuite name=\"end-to-end\">\n            <directory suffix=\".phpt\">tests/end-to-end</directory>\n        </testsuite>\n    </testsuites>\n\n    <source restrictDeprecations=\"true\"\n            restrictNotices=\"true\"\n            restrictWarnings=\"true\">\n        <include>\n            <directory>src</directory>\n        </include>\n    </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}