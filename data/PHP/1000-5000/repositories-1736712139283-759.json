{
  "metadata": {
    "timestamp": 1736712139283,
    "page": 759,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "weiboad/kafka-php",
      "stars": 1443,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.1259765625,
          "content": "repo_token: ojc3Y2LcKW8VCM8CW2I0phJi1f7FJXzPm\ncoverage_clover: build/logs/clover.xml\njson_path: build/logs/coveralls-upload.json\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.27734375,
          "content": ".gitattributes export-ignore\n.gitignore export-ignore\n.travis.yml export-ignore\nbin/ export-ignore\nbuild.xml export-ignore\ncomposer.json export-ignore\nexample/ export-ignore\ntests/ export-ignore\n/infection.json.dist export-ignore\n/*.xml.dist export-ignore\n/phpstan.neon export-ignore\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1796875,
          "content": ".buildpath\n.DS_Store\n.idea\n.project\n.settings/\n.*.sw*\n.*.un~\nbuild/\ncomposer.lock\ncomposer.phar\nnbproject\ntmp/\nphp-cs-fixer.phar\nvendor/*\n.php_cs.cache\n/phpunit.xml\n/infection-log.txt\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 7.8056640625,
          "content": "dist: trusty\nsudo: false\nlanguage: php\n\nphp:\n  - 7.1\n  - 7.2\n  - nightly\n\ncache:\n  directories:\n    - $HOME/.composer/cache\n\nbefore_install:\n  - pecl install -f krb5-1.1.2\n  - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n\ninstall: travis_retry composer install --no-interaction\n\nscript: ./vendor/bin/phpunit\n\njobs:\n  allow_failures:\n    - php: nightly\n\n  include:\n    - stage: Test\n      env: COVERAGE_ENABLED=1\n      before_script:\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{.disabled,}\n        - if [[ ! $(php -m | grep -si xdebug) ]]; then echo \"xdebug required for coverage\"; exit 1; fi\n        - mkdir -p build/logs\n        - mkdir -p build/coverage\n      script:\n        - ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml\n      after_script:\n        - ./vendor/bin/php-coveralls  -v\n\n    - stage: Code Quality\n      env: CODE_STANDARD=1\n      script:\n        - ./vendor/bin/phpcs\n\n    - stage: Code Quality\n      env: STATIC_ANALYSIS=1\n      script:\n        - ./vendor/bin/phpstan analyse -c phpstan.neon -l max src tests\n\n    - stage: Code Quality\n      env: MUTATION_TESTING=1\n      script:\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{.disabled,}\n        - if [[ ! $(php -m | grep -si xdebug) ]]; then echo \"xdebug required for coverage\"; exit 1; fi\n        - ./vendor/bin/infection --min-msi=49 --min-covered-msi=82 --threads=4\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.9.0.1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka_2.11-0.9.0.1/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test test-runner\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.9.0.1 KAFKA_COMPRESS=1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka_2.11-0.9.0.1/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test -e KAFKA_COMPRESS test-runner\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.10.2.1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test test-runner\n      after_script:\n        - docker-compose down\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.10.2.1 KAFKA_COMPRESS=1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test -e KAFKA_COMPRESS test-runner\n      after_script:\n        - docker-compose down\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.11.0.1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test test-runner\n      after_script:\n        - docker-compose down\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=0.11.0.1 KAFKA_COMPRESS=1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test -e KAFKA_COMPRESS test-runner\n      after_script:\n        - docker-compose down\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=1.0.0\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test test-runner\n      after_script:\n        - docker-compose down\n\n    - stage: Functional tests\n      services:\n        - docker\n      addons:\n        apt:\n          packages:\n            - docker-ce\n      env: KAFKA_VERSION=1.0.0 KAFKA_COMPRESS=1\n      before_install:\n        - docker-compose up -d kafka-$KAFKA_VERSION\n        - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo \"xdebug not available\"\n      script:\n        - sleep 10 # add some arbitrary time to ensure that kafka is running fine\n        - docker-compose exec kafka-$KAFKA_VERSION /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper:2181 --create --partitions 3 --replication-factor 1 --topic test\n        - docker-compose run -e KAFKA_BROKERS=kafka-$KAFKA_VERSION:9092 -e KAFKA_VERSION -e KAFKA_TOPIC=test -e KAFKA_COMPRESS test-runner\n      after_script:\n        - docker-compose down\n\nnotifications:\n  email:\n      - swansoft_team@groups.163.com\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1005859375,
          "content": "FROM php:7.1-alpine\n\nWORKDIR /opt/kafka-php\n\nCMD [\"./vendor/bin/phpunit\", \"--testsuite\", \"functional\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9501953125,
          "content": "Kafka-php\n==========\n\n[中文文档](README_CH.md)\n\n[![QQ Group](https://img.shields.io/badge/QQ%20Group-657517955-brightgreen.svg)]()\n[![Build Status](https://travis-ci.org/weiboad/kafka-php.svg?branch=master)](https://travis-ci.org/weiboad/kafka-php)\n[![Packagist](https://img.shields.io/packagist/dm/nmred/kafka-php.svg?style=plastic)]()\n[![Packagist](https://img.shields.io/packagist/dd/nmred/kafka-php.svg?style=plastic)]()\n[![Packagist](https://img.shields.io/packagist/dt/nmred/kafka-php.svg?style=plastic)]()\n[![GitHub issues](https://img.shields.io/github/issues/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/issues)\n[![GitHub forks](https://img.shields.io/github/forks/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/network)\n[![GitHub stars](https://img.shields.io/github/stars/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/stargazers)\n[![GitHub license](https://img.shields.io/badge/license-Apache%202-blue.svg?style=plastic)](https://raw.githubusercontent.com/weiboad/kafka-php/master/LICENSE)\n\nKafka-php is a pure PHP kafka client that currently supports greater than 0.8.x version of Kafka, this project v0.2.x and v0.1.x are incompatible if using the original v0.1.x You can refer to the document \n[Kafka PHP v0.1.x Document](https://github.com/weiboad/kafka-php/blob/v0.1.6/README.md), but it is recommended to switch to v0.2.x . v0.2.x use PHP asynchronous implementation and kafka broker interaction, more stable than v0.1.x efficient, because the use of PHP language so do not compile any expansion can be used to reduce the access and maintenance costs\n\n\n## Requirements\n\n* Minimum PHP version: 7.1\n* Kafka version greater than 0.8\n* The consumer module needs kafka broker version  greater than 0.9.0\n\n## Installation\n\nAdd the lib directory to the PHP include_path and use an autoloader like the one in the examples directory (the code follows the PEAR/Zend one-class-per-file convention).\n\n## Composer Install\n\nSimply add a dependency `nmred/kafka-php` to your project if you use Composer to manage the dependencies of your project.\n \n`$ composer require nmred/kafka-php`\n\n Here is a minimal example of a composer.json file :\n```\n{\n\t\"require\": {\n\t\t\"nmred/kafka-php\": \"0.2.*\"\n\t}\n}\n```\n\n## Configuration\n\nConfiguration properties are documented in [Configuration](docs/Configure.md)\n\n## Producer\n\n### Asynchronous mode\n\n```php\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ProducerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('10.13.4.159:9192');\n$config->setBrokerVersion('1.0.0');\n$config->setRequiredAck(1);\n$config->setIsAsyn(false);\n$config->setProduceInterval(500);\n$producer = new \\Kafka\\Producer(\n    function() {\n        return [\n            [\n                'topic' => 'test',\n                'value' => 'test....message.',\n                'key' => 'testkey',\n            ],\n        ];\n    }\n);\n$producer->setLogger($logger);\n$producer->success(function($result) {\n\tvar_dump($result);\n});\n$producer->error(function($errorCode) {\n\t\tvar_dump($errorCode);\n});\n$producer->send(true);\n```\n\n### Synchronous mode\n\n```php\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ProducerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('127.0.0.1:9192');\n$config->setBrokerVersion('1.0.0');\n$config->setRequiredAck(1);\n$config->setIsAsyn(false);\n$config->setProduceInterval(500);\n$producer = new \\Kafka\\Producer();\n$producer->setLogger($logger);\n\nfor($i = 0; $i < 100; $i++) {\n    $producer->send([\n        [\n            'topic' => 'test1',\n            'value' => 'test1....message.',\n            'key' => '',\n        ],\n    ]);\n}\n```\n\n## Consumer\n\n```php\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ConsumerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('10.13.4.159:9192');\n$config->setGroupId('test');\n$config->setBrokerVersion('1.0.0');\n$config->setTopics(['test']);\n//$config->setOffsetReset('earliest');\n$consumer = new \\Kafka\\Consumer();\n$consumer->setLogger($logger);\n$consumer->start(function($topic, $part, $message) {\n\tvar_dump($message);\n});\n```\n\n## Low-Level API\n\nRefer [Example](https://github.com/weiboad/kafka-php/tree/master/example)\n\n\n## QQ Group\n\nGroup 1: 531522091 \nGroup 2: 657517955\n![QQ Group](docs/qq_group.png)\n"
        },
        {
          "name": "README_CH.md",
          "type": "blob",
          "size": 4.677734375,
          "content": "Kafka-php\n==========\n\n[English Document](README.md)\n\n[![QQ Group](https://img.shields.io/badge/QQ%20Group-657517955-brightgreen.svg)]()\n[![Build Status](https://travis-ci.org/weiboad/kafka-php.svg?branch=master)](https://travis-ci.org/weiboad/kafka-php)\n[![Packagist](https://img.shields.io/packagist/dm/nmred/kafka-php.svg?style=plastic)]()\n[![Packagist](https://img.shields.io/packagist/dd/nmred/kafka-php.svg?style=plastic)]()\n[![Packagist](https://img.shields.io/packagist/dt/nmred/kafka-php.svg?style=plastic)]()\n[![GitHub issues](https://img.shields.io/github/issues/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/issues)\n[![GitHub forks](https://img.shields.io/github/forks/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/network)\n[![GitHub stars](https://img.shields.io/github/stars/weiboad/kafka-php.svg?style=plastic)](https://github.com/weiboad/kafka-php/stargazers)\n[![GitHub license](https://img.shields.io/badge/license-Apache%202-blue.svg?style=plastic)](https://raw.githubusercontent.com/weiboad/kafka-php/master/LICENSE)\n\nKafka-php 使用纯粹的PHP 编写的 kafka 客户端，目前支持 0.8.x 以上版本的 Kafka，该项目 v0.2.x 和 v0.1.x 不兼容，如果使用原有的 v0.1.x 的可以参照文档 [Kafka PHP v0.1.x Document](https://github.com/weiboad/kafka-php/blob/v0.1.6/README.md), 不过建议切换到 v0.2.x 上。v0.2.x 使用 PHP 异步执行的方式来和kafka broker 交互，较 v0.1.x 更加稳定高效, 由于使用 PHP 语言编写所以不用编译任何的扩展就可以使用，降低了接入与维护成本\n\n\n## 安装环境要求\n\n* PHP 版本大于 5.5\n* Kafka Server 版本大于 0.8.0\n* 消费模块 Kafka Server 版本需要大于 0.9.0\n\n## Installation\n\n## 使用 Composer 安装\n\n添加 composer 依赖 `nmred/kafka-php` 到项目的 `composer.json` 文件中即可，如：\n\n```\n{\n\t\"require\": {\n\t\t\"nmred/kafka-php\": \"0.2.*\"\n\t}\n}\n```\n\n## 配置\n\n配置参数见 [配置](docs/Configure.md)\n\n## Produce\n\n### 异步回调方式调用\n\n```php\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ProducerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('10.13.4.159:9192');\n$config->setBrokerVersion('0.9.0.1');\n$config->setRequiredAck(1);\n$config->setIsAsyn(false);\n$config->setProduceInterval(500);\n$producer = new \\Kafka\\Producer(function() {\n\treturn array(\n\t\tarray(\n\t\t\t'topic' => 'test',\n\t\t\t'value' => 'test....message.',\n\t\t\t'key' => 'testkey',\n\t\t),\n\t);\n});\n$producer->setLogger($logger);\n$producer->success(function($result) {\n\tvar_dump($result);\n});\n$producer->error(function($errorCode) {\n\tvar_dump($errorCode);\n});\n$producer->send(true);\n```\n\n### 同步方式调用生产者\n\n```\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ProducerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('127.0.0.1:9192');\n$config->setBrokerVersion('0.9.0.1');\n$config->setRequiredAck(1);\n$config->setIsAsyn(false);\n$config->setProduceInterval(500);\n$producer = new \\Kafka\\Producer();\n$producer->setLogger($logger);\n\nfor($i = 0; $i < 100; $i++) {\n        $result = $producer->send(array(\n                array(\n                        'topic' => 'test1',\n                        'value' => 'test1....message.',\n                        'key' => '',\n                ),\n        ));\n        var_dump($result);\n}\n```\n\n## Consumer\n\n```php\n<?php\nrequire '../vendor/autoload.php';\ndate_default_timezone_set('PRC');\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StdoutHandler;\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StdoutHandler());\n\n$config = \\Kafka\\ConsumerConfig::getInstance();\n$config->setMetadataRefreshIntervalMs(10000);\n$config->setMetadataBrokerList('10.13.4.159:9192');\n$config->setGroupId('test');\n$config->setBrokerVersion('0.9.0.1');\n$config->setTopics(array('test'));\n//$config->setOffsetReset('earliest');\n$consumer = new \\Kafka\\Consumer();\n$consumer->setLogger($logger);\n$consumer->start(function($topic, $part, $message) {\n\tvar_dump($message);\n});\n```\n\n## Basic Protocol\n\n基础协议 API 调用方式见 [Example](https://github.com/weiboad/kafka-php/tree/master/example)\n\n## QQ 群号 \n\n群一： 531522091 （已满）\n群二： 657517955\n![QQ Group](docs/qq_group.png)\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.3623046875,
          "content": "{\n    \"name\": \"nmred/kafka-php\",\n    \"description\": \"Kafka client for php\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"Client\",\n        \"Kafka\"\n    ],\n    \"homepage\": \"http://www.swanlinux.net\",\n    \"license\": \"BSD-3-Clause\",\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.1.12\"\n        },\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true\n    },\n    \"require\": {\n        \"php\": \"^7.1\",\n        \"amphp/amp\": \"^2.0.3\",\n        \"lcobucci/clock\": \"^1.0\",\n        \"psr/log\": \"^1.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Kafka\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"KafkaTest\\\\\": \"tests/\",\n            \"KafkaExample\\\\\": \"example/\"\n        }\n    },\n    \"suggest\": {\n        \"ext-krb5\": \"To be able to ues the GSSAPI SASL mechanism\"\n    },\n    \"require-dev\": {\n        \"doctrine/coding-standard\": \"^2.1\",\n        \"infection/infection\": \"^0.7\",\n        \"kmelia/monolog-stdout-handler\": \"^1.2\",\n        \"mikey179/vfsStream\": \"^1.6.5\",\n        \"monolog/monolog\": \"^1.23\",\n        \"phpstan/phpstan\": \"^0.9\",\n        \"phpstan/phpstan-phpunit\": \"^0.9\",\n        \"phpstan/phpstan-strict-rules\": \"^0.9\",\n        \"phpunit/phpcov\": \"^4.0\",\n        \"phpunit/phpunit\": \"^6.5\",\n        \"satooshi/php-coveralls\": \"2.0.0\",\n        \"slevomat/coding-standard\": \"^4.1\",\n        \"squizlabs/php_codesniffer\": \"^3.2\"\n    }\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.08203125,
          "content": "version: '3.2'\n\nservices:\n  zookeeper:\n    image: zookeeper:3.4\n\n  kafka-0.9.0.1:\n    image: wurstmeister/kafka:0.9.0.1\n    depends_on:\n      - zookeeper\n    environment:\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_HOST_NAME: kafka-0.9.0.1\n      KAFKA_ADVERTISED_PORT: 9092\n    ports:\n      - \"9092\"\n\n  kafka-0.10.2.1:\n    image: wurstmeister/kafka:0.10.2.1\n    depends_on:\n      - zookeeper\n    environment:\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_HOST_NAME: kafka-0.10.2.1\n      KAFKA_ADVERTISED_PORT: 9092\n    ports:\n      - \"9092\"\n\n  kafka-0.11.0.1:\n    image: wurstmeister/kafka:0.11.0.1\n    depends_on:\n      - zookeeper\n    environment:\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_HOST_NAME: kafka-0.11.0.1\n    ports:\n      - \"9092\"\n\n  kafka-1.0.0:\n    image: wurstmeister/kafka:1.0.0\n    depends_on:\n      - zookeeper\n    environment:\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_HOST_NAME: kafka-1.0.0\n    ports:\n      - \"9092\"\n\n  test-runner:\n    build: .\n    volumes:\n       - .:/opt/kafka-php\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "infection.json.dist",
          "type": "blob",
          "size": 0.1513671875,
          "content": "{\n    \"timeout\": 10,\n    \"source\": {\n        \"directories\": [\n            \"src\"\n        ]\n    },\n    \"logs\": {\n        \"text\": \"infection-log.txt\"\n    }\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 1.5361328125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset>\n    <arg name=\"basepath\" value=\".\" />\n    <arg name=\"extensions\" value=\"php\" />\n    <arg name=\"parallel\" value=\"80\" />\n    <arg name=\"colors\" />\n    <arg name=\"cache\" value=\".php_cs.cache\" />\n    <arg value=\"np\" />\n\n    <file>example</file>\n    <file>src</file>\n    <file>tests</file>\n\n    <rule ref=\"Doctrine\" />\n\n    <rule ref=\"PSR1.Methods.CamelCapsMethodName.NotCamelCaps\">\n        <exclude-pattern>*/tests\\/Base\\/StreamStub/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MissingNamespace\">\n        <exclude-pattern>*/example/*</exclude-pattern>\n    </rule>\n    <rule ref=\"Squiz.Classes.ClassFileName.NoMatch\">\n        <exclude-pattern>*/example/*</exclude-pattern>\n    </rule>\n    <rule ref=\"SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName\">\n        <exclude-pattern>*/example/*</exclude-pattern>\n    </rule>\n\n    <!-- Require presence of declare(strict_types=1) -->\n    <rule ref=\"SlevomatCodingStandard.TypeHints.DeclareStrictTypes\">\n        <properties>\n            <property name=\"newlinesCountBetweenOpenTagAndDeclare\" value=\"1\"/>\n            <property name=\"spacesCountAroundEqualsSign\" value=\"0\"/>\n            <property name=\"newlinesCountAfterDeclare\" value=\"2\"/>\n        </properties>\n    </rule>\n\n    <!-- Require space around colon in return types -->\n    <rule ref=\"SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing\">\n        <properties>\n            <property name=\"spacesCountBeforeColon\" value=\"0\"/>\n        </properties>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.291015625,
          "content": "includes:\n    - vendor/phpstan/phpstan-phpunit/extension.neon\n    - vendor/phpstan/phpstan-strict-rules/rules.neon\n\nparameters:\n    ignoreErrors:\n        - '#Call to an undefined method Kafka\\\\Config.*::(g|s)etValidKey\\(\\)#'\n        - '#Call to an undefined method Kafka\\\\Config.*::pureMagic\\(\\)#'\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.97265625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n     backupGlobals=\"false\"\n     colors=\"true\"\n     verbose=\"true\"\n     beStrictAboutOutputDuringTests=\"true\"\n     beStrictAboutTestsThatDoNotTestAnything=\"true\"\n     beStrictAboutTodoAnnotatedTests=\"true\"\n     beStrictAboutChangesToGlobalState=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"base\">\n            <directory suffix=\".php\">tests/Base</directory>\n        </testsuite>\n        <testsuite name=\"protocol\">\n            <directory suffix=\".php\">tests/Protocol</directory>\n        </testsuite>\n        <testsuite name=\"functional\">\n            <directory suffix=\".php\">tests/Functional</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">src</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}