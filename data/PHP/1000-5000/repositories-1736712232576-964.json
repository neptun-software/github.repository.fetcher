{
  "metadata": {
    "timestamp": 1736712232576,
    "page": 964,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Nyholm/psr7",
      "stars": 1190,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.505859375,
          "content": ".github/               export-ignore\ndoc/                   export-ignore\ntests/                 export-ignore\n.editorconfig          export-ignore\n.gitattributes         export-ignore\n.gitignore             export-ignore\n.php-cs-fixer.dist.php export-ignore\n.scrutinizer.yml       export-ignore\n.travis.yml            export-ignore\nphpstan.neon.dist      export-ignore\nphpstan-baseline.neon  export-ignore\nphpunit.xml.dist       export-ignore\npsalm.xml              export-ignore\npsalm.baseline.xml     export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": "composer.lock\nphpstan.neon\nphpunit.xml\nvendor\n.php-cs-fixer.cache\n.phpunit.result.cache\n.tmp\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 0.6689453125,
          "content": "<?php\n\ndeclare(strict_types=1);\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->in(__DIR__.'/tests');\n\n$config = new PhpCsFixer\\Config();\n\nreturn $config->setRules([\n    '@Symfony' => true,\n    '@Symfony:risky' => true,\n    'native_function_invocation' => ['include'=> ['@all']],\n    'native_constant_invocation' => true,\n    'ordered_imports' => true,\n    'declare_strict_types' => false,\n    'linebreak_after_opening_tag' => false,\n    'single_import_per_statement' => false,\n    'blank_line_after_opening_tag' => false,\n    'concat_space' => ['spacing'=>'one'],\n    'phpdoc_align' => ['align'=>'left'],\n])\n    ->setRiskyAllowed(true)\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.669921875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file, in reverse chronological order by release.\n\n## 1.8.2\n\n- Fix deprecation warnings in PHP 8.4\n\n## 1.8.1\n\n- Fix error handling in Stream::getContents()\n\n## 1.8.0\n\n- Deprecate HttplugFactory, use Psr17Factory instead\n- Make depencendy on php-http/message-factory optional\n\n## 1.7.0\n\n- Bump to PHP 7.2 minimum\n- Allow psr/http-message v2\n- Use copy-on-write for streams created from strings\n\n## 1.6.1\n\n- Security fix: CVE-2023-29197\n\n## 1.6.0\n\n### Changed\n\n- Seek to the begining of the string when using Stream::create()\n- Populate ServerRequest::getQueryParams() on instantiation\n- Encode [reserved characters](https://www.rfc-editor.org/rfc/rfc3986#appendix-A) in userinfo in Uri\n- Normalize leading slashes for Uri::getPath()\n- Make Stream's constructor public\n- Add some missing type checks on arguments\n\n## 1.5.1\n\n### Fixed\n\n- Fixed deprecations on PHP 8.1\n\n## 1.5.0\n\n### Added\n\n- Add explicit `@return mixed`\n- Add explicit return types to HttplugFactory\n\n### Fixed\n\n- Improve error handling with streams\n\n## 1.4.1\n\n### Fixed\n\n- `Psr17Factory::createStreamFromFile`, `UploadedFile::moveTo`, and\n  `UploadedFile::getStream` no longer throw `ValueError` in PHP 8.\n\n## 1.4.0\n\n### Removed\n\nThe `final` keyword was replaced by `@final` annotation.\n\n## 1.3.2\n\n### Fixed\n\n- `Stream::read()` must not return boolean.\n- Improved exception message when using wrong HTTP status code.\n\n## 1.3.1\n\n### Fixed\n\n- Allow installation on PHP8\n\n## 1.3.0\n\n### Added\n\n- Make Stream::__toString() compatible with throwing exceptions on PHP 7.4.\n\n### Fixed\n\n- Support for UTF-8 hostnames\n- Support for numeric header names\n\n## 1.2.1\n\n### Changed\n\n- Added `.github` and `phpstan.neon.dist` to `.gitattributes`.\n\n## 1.2.0\n\n### Changed\n\n- Change minimal port number to 0 (unix socket)\n- Updated `Psr17Factory::createResponse` to respect the specification. If second\n  argument is not used, a standard reason phrase. If an empty string is passed,\n  then the reason phrase will be empty.\n\n### Fixed\n\n- Check for seekable on the stream resource.\n- Fixed the `Response::$reason` should never be null.\n\n## 1.1.0\n\n### Added\n\n- Improved performance\n- More tests for `UploadedFile` and `HttplugFactory`\n\n### Removed\n\n- Dead code\n\n## 1.0.1\n\n### Fixed\n\n- Handle `fopen` failing in createStreamFromFile according to PSR-7.\n- Reduce execution path to speed up performance.\n- Fixed typos.\n- Code style.\n\n## 1.0.0\n\n### Added\n\n- Support for final PSR-17 (HTTP factories). (`Psr17Factory`)\n- Support for numeric header values.\n- Support for empty header values.\n- All classes are final\n- `HttplugFactory` that implements factory interfaces from HTTPlug.\n\n### Changed\n\n- `ServerRequest` does not extend `Request`.\n\n### Removed\n\n- The HTTPlug discovery strategy was removed since it is included in php-http/discovery 1.4.\n- `UploadedFileFactory()` was removed in favor for `Psr17Factory`.\n- `ServerRequestFactory()` was removed in favor for `Psr17Factory`.\n- `StreamFactory`, `UriFactory`, abd `MessageFactory`. Use `HttplugFactory` instead.\n- `ServerRequestFactory::createServerRequestFromArray`, `ServerRequestFactory::createServerRequestFromArrays` and\n  `ServerRequestFactory::createServerRequestFromGlobals`. Please use the new `nyholm/psr7-server` instead.\n\n## 0.3.0\n\n### Added\n\n- Return types.\n- Many `InvalidArgumentException`s are thrown when you use invalid arguments.\n- Integration tests for `UploadedFile` and `ServerRequest`.\n\n### Changed\n\n- We dropped PHP7.0 support.\n- PSR-17 factories have been marked as internal. They do not fall under our BC promise until PSR-17 is accepted.\n- `UploadedFileFactory::createUploadedFile` does not accept a string file path.\n\n## 0.2.3\n\nNo changelog before this release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2016 Tobias Nyholm\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7177734375,
          "content": "# PSR-7 implementation\n\n[![Latest Version](https://img.shields.io/github/release/Nyholm/psr7.svg?style=flat-square)](https://github.com/Nyholm/psr7/releases)\n[![Total Downloads](https://poser.pugx.org/nyholm/psr7/downloads)](https://packagist.org/packages/nyholm/psr7)\n[![Monthly Downloads](https://poser.pugx.org/nyholm/psr7/d/monthly.png)](https://packagist.org/packages/nyholm/psr7)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Static analysis](https://github.com/Nyholm/psr7/actions/workflows/static.yml/badge.svg?branch=master)](https://github.com/Nyholm/psr7/actions/workflows/static.yml?query=branch%3Amaster)\n[![Tests](https://github.com/Nyholm/psr7/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/Nyholm/psr7/actions/workflows/tests.yml?query=branch%3Amaster)\n\nA super lightweight PSR-7 implementation. Very strict and very fast.\n\n| Description | Guzzle | Laminas | Slim | Nyholm |\n| ---- | ------ | ---- | ---- | ------ |\n| Lines of code | 3.300 | 3.100 | 1.900 | 1.000 |\n| PSR-7* | 66% | 100% | 75% | 100% |\n| PSR-17 | No | Yes | Yes | Yes |\n| HTTPlug | No | No | No | Yes |\n| Performance (runs per second)** | 14.553 | 14.703 | 13.416 | 17.734 |\n\n\\* Percent of completed tests in https://github.com/php-http/psr7-integration-tests\n\n\\** Benchmark with 50.000 runs. See https://github.com/devanych/psr-http-benchmark (higher is better)\n\n## Installation\n\n```bash\ncomposer require nyholm/psr7\n```\n\nIf you are using Symfony Flex then you get all message factories registered as services.\n\n## Usage\n\nThe PSR-7 objects do not contain any other public methods than those defined in\nthe [PSR-7 specification](https://www.php-fig.org/psr/psr-7/).\n\n### Create objects\n\nUse the PSR-17 factory to create requests, streams, URIs etc.\n\n```php\n$psr17Factory = new \\Nyholm\\Psr7\\Factory\\Psr17Factory();\n$request = $psr17Factory->createRequest('GET', 'http://tnyholm.se');\n$stream = $psr17Factory->createStream('foobar');\n```\n\n### Sending a request\n\nWith [HTTPlug](http://httplug.io/) or any other PSR-18 (HTTP client) you may send\nrequests like:\n\n```bash\ncomposer require kriswallsmith/buzz\n```\n\n```php\n$psr17Factory = new \\Nyholm\\Psr7\\Factory\\Psr17Factory();\n$psr18Client = new \\Buzz\\Client\\Curl($psr17Factory);\n\n$request = $psr17Factory->createRequest('GET', 'http://tnyholm.se');\n$response = $psr18Client->sendRequest($request);\n```\n\n### Create server requests\n\nThe [`nyholm/psr7-server`](https://github.com/Nyholm/psr7-server) package can be used\nto create server requests from PHP superglobals.\n\n```bash\ncomposer require nyholm/psr7-server\n```\n\n```php\n$psr17Factory = new \\Nyholm\\Psr7\\Factory\\Psr17Factory();\n\n$creator = new \\Nyholm\\Psr7Server\\ServerRequestCreator(\n    $psr17Factory, // ServerRequestFactory\n    $psr17Factory, // UriFactory\n    $psr17Factory, // UploadedFileFactory\n    $psr17Factory  // StreamFactory\n);\n\n$serverRequest = $creator->fromGlobals();\n```\n\n### Emitting a response\n\n```bash\ncomposer require laminas/laminas-httphandlerrunner\n```\n\n```php\n$psr17Factory = new \\Nyholm\\Psr7\\Factory\\Psr17Factory();\n\n$responseBody = $psr17Factory->createStream('Hello world');\n$response = $psr17Factory->createResponse(200)->withBody($responseBody);\n(new \\Laminas\\HttpHandlerRunner\\Emitter\\SapiEmitter())->emit($response);\n```\n\n## Our goal\n\nThis package is currently maintained by [Tobias Nyholm](http://nyholm.se) and\n[Martijn van der Ven](https://vanderven.se/martijn/). They have decided that the\ngoal of this library should be to provide a super strict implementation of\n[PSR-7](https://www.php-fig.org/psr/psr-7/) that is blazing fast.\n\nThe package will never include any extra features nor helper methods. All our classes\nand functions exist because they are required to fulfill the PSR-7 specification.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.2529296875,
          "content": "{\n    \"name\": \"nyholm/psr7\",\n    \"description\": \"A fast PHP7 implementation of PSR-7\",\n    \"license\": \"MIT\",\n    \"keywords\": [\"psr-7\", \"psr-17\"],\n    \"homepage\": \"https://tnyholm.se\",\n    \"authors\": [\n        {\n            \"name\": \"Tobias Nyholm\",\n            \"email\": \"tobias.nyholm@gmail.com\"\n        },\n        {\n            \"name\": \"Martijn van der Ven\",\n            \"email\": \"martijn@vanderven.se\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.2\",\n        \"psr/http-message\": \"^1.1 || ^2.0\",\n        \"psr/http-factory\": \"^1.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^7.5 || ^8.5 || ^9.4\",\n        \"php-http/message-factory\": \"^1.0\",\n        \"php-http/psr7-integration-tests\": \"^1.0\",\n        \"http-interop/http-factory-tests\": \"^0.9\",\n        \"symfony/error-handler\": \"^4.4\"\n    },\n    \"provide\": {\n        \"php-http/message-factory-implementation\": \"1.0\",\n        \"psr/http-message-implementation\": \"1.0\",\n        \"psr/http-factory-implementation\": \"1.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Nyholm\\\\Psr7\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\Nyholm\\\\Psr7\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.8-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 0.8466796875,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Response.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between null and string will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Response.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ServerRequest.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\!\\\\=\\\\= between null and null will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/ServerRequest.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Stream.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of && is always false\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/UploadedFile.php\n\n\t\t-\n\t\t\tmessage: \"#^Strict comparison using \\\\=\\\\=\\\\= between false and true will always evaluate to false\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/UploadedFile.php\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.0849609375,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    level: 5\n    paths:\n      - src\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.9501953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" colors=\"true\" bootstrap=\"vendor/autoload.php\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <testsuites>\n    <testsuite name=\"Unit tests\">\n      <directory>tests/</directory>\n    </testsuite>\n    <testsuite name=\"Integration tests\">\n      <directory>./vendor/http-interop/http-factory-tests/test</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <const name=\"REQUEST_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n    <const name=\"RESPONSE_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n    <const name=\"SERVER_REQUEST_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n    <const name=\"UPLOADED_FILE_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n    <const name=\"URI_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n    <const name=\"STREAM_FACTORY\" value=\"Nyholm\\Psr7\\Factory\\Psr17Factory\"/>\n  </php>\n</phpunit>\n"
        },
        {
          "name": "psalm.baseline.xml",
          "type": "blob",
          "size": 0.2685546875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<files psalm-version=\"4.30.0@d0bc6e25d89f649e4f36a534f330f8bb4643dd69\">\n  <file src=\"src/Stream.php\">\n    <NoValue occurrences=\"1\">\n      <code>return \\trigger_error((string) $e, \\E_USER_ERROR);</code>\n    </NoValue>\n  </file>\n</files>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.47265625,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"8\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n\n    errorBaseline=\"psalm.baseline.xml\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}