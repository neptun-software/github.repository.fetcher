{
  "metadata": {
    "timestamp": 1736712113680,
    "page": 703,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fossasia/fossasia11-drupal",
      "stars": 1534,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bzrignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": "CVS\n./sites/default/settings.php\n./sites/default/files\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 4.0634765625,
          "content": "#\n# Apache/PHP/Drupal settings:\n#\n\n# Protect files and directories from prying eyes.\n<FilesMatch \"\\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\\.php)?|xtmpl|svn-base)$|^(code-style\\.pl|Entries.*|Repository|Root|Tag|Template|all-wcprops|entries|format)$\">\n  Order allow,deny\n</FilesMatch>\n\n# Don't show directory listings for URLs which map to a directory.\nOptions -Indexes\n\n# Follow symbolic links in this directory.\nOptions +FollowSymLinks\n\n# Make Drupal handle any 404 errors.\nErrorDocument 404 /index.php\n\n# Force simple error message for requests for non-existent favicon.ico.\n<Files favicon.ico>\n  # There is no end quote below, for compatibility with Apache 1.3.\n  ErrorDocument 404 \"The requested file favicon.ico was not found.\n</Files>\n\n# Set the default handler.\nDirectoryIndex index.php\n\n# Override PHP settings. More in sites/default/settings.php\n# but the following cannot be changed at runtime.\n\n# PHP 4, Apache 1.\n<IfModule mod_php4.c>\n  php_value magic_quotes_gpc                0\n  php_value register_globals                0\n  php_value session.auto_start              0\n  php_value mbstring.http_input             pass\n  php_value mbstring.http_output            pass\n  php_value mbstring.encoding_translation   0\n</IfModule>\n\n# PHP 4, Apache 2.\n<IfModule sapi_apache2.c>\n  php_value magic_quotes_gpc                0\n  php_value register_globals                0\n  php_value session.auto_start              0\n  php_value mbstring.http_input             pass\n  php_value mbstring.http_output            pass\n  php_value mbstring.encoding_translation   0\n</IfModule>\n\n# PHP 5, Apache 1 and 2.\n<IfModule mod_php5.c>\n  php_value magic_quotes_gpc                0\n  php_value register_globals                0\n  php_value session.auto_start              0\n  php_value mbstring.http_input             pass\n  php_value mbstring.http_output            pass\n  php_value mbstring.encoding_translation   0\n</IfModule>\n\n# Requires mod_expires to be enabled.\n<IfModule mod_expires.c>\n  # Enable expirations.\n  ExpiresActive On\n\n  # Cache all files for 2 weeks after access (A).\n  ExpiresDefault A1209600\n\n  <FilesMatch \\.php$>\n    # Do not allow PHP scripts to be cached unless they explicitly send cache\n    # headers themselves. Otherwise all scripts would have to overwrite the\n    # headers set by mod_expires if they want another caching behavior. This may\n    # fail if an error occurs early in the bootstrap process, and it may cause\n    # problems if a non-Drupal PHP file is installed in a subdirectory.\n    ExpiresActive Off\n  </FilesMatch>\n</IfModule>\n\n# Various rewrite rules.\n<IfModule mod_rewrite.c>\n  RewriteEngine on\n\n  # If your site can be accessed both with and without the 'www.' prefix, you\n  # can use one of the following settings to redirect users to your preferred\n  # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:\n  #\n  # To redirect all users to access the site WITH the 'www.' prefix,\n  # (http://example.com/... will be redirected to http://www.example.com/...)\n  # adapt and uncomment the following:\n  # RewriteCond %{HTTP_HOST} ^example\\.com$ [NC]\n  # RewriteRule ^(.*)$ http://www.example.com/$1 [L,R=301]\n  #\n  # To redirect all users to access the site WITHOUT the 'www.' prefix,\n  # (http://www.example.com/... will be redirected to http://example.com/...)\n  # uncomment and adapt the following:\n  # RewriteCond %{HTTP_HOST} ^www\\.example\\.com$ [NC]\n  # RewriteRule ^(.*)$ http://example.com/$1 [L,R=301]\n\n  # Modify the RewriteBase if you are using Drupal in a subdirectory or in a\n  # VirtualDocumentRoot and the rewrite rules are not working properly.\n  # For example if your site is at http://example.com/drupal uncomment and\n  # modify the following line:\n  # RewriteBase /drupal\n  #\n  # If your site is running in a VirtualDocumentRoot at http://example.com/,\n  # uncomment the following line:\n  # RewriteBase /\n\n  # Rewrite URLs of the form 'x' to the form 'index.php?q=x'.\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteCond %{REQUEST_URI} !=/favicon.ico\n  RewriteRule ^(.*)$ index.php?q=$1 [L,QSA]\n</IfModule>\n\n# $Id$\n"
        },
        {
          "name": "CHANGELOG.txt",
          "type": "blob",
          "size": 45.2265625,
          "content": "\nDrupal 6.28, 2013-01-16\n----------------------\n- Fixed security issues (multiple vulnerabilities), see SA-CORE-2013-001.\n\nDrupal 6.27, 2012-12-19\n----------------------\n- Fixed security issues (multiple vulnerabilities), see SA-CORE-2012-004.\n\nDrupal 6.26, 2012-05-02\n----------------------\n- Fixed a small number of bugs.\n- Made code documentation improvements.\n\nDrupal 6.25, 2012-02-29\n----------------------\n- Fixed regressions introduced in Drupal 6.24 only.\n\nDrupal 6.24, 2012-02-01\n----------------------\n- Improved performance of search indexing and user operations by adding indexes.\n- Fixed issues with themes getting disabled due to missing locking in\n  system_theme_data().\n- Fix issue with blocks being disabled on updates in _block_rehash().\n- Further improvements to PHP 5.3, PHP 4 and PostgreSQL compatibility.\n- Improved code documentation at various places.\n- Fixed a variety of other bugs.\n\nDrupal 6.23, 2012-02-01\n----------------------\n- Fixed security issues (Cross site scripting), see SA-CORE-2012-001.\n\nDrupal 6.22, 2011-05-25\n----------------------\n- Made Drupal 6 work better with IIS and Internet Explorer.\n- Fixed .po file imports to work better with custom textgroups.\n- Improved code documentation at various places.\n- Fixed a variety of other bugs.\n\nDrupal 6.21, 2011-05-25\n----------------------\n- Fixed security issues (Cross site scripting), see SA-CORE-2011-001.\n\nDrupal 6.20, 2010-12-15\n----------------------\n- Fixed a variety of small bugs, improved code documentation.\n\nDrupal 6.19, 2010-08-11\n----------------------\n- Fixed a variety of small bugs, improved code documentation.\n\nDrupal 6.18, 2010-08-11\n----------------------\n- Fixed security issues (OpenID authentication bypass, File download access\n  bypass, Comment unpublishing bypass, Actions cross site scripting),\n  see SA-CORE-2010-002.\n\nDrupal 6.17, 2010-06-02\n----------------------\n- Improved PostgreSQL compatibility\n- Better PHP 5.3 and PHP 4 compatibility\n- Better browser compatibility of CSS and JS aggregation\n- Improved logging for login failures\n- Fixed an incompatibility with some contributed modules and the locking system\n- Fixed a variety of other bugs.\n\nDrupal 6.16, 2010-03-03\n----------------------\n- Fixed security issues (Installation cross site scripting, Open redirection,\n  Locale module cross site scripting, Blocked user session regeneration),\n  see SA-CORE-2010-001.\n- Better support for updated jQuery versions.\n- Reduced resource usage of update.module.\n- Fixed several issues relating to support of install profiles and\n  distributions.\n- Added a locking framework to avoid data corruption on long operations.\n- Fixed a variety of other bugs.\n\nDrupal 6.15, 2009-12-16\n----------------------\n- Fixed security issues (Cross site scripting), see SA-CORE-2009-009.\n- Fixed a variety of other bugs.\n\nDrupal 6.14, 2009-09-16\n----------------------\n- Fixed security issues (OpenID association cross site request forgeries,\n  OpenID impersonation and File upload), see SA-CORE-2009-008.\n- Changed the system modules page to not run all cache rebuilds; use the\n  button on the performance settings page to achieve the same effect.\n- Added support for PHP 5.3.0 out of the box.\n- Fixed a variety of small bugs.\n\nDrupal 6.13, 2009-07-01\n----------------------\n- Fixed security issues (Cross site scripting, Input format access bypass and\n  Password leakage in URL), see SA-CORE-2009-007.\n- Fixed a variety of small bugs.\n\nDrupal 6.12, 2009-05-13\n----------------------\n- Fixed security issues (Cross site scripting), see SA-CORE-2009-006.\n- Fixed a variety of small bugs.\n\nDrupal 6.11, 2009-04-29\n----------------------\n- Fixed security issues (Cross site scripting and limited information\n  disclosure), see SA-CORE-2009-005\n- Fixed performance issues with the menu router cache, the update\n  status cache and improved cache invalidation\n- Fixed a variety of small bugs.\n\nDrupal 6.10, 2009-02-25\n----------------------\n- Fixed a security issue, (Local file inclusion on Windows),\n  see SA-CORE-2009-003\n- Fixed node_feed() so custom fields can show up in RSS feeds.\n- Improved PostgreSQL compatibility.\n- Fixed a variety of small bugs.\n\nDrupal 6.9, 2009-01-14\n----------------------\n- Fixed security issues, (Access Bypass, Validation Bypass and Hardening\n  against SQL injection), see SA-CORE-2009-001\n- Made HTTP request checking more robust and informative.\n- Fixed HTTP_HOST checking to work again with HTTP 1.0 clients and\n  basic shell scripts.\n- Removed t() calls from all schema documentation. Suggested best practice\n  changed for contributed modules, see http://drupal.org/node/322731.\n- Fixed a variety of small bugs.\n\nDrupal 6.8, 2008-12-11\n----------------------\n- Removed a previous change incompatible with PHP 5.1.x and lower.\n\nDrupal 6.7, 2008-12-10\n----------------------\n- Fixed security issues, (Cross site request forgery and Cross site scripting), see SA-2008-073\n- Updated robots.txt and .htaccess to match current file use.\n- Fixed a variety of small bugs.\n\nDrupal 6.6, 2008-10-22\n----------------------\n- Fixed security issues, (File inclusion, Cross site scripting), see SA-2008-067\n- Fixed a variety of small bugs.\n\nDrupal 6.5, 2008-10-08\n----------------------\n- Fixed security issues, (File upload access bypass, Access rules bypass,\n  BlogAPI access bypass), see SA-2008-060.\n- Fixed a variety of small bugs.\n\nDrupal 6.4, 2008-08-13\n----------------------\n- Fixed a security issue (Cross site scripting, Arbitrary file uploads via\n  BlogAPI, Cross site request forgeries and Various Upload module\n  vulnerabilities), see SA-2008-047.\n- Improved error messages during installation.\n- Fixed a bug that prevented AHAH handlers to be attached to radios widgets.\n- Fixed a variety of small bugs.\n\nDrupal 6.3, 2008-07-09\n----------------------\n- Fixed security issues, (Cross site scripting, cross site request forgery,\n  session fixation and SQL injection), see SA-2008-044.\n- Slightly modified installation process to prevent file ownership issues on\n  shared hosts.\n- Improved PostgreSQL compatibility (rewritten queries; custom blocks).\n- Upgraded to jQuery 1.2.6.\n- Performance improvements to search, menu handling and form API caches.\n- Fixed Views compatibility issues (Views for Drupal 6 requires Drupal 6.3+).\n- Fixed a variety of small bugs.\n\nDrupal 6.2, 2008-04-09\n----------------------\n- Fixed a variety of small bugs.\n- Fixed a security issue (Access bypasses), see SA-2008-026.\n\nDrupal 6.1, 2008-02-27\n----------------------\n- Fixed a variety of small bugs.\n- Fixed a security issue (Cross site scripting), see SA-2008-018.\n\nDrupal 6.0, 2008-02-13\n----------------------\n- New, faster and better menu system.\n- New watchdog as a hook functionality.\n   * New hook_watchdog that can be implemented by any module to route log\n     messages to various destinations.\n   * Expands the severity levels from 3 (Error, Warning, Notice) to the 8\n     levels defined in RFC 3164.\n   * The watchdog module is now called dblog, and is optional, but enabled by\n     default in the default install profile.\n   * Extended the database log module so log messages can be filtered.\n   * Added syslog module: useful for monitoring large Drupal installations.\n- Added optional e-mail notifications when users are approved, blocked, or\n  deleted.\n- Drupal works with error reporting set to E_ALL.\n- Added scripts/drupal.sh to execute Drupal code from the command line. Useful\n  to use Drupal as a framework to build command-line tools.\n- Made signature support optional and made it possible to theme signatures.\n- Made it possible to filter the URL aliases on the URL alias administration\n  screen.\n- Language system improvements:\n    * Support for right to left languages.\n    * Language detection based on parts of the URL.\n    * Browser based language detection.\n    * Made it possible to specify a node's language.\n    * Support for translating posts on the site to different languages.\n    * Language dependent path aliases.\n    * Automatically import translations when adding a new language.\n    * JavaScript interface translation.\n    * Automatically import a module's translation upon enabling that module.\n- Moved \"PHP input filter\" to a standalone module so it can be deleted for\n  security reasons.\n- Usability:\n    * Improved handling of teasers in posts.\n    * Added sticky table headers.\n    * Check for clean URL support automatically with JavaScript.\n    * Removed default/settings.php. Instead the installer will create it from\n      default.settings.php.\n    * Made it possible to configure your own date formats.\n    * Remember anonymous comment posters.\n    * Only allow modules and themes to be enabled that have explicitly been\n      ported to the correct core API version.\n    * Can now specify the minimum PHP version required for a module within the\n      .info file.\n    * Drupal core no longer requires CREATE TEMPORARY TABLES or LOCK TABLES\n      database rights.\n    * Dynamically check password strength and confirmation.\n    * Refactored poll administration.\n    * Implemented drag-and-drop positioning for blocks, menu items, taxonomy\n      vocabularies and terms, forums, profile fields, and input format filters.\n- Theme system:\n    * Added .info files to themes and made it easier to specify regions and\n      features.\n    * Added theme registry: modules can directly provide .tpl.php files for\n      their themes without having to create theme_ functions.\n    * Used the Garland theme for the installation and maintenance pages.\n    * Added theme preprocess functions for themes that are templates.\n    * Added support for themeable functions in JavaScript.\n- Refactored update.php to a generic batch API to be able to run time-consuming\n  operations in multiple subsequent HTTP requests.\n- Installer:\n    * Themed the installer with the Garland theme.\n    * Added form to provide initial site information during installation.\n    * Added ability to provide extra installation steps programmatically.\n    * Made it possible to import interface translations at install time.\n- Added the HTML corrector filter:\n    * Fixes faulty and chopped off HTML in postings.\n    * Tags are now automatically closed at the end of the teaser.\n- Performance:\n    * Made it easier to conditionally load .include files and split up many core\n      modules.\n    * Added a JavaScript aggregator.\n    * Added block-level caching, improving performance for both authenticated\n      and anonymous users.\n    * Made Drupal work correctly when running behind a reverse proxy like\n      Squid or Pound.\n- File handling improvements:\n    * Entries in the files table are now keyed to a user instead of a node.\n    * Added reusable validation functions to check for uploaded file sizes,\n      extensions, and image resolution.\n    * Added ability to create and remove temporary files during a cron job.\n- Forum improvements:\n    * Any node type may now be posted in a forum.\n- Taxonomy improvements:\n    * Descriptions for terms are now shown on taxonomy/term pages as well\n      as RSS feeds.\n    * Added versioning support to categories by associating them with node\n      revisions.\n- Added support for OpenID.\n- Added support for triggering configurable actions.\n- Added the Update status module to automatically check for available updates\n  and warn sites if they are missing security updates or newer versions.\n  Sites deploying from CVS should use http://drupal.org/project/cvs_deploy.\n  Advanced settings provided by http://drupal.org/project/update_advanced.\n- Upgraded the core JavaScript library to jQuery version 1.2.3.\n- Added a new Schema API, which provides built-in support for core and\n  contributed modules to work with databases other than MySQL.\n- Removed drupal.module. The functionality lives on as the Site network\n  contributed module (http://drupal.org/project/site_network).\n- Removed old system updates. Updates from Drupal versions prior to 5.x will\n  require upgrading to 5.x before upgrading to 6.x.\n\nDrupal 5.23, 2010-08-11\n-----------------------\n- Fixed security issues (File download access bypass, Comment unpublishing\n  bypass), see SA-CORE-2010-002.\n\nDrupal 5.22, 2010-03-03\n-----------------------\n- Fixed security issues (Open redirection, Locale module cross site scripting,\n  Blocked user session regeneration), see SA-CORE-2010-001.\n\nDrupal 5.21, 2009-12-16\n-----------------------\n- Fixed a security issue (Cross site scripting), see SA-CORE-2009-009.\n- Fixed a variety of small bugs.\n\nDrupal 5.20, 2009-09-16\n-----------------------\n- Avoid security problems resulting from writing Drupal 6-style menu declarations.\n- Fixed security issues (session fixation), see SA-CORE-2009-008.\n- Fixed a variety of small bugs.\n\nDrupal 5.19, 2009-07-01\n-----------------------\n- Fixed security issues (Cross site scripting and Password leakage in URL), see SA-CORE-2009-007.\n- Fixed a variety of small bugs.\n\nDrupal 5.18, 2009-05-13\n----------------------\n- Fixed security issues (Cross site scripting), see SA-CORE-2009-006.\n- Fixed a variety of small bugs.\n\nDrupal 5.17, 2009-04-29\n-----------------------\n- Fixed security issues (Cross site scripting and limited information disclosure) see SA-CORE-2009-005.\n- Fixed a variety of small bugs.\n\nDrupal 5.16, 2009-02-25\n-----------------------\n- Fixed a security issue, (Local file inclusion on Windows), see SA-CORE-2009-004.\n- Fixed a variety of small bugs.\n\nDrupal 5.15, 2009-01-14\n----------------------\n- Fixed security issues, (Hardening against SQL injection), see SA-CORE-2009-001\n- Fixed HTTP_HOST checking to work again with HTTP 1.0 clients and\n  basic shell scripts.\n- Fixed a variety of small bugs.\n\nDrupal 5.14, 2008-12-11\n----------------------\n- Removed a previous change incompatible with PHP 5.1.x and lower.\n\nDrupal 5.13, 2008-12-10\n-----------------------\n- fixed a variety of small bugs.\n- fixed security issues, (Cross site request forgery and Cross site scripting), see SA-2008-073\n- updated robots.txt and .htaccess to match current file use.\n\nDrupal 5.12, 2008-10-22\n-----------------------\n- fixed security issues, (File inclusion), see SA-2008-067\n\nDrupal 5.11, 2008-10-08\n-----------------------\n- fixed a variety of small bugs.\n- fixed security issues, (File upload access bypass, Access rules bypass,\n  BlogAPI access bypass, Node validation bypass), see SA-2008-060\n\nDrupal 5.10, 2008-08-13\n-----------------------\n- fixed a variety of small bugs.\n- fixed security issues, (Cross site scripting, Arbitrary file uploads via\n  BlogAPI and Cross site request forgery), see SA-2008-047\n\nDrupal 5.9, 2008-07-23\n----------------------\n- fixed a variety of small bugs.\n- fixed security issues, (Session fixation), see SA-2008-046\n\nDrupal 5.8, 2008-07-09\n----------------------\n- fixed a variety of small bugs.\n- fixed security issues, (Cross site scripting, cross site request forgery, and\n  session fixation), see SA-2008-044\n\nDrupal 5.7, 2008-01-28\n----------------------\n- fixed the input format configuration page.\n- fixed a variety of small bugs.\n\nDrupal 5.6, 2008-01-10\n----------------------\n- fixed a variety of small bugs.\n- fixed a security issue (Cross site request forgery), see SA-2008-005\n- fixed a security issue (Cross site scripting, UTF8), see SA-2008-006\n- fixed a security issue (Cross site scripting, register_globals), see SA-2008-007\n\nDrupal 5.5, 2007-12-06\n----------------------\n- fixed missing missing brackets in a query in the user module.\n- fixed taxonomy feed bug introduced by SA-2007-031\n\nDrupal 5.4, 2007-12-05\n----------------------\n- fixed a variety of small bugs.\n- fixed a security issue (SQL injection), see SA-2007-031\n\nDrupal 5.3, 2007-10-17\n----------------------\n- fixed a variety of small bugs.\n- fixed a security issue (HTTP response splitting), see SA-2007-024\n- fixed a security issue (Arbitrary code execution via installer), see SA-2007-025\n- fixed a security issue (Cross site scripting via uploads), see SA-2007-026\n- fixed a security issue (User deletion cross site request forgery), see SA-2007-029\n- fixed a security issue (API handling of unpublished comment), see SA-2007-030\n\nDrupal 5.2, 2007-07-26\n----------------------\n- changed hook_link() $teaser argument to match documentation.\n- fixed a variety of small bugs.\n- fixed a security issue (cross-site request forgery), see SA-2007-017\n- fixed a security issue (cross-site scripting), see SA-2007-018\n\nDrupal 5.1, 2007-01-29\n----------------------\n- fixed security issue (code execution), see SA-2007-005\n- fixed a variety of small bugs.\n\nDrupal 5.0, 2007-01-15\n----------------------\n- Completely retooled the administration page\n    * /Admin now contains an administration page which may be themed\n    * Reorganised administration menu items by task and by module\n    * Added a status report page with detailed PHP/MySQL/Drupal information\n- Added web-based installer which can:\n    * Check installation and run-time requirements\n    * Automatically generate the database configuration file\n    * Install pre-made 'install profiles' or distributions\n    * Import the database structure with automatic table prefixing\n    * Be localized\n- Added new default Garland theme\n- Added color module to change some themes' color schemes\n- Included the jQuery JavaScript library 1.0.4 and converted all core JavaScript to use it\n- Introduced the ability to alter mail sent from system\n- Module system:\n    * Added .info files for module meta-data\n    * Added support for module dependencies\n    * Improved module installation screen\n    * Moved core modules to their own directories\n    * Added support for module uninstalling\n- Added support for different cache backends\n- Added support for a generic \"sites/all\" directory.\n- Usability:\n    * Added support for auto-complete forms (AJAX) to user profiles.\n    * Made it possible to instantly assign roles to newly created user accounts.\n    * Improved configurability of the contact forms.\n    * Reorganized the settings pages.\n    * Made it easy to investigate popular search terms.\n    * Added a 'select all' checkbox and a range select feature to administration tables.\n    * Simplified the 'break' tag to split teasers from body.\n    * Use proper capitalization for titles, menu items and operations.\n- Integrated urlfilter.module into filter.module\n- Block system:\n    * Extended the block visibility settings with a role specific setting.\n    * Made it possible to customize all block titles.\n- Poll module:\n    * Optionally allow people to inspect all votes.\n    * Optionally allow people to cancel their vote.\n- Distributed authentication:\n    * Added default server option.\n- Added default robots.txt to control crawlers.\n- Database API:\n    * Added db_table_exists().\n- Blogapi module:\n    * 'Blogapi new' and 'blogapi edit' nodeapi operations.\n- User module:\n    * Added hook_profile_alter().\n    * E-mail verification is made optional.\n    * Added mass editing and filtering on admin/user/user.\n- PHP Template engine:\n    * Add the ability to look for a series of suggested templates.\n    * Look for page templates based upon the path.\n    * Look for block templates based upon the region, module, and delta.\n- Content system:\n    * Made it easier for node access modules to work well with each other.\n    * Added configurable content types.\n    * Changed node rendering to work with structured arrays.\n- Performance:\n    * Improved session handling: reduces database overhead.\n    * Improved access checking: reduces database overhead.\n    * Made it possible to do memcached based session management.\n    * Omit sidebars when serving a '404 - Page not found': saves CPU cycles and bandwidth.\n    * Added an 'aggressive' caching policy.\n    * Added a CSS aggregator and compressor (up to 40% faster page loads).\n- Removed the archive module.\n- Upgrade system:\n    * Created space for update branches.\n- Forms API:\n    * Made it possible to programmatically submit forms.\n    * Improved api for multistep forms.\n- Theme system:\n    * Split up and removed drupal.css.\n    * Added nested lists generation.\n    * Added a self-clearing block class.\n\nDrupal 4.7.11, 2008-01-10\n-------------------------\n- fixed a security issue (Cross site request forgery), see SA-2008-005\n- fixed a security issue (Cross site scripting, UTF8), see SA-2008-006\n- fixed a security issue (Cross site scripting, register_globals), see SA-2008-007\n\nDrupal 4.7.10, 2007-12-06\n-------------------------\n- fixed taxonomy feed bug introduced by SA-2007-031\n\nDrupal 4.7.9, 2007-12-05\n------------------------\n- fixed a security issue (SQL injection), see SA-2007-031\n\nDrupal 4.7.8, 2007-10-17\n----------------------\n- fixed a security issue (HTTP response splitting), see SA-2007-024\n- fixed a security issue (Cross site scripting via uploads), see SA-2007-026\n- fixed a security issue (API handling of unpublished comment), see SA-2007-030\n\nDrupal 4.7.7, 2007-07-26\n------------------------\n- fixed security issue (XSS), see SA-2007-018\n\nDrupal 4.7.6, 2007-01-29\n------------------------\n- fixed security issue (code execution), see SA-2007-005\n\nDrupal 4.7.5, 2007-01-05\n------------------------\n- Fixed security issue (XSS), see SA-2007-001\n- Fixed security issue (DoS), see SA-2007-002\n\nDrupal 4.7.4, 2006-10-18\n------------------------\n- Fixed security issue (XSS), see SA-2006-024\n- Fixed security issue (CSRF), see SA-2006-025\n- Fixed security issue (Form action attribute injection), see SA-2006-026\n\nDrupal 4.7.3, 2006-08-02\n------------------------\n- Fixed security issue (XSS), see SA-2006-011\n\nDrupal 4.7.2, 2006-06-01\n------------------------\n- Fixed critical upload issue, see SA-2006-007\n- Fixed taxonomy XSS issue, see SA-2006-008\n- Fixed a variety of small bugs.\n\nDrupal 4.7.1, 2006-05-24\n------------------------\n- Fixed critical SQL issue, see SA-2006-005\n- Fixed a serious upgrade related bug.\n- Fixed a variety of small bugs.\n\nDrupal 4.7.0, 2006-05-01\n------------------------\n- Added free tagging support.\n- Added a site-wide contact form.\n- Theme system:\n    * Added the PHPTemplate theme engine and removed the Xtemplate engine.\n    * Converted the bluemarine theme from XTemplate to PHPTemplate.\n    * Converted the pushbutton theme from XTemplate to PHPTemplate.\n- Usability:\n    * Reworked the 'request new password' functionality.\n    * Reworked the node and comment edit forms.\n    * Made it easy to add nodes to the navigation menu.\n    * Added site 'offline for maintenance' feature.\n    * Added support for auto-complete forms (AJAX).\n    * Added support for collapsible page sections (JS).\n    * Added support for resizable text fields (JS).\n    * Improved file upload functionality (AJAX).\n    * Reorganized some settings pages.\n    * Added friendly database error screens.\n    * Improved styling of update.php.\n- Refactored the forms API.\n    * Made it possible to alter, extend or theme forms.\n- Comment system:\n    * Added support for \"mass comment operations\" to ease repetitive tasks.\n    * Comment moderation has been removed.\n- Node system:\n    * Reworked the revision functionality.\n    * Removed the bookmarklet code. Third-party modules can now handle\n      This.\n- Upgrade system:\n    * Allows contributed modules to plug into the upgrade system.\n- Profiles:\n    * Added a block to display author information along with posts.\n    * Added support for private profile fields.\n- Statistics module:\n    * Added the ability to track page generation times.\n    * Made it possible to block certain IPs/hostnames.\n- Block system:\n    * Added support for theme-specific block regions.\n- Syndication:\n    * Made the aggregator module parse Atom feeds.\n    * Made the aggregator generate RSS feeds.\n    * Added RSS feed settings.\n- XML-RPC:\n    * Replaced the XML-RPC library by a better one.\n- Performance:\n    * Added 'loose caching' option for high-traffic sites.\n    * Improved performance of path aliasing.\n    * Added the ability to track page generation times.\n- Internationalization:\n    * Improved Unicode string handling API.\n    * Added support for PHP's multibyte string module.\n- Added support for PHP5's 'mysqli' extension.\n- Search module:\n    * Made indexer smarter and more robust.\n    * Added advanced search operators (e.g. phrase, node type, ...).\n    * Added customizable result ranking.\n- PostgreSQL support:\n    * Removed dependency on PL/pgSQL procedural language.\n- Menu system:\n    * Added support for external URLs.\n- Queue module:\n    * Removed from core.\n- HTTP handling:\n    * Added support for a tolerant Base URL.\n    * Output URIs relative to the root, without a base tag.\n\nDrupal 4.6.11, 2007-01-05\n-------------------------\n- Fixed security issue (XSS), see SA-2007-001\n- Fixed security issue (DoS), see SA-2007-002\n\nDrupal 4.6.10, 2006-10-18\n------------------------\n- Fixed security issue (XSS), see SA-2006-024\n- Fixed security issue (CSRF), see SA-2006-025\n- Fixed security issue (Form action attribute injection), see SA-2006-026\n\nDrupal 4.6.9, 2006-08-02\n------------------------\n- Fixed security issue (XSS), see SA-2006-011\n\nDrupal 4.6.8, 2006-06-01\n------------------------\n- Fixed critical upload issue, see SA-2006-007\n- Fixed taxonomy XSS issue, see SA-2006-008\n\nDrupal 4.6.7, 2006-05-24\n------------------------\n- Fixed critical SQL issue, see SA-2006-005\n\nDrupal 4.6.6, 2006-03-13\n------------------------\n- Fixed bugs, including 4 security vulnerabilities.\n\nDrupal 4.6.5, 2005-12-12\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.6.4, 2005-11-30\n------------------------\n- Fixed bugs, including 3 security vulnerabilities.\n\nDrupal 4.6.3, 2005-08-15\n------------------------\n- Fixed bugs, including a critical \"arbitrary PHP code execution\" bug.\n\nDrupal 4.6.2, 2005-06-29\n------------------------\n- Fixed bugs, including two critical \"arbitrary PHP code execution\" bugs.\n\nDrupal 4.6.1, 2005-06-01\n------------------------\n- Fixed bugs, including a critical input validation bug.\n\nDrupal 4.6.0, 2005-04-15\n------------------------\n- PHP5 compliance\n- Search:\n    * Added UTF-8 support to make it work with all languages.\n    * Improved search indexing algorithm.\n    * Improved search output.\n    * Impose a throttle on indexing of large sites.\n    * Added search block.\n- Syndication:\n    * Made the ping module ping pingomatic.com which, in turn, will ping all the major ping services.\n    * Made Drupal generate RSS 2.0 feeds.\n    * Made RSS feeds extensible.\n    * Added categories to RSS feeds.\n    * Added enclosures to RSS feeds.\n- Flood control mechanism:\n    * Added a mechanism to throttle certain operations.\n- Usability:\n    * Refactored the block configuration pages.\n    * Refactored the statistics pages.\n    * Refactored the watchdog pages.\n    * Refactored the throttle module configuration.\n    * Refactored the access rules page.\n    * Refactored the content administration page.\n    * Introduced forum configuration pages.\n    * Added a 'add child page' link to book pages.\n- Contact module:\n    * Added a simple contact module that allows users to contact each other using e-mail.\n- Multi-site configuration:\n    * Made it possible to run multiple sites from a single code base.\n- Added an image API: enables better image handling.\n- Block system:\n    * Extended the block visibility settings.\n- Theme system:\n    * Added new theme functions.\n- Database backend:\n    * The PEAR database backend is no longer supported.\n- Performance:\n    * Improved performance of the forum topics block.\n    * Improved performance of the tracker module.\n    * Improved performance of the node pages.\n- Documentation:\n    * Improved and extended PHPDoc/Doxygen comments.\n\nDrupal 4.5.8, 2006-03-13\n------------------------\n- Fixed bugs, including 3 security vulnerabilities.\n\nDrupal 4.5.7, 2005-12-12\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.5.6, 2005-11-30\n------------------------\n- Fixed bugs, including 3 security vulnerabilities.\n\nDrupal 4.5.5, 2005-08-15\n------------------------\n- Fixed bugs, including a critical \"arbitrary PHP code execution\" bug.\n\nDrupal 4.5.4, 2005-06-29\n------------------------\n- Fixed bugs, including two critical \"arbitrary PHP code execution\" bugs.\n\nDrupal 4.5.3, 2005-06-01\n------------------------\n- Fixed bugs, including a critical input validation bug.\n\nDrupal 4.5.2, 2005-01-15\n------------------------\n- Fixed bugs: a cross-site scripting (XSS) vulnerability has been fixed.\n\nDrupal 4.5.1, 2004-12-01\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.5.0, 2004-10-18\n------------------------\n- Navigation:\n    * Made it possible to add, delete, rename and move menu items.\n    * Introduced tabs and subtabs for local tasks.\n    * Reorganized the navigation menus.\n- User management:\n    * Added support for multiple roles per user.\n    * Made it possible to add custom profile fields.\n    * Made it possible to browse user profiles by field.\n- Node system:\n    * Added support for node-level permissions.\n- Comment module:\n    * Made it possible to leave contact information without having to register.\n- Upload module:\n    * Added support for uploading documents (includes images).\n- Forum module:\n    * Added support for sticky forum topics.\n    * Made it possible to track forum topics.\n- Syndication:\n    * Added support for RSS ping-notifications of http://technorati.com/.\n    * Refactored the categorization of syndicated news items.\n    * Added an URL alias for 'rss.xml'.\n    * Improved date parsing.\n- Database backend:\n    * Added support for multiple database connections.\n    * The PostgreSQL backend does no longer require PEAR.\n- Theme system:\n    * Changed all GIFs to PNGs.\n    * Reorganised the handling of themes, template engines, templates and styles.\n    * Unified and extended the available theme settings.\n    * Added theme screenshots.\n- Blocks:\n    * Added 'recent comments' block.\n    * Added 'categories' block.\n- Blogger API:\n    * Added support for auto-discovery of blogger API via RSD.\n- Performance:\n    * Added support for sending gzip compressed pages.\n    * Improved performance of the forum module.\n- Accessibility:\n    * Improved the accessibility of the archive module's calendar.\n    * Improved form handling and error reporting.\n    * Added HTTP redirects to prevent submitting twice when refreshing right after a form submission.\n- Refactored 403 (forbidden) handling and added support for custom 403 pages.\n- Documentation:\n    * Added PHPDoc/Doxygen comments.\n- Filter system:\n    * Added support for using multiple input formats on the site\n    * Expanded the embedded PHP-code feature so it can be used everywhere\n    * Added support for role-dependant filtering, through input formats\n- UI translation:\n    * Managing translations is now completely done through the administration interface\n    * Added support for importing/exporting gettext .po files\n\nDrupal 4.4.3, 2005-06-01\n------------------------\n- Fixed bugs, including a critical input validation bug.\n\nDrupal 4.4.2, 2004-07-04\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.4.1, 2004-05-01\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.4.0, 2004-04-01\n------------------------\n- Added support for the MetaWeblog API and MovableType extensions.\n- Added a file API: enables better document management.\n- Improved the watchdog and search module to log search keys.\n- News aggregator:\n    * Added support for conditional GET.\n    * Added OPML feed subscription list.\n    * Added support for <image>, <pubDate>, <dc:date>, <dcterms:created>, <dcterms:issued> and <dcterms:modified>.\n- Comment module:\n    * Made it possible to disable the \"comment viewing controls\".\n- Performance:\n    * Improved module loading when serving cached pages.\n    * Made it possible to automatically disable modules when under heavy load.\n    * Made it possible to automatically disable blocks when under heavy load.\n    * Improved performance and memory footprint of the locale module.\n- Theme system:\n    * Made all theme functions start with 'theme_'.\n    * Made all theme functions return their output.\n    * Migrated away from using the BaseTheme class.\n    * Added many new theme functions and refactored existing theme functions.\n    * Added avatar support to 'Xtemplate'.\n    * Replaced theme 'UnConeD' by 'Chameleon'.\n    * Replaced theme 'Marvin' by 'Pushbutton'.\n- Usability:\n    * Added breadcrumb navigation to all pages.\n    * Made it possible to add context-sensitive help to all pages.\n    * Replaced drop-down menus by radio buttons where appropriate.\n    * Removed the 'magic_quotes_gpc = 0' requirement.\n    * Added a 'book navigation' block.\n- Accessibility:\n    * Made themes degrade gracefully in absence of CSS.\n    * Grouped form elements using '<fieldset>' and '<legend>' tags.\n    * Added '<label>' tags to form elements.\n- Refactored 404 (file not found) handling and added support for custom 404 pages.\n- Improved the filter system to prevent conflicts between filters:\n    * Made it possible to change the order in which filters are applied.\n- Documentation:\n    * Added PHPDoc/Doxygen comments.\n\nDrupal 4.3.2, 2004-01-01\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.3.1, 2003-12-01\n------------------------\n- Fixed bugs: no critical bugs were identified.\n\nDrupal 4.3.0, 2003-11-01\n------------------------\n- Added support for configurable URLs.\n- Added support for sortable table columns.\n- Database backend:\n    * Added support for selective database table prefixing.\n- Performance:\n    * Optimized many SQL queries for speed by converting left joins to inner joins.\n- Comment module:\n    * Rewrote the comment housekeeping code to be much more efficient and scalable.\n    * Changed the comment module to use the standard pager.\n- User module:\n    * Added support for multiple sessions per user.\n    * Added support for anonymous user sessions.\n- Forum module:\n    * Improved the forum views and the themability thereof.\n- Book module:\n    * Improved integration of non-book nodes in the book outline.\n- Usability:\n    * Added support for \"mass node operations\" to ease repetitive tasks.\n    * Added support for breadcrumb navigation to several modules' user pages.\n    * Integrated the administration pages with the normal user pages.\n\nDrupal 4.2.0, 2003-08-01\n------------------------\n- Added support for clean URLs.\n- Added textarea hook and support for onload attributes: enables integration of WYSIWYG editors.\n- Rewrote the RSS/RDF parser:\n    * It will now use PHP's built-in XML parser to parse news feeds.\n- Rewrote the administration pages:\n    * Improved the navigational elements and added breadcrumb navigation.\n    * Improved the look and feel.\n    * Added context-sensitive help.\n- Database backend:\n    * Fixed numerous SQL queries to make Drupal ANSI compliant.\n    * Added MSSQL database scheme.\n- Search module:\n    * Changed the search module to use implicit AND'ing instead of implicit OR'ing.\n- Node system:\n    * Replaced the \"post content\" permission by more fine-grained permissions.\n    * Improved content submission:\n        + Improved teasers: teasers are now optional, teaser length can be configured, teaser and body are edited in a single textarea, users will no longer be bothered with teasers when the post is too short for one.\n        + Added the ability to preview both the short and the full version of your posts.\n    * Extended the node API which allows for better integration.\n    * Added default node settings to control the behavior for promotion, moderation and other options.\n- Themes:\n    * Replaced theme \"Goofy\" by \"Xtemplate\", a template driven theme.\n- Removed the 'register_globals = on' requirement.\n- Added better installation instructions.\n\nDrupal 4.1.0, 2003-02-01\n------------------------\n- Collaboratively revised and expanded the Drupal documentation.\n- Rewrote comment.module:\n    * Reintroduced comment rating/moderation.\n    * Added support for comment paging.\n    * Performance improvements: improved comment caching, faster SQL queries, etc.\n- Rewrote block.module:\n    * Performance improvements: blocks are no longer rendered when not displayed.\n- Rewrote forum.module:\n    * Added a lot of features one can find in stand-alone forum software including but not limited to support for topic paging, added support for icons, rewrote the statistics module, etc.\n- Rewrote statistics.module:\n    * Collects access counts for each node, referrer logs, number of users/guests.\n    * Export blocks displaying top viewed nodes over last 24 hour period, top viewed nodes over all time, last nodes viewed, how many users/guest online.\n- Added throttle.module:\n    * Auto-throttle congestion control mechanism: Drupal can adapt itself based on the server load.\n- Added profile.module:\n    * Enables to extend the user and registration page.\n- Added pager support to the main page.\n- Replaced weblogs.module by ping.module:\n    * Added support for normal and RSS notifications of http://blo.gs/.\n    * Added support for RSS ping-notifications of http://weblogs.com/.\n- Removed the rating module\n- Themes:\n    * Removed a significant portion of hard-coded mark-up.\n\nDrupal 4.0.0, 2002-06-15\n------------------------\n- Added tracker.module:\n    * Replaces the previous \"your [site]\" links (recent comments and nodes).\n- Added weblogs.module:\n    * This will ping weblogs.com when new content is promoted.\n- Added taxonomy module which replaces the meta module.\n    * Supports relations, hierarchies and synonyms.\n- Added a caching system:\n    * Speeds up pages for anonymous users and reduces system load.\n- Added support for external SMTP libraries.\n- Added an archive extension to the calendar.\n- Added support for the Blogger API.\n- Themes:\n    * Cleaned up the theme system.\n    * Moved themes that are not maintained to contributions CVS repository.\n- Database backend:\n    * Changed to PEAR database abstraction layer.\n    * Using ANSI SQL queries to be more portable.\n- Rewrote the user system:\n    * Added support for Drupal authentication through XML-RPC and through a Jabber server.\n    * Added support for modules to add more user data.\n    * Users may delete their own account.\n    * Added who's new and who's online blocks.\n- Changed block system:\n    * Various hard coded blocks are now dynamic.\n    * Blocks can now be enabled and/or be set by the user.\n    * Blocks can be set to only show up on some pages.\n    * Merged box module with block module.\n- Node system:\n    * Blogs can be updated.\n    * Teasers (abstracts) on all node types.\n    * Improved error checking.\n    * Content versioning support.\n    * Usability improvements.\n- Improved book module to support text, HTML and PHP pages.\n- Improved comment module to mark new comments.\n- Added a general outliner which will let any node type be linked to a book.\n- Added an update script that lets you upgrade from previous releases or on a day to day basis when using the development tree.\n- Search module:\n    * Improved the search system by making it context sensitive.\n    * Added indexing.\n- Various updates:\n    * Changed output to valid XHTML.\n    * Improved multiple sites using the same Drupal database support.\n    * Added support for session IDs in URLs instead of cookies.\n    * Made the type of content on the front page configurable.\n    * Made each cloud site have its own settings.\n    * Modules and themes can now be enabled/disabled using the administration pages.\n    * Added URL abstraction for links.\n    * Usability changes (renamed links, better UI, etc).\n- Collaboratively revised and expanded the Drupal documentation.\n\nDrupal 3.0.1, 2001-10-15\n------------------------\n- Various updates:\n    * Added missing translations\n    * Updated the themes: tidied up some HTML code and added new Drupal logos.\n\nDrupal 3.0.0, 2001-09-15\n------------------------\n- Major overhaul of the entire underlying design:\n    * Everything is based on nodes: nodes are a conceptual \"black box\" to couple and manage different types of content and that promotes reusing existing code, thus reducing the complexity and size of Drupal as well as improving long-term stability.\n- Rewrote submission/moderation queue and renamed it to queue.module.\n- Removed FAQ and documentation module and merged them into a \"book module\".\n- Removed ban module and integrated it into account.module as \"access control\":\n    * Access control is based on much more powerful regular expressions (regex) now rather than on MySQL pattern matching.\n- Rewrote watchdog and submission throttle:\n    * Improved watchdog messages and added watchdog filter.\n- Rewrote headline code and renamed it to import.module and export.module:\n    * Added various improvements, including a better parser, bundles and better control over individual feeds.\n- Rewrote section code and renamed it to meta.module:\n    * Supports unlimited amount of nested topics. Topics can be nested to create a multi-level hierarchy.\n- Rewrote configuration file resolving:\n    * Drupal tries to locate a configuration file that matches your domain name or uses conf.php if the former failed. Note also that the configuration files got renamed from .conf to .php for security's sake on mal-configured Drupal sites.\n- Added caching support which makes Drupal extremely scalable.\n- Added access.module:\n    * Allows you to set up 'roles' (groups) and to bind a set of permissions to each group.\n- Added blog.module.\n- Added poll.module.\n- Added system.module:\n    * Moved most of the configuration options from hostname.conf to the new administration section.\n    * Added support for custom \"filters\".\n- Added statistics.module\n- Added moderate.module:\n    * Allows to assign users editorial/moderator rights to certain nodes or topics.\n- Added page.module:\n    * Allows creation of static (and dynamic) pages through the administration interface.\n- Added help.module:\n    * Groups all available module documentation on a single page.\n- Added forum.module:\n    * Added an integrated forum.\n- Added cvs.module and cvs-to-sql.pl:\n    * Allows to display and mail CVS log messages as daily digests.\n- Added book.module:\n    * Allows collaborative handbook writing: primary used for Drupal documentation.\n- Removed cron.module and integrated it into conf.module.\n- Removed module.module as it was no longer needed.\n- Various updates:\n    * Added \"auto-post new submissions\" feature versus \"moderate new submissions\".\n    * Introduced links/Drupal tags: [[link]]\n    * Added preview functionality when submitting new content (such as a story) from the administration pages.\n    * Made the administration section only show those links a user has access to.\n    * Made all modules use specific form_* functions to guarantee a rock-solid forms and more consistent layout.\n    * Improved scheduler:\n        + Content can be scheduled to be 'posted', 'queued' and 'hidden'.\n    * Improved account module:\n        + Added \"access control\" to allow/deny certain usernames/e-mail addresses/hostnames.\n    * Improved locale module:\n        + Added new overview to easy the translation process.\n    * Improved comment module:\n        + Made it possible to permanently delete comments.\n    * Improved rating module\n    * Improved story module:\n        + Added preview functionality for administrators.\n        + Made it possible to permanently delete stories.\n    * Improved themes:\n        + W3C validation on a best effort basis.\n        + Removed $theme->control() from themes.\n        + Added theme \"goofy\".\n- Collaboratively revised and expanded the Drupal documentation.\n\nDrupal 2.0.0, 2001-03-15\n------------------------\n- Rewrote the comment/discussion code:\n    * Comment navigation should be less confusing now.\n    * Additional/alternative display and order methods have been added.\n    * Modules can be extended with a \"comment system\": modules can embed the existing comment system without having to write their own, duplicate comment system.\n- Added sections and section manager:\n    * Story sections can be maintained from the administration pages.\n    * Story sections make the open submission more adaptive in that you can set individual post, dump and expiration thresholds for each section according to the story type and urgency level: stories in certain sections do not \"expire\" and might stay interesting and active as time passes by, whereas news-related stories are only considered \"hot\" over a short period of time.\n- Multiple vhosts + multiple directories:\n    * You can set up multiple Drupal sites on top of the same physical source tree either by using vhosts or sub-directories.\n- Added \"user ratings\" similar to SlashCode's Karma or Scoop's Mojo:\n    * All rating logic is packed into a module to ease experimenting with different rating heuristics/algorithms.\n- Added \"search infrastructure\":\n    * Improved search page and integrated search functionality in the administration pages.\n- Added translation / localization / internationalization support:\n    * Because many people would love to see their website showing a lot less of English, and far more of their own language, Drupal provides a framework to set up a multi-lingual website or to overwrite the default English text in English.\n- Added fine-grained user permission (or group) system:\n    * Users can be granted access to specific administration sections. Example: a FAQ maintainer can be given access to maintain the FAQ and translators can be given access to the translation pages.\n- Added FAQ module\n- Changed the \"open submission queue\" into a (optional) module.\n- Various updates:\n    * Improved account module:\n        + User accounts can be deleted.\n        + Added fine-grained permission support.\n    * Improved block module\n    * Improved diary module:\n        + Diary entries can be deleted\n    * Improved headline module:\n        + Improved parser to support more \"generic\" RDF/RSS/XML backend.\n    * Improved module module\n    * Improved watchdog module\n    * Improved database abstraction layer\n    * Improved themes:\n        + W3C validation on a best effort basis\n        + Added theme \"example\" (alias \"Stone Age\")\n    * Added new scripts to directory \"scripts\"\n    * Added directory \"misc\"\n    * Added CREDITS file\n- Revised documentation\n\nDrupal 1.0.0, 2001-01-15\n------------------------\n- Initial release\n"
        },
        {
          "name": "COPYRIGHT.txt",
          "type": "blob",
          "size": 0.9990234375,
          "content": "All Drupal code is Copyright 2001 - 2012 by the original authors.\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program as the file LICENSE.txt; if not, please see\nhttp://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n\nDrupal is a registered trademark of Dries Buytaert.\n\nDrupal includes works under other copyright notices and distributed\naccording to the terms of the GNU General Public License or a compatible\nlicense, including:\n\nJavascript\n\n  Farbtastic - Copyright (c) 2007 Matt Farina\n\n  jQuery - Copyright (c) 2008 John Resig\n\n  jQuery Form - Copyright (c) 2007 Mike Alsup\n\n"
        },
        {
          "name": "INSTALL.mysql.txt",
          "type": "blob",
          "size": 1.2392578125,
          "content": "\nCREATE THE MySQL DATABASE\n--------------------------\n\nThis step is only necessary if you don't already have a database set-up (e.g. by\nyour host). In the following examples, 'username' is an example MySQL user which\nhas the CREATE and GRANT privileges. Use the appropriate user name for your\nsystem.\n\nFirst, you must create a new database for your Drupal site (here, 'databasename'\nis the name of the new database):\n\n  mysqladmin -u username -p create databasename\n\nMySQL will prompt for the 'username' database password and then create the\ninitial database files. Next you must login and set the access database rights:\n\n  mysql -u username -p\n\nAgain, you will be asked for the 'username' database password. At the MySQL\nprompt, enter following command:\n\n  GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER,\n  CREATE TEMPORARY TABLES ON databasename.*\n  TO 'username'@'localhost' IDENTIFIED BY 'password';\n\nwhere\n\n 'databasename' is the name of your database\n 'username@localhost' is the username of your MySQL account\n 'password' is the password required for that username\n\nNote: Unless your database user has all of the privileges listed above, you will\nnot be able to run Drupal.\n\nIf successful, MySQL will reply with:\n\n  Query OK, 0 rows affected\n\n"
        },
        {
          "name": "INSTALL.pgsql.txt",
          "type": "blob",
          "size": 0.9873046875,
          "content": "\nCREATE THE PostgreSQL DATABASE\n------------------------------\n\nNote that the database must be created with UTF-8 (Unicode) encoding.\n\n1. CREATE DATABASE USER\n\n   This step is only necessary if you don't already have a user set up (e.g.\n   by your host) or you want to create new user for use with Drupal only. The\n   following command creates a new user named \"username\" and asks for a\n   password for that user:\n\n     createuser --pwprompt --encrypted --no-adduser --no-createdb username\n\n   If everything works correctly, you'll see a \"CREATE USER\" notice.\n\n2. CREATE THE DRUPAL DATABASE\n\n   This step is only necessary if you don't already have a database set up (e.g.\n   by your host) or you want to create new database for use with Drupal only.\n   The following command creates a new database named \"databasename\", which is\n   owned by previously created \"username\":\n\n     createdb --encoding=UNICODE --owner=username databasename\n\n   If everything works correctly, you'll see a \"CREATE DATABASE\" notice.\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 15.20703125,
          "content": "\nCONTENTS OF THIS FILE\n---------------------\n\n * Requirements\n * Optional requirements\n * Installation\n * Drupal administration\n * Customizing your theme(s)\n * Multisite Configuration\n * More Information\n\nREQUIREMENTS\n------------\n\nDrupal requires a web server, PHP 4 (4.3.5 or greater) or PHP 5\n(http://www.php.net/) and either MySQL (http://www.mysql.com/) or PostgreSQL\n(http://www.postgresql.org/). The Apache web server and MySQL database are\nrecommended; other web server and database combinations such as IIS and\nPostgreSQL have been tested to a lesser extent. When using MySQL, version 4.1.1\nor greater is recommended to assure you can safely transfer the database.\n\nFor more detailed information about Drupal requirements, see \"Requirements\"\n(http://drupal.org/requirements) in the Drupal handbook.\n\nFor detailed information on how to configure a test server environment using\na variety of operating systems and web servers, see \"Local server setup\"\n(http://drupal.org/node/157602) in the Drupal handbook.\n\nOPTIONAL TASKS\n--------------\n\n- To use XML-based services such as the Blogger API and RSS syndication,\n  you will need PHP's XML extension. This extension is enabled by default.\n\n- To use Drupal's \"Clean URLs\" feature on an Apache web server, you will need\n  the mod_rewrite module and the ability to use local .htaccess files. For\n  Clean URLs support on IIS, see \"Using Clean URLs with IIS\"\n  (http://drupal.org/node/3854) in the Drupal handbook.\n\n- Various Drupal features require that the web server process (for\n  example, httpd) be able to initiate outbound connections. This is usually\n  possible, but some hosting providers or server configurations forbid such\n  connections. The features that depend on this functionality include the\n  integrated \"Update status\" module (which downloads information about\n  available updates of Drupal core and any installed contributed modules and\n  themes), the ability to log in via OpenID, fetching aggregator feeds, or\n  other network-dependent services.\n\n\nINSTALLATION\n------------\n\n1. DOWNLOAD DRUPAL AND OPTIONALLY A TRANSLATION\n\n   You can obtain the latest Drupal release from http://drupal.org/. The files\n   are in .tar.gz format and can be extracted using most compression tools. On a\n   typical Unix command line, use:\n\n     wget http://drupal.org/files/projects/drupal-x.x.tar.gz\n     tar -zxvf drupal-x.x.tar.gz\n\n   This will create a new directory drupal-x.x/ containing all Drupal files\n   and directories. Move the contents of that directory into a directory within\n   your web server's document root or your public HTML directory:\n\n     mv drupal-x.x/* drupal-x.x/.htaccess /var/www/html\n\n   If you would like to have the default English interface translated to a\n   different language, we have good news. You can install and use Drupal in\n   other languages from the start. Check whether a released package of the\n   language desired is available for this Drupal version at\n   http://localize.drupal.org and download the package. Extract\n   the contents to the same directory where you extracted Drupal into.\n\n2. CREATE THE CONFIGURATION FILE AND GRANT WRITE PERMISSIONS\n\n   Drupal comes with a default.settings.php file in the sites/default\n   directory. The installer uses this file as a template to create your\n   settings file using the details you provide through the install process.\n   To avoid problems when upgrading, Drupal is not packaged with an actual\n   settings file. You must create a file named settings.php. You may do so\n   by making a copy of default.settings.php (or create an empty file with\n   this name in the same directory). For example, (from the installation\n   directory) make a copy of the default.settings.php file with the command:\n\n     cp sites/default/default.settings.php sites/default/settings.php\n\n   Next, give the web server write privileges to the sites/default/settings.php\n   file with the command (from the installation directory):\n\n     chmod o+w sites/default/settings.php\n\n  So that the files directory can be created automatically, give the web server\n  write privileges to the sites/default directory with the command (from the\n  installation directory):\n\n     chmod o+w sites/default\n\n3. CREATE THE DRUPAL DATABASE\n\n   Drupal requires access to a database in order to be installed. Your database\n   user will need sufficient privileges to run Drupal. Additional information\n   about privileges, and instructions to create a database using the command\n   line are available in INSTALL.mysql.txt (for MySQL) or INSTALL.pgsql.txt\n   (for PostgreSQL).\n\n   To create a database using PHPMyAdmin or a web-based control panel consult\n   the documentation or ask your webhost service provider.\n\n   Take note of the username, password, database name and hostname as you\n   create the database. You will enter these items in the install script.\n\n4. RUN THE INSTALL SCRIPT\n\n   To run the install script point your browser to the base URL of your website\n   (e.g., http://www.example.com).\n\n   You will be guided through several screens to set up the database,\n   create tables, add the first user account and provide basic web\n   site settings.\n\n   The install script will attempt to create a files storage directory\n   in the default location at sites/default/files (the location of the\n   files directory may be changed after Drupal is installed). In some\n   cases, you may need to create the directory and modify its permissions\n   manually. Use the following commands (from the installation directory)\n   to create the files directory and grant the web server write privileges to it:\n\n     mkdir sites/default/files\n     chmod o+w sites/default/files\n\n   The install script will attempt to write-protect the settings.php file and\n   the sites/default directory after saving your configuration. However, you\n   may need to manually write-protect them using the commands (from the\n   installation directory):\n\n     chmod a-w sites/default/settings.php\n     chmod a-w sites/default\n\n   If you make manual changes to the file later, be sure to protect it again\n   after making your modifications. Failure to remove write permissions to that\n   file is a security risk. Although the default location for the settings.php\n   file is at sites/default/settings.php, it may be in another location\n   if you use the multi-site setup, as explained below.\n\n5. CONFIGURE DRUPAL\n\n   When the install script succeeds, you will be directed to the \"Welcome\"\n   page, and you will be logged in as the administrator already. Proceed with\n   the initial configuration steps suggested on the \"Welcome\" page.\n\n   If the default Drupal theme is not displaying properly and links on the page\n   result in \"Page Not Found\" errors, try manually setting the $base_url variable\n   in the settings.php file if not already set. It's currently known that servers\n   running FastCGI can run into problems if the $base_url variable is left\n   commented out (see http://bugs.php.net/bug.php?id=19656).\n\n6. REVIEW FILE SYSTEM STORAGE SETTINGS AND FILE PERMISSIONS\n\n   The files directory created in step 4 is the default file system path used\n   to store all uploaded files, as well as some temporary files created by Drupal.\n   After installation, the settings for the file system path may be modified\n   to store uploaded files in a different location.\n\n   It is not necessary to modify this path, but you may wish to change it if:\n\n     * your site runs multiple Drupal installations from a single codebase\n       (modify the file system path of each installation to a different\n       directory so that uploads do not overlap between installations); or,\n\n     * your site runs a number of web server front-ends behind a load\n       balancer or reverse proxy (modify the file system path on each\n       server to point to a shared file repository).\n\n   To modify the file system path:\n\n     * Ensure that the new location for the path exists or create it if\n       necessary. To create a new directory named uploads, for example,\n       use the following command from a shell or system prompt (while in\n       the installation directory):\n\n           mkdir uploads\n\n     * Ensure that the new location for the path is writable by the web\n       server process. To grant write permissions for a directory named\n       uploads, you may need to use the following command from a shell\n       or system prompt (while in the installation directory):\n\n           chmod o+w uploads\n\n     * Access the file system path settings in Drupal by selecting these\n       menu items from the Navigation menu:\n\n           Administer > Site configuration > File system\n\n       Enter the path to the new location (e.g.: uploads) at the File\n       System Path prompt.\n\n   Changing the file system path after files have been uploaded may cause\n   unexpected problems on an existing site. If you modify the file system path\n   on an existing site, remember to copy all files from the original location\n   to the new location.\n\n   Some administrators suggest making the documentation files, especially\n   CHANGELOG.txt, non-readable so that the exact version of Drupal you are\n   running is slightly more difficult to determine. If you wish to implement\n   this optional security measure, use the following command from a shell or\n   system prompt (while in the installation directory):\n\n          chmod a-r CHANGELOG.txt\n\n   Note that the example only affects CHANGELOG.txt. To completely hide\n   all documentation files from public view, repeat this command for each of\n   the Drupal documentation files in the installation directory, substituting the\n   name of each file for CHANGELOG.txt in the example.\n\n   For more information on setting file permissions, see \"Modifying Linux, Unix,\n   and Mac file permissions\" (http://drupal.org/node/202483) or \"Modifying\n   Windows file permissions\" (http://drupal.org/node/202491) in the online\n   handbook.\n\n7. CRON MAINTENANCE TASKS\n\n   Many Drupal modules have periodic tasks that must be triggered by a cron\n   maintenance task, including search module (to build and update the index\n   used for keyword searching), aggregator module (to retrieve feeds from other\n   sites), ping module (to notify other sites about new or updated content), and\n   system module (to perform routine maintenance and pruning on system tables).\n   To activate these tasks, call the cron page by visiting\n   http://www.example.com/cron.php, which, in turn, executes tasks on behalf\n   of installed modules.\n\n   Most systems support the crontab utility for scheduling tasks like this. The\n   following example crontab line will activate the cron tasks automatically on\n   the hour:\n\n   0   *   *   *   *   wget -O - -q -t 1 http://www.example.com/cron.php\n\n   More information about cron maintenance tasks are available in the help pages\n   and in Drupal's online handbook at http://drupal.org/cron. Example scripts can\n   be found in the scripts/ directory.\n\nDRUPAL ADMINISTRATION\n---------------------\n\nA new installation of Drupal defaults to a very basic configuration with only a\nfew active modules and minimal user access rights.\n\nUse your administration panel to enable and configure services. For example:\n\nGeneral Settings       Administer > Site configuration > Site information\nEnable Modules         Administer > Site building > Modules\nConfigure Themes       Administer > Site building > Themes\nSet User Permissions   Administer > User management > Permissions\n\nFor more information on configuration options, read the instructions which\naccompany the different configuration settings and consult the various help\npages available in the administration panel.\n\nCommunity-contributed modules and themes are available at http://drupal.org/.\n\nCUSTOMIZING YOUR THEME(S)\n-------------------------\n\nNow that your installation is running, you will want to customize the look of\nyour site. Several sample themes are included and more can be downloaded from\ndrupal.org.\n\nSimple customization of your theme can be done using only CSS. Further changes\nrequire understanding the phptemplate engine that is part of Drupal. See\nhttp://drupal.org/handbook/customization to find out more.\n\nMULTISITE CONFIGURATION\n-----------------------\n\nA single Drupal installation can host several Drupal-powered sites, each with\nits own individual configuration.\n\nAdditional site configurations are created in subdirectories within the 'sites'\ndirectory. Each subdirectory must have a 'settings.php' file which specifies the\nconfiguration settings. The easiest way to create additional sites is to copy\nthe 'default' directory and modify the 'settings.php' file as appropriate. The\nnew directory name is constructed from the site's URL. The configuration for\nwww.example.com could be in 'sites/example.com/settings.php' (note that 'www.'\nshould be omitted if users can access your site at http://example.com/).\n\nSites do not have to have a different domain. You can also use subdomains and\nsubdirectories for Drupal sites. For example, example.com, sub.example.com,\nand sub.example.com/site3 can all be defined as independent Drupal sites. The\nsetup for a configuration such as this would look like the following:\n\n  sites/default/settings.php\n  sites/example.com/settings.php\n  sites/sub.example.com/settings.php\n  sites/sub.example.com.site3/settings.php\n\nWhen searching for a site configuration (for example www.sub.example.com/site3),\nDrupal will search for configuration files in the following order, using the\nfirst configuration it finds:\n\n  sites/www.sub.example.com.site3/settings.php\n  sites/sub.example.com.site3/settings.php\n  sites/example.com.site3/settings.php\n  sites/www.sub.example.com/settings.php\n  sites/sub.example.com/settings.php\n  sites/example.com/settings.php\n  sites/default/settings.php\n\nIf you are installing on a non-standard port, the port number is treated as the\ndeepest subdomain. For example: http://www.example.com:8080/ could be loaded\nfrom sites/8080.www.example.com/. The port number will be removed according to\nthe pattern above if no port-specific configuration is found, just like a real\nsubdomain.\n\nEach site configuration can have its own site-specific modules and themes in\naddition to those installed in the standard 'modules' and 'themes' directories.\nTo use site-specific modules or themes, simply create a 'modules' or 'themes'\ndirectory within the site configuration directory. For example, if\nsub.example.com has a custom theme and a custom module that should not be\naccessible to other sites, the setup would look like this:\n\n  sites/sub.example.com/:\n  settings.php\n  themes/custom_theme\n  modules/custom_module\n\nNOTE: for more information about multiple virtual hosts or the configuration\nsettings, consult the Drupal handbook at drupal.org.\n\nFor more information on configuring Drupal's file system path in a multi-site\nconfiguration, see step 6 above.\n\nMORE INFORMATION\n----------------\n\n- For additional documentation, see the online Drupal handbook at\n  http://drupal.org/handbook.\n\n- For a list of security announcements, see the \"Security announcements\" page\n  at http://drupal.org/security (available as an RSS feed). This page also\n  describes how to subscribe to these announcements via e-mail.\n\n- For information about the Drupal security process, or to find out how to report\n  a potential security issue to the Drupal security team, see the \"Security team\"\n  page at http://drupal.org/security-team.\n\n- For information about the wide range of available support options, see the\n  \"Support\" page at http://drupal.org/support.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 14.58984375,
          "content": "GNU GENERAL PUBLIC LICENSE\n\n              Version 2, June 1991\n\nCopyright (C) 1989, 1991 Free Software Foundation, Inc. 675 Mass Ave,\nCambridge, MA 02139, USA. Everyone is permitted to copy and distribute\nverbatim copies of this license document, but changing it is not allowed.\n\n                  Preamble\n\nThe licenses for most software are designed to take away your freedom to\nshare and change it. By contrast, the GNU General Public License is\nintended to guarantee your freedom to share and change free software--to\nmake sure the software is free for all its users. This General Public License\napplies to most of the Free Software Foundation's software and to any other\nprogram whose authors commit to using it. (Some other Free Software\nFoundation software is covered by the GNU Library General Public License\ninstead.) You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our\nGeneral Public Licenses are designed to make sure that you have the\nfreedom to distribute copies of free software (and charge for this service if\nyou wish), that you receive source code or can get it if you want it, that you\ncan change the software or use pieces of it in new free programs; and that\nyou know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid anyone to\ndeny you these rights or to ask you to surrender the rights. These restrictions\ntranslate to certain responsibilities for you if you distribute copies of the\nsoftware, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether gratis or for\na fee, you must give the recipients all the rights that you have. You must make\nsure that they, too, receive or can get the source code. And you must show\nthem these terms so they know their rights.\n\nWe protect your rights with two steps: (1) copyright the software, and (2)\noffer you this license which gives you legal permission to copy, distribute\nand/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain that\neveryone understands that there is no warranty for this free software. If the\nsoftware is modified by someone else and passed on, we want its recipients\nto know that what they have is not the original, so that any problems\nintroduced by others will not reflect on the original authors' reputations.\n\nFinally, any free program is threatened constantly by software patents. We\nwish to avoid the danger that redistributors of a free program will individually\nobtain patent licenses, in effect making the program proprietary. To prevent\nthis, we have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow.\n\n           GNU GENERAL PUBLIC LICENSE\n TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND\n               MODIFICATION\n\n0. This License applies to any program or other work which contains a notice\nplaced by the copyright holder saying it may be distributed under the terms\nof this General Public License. The \"Program\", below, refers to any such\nprogram or work, and a \"work based on the Program\" means either the\nProgram or any derivative work under copyright law: that is to say, a work\ncontaining the Program or a portion of it, either verbatim or with\nmodifications and/or translated into another language. (Hereinafter, translation\nis included without limitation in the term \"modification\".) Each licensee is\naddressed as \"you\".\n\nActivities other than copying, distribution and modification are not covered\nby this License; they are outside its scope. The act of running the Program is\nnot restricted, and the output from the Program is covered only if its contents\nconstitute a work based on the Program (independent of having been made\nby running the Program). Whether that is true depends on what the Program\ndoes.\n\n1. You may copy and distribute verbatim copies of the Program's source\ncode as you receive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice and\ndisclaimer of warranty; keep intact all the notices that refer to this License\nand to the absence of any warranty; and give any other recipients of the\nProgram a copy of this License along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and you\nmay at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Program or any portion of it,\nthus forming a work based on the Program, and copy and distribute such\nmodifications or work under the terms of Section 1 above, provided that you\nalso meet all of these conditions:\n\na) You must cause the modified files to carry prominent notices stating that\nyou changed the files and the date of any change.\n\nb) You must cause any work that you distribute or publish, that in whole or in\npart contains or is derived from the Program or any part thereof, to be\nlicensed as a whole at no charge to all third parties under the terms of this\nLicense.\n\nc) If the modified program normally reads commands interactively when run,\nyou must cause it, when started running for such interactive use in the most\nordinary way, to print or display an announcement including an appropriate\ncopyright notice and a notice that there is no warranty (or else, saying that\nyou provide a warranty) and that users may redistribute the program under\nthese conditions, and telling the user how to view a copy of this License.\n(Exception: if the Program itself is interactive but does not normally print such\nan announcement, your work based on the Program is not required to print\nan announcement.)\n\nThese requirements apply to the modified work as a whole. If identifiable\nsections of that work are not derived from the Program, and can be\nreasonably considered independent and separate works in themselves, then\nthis License, and its terms, do not apply to those sections when you distribute\nthem as separate works. But when you distribute the same sections as part\nof a whole which is a work based on the Program, the distribution of the\nwhole must be on the terms of this License, whose permissions for other\nlicensees extend to the entire whole, and thus to each and every part\nregardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest your rights to\nwork written entirely by you; rather, the intent is to exercise the right to\ncontrol the distribution of derivative or collective works based on the\nProgram.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of a\nstorage or distribution medium does not bring the other work under the scope\nof this License.\n\n3. You may copy and distribute the Program (or a work based on it, under\nSection 2) in object code or executable form under the terms of Sections 1\nand 2 above provided that you also do one of the following:\n\na) Accompany it with the complete corresponding machine-readable source\ncode, which must be distributed under the terms of Sections 1 and 2 above\non a medium customarily used for software interchange; or,\n\nb) Accompany it with a written offer, valid for at least three years, to give\nany third party, for a charge no more than your cost of physically performing\nsource distribution, a complete machine-readable copy of the corresponding\nsource code, to be distributed under the terms of Sections 1 and 2 above on\na medium customarily used for software interchange; or,\n\nc) Accompany it with the information you received as to the offer to distribute\ncorresponding source code. (This alternative is allowed only for\nnoncommercial distribution and only if you received the program in object\ncode or executable form with such an offer, in accord with Subsection b\nabove.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it. For an executable work, complete source code\nmeans all the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation and\ninstallation of the executable. However, as a special exception, the source\ncode distributed need not include anything that is normally distributed (in\neither source or binary form) with the major components (compiler, kernel,\nand so on) of the operating system on which the executable runs, unless that\ncomponent itself accompanies the executable.\n\nIf distribution of executable or object code is made by offering access to\ncopy from a designated place, then offering equivalent access to copy the\nsource code from the same place counts as distribution of the source code,\neven though third parties are not compelled to copy the source along with the\nobject code.\n\n4. You may not copy, modify, sublicense, or distribute the Program except as\nexpressly provided under this License. Any attempt otherwise to copy,\nmodify, sublicense or distribute the Program is void, and will automatically\nterminate your rights under this License. However, parties who have received\ncopies, or rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n5. You are not required to accept this License, since you have not signed it.\nHowever, nothing else grants you permission to modify or distribute the\nProgram or its derivative works. These actions are prohibited by law if you\ndo not accept this License. Therefore, by modifying or distributing the\nProgram (or any work based on the Program), you indicate your acceptance\nof this License to do so, and all its terms and conditions for copying,\ndistributing or modifying the Program or works based on it.\n\n6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the original\nlicensor to copy, distribute or modify the Program subject to these terms and\nconditions. You may not impose any further restrictions on the recipients'\nexercise of the rights granted herein. You are not responsible for enforcing\ncompliance by third parties to this License.\n\n7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues), conditions\nare imposed on you (whether by court order, agreement or otherwise) that\ncontradict the conditions of this License, they do not excuse you from the\nconditions of this License. If you cannot distribute so as to satisfy\nsimultaneously your obligations under this License and any other pertinent\nobligations, then as a consequence you may not distribute the Program at all.\nFor example, if a patent license would not permit royalty-free redistribution\nof the Program by all those who receive copies directly or indirectly through\nyou, then the only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply and\nthe section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any patents or\nother property right claims or to contest validity of any such claims; this\nsection has the sole purpose of protecting the integrity of the free software\ndistribution system, which is implemented by public license practices. Many\npeople have made generous contributions to the wide range of software\ndistributed through that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing to\ndistribute software through any other system and a licensee cannot impose\nthat choice.\n\nThis section is intended to make thoroughly clear what is believed to be a\nconsequence of the rest of this License.\n\n8. If the distribution and/or use of the Program is restricted in certain\ncountries either by patents or by copyrighted interfaces, the original copyright\nholder who places the Program under this License may add an explicit\ngeographical distribution limitation excluding those countries, so that\ndistribution is permitted only in or among countries not thus excluded. In such\ncase, this License incorporates the limitation as if written in the body of this\nLicense.\n\n9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time. Such new versions will be\nsimilar in spirit to the present version, but may differ in detail to address new\nproblems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies\na version number of this License which applies to it and \"any later version\",\nyou have the option of following the terms and conditions either of that\nversion or of any later version published by the Free Software Foundation. If\nthe Program does not specify a version number of this License, you may\nchoose any version ever published by the Free Software Foundation.\n\n10. If you wish to incorporate parts of the Program into other free programs\nwhose distribution conditions are different, write to the author to ask for\npermission. For software which is copyrighted by the Free Software\nFoundation, write to the Free Software Foundation; we sometimes make\nexceptions for this. Our decision will be guided by the two goals of\npreserving the free status of all derivatives of our free software and of\npromoting the sharing and reuse of software generally.\n\n               NO WARRANTY\n\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE,\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT\nPERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE\nSTATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT\nWARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND\nPERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL\nNECESSARY SERVICING, REPAIR OR CORRECTION.\n\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR\nAGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR\nANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE\nLIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL,\nSPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES\nARISING OUT OF THE USE OR INABILITY TO USE THE\nPROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA\nOR DATA BEING RENDERED INACCURATE OR LOSSES\nSUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE\nPROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN\nIF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGES.\n\n          END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "MAINTAINERS.txt",
          "type": "blob",
          "size": 1.8232421875,
          "content": "\nList of maintainers\n--------------------------------------------------------------------------------\n\nLEGEND\n======\n\n- M: the maintainer\n- S: status:\n      \"supported\"     : someone is actually paid to look after this.\n      \"maintained\"    : someone actually looks after it.\n      \"fixes/patches\" : it has a maintainer but they don't have time to\n                        do much other than throw the odd patch in.\n      \"orphan\"        : no current maintainer, but maybe you could take\n                        the role as you write new code?\n\n--------------------------------------------------------------------------------\n\nBLOG API\nM: James Walker <walkah@walkah.net>\nS: maintained\n\nDISTRIBUTED AUTHENTICATION MODULES\nM: Moshe Weitzman <weitzman@tejasa.com>\nS: maintained\n\nDOCUMENTATION COORDINATOR\nM: Steven Peck <speck@blkmtn.org>\nS: maintained\n\nFILTER SYSTEM\nM: Steven Wittens <unconed@drupal.org>\nS: maintained\n\nFORM SYSTEM\nM: Károly Négyesi <chx@mail.tvnet.hu>\nS: maintained\n\nLOCALE MODULE\nM: Gabor Hojtsy <goba@php.net>\nS: maintained\n\nLOGGING\nM: Khalid Baheyeldin <drupal@2bits.com>\nS: maintained\n\nMENU SYSTEM\nM: Károly Négyesi <chx@mail.tvnet.hu>\nS: maintained\n\nPATH MODULE\nM: Matt Westgate <drupal@asitis.org>\nS: maintained\n\nPOSTGRESQL\nM: Sammy Spets <sammys-drupal@synerger.com>\nS: maintained\n\nSECURITY COORDINATOR\nM: Greg Knaddison <http://drupal.org/user/36762>\nS: maintained\n\nSTATISTICS MODULE\nM: Jeremy Andrews <jeremy@kerneltrap.com>\nS: maintained\n\nTHEME SYSTEM\nM: Earl Miles <merlin@logrus.com>\n   Joon Park <joon@dvessel.com>\nS: maintained\n\nUPDATE MODULE\nM: Derek Wright <http://drupal.org/user/46549/contact>\nS: maintained\n\nXML-RPC SERVER/CLIENT\nM: John VanDyk <http://drupal.org/user/2375/contact>\nS: maintained\n\nTRANSLATIONS COORDINATOR\nM: Gerhard Killesreiter <gerhard@killesreiter.de>\nS: maintained\n\nTHE REST:\nM: Dries <dries@drupal.org>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.0615234375,
          "content": "fossasia11-drupal\n=================\n\nFOSSASIA 2011 Drupal Site\n"
        },
        {
          "name": "UPGRADE.txt",
          "type": "blob",
          "size": 4.75,
          "content": "\nUPGRADING\n---------\n\nPrior to upgrading, you should ensure that:\n\n * Your system meets or exceeds Drupal's minimum requirements as shown at\n   http://drupal.org/requirements.\n * You have a backup of all your relevant data (#1).\n * Custom and contributed modules have been checked for compatibility (#11).\n * Custom and contributed themes have been checked for compatibility (#11).\n * You have read through this entire document.\n\nLet's begin!\n\n1.  Back up your Drupal database and site root directory. Be especially sure \n    to back up your \"sites\" directory which contains your configuration file, \n    added modules and themes, and your site's uploaded files. If other files \n    have modifications, such as .htaccess or robots.txt, back those up as well.\n\n    Note: for a single site setup, the configuration file is the \"settings.php\"\n    file located at sites/default/settings.php. The default.settings.php file\n    contains a clean copy for restoration purposes, if required.\n\n    For multisite configurations, the configuration file is located in a\n    structure like the following:\n\n      sites/default/settings.php\n      sites/example.com/settings.php\n      sites/sub.example.com/settings.php\n      sites/sub.example.com.path/settings.php\n\n    More information on multisite configuration is located in INSTALL.txt.\n\n2.  If possible, log on as the user with user ID 1, which is the first account\n    created and the main administrator account. User ID 1 will be able to\n    automatically access update.php in step #10. There are special instructions\n    in step #10 if you are unable to log on as user ID 1. Do not close your\n    browser until the final step is complete.\n\n3.  Place the site in \"Off-line\" mode, to let the database updates run without\n    interruption and avoid displaying errors to end users of the site. This\n    option is at http://www.example.com/?q=admin/settings/site-maintenance\n    (replace www.example.com with your installation's domain name and path).\n\n4.  If using a custom or contributed theme, switch\n    to a core theme, such as Garland or Bluemarine.\n\n5.  Disable all custom and contributed modules.\n\n6.  Remove all old files and directories from the Drupal installation directory.\n\n7.  Unpack the new files and directories into the Drupal installation directory.\n\n8.  Copy your backed up \"files\" and \"sites\" directories to the Drupal\n    installation directory. If other system files such as .htaccess or\n    robots.txt were customized, re-create the modifications in the new\n    versions of the files using the backups taken in step #1.\n\n9.  Verify the new configuration file to make sure it has correct information.\n\n10. Run update.php by visiting http://www.example.com/update.php (replace\n    www.example.com with your Drupal installation's domain name and path). This\n    step will update the core database tables to the new Drupal installation.\n\n    Note: if you are unable to access update.php do the following:\n\n      - Open your settings.php with a text editor.\n\n      - There is a line that says $update_free_access = FALSE;\n        Change it to $update_free_access = TRUE;\n\n      - Once update.php is done, you must change the settings.php file\n        back to its original form with $update_free_access = FALSE;\n\n11. Ensure that the versions of all custom and contributed modules match the\n    new Drupal version to which you have updated. For a major update, such as\n    from 5.x to 6.x, modules from previous versions will not be compatible\n    and updated versions will be required.\n\n      - For contributed modules, check http://drupal.org/project/modules\n        for the version of a module matching your version of Drupal.\n\n      - For custom modules, review http://drupal.org/update/modules to\n        ensure that a custom module is compatible with the current version.\n\n12. Re-enable custom and contributed modules and re-run update.php\n    to update custom and contributed database tables.\n\n13. Return the site to its original theme (if you switched to a core\n    theme like Garland or Bluemarine in step #4). If your site uses a\n    custom or contributed theme, make sure it is compatible with your\n    version of Drupal.\n\n      - For contributed themes, check http://drupal.org/project/themes\n        for the version of a theme matching your version of Drupal.\n\n      - For custom themes, review http://drupal.org/update/theme to ensure\n        that a custom theme is compatible with the current version.\n\n14. Finally, return your site to \"Online\" mode so your visitors may resume\n    browsing. As in step #3, this option is available in your administration\n    screens at http://www.example.com/?q=admin/settings/site-maintenance\n    (replace www.example.com with your installation's domain name and path).\n\nFor more information on upgrading visit\nthe Drupal handbook at http://drupal.org/upgrade\n"
        },
        {
          "name": "cron.php",
          "type": "blob",
          "size": 0.201171875,
          "content": "<?php\n\n/**\n * @file\n * Handles incoming requests to fire off regularly-scheduled tasks (cron jobs).\n */\n\ninclude_once './includes/bootstrap.inc';\ndrupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);\ndrupal_cron_run();\n"
        },
        {
          "name": "fossasia11.sql.gz",
          "type": "blob",
          "size": 19615.62109375,
          "content": ""
        },
        {
          "name": "includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 0.9013671875,
          "content": "<?php\n\n/**\n * @file\n * The PHP page that serves all page requests on a Drupal installation.\n *\n * The routines here dispatch control to the appropriate handler, which then\n * prints the appropriate page.\n *\n * All Drupal code is released under the GNU General Public License.\n * See COPYRIGHT.txt and LICENSE.txt.\n */\n\nrequire_once './includes/bootstrap.inc';\ndrupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);\n\n$return = menu_execute_active_handler();\n\n// Menu status constants are integers; page content is a string.\nif (is_int($return)) {\n  switch ($return) {\n    case MENU_NOT_FOUND:\n      drupal_not_found();\n      break;\n    case MENU_ACCESS_DENIED:\n      drupal_access_denied();\n      break;\n    case MENU_SITE_OFFLINE:\n      drupal_site_offline();\n      break;\n  }\n}\nelseif (isset($return)) {\n  // Print any value (including an empty string) except NULL or undefined:\n  print theme('page', $return);\n}\n\ndrupal_page_footer();\n"
        },
        {
          "name": "install.php",
          "type": "blob",
          "size": 46.6298828125,
          "content": "<?php\n\nrequire_once './includes/install.inc';\n\ndefine('MAINTENANCE_MODE', 'install');\n\n/**\n * The Drupal installation happens in a series of steps. We begin by verifying\n * that the current environment meets our minimum requirements. We then go\n * on to verify that settings.php is properly configured. From there we\n * connect to the configured database and verify that it meets our minimum\n * requirements. Finally we can allow the user to select an installation\n * profile and complete the installation process.\n *\n * @param $phase\n *   The installation phase we should proceed to.\n */\nfunction install_main() {\n  require_once './includes/bootstrap.inc';\n  drupal_bootstrap(DRUPAL_BOOTSTRAP_CONFIGURATION);\n\n  // The user agent header is used to pass a database prefix in the request when\n  // running tests. However, for security reasons, it is imperative that no\n  // installation be permitted using such a prefix.\n  if (isset($_SERVER['HTTP_USER_AGENT']) && strpos($_SERVER['HTTP_USER_AGENT'], \"simpletest\") !== FALSE) {\n    header($_SERVER['SERVER_PROTOCOL'] . ' 403 Forbidden');\n    exit;\n  }\n\n  // This must go after drupal_bootstrap(), which unsets globals!\n  global $profile, $install_locale, $conf;\n\n  require_once './modules/system/system.install';\n  require_once './includes/file.inc';\n\n  // Ensure correct page headers are sent (e.g. caching)\n  drupal_page_header();\n\n  // Set up $language, so t() caller functions will still work.\n  drupal_init_language();\n\n  // Load module basics (needed for hook invokes).\n  include_once './includes/module.inc';\n  $module_list['system']['filename'] = 'modules/system/system.module';\n  $module_list['filter']['filename'] = 'modules/filter/filter.module';\n  module_list(TRUE, FALSE, FALSE, $module_list);\n  drupal_load('module', 'system');\n  drupal_load('module', 'filter');\n\n  // Install profile chosen, set the global immediately.\n  // This needs to be done before the theme cache gets \n  // initialized in drupal_maintenance_theme().\n  if (!empty($_GET['profile'])) {\n    $profile = preg_replace('/[^a-zA-Z_0-9]/', '', $_GET['profile']);\n  }\n\n  // Set up theme system for the maintenance page.\n  drupal_maintenance_theme();\n\n  // Check existing settings.php.\n  $verify = install_verify_settings();\n\n  if ($verify) {\n    // Since we have a database connection, we use the normal cache system.\n    // This is important, as the installer calls into the Drupal system for\n    // the clean URL checks, so we should maintain the cache properly.\n    require_once './includes/cache.inc';\n    $conf['cache_inc'] = './includes/cache.inc';\n\n    // Establish a connection to the database.\n    require_once './includes/database.inc';\n    db_set_active();\n\n    // Check if Drupal is installed.\n    $task = install_verify_drupal();\n    if ($task == 'done') {\n      install_already_done_error();\n    }\n  }\n  else {\n    // Since no persistent storage is available yet, and functions that check\n    // for cached data will fail, we temporarily replace the normal cache\n    // system with a stubbed-out version that short-circuits the actual\n    // caching process and avoids any errors.\n    require_once './includes/cache-install.inc';\n    $conf['cache_inc'] = './includes/cache-install.inc';\n\n    $task = NULL;\n  }\n\n  // No profile was passed in GET, ask the user.\n  if (empty($_GET['profile'])) {\n    if ($profile = install_select_profile()) {\n      install_goto(\"install.php?profile=$profile\");\n    }\n    else {\n      install_no_profile_error();\n    }\n  }\n\n  // Load the profile.\n  require_once \"./profiles/$profile/$profile.profile\";\n\n  // Locale selection\n  if (!empty($_GET['locale'])) {\n    $install_locale = preg_replace('/[^a-zA-Z_0-9\\-]/', '', $_GET['locale']);\n  }\n  elseif (($install_locale = install_select_locale($profile)) !== FALSE) {\n    install_goto(\"install.php?profile=$profile&locale=$install_locale\");\n  }\n\n  // Tasks come after the database is set up\n  if (!$task) {\n    global $db_url;\n\n    if (!$verify && !empty($db_url)) {\n      // Do not install over a configured settings.php.\n      install_already_done_error();\n    }\n\n    // Check the installation requirements for Drupal and this profile.\n    install_check_requirements($profile, $verify);\n\n    // Verify existence of all required modules.\n    $modules = drupal_verify_profile($profile, $install_locale);\n\n    // If any error messages are set now, it means a requirement problem.\n    $messages = drupal_set_message();\n    if (!empty($messages['error'])) {\n      install_task_list('requirements');\n      drupal_set_title(st('Requirements problem'));\n      print theme('install_page', '');\n      exit;\n    }\n\n    // Change the settings.php information if verification failed earlier.\n    // Note: will trigger a redirect if database credentials change.\n    if (!$verify) {\n      install_change_settings($profile, $install_locale);\n    }\n    // The default lock implementation uses a database table,\n    // so we cannot use it for install, but we still need\n    // the API functions available.\n    require_once './includes/lock-install.inc';\n    $conf['lock_inc'] = './includes/lock-install.inc';\n    lock_init();\n\n    // Install system.module.\n    drupal_install_system();\n    // Save the list of other modules to install for the 'profile-install'\n    // task. variable_set() can be used now that system.module is installed\n    // and drupal is bootstrapped.\n    variable_set('install_profile_modules', array_diff($modules, array('system')));\n  }\n\n  // The database is set up, turn to further tasks.\n  install_tasks($profile, $task);\n}\n\n/**\n * Verify if Drupal is installed.\n */\nfunction install_verify_drupal() {\n  // Read the variable manually using the @ so we don't trigger an error if it fails.\n  $result = @db_query(\"SELECT value FROM {variable} WHERE name = '%s'\", 'install_task');\n  if ($result) {\n    return unserialize(db_result($result));\n  }\n}\n\n/**\n * Verify existing settings.php\n */\nfunction install_verify_settings() {\n  global $db_prefix, $db_type, $db_url;\n\n  // Verify existing settings (if any).\n  if (!empty($db_url)) {\n    // We need this because we want to run form_get_errors.\n    include_once './includes/form.inc';\n\n    $url = parse_url(is_array($db_url) ? $db_url['default'] : $db_url);\n    $db_user = urldecode($url['user']);\n    $db_pass = isset($url['pass']) ? urldecode($url['pass']) : NULL;\n    $db_host = urldecode($url['host']);\n    $db_port = isset($url['port']) ? urldecode($url['port']) : '';\n    $db_path = ltrim(urldecode($url['path']), '/');\n    $settings_file = './'. conf_path(FALSE, TRUE) .'/settings.php';\n\n    $form_state = array();\n    _install_settings_form_validate($db_prefix, $db_type, $db_user, $db_pass, $db_host, $db_port, $db_path, $settings_file, $form_state);\n    if (!form_get_errors()) {\n      return TRUE;\n    }\n  }\n  return FALSE;\n}\n\n/**\n * Configure and rewrite settings.php.\n */\nfunction install_change_settings($profile = 'default', $install_locale = '') {\n  global $db_url, $db_type, $db_prefix;\n\n  $url = parse_url(is_array($db_url) ? $db_url['default'] : $db_url);\n  $db_user = isset($url['user']) ? urldecode($url['user']) : '';\n  $db_pass = isset($url['pass']) ? urldecode($url['pass']) : '';\n  $db_host = isset($url['host']) ? urldecode($url['host']) : '';\n  $db_port = isset($url['port']) ? urldecode($url['port']) : '';\n  $db_path = ltrim(urldecode($url['path']), '/');\n  $conf_path = './'. conf_path(FALSE, TRUE);\n  $settings_file = $conf_path .'/settings.php';\n\n  // We always need this because we want to run form_get_errors.\n  include_once './includes/form.inc';\n  install_task_list('database');\n\n  $output = drupal_get_form('install_settings_form', $profile, $install_locale, $settings_file, $db_url, $db_type, $db_prefix, $db_user, $db_pass, $db_host, $db_port, $db_path);\n  drupal_set_title(st('Database configuration'));\n  print theme('install_page', $output);\n  exit;\n}\n\n\n/**\n * Form API array definition for install_settings.\n */\nfunction install_settings_form(&$form_state, $profile, $install_locale, $settings_file, $db_url, $db_type, $db_prefix, $db_user, $db_pass, $db_host, $db_port, $db_path) {\n  if (empty($db_host)) {\n    $db_host = 'localhost';\n  }\n  $db_types = drupal_detect_database_types();\n\n  // If both 'mysql' and 'mysqli' are available, we disable 'mysql':\n  if (isset($db_types['mysqli'])) {\n    unset($db_types['mysql']);\n  }\n\n  if (count($db_types) == 0) {\n    $form['no_db_types'] = array(\n      '#value' => st('Your web server does not appear to support any common database types. Check with your hosting provider to see if they offer any databases that <a href=\"@drupal-databases\">Drupal supports</a>.', array('@drupal-databases' => 'http://drupal.org/node/270#database')),\n    );\n  }\n  else {\n    $form['basic_options'] = array(\n      '#type' => 'fieldset',\n      '#title' => st('Basic options'),\n      '#description' => '<p>'. st('To set up your @drupal database, enter the following information.', array('@drupal' => drupal_install_profile_name())) .'</p>',\n    );\n\n    if (count($db_types) > 1) {\n      $form['basic_options']['db_type'] = array(\n        '#type' => 'radios',\n        '#title' => st('Database type'),\n        '#required' => TRUE,\n        '#options' => $db_types,\n        '#default_value' => ($db_type ? $db_type : current($db_types)),\n        '#description' => st('The type of database your @drupal data will be stored in.', array('@drupal' => drupal_install_profile_name())),\n      );\n      $db_path_description = st('The name of the database your @drupal data will be stored in. It must exist on your server before @drupal can be installed.', array('@drupal' => drupal_install_profile_name()));\n    }\n    else {\n      if (count($db_types) == 1) {\n        $db_types = array_values($db_types);\n        $form['basic_options']['db_type'] = array(\n          '#type' => 'hidden',\n          '#value' => $db_types[0],\n        );\n        $db_path_description = st('The name of the %db_type database your @drupal data will be stored in. It must exist on your server before @drupal can be installed.', array('%db_type' => $db_types[0], '@drupal' => drupal_install_profile_name()));\n      }\n    }\n\n    // Database name\n    $form['basic_options']['db_path'] = array(\n      '#type' => 'textfield',\n      '#title' => st('Database name'),\n      '#default_value' => $db_path,\n      '#size' => 45,\n      '#required' => TRUE,\n      '#description' => $db_path_description\n    );\n\n    // Database username\n    $form['basic_options']['db_user'] = array(\n      '#type' => 'textfield',\n      '#title' => st('Database username'),\n      '#default_value' => $db_user,\n      '#size' => 45,\n      '#required' => TRUE,\n    );\n\n    // Database username\n    $form['basic_options']['db_pass'] = array(\n      '#type' => 'password',\n      '#title' => st('Database password'),\n      '#default_value' => $db_pass,\n      '#size' => 45,\n    );\n\n    $form['advanced_options'] = array(\n      '#type' => 'fieldset',\n      '#title' => st('Advanced options'),\n      '#collapsible' => TRUE,\n      '#collapsed' => TRUE,\n      '#description' => st(\"These options are only necessary for some sites. If you're not sure what you should enter here, leave the default settings or check with your hosting provider.\")\n    );\n\n    // Database host\n    $form['advanced_options']['db_host'] = array(\n      '#type' => 'textfield',\n      '#title' => st('Database host'),\n      '#default_value' => $db_host,\n      '#size' => 45,\n      // Hostnames can be 255 characters long.\n      '#maxlength' => 255,\n      '#required' => TRUE,\n      '#description' => st('If your database is located on a different server, change this.'),\n    );\n\n    // Database port\n    $form['advanced_options']['db_port'] = array(\n      '#type' => 'textfield',\n      '#title' => st('Database port'),\n      '#default_value' => $db_port,\n      '#size' => 45,\n      // The maximum port number is 65536, 5 digits.\n      '#maxlength' => 5,\n      '#description' => st('If your database server is listening to a non-standard port, enter its number.'),\n    );\n\n    // Table prefix\n    $prefix = ($profile == 'default') ? 'drupal_' : $profile .'_';\n    $form['advanced_options']['db_prefix'] = array(\n      '#type' => 'textfield',\n      '#title' => st('Table prefix'),\n      '#default_value' => $db_prefix,\n      '#size' => 45,\n      '#description' => st('If more than one application will be sharing this database, enter a table prefix such as %prefix for your @drupal site here.', array('@drupal' => drupal_install_profile_name(), '%prefix' => $prefix)),\n    );\n\n    $form['save'] = array(\n      '#type' => 'submit',\n      '#value' => st('Save and continue'),\n    );\n\n    $form['errors'] = array();\n    $form['settings_file'] = array('#type' => 'value', '#value' => $settings_file);\n    $form['_db_url'] = array('#type' => 'value');\n    $form['#action'] = \"install.php?profile=$profile\". ($install_locale ? \"&locale=$install_locale\" : '');\n    $form['#redirect'] = FALSE;\n  }\n  return $form;\n}\n\n/**\n * Form API validate for install_settings form.\n */\nfunction install_settings_form_validate($form, &$form_state) {\n  global $db_url;\n  _install_settings_form_validate($form_state['values']['db_prefix'], $form_state['values']['db_type'], $form_state['values']['db_user'], $form_state['values']['db_pass'], $form_state['values']['db_host'], $form_state['values']['db_port'], $form_state['values']['db_path'], $form_state['values']['settings_file'], $form_state, $form);\n}\n\n/**\n * Helper function for install_settings_validate.\n */\nfunction _install_settings_form_validate($db_prefix, $db_type, $db_user, $db_pass, $db_host, $db_port, $db_path, $settings_file, &$form_state, $form = NULL) {\n  global $db_url;\n\n  // Verify the table prefix\n  if (!empty($db_prefix) && is_string($db_prefix) && !preg_match('/^[A-Za-z0-9_.]+$/', $db_prefix)) {\n    form_set_error('db_prefix', st('The database table prefix you have entered, %db_prefix, is invalid. The table prefix can only contain alphanumeric characters, periods, or underscores.', array('%db_prefix' => $db_prefix)), 'error');\n  }\n\n  if (!empty($db_port) && !is_numeric($db_port)) {\n    form_set_error('db_port', st('Database port must be a number.'));\n  }\n\n  // Check database type\n  if (!isset($form)) {\n    $_db_url = is_array($db_url) ? $db_url['default'] : $db_url;\n    $db_type = substr($_db_url, 0, strpos($_db_url, '://'));\n  }\n  $databases = drupal_detect_database_types();\n  if (!in_array($db_type, $databases)) {\n    form_set_error('db_type', st(\"In your %settings_file file you have configured @drupal to use a %db_type server, however your PHP installation currently does not support this database type.\", array('%settings_file' => $settings_file, '@drupal' => drupal_install_profile_name(), '%db_type' => $db_type)));\n  }\n  else {\n    // Verify\n    $db_url = $db_type .'://'. urlencode($db_user) . ($db_pass ? ':'. urlencode($db_pass) : '') .'@'. ($db_host ? urlencode($db_host) : 'localhost') . ($db_port ? \":$db_port\" : '') .'/'. urlencode($db_path);\n    if (isset($form)) {\n      form_set_value($form['_db_url'], $db_url, $form_state);\n    }\n    $success = array();\n\n    $function = 'drupal_test_'. $db_type;\n    if (!$function($db_url, $success)) {\n      if (isset($success['CONNECT'])) {\n        form_set_error('db_type', st('In order for Drupal to work, and to continue with the installation process, you must resolve all permission issues reported above. We were able to verify that we have permission for the following commands: %commands. For more help with configuring your database server, see the <a href=\"http://drupal.org/node/258\">Installation and upgrading handbook</a>. If you are unsure what any of this means you should probably contact your hosting provider.', array('%commands' => implode($success, ', '))));\n      }\n      else {\n        form_set_error('db_type', '');\n      }\n    }\n  }\n}\n\n/**\n * Form API submit for install_settings form.\n */\nfunction install_settings_form_submit($form, &$form_state) {\n  global $profile, $install_locale;\n\n  // Update global settings array and save\n  $settings['db_url'] = array(\n    'value'    => $form_state['values']['_db_url'],\n    'required' => TRUE,\n  );\n  $settings['db_prefix'] = array(\n    'value'    => $form_state['values']['db_prefix'],\n    'required' => TRUE,\n  );\n  drupal_rewrite_settings($settings);\n\n  // Continue to install profile step\n  install_goto(\"install.php?profile=$profile\". ($install_locale ? \"&locale=$install_locale\" : ''));\n}\n\n/**\n * Find all .profile files.\n */\nfunction install_find_profiles() {\n  return file_scan_directory('./profiles', '\\.profile$', array('.', '..', 'CVS'), 0, TRUE, 'name', 0);\n}\n\n/**\n * Allow admin to select which profile to install.\n *\n * @return\n *   The selected profile.\n */\nfunction install_select_profile() {\n  include_once './includes/form.inc';\n\n  $profiles = install_find_profiles();\n  // Don't need to choose profile if only one available.\n  if (sizeof($profiles) == 1) {\n    $profile = array_pop($profiles);\n    require_once $profile->filename;\n    return $profile->name;\n  }\n  elseif (sizeof($profiles) > 1) {\n    foreach ($profiles as $profile) {\n      if (!empty($_POST['profile']) && ($_POST['profile'] == $profile->name)) {\n        return $profile->name;\n      }\n    }\n\n    install_task_list('profile-select');\n\n    drupal_set_title(st('Select an installation profile'));\n    print theme('install_page', drupal_get_form('install_select_profile_form', $profiles));\n    exit;\n  }\n}\n\n/**\n * Form API array definition for the profile selection form.\n *\n * @param $form_state\n *   Array of metadata about state of form processing.\n * @param $profile_files\n *   Array of .profile files, as returned from file_scan_directory().\n */\nfunction install_select_profile_form(&$form_state, $profile_files) {\n  $profiles = array();\n  $names = array();\n\n  foreach ($profile_files as $profile) {\n    include_once($profile->filename);\n\n    // Load profile details and store them for later retrieval.\n    $function = $profile->name .'_profile_details';\n    if (function_exists($function)) {\n      $details = $function();\n    }\n    $profiles[$profile->name] = $details;\n\n    // Determine the name of the profile; default to file name if defined name\n    // is unspecified.\n    $name = isset($details['name']) ? $details['name'] : $profile->name;\n    $names[$profile->name] = $name;\n  }\n\n  // Display radio buttons alphabetically by human-readable name. \n  natcasesort($names);\n  foreach ($names as $profile => $name) {\n    $form['profile'][$name] = array(\n      '#type' => 'radio',\n      '#value' => 'default',\n      '#return_value' => $profile,\n      '#title' => $name,\n      '#description' => isset($profiles[$profile]['description']) ? $profiles[$profile]['description'] : '',\n      '#parents' => array('profile'),\n    );\n  }\n  $form['submit'] =  array(\n    '#type' => 'submit',\n    '#value' => st('Save and continue'),\n  );\n  return $form;\n}\n\n/**\n * Find all .po files for the current profile.\n */\nfunction install_find_locales($profilename) {\n  $locales = file_scan_directory('./profiles/'. $profilename .'/translations', '\\.po$', array('.', '..', 'CVS'), 0, FALSE);\n  array_unshift($locales, (object) array('name' => 'en'));\n  return $locales;\n}\n\n/**\n * Allow admin to select which locale to use for the current profile.\n *\n * @return\n *   The selected language.\n */\nfunction install_select_locale($profilename) {\n  include_once './includes/file.inc';\n  include_once './includes/form.inc';\n\n  // Find all available locales.\n  $locales = install_find_locales($profilename);\n\n  // If only the built-in (English) language is available,\n  // and we are using the default profile, inform the user\n  // that the installer can be localized. Otherwise we assume\n  // the user know what he is doing.\n  if (count($locales) == 1) {\n    if ($profilename == 'default') {\n      install_task_list('locale-select');\n      drupal_set_title(st('Choose language'));\n      if (!empty($_GET['localize'])) {\n        $output = '<p>'. st('With the addition of an appropriate translation package, this installer is capable of proceeding in another language of your choice. To install and use Drupal in a language other than English:') .'</p>';\n        $output .= '<ul><li>'. st('Determine if <a href=\"@translations\" target=\"_blank\">a translation of this Drupal version</a> is available in your language of choice. A translation is provided via a translation package; each translation package enables the display of a specific version of Drupal in a specific language. Not all languages are available for every version of Drupal.', array('@translations' => 'http://localize.drupal.org')) .'</li>';\n        $output .= '<li>'. st('If an alternative translation package of your choice is available, download and extract its contents to your Drupal root directory.') .'</li>';\n        $output .= '<li>'. st('Return to choose language using the second link below and select your desired language from the displayed list. Reloading the page allows the list to automatically adjust to the presence of new translation packages.') .'</li>';\n        $output .= '</ul><p>'. st('Alternatively, to install and use Drupal in English, or to defer the selection of an alternative language until after installation, select the first link below.') .'</p>';\n        $output .= '<p>'. st('How should the installation continue?') .'</p>';\n        $output .= '<ul><li><a href=\"install.php?profile='. $profilename .'&amp;locale=en\">'. st('Continue installation in English') .'</a></li><li><a href=\"install.php?profile='. $profilename .'\">'. st('Return to choose a language') .'</a></li></ul>';\n      }\n      else {\n        $output = '<ul><li><a href=\"install.php?profile='. $profilename .'&amp;locale=en\">'. st('Install Pressflow in English') .'</a></li><li><a href=\"install.php?profile='. $profilename .'&amp;localize=true\">'. st('Learn how to install Pressflow in other languages') .'</a></li></ul>';\n      }\n      print theme('install_page', $output);\n      exit;\n    }\n    // One language, but not the default profile, assume\n    // the user knows what he is doing.\n    return FALSE;\n  }\n  else {\n    // Allow profile to pre-select the language, skipping the selection.\n    $function = $profilename .'_profile_details';\n    if (function_exists($function)) {\n      $details = $function();\n      if (isset($details['language'])) {\n        foreach ($locales as $locale) {\n          if ($details['language'] == $locale->name) {\n            return $locale->name;\n          }\n        }\n      }\n    }\n\n    if (!empty($_POST['locale'])) {\n      foreach ($locales as $locale) {\n        if ($_POST['locale'] == $locale->name) {\n          return $locale->name;\n        }\n      }\n    }\n\n    install_task_list('locale-select');\n\n    drupal_set_title(st('Choose language'));\n    print theme('install_page', drupal_get_form('install_select_locale_form', $locales));\n    exit;\n  }\n}\n\n/**\n * Form API array definition for language selection.\n */\nfunction install_select_locale_form(&$form_state, $locales) {\n  include_once './includes/locale.inc';\n  $languages = _locale_get_predefined_list();\n  foreach ($locales as $locale) {\n    // Try to use verbose locale name\n    $name = $locale->name;\n    if (isset($languages[$name])) {\n      $name = $languages[$name][0] . (isset($languages[$name][1]) ? ' '. st('(@language)', array('@language' => $languages[$name][1])) : '');\n    }\n    $form['locale'][$locale->name] = array(\n      '#type' => 'radio',\n      '#return_value' => $locale->name,\n      '#default_value' => ($locale->name == 'en' ? TRUE : FALSE),\n      '#title' => $name . ($locale->name == 'en' ? ' '. st('(built-in)') : ''),\n      '#parents' => array('locale')\n    );\n  }\n  $form['submit'] =  array(\n    '#type' => 'submit',\n    '#value' => st('Select language'),\n  );\n  return $form;\n}\n\n/**\n * Show an error page when there are no profiles available.\n */\nfunction install_no_profile_error() {\n  install_task_list('profile-select');\n  drupal_set_title(st('No profiles available'));\n  print theme('install_page', '<p>'. st('We were unable to find any installer profiles. Installer profiles tell us what modules to enable and what schema to install in the database. A profile is necessary to continue with the installation process.') .'</p>');\n  exit;\n}\n\n\n/**\n * Show an error page when Drupal has already been installed.\n */\nfunction install_already_done_error() {\n  global $base_url;\n\n  drupal_set_title(st('Drupal already installed'));\n  print theme('install_page', st('<ul><li>To start over, you must empty your existing database.</li><li>To install to a different database, edit the appropriate <em>settings.php</em> file in the <em>sites</em> folder.</li><li>To upgrade an existing installation, proceed to the <a href=\"@base-url/update.php\">update script</a>.</li><li>View your <a href=\"@base-url\">existing site</a>.</li></ul>', array('@base-url' => $base_url)));\n  exit;\n}\n\n/**\n * Tasks performed after the database is initialized.\n */\nfunction install_tasks($profile, $task) {\n  global $base_url, $install_locale;\n\n  // Bootstrap newly installed Drupal, while preserving existing messages.\n  $messages = isset($_SESSION['messages']) ? $_SESSION['messages'] : '';\n  drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);\n  $_SESSION['messages'] = $messages;\n\n  // URL used to direct page requests.\n  $url = $base_url .'/install.php?locale='. $install_locale .'&profile='. $profile;\n\n  // Build a page for final tasks.\n  if (empty($task)) {\n    variable_set('install_task', 'profile-install');\n    $task = 'profile-install';\n  }\n\n  // We are using a list of if constructs here to allow for\n  // passing from one task to the other in the same request.\n\n  // Install profile modules.\n  if ($task == 'profile-install') {\n    $modules = variable_get('install_profile_modules', array());\n    $files = module_rebuild_cache();\n    variable_del('install_profile_modules');\n    $operations = array();\n    foreach ($modules as $module) {\n      $operations[] = array('_install_module_batch', array($module, $files[$module]->info['name']));\n    }\n    $batch = array(\n      'operations' => $operations,\n      'finished' => '_install_profile_batch_finished',\n      'title' => st('Installing @drupal', array('@drupal' => drupal_install_profile_name())),\n      'error_message' => st('The installation has encountered an error.'),\n    );\n    // Start a batch, switch to 'profile-install-batch' task. We need to\n    // set the variable here, because batch_process() redirects.\n    variable_set('install_task', 'profile-install-batch');\n    batch_set($batch);\n    batch_process($url, $url);\n  }\n  // We are running a batch install of the profile's modules.\n  // This might run in multiple HTTP requests, constantly redirecting\n  // to the same address, until the batch finished callback is invoked\n  // and the task advances to 'locale-initial-import'.\n  if ($task == 'profile-install-batch') {\n    include_once 'includes/batch.inc';\n    $output = _batch_page();\n  }\n\n  // Import interface translations for the enabled modules.\n  if ($task == 'locale-initial-import') {\n    if (!empty($install_locale) && ($install_locale != 'en')) {\n      include_once 'includes/locale.inc';\n      // Enable installation language as default site language.\n      locale_add_language($install_locale, NULL, NULL, NULL, NULL, NULL, 1, TRUE);\n      // Collect files to import for this language.\n      $batch = locale_batch_by_language($install_locale, '_install_locale_initial_batch_finished');\n      if (!empty($batch)) {\n        // Remember components we cover in this batch set.\n        variable_set('install_locale_batch_components', $batch['#components']);\n        // Start a batch, switch to 'locale-batch' task. We need to\n        // set the variable here, because batch_process() redirects.\n        variable_set('install_task', 'locale-initial-batch');\n        batch_set($batch);\n        batch_process($url, $url);\n      }\n    }\n    // Found nothing to import or not foreign language, go to next task.\n    $task = 'configure';\n  }\n  if ($task == 'locale-initial-batch') {\n    include_once 'includes/batch.inc';\n    include_once 'includes/locale.inc';\n    $output = _batch_page();\n  }\n\n  if ($task == 'configure') {\n    if (variable_get('site_name', FALSE) || variable_get('site_mail', FALSE)) {\n      // Site already configured: This should never happen, means re-running\n      // the installer, possibly by an attacker after the 'install_task' variable\n      // got accidentally blown somewhere. Stop it now.\n      install_already_done_error();\n    }\n    $form = drupal_get_form('install_configure_form', $url);\n\n    if (!variable_get('site_name', FALSE) && !variable_get('site_mail', FALSE)) {\n      // Not submitted yet: Prepare to display the form.\n      $output = $form;\n      drupal_set_title(st('Configure site'));\n\n      // Warn about settings.php permissions risk\n      $settings_dir = './'. conf_path();\n      $settings_file = $settings_dir .'/settings.php';\n      if (!drupal_verify_install_file($settings_file, FILE_EXIST|FILE_READABLE|FILE_NOT_WRITABLE) || !drupal_verify_install_file($settings_dir, FILE_NOT_WRITABLE, 'dir')) {\n        drupal_set_message(st('All necessary changes to %dir and %file have been made, so you should remove write permissions to them now in order to avoid security risks. If you are unsure how to do so, please consult the <a href=\"@handbook_url\">on-line handbook</a>.', array('%dir' => $settings_dir, '%file' => $settings_file, '@handbook_url' => 'http://drupal.org/getting-started')), 'error');\n      }\n      else {\n        drupal_set_message(st('All necessary changes to %dir and %file have been made. They have been set to read-only for security.', array('%dir' => $settings_dir, '%file' => $settings_file)));\n      }\n\n      // Add JavaScript validation.\n      _user_password_dynamic_validation();\n      drupal_add_js(drupal_get_path('module', 'system') .'/system.js', 'module');\n      // We add these strings as settings because JavaScript translation does not\n      // work on install time.\n      drupal_add_js(array('copyFieldValue' => array('edit-site-mail' => array('edit-account-mail')), 'cleanURL' => array('success' => st('Your server has been successfully tested to support this feature.'), 'failure' => st('Your system configuration does not currently support this feature. The <a href=\"http://drupal.org/node/15365\">handbook page on Clean URLs</a> has additional troubleshooting information.'), 'testing' => st('Testing clean URLs...'))), 'setting');\n      drupal_add_js('\n// Global Killswitch\nif (Drupal.jsEnabled) {\n  $(document).ready(function() {\n    Drupal.cleanURLsInstallCheck();\n    Drupal.setDefaultTimezone();\n  });\n}', 'inline');\n      // Build menu to allow clean URL check.\n      menu_rebuild();\n    }\n\n    else {\n      $task = 'profile';\n    }\n  }\n\n  // If found an unknown task or the 'profile' task, which is\n  // reserved for profiles, hand over the control to the profile,\n  // so it can run any number of custom tasks it defines.\n  if (!in_array($task, install_reserved_tasks())) {\n    $function = $profile .'_profile_tasks';\n    if (function_exists($function)) {\n      // The profile needs to run more code, maybe even more tasks.\n      // $task is sent through as a reference and may be changed!\n      $output = $function($task, $url);\n    }\n\n    // If the profile doesn't move on to a new task we assume\n    // that it is done.\n    if ($task == 'profile') {\n      $task = 'profile-finished';\n    }\n  }\n\n  // Profile custom tasks are done, so let the installer regain\n  // control and proceed with importing the remaining translations.\n  if ($task == 'profile-finished') {\n    if (!empty($install_locale) && ($install_locale != 'en')) {\n      include_once 'includes/locale.inc';\n      // Collect files to import for this language. Skip components\n      // already covered in the initial batch set.\n      $batch = locale_batch_by_language($install_locale, '_install_locale_remaining_batch_finished', variable_get('install_locale_batch_components', array()));\n      // Remove temporary variable.\n      variable_del('install_locale_batch_components');\n      if (!empty($batch)) {\n        // Start a batch, switch to 'locale-remaining-batch' task. We need to\n        // set the variable here, because batch_process() redirects.\n        variable_set('install_task', 'locale-remaining-batch');\n        batch_set($batch);\n        batch_process($url, $url);\n      }\n    }\n    // Found nothing to import or not foreign language, go to next task.\n    $task = 'finished';\n  }\n  if ($task == 'locale-remaining-batch') {\n    include_once 'includes/batch.inc';\n    include_once 'includes/locale.inc';\n    $output = _batch_page();\n  }\n\n  // Display a 'finished' page to user.\n  if ($task == 'finished') {\n    drupal_set_title(st('@drupal installation complete', array('@drupal' => drupal_install_profile_name())));\n    $messages = drupal_set_message();\n    $output = '<p>'. st('Congratulations, @drupal has been successfully installed.', array('@drupal' => drupal_install_profile_name())) .'</p>';\n    $output .= '<p>'. (isset($messages['error']) ? st('Please review the messages above before continuing on to <a href=\"@url\">your new site</a>.', array('@url' => url(''))) : st('You may now visit <a href=\"@url\">your new site</a>.', array('@url' => url('')))) .'</p>';\n    $task = 'done';\n  }\n\n  // The end of the install process. Remember profile used.\n  if ($task == 'done') {\n    // Rebuild menu to get content type links registered by the profile,\n    // and possibly any other menu items created through the tasks.\n    menu_rebuild();\n\n    // Register actions declared by any modules.\n    actions_synchronize();\n\n    // Randomize query-strings on css/js files, to hide the fact that\n    // this is a new install, not upgraded yet.\n    _drupal_flush_css_js();\n\n    variable_set('install_profile', $profile);\n  }\n\n  // Set task for user, and remember the task in the database.\n  install_task_list($task);\n  variable_set('install_task', $task);\n\n  // Output page, if some output was required. Otherwise it is possible\n  // that we are printing a JSON page and theme output should not be there.\n  if (isset($output)) {\n    print theme('maintenance_page', $output);\n  }\n}\n\n/**\n * Batch callback for batch installation of modules.\n */\nfunction _install_module_batch($module, $module_name, &$context) {\n  _drupal_install_module($module);\n  // We enable the installed module right away, so that the module will be\n  // loaded by drupal_bootstrap in subsequent batch requests, and other\n  // modules possibly depending on it can safely perform their installation\n  // steps.\n  module_enable(array($module));\n  $context['results'][] = $module;\n  $context['message'] = st('Installed %module module.', array('%module' => $module_name));\n}\n\n/**\n * Finished callback for the modules install batch.\n *\n * Advance installer task to language import.\n */\nfunction _install_profile_batch_finished($success, $results) {\n  variable_set('install_task', 'locale-initial-import');\n}\n\n/**\n * Finished callback for the first locale import batch.\n *\n * Advance installer task to the configure screen.\n */\nfunction _install_locale_initial_batch_finished($success, $results) {\n  variable_set('install_task', 'configure');\n}\n\n/**\n * Finished callback for the second locale import batch.\n *\n * Advance installer task to the finished screen.\n */\nfunction _install_locale_remaining_batch_finished($success, $results) {\n  variable_set('install_task', 'finished');\n}\n\n/**\n * The list of reserved tasks to run in the installer.\n */\nfunction install_reserved_tasks() {\n  return array('configure', 'profile-install', 'profile-install-batch', 'locale-initial-import', 'locale-initial-batch', 'profile-finished', 'locale-remaining-batch', 'finished', 'done');\n}\n\n/**\n * Check installation requirements and report any errors.\n */\nfunction install_check_requirements($profile, $verify) {\n\n  // If Drupal is not set up already, we need to create a settings file.\n  if (!$verify) {\n    $writable = FALSE;\n    $conf_path = './'. conf_path(FALSE, TRUE);\n    $settings_file = $conf_path .'/settings.php';\n    $file = $conf_path;\n    $exists = FALSE;\n    // Verify that the directory exists.\n    if (drupal_verify_install_file($conf_path, FILE_EXIST, 'dir')) {\n      // Check to make sure a settings.php already exists.\n      $file = $settings_file;\n      if (drupal_verify_install_file($settings_file, FILE_EXIST)) {\n        $exists = TRUE;\n        // If it does, make sure it is writable.\n        $writable = drupal_verify_install_file($settings_file, FILE_READABLE|FILE_WRITABLE);\n      }\n    }\n    if (!$exists) {\n      drupal_set_message(st('The @drupal installer requires that you create a settings file as part of the installation process.\n<ol>\n<li>Copy the %default_file file to %file.</li>\n<li>Change file permissions so that it is writable by the web server. If you are unsure how to grant file permissions, please consult the <a href=\"@handbook_url\">on-line handbook</a>.</li>\n</ol>\nMore details about installing Pressflow are available in INSTALL.txt.', array('@drupal' => drupal_install_profile_name(), '%file' => $file, '%default_file' => $conf_path .'/default.settings.php', '@handbook_url' => 'http://drupal.org/server-permissions')), 'error');\n    }\n    elseif (!$writable) {\n      drupal_set_message(st('The @drupal installer requires write permissions to %file during the installation process. If you are unsure how to grant file permissions, please consult the <a href=\"@handbook_url\">on-line handbook</a>.', array('@drupal' => drupal_install_profile_name(), '%file' => $file, '@handbook_url' => 'http://drupal.org/server-permissions')), 'error');\n    }\n  }\n\n  // Check the other requirements.\n  $requirements = drupal_check_profile($profile);\n  $severity = drupal_requirements_severity($requirements);\n\n  // If there are issues, report them.\n  if ($severity == REQUIREMENT_ERROR) {\n\n    foreach ($requirements as $requirement) {\n      if (isset($requirement['severity']) && $requirement['severity'] == REQUIREMENT_ERROR) {\n        $message = $requirement['description'];\n        if (isset($requirement['value']) && $requirement['value']) {\n          $message .= ' ('. st('Currently using !item !version', array('!item' => $requirement['title'], '!version' => $requirement['value'])) .')';\n        }\n        drupal_set_message($message, 'error');\n      }\n    }\n  }\n  if ($severity == REQUIREMENT_WARNING) {\n\n    foreach ($requirements as $requirement) {\n      if (isset($requirement['severity']) && $requirement['severity'] == REQUIREMENT_WARNING) {\n        $message = $requirement['description'];\n        if (isset($requirement['value']) && $requirement['value']) {\n          $message .= ' ('. st('Currently using !item !version', array('!item' => $requirement['title'], '!version' => $requirement['value'])) .')';\n        }\n        drupal_set_message($message, 'warning');\n      }\n    }\n  } \n}\n\n/**\n * Add the installation task list to the current page.\n */\nfunction install_task_list($active = NULL) {\n  // Default list of tasks.\n  $tasks = array(\n    'profile-select'        => st('Choose profile'),\n    'locale-select'         => st('Choose language'),\n    'requirements'          => st('Verify requirements'),\n    'database'              => st('Set up database'),\n    'profile-install-batch' => st('Install profile'),\n    'locale-initial-batch'  => st('Set up translations'),\n    'configure'             => st('Configure site'),\n  );\n\n  $profiles = install_find_profiles();\n  $profile = isset($_GET['profile']) && isset($profiles[$_GET['profile']]) ? $_GET['profile'] : '.';\n  $locales = install_find_locales($profile);\n\n  // If we have only one profile, remove 'Choose profile'\n  // and rename 'Install profile'.\n  if (count($profiles) == 1) {\n    unset($tasks['profile-select']);\n    $tasks['profile-install-batch'] = st('Install site');\n  }\n\n  // Add tasks defined by the profile.\n  if ($profile) {\n    $function = $profile .'_profile_task_list';\n    if (function_exists($function)) {\n      $result = $function();\n      if (is_array($result)) {\n        $tasks += $result;\n      }\n    }\n  }\n\n  if (count($locales) < 2 || empty($_GET['locale']) || $_GET['locale'] == 'en') {\n    // If not required, remove translation import from the task list.\n    unset($tasks['locale-initial-batch']);\n  }\n  else {\n    // If required, add remaining translations import task.\n    $tasks += array('locale-remaining-batch' => st('Finish translations'));\n  }\n\n  // Add finished step as the last task.\n  $tasks += array(\n    'finished'     => st('Finished')\n  );\n\n  // Let the theming function know that 'finished' and 'done'\n  // include everything, so every step is completed.\n  if (in_array($active, array('finished', 'done'))) {\n    $active = NULL;\n  }\n  drupal_set_content('left', theme_task_list($tasks, $active));\n}\n\n/**\n * Form API array definition for site configuration.\n */\nfunction install_configure_form(&$form_state, $url) {\n\n  $form['intro'] = array(\n    '#value' => st('To configure your website, please provide the following information.'),\n    '#weight' => -10,\n  );\n  $form['site_information'] = array(\n    '#type' => 'fieldset',\n    '#title' => st('Site information'),\n    '#collapsible' => FALSE,\n  );\n  $form['site_information']['site_name'] = array(\n    '#type' => 'textfield',\n    '#title' => st('Site name'),\n    '#required' => TRUE,\n    '#weight' => -20,\n  );\n  $form['site_information']['site_mail'] = array(\n    '#type' => 'textfield',\n    '#title' => st('Site e-mail address'),\n    '#default_value' => ini_get('sendmail_from'),\n    '#description' => st(\"The <em>From</em> address in automated e-mails sent during registration and new password requests, and other notifications. (Use an address ending in your site's domain to help prevent this e-mail being flagged as spam.)\"),\n    '#required' => TRUE,\n    '#weight' => -15,\n  );\n  $form['admin_account'] = array(\n    '#type' => 'fieldset',\n    '#title' => st('Administrator account'),\n    '#collapsible' => FALSE,\n  );\n  $form['admin_account']['account']['#tree'] = TRUE;\n  $form['admin_account']['markup'] = array(\n    '#value' => '<p class=\"description\">'. st('The administrator account has complete access to the site; it will automatically be granted all permissions and can perform any administrative activity. This will be the only account that can perform certain activities, so keep its credentials safe.') .'</p>',\n    '#weight' => -10,\n  );\n\n  $form['admin_account']['account']['name'] = array('#type' => 'textfield',\n    '#title' => st('Username'),\n    '#maxlength' => USERNAME_MAX_LENGTH,\n    '#description' => st('Spaces are allowed; punctuation is not allowed except for periods, hyphens, and underscores.'),\n    '#required' => TRUE,\n    '#weight' => -10,\n  );\n\n  $form['admin_account']['account']['mail'] = array('#type' => 'textfield',\n    '#title' => st('E-mail address'),\n    '#maxlength' => EMAIL_MAX_LENGTH,\n    '#description' => st('All e-mails from the system will be sent to this address. The e-mail address is not made public and will only be used if you wish to receive a new password or wish to receive certain news or notifications by e-mail.'),\n    '#required' => TRUE,\n    '#weight' => -5,\n  );\n  $form['admin_account']['account']['pass'] = array(\n    '#type' => 'password_confirm',\n    '#required' => TRUE,\n    '#size' => 25,\n    '#weight' => 0,\n  );\n\n  $form['server_settings'] = array(\n    '#type' => 'fieldset',\n    '#title' => st('Server settings'),\n    '#collapsible' => FALSE,\n  );\n  $form['server_settings']['date_default_timezone'] = array(\n    '#type' => 'select',\n    '#title' => st('Default time zone'),\n    '#default_value' => 0,\n    '#options' => _system_zonelist(),\n    '#description' => st('By default, dates in this site will be displayed in the chosen time zone.'),\n    '#weight' => 5,\n  );\n\n  $form['server_settings']['clean_url'] = array(\n    '#type' => 'radios',\n    '#title' => st('Clean URLs'),\n    '#default_value' => 0,\n    '#options' => array(0 => st('Disabled'), 1 => st('Enabled')),\n    '#description' => st('This option makes Drupal emit \"clean\" URLs (i.e. without <code>?q=</code> in the URL).'),\n    '#disabled' => TRUE,\n    '#prefix' => '<div id=\"clean-url\" class=\"install\">',\n    '#suffix' => '</div>',\n    '#weight' => 10,\n  );\n\n  $form['server_settings']['update_status_module'] = array(\n    '#type' => 'checkboxes',\n    '#title' => st('Update notifications'),\n    '#options' => array(1 => st('Check for updates automatically')),\n    '#default_value' => array(1),\n    '#description' => st('With this option enabled, Drupal will notify you when new releases are available. This will significantly enhance your site\\'s security and is <strong>highly recommended</strong>. This requires your site to periodically send anonymous information on its installed components to <a href=\"@drupal\">drupal.org</a>. For more information please see the <a href=\"@update\">update notification information</a>.', array('@drupal' => 'http://drupal.org', '@update' => 'http://drupal.org/handbook/modules/update')),\n    '#weight' => 15,\n  );\n\n  $form['submit'] = array(\n    '#type' => 'submit',\n    '#value' => st('Save and continue'),\n    '#weight' => 15,\n  );\n  $form['#action'] = $url;\n  $form['#redirect'] = FALSE;\n\n  // Allow the profile to alter this form. $form_state isn't available\n  // here, but to conform to the hook_form_alter() signature, we pass\n  // an empty array.\n  $hook_form_alter = $_GET['profile'] .'_form_alter';\n  if (function_exists($hook_form_alter)) {\n    $hook_form_alter($form, array(), 'install_configure');\n  }\n  return $form;\n}\n\n/**\n * Form API validate for the site configuration form.\n */\nfunction install_configure_form_validate($form, &$form_state) {\n  if ($error = user_validate_name($form_state['values']['account']['name'])) {\n    form_error($form['admin_account']['account']['name'], $error);\n  }\n  if ($error = user_validate_mail($form_state['values']['account']['mail'])) {\n    form_error($form['admin_account']['account']['mail'], $error);\n  }\n  if ($error = user_validate_mail($form_state['values']['site_mail'])) {\n    form_error($form['site_information']['site_mail'], $error);\n  }\n}\n\n/**\n * Form API submit for the site configuration form.\n */\nfunction install_configure_form_submit($form, &$form_state) {\n  global $user;\n\n  variable_set('site_name', $form_state['values']['site_name']);\n  variable_set('site_mail', $form_state['values']['site_mail']);\n  variable_set('date_default_timezone', $form_state['values']['date_default_timezone']);\n\n  // Enable update.module if this option was selected.\n  if ($form_state['values']['update_status_module'][1]) {\n    drupal_install_modules(array('update'));\n  }\n\n  // Turn this off temporarily so that we can pass a password through.\n  variable_set('user_email_verification', FALSE);\n  $form_state['old_values'] = $form_state['values'];\n  $form_state['values'] = $form_state['values']['account'];\n\n  // We precreated user 1 with placeholder values. Let's save the real values.\n  $account = user_load(1);\n  $merge_data = array('init' => $form_state['values']['mail'], 'roles' => array(), 'status' => 1);\n  user_save($account, array_merge($form_state['values'], $merge_data));\n  // Log in the first user.\n  user_authenticate($form_state['values']);\n  $form_state['values'] = $form_state['old_values'];\n  unset($form_state['old_values']);\n  variable_set('user_email_verification', TRUE);\n\n  if (isset($form_state['values']['clean_url'])) {\n    variable_set('clean_url', $form_state['values']['clean_url']);\n  }\n  // The user is now logged in, but has no session ID yet, which\n  // would be required later in the request, so remember it.\n  $user->sid = session_id();\n\n  // Record when this install ran.\n  variable_set('install_time', time());\n}\n\n// Start the installer.\ninstall_main();\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "robots.txt",
          "type": "blob",
          "size": 1.4853515625,
          "content": "#\n# robots.txt\n#\n# This file is to prevent the crawling and indexing of certain parts\n# of your site by web crawlers and spiders run by sites like Yahoo!\n# and Google. By telling these \"robots\" where not to go on your site,\n# you save bandwidth and server resources.\n#\n# This file will be ignored unless it is at the root of your host:\n# Used:    http://example.com/robots.txt\n# Ignored: http://example.com/site/robots.txt\n#\n# For more information about the robots.txt standard, see:\n# http://www.robotstxt.org/wc/robots.html\n#\n# For syntax checking, see:\n# http://www.sxw.org.uk/computing/robots/check.html\n\nUser-agent: *\nCrawl-delay: 10\n# Directories\nDisallow: /includes/\nDisallow: /misc/\nDisallow: /modules/\nDisallow: /profiles/\nDisallow: /scripts/\nDisallow: /themes/\n# Files\nDisallow: /CHANGELOG.txt\nDisallow: /cron.php\nDisallow: /INSTALL.mysql.txt\nDisallow: /INSTALL.pgsql.txt\nDisallow: /install.php\nDisallow: /INSTALL.txt\nDisallow: /LICENSE.txt\nDisallow: /MAINTAINERS.txt\nDisallow: /update.php\nDisallow: /UPGRADE.txt\nDisallow: /xmlrpc.php\n# Paths (clean URLs)\nDisallow: /admin/\nDisallow: /comment/reply/\nDisallow: /filter/tips/\nDisallow: /logout/\nDisallow: /node/add/\nDisallow: /search/\nDisallow: /user/register/\nDisallow: /user/password/\nDisallow: /user/login/\n# Paths (no clean URLs)\nDisallow: /?q=admin/\nDisallow: /?q=comment/reply/\nDisallow: /?q=filter/tips/\nDisallow: /?q=logout/\nDisallow: /?q=node/add/\nDisallow: /?q=search/\nDisallow: /?q=user/password/\nDisallow: /?q=user/register/\nDisallow: /?q=user/login/\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sites",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.php",
          "type": "blob",
          "size": 25.7099609375,
          "content": "<?php\n\n/**\n * @file\n * Administrative page for handling updates from one Drupal version to another.\n *\n * Point your browser to \"http://www.example.com/update.php\" and follow the\n * instructions.\n *\n * If you are not logged in as administrator, you will need to modify the access\n * check statement inside your settings.php file. After finishing the upgrade,\n * be sure to open settings.php again, and change it back to its original state!\n */\n\n/**\n * Global flag to identify update.php run, and so avoid various unwanted\n * operations, such as hook_init() and hook_exit() invokes, css/js preprocessing\n * and translation, and solve some theming issues. This flag is checked on several\n * places in Drupal code (not just update.php).\n */\ndefine('MAINTENANCE_MODE', 'update');\n\n/**\n * Add a column to a database using syntax appropriate for PostgreSQL.\n * Save result of SQL commands in $ret array.\n *\n * Note: when you add a column with NOT NULL and you are not sure if there are\n * already rows in the table, you MUST also add DEFAULT. Otherwise PostgreSQL\n * won't work when the table is not empty, and db_add_column() will fail.\n * To have an empty string as the default, you must use: 'default' => \"''\"\n * in the $attributes array. If NOT NULL and DEFAULT are set the PostgreSQL\n * version will set values of the added column in old rows to the\n * DEFAULT value.\n *\n * @param $ret\n *   Array to which results will be added.\n * @param $table\n *   Name of the table, without {}\n * @param $column\n *   Name of the column\n * @param $type\n *   Type of column\n * @param $attributes\n *   Additional optional attributes. Recognized attributes:\n *     not null => TRUE|FALSE\n *     default  => NULL|FALSE|value (the value must be enclosed in '' marks)\n * @return\n *   nothing, but modifies $ret parameter.\n */\nfunction db_add_column(&$ret, $table, $column, $type, $attributes = array()) {\n  if (array_key_exists('not null', $attributes) and $attributes['not null']) {\n    $not_null = 'NOT NULL';\n  }\n  if (array_key_exists('default', $attributes)) {\n    if (is_null($attributes['default'])) {\n      $default_val = 'NULL';\n      $default = 'default NULL';\n    }\n    elseif ($attributes['default'] === FALSE) {\n      $default = '';\n    }\n    else {\n      $default_val = \"$attributes[default]\";\n      $default = \"default $attributes[default]\";\n    }\n  }\n\n  $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ADD $column $type\");\n  if (!empty($default)) {\n    $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ALTER $column SET $default\");\n  }\n  if (!empty($not_null)) {\n    if (!empty($default)) {\n      $ret[] = update_sql(\"UPDATE {\". $table .\"} SET $column = $default_val\");\n    }\n    $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ALTER $column SET NOT NULL\");\n  }\n}\n\n/**\n * Change a column definition using syntax appropriate for PostgreSQL.\n * Save result of SQL commands in $ret array.\n *\n * Remember that changing a column definition involves adding a new column\n * and dropping an old one. This means that any indices, primary keys and\n * sequences from serial-type columns are dropped and might need to be\n * recreated.\n *\n * @param $ret\n *   Array to which results will be added.\n * @param $table\n *   Name of the table, without {}\n * @param $column\n *   Name of the column to change\n * @param $column_new\n *   New name for the column (set to the same as $column if you don't want to change the name)\n * @param $type\n *   Type of column\n * @param $attributes\n *   Additional optional attributes. Recognized attributes:\n *     not null => TRUE|FALSE\n *     default  => NULL|FALSE|value (with or without '', it won't be added)\n * @return\n *   nothing, but modifies $ret parameter.\n */\nfunction db_change_column(&$ret, $table, $column, $column_new, $type, $attributes = array()) {\n  if (array_key_exists('not null', $attributes) and $attributes['not null']) {\n    $not_null = 'NOT NULL';\n  }\n  if (array_key_exists('default', $attributes)) {\n    if (is_null($attributes['default'])) {\n      $default_val = 'NULL';\n      $default = 'default NULL';\n    }\n    elseif ($attributes['default'] === FALSE) {\n      $default = '';\n    }\n    else {\n      $default_val = \"$attributes[default]\";\n      $default = \"default $attributes[default]\";\n    }\n  }\n\n  $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} RENAME $column TO \". $column .\"_old\");\n  $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ADD $column_new $type\");\n  $ret[] = update_sql(\"UPDATE {\". $table .\"} SET $column_new = \". $column .\"_old\");\n  if ($default) { $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ALTER $column_new SET $default\"); }\n  if ($not_null) { $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} ALTER $column_new SET NOT NULL\"); }\n  $ret[] = update_sql(\"ALTER TABLE {\". $table .\"} DROP \". $column .\"_old\");\n}\n\n/**\n * Perform one update and store the results which will later be displayed on\n * the finished page.\n *\n * An update function can force the current and all later updates for this\n * module to abort by returning a $ret array with an element like:\n * $ret['#abort'] = array('success' => FALSE, 'query' => 'What went wrong');\n * The schema version will not be updated in this case, and all the\n * aborted updates will continue to appear on update.php as updates that\n * have not yet been run.\n *\n * @param $module\n *   The module whose update will be run.\n * @param $number\n *   The update number to run.\n * @param $context\n *   The batch context array\n */\nfunction update_do_one($module, $number, &$context) {\n  // If updates for this module have been aborted\n  // in a previous step, go no further.\n  if (!empty($context['results'][$module]['#abort'])) {\n    return;\n  }\n\n  $function = $module .'_update_'. $number;\n  if (function_exists($function)) {\n    $ret = $function($context['sandbox']);\n  }\n\n  if (isset($ret['#finished'])) {\n    $context['finished'] = $ret['#finished'];\n    unset($ret['#finished']);\n  }\n\n  if (!isset($context['results'][$module])) {\n    $context['results'][$module] = array();\n  }\n  if (!isset($context['results'][$module][$number])) {\n    $context['results'][$module][$number] = array();\n  }\n  $context['results'][$module][$number] = array_merge($context['results'][$module][$number], $ret);\n\n  if (!empty($ret['#abort'])) {\n    $context['results'][$module]['#abort'] = TRUE;\n  }\n  // Record the schema update if it was completed successfully.\n  if ($context['finished'] == 1 && empty($context['results'][$module]['#abort'])) {\n    drupal_set_installed_schema_version($module, $number);\n  }\n\n  $context['message'] = 'Updating '. check_plain($module) .' module';\n}\n\n/**\n * Renders a form with a list of available database updates.\n */\nfunction update_selection_page() {\n  $output = '<p>The version of Drupal you are updating from has been automatically detected. You can select a different version, but you should not need to.</p>';\n  $output .= '<p>Click Update to start the update process.</p>';\n\n  drupal_set_title('Drupal database update');\n  $output .= drupal_get_form('update_script_selection_form');\n\n  update_task_list('select');\n\n  return $output;\n}\n\nfunction update_script_selection_form() {\n  $form = array();\n  $form['start'] = array(\n    '#tree' => TRUE,\n    '#type' => 'fieldset',\n    '#title' => 'Select versions',\n    '#collapsible' => TRUE,\n    '#collapsed' => TRUE,\n  );\n\n  // Ensure system.module's updates appear first\n  $form['start']['system'] = array();\n\n  $modules = drupal_get_installed_schema_version(NULL, FALSE, TRUE);\n  foreach ($modules as $module => $schema_version) {\n    $updates = drupal_get_schema_versions($module);\n    // Skip incompatible module updates completely, otherwise test schema versions.\n    if (!update_check_incompatibility($module) && $updates !== FALSE && $schema_version >= 0) {\n      // module_invoke returns NULL for nonexisting hooks, so if no updates\n      // are removed, it will == 0.\n      $last_removed = module_invoke($module, 'update_last_removed');\n      if ($schema_version < $last_removed) {\n        $form['start'][$module] = array(\n          '#value'  => '<em>'. $module .'</em> module can not be updated. Its schema version is '. $schema_version .'. Updates up to and including '. $last_removed .' have been removed in this release. In order to update <em>'. $module .'</em> module, you will first <a href=\"http://drupal.org/upgrade\">need to upgrade</a> to the last version in which these updates were available.',\n          '#prefix' => '<div class=\"warning\">',\n          '#suffix' => '</div>',\n        );\n        $form['start']['#collapsed'] = FALSE;\n        continue;\n      }\n      $updates = drupal_map_assoc($updates);\n      $updates[] = 'No updates available';\n      $default = $schema_version;\n      foreach (array_keys($updates) as $update) {\n        if ($update > $schema_version) {\n          $default = $update;\n          break;\n        }\n      }\n      $form['start'][$module] = array(\n        '#type' => 'select',\n        '#title' => $module .' module',\n        '#default_value' => $default,\n        '#options' => $updates,\n      );\n    }\n  }\n\n  $form['has_js'] = array(\n    '#type' => 'hidden',\n    '#default_value' => FALSE,\n  );\n  $form['submit'] = array(\n    '#type' => 'submit',\n    '#value' => 'Update',\n  );\n  return $form;\n}\n\nfunction update_batch() {\n  global $base_url;\n\n  $operations = array();\n  // Set the installed version so updates start at the correct place.\n  foreach ($_POST['start'] as $module => $version) {\n    drupal_set_installed_schema_version($module, $version - 1);\n    $updates = drupal_get_schema_versions($module);\n    $max_version = max($updates);\n    if ($version <= $max_version) {\n      foreach ($updates as $update) {\n        if ($update >= $version) {\n          $operations[] = array('update_do_one', array($module, $update));\n        }\n      }\n    }\n  }\n  $batch = array(\n    'operations' => $operations,\n    'title' => 'Updating',\n    'init_message' => 'Starting updates',\n    'error_message' => 'An unrecoverable error has occurred. You can find the error message below. It is advised to copy it to the clipboard for reference.',\n    'finished' => 'update_finished',\n  );\n  batch_set($batch);\n  batch_process($base_url .'/update.php?op=results', $base_url .'/update.php');\n}\n\nfunction update_finished($success, $results, $operations) {\n  // clear the caches in case the data has been updated.\n  drupal_flush_all_caches();\n\n  $_SESSION['update_results'] = $results;\n  $_SESSION['update_success'] = $success;\n  $_SESSION['updates_remaining'] = $operations;\n}\n\nfunction update_results_page() {\n  drupal_set_title('Drupal database update');\n  // NOTE: we can't use l() here because the URL would point to 'update.php?q=admin'.\n  $links[] = '<a href=\"'. base_path() .'\">Main page</a>';\n  $links[] = '<a href=\"'. base_path() .'?q=admin\">Administration pages</a>';\n\n  update_task_list();\n  // Report end result\n  if (module_exists('dblog')) {\n    $log_message = ' All errors have been <a href=\"'. base_path() .'?q=admin/reports/dblog\">logged</a>.';\n  }\n  else {\n    $log_message = ' All errors have been logged.';\n  }\n\n  if ($_SESSION['update_success']) {\n    $output = '<p>Updates were attempted. If you see no failures below, you may proceed happily to the <a href=\"'. base_path() .'?q=admin\">administration pages</a>. Otherwise, you may need to update your database manually.'. $log_message .'</p>';\n  }\n  else {\n    list($module, $version) = array_pop(reset($_SESSION['updates_remaining']));\n    $output = '<p class=\"error\">The update process was aborted prematurely while running <strong>update #'. $version .' in '. $module .'.module</strong>.'. $log_message;\n    if (module_exists('dblog')) {\n      $output .= ' You may need to check the <code>watchdog</code> database table manually.';\n    }\n    $output .= '</p>';\n  }\n\n  if (!empty($GLOBALS['update_free_access'])) {\n    $output .= \"<p><strong>Reminder: don't forget to set the <code>\\$update_free_access</code> value in your <code>settings.php</code> file back to <code>FALSE</code>.</strong></p>\";\n  }\n\n  $output .= theme('item_list', $links);\n\n  // Output a list of queries executed\n  if (!empty($_SESSION['update_results'])) {\n    $output .= '<div id=\"update-results\">';\n    $output .= '<h2>The following queries were executed</h2>';\n    foreach ($_SESSION['update_results'] as $module => $updates) {\n      $output .= '<h3>'. $module .' module</h3>';\n      foreach ($updates as $number => $queries) {\n        if ($number != '#abort') {\n          $output .= '<h4>Update #'. $number .'</h4>';\n          $output .= '<ul>';\n          foreach ($queries as $query) {\n            if ($query['success']) {\n              $output .= '<li class=\"success\">'. $query['query'] .'</li>';\n            }\n            else {\n              $output .= '<li class=\"failure\"><strong>Failed:</strong> '. $query['query'] .'</li>';\n            }\n          }\n          if (!count($queries)) {\n            $output .= '<li class=\"none\">No queries</li>';\n          }\n          $output .= '</ul>';\n        }\n      }\n    }\n    $output .= '</div>';\n  }\n  unset($_SESSION['update_results']);\n  unset($_SESSION['update_success']);\n\n  return $output;\n}\n\nfunction update_info_page() {\n  // Change query-strings on css/js files to enforce reload for all users.\n  _drupal_flush_css_js();\n  // Flush the cache of all data for the update status module.\n  if (db_table_exists('cache_update')) {\n    cache_clear_all('*', 'cache_update', TRUE);\n  }\n\n  update_task_list('info');\n  drupal_set_title('Drupal database update');\n  $token = drupal_get_token('update');\n  $output = '<p>Use this utility to update your database whenever a new release of Drupal or a module is installed.</p><p>For more detailed information, see the <a href=\"http://drupal.org/upgrade\">upgrading handbook</a>. If you are unsure what these terms mean you should probably contact your hosting provider.</p>';\n  $output .= \"<ol>\\n\";\n  $output .= \"<li><strong>Back up your database</strong>. This process will change your database values and in case of emergency you may need to revert to a backup.</li>\\n\";\n  $output .= \"<li><strong>Back up your code</strong>. Hint: when backing up module code, do not leave that backup in the 'modules' or 'sites/*/modules' directories as this may confuse Drupal's auto-discovery mechanism.</li>\\n\";\n  $output .= '<li>Put your site into <a href=\"'. base_path() .'?q=admin/settings/site-maintenance\">maintenance mode</a>.</li>'.\"\\n\";\n  $output .= \"<li>Install your new files in the appropriate location, as described in the handbook.</li>\\n\";\n  $output .= \"</ol>\\n\";\n  $output .= \"<p>When you have performed the steps above, you may proceed.</p>\\n\";\n  $output .= '<form method=\"post\" action=\"update.php?op=selection&amp;token='. $token .'\"><p><input type=\"submit\" value=\"Continue\" /></p></form>';\n  $output .= \"\\n\";\n  return $output;\n}\n\nfunction update_access_denied_page() {\n  drupal_set_title('Access denied');\n  return '<p>Access denied. You are not authorized to access this page. Please log in as the admin user (the first user you created). If you cannot log in, you will have to edit <code>settings.php</code> to bypass this access check. To do this:</p>\n<ol>\n <li>With a text editor find the settings.php file on your system. From the main Drupal directory that you installed all the files into, go to <code>sites/your_site_name</code> if such directory exists, or else to <code>sites/default</code> which applies otherwise.</li>\n <li>There is a line inside your settings.php file that says <code>$update_free_access = FALSE;</code>. Change it to <code>$update_free_access = TRUE;</code>.</li>\n <li>As soon as the update.php script is done, you must change the settings.php file back to its original form with <code>$update_free_access = FALSE;</code>.</li>\n <li>To avoid having this problem in future, remember to log in to your website as the admin user (the user you first created) before you backup your database at the beginning of the update process.</li>\n</ol>';\n}\n\n/**\n * Create the batch table.\n *\n * This is part of the Drupal 5.x to 6.x migration.\n */\nfunction update_create_batch_table() {\n\n  // If batch table exists, update is not necessary\n  if (db_table_exists('batch')) {\n    return;\n  }\n\n  $schema['batch'] = array(\n    'fields' => array(\n      'bid'       => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),\n      'token'     => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE),\n      'timestamp' => array('type' => 'int', 'not null' => TRUE),\n      'batch'     => array('type' => 'text', 'not null' => FALSE, 'size' => 'big')\n    ),\n    'primary key' => array('bid'),\n    'indexes' => array('token' => array('token')),\n  );\n\n  $ret = array();\n  db_create_table($ret, 'batch', $schema['batch']);\n  return $ret;\n}\n\n/**\n * Disable anything in the {system} table that is not compatible with the\n * current version of Drupal core.\n */\nfunction update_fix_compatibility() {\n  $ret = array();\n  $incompatible = array();\n  $query = db_query(\"SELECT name, type, status FROM {system} WHERE status = 1 AND type IN ('module','theme')\");\n  while ($result = db_fetch_object($query)) {\n    if (update_check_incompatibility($result->name, $result->type)) {\n      $incompatible[] = $result->name;\n    }\n  }\n  if (!empty($incompatible)) {\n    $ret[] = update_sql(\"UPDATE {system} SET status = 0 WHERE name IN ('\". implode(\"','\", $incompatible) .\"')\");\n  }\n  return $ret;\n}\n\n/**\n * Helper function to test compatibility of a module or theme.\n */\nfunction update_check_incompatibility($name, $type = 'module') {\n  static $themes, $modules;\n\n  // Store values of expensive functions for future use.\n  if (empty($themes) || empty($modules)) {\n    $themes = _system_theme_data();\n    $modules = module_rebuild_cache();\n  }\n\n  if ($type == 'module' && isset($modules[$name])) {\n    $file = $modules[$name];\n  }\n  else if ($type == 'theme' && isset($themes[$name])) {\n    $file = $themes[$name];\n  }\n  if (!isset($file)\n      || !isset($file->info['core'])\n      || $file->info['core'] != DRUPAL_CORE_COMPATIBILITY\n      || version_compare(phpversion(), $file->info['php']) < 0) {\n    return TRUE;\n  }\n  return FALSE;\n}\n\n/**\n * Perform Drupal 5.x to 6.x updates that are required for update.php\n * to function properly.\n *\n * This function runs when update.php is run the first time for 6.x,\n * even before updates are selected or performed.  It is important\n * that if updates are not ultimately performed that no changes are\n * made which make it impossible to continue using the prior version.\n * Just adding columns is safe.  However, renaming the\n * system.description column to owner is not.  Therefore, we add the\n * system.owner column and leave it to system_update_6008() to copy\n * the data from description and remove description. The same for\n * renaming locales_target.locale to locales_target.language, which\n * will be finished by locale_update_6002().\n */\nfunction update_fix_d6_requirements() {\n  $ret = array();\n\n  if (drupal_get_installed_schema_version('system') < 6000 && !variable_get('update_d6_requirements', FALSE)) {\n    $spec = array('type' => 'int', 'size' => 'small', 'default' => 0, 'not null' => TRUE);\n    db_add_field($ret, 'cache', 'serialized', $spec);\n    db_add_field($ret, 'cache_filter', 'serialized', $spec);\n    db_add_field($ret, 'cache_page', 'serialized', $spec);\n    db_add_field($ret, 'cache_menu', 'serialized', $spec);\n\n    db_add_field($ret, 'system', 'info', array('type' => 'text'));\n    db_add_field($ret, 'system', 'owner', array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''));\n    if (db_table_exists('locales_target')) {\n      db_add_field($ret, 'locales_target', 'language', array('type' => 'varchar', 'length' => 12, 'not null' => TRUE, 'default' => ''));\n    }\n    if (db_table_exists('locales_source')) {\n      db_add_field($ret, 'locales_source', 'textgroup', array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => 'default'));\n      db_add_field($ret, 'locales_source', 'version', array('type' => 'varchar', 'length' => 20, 'not null' => TRUE, 'default' => 'none'));\n    }\n    variable_set('update_d6_requirements', TRUE);\n\n    // Create the cache_block table. See system_update_6027() for more details.\n    $schema['cache_block'] = array(\n      'fields' => array(\n        'cid'        => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''),\n        'data'       => array('type' => 'blob', 'not null' => FALSE, 'size' => 'big'),\n        'expire'     => array('type' => 'int', 'not null' => TRUE, 'default' => 0),\n        'created'    => array('type' => 'int', 'not null' => TRUE, 'default' => 0),\n        'headers'    => array('type' => 'text', 'not null' => FALSE),\n        'serialized' => array('type' => 'int', 'size' => 'small', 'not null' => TRUE, 'default' => 0)\n      ),\n      'indexes' => array('expire' => array('expire')),\n      'primary key' => array('cid'),\n    );\n    db_create_table($ret, 'cache_block', $schema['cache_block']);\n\n    // Create the semaphore table now -- the menu system after 6.15 depends on\n    // this table, and menu code runs in updates prior to the table being\n    // created in its original update function, system_update_6054().\n    $schema['semaphore'] = array(\n      'fields' => array(\n        'name' => array(\n          'type' => 'varchar',\n          'length' => 255,\n          'not null' => TRUE,\n          'default' => ''),\n        'value' => array(\n          'type' => 'varchar',\n          'length' => 255,\n          'not null' => TRUE,\n          'default' => ''),\n        'expire' => array(\n          'type' => 'float',\n          'size' => 'big',\n          'not null' => TRUE),\n        ),\n      'indexes' => array('expire' => array('expire')),\n      'primary key' => array('name'),\n    );\n    db_create_table($ret, 'semaphore', $schema['semaphore']);\n  }\n\n  return $ret;\n}\n\n/**\n * Add the update task list to the current page.\n */\nfunction update_task_list($active = NULL) {\n  // Default list of tasks.\n  $tasks = array(\n    'info' => 'Overview',\n    'select' => 'Select updates',\n    'run' => 'Run updates',\n    'finished' => 'Review log',\n  );\n\n  drupal_set_content('left', theme('task_list', $tasks, $active));\n}\n\n/**\n * Check update requirements and report any errors.\n */\nfunction update_check_requirements() {\n  // Check the system module requirements only.\n  $requirements = module_invoke('system', 'requirements', 'update');\n  $severity = drupal_requirements_severity($requirements);\n\n  // If there are issues, report them.\n  if ($severity != REQUIREMENT_OK) {\n    foreach ($requirements as $requirement) {\n      if (isset($requirement['severity']) && $requirement['severity'] != REQUIREMENT_OK) {\n        $message = isset($requirement['description']) ? $requirement['description'] : '';\n        if (isset($requirement['value']) && $requirement['value']) {\n          $message .= ' (Currently using '. $requirement['title'] .' '. $requirement['value'] .')';\n        }\n        drupal_set_message($message, 'warning');\n      }\n    }\n  }\n}\n\n// Some unavoidable errors happen because the database is not yet up-to-date.\n// Our custom error handler is not yet installed, so we just suppress them.\nini_set('display_errors', FALSE);\n\nrequire_once './includes/bootstrap.inc';\n\n// We only load DRUPAL_BOOTSTRAP_CONFIGURATION for the update requirements\n// check to avoid reaching the PHP memory limit.\n$op = isset($_REQUEST['op']) ? $_REQUEST['op'] : '';\nif (empty($op)) {\n  // Minimum load of components.\n  drupal_bootstrap(DRUPAL_BOOTSTRAP_CONFIGURATION);\n\n  require_once './includes/install.inc';\n  require_once './includes/file.inc';\n  require_once './modules/system/system.install';\n\n  // Load module basics.\n  include_once './includes/module.inc';\n  $module_list['system']['filename'] = 'modules/system/system.module';\n  $module_list['filter']['filename'] = 'modules/filter/filter.module';\n  module_list(TRUE, FALSE, FALSE, $module_list);\n  drupal_load('module', 'system');\n  drupal_load('module', 'filter');\n\n  // Set up $language, since the installer components require it.\n  drupal_init_language();\n\n  // Set up theme system for the maintenance page.\n  drupal_maintenance_theme();\n\n  // Check the update requirements for Drupal.\n  update_check_requirements();\n\n  // Display the warning messages (if any) in a dedicated maintenance page,\n  // or redirect to the update information page if no message.\n  $messages = drupal_set_message();\n  if (!empty($messages['warning'])) {\n    drupal_maintenance_theme();\n    print theme('update_page', '<form method=\"post\" action=\"update.php?op=info\"><input type=\"submit\" value=\"Continue\" /></form>', FALSE);\n    exit;\n  }\n  install_goto('update.php?op=info');\n}\n\ndrupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);\ndrupal_maintenance_theme();\n\n// This must happen *after* drupal_bootstrap(), since it calls\n// variable_(get|set), which only works after a full bootstrap.\nupdate_create_batch_table();\n\n// Turn error reporting back on. From now on, only fatal errors (which are\n// not passed through the error handler) will cause a message to be printed.\nini_set('display_errors', TRUE);\n\n// Access check:\nif (!empty($update_free_access) || $user->uid == 1) {\n  drupal_session_start();\n\n  include_once './includes/install.inc';\n  include_once './includes/batch.inc';\n  drupal_load_updates();\n\n  update_fix_d6_requirements();\n  update_fix_compatibility();\n\n  $op = isset($_REQUEST['op']) ? $_REQUEST['op'] : '';\n  switch ($op) {\n    case 'selection':\n      if (isset($_GET['token']) && $_GET['token'] == drupal_get_token('update')) {\n        $output = update_selection_page();\n        break;\n      }\n\n    case 'Update':\n      if (isset($_GET['token']) && $_GET['token'] == drupal_get_token('update')) {\n        update_batch();\n        break;\n      }\n\n    // update.php ops\n    case 'info':\n      $output = update_info_page();\n      break;\n\n    case 'results':\n      $output = update_results_page();\n      break;\n\n    // Regular batch ops : defer to batch processing API\n    default:\n      update_task_list('run');\n      $output = _batch_page();\n      break;\n  }\n}\nelse {\n  $output = update_access_denied_page();\n}\nif (isset($output) && $output) {\n  // We defer the display of messages until all updates are done.\n  $progress_page = ($batch = batch_get()) && isset($batch['running']);\n  print theme('update_page', $output, !$progress_page);\n}\n"
        },
        {
          "name": "xmlrpc.php",
          "type": "blob",
          "size": 0.287109375,
          "content": "<?php\n\n/**\n * @file\n * PHP page for handling incoming XML-RPC requests from clients.\n */\n\ninclude_once './includes/bootstrap.inc';\ndrupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);\ninclude_once './includes/xmlrpc.inc';\ninclude_once './includes/xmlrpcs.inc';\n\nxmlrpc_server(module_invoke_all('xmlrpc'));\n"
        }
      ]
    }
  ]
}