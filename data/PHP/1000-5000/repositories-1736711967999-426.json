{
  "metadata": {
    "timestamp": 1736711967999,
    "page": 426,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/tsf",
      "stars": 2168,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 4.001953125,
          "content": "Tencent is pleased to support the open source community by making TSF Solution available.  \nCopyright (C) 2017 THL A29 Limited, a Tencent company.  All rights reserved.\nIf you have downloaded a copy of the TSF Solution binary from Tencent, please note that the TSF Solution binary is licensed under the BSD 3-Clause License.\nIf you have downloaded a copy of the TSF Solution source code from Tencent, please note that TSF Solution source code is licensed under the BSD 3-Clause License, except for the third-party components listed below which are subject to different license terms.  Your integration of TSF Solution into your own projects may require compliance with the BSD 3-Clause License, as well as the other licenses applicable to the third-party components included within TSF Solution.\nA copy of the BSD 3-Clause License is included in this file.\n\nOther dependencies and licenses:\n\nOpen Source Software Licensed Under the MIT License: \n----------------------------------------------------------------------------------------\n1. Laravel-Blade  3.1\nCopyright (c) Philo Hermans\n\n2. php-dotenv  2.0.0\nCopyright (c) 2013 Jose Diaz-Gonzalez email@josediazgonzalez.com\n\n3. composer  1.4.2\nCopyright (c) Nils Adermann, Jordi Boggiano\n\n\nTerms of the MIT License:\n---------------------------------------------------\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nOpen Source Software Licensed Under the BSD 3-Clause License: \n----------------------------------------------------------------------------------------\n1. FastRoute  1.0.1\nCopyright (c) 2013 by Nikita Popov.\nSome rights reserved.\n\n\nTerms of the BSD 3-Clause License:\n--------------------------------------------------------------------\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of [copyright holder] nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 5.21875,
          "content": "项目目前是存档状态，感谢您对腾讯开源项目的关注！您可以继续fork后更新迭代，感谢理解和支持；如果您有其他疑问，建议请发送邮件：tencentopen@tencent.com 与我们联系\n\n-----\n\n\nTencent Server Framework\n=======================\n\n## Overview\n\nTencent Server Framework is a coroutine and Swoole based server framework for fast server deployment which developed by Tencent engineers.\n\n## Features\n\n- PHP Based. Compared with C++, the framework is more efficient in developing and programing.\n- based on Swoole extension. powerful async IO, timers and other infrastructure capacity can be used in this framework.\n- support PHP coroutine. Synchronous programing is possible using the coroutine schedule system, and can lead to the similar server capability with that of server deveoped in an asynchronous way.\n- support server monitor and provide interface to add more rules \n\n\n## Requirements\n\n- php5.5+ \n- Swoole1.7.18+\n- linux,OS X\n\n## Installation\n- [PHP install](https://github.com/php/php-src)\n- [Swoole extension install](https://github.com/swoole/swoole-src)\n\n## Introduction\n\n- Tencent Server Framework can help you to start your server quickly,you just need to set a few settings\n\n### Server config\n\n```php\nvim server.ini\n\n[server]\n;server type:tcp，udp，http\ntype = http\n; port\nlisten[] = 12312\n; entrance file\nroot = '/data/web_deployment/serv/test/index.php'\n;php start path\nphp = '/usr/local/php/bin/php'\n\n[setting]\n; worker process num\nworker_num = 16\n; task process num\ntask_worker_num = 0\n; dispatch mode\ndispatch_mode = 2\n; daemonize\ndaemonize = 1\n; system log\nlog_file = '/data/log/test.log'\n\n```\n#### How to start your server\n```php\ncd /root/tsf/bin/\nphp swoole testHttpServ start\n\n```\n- Support Cmds: start,stop,reload,restart,status,shutdown,startall,list\n\n#### How to use TCP/UDP/HTTP Client\n- we support different network protocols: TCP,UDP,HTTP\n\n```php\n\n  $tcpReturn=(yield $this->tcpTest());\n  \n  $udpReturn=(yield $this->udpTest());\n\n  $httpReturn=(yield $this->httpTest());\n\n  public function tcpTest(){\n    $ip = '127.0.0.1';\n    $port = '9905';\n    $data = 'test';\n    $timeout = 0.5; //second\n    yield new Swoole\\Client\\TCP($ip, $port, $data, $timeout);\n  }\n  \n  public function udpTest(){\n    $ip = '127.0.0.1';\n    $port = '9905';\n    $data = 'test';\n    $timeout = 0.5; //second\n    yield new Swoole\\Client\\UDP($ip, $port, $data, $timeout);\n  }\n  \n  public function httpTest(){\n    $url='http://www.qq.com';\n    $httpRequest= new Swoole\\Client\\HTTP($url);\n    $data='testdata';\n    $header = array(\n      'Content-Length' => 12345,\n    );\n    yield $httpRequest->get($url); //yield $httpRequest->post($path, $data, $header);\n  }\n\n\n\n```\n\n#### How to use Muticall\n\n- Beside that,we also support Muticall:\n- you can use Muticall to send TCP,UDP packets at the sametime\n- when all the requests come back,return to interrupt\n\n```php\n  \n  $res = (yield $this->muticallTest());\n  \n  public function muticallTest(){\n    $calls=new Swoole\\Client\\Multi();\n    $firstReq=new Swoole\\Client\\TCP($ip, $port, $data, $timeout);\n    $secondReq=new Swoole\\Client\\UDP($ip, $port, $data, $timeout);\n    $thirdReq= new Swoole\\Client\\HTTP(\"http://www.qq.com\");\n\n    $calls ->request($firstReq,'first');             //first request\n    $calls ->request($secondReq,'second');             //second request\n    $calls ->request($thirdReq,'third');             //third request\n    yield $calls;\n  }\n\n  var_dump($res)\n  \n```\n#### Concect to mysql async \n\n```php\n\n    $sql = new Swoole\\Client\\MYSQL(array('host' => '127.0.0.1', 'port' => 3345, 'user' => 'root', 'password' => 'root', 'database' => 'test', 'charset' => 'utf-8',));\n    $ret = (yield $sql ->query('show tables'));\n    var_dump($ret);\n    $ret = (yield $sql ->query('desc test'));\n    var_dump($ret);\n    \n```\n\n#### Router\n- We support individuation route rules\n- now we realize some universal route rules and restful rules\n- besides that, we also support default GET parameter\n\n```php\n  URL                                       METHOD       CONTROLLER  ACTION\n  http://127.0.0.1:80/Test?h=1              ANY     ==>  TestController/ActionIndex\n\n  http://127.0.0.1:80/Test/send?h=1         ANY     ==>  TestController/ActionSend\n  Restful\n  http://127.0.0.1:80/rest                  GET     ==>  TestController/ActionList\n  http://127.0.0.1:80/rest/Test/22          GET     ==>  TestController/ActionView\n                                                         Get['id']=22\n  http://127.0.0.1:80/rest/Test             POST    ==>  TestController/ActionCreate\n  http://127.0.0.1:80/rest/Test/22          PUT     ==>  TestController/ActionUpdate\n                                                         Get['id']=22\n  http://127.0.0.1:80/rest/Test/22          DELETE  ==>  TestController/ActionDelete\n                                                         Get['id']=22\n  http://127.0.0.1:80/rest/Test/send/1/li   GET     ==>  TestController/ActionSend\n                                                         Get['cid']=1 Get['name']=li\n\n\n```\n## Performance \n\n\n## Contribution\n\nYour contribution to TSF development is very welcome!\n\nYou may contribute in the following ways:\n\n* [Repost issues and feedback](https://github.com/tencent-php/tsf/issues)\n* Submit fixes, features via Pull Request\n* Write/polish documentation\n"
        }
      ]
    }
  ]
}