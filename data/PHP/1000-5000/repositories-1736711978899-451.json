{
  "metadata": {
    "timestamp": 1736711978899,
    "page": 451,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "adamfisk/LittleProxy",
      "stars": 2071,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": "log.txt\n*.swp\n*.settings\n*.classpath\n*.project\n*.iml\n*.ipr\n*.iws\n*.DS_Store\n*.orig\ntarget/\n.idea/\njmeter.log\nlib/\nLittleProxy.pro\n/bin\n*.jks\nperformance/site/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1015625,
          "content": "sudo: false\n\nlanguage: java\njdk:\n  - oraclejdk7\n  - oraclejdk8\n\ncache:\n    directories:\n    - $HOME/.m2\n"
        },
        {
          "name": "COPYRIGHT.txt",
          "type": "blob",
          "size": 0.4921875,
          "content": "The LittleProxy Project - Copyright 2009 Last Bamboo LLC, and is licensed under the\nApache License version 2.0 as published by the Apache Software Foundation.\n\nA summary of the individual contributors is given below. Any omission should be\nsent to Adam Fisk <a@littleshoot.org>.\n\nSVN Login(s)            Name\n-------------------------------------------------------------------------------\nafisk                   Adam Fisk\n-------------------------------------------------------------------------------\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Netty_4_Upgrade_Notes.md",
          "type": "blob",
          "size": 1.7734375,
          "content": "Resources\n---------\n\nhttp://netty.io/news/2013/06/18/4-0-0-CR5.html\nhttp://netty.io/4.0/api\nhttp://docs.jboss.org/netty/3.2/api/\n\n\nRelevant Changes\n----------------\n* ServerBootstrap no longer takes a ServerSocketChannelFactory in its\n  constructor.  We used to use this to configure the thread pools.  Looks like\n  EventLoopGroup or its relatives are the place to look.\n\n* Same thing as #1 is true for ClientSocketChannelFactory.\n\n* ChannelPipelineFactory is gone.  Looks like one uses .childHandler() with a\n  ChannelInitializer instead.\n\n* What's up with ThreadRenamingRunnable in DefaultHttpProxyServer?\n\n* DefaultChannelGroup?\n\n* SimpleChannelUpstreamHandler -> SimpleChanneInboundHandler\n\n* InterestOps is gone - what does this mean to setReadable() and\n  channelInterestChanged()  ?\n\n* IdleStateHandler no longer users Timer.  This may be a problem, because it's\n  just scheduling things on an EventExecutor obtained from the underlying\n  EventLoopGroup.  That infrastructure doesn't appear to use Timers at all. \n\n* messageReceived() -> channelRead0 with POJO typed message\n\n* HttpChunk -> HttpObject\n\n* HttpChunkAggregator -> HttpObjectAggregator\n\n* Channel lifecycle is different:\n  * old: open -> bound -> connected\n  * new: open -> registered -> active   ??\n  \n* channelOpen() -> channelRegistered() ?  note that we added call to super\n\n* channelClosed() -> channelUnregistered() ?   note that we added call to super\n\n* lifecycle callbacks no longer get a ChannelStateEvent.  We often grabbed the\n  channel from the event, we now grab it from the ChannelHandlerContext.\n  \n* IdleStateAwareChannelHandler -> ChannelDuplexHandler\n\n* ChannelBuffer -> ByteBuf\n\n* Headers on HttpObject are no longer accessed directly, but first by getting\n  the headers object using .headers()\n  \n* ChannelBuffers -> Unpooled"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0927734375,
          "content": "[![Build Status](https://travis-ci.org/adamfisk/LittleProxy.png?branch=master)](https://travis-ci.org/adamfisk/LittleProxy)\n\nLittleProxy is a high performance HTTP proxy written in Java atop Trustin Lee's excellent [Netty](http://netty.io) event-based networking library. It's quite stable, performs well, and is easy to integrate into your projects. \n\nOne option is to clone LittleProxy and run it from the command line. This is as simple as:\n\n```\n$ git clone git://github.com/adamfisk/LittleProxy.git\n$ cd LittleProxy\n$ ./run.bash\n```\n\nYou can embed LittleProxy in your own projects through Maven with the following:\n\n```\n    <dependency>\n        <groupId>org.littleshoot</groupId>\n        <artifactId>littleproxy</artifactId>\n        <version>1.1.2</version>\n    </dependency>\n```\n\nOnce you've included LittleProxy, you can start the server with the following:\n\n```java\nHttpProxyServer server =\n    DefaultHttpProxyServer.bootstrap()\n        .withPort(8080)\n        .start();\n```\n\nTo intercept and manipulate HTTPS traffic, LittleProxy uses a man-in-the-middle (MITM) manager. LittleProxy's default\nimplementation (`SelfSignedMitmManager`) has a fairly limited feature set. For greater control over certificate impersonation,\nbrowser trust, the TLS handshake, and more, use a the LittleProxy-compatible MITM extension:\n- [LittleProxy-mitm](https://github.com/ganskef/LittleProxy-mitm) - A LittleProxy MITM extension that aims to support every Java platform including Android\n- [mitm](https://github.com/lightbody/browsermob-proxy/tree/master/mitm) - A LittleProxy MITM extension that supports elliptic curve cryptography and custom trust stores\n\nTo filter HTTP traffic, you can add request and response filters using a \n`HttpFiltersSource(Adapter)`, for example:\n\n```java\nHttpProxyServer server =\n    DefaultHttpProxyServer.bootstrap()\n        .withPort(8080)\n        .withFiltersSource(new HttpFiltersSourceAdapter() {\n            public HttpFilters filterRequest(HttpRequest originalRequest, ChannelHandlerContext ctx) {\n                return new HttpFiltersAdapter(originalRequest) {\n                    @Override\n                    public HttpResponse clientToProxyRequest(HttpObject httpObject) {\n                        // TODO: implement your filtering here\n                        return null;\n                    }\n\n                    @Override\n                    public HttpObject serverToProxyResponse(HttpObject httpObject) {\n                        // TODO: implement your filtering here\n                        return httpObject;\n                    }\n                };\n            }\n        })\n        .start();\n```\n\nPlease refer to the Javadoc of `org.littleshoot.proxy.HttpFilters` to see the \nmethods you can use. \n\nTo enable aggregator and inflater you have to return a value greater than 0 in \nyour `HttpFiltersSource#get(Request/Response)BufferSizeInBytes()` methods. This \nprovides to you a `FullHttp(Request/Response)' with the complete content in your \nfilter uncompressed. Otherwise you have to handle the chunks yourself.\n\n```java\n    @Override\n    public int getMaximumResponseBufferSizeInBytes() {\n        return 10 * 1024 * 1024;\n    }\n```\n\nThis size limit applies to every connection. To disable aggregating by URL at \n*.iso or *dmg files for example, you can return in your filters source a filter \nlike this:\n\n```java\nreturn new HttpFiltersAdapter(originalRequest, serverCtx) {\n    @Override\n    public void proxyToServerConnectionSucceeded(ChannelHandlerContext serverCtx) {\n        ChannelPipeline pipeline = serverCtx.pipeline();\n        if (pipeline.get(\"inflater\") != null) {\n            pipeline.remove(\"inflater\");\n        }\n        if (pipeline.get(\"aggregator\") != null) {\n            pipeline.remove(\"aggregator\");\n        }\n        super.proxyToServerConnectionSucceeded(serverCtx);\n    }\n};\n```\nThis enables huge downloads in an application, which regular handles size \nlimited `FullHttpResponse`s to modify its content, HTML for example. \n\nA proxy server like LittleProxy contains always a web server, too. If you get an \nURI without scheme, host and port in `originalRequest` it's a direct request to \nyour proxy. You can return a `HttpFilters` implementation which answers \nresponses with HTML content or redirects in `clientToProxyRequest` like this:\n\n```java\npublic class AnswerRequestFilter extends HttpFiltersAdapter {\n\tprivate final String answer;\n\n\tpublic AnswerRequestFilter(HttpRequest originalRequest, String answer) {\n\t\tsuper(originalRequest, null);\n\t\tthis.answer = answer;\n\t}\n\n\t@Override\n\tpublic HttpResponse clientToProxyRequest(HttpObject httpObject) {\n\t\tByteBuf buffer = Unpooled.wrappedBuffer(answer.getBytes(\"UTF-8\"));\n\t\tHttpResponse response = new DefaultFullHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK, buffer);\n\t\tHttpHeaders.setContentLength(response, buffer.readableBytes());\n\t\tHttpHeaders.setHeader(response, HttpHeaders.Names.CONTENT_TYPE, \"text/html\");\n\t\treturn response;\n\t}\n}\n```\nOn answering a redirect, you should add a Connection: close header, to avoid \nblocking behavior:\n```java\n\t\tHttpHeaders.setHeader(response, Names.CONNECTION, Values.CLOSE);\n```\nWith this trick, you can implement an UI to your application very easy.\n\nIf you want to create additional proxy servers with similar configuration but\nlistening on different ports, you can clone an existing server.  The cloned\nservers will share event loops to reduce resource usage and when one clone is\nstopped, all are stopped.\n\n```java\nexistingServer.clone().withPort(8081).start()\n```\n\nFor examples of configuring logging, see [src/test/resources/log4j.xml](src/test/resources/log4j.xml).\n\nIf you have questions, please visit our Google Group here:\n\nhttps://groups.google.com/forum/#!forum/littleproxy\n\nTo subscribe, send an E-Mail to mailto:LittleProxy+subscribe@googlegroups.com. \nSimply answering, don't clicking the button, bypasses Googles registration \nprocess. You will become a member. \n\nBenchmarking instructions and results can be found [here](performance).\n\nAcknowledgments\n---------------\n\nMany thanks to [The Measurement Factory](http://www.measurement-factory.com/) for the\nuse of [Co-Advisor](http://coad.measurement-factory.com/) for HTTP standards\ncompliance testing. \n"
        },
        {
          "name": "Yuml_Class_Diagram.md",
          "type": "blob",
          "size": 3.0458984375,
          "content": "// This code generates a UML diagram on yuml.me.  The diagram's purpose is mostly to understand dependencies\n// in order to facilitate the upgrade from Netty 3.x to 4.x.  It is neither a precise, complete nor accurate representation\n// of the object model.\n// Green background - Netty classes that appear to be carrying over from 3.x to 4.x\n// Red background - Netty classes that were lost in 4.x\n// Orange background - Netty classes introduced in 4.x that replace a class from 3.x\n\n\n\n\n[<<HttpProxyServer>>]^-.-[DefaultHttpProxyServer]\n[DefaultHttpProxyServer]creates ->[<<ProxyAuthorizationManager>>]\n[<<ProxyAuthorizationManager>>]^-.-[DefaultProxyAuthorizationManager]\n[DefaultHttpProxyServer]creates ->[<<ChainProxyManager>>]\n[DefaultHttpProxyServer]creates ->[<<HandshakeHandlerFactory>>]\n[<<HandshakeHandlerFactory>>]^-.-[SslHandshakeHandlerFactory]\n[<<HandshakeHandlerFactory>>]^-.-[SelfSignedSslHandshakeHandlerFactory]\n[DefaultHttpProxyServer]creates ->[<<HttpRequestFilter>>]\n[<<HttpRequestFilter>>]^-.-[PublicIpsOnlyRequestFilter]\n[<<HttpRequestFilter>>]^-.-[RegexHttpRequestFilter]\n[<<HttpRequestFilter>>]^-.-[ProxyUtils.PASS_THROUGH_REQUEST_FILTER]\n[DefaultHttpProxyServer]creates ->[<<HttpResponseFilters>>]\n[DefaultHttpProxyServer]creates ->[<<ProxyCacheManager>>]\n[<<ProxyCacheManager>>]^-.-[DefaultProxyCacheManager]\n[<<ProxyCacheManager>>]^-.-[SimpleProxyCacheManager]\n[<<ProxyCacheManager>>]^-.-[ProxyUtils.Noop Cache Manager]\n[DefaultHttpProxyServer]creates ->[<<ChannelGroup>>{bg:green}]\n[<<ChannelGroup>>]^-.-[DefaultChannelGroup]\n[DefaultHttpProxyServer]creates ->[<<Timer>>{bg:green}]\n[<<Timer>>]^-.-[HashedWheelTimer{bg:green}]\n[DefaultHttpProxyServer]creates ->[<<ServerSocketChannelFactory>>{bg:red}]\n[<<ServerSocketChannelFactory>>]^-.-[NioServerSocketChannelFactory{bg:red}]\n[DefaultHttpProxyServer]creates ->[<<ClientSocketChannelFactory>>{bg:red}]\n[<<ClientSocketChannelFactory>>]^-.-[NioClientSocketChannelFactory{bg:red}]\n[<<ChannelFactory>>{bg:green}]^-.-[<<ServerSocketChannelFactory>>]\n[<<ChannelFactory>>{bg:green}]^-.-[<<ClientSocketChannelFactory>>]\n[DefaultHttpProxyServer]creates ->[ServerBootstrap{bg:green}]\n[ServerBootstrap]->[<<ServerSocketChannelFactory>>]\n[<<ServerSocketChannelFactory>>]superseded by ->[<<EventLoopGroup>>{bg:orange}]\n[<<ClientSocketChannelFactory>>]superseded by ->[<<EventLoopGroup>>{bg:orange}]\n[ServerBootstrap]->[<<ChannelPipelineFactory>>{bg:red}]\n[<<ChannelPipelineFactory>>]^-.-[HttpServerPipelineFactory]\n[<<ChannelPipelineFactory>>]superseded by ->[<<ChannelInitializer>>{bg:orange}]\n// Next section - HttpServerPipelineFactory\n[HttpServerPipelineFactory]->[<<ChannelGroup>>{bg:orange}]\n[HttpServerPipelineFactory]->[<<ProxyAuthorizationManager>>]\n[HttpServerPipelineFactory]->[<<ChainProxyManager>>]\n[HttpServerPipelineFactory]->[<<HandshakeHandlerFactory>>]\n[HttpServerPipelineFactory]->[<<RelayPipelineFactory>>]\n[<<RelayPipelineFactory>>]^-.-[DefaultRelayPipelineFactory]\n[<<RelayPipelineFactory]->[<<ChannelPipelineFactory>>]\n[HttpServerPipelineFactory]->[<<Timer>>]\n[HttpServerPipelineFactory]->[<<ClientSocketChannelFactory>>{bg:orange}]"
        },
        {
          "name": "buildSite.bash",
          "type": "blob",
          "size": 0.1044921875,
          "content": "#!/usr/bin/env bash\n\nmvn site\ncp -R target/site/* ~/littleshoot/trunk/server/appengine/static/littleproxy/\n"
        },
        {
          "name": "chain_proxy_keystore_1.jks",
          "type": "blob",
          "size": 3.6611328125,
          "content": null
        },
        {
          "name": "deploy.bash",
          "type": "blob",
          "size": 0.0673828125,
          "content": "#!/bin/bash\n\nmvn -Dmaven.test.skip=true -DperformRelease=true deploy\n"
        },
        {
          "name": "littleproxy.properties",
          "type": "blob",
          "size": 0.1455078125,
          "content": "# Exposes proxy connection properties via JMX.\njmx=false\n# Idle connections are disconnected after X seconds of inactivity\nidle_connection_timeout=70"
        },
        {
          "name": "littleproxy_cert",
          "type": "blob",
          "size": 1.2041015625,
          "content": null
        },
        {
          "name": "littleproxy_keystore.jks",
          "type": "blob",
          "size": 3.625,
          "content": null
        },
        {
          "name": "perf.bash",
          "type": "blob",
          "size": 0.1015625,
          "content": "#!/usr/bin/env bash\n\nab -n 1000 -c 100 -X 127.0.0.1:8080 http://issues.littleshoot.org:8080/favicon.ico\n"
        },
        {
          "name": "perfServer.bash",
          "type": "blob",
          "size": 0.1689453125,
          "content": "#!/usr/bin/env bash\nfunction die() {\n  echo $*\n  exit 1\n}\n\nmvn test-compile exec:java -Dexec.mainClass=\"org.littleshoot.proxy.PerformanceServer\" -Dexec.classpathScope=\"test\""
        },
        {
          "name": "performance",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 26.70703125,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.littleshoot</groupId>\n    <artifactId>littleproxy</artifactId>\n    <packaging>jar</packaging>\n    <version>1.1.3-SNAPSHOT</version>\n    <name>LittleProxy</name>\n    <description>\n        LittleProxy is a high performance HTTP proxy written in Java and using the Netty networking framework.\n    </description>\n    <url>http://littleproxy.org</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <github.global.server>github</github.global.server>\n        <netty.version>4.0.44.Final</netty.version>\n        <slf4j.version>1.7.24</slf4j.version>\n        <java.version>1.7</java.version>\n    </properties>\n\n    <organization>\n        <name>LittleShoot</name>\n        <url>http://littleproxy.org</url>\n    </organization>\n\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n        </license>\n    </licenses>\n\n    <mailingLists>\n        <mailingList>\n            <archive>http://groups.google.com/group/littleproxy</archive>\n            <name>littleproxy</name>\n            <post>littleproxy@googlegroups.com</post>\n            <subscribe>http://groups.google.com/group/littleproxy</subscribe>\n            <unsubscribe>littleproxy+unsubscribe@googlegroups.com</unsubscribe>\n        </mailingList>\n    </mailingLists>\n\n    <issueManagement>\n        <system>github</system>\n        <url>https://github.com/adamfisk/LittleProxy/issues</url>\n    </issueManagement>\n\n    <scm>\n        <connection>scm:git:https://adamfisk@github.com/adamfisk/LittleProxy.git</connection>\n        <developerConnection>scm:git:git@github.com:adamfisk/LittleProxy</developerConnection>\n        <url>scm:git:git@github.com:adamfisk/LittleProxy.git</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <inceptionYear>2009</inceptionYear>\n\n    <!-- disable doclint, since Java 8 treats warnings as errors -->\n    <profiles>\n        <profile>\n            <id>doclint-java8-disable</id>\n            <activation>\n                <jdk>[1.8,)</jdk>\n            </activation>\n            <properties>\n                <javadoc.opts>-Xdoclint:none</javadoc.opts>\n            </properties>\n        </profile>\n        <profile>\n            <id>doclint-java7-earlier</id>\n            <activation>\n                <jdk>[,1.8)</jdk>\n            </activation>\n            <properties>\n                <javadoc.opts />\n            </properties>\n        </profile>\n\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <!-- Skipping tests when preparing a release -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <version>2.19.1</version>\n                        <configuration>\n                            <skipTests>true</skipTests>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.0.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>2.10.4</version>\n                        <configuration>\n                            <source>${java.version}</source>\n                            <!-- disable doclint, since Java 8 treats warnings as errors -->\n                            <additionalparam>${javadoc.opts}</additionalparam>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.6.7</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>false</autoReleaseAfterClose>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-release-plugin</artifactId>\n                        <version>2.5.3</version>\n                        <configuration>\n                            <autoVersionSubmodules>true</autoVersionSubmodules>\n                            <useReleaseProfile>false</useReleaseProfile>\n                            <releaseProfiles>release</releaseProfiles>\n                            <goals>deploy</goals>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>netty-4.1</id>\n            <properties>\n                <netty.version>4.1.8.Final</netty.version>\n            </properties>\n        </profile>\n    </profiles>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n            <version>23.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-cli</groupId>\n            <artifactId>commons-cli</artifactId>\n            <version>1.3.1</version>\n            <!-- Only required when running as a standalone jar -->\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>3.5</version>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-core</artifactId>\n            <version>1.3</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-library</artifactId>\n            <version>1.3</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>jetty-server</artifactId>\n            <version>8.1.17.v20150415</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>2.7.12</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mock-server</groupId>\n            <artifactId>mockserver-netty</artifactId>\n            <version>3.10.4</version>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-classic</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>org.seleniumhq.selenium</groupId>\n            <artifactId>selenium-java</artifactId>\n            <version>2.53.1</version>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>io.netty</groupId>\n                    <artifactId>netty</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpclient</artifactId>\n            <version>4.5.3</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-all</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.barchart.udt</groupId>\n            <artifactId>barchart-udt-bundle</artifactId>\n            <version>2.3.0</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.littleshoot</groupId>\n            <artifactId>dnssec4j</artifactId>\n            <version>0.1.6</version>\n            <optional>true</optional>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.littleshoot</groupId>\n                    <artifactId>dnsjava</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>dnsjava</groupId>\n            <artifactId>dnsjava</artifactId>\n            <version>2.1.8</version>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>${slf4j.version}</version>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n\n        <!-- Test dependencies -->\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-exec</artifactId>\n            <version>1.3</version>\n            <scope>test</scope>\n        </dependency>\n\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- Manage the version of all netty libraries included in netty-all. This prevents maven from pulling multiple netty versions\n                 onto the compile and test classpaths if transitive dependencies also use netty but declare specific dependencies, rather\n                 than using netty-all as we do. -->\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-all</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-buffer</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-haproxy</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-socks</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-rxtx</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-sctp</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-udp</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-example</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <prerequisites>\n        <maven>3.0.4</maven>\n    </prerequisites>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>1.4.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.6</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>2.5.3</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>2.10</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.0.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.8.2</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.5.2</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.0.2</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>2.19.1</version>\n                <configuration>\n                    <argLine>-Xmx1g -XX:MaxPermSize=256m</argLine>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.6.0</version>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>2.10.4</version>\n                <configuration>\n                    <show>private</show>\n                    <source>${java.version}</source>\n                    <links>\n                        <link>http://netty.io/4.0/api/</link>\n                    </links>\n                    <!-- disable doclint, since Java 8 treats warnings as errors -->\n                    <additionalparam>${javadoc.opts}</additionalparam>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>2.4.3</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n                            <shadedArtifactAttached>true</shadedArtifactAttached>\n                            <shadedClassifierName>littleproxy-shade</shadedClassifierName>\n                            <artifactSet>\n                                <excludes>\n                                    <exclude>org.bouncycastle:*</exclude>\n                                </excludes>\n                            </artifactSet>\n\n                            <filters>\n                                <filter>\n                                    <artifact>*:*</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/*.SF</exclude>\n                                        <exclude>META-INF/*.DSA</exclude>\n                                        <exclude>META-INF/*.RSA</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n\n                            <transformers>\n                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                                    <manifestEntries>\n                                        <Main-Class>org.littleshoot.proxy.Launcher</Main-Class>\n                                    </manifestEntries>\n                                </transformer>\n                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.IncludeResourceTransformer\">\n                                    <resource>log4j.xml</resource>\n                                    <file>src/main/config/log4j.xml</file>\n                                </transformer>\n                            </transformers>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <reporting>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>3.4</version>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <version>2.10</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>analyze-report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>2.9</version>\n                <configuration>\n                    <dependencyDetailsEnabled>true</dependencyDetailsEnabled>\n                    <dependencyLocationsEnabled>true</dependencyLocationsEnabled>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>2.10.3</version>\n                <configuration>\n                    <show>private</show>\n                    <source>${java.version}</source>\n                    <links>\n                        <link>http://netty.io/4.0/api/</link>\n                    </links>\n                    <!-- disable doclint, since Java 8 treats warnings as errors -->\n                    <additionalparam>${javadoc.opts}</additionalparam>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-report-plugin</artifactId>\n                <version>2.19.1</version>\n                <configuration>\n                    <showSuccess>false</showSuccess>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>2.17</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-changelog-plugin</artifactId>\n                <version>2.3</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-changes-plugin</artifactId>\n                <version>2.12.1</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>github-report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>findbugs-maven-plugin</artifactId>\n                <version>3.0.4</version>\n                <configuration>\n                    <!-- Optional directory to put findbugs xml report -->\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>2.5</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-pmd-plugin</artifactId>\n                <version>3.7</version>\n                <configuration>\n                    <linkXRef>true</linkXRef>\n                    <sourceEncoding>utf-8</sourceEncoding>\n                    <minimumTokens>100</minimumTokens>\n                    <targetJdk>${java.version}</targetJdk>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <version>2.3</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>dependency-updates-report</report>\n                            <report>plugin-updates-report</report>\n                            <report>property-updates-report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n\n            <!-- Tag Report -->\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>taglist-maven-plugin</artifactId>\n                <version>2.4</version>\n                <configuration>\n                    <multipleLineComments>true</multipleLineComments>\n                    <tags>\n                        <tag>mudo</tag>\n                        <tag>todo</tag>\n                        <tag>idea</tag>\n                        <tag>MUDO</tag>\n                        <tag>TODO</tag>\n                        <tag>IDEA</tag>\n                    </tags>\n                </configuration>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <developers>\n        <developer>\n            <id>afisk</id>\n            <name>Adam fisk</name>\n            <email>a@littleshoot.org</email>\n            <organization>LittleShoot</organization>\n            <organizationUrl>http://www.littleshoot.org/</organizationUrl>\n            <roles><role>Developer</role></roles>\n            <timezone>-5</timezone>\n        </developer>\n\n        <developer>\n            <id>ox.to.a.cart</id>\n            <name>Ox Cart</name>\n            <email>ox@getlantern.org</email>\n            <organization>GetLantern</organization>\n            <organizationUrl>https://www.getlantern.org/</organizationUrl>\n            <roles><role>Developer</role></roles>\n            <timezone>-5</timezone>\n        </developer>\n    </developers>\n</project>\n"
        },
        {
          "name": "run.bash",
          "type": "blob",
          "size": 0.4384765625,
          "content": "#!/usr/bin/env bash\nfunction die() {\n  echo $*\n  exit 1\n}\n\nmvn package -Dmaven.test.skip=true || die \"Could not package\"\n\nfullPath=`dirname $0`\njar=`find $fullPath/target/littleproxy*-littleproxy-shade.jar`\ncp=`echo $jar | sed 's,./,'$fullPath'/,'`\njavaArgs=\"-server -XX:+HeapDumpOnOutOfMemoryError -Xmx800m -jar \"$cp\" $*\"\n\necho \"Running using Java on path at `which java` with args $javaArgs\"\njava $javaArgs || die \"Java process exited abnormally\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tagRelease.bash",
          "type": "blob",
          "size": 0.3447265625,
          "content": "#!/usr/bin/env bash\n\nARGS=1  # One arg to script expected.\n\nif [ $# -ne \"$ARGS\" ]\nthen\n  echo \"Must include the version number\"\n  exit 1\nfi\n\nRELEASE_VERSION=$1\nsvn copy \"http://svn.littleshoot.org/svn/littleproxy/trunk\" \"http://svn.littleshoot.org/svn/littleproxy/tags/littleproxy-${RELEASE_VERSION}\" -m \"Tag for LittleProxy release ${RELEASE_VERSION}\"\n"
        }
      ]
    }
  ]
}