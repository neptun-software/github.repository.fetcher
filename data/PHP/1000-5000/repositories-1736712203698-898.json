{
  "metadata": {
    "timestamp": 1736712203698,
    "page": 898,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jenssegers/optimus",
      "stars": 1270,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.166015625,
          "content": "/.github            export-ignore\n/tests              export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/phpunit.xml        export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": "/vendor\n/build/\ncomposer.lock\n/.phpunit.result.cache\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2021 Jens Segers\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5087890625,
          "content": "# Optimus id transformation\n\n[![Packagist](https://badgen.net/packagist/v/jenssegers/optimus)](https://packagist.org/packages/jenssegers/optimus)\n[![Downloads](https://badgen.net/packagist/dt/jenssegers/optimus)](https://packagist.org/packages/jenssegers/optimus/stats)\n[![Build](https://github.com/jenssegers/optimus/workflows/tests/badge.svg)](https://github.com/jenssegers/optimus/actions) \n[![Coverage](http://img.shields.io/coveralls/jenssegers/optimus.svg)](https://coveralls.io/r/jenssegers/optimus?branch=master)\n\nWith this library, you can transform your internal id's to obfuscated integers based on Knuth's integer hash. It is similar to Hashids, but will generate integers instead of random strings. It is also super fast.\n\n<p align=\"center\">\n<img src=\"https://jenssegers.com/static/media/optimus.png\">\n</p>\n\n## Installation\n\nInstall using composer:\n\n```bash\ncomposer require jenssegers/optimus\n```\n\nIf you will be running your code on a 32 bit system or will be working with large prime numbers it is suggested that you install the [GMP extension](http://php.net/manual/en/book.gmp.php). \nFor debian/ubuntu you can install the extension with one of these commands:\n\n```bash\napt-get install php7.4-gmp\napt-get install php8.0-gmp\napt-get install php8.1-gmp\n```\n\n## Usage\n\nTo get started you will need 3 things;\n\n - Large prime number lower than `2147483647`\n - The inverse prime so that `(PRIME * INVERSE) & MAXID == 1`\n - A large random integer lower than `2147483647`\n\nLuckily for you, I have included a console command that can do all of this for you. To get started, just run the following command:\n\n```bash\n> php vendor/bin/optimus spark\n\nPrime: 2123809381\nInverse: 1885413229\nRandom: 146808189\n```\n\nIf you prefer to choose your own prime number (from [this list](http://primes.utm.edu/lists/small/millions/) for example), you can pass it to the command to calculate the remaining numbers:\n\n```bash\n> php vendor/bin/optimus spark 1580030173\n\nPrime: 1580030173\nInverse: 59260789\nRandom: 1163945558\n```\n\nUsing those numbers, you can start creating instances of `Optimus($prime, $inverted, $random)`:\n\n```php\nuse Jenssegers\\Optimus\\Optimus;\n\nnew Optimus(1580030173, 59260789, 1163945558);\n```\n\n**NOTE**: Make sure that you are using the same constructor values throughout your entire application!\n\n## Encoding and decoding\n\nTo encode id's, use the `encode` method:\n\n```php\n$encoded = $optimus->encode(20); // 1535832388\n```\n\nTo decode the resulting `1535832388` back to its original value, use the `decode` method:\n\n```php\n$original = $optimus->decode(1535832388); // 20\n```\n\n## Framework Integrations\n\n### Laravel\n\nThis is an example service provider which registers a shared Optimus instance for your entire application:\n\n```php\n<?php\n\nnamespace App\\Providers;\n\nuse Jenssegers\\Optimus\\Optimus;\nuse Illuminate\\Support\\ServiceProvider;\n\nclass OptimusServiceProvider extends ServiceProvider\n{\n    public function register()\n    {\n        $this->app->singleton(Optimus::class, function ($app) {\n            return new Optimus(1580030173, 59260789, 1163945558);\n        });\n    }\n}\n```\n\nOnce you have created the service provider, add it to the providers array in your `config/app.php` configuration file:\n\n```\nApp\\Providers\\OptimusServiceProvider::class,\n```\n\n\nLaravel's automatic injection will pass this instance where needed. Example controller:\n\n```php\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Jenssegers\\Optimus\\Optimus;\nuse App\\Http\\Controllers\\Controller;\n\nclass UserController extends Controller\n{\n    public function show($id, Optimus $optimus)\n    {\n        $id = $optimus->decode($id);\n    }\n}\n```\n\nMore information: https://laravel.com/docs/5.3/container#resolving\n\n**Third-party integrations**\n\n* An integration with Laravel is provided by the [propaganistas/laravel-fakeid](https://packagist.org/packages/propaganistas/laravel-fakeid) package.\n* Laravel Optimus with multiple connections provided by the [cybercog/laravel-optimus](https://github.com/cybercog/laravel-optimus) package.\n* An integration with Silex 2 is provided by the [jaam/silex-optimus-provider](https://packagist.org/packages/jaam/silex-optimus-provider) package.\n* An integration with Laravel is provided by the [elfsundae/laravel-hashid](https://github.com/ElfSundae/laravel-hashid) package.\n* A PSR-15 middleware provided by the [icanhazstring/optimus-middleware](https://github.com/icanhazstring/optimus-middleware) package.\n\n## Security contact information\n\nTo report a security vulnerability, follow [these steps](https://tidelift.com/security).\n\n## License\n\nThe [MIT](https://opensource.org/licenses/MIT) License."
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.05859375,
          "content": "{\n    \"name\": \"jenssegers/optimus\",\n    \"description\": \"Id obfuscation based on Knuth's integer hash method\",\n    \"keywords\": [\"obfuscation\", \"ids\", \"optimus\", \"hashids\", \"id obfuscation\"],\n    \"homepage\": \"https://github.com/jenssegers/optimus\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Jens Segers\",\n            \"homepage\": \"https://jenssegers.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.4||^8.0\",\n        \"phpseclib/phpseclib\": \"^3.0\",\n        \"symfony/console\": \"^5.0||^6.0||^7.0\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^9.5.10\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Jenssegers\\\\Optimus\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Jenssegers\\\\Optimus\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"suggest\": {\n        \"ext-gmp\": \"Required for 32bit systems\"\n    },\n    \"bin\": [\"bin/optimus\"],\n    \"config\": {\n        \"sort-packages\": true,\n        \"preferred-install\": \"dist\"\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit --testdox --color=always\"\n    }\n}\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.7939453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n    <coverage includeUncoveredFiles=\"false\">\n        <include>\n            <directory suffix=\".php\">src/</directory>\n        </include>\n    </coverage>\n    <testsuites>\n        <testsuite name=\"Optimus\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}