{
  "metadata": {
    "timestamp": 1736711962652,
    "page": 415,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "symfony/inflector",
      "stars": 2207,
      "defaultBranch": "5.4",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "/Tests export-ignore\n/phpunit.xml.dist export-ignore\n/.git* export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "vendor/\ncomposer.lock\nphpunit.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.126953125,
          "content": "CHANGELOG\n=========\n\n5.1.0\n-----\n\n * The component has been deprecated, use `EnglishInflector` from the String component instead.\n"
        },
        {
          "name": "Inflector.php",
          "type": "blob",
          "size": 2.0673828125,
          "content": "<?php\n\n/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier <fabien@symfony.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Symfony\\Component\\Inflector;\n\nuse Symfony\\Component\\String\\Inflector\\EnglishInflector;\n\ntrigger_deprecation('symfony/inflector', '5.1', 'The \"%s\" class is deprecated, use \"%s\" instead.', Inflector::class, EnglishInflector::class);\n\n/**\n * Converts words between singular and plural forms.\n *\n * @author Bernhard Schussek <bschussek@gmail.com>\n *\n * @deprecated since Symfony 5.1, use Symfony\\Component\\String\\Inflector\\EnglishInflector instead.\n */\nfinal class Inflector\n{\n    private static $englishInflector;\n\n    /**\n     * This class should not be instantiated.\n     */\n    private function __construct()\n    {\n    }\n\n    /**\n     * Returns the singular form of a word.\n     *\n     * If the method can't determine the form with certainty, an array of the\n     * possible singulars is returned.\n     *\n     * @param string $plural A word in plural form\n     *\n     * @return string|array\n     */\n    public static function singularize(string $plural)\n    {\n        if (1 === \\count($singulars = self::getEnglishInflector()->singularize($plural))) {\n            return $singulars[0];\n        }\n\n        return $singulars;\n    }\n\n    /**\n     * Returns the plural form of a word.\n     *\n     * If the method can't determine the form with certainty, an array of the\n     * possible plurals is returned.\n     *\n     * @param string $singular A word in singular form\n     *\n     * @return string|array\n     */\n    public static function pluralize(string $singular)\n    {\n        if (1 === \\count($plurals = self::getEnglishInflector()->pluralize($singular))) {\n            return $plurals[0];\n        }\n\n        return $plurals;\n    }\n\n    private static function getEnglishInflector(): EnglishInflector\n    {\n        if (!self::$englishInflector) {\n            self::$englishInflector = new EnglishInflector();\n        }\n\n        return self::$englishInflector;\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2012-present Fabien Potencier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.65234375,
          "content": "Inflector Component\n===================\n\n**CAUTION**: this component is deprecated since Symfony 5.1. Instead, use the\n[String component EnglishInflector](https://github.com/symfony/symfony/tree/master/src/Symfony/Component/String/Inflector/EnglishInflector.php).\n\n-----\n\nThe Inflector component converts words between their singular and plural forms\n(English only).\n\nResources\n---------\n\n * [Contributing](https://symfony.com/doc/current/contributing/index.html)\n * [Report issues](https://github.com/symfony/symfony/issues) and\n   [send Pull Requests](https://github.com/symfony/symfony/pulls)\n   in the [main Symfony repository](https://github.com/symfony/symfony)\n"
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.955078125,
          "content": "{\n    \"name\": \"symfony/inflector\",\n    \"type\": \"library\",\n    \"description\": \"Converts words between their singular and plural forms (English only)\",\n    \"keywords\": [\n        \"string\",\n        \"inflection\",\n        \"singularize\",\n        \"pluralize\",\n        \"words\",\n        \"symfony\"\n    ],\n    \"homepage\": \"https://symfony.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Bernhard Schussek\",\n            \"email\": \"bschussek@gmail.com\"\n        },\n        {\n            \"name\": \"Symfony Community\",\n            \"homepage\": \"https://symfony.com/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=7.2.5\",\n        \"symfony/deprecation-contracts\": \"^2.1|^3\",\n        \"symfony/polyfill-php80\": \"^1.16\",\n        \"symfony/string\": \"^5.4.47|^6.4.15\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Symfony\\\\Component\\\\Inflector\\\\\": \"\" },\n        \"exclude-from-classmap\": [\n            \"/Tests/\"\n        ]\n    },\n    \"minimum-stability\": \"dev\"\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8662109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/5.2/phpunit.xsd\"\n         backupGlobals=\"false\"\n         colors=\"true\"\n         bootstrap=\"vendor/autoload.php\"\n         failOnRisky=\"true\"\n         failOnWarning=\"true\"\n>\n    <php>\n        <ini name=\"error_reporting\" value=\"-1\" />\n    </php>\n\n    <testsuites>\n        <testsuite name=\"Symfony Inflector Component Test Suite\">\n            <directory>./Tests/</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist>\n            <directory>./</directory>\n            <exclude>\n                <directory>./Resources</directory>\n                <directory>./Tests</directory>\n                <directory>./vendor</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        }
      ]
    }
  ]
}