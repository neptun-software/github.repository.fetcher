{
  "metadata": {
    "timestamp": 1736711822550,
    "page": 120,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aimeos/aimeos-core",
      "stars": 3563,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.205078125,
          "content": "config/resource.php\ncomposer.lock\n\nPackages/\npublic/\nvendor/\n\nmisc/apidoc/\nmisc/confdoc/\n\ntests/tmp/\n.phpunit.result.cache\n.phpunit.cache\ncoveralls.json\ncoverage.xml\n*.ser\n*.log\n\n.buildpath\n.project\n.settings/\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "Bootstrap.php",
          "type": "blob",
          "size": 10.7216796875,
          "content": "<?php\n\n/**\n * @license LGPLv3, https://opensource.org/licenses/LGPL-3.0\n * @copyright Metaways Infosystems GmbH, 2011\n * @copyright Aimeos (aimeos.org), 2015-2021\n */\n\n\nnamespace Aimeos;\n\n\n/**\n * Global starting point for applicatons.\n */\nclass Bootstrap\n{\n\tprivate $manifests = [];\n\tprivate $extensions = [];\n\tprivate $extensionsDone = [];\n\tprivate $dependencies = [];\n\tprivate static $includePaths = [];\n\tprivate static $autoloader = false;\n\n\n\t/**\n\t * Initialises the object.\n\t *\n\t * @param array $extdirs List of directories to look for manifest files (or sub-directories thereof)\n\t * @param boolean $defaultdir If default extension directory should be included automatically\n\t * @param string|null $basedir Aimeos core path (optional, __DIR__ if null)\n\t */\n\tpublic function __construct( array $extdirs = [], bool $defaultdir = true, ?string $basedir = null )\n\t{\n\t\t$basedir = $basedir ?: __DIR__;\n\t\t$class = '\\Composer\\InstalledVersions';\n\n\t\tif( $defaultdir && is_dir( $basedir . DIRECTORY_SEPARATOR . 'ext' ) ) {\n\t\t\t$extdirs[] = realpath( $basedir . DIRECTORY_SEPARATOR . 'ext' );\n\t\t}\n\n\t\tif( class_exists( $class ) && method_exists( $class, 'getInstalledPackagesByType' ) )\n\t\t{\n\t\t\t$packages = \\Composer\\InstalledVersions::getInstalledPackagesByType( 'aimeos-extension' );\n\n\t\t\tforeach( $packages as $package ) {\n\t\t\t\t$extdirs[] = realpath( \\Composer\\InstalledVersions::getInstallPath( $package ) );\n\t\t\t}\n\t\t}\n\n\t\t$this->manifests[$basedir] = $this->getManifestFile( $basedir );\n\n\t\tself::$includePaths = $this->getIncludePaths();\n\t\t$this->registerAutoloader();\n\t\t$this->addDependencies( $extdirs );\n\t\t$this->addManifests( $this->dependencies );\n\t\tself::$includePaths = $this->getIncludePaths();\n\t}\n\n\n\t/**\n\t * Loads the class files for a given class name.\n\t *\n\t * @param string $className Name of the class\n\t * @return bool True if file was found, false if not\n\t */\n\tpublic static function autoload( string $className ) : bool\n\t{\n\t\t$fileName = strtr( ltrim( $className, '\\\\' ), '\\\\_', DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR ) . '.php';\n\n\t\tif( strncmp( $fileName, 'Aimeos' . DIRECTORY_SEPARATOR, 7 ) === 0 ) {\n\t\t\t$fileName = substr( $fileName, 7 );\n\t\t}\n\n\t\tforeach( self::$includePaths as $path )\n\t\t{\n\t\t\t$file = $path . DIRECTORY_SEPARATOR . $fileName;\n\n\t\t\tif( file_exists( $file ) === true && ( include_once $file ) !== false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tforeach( explode( PATH_SEPARATOR, get_include_path() ) as $path )\n\t\t{\n\t\t\t$file = $path . DIRECTORY_SEPARATOR . $fileName;\n\n\t\t\tif( file_exists( $file ) === true && ( include_once $file ) !== false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Returns the paths containing the required configuration files.\n\t *\n\t * @return string[] List of configuration paths\n\t */\n\tpublic function getConfigPaths() : array\n\t{\n\t\t$confpaths = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( !isset( $manifest['config'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach( (array) $manifest['config'] as $relpath ) {\n\t\t\t\t$confpaths[] = $path . DIRECTORY_SEPARATOR . $relpath;\n\t\t\t}\n\t\t}\n\n\t\treturn $confpaths;\n\t}\n\n\n\t/**\n\t * Returns the paths stored in the manifest file for the given custom section.\n\t *\n\t * @param string $section Name of the section like in the manifest file\n\t * @return array List of paths\n\t */\n\tpublic function getCustomPaths( string $section ) : array\n\t{\n\t\t$paths = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( isset( $manifest['custom'][$section] ) ) {\n\t\t\t\t$paths[$path] = $manifest['custom'][$section];\n\t\t\t}\n\t\t}\n\n\t\treturn $paths;\n\t}\n\n\n\t/**\n\t * Returns the available extensions\n\t *\n\t * @return array List of available extension names\n\t */\n\tpublic function getExtensions() : array\n\t{\n\t\t$list = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( isset( $manifest['name'] ) && $manifest['name'] != '' ) {\n\t\t\t\t$list[] = $manifest['name'];\n\t\t\t} else {\n\t\t\t\t$list[] = basename( $path );\n\t\t\t}\n\t\t}\n\n\t\treturn $list;\n\t}\n\n\n\t/**\n\t * Returns the language IDs for the available translations\n\t *\n\t * @param string $section Section name in the i18n paths\n\t * @return array List of ISO language codes\n\t */\n\tpublic function getI18nList( string $section ) : array\n\t{\n\t\t$list = [];\n\t\t$paths = $this->getI18nPaths();\n\t\t$paths = ( isset( $paths[$section] ) ? (array) $paths[$section] : [] );\n\n\t\tforeach( $paths as $path )\n\t\t{\n\t\t\t$iter = new \\DirectoryIterator( $path );\n\n\t\t\tforeach( $iter as $file )\n\t\t\t{\n\t\t\t\t$name = $file->getFilename();\n\n\t\t\t\tif( $file->isFile() && preg_match( '/^[a-z]{2,3}(_[A-Z]{2})?$/', $name ) ) {\n\t\t\t\t\t$list[$name] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tksort( $list );\n\t\treturn array_keys( $list );\n\t}\n\n\n\t/**\n\t * Returns the list of paths for each domain where the translation files are located.\n\t *\n\t * @return array Associative list of i18n domains and lists of absolute paths to the translation directories\n\t */\n\tpublic function getI18nPaths() : array\n\t{\n\t\t$paths = [];\n\n\t\tforeach( $this->manifests as $basePath => $manifest )\n\t\t{\n\t\t\tif( !isset( $manifest['i18n'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach( $manifest['i18n'] as $domain => $location ) {\n\t\t\t\t$paths[$domain][] = $basePath . DIRECTORY_SEPARATOR . $location;\n\t\t\t}\n\t\t}\n\n\t\treturn $paths;\n\t}\n\n\n\t/**\n\t * Returns the include paths containing the required class files.\n\t *\n\t * @return array List of include paths\n\t */\n\tpublic function getIncludePaths() : array\n\t{\n\t\t$includes = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( !isset( $manifest['include'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach( $manifest['include'] as $paths ) {\n\t\t\t\t$includes[] = $path . DIRECTORY_SEPARATOR . $paths;\n\t\t\t}\n\t\t}\n\n\t\treturn $includes;\n\t}\n\n\n\t/**\n\t * Returns the list of paths where setup tasks are stored.\n\t *\n\t * @param string $site Name of the site like \"default\", \"unitperf\" and \"unittest\"\n\t * @return array List of setup paths\n\t */\n\tpublic function getSetupPaths( string $site ) : array\n\t{\n\t\t$setupPaths = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( !isset( $manifest['setup'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach( $manifest['setup'] as $relpath )\n\t\t\t{\n\t\t\t\t$setupPaths[] = $path . DIRECTORY_SEPARATOR . $relpath;\n\n\t\t\t\t$sitePath = $path . DIRECTORY_SEPARATOR . $relpath . DIRECTORY_SEPARATOR . $site;\n\n\t\t\t\tif( is_dir( realpath( $sitePath ) ) ) {\n\t\t\t\t\t$setupPaths[] = $sitePath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $setupPaths;\n\t}\n\n\n\t/**\n\t * Returns the template paths stored in the manifest file for the given section and theme.\n\t *\n\t * @param string $section Name of the section like in the manifest file\n\t * @param string|null $theme Name of the theme to get specific template paths for\n\t * @return array List of paths\n\t */\n\tpublic function getTemplatePaths( string $section, ?string $theme = null ) : array\n\t{\n\t\t$paths = [];\n\n\t\tforeach( $this->manifests as $path => $manifest )\n\t\t{\n\t\t\tif( isset( $manifest['template'][$section] ) ) {\n\t\t\t\t$paths[$path] = $manifest['template'][$section];\n\t\t\t}\n\n\t\t\tif( $theme && isset( $manifest['template'][$theme][$section] ) ) {\n\t\t\t\t$paths[$path] = $manifest['template'][$theme][$section];\n\t\t\t}\n\t\t}\n\n\t\treturn $paths;\n\t}\n\n\n\t/**\n\t * Returns the configurations of the manifest files in the given directories.\n\t *\n\t * @param array $directories List of directories where the manifest files are stored\n\t * @return array Associative list of directory / configuration array pairs\n\t */\n\tprotected function getManifests( array $directories ) : array\n\t{\n\t\t$manifests = [];\n\n\t\tforeach( $directories as $directory )\n\t\t{\n\t\t\t$manifest = $this->getManifestFile( $directory );\n\n\t\t\tif( $manifest !== false )\n\t\t\t{\n\t\t\t\t$manifests[$directory] = $manifest;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( file_exists( $directory ) )\n\t\t\t{\n\t\t\t\t$dir = new \\DirectoryIterator( $directory );\n\n\t\t\t\tforeach( $dir as $dirinfo )\n\t\t\t\t{\n\t\t\t\t\tif( $dirinfo->isDir() === false || $dirinfo->isDot() !== false\n\t\t\t\t\t\t|| substr( $dirinfo->getFilename(), 0, 1 ) === '.'\n\t\t\t\t\t\t|| ( $manifest = $this->getManifestFile( $dirinfo->getPathName() ) ) === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$manifests[$dirinfo->getPathName()] = $manifest;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $manifests;\n\t}\n\n\n\t/**\n\t * Loads the manifest file from the given directory.\n\t *\n\t * @param string $dir Directory that includes the manifest file\n\t * @return array|false Associative list of configurations or false if the file doesn't exist\n\t */\n\tprotected function getManifestFile( string $dir )\n\t{\n\t\t$manifestFile = $dir . DIRECTORY_SEPARATOR . 'manifest.php';\n\n\t\tif( file_exists( $manifestFile ) )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn include $manifestFile;\n\t\t\t}\n\t\t\tcatch( \\Throwable $t )\n\t\t\t{\n\t\t\t\techo $manifestFile . ':' . PHP_EOL . $t->getMessage() . PHP_EOL . PHP_EOL . $t->getTraceAsString() . PHP_EOL;\n\t\t\t\texit( 1 );\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Registers the Aimeos autoloader.\n\t */\n\tprotected function registerAutoloader()\n\t{\n\t\tif( self::$autoloader === false )\n\t\t{\n\t\t\tspl_autoload_register( array( $this, 'autoload' ), true, false );\n\t\t\tself::$autoloader = true;\n\t\t}\n\n\t\t$ds = DIRECTORY_SEPARATOR;\n\n\t\tif( is_file( __DIR__ . $ds . 'vendor' . $ds . 'autoload.php' ) ) {\n\t\t\trequire __DIR__ . $ds . 'vendor' . $ds . 'autoload.php';\n\t\t}\n\t}\n\n\n\t/**\n\t * Adds the dependencies from the extensions\n\t *\n\t * @param array $extdirs List of extension directories\n\t * @throws \\Exception If dependencies are incorrectly configured\n\t */\n\tprivate function addDependencies( array $extdirs )\n\t{\n\t\tforeach( $this->getManifests( $extdirs ) as $location => $manifest )\n\t\t{\n\t\t\tif( isset( $this->extensions[$manifest['name']] ) )\n\t\t\t{\n\t\t\t\t$location2 = $this->extensions[$manifest['name']]['location'];\n\t\t\t\t$msg = 'Extension \"%1$s\" exists twice in \"%2$s\" and in \"%3$s\"';\n\t\t\t\tthrow new \\Exception( sprintf( $msg, $manifest['name'], $location, $location2 ) );\n\t\t\t}\n\n\t\t\tif( !isset( $manifest['depends'] ) || !is_array( $manifest['depends'] ) ) {\n\t\t\t\tthrow new \\Exception( sprintf( 'Incorrect dependency configuration in manifest \"%1$s\"', $location ) );\n\t\t\t}\n\n\t\t\t$manifest['location'] = $location;\n\t\t\t$this->extensions[$manifest['name']] = $manifest;\n\n\t\t\tforeach( $manifest['depends'] as $name ) {\n\t\t\t\t$this->dependencies[$manifest['name']][$name] = $name;\n\t\t\t}\n\t\t}\n\n\t\tksort( $this->dependencies );\n\t}\n\n\n\t/**\n\t * Re-order the given dependencies of each manifest configuration.\n\t *\n\t * @param array $deps List of dependencies\n\t * @param array $stack List of task names that are scheduled after this task\n\t */\n\tprivate function addManifests( array $deps, array $stack = [] )\n\t{\n\t\tforeach( $deps as $extName => $name )\n\t\t{\n\t\t\tif( in_array( $extName, $this->extensionsDone ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( in_array( $extName, $stack ) ) {\n\t\t\t\tthrow new \\Exception( sprintf( 'Circular dependency for \"%1$s\" detected', $extName ) );\n\t\t\t}\n\n\t\t\t$stack[] = $extName;\n\n\t\t\tif( isset( $this->dependencies[$extName] ) ) {\n\t\t\t\t$this->addManifests( (array) $this->dependencies[$extName], $stack );\n\t\t\t}\n\n\t\t\tif( isset( $this->extensions[$extName] ) ) {\n\t\t\t\t$this->manifests[$this->extensions[$extName]['location']] = $this->extensions[$extName];\n\t\t\t}\n\n\t\t\t$this->extensionsDone[] = $extName;\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.6220703125,
          "content": "GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n  7. Additional rights.\n\nBy using this software, you grant Aimeos and the Aimeos GmbH the right\nto use your web site and screenshots thereof to promote the Aimeos project.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5810546875,
          "content": "<a href=\"https://aimeos.org\">\n    <img src=\"https://aimeos.org/fileadmin/template/icons/logo.png\" alt=\"Aimeos logo\" title=\"Aimeos\" align=\"right\" height=\"60\" />\n</a>\n\n# Aimeos core - high performance e-commerce\n\n[![Total Downloads](https://poser.pugx.org/aimeos/aimeos-core/d/total.svg)](https://packagist.org/packages/aimeos/aimeos-core)\n[![Build Status](https://circleci.com/gh/aimeos/aimeos-core.svg?style=shield)](https://circleci.com/gh/aimeos/aimeos-core)\n[![Coverage Status](https://coveralls.io/repos/aimeos/aimeos-core/badge.svg?branch=master)](https://coveralls.io/r/aimeos/aimeos-core?branch=master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/aimeos/aimeos-core/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/aimeos/aimeos-core/?branch=master)\n[![License](https://poser.pugx.org/aimeos/aimeos-core/license.svg)](https://packagist.org/packages/aimeos/aimeos-core)\n\n:star: Star us on GitHub — it helps!\n\n[![Aimeos demo](https://aimeos.org/fileadmin/aimeos.org/images/aimeos-github.png)](https://demo.aimeos.org)\n\n## What is Aimeos core?\n\nAimeos is an Open Source\n<a href=\"https://aimeos.org/tips/ecommerce-framework/\">e-commerce framework</a>\nfor online shops consisting of the e-commerce library, the administration interface\nand different front-ends. It's a modular stack that offers an unmatched combination\nof flexibility and speed.\n\nContrary to other shop systems, Aimeos is no monolithic application. Instead, you\nhave the choice between several user front-ends and you can adapt them to your\nneeds or write one of your own one.\n\n## Who uses Aimeos?\n\nWhether you (or your customer if you are a developer seeking for a solution)\nwould like to run a high performance online shop, wish to publish a product catalog\nonline or would like to create your own portal – you design your own individual\nsales channel with Aimeos.\n\nIt's is suited for medium to large size businesses which needs a seamless\nintegration into existing systems, like content management, customer relationship\nmanagement or enterprise resource planning systems. Additionally, Aimeos perfectly\nfits as base for portals or market places.\n\n## Links\n\n* [Web site](https://aimeos.org)\n* [Documentation](https://aimeos.org/docs/)\n* [Forum](https://aimeos.org/help/)\n* [Issue tracker](https://github.com/aimeos/aimeos-core/issues)\n* [Composer packages](https://packagist.org/packages/aimeos/aimeos-core)\n* [Source code](https://github.com/aimeos/aimeos-core)\n* [Translate](https://www.transifex.com/projects/p/aimeos-core/)\n\n## License\n\nAimeos is licensed under the terms of the LGPLv3 Open Source license and is available for free.\n"
        },
        {
          "name": "Setup.php",
          "type": "blob",
          "size": 6.2353515625,
          "content": "<?php\n\n/**\n * @license LGPLv3, https://opensource.org/licenses/LGPL-3.0\n * @copyright Aimeos (aimeos.org), 2021-2024\n */\n\n\nnamespace Aimeos;\n\n\n/**\n * Setup Aimeos data structures and storeages\n */\nclass Setup\n{\n\tprivate $bootstrap;\n\tprivate $context;\n\tprivate $config;\n\tprivate $verbose;\n\n\n\t/**\n\t * Initializes the Aimeos setup object\n\t *\n\t * @param Bootstrap $bootstrap Aimeos bootstrap object\n\t * @param array $config Associative list of config keys and values\n\t */\n\tpublic function __construct( Bootstrap $bootstrap, array $config = [] )\n\t{\n\t\t$this->bootstrap = $bootstrap;\n\t\t$this->config = $config;\n\n\t\t$this->macros();\n\t}\n\n\n\t/**\n\t * Creates a new initialized setup object\n\t *\n\t * @param Bootstrap $bootstrap Aimeos bootstrap object\n\t * @param array $config Associative list of config keys and values\n\t * @return self Aimeos setup object\n\t */\n\tpublic static function use( Bootstrap $bootstrap, array $config = [] ) : self\n\t{\n\t\treturn new static( $bootstrap, $config );\n\t}\n\n\n\t/**\n\t * Sets a custom context object\n\t *\n\t * @param \\Aimeos\\MShop\\ContextIface $context Context object\n\t * @return self Same object for fluid method calls\n\t */\n\tpublic function context( \\Aimeos\\MShop\\ContextIface $context ) : self\n\t{\n\t\t$this->context = $context;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Performs the migrations\n\t *\n\t * @param string $site Site code to execute the migrations for\n\t * @param string $template Name of the migration template\n\t */\n\tpublic function up( string $site = 'default', string $template = 'default' )\n\t{\n\t\t$ctx = ( $this->context ?? $this->createContext() )->setEditor( 'setup' );\n\n\t\t\\Aimeos\\Upscheme\\Task\\Base::macro( 'context', function() use ( $ctx ) {\n\t\t\treturn $ctx;\n\t\t} );\n\n\n\t\t$config = $ctx->config();\n\t\t$config->set( 'setup/site', $site );\n\t\t$dbconf = $this->getDBConfig( $config );\n\t\t$taskPaths = $this->bootstrap->getSetupPaths( $template );\n\n\t\t\\Aimeos\\Upscheme\\Up::use( $dbconf, $taskPaths )->verbose( $this->verbose )->up();\n\t}\n\n\n\t/**\n\t * Sets the verbosity level\n\t *\n\t * @param mixed $level Verbosity level (empty: none, v: notice, vv: info, vvv: debug)\n\t * @return self Same object for fluid method calls\n\t */\n\tpublic function verbose( $level = 'v' ) : self\n\t{\n\t\t$this->verbose = $level;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns a new context object\n\t *\n\t * @return \\Aimeos\\MShop\\ContextIface New context object\n\t */\n\tprotected function createContext() : \\Aimeos\\MShop\\ContextIface\n\t{\n\t\t$ctx = new \\Aimeos\\MShop\\Context();\n\n\t\t$conf = new \\Aimeos\\Base\\Config\\PHPArray( [], $this->bootstrap->getConfigPaths() );\n\n\t\tforeach( $this->config as $key => $value ) {\n\t\t\t$conf->set( $key, $value );\n\t\t}\n\n\t\t$conf = new \\Aimeos\\Base\\Config\\Decorator\\Memory( $conf );\n\t\t$ctx->setConfig( $conf );\n\n\t\t$dbm = new \\Aimeos\\Base\\DB\\Manager\\Standard( $conf->get( 'resource', [] ), 'DBAL' );\n\t\t$ctx->setDatabaseManager( $dbm );\n\n\t\t$fsm = new \\Aimeos\\Base\\Filesystem\\Manager\\Standard( $conf->get( 'resource', [] ) );\n\t\t$ctx->setFilesystemManager( $fsm );\n\n\t\t$logger = new \\Aimeos\\Base\\Logger\\Errorlog( \\Aimeos\\Base\\Logger\\Iface::INFO );\n\t\t$ctx->setLogger( $logger );\n\n\t\t$password = new \\Aimeos\\Base\\Password\\Standard();\n\t\t$ctx->setPassword( $password );\n\n\t\t$session = new \\Aimeos\\Base\\Session\\None();\n\t\t$ctx->setSession( $session );\n\n\t\t$cache = new \\Aimeos\\Base\\Cache\\None();\n\t\t$ctx->setCache( $cache );\n\n\t\t$process = new \\Aimeos\\Base\\Process\\Pcntl( $conf->get( 'pcntl_max', 4 ), $conf->get( 'pcntl_priority', 19 ) );\n\t\t$process = new \\Aimeos\\Base\\Process\\Decorator\\Check( $process );\n\t\t$ctx->setProcess( $process );\n\n\t\treturn $ctx;\n\t}\n\n\n\t/**\n\t * Returns the database configuration\n\t *\n\t * @param \\Aimeos\\Base\\Config\\Iface $conf Configuration object\n\t * @return array Database configuration\n\t */\n\tprotected function getDBConfig( \\Aimeos\\Base\\Config\\Iface $conf ) : array\n\t{\n\t\t$dbconfig = $conf->get( 'resource', [] );\n\n\t\tforeach( $dbconfig as $rname => $entry )\n\t\t{\n\t\t\tif( strncmp( $rname, 'db', 2 ) !== 0 ) {\n\t\t\t\tunset( $dbconfig[$rname] );\n\t\t\t}\n\t\t}\n\n\t\treturn $dbconfig;\n\t}\n\n\n\t/**\n\t * Adds the required marcos to the Upscheme objects\n\t */\n\tprotected function macros()\n\t{\n\t\t\\Aimeos\\Upscheme\\Up::macro( 'connect', function( array $cfg ) {\n\n\t\t\tswitch( $cfg['adapter'] )\n\t\t\t{\n\t\t\t\tcase 'mysql': $cfg['driver'] = 'pdo_mysql'; break;\n\t\t\t\tcase 'oracle': $cfg['driver'] = 'pdo_oci'; break;\n\t\t\t\tcase 'pgsql': $cfg['driver'] = 'pdo_pgsql'; break;\n\t\t\t\tcase 'sqlsrv': $cfg['driver'] = 'pdo_sqlsrv'; break;\n\t\t\t\tdefault: $cfg['driver'] = $cfg['adapter'];\n\t\t\t}\n\n\t\t\tif( isset( $cfg['database'] ) ) {\n\t\t\t\t$cfg['dbname'] = $cfg['database'];\n\t\t\t}\n\n\t\t\tif( isset( $cfg['username'] ) ) {\n\t\t\t\t$cfg['user'] = $cfg['username'];\n\t\t\t}\n\n\t\t\tunset( $cfg['adapter'], $cfg['database'], $cfg['username'] );\n\n\t\t\treturn \\Doctrine\\DBAL\\DriverManager::getConnection( $cfg );\n\t\t} );\n\n\n\t\t$codelen = $this->config['codelength'] ?? 64;\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'startend', function() {\n\t\t\t$this->datetime( 'start' )->null( true );\n\t\t\treturn $this->datetime( 'end' )->null( true );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'code', function( string $name = 'code' ) use ( $codelen ) {\n\t\t\treturn $this->string( $name, $codelen )\n\t\t\t\t->opt( 'charset', 'utf8mb4', 'mysql' )\n\t\t\t\t->opt( 'collation', 'utf8mb4_bin', 'mysql' )\n\t\t\t\t->default( '' );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'config', function( string $name = 'config' ) {\n\t\t\treturn $this->text( $name )\n\t\t\t\t->opt( 'charset', 'utf8mb4', 'mysql' )\n\t\t\t\t->opt( 'collation', 'utf8mb4_general_ci', 'mysql' )\n\t\t\t\t->null( true );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'type', function( string $name = 'type' ) use ( $codelen ) {\n\t\t\treturn $this->string( $name, $codelen )\n\t\t\t\t->opt( 'charset', 'utf8mb4', 'mysql' )\n\t\t\t\t->opt( 'collation', 'utf8mb4_bin', 'mysql' )\n\t\t\t\t->default( '' );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'refid', function( string $name = 'refid' ) {\n\t\t\treturn $this->string( $name, 36 )\n\t\t\t\t->opt( 'charset', 'utf8mb4', 'mysql' )\n\t\t\t\t->opt( 'collation', 'utf8mb4_bin', 'mysql' )\n\t\t\t\t->default( '' );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'i18n', function( string $name = 'i18n' ) {\n\t\t\treturn $this->text( $name )\n\t\t\t\t->opt( 'charset', 'utf8mb4', 'mysql' )\n\t\t\t\t->opt( 'collation', 'utf8mb4_bin', 'mysql' )\n\t\t\t\t->null( true );\n\t\t} );\n\n\t\t\\Aimeos\\Upscheme\\Schema\\Table::macro( 'meta', function() {\n\t\t\t$this->datetime( 'mtime' );\n\t\t\t$this->datetime( 'ctime' );\n\t\t\treturn $this->string( 'editor' );\n\t\t} );\n\t}\n}\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 9.6279296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project name=\"Aimeos\" default=\"all\">\n\n\t<property name=\"coredir\" value=\"${project.basedir}\" override=\"false\" />\n\t<property name=\"extdir\" value=\"${project.basedir}/ext\" override=\"false\" />\n\t<property name=\"bindir\" value=\"${project.basedir}/vendor/bin/\" override=\"false\" />\n\n\n\t<target name=\"setup\" description=\"Sets up database incl. unit test data\">\n\t\t<echo msg=\"Setting up test database\" />\n\t\t<exec command=\"php ${coredir}/up.php -vvv unittest unittest\"\n\t\t\tcheckreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t</target>\n\n\t<target name=\"setupperf\" description=\"Sets up database incl. performance test data\">\n\t\t<echo msg=\"Setting up performance data\" />\n\t\t<exec command=\"php ${coredir}/up.php unitperf unitperf\"\n\t\t\tcheckreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t</target>\n\n\n\t<target name=\"coverage\" description=\"Creates coverage reports\" depends=\"clean\">\n\t\t<echo msg=\"Generating code coverage report\" />\n\t\t<exec command=\"${bindir}phpunit --configuration=phpunit-coverage.xml\"\n\t\t\tdir=\"tests\" checkreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t\t<phing target=\"coverage\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\t<target name=\"coverageext\" description=\"Creates coverage report for specific extension directory\">\n\t\t<phing target=\"coverage\" haltonfailure=\"true\" dir=\"${dir}\" phingfile=\"phing.xml\" />\n\t</target>\n\n\n\t<target name=\"test\" description=\"Executes unit tests\" depends=\"clean\">\n\t\t<echo msg=\"Executing unit tests\" />\n\t\t<exec command=\"${bindir}phpunit --configuration=phpunit.xml\"\n\t\t\tdir=\"tests\" checkreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t\t<phing target=\"test\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\t<target name=\"testext\" description=\"Executes tests of specific extension directory\">\n\t\t<phing target=\"test\" haltonfailure=\"true\" dir=\"${dir}\" phingfile=\"phing.xml\" />\n\t</target>\n\n\n\t<target name=\"check\" description=\"Executes all checks\">\n\t\t<echo msg=\"Executing code sniffer\" />\n\t\t<property name=\"codestddir\" value=\"${project.basedir}/misc/coding\" override=\"true\" />\n\t\t<exec command=\"${bindir}phpcs -n --standard=${codestddir}/Aimeos src/ tests/*/\"\n\t\t\tcheckreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t\t<phing target=\"check\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\t<target name=\"checkext\" description=\"Executes checks of specific extension directory\">\n\t\t<property name=\"codestddir\" value=\"${project.basedir}/misc/coding\" override=\"true\" />\n\t\t<phing target=\"check\" haltonfailure=\"true\" dir=\"${dir}\" phingfile=\"phing.xml\" />\n\t</target>\n\n\n\t<target name=\"clean\" description=\"\">\n\t\t<delete dir=\"tests/tmp\" quiet=\"true\" failonerror=\"false\" />\n\t\t<delete file=\"tests/confdoc.ser\" quiet=\"true\" failonerror=\"false\" />\n\t\t<delete file=\"tests/coverage.xml\" quiet=\"true\" failonerror=\"false\" />\n\t\t<delete file=\"tests/coveralls.json\" quiet=\"true\" failonerror=\"false\" />\n\t\t<delete quiet=\"true\" failonerror=\"false\" >\n\t\t\t<fileset dir=\"tests\">\n\t\t\t\t<include name=\"*.log\" />\n\t\t\t</fileset>\n\t\t</delete>\n\t</target>\n\n\n\t<target name=\"doc\" description=\"Generates the documentation\" depends=\"test\">\n\t\t<taskdef name=\"confdoc\" classname=\"MShopConfigDocTask\" classpath=\"${coredir}/misc/phing\" />\n\t\t<mkdir dir=\"${coredir}/misc/confdoc/\" />\n\t\t<echo msg=\"Generating config documentation\" />\n\t\t<confdoc prefix=\"madmin\" keyparts=\"2\"\n\t\t\toptfile=\"${coredir}/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${coredir}/src/MAdmin\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"mshop\" keyparts=\"2\"\n\t\t\toptfile=\"${coredir}/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${coredir}/src/MShop\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"${extdir}/ai-laravel/src/MShop\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"${extdir}/ai-typo3/src/MShop\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"admin/jqadm\" keyparts=\"1\"\n\t\t\toptfile=\"${extdir}/ai-admin-jqadm/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-admin-jqadm\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"templates/**/*.php\" />\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"${extdir}/ai-cms-grapesjs\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"admin/jsonadm\" keyparts=\"1\"\n\t\t\toptfile=\"${extdir}/ai-admin-jsonadm/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-admin-jsonadm\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"templates/**/*.php\" />\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"client/html\" keyparts=\"2\"\n\t\t\toptfile=\"${extdir}/ai-client-html/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-client-html\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"templates/**/*.php\" />\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"client/jsonapi\" keyparts=\"1\"\n\t\t\toptfile=\"${extdir}/ai-client-jsonapi/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-client-jsonapi/\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"templates/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"controller/jobs\" keyparts=\"2\"\n\t\t\toptfile=\"${extdir}/ai-controller-jobs/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-controller-jobs\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"templates/**/*.php\" />\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t\t<confdoc prefix=\"controller/frontend\" keyparts=\"1\"\n\t\t\toptfile=\"${extdir}/ai-controller-frontend/tests/confdoc.ser\"\n\t\t\toutdir=\"${coredir}/misc/confdoc\">\n\t\t\t<fileset dir=\"${extdir}/ai-controller-frontend\" expandsymboliclinks=\"true\" >\n\t\t\t\t<include name=\"config/**/*.php\" />\n\t\t\t\t<include name=\"src/**/*.php\" />\n\t\t\t</fileset>\n\t\t</confdoc>\n\t</target>\n\n\n\t<target name=\"clean\" description=\"Cleans up temporary files\">\n\n\t\t<phing target=\"clean\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\n\t<target name=\"i18n\" description=\"Creates all translation files\">\n\t\t<exec command=\"find ./src/MAdmin ./src/MShop -type f | xgettext -j -s --no-location --no-wrap --add-comments=/// --language=PHP --from-code=UTF-8 --keyword=sprintf:1 --keyword=dt:2,2t --keyword=dn:2,3,4t -o i18n/mshop/core-mshop.pot -f -\"\n\t\t\tcheckreturn=\"true\" logoutput=\"true\" />\n\t\t<foreach list=\"i18n/country,i18n/currency,i18n/language,i18n/mshop\" param=\"i18n-dir\" target=\"i18n-files\" />\n\t\t<phing target=\"i18n\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\t<target name=\"i18n-files\" description=\"Updates translation message files in passed directory\">\n\t\t<foreach param=\"po-fname\" absparam=\"po-filename\" target=\"i18n-update\">\n\t\t\t<fileset dir=\"${i18n-dir}\">\n\t\t\t\t<include name=\"*.po\" />\n\t\t\t</fileset>\n\t\t</foreach>\n\t</target>\n\n\t<target name=\"i18n-update\" description=\"Updates translation message files\">\n\t\t<fail unless=\"po-filename\" message=\"Missing file name\" />\n\t\t<echo msg=\"File: ${po-filename}\" />\n\t\t<exec command=\"msgmerge --no-wrap -s -U --backup=none ${po-filename} ${i18n-dir}/*.pot\" checkreturn=\"true\" logoutput=\"true\" />\n\t\t<exec command=\"${bindir}potrans deepl --only ${po-filename}\" logoutput=\"true\" />\n\t</target>\n\n\n\t<target name=\"build\" description=\"Creates all files to be generated\" >\n\t\t<exec command=\"tx pull -a -f --minimum-perc=1\" checkreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t\t<foreach param=\"po-fname\" absparam=\"po-filename\" target=\"build-mo\">\n\t\t\t<fileset dir=\"./i18n\">\n\t\t\t\t<include name=\"**/*.po\" />\n\t\t\t</fileset>\n\t\t</foreach>\n\t\t<phing target=\"build\" haltonfailure=\"true\">\n\t\t\t<fileset dir=\"${extdir}\" expandsymboliclinks=\"true\" >\n\t\t\t\t<exclude name=\".*/phing.xml\" />\n\t\t\t\t<include name=\"*/phing.xml\" />\n\t\t\t</fileset>\n\t\t</phing>\n\t</target>\n\n\n\t<target name=\"build-mo\" description=\"Generates binary translation files\">\n\t\t<fail unless=\"po-filename\" message=\"Missing file name\" />\n\t\t<echo msg=\"File: ${po-filename}\" />\n\t\t<exec command=\"msgfmt --statistics -c -o `echo ${po-filename} | sed s/\\.po//` ${po-filename}\"\n\t\t\tcheckreturn=\"true\" logoutput=\"true\" passthru=\"true\" />\n\t</target>\n\n\n\t<target name=\"createext\" description=\"Creates new extension\">\n\t\t<propertyprompt propertyName=\"extname\" promptText=\"Enter extension name (only A-Z, a-z, 0-9 and -)\" promptCharacter=\":\" useExistingValue=\"true\"/>\n\t\t<copy todir=\"${extdir}/${extname}\" >\n\t\t\t<fileset dir=\"${coredir}/misc/ext-template\">\n\t\t\t\t<include name=\"**\" />\n\t\t\t</fileset>\n\t\t</copy>\n\t\t<reflexive>\n\t\t\t<fileset dir=\"${extdir}/${extname}\">\n\t\t\t<include name=\"**\" />\n\t\t\t</fileset>\n\t\t\t<filterchain>\n\t\t\t<replaceregexp>\n\t\t\t\t<regexp pattern=\"&lt;extname&gt;\" replace=\"${extname}\"/>\n\t\t\t</replaceregexp>\n\t\t\t</filterchain>\n\t\t</reflexive>\n\t</target>\n\n\n\t<target name=\"all\" depends=\"setup,test,check\" description=\"Executes all essential targets for testing\" />\n\n</project>\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.4677734375,
          "content": "{\n\t\"name\": \"aimeos/aimeos-core\",\n\t\"description\": \"Full-featured e-commerce components for high performance online shops\",\n\t\"homepage\": \"https://aimeos.org\",\n\t\"license\": \"LGPL-3.0-or-later\",\n\t\"keywords\": [\"ecommerce\", \"shop\", \"portal\", \"marketplace\", \"gigacommerce\", \"B2B\", \"B2C\"],\n\t\"support\": {\n\t\t\"source\": \"https://github.com/aimeos/aimeos-core\",\n\t\t\"issues\": \"https://github.com/aimeos/aimeos-core/issues\",\n\t\t\"forum\": \"https://aimeos.org/help\",\n\t\t\"wiki\": \"https://aimeos.org/docs\"\n\t},\n\t\"prefer-stable\": true,\n\t\"minimum-stability\": \"dev\",\n\t\"require\": {\n\t\t\"php\": \"^8.0.11\",\n\t\t\"composer-runtime-api\": \"^2.1\",\n\t\t\"ext-curl\": \"*\",\n\t\t\"ext-dom\": \"*\",\n\t\t\"ext-fileinfo\": \"*\",\n\t\t\"ext-gd\": \"*\",\n\t\t\"ext-intl\": \"*\",\n\t\t\"ext-json\": \"*\",\n\t\t\"ext-mbstring\": \"*\",\n\t\t\"ext-pcre\": \"*\",\n\t\t\"ext-PDO\": \"*\",\n\t\t\"ext-zip\": \"*\",\n\t\t\"aimeos/aimeos-base\": \"dev-master\",\n\t\t\"aimeos/upscheme\": \"~1.0\",\n\t\t\"aimeos/macro\": \"~1.0\",\n\t\t\"aimeos/map\": \"^3.0.1\",\n\t\t\"nyholm/psr7\": \"~1.2\",\n\t\t\"psr/http-message\": \"~1.0||~2.0\",\n\t\t\"voku/portable-ascii\": \"~1.4||~2.0\",\n\t\t\"enshrined/svg-sanitize\": \"~0.18\",\n\t\t\"intervention/image\": \"^3.0\"\n\t},\n\t\"require-dev\": {\n\t\t\"php-coveralls/php-coveralls\": \"~2.7\",\n\t\t\"squizlabs/php_codesniffer\": \"~3.0\",\n\t\t\"phpunit/phpunit\": \"~10.0||~11.0\",\n\t\t\"phing/phing\": \"~2.4\",\n\t\t\"om/potrans\": \"dev-master\"\n\t},\n\t\"autoload\": {\n\t\t\"psr-4\": {\n\t\t\t\"Aimeos\\\\\": \"src\"\n\t\t},\n\t\t\"classmap\": [\n\t\t\t\"Bootstrap.php\",\n\t\t\t\"Setup.php\",\n\t\t\t\"src\"\n\t\t]\n\t},\n\t\"autoload-dev\": {\n\t\t\"psr-4\": {\n\t\t\t\"Aimeos\\\\\": \"tests\"\n\t\t},\n\t\t\"classmap\": [\n\t\t\t\"tests\"\n\t\t]\n\t}\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest.php",
          "type": "blob",
          "size": 0.51171875,
          "content": "<?php\n\n/**\n * @license LGPLv3, https://opensource.org/licenses/LGPL-3.0\n * @copyright Aimeos (aimeos.org], 2015-2024\n */\n\n\nreturn [\n\t'name' => 'aimeos-core',\n\t'depends' => [],\n\t'include' => [\n\t\t'src',\n\t],\n\t'config' => [\n\t\t'config',\n\t],\n\t'i18n' => [\n\t\t'mshop/code' => '/i18n/mshop/code',\n\t\t'mshop' => 'i18n/mshop',\n\t\t'language' => 'i18n/language',\n\t\t'currency' => 'i18n/currency',\n\t\t'country' => 'i18n/country',\n\t],\n\t'setup' => [\n\t\t'setup',\n\t],\n\t'template' => [\n\t\t'controller/jobs/templates' => [\n\t\t\t'templates',\n\t\t],\n\t],\n];\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "up.php",
          "type": "blob",
          "size": 4.029296875,
          "content": "<?php\n\n/**\n * @license LGPLv3, https://opensource.org/licenses/LGPL-3.0\n * @copyright Aimeos (aimeos.org), 2015-2024\n */\n\n\nrequire 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php';\n\n\nif( php_sapi_name() != 'cli' ) {\n\texit( 'Setup can only be started via command line for security reasons' );\n}\n\n\nset_error_handler( function( $severity, $message, $file, $line ) {\n\tif( $severity & E_DEPRECATED === 0 ) {\n\t\tthrow new ErrorException( $message, 0, $severity, $file, $line );\n\t}\n\terror_log( $message . ' in ' . $file . ' on line ' . $line );\n});\n\nini_set( 'display_errors', 1 );\ndate_default_timezone_set( 'UTC' );\n\n\n/**\n * Returns the configuration based on the given arguments\n *\n * @param array $options List of key/value string separated by colon (e.g. \"key:value\")\n * @return array Associative list of key value pairs\n */\nfunction config( array $options ) : array\n{\n\t$config = [];\n\n\tforeach( $options as $option )\n\t{\n\t\tlist( $key, $val ) = explode( ':', $option );\n\t\t$config[$key] = $val;\n\t}\n\n\treturn $config;\n}\n\n\n/**\n * Returns the command options given by the user\n *\n * @param array &$params List of parameters\n * @return array Associative list of option name and value(s)\n */\nfunction options( array &$params )\n{\n\t$options = [];\n\n\tforeach( $params as $key => $option )\n\t{\n\t\tif( $option === '--help' ) {\n\t\t\tusage();\n\t\t}\n\n\t\tif( !strncmp( $option, '--', 2 ) && ( $pos = strpos( $option, '=', 2 ) ) !== false )\n\t\t{\n\t\t\tif( ( $name = substr( $option, 2, $pos - 2 ) ) !== false )\n\t\t\t{\n\t\t\t\tif( isset( $options[$name] ) )\n\t\t\t\t{\n\t\t\t\t\t$options[$name] = (array) $options[$name];\n\t\t\t\t\t$options[$name][] = substr( $option, $pos + 1 );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$options[$name] = substr( $option, $pos + 1 );\n\t\t\t\t}\n\n\t\t\t\tunset( $params[$key] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf( \"Invalid option \\\"%1\\$s\\\"\\n\", $option );\n\t\t\t\tusage();\n\t\t\t}\n\t\t}\n\t\telseif( $option[0] === '-' )\n\t\t{\n\t\t\t$options[$option[1]] = substr( $option, 1 );\n\t\t\tunset( $params[$key] );\n\t\t}\n\t}\n\n\treturn $options;\n}\n\n\n/**\n * Returns the verbosity level based on the given arguments\n *\n * @param array $options Associative list of key value pairs\n * @return string Verbosity level (\"v\", \"vv\", \"vvv\" or empty string)\n */\nfunction verbose( array $options ) : string\n{\n\treturn isset( $options['q'] ) ? '' : ( $options['v'] ?? 'vv' );\n}\n\n\n/**\n * Prints the command usage and options, exits the program after printing\n */\nfunction usage()\n{\n\tprintf( \"Usage: php up.php [OPTION]* [sitecode] [tplsite]\\n\" );\n\tprintf( \"  -q                       Quiet\\n\" );\n\tprintf( \"  -v                       Important messages\\n\" );\n\tprintf( \"  -vv                      Important and informational messages\\n\" );\n\tprintf( \"  -vvv                     Important, informational and debug messages\\n\" );\n\tprintf( \"  --extdir=<path>          Extension directory, use several times for multiple\\n\" );\n\tprintf( \"  --config=<path|file>     Configuration directory, use several times for multiple\\n\" );\n\tprintf( \"  --option=<key>:<value>   Additional configuration key and value separated by a colon\\n\" );\n\texit( 1 );\n}\n\n\n\n$exectimeStart = microtime( true );\n\ntry\n{\n\t$params = $_SERVER['argv'];\n\tarray_shift( $params );\n\n\t$options = options( $params );\n\n\tif( ( $site = array_shift( $params ) ) === null ) {\n\t\t$site = 'default';\n\t}\n\n\tif( ( $tplsite = array_shift( $params ) ) === null ) {\n\t\t$tplsite = 'default';\n\t}\n\n\t$boostrap = new \\Aimeos\\Bootstrap( (array) ( $options['extdir'] ?? [] ) );\n\t\\Aimeos\\Setup::use( $boostrap, config( (array) ( $options['option'] ?? [] ) ) )\n\t\t->verbose( verbose( $options ) )\n\t\t->up( $site, $tplsite );\n}\ncatch( Throwable $t )\n{\n\techo \"\\n\\nCaught PHP error while processing setup\";\n\techo \"\\n\\nMessage:\\n\";\n\techo $t->getMessage();\n\techo \"\\n\\nStack trace:\\n\";\n\techo $t->getTraceAsString();\n\techo \"\\n\\n\";\n\texit( 1 );\n}\ncatch( \\Exception $e )\n{\n\techo \"\\n\\nCaught exception while processing setup\";\n\techo \"\\n\\nMessage:\\n\";\n\techo $e->getMessage();\n\techo \"\\n\\nStack trace:\\n\";\n\techo $e->getTraceAsString();\n\techo \"\\n\\n\";\n\texit( 1 );\n}\n\n$exectimeStop = microtime( true );\n\nif( verbose( $options ) ) {\n\tprintf( \"Setup process took %1\\$f sec\\n\\n\", ( $exectimeStop - $exectimeStart ) );\n}\n"
        }
      ]
    }
  ]
}