{
  "metadata": {
    "timestamp": 1736712218976,
    "page": 931,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/laravel-image-optimizer",
      "stars": 1228,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3857421875,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.064453125,
          "content": "build\ncomposer.lock\ndocs\nvendor\n.php_cs.cache\n.php-cs-fixer.cache\n"
        },
        {
          "name": ".php_cs.dist.php",
          "type": "blob",
          "size": 1.251953125,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'class_attributes_separation' => [\n            'elements' => [\n                'method' => 'one',\n            ],\n        ],\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.7490234375,
          "content": "# Changelog\n\nAll notable changes to `laravel-image-optimizer` will be documented in this file\n\n## 1.8.0 - 2024-02-29\n\n### What's Changed\n\n* Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/113\n* Fix `Tests` badge status in README.md by @gomzyakov in https://github.com/spatie/laravel-image-optimizer/pull/115\n* Bump dependabot/fetch-metadata from 1.3.6 to 1.4.0 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/116\n* Change $routeMiddleware to $middlewareAliases by @HassanZahirnia in https://github.com/spatie/laravel-image-optimizer/pull/117\n* Bump dependabot/fetch-metadata from 1.4.0 to 1.5.1 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/118\n* Bump dependabot/fetch-metadata from 1.5.1 to 1.6.0 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/119\n* Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/120\n* Bump actions/setup-node from 3 to 4 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/122\n* Laravel 11.x Compatibility by @laravel-shift in https://github.com/spatie/laravel-image-optimizer/pull/124\n\n### New Contributors\n\n* @gomzyakov made their first contribution in https://github.com/spatie/laravel-image-optimizer/pull/115\n* @HassanZahirnia made their first contribution in https://github.com/spatie/laravel-image-optimizer/pull/117\n\n**Full Changelog**: https://github.com/spatie/laravel-image-optimizer/compare/1.7.1...1.8.0\n\n## 1.7.1 - 2023-01-24\n\n### What's Changed\n\n- Add Dependabot Automation by @patinthehat in https://github.com/spatie/laravel-image-optimizer/pull/108\n- Bump actions/setup-node from 1 to 3 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/109\n- Add PHP 8.2 Support by @patinthehat in https://github.com/spatie/laravel-image-optimizer/pull/110\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/laravel-image-optimizer/pull/111\n- Laravel 10.x Compatibility by @laravel-shift in https://github.com/spatie/laravel-image-optimizer/pull/112\n\n### New Contributors\n\n- @patinthehat made their first contribution in https://github.com/spatie/laravel-image-optimizer/pull/108\n- @dependabot made their first contribution in https://github.com/spatie/laravel-image-optimizer/pull/109\n- @laravel-shift made their first contribution in https://github.com/spatie/laravel-image-optimizer/pull/112\n\n**Full Changelog**: https://github.com/spatie/laravel-image-optimizer/compare/1.7.0...1.7.1\n\n## 1.7.0 - 2022-01-14\n\n- support Laravel 9\n\n## 1.6.4 - 2020-11-27\n\n- add support for PHP 8\n\n## 1.6.3 - 2020-09-08\n\n- add support for Laravel 8\n\n## 1.6.2 - 2020-07-14\n\n- bugfix for custom logger (#87)\n\n## 1.6.1 - 2020-03-10\n\n- fix deps\n\n## 1.6.0 - 2020-03-02\n\n- add support for L7\n\n## 1.5.1 - 2019-11-02\n\n- only optimize files that were uploaded without errors (#75)\n\n## 1.5.0 - 2019-09-04\n\n- make compatible with Laravel 6\n\n## 1.4.0 - 2019-02-27\n\n- drop support for PHP 7.1\n\n## 1.3.3 - 2019-02-27\n\n- drop support for PHP 7.0\n- add support for Laravel 5.8\n\n## 1.3.2 - 2018-08-27\n\n- add support for Laravel 5.7\n\n## 1.3.1 - 2018-06-05\n\n- make sure a compatible version of spatie/image-optimizer is being pulled in\n\n## 1.3.0 - 2018-06-05\n\n- add compatibility with Lumen\n\n## 1.2.0 - 2018-05-16\n\n- add `binary_path` to config file\n\n## 1.1.3 - 2018-02-08\n\n- add support for L5.6\n- drop support for L5.4\n\n## 1.1.2 - 2017-12-11\n\n- fix issue with middleware and images in multidimensional input arrays\n- fix issue where jpegs would not be optimized correctly\n\n## 1.1.1\n\n- fix for multipe file uploads\n\n## 1.1.0\n\n- add support for Laravel 5.5\n\n## 1.0.1 - 2017-07-22\n\n- fix initial package autodiscovery support\n\n## 1.0.0 - 2017-07-13\n\n- initial release\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.09765625,
          "content": "# The MIT License (MIT)\n\nCopyright (c) Spatie bvba <info@spatie.be>\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.80078125,
          "content": "# Optimize images in your Laravel app\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-image-optimizer.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-image-optimizer)\n![Tests](https://github.com/spatie/laravel-image-optimizer/actions/workflows/run-tests.yml/badge.svg)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-image-optimizer.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-image-optimizer)\n\nThis package is the Laravel 6.0 and up specific integration of [spatie/image-optimizer](https://github.com/spatie/image-optimizer). It can optimize PNGs, JPGs, SVGs and GIFs by running them through a chain of various [image optimization tools](https://github.com/spatie/image-optimizer#optimization-tools). The package will automatically detect which optimization binaries are installed on your system and use them.\n\nHere's how you can use it:\n\n```php\nuse ImageOptimizer;\n\n// the image will be replaced with an optimized version which should be smaller\nImageOptimizer::optimize($pathToImage);\n\n// if you use a second parameter the package will not modify the original\nImageOptimizer::optimize($pathToImage, $pathToOptimizedImage);\n```\n\nYou don't like facades you say? No problem! Just resolve a configured instance of `Spatie\\ImageOptimizer\\OptimizerChain` out of the container:\n\n```php\napp(Spatie\\ImageOptimizer\\OptimizerChain::class)->optimize($pathToImage);\n```\n\nThe package also contains [a middleware](https://github.com/spatie/laravel-image-optimizer/blob/master/README.md#using-the-middleware) to automatically optimize all images in an request.\n\nDon't use Laravel you say? No problem! Just use the underlying [spatie/image-optimizer](https://github.com/spatie/image-optimizer) directly.\n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/laravel-image-optimizer.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/laravel-image-optimizer)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\nYou can install the package via composer:\n\n```bash\ncomposer require spatie/laravel-image-optimizer\n```\n\nThe package will automatically register itself.\n\nThe package uses a bunch of binaries to optimize images. To learn which ones on how to install them, head over to the [optimization tools section](https://github.com/spatie/image-optimizer#optimization-tools) in the readme of the underlying image-optimizer package. That readme also contains info on [what these tools will do to your images](https://github.com/spatie/image-optimizer#which-tools-will-do-what).\n\nThe package comes with some sane defaults to optimize images. You can modify that configuration by publishing the config file.\n\n```bash\nphp artisan vendor:publish --provider=\"Spatie\\LaravelImageOptimizer\\ImageOptimizerServiceProvider\"\n```\n\nThis is the contents of the `config/image-optimizer` file that will be published:\n\n```php\nuse Spatie\\ImageOptimizer\\Optimizers\\Svgo;\nuse Spatie\\ImageOptimizer\\Optimizers\\Optipng;\nuse Spatie\\ImageOptimizer\\Optimizers\\Gifsicle;\nuse Spatie\\ImageOptimizer\\Optimizers\\Pngquant;\nuse Spatie\\ImageOptimizer\\Optimizers\\Jpegoptim;\nuse Spatie\\ImageOptimizer\\Optimizers\\Cwebp;\n\nreturn [\n    /**\n     * When calling `optimize` the package will automatically determine which optimizers\n     * should run for the given image.\n     */\n    'optimizers' => [\n\n        Jpegoptim::class => [\n            '-m85', // set maximum quality to 85%\n            '--strip-all',  // this strips out all text information such as comments and EXIF data\n            '--all-progressive'  // this will make sure the resulting image is a progressive one\n        ],\n\n        Pngquant::class => [\n            '--force' // required parameter for this package\n        ],\n\n        Optipng::class => [\n            '-i0', // this will result in a non-interlaced, progressive scanned image\n            '-o2',  // this set the optimization level to two (multiple IDAT compression trials)\n            '-quiet' // required parameter for this package\n        ],\n\n        Svgo::class => [\n            '--disable=cleanupIDs' // disabling because it is known to cause trouble\n        ],\n\n        Gifsicle::class => [\n            '-b', // required parameter for this package\n            '-O3' // this produces the slowest but best results\n        ],\n        \n        Cwebp::class => [\n            '-m 6', // for the slowest compression method in order to get the best compression.\n            '-pass 10', // for maximizing the amount of analysis pass.\n            '-mt', // multithreading for some speed improvements.\n            '-q 90', //quality factor that brings the least noticeable changes.\n        ],\n    ],\n\n    /**\n     * The maximum time in seconds each optimizer is allowed to run separately.\n     */\n    'timeout' => 60,\n\n    /**\n     * If set to `true` all output of the optimizer binaries will be appended to the default log.\n     * You can also set this to a class that implements `Psr\\Log\\LoggerInterface`.\n     */\n    'log_optimizer_activity' => false,\n];\n```\n\nIf you want to automatically optimize images that get uploaded to your application add the `\\Spatie\\LaravelImageOptimizer\\Middlewares\\OptimizeImages::class` in the http kernel.\n\n```php\n// app/Http/Kernel.php\nprotected $middlewareAliases = [\n   ...\n   'optimizeImages' => \\Spatie\\LaravelImageOptimizer\\Middlewares\\OptimizeImages::class,\n];\n```\n\n## Usage\n\nYou can resolve a configured instance of `Spatie\\ImageOptimizer\\OptimizerChain` out of the container:\n\n```php\n// the image will be replaced with an optimized version which should be smaller\napp(Spatie\\ImageOptimizer\\OptimizerChain::class)->optimize($pathToImage);\n\n// if you use a second parameter the package will not modify the original\napp(Spatie\\ImageOptimizer\\OptimizerChain::class)->optimize($pathToImage, $pathToOptimizedImage);\n```\n\n### Using the facade\n\n```php\nuse ImageOptimizer;\n\n// the image will be replaced with an optimized version which should be smaller\nImageOptimizer::optimize($pathToImage);\n\n// if you use a second parameter the package will not modify the original\nImageOptimizer::optimize($pathToImage, $pathToOptimizedImage);\n```\n\nYou don't like facades you say? No problem! Just resolve a configured instance of `Spatie\\ImageOptimizer\\OptimizerChain` out of the container:\n\n```php\napp(Spatie\\ImageOptimizer\\OptimizerChain::class)->optimize($pathToImage);\n```\n\n### Using the middleware\n\nAll images that in requests to routes that use the `optimizeImages`-middleware will be optimized automatically.\n\n```php\nRoute::middleware('optimizeImages')->group(function () {\n    // all images will be optimized automatically\n    Route::post('upload-images', 'UploadController@index');\n});\n```\n\n### Adding your own optimizers\n\nTo learn how to create your own optimizer read the [\"Writing custom optimizers\" section](https://github.com/spatie/image-optimizer#writing-a-custom-optimizers) in the readme of the underlying [spatie/image-optimizer](https://github.com/spatie/image-optimizer#writing-a-custom-optimizers) package.\n\nYou can add the fully qualified classname of your optimizer as a key in the `optimizers` array in the config file.\n\n## Example conversions\n\nHere are some [example conversions](https://github.com/spatie/image-optimizer#example-conversions) that were made by the optimizer.\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you've found a bug regarding security please mail [security@spatie.be](mailto:security@spatie.be) instead of using the issue tracker.\n\n## Postcardware\n\nYou're free to use this package (it's [MIT-licensed](LICENSE.md)), but if it makes it to your production environment we highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using.\n\nOur address is: Spatie, Kruikstraat 22, 2018 Antwerp, Belgium.\n\nWe publish all received postcards [on our company website](https://spatie.be/en/opensource/postcards).\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\nThe idea of a middleware that optimizes all files in a request is taken from [approached/laravel-image-optimizer](https://github.com/approached/laravel-image-optimizer).\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.4814453125,
          "content": "{\n    \"name\": \"spatie/laravel-image-optimizer\",\n    \"description\": \"Optimize images in your Laravel app\",\n    \"keywords\": [\n        \"spatie\",\n        \"laravel-image-optimizer\"\n    ],\n    \"homepage\": \"https://github.com/spatie/laravel-image-optimizer\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"laravel/framework\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"spatie/image-optimizer\": \"^1.2.0\"\n    },\n    \"require-dev\": {\n        \"orchestra/testbench\": \"^6.23|^7.0|^8.0|^9.0\",\n        \"phpunit/phpunit\": \"^9.4|^10.5\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\LaravelImageOptimizer\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\LaravelImageOptimizer\\\\Test\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit\",\n        \"format\": \"vendor/bin/php-cs-fixer fix --allow-risky=yes\"\n    },\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Spatie\\\\LaravelImageOptimizer\\\\ImageOptimizerServiceProvider\"\n            ],\n            \"aliases\": {\n                \"ImageOptimizer\": \"Spatie\\\\LaravelImageOptimizer\\\\Facades\\\\ImageOptimizer\"\n            }\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6630859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" backupStaticAttributes=\"false\" colors=\"true\" verbose=\"true\" convertErrorsToExceptions=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <coverage>\n    <include>\n      <directory suffix=\".php\">src/</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"Spatie Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml.dist.bak",
          "type": "blob",
          "size": 0.65234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit bootstrap=\"vendor/autoload.php\"\n         backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         colors=\"true\"\n         verbose=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Spatie Test Suite\">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}