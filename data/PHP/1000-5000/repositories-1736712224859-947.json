{
  "metadata": {
    "timestamp": 1736712224859,
    "page": 947,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zoujingli/ip2region",
      "stars": 1203,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.076171875,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n/.idea\n/vendor/\n/composer.lock\n"
        },
        {
          "name": "Ip2Region.php",
          "type": "blob",
          "size": 1.775390625,
          "content": "<?php\n\n/**\n * class Ip2Region\n * 为兼容老版本调度而创建\n * @author Anyon<zoujingli@qq.com>\n * @datetime 2022/07/18\n */\nclass Ip2Region\n{\n    /**\n     * 查询实例对象\n     * @var XdbSearcher\n     */\n    private $searcher;\n\n    /**\n     * 初始化构造方法\n     * @throws Exception\n     */\n    public function __construct()\n    {\n        class_exists('XdbSearcher') or include __DIR__ . '/XdbSearcher.php';\n        $this->searcher = XdbSearcher::newWithFileOnly(__DIR__ . '/ip2region.xdb');\n    }\n\n    /**\n     * 兼容原 memorySearch 查询\n     * @param string $ip\n     * @return array\n     * @throws Exception\n     */\n    public function memorySearch($ip)\n    {\n        return ['city_id' => 0, 'region' => $this->searcher->search($ip)];\n    }\n\n    /**\n     * 兼容原 binarySearch 查询\n     * @param string $ip\n     * @return array\n     * @throws Exception\n     */\n    public function binarySearch($ip)\n    {\n        return $this->memorySearch($ip);\n    }\n\n    /**\n     * 兼容原 btreeSearch 查询\n     * @param string $ip\n     * @return array\n     * @throws Exception\n     */\n    public function btreeSearch($ip)\n    {\n        return $this->memorySearch($ip);\n    }\n\n    /**\n     * 直接查询并返回名称\n     * @param string $ip\n     * @return string\n     * @throws \\Exception\n     */\n    public function simple($ip)\n    {\n        $geo = $this->memorySearch($ip);\n        $arr = explode('|', str_replace(['0|'], '|', isset($geo['region']) ? $geo['region'] : ''));\n        if (($last = array_pop($arr)) === '内网IP') $last = '';\n        return join('', $arr) . (empty($last) ? '' : \"【{$last}】\");\n    }\n\n    /**\n     * destruct method\n     * resource destroy\n     */\n    public function __destruct()\n    {\n        $this->searcher->close();\n        unset($this->searcher);\n    }\n}"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.8017578125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n   Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n   stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n   that You distribute, all copyright, patent, trademark, and\n   attribution notices from the Source form of the Work,\n   excluding those notices that do not pertain to any part of\n   the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n   distribution, then any Derivative Works that You distribute must\n   include a readable copy of the attribution notices contained\n   within such NOTICE file, excluding those notices that do not\n   pertain to any part of the Derivative Works, in at least one\n   of the following places: within a NOTICE text file distributed\n   as part of the Derivative Works; within the Source form or\n   documentation, if provided along with the Derivative Works; or,\n   within a display generated by the Derivative Works, if and\n   wherever such third-party notices normally appear. The contents\n   of the NOTICE file are for informational purposes only and\n   do not modify the License. You may add Your own attribution\n   notices within Derivative Works that You distribute, alongside\n   or as an addendum to the NOTICE text from the Work, provided\n   that such additional attribution notices cannot be construed\n   as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n==========================================================================\nThe following license applies to the ip2region library\n--------------------------------------------------------------------------\nCopyright (c) 2015 Lionsoul<chenxin619315@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.583984375,
          "content": "[![Latest Stable Version](https://poser.pugx.org/zoujingli/ip2region/v/stable)](https://packagist.org/packages/zoujingli/ip2region)\n[![Total Downloads](https://poser.pugx.org/zoujingli/ip2region/downloads)](https://packagist.org/packages/zoujingli/ip2region)\n[![Monthly Downloads](https://poser.pugx.org/zoujingli/ip2region/d/monthly)](https://packagist.org/packages/zoujingli/ip2region)\n[![Daily Downloads](https://poser.pugx.org/zoujingli/ip2region/d/daily)](https://packagist.org/packages/zoujingli/ip2region)\n[![PHP Version Require](http://poser.pugx.org/zoujingli/ip2region/require/php)](https://packagist.org/packages/ip2region)\n[![License](https://poser.pugx.org/zoujingli/ip2region/license)](https://packagist.org/packages/zoujingli/ip2region)\n\n本库基于 [ip2region](https://github.com/lionsoul2014/ip2region) 简单整合，方便 `PHP` 项目使用 `Composer` 来安装。\n\n# 通过 Composer 安装\n\n```shell\ncomposer require zoujingli/ip2region\n```\n\n# 在项目中快速调用\n\n```php\n$ip2region = new \\Ip2Region();\n$result = $ip2region->simple('8.8.8.8');\nvar_dump($result);\n\n// 高级用法可以直接调用 XdbSearcher 类。\n```\n\n# Ip2region 是什么\n\nip2region v2.0 - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 `xdb` 数据生成和查询客户端实现。\n\n# Ip2region 特性\n\n### 1、标准化的数据格式\n\n每个 ip 数据段的 region 信息都固定了格式：`国家|区域|省份|城市|ISP`，只有中国的数据绝大部分精确到了城市，其他国家部分数据只能定位到国家，后前的选项全部是0。\n\n### 2、数据去重和压缩\n\n`xdb` 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。\n\n### 3、极速查询响应\n\n即使是完全基于 `xdb` 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：\n\n1. `vIndex` 索引缓存 ：使用固定的 `512KiB` 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。\n2. `xdb` 整个文件缓存：将整个 `xdb` 文件全部加载到内存，内存占用等同于 `xdb` 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。\n\n### 4、IP 数据管理框架\n\nv2.0 格式的 `xdb` 支持亿级别的 IP 数据段行数，region 信息也可以完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。\n\n# `xdb` 数据查询\n\nAPI 介绍，使用文档和测试程序请参考对应 `searcher` 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：\n\n| Ok?                | 状态  | 编程语言                                                                              | 描述                   | 贡献者                                       |\n|:-------------------|:----|:----------------------------------------------------------------------------------|:---------------------|:------------------------------------------|\n| :white_check_mark: | 已完成 | [golang](https://github.com/lionsoul2014/ip2region/blob/master/binding/golang)    | golang xdb 查询客户端实现   | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [php](https://github.com/lionsoul2014/ip2region/blob/master/binding/php)          | php xdb 查询客户端实现      | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [java](https://github.com/lionsoul2014/ip2region/blob/master/binding/java)        | java xdb 查询客户端实现     | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [lua](https://github.com/lionsoul2014/ip2region/blob/master/binding/lua)          | 纯 lua xdb 查询客户端实现    | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [c](https://github.com/lionsoul2014/ip2region/blob/master/binding/c)              | ANSC c xdb 查询客户端实现   | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [lua_c](https://github.com/lionsoul2014/ip2region/blob/master/binding/lua_c)      | lua c 扩展 xdb 查询客户端实现 | [Lion](https://github.com/lionsoul2014)   |\n| &nbsp;&nbsp;&nbsp; | 待开始 | [rust](https://github.com/lionsoul2014/ip2region/blob/master/binding/rust)        | rust xdb 查询客户端实现     | [Lion](https://github.com/lionsoul2014)   |\n| :white_check_mark: | 已完成 | [python](https://github.com/lionsoul2014/ip2region/blob/master/binding/python)    | python xdb 查询客户端实现   | [厉害的花花](https://github.com/luckydog6132)  |\n| :white_check_mark: | 已完成 | [nodejs](https://github.com/lionsoul2014/ip2region/blob/master/binding/nodejs)    | nodejs xdb 查询客户端实现   | [Wu Jian Ping](https://github.com/wujjpp) |\n| :white_check_mark: | 已完成 | [csharp](https://github.com/lionsoul2014/ip2region/blob/master/binding/csharp)    | csharp xdb 查询客户端实现   | [Alen Lee](https://github.com/malus2077)  |\n| &nbsp;&nbsp;&nbsp; | 待开始 | [php_ext](https://github.com/lionsoul2014/ip2region/blob/master/binding/php7_ext) | php c 扩展 xdb 查询客户端实现 | 待确定                                       |\n| &nbsp;&nbsp;&nbsp; | 待开始 | [nginx](https://github.com/lionsoul2014/ip2region/blob/master/binding/nginx)      | nginx 扩展 xdb 查询客户端实现 | 待确定                                       |\n\n# `xdb` 数据生成\n\nAPI 介绍，使用文档和测试程序请参考对应 `maker` 生成程序下的 ReadMe 介绍，全部生成 maker 实现情况如下：\n\n| Ok?                | 状态  | 编程语言                                                                         | 描述                | 贡献者                                      |\n|:-------------------|:----|:-----------------------------------------------------------------------------|:------------------|:-----------------------------------------|\n| :white_check_mark: | 已完成 | [golang](https://github.com/lionsoul2014/ip2region/blob/master/maker/golang) | golang xdb 生成程序实现 | [Lion](https://github.com/lionsoul2014)  |\n| :white_check_mark: | 已完成 | [java](https://github.com/lionsoul2014/ip2region/blob/master/maker/java)     | java xdb 生成程序实现   | [Lion](https://github.com/lionsoul2014)  |\n| &nbsp;&nbsp;&nbsp; | 待开始 | [c](https://github.com/lionsoul2014/ip2region/blob/master/maker/c)           | ANSC c xdb 生成程序实现 | [Lion](https://github.com/lionsoul2014)  |\n| :white_check_mark: | 已完成 | [python](https://github.com/lionsoul2014/ip2region/blob/master/maker/python) | python xdb 生成程序实现 | [leolin49](https://github.com/leolin49)  |\n| :white_check_mark: | 已完成 | [csharp](https://github.com/lionsoul2014/ip2region/blob/master/maker/csharp) | csharp xdb 生成程序实现 | [Alan Lee](https://github.com/malus2077) |\n\n# 并发查询必读\n\n全部查询客户端的 search 接口都 <b>不是</b> 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。\n\n# 相关备注\n\n### 1、使用声明\n\nip2region 重点在于<b>研究 IP 定位数据的存储设计和各种语言的查询实现</b>，并没有原始 IP 数据的支撑，本项目不保证及时的数据更新，没有也不会有商用版本，你可以使用自定义的数据导入 ip2region 进行管理。\n\n### 2、技术交流\n\nip2region 微信交流群，请先加微信：lionsoul2014 (请备注 ip2region)\n\n### 3、数据更新\n\n基于检测算法的数据更新方式视频分享：[数据更新实现视频分享 - part1](https://www.bilibili.com/video/BV1934y1E7Q5/)，[数据更新实现视频分享 - part2](https://www.bilibili.com/video/BV1pF411j7Aw/)\n\n### 4、数据结构\n\n1. xdb 数据结构分析：[“ip2region xdb 数据结构和查询过程详解“](https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&mid=2247483696&idx=1&sn=6e9e138e86cf18245656c54ff4be3129&chksm=fd50ab35ca2722239ae7c0bb08efa44f499110c810227cbad3a16f36ebc1c2afc58eb464a57c#rd)\n2. xdb 查询过程分析：[“ip2region xdb 数据结构和查询过程详解”](https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&mid=2247483696&idx=1&sn=6e9e138e86cf18245656c54ff4be3129&chksm=fd50ab35ca2722239ae7c0bb08efa44f499110c810227cbad3a16f36ebc1c2afc58eb464a57c#rd)\n3. xdb 生成过程分析：[“ip2region xdb 二进制数据生成过程详解”](https://mp.weixin.qq.com/s?__biz=MzU4MDc2MzQ5OA==&mid=2247483718&idx=1&sn=92e552f3bba44a97ca661da244f35574&chksm=fd50ab43ca2722559733ed4e1082f239f381aaa881f9dbeb479174936145522696d9d200531e#rd)\n\n# 关于 ip2region v2.0 的 PHP 用法\n\n### 完全基于文件的查询\n\n```php\n$dbFile = \"ip2region.xdb file path\";\ntry {\n    $searcher = XdbSearcher::newWithFileOnly($dbFile);\n} catch (Exception $e) {\n    printf(\"failed to create searcher with '%s': %s\\n\", $dbFile, $e);\n    return;\n}\n\n$ip = '1.2.3.4';\n$sTime = XdbSearcher::now();\n$region = $searcher->search($ip);\nif ($region === null) {\n    // something is wrong\n    printf(\"failed search(%s)\\n\", $ip);\n    return;\n}\n\nprintf(\"{region: %s, took: %.5f ms}\\n\", $region, XdbSearcher::now() - $sTime);\n\n// 备注：并发使用，每个线程或者协程需要创建一个独立的 searcher 对象。\n```\n\n### 缓存 `VectorIndex` 索引\n\n如果你的 php 母环境支持，可以预先加载 vectorIndex 缓存，然后做成全局变量，每次创建 Searcher 的时候使用全局的 vectorIndex，可以减少一次固定的 IO 操作从而加速查询，减少 io 压力。\n\n```php\n// 1、从 dbPath 加载 VectorIndex 缓存，把下述的 vIndex 变量缓存到内存里面。\n$vIndex = XdbSearcher::loadVectorIndexFromFile($dbPath);\nif ($vIndex === null) {\n    printf(\"failed to load vector index from '%s'\\n\", $dbPath);\n    return;\n}\n\n// 2、使用全局的 vIndex 创建带 VectorIndex 缓存的查询对象。\ntry {\n    $searcher = XdbSearcher::newWithVectorIndex($dbFile, $vIndex);\n} catch (Exception $e) {\n    printf(\"failed to create vectorIndex cached searcher with '%s': %s\\n\", $dbFile, $e);\n    return;\n}\n\n// 3、查询\n$sTime = XdbSearcher::now();\n$region = $searcher->search('1.2.3.4');\nif ($region === null) {\n    printf(\"failed search(1.2.3.4)\\n\");\n    return;\n}\n\nprintf(\"{region: %s, took: %.5f ms}\\n\", $region, XdbSearcher::now() - $sTime);\n\n// 备注：并发使用，每个线程或者协程需要创建一个独立的 searcher 对象，但是都共享统一的只读 vectorIndex。\n```\n\n### 缓存整个 `xdb` 数据\n\n如果你的 PHP 母环境支持，可以预先加载整个 `xdb` 的数据到内存，这样可以实现完全基于内存的查询，类似之前的 memory search 查询。\n\n```php\n// 1、从 dbPath 加载整个 xdb 到内存。\n$cBuff = XdbSearcher::loadContentFromFile($dbPath);\nif ($cBuff === null) {\n    printf(\"failed to load content buffer from '%s'\\n\", $dbPath);\n    return;\n}\n\n// 2、使用全局的 cBuff 创建带完全基于内存的查询对象。\ntry {\n    $searcher = XdbSearcher::newWithBuffer($cBuff);\n} catch (Exception $e) {\n    printf(\"failed to create buffer cached searcher: %s\\n\", $dbFile, $e);\n    return;\n}\n\n// 3、查询\n$sTime = XdbSearcher::now();\n$region = $searcher->search('1.2.3.4');\nif ($region === null) {\n    printf(\"failed search(1.2.3.4)\\n\");\n    return;\n}\n\nprintf(\"{region: %s, took: %.5f ms}\\n\", $region, XdbSearcher::now() - $sTime);\n\n// 备注：并发使用，用整个 xdb 缓存创建的 searcher 对象可以安全用于并发。\n```\n\n# 查询测试\n\n通过 `search_test.php` 脚本来进行查询测试：\n\n```bash\n➜  php git:(v2.0_xdb) ✗ php ./search_test.php\nphp ./search_test.php [command options]\noptions:\n --db string             ip2region binary xdb file path\n --cache-policy string   cache policy: file/vectorIndex/content\n```\n\n例如：使用默认的 data/ip2region.xdb 进行查询测试：\n\n```bash\n➜  php git:(v2.0_xdb) ✗ php ./search_test.php --db=../../data/ip2region.xdb --cache-policy=vectorIndex\nip2region xdb searcher test program, cachePolicy: vectorIndex\ntype 'quit' to exit\nip2region>> 1.2.3.4\n{region: 美国|0|华盛顿|0|谷歌, ioCount: 7, took: 0.04492 ms}\nip2region>> \n```\n\n输入 ip 即可进行查询测试。也可以分别设置 `cache-policy` 为 file/vectorIndex/content 来测试三种不同缓存实现的效率。\n\n# bench 测试\n\n通过 `bench_test.php` 脚本来进行自动 bench 测试，一方面确保 `xdb` 文件没有错误，另一方面通过大量的查询测试平均查询性能：\n\n```bash\n➜  php git:(v2.0_xdb) ✗ php ./bench_test.php\nphp ./bench_test.php [command options]\noptions:\n --db string             ip2region binary xdb file path\n --src string            source ip text file path\n --cache-policy string   cache policy: file/vectorIndex/content\n```\n\n例如：通过默认的 data/ip2region.xdb 和 data/ip.merge.txt 来进行 bench 测试：\n\n```bash\n➜  php git:(v2.0_xdb) ✗ php ./bench_test.php --db=../../data/ip2region.xdb --src=../../data/ip.merge.txt --cache-policy=vectorIndex\nBench finished, {cachePolicy: vectorIndex, total: 3417955, took: 15s, cost: 0.005 ms/op}\n```\n\n可以通过设置 `cache-policy` 参数来分别测试 file/vectorIndex/content 三种不同的缓存实现的的性能。\n@Note：请注意 bench 使用的 src 文件需要是生成对应的 xdb 文件的相同的源文件。"
        },
        {
          "name": "XdbSearcher.php",
          "type": "blob",
          "size": 9.5361328125,
          "content": "<?php\n// Copyright 2022 The Ip2Region Authors. All rights reserved.\n// Use of this source code is governed by a Apache2.0-style\n// license that can be found in the LICENSE file.\n//\n// @Author Lion <chenxin619315@gmail.com>\n// @Date   2022/06/21\n\nclass XdbSearcher\n{\n    const HeaderInfoLength = 256;\n    const VectorIndexRows = 256;\n    const VectorIndexCols = 256;\n    const VectorIndexSize = 8;\n    const SegmentIndexSize = 14;\n\n    // xdb file handle\n    private $handle = null;\n\n    // header info\n    private $header = null;\n    private $ioCount = 0;\n\n    // vector index in binary string.\n    // string decode will be faster than the map based Array.\n    private $vectorIndex = null;\n\n    // xdb content buffer\n    private $contentBuff = null;\n\n    // ---\n    // static function to create searcher\n\n    /**\n     * @throws Exception\n     */\n    public static function newWithFileOnly($dbFile)\n    {\n        return new XdbSearcher($dbFile, null, null);\n    }\n\n    /**\n     * @throws Exception\n     */\n    public static function newWithVectorIndex($dbFile, $vIndex)\n    {\n        return new XdbSearcher($dbFile, $vIndex);\n    }\n\n    /**\n     * @throws Exception\n     */\n    public static function newWithBuffer($cBuff)\n    {\n        return new XdbSearcher(null, null, $cBuff);\n    }\n\n    // --- End of static creator\n\n    /**\n     * initialize the xdb searcher\n     * @throws Exception\n     */\n    function __construct($dbFile = null, $vectorIndex = null, $cBuff = null)\n    {\n        // check the content buffer first\n        if ($cBuff != null) {\n            $this->vectorIndex = null;\n            $this->contentBuff = $cBuff;\n        } else {\n            // 加载默认数据文件 by Anyon\n            if (is_null($dbFile)) {\n                $dbFile = __DIR__ . DIRECTORY_SEPARATOR . 'ip2region.xdb';\n            }\n            // open the xdb binary file\n            $this->handle = fopen($dbFile, \"r\");\n            if ($this->handle === false) {\n                throw new Exception(\"failed to open xdb file '%s'\", $dbFile);\n            }\n\n            $this->vectorIndex = $vectorIndex;\n        }\n    }\n\n    function close()\n    {\n        if ($this->handle != null) {\n            fclose($this->handle);\n        }\n    }\n\n    function getIOCount()\n    {\n        return $this->ioCount;\n    }\n\n    /**\n     * find the region info for the specified ip address\n     * @throws Exception\n     */\n    function search($ip)\n    {\n        // check and convert the sting ip to a 4-bytes long\n        if (is_string($ip)) {\n            $t = self::ip2long($ip);\n            if ($t === null) {\n                throw new Exception(\"invalid ip address `$ip`\");\n            }\n            $ip = $t;\n        }\n\n        // reset the global counter\n        $this->ioCount = 0;\n\n        // locate the segment index block based on the vector index\n        $il0 = ($ip >> 24) & 0xFF;\n        $il1 = ($ip >> 16) & 0xFF;\n        $idx = $il0 * self::VectorIndexCols * self::VectorIndexSize + $il1 * self::VectorIndexSize;\n        if ($this->vectorIndex != null) {\n            $sPtr = self::getLong($this->vectorIndex, $idx);\n            $ePtr = self::getLong($this->vectorIndex, $idx + 4);\n        } elseif ($this->contentBuff != null) {\n            $sPtr = self::getLong($this->contentBuff, self::HeaderInfoLength + $idx);\n            $ePtr = self::getLong($this->contentBuff, self::HeaderInfoLength + $idx + 4);\n        } else {\n            // read the vector index block\n            $buff = $this->read(self::HeaderInfoLength + $idx, 8);\n            if ($buff === null) {\n                throw new Exception(\"failed to read vector index at {$idx}\");\n            }\n\n            $sPtr = self::getLong($buff, 0);\n            $ePtr = self::getLong($buff, 4);\n        }\n\n        // printf(\"sPtr: %d, ePtr: %d\\n\", $sPtr, $ePtr);\n\n        // binary search the segment index to get the region info\n        $dataLen = 0;\n        $dataPtr = null;\n        $l = 0;\n        $h = ($ePtr - $sPtr) / self::SegmentIndexSize;\n        while ($l <= $h) {\n            $m = ($l + $h) >> 1;\n            $p = $sPtr + $m * self::SegmentIndexSize;\n\n            // read the segment index\n            $buff = $this->read($p, self::SegmentIndexSize);\n            if ($buff == null) {\n                throw new Exception(\"failed to read segment index at {$p}\");\n            }\n\n            $sip = self::getLong($buff, 0);\n            if ($ip < $sip) {\n                $h = $m - 1;\n            } else {\n                $eip = self::getLong($buff, 4);\n                if ($ip > $eip) {\n                    $l = $m + 1;\n                } else {\n                    $dataLen = self::getShort($buff, 8);\n                    $dataPtr = self::getLong($buff, 10);\n                    break;\n                }\n            }\n        }\n\n        // match nothing interception.\n        // @TODO: could this even be a case ?\n        // printf(\"dataLen: %d, dataPtr: %d\\n\", $dataLen, $dataPtr);\n        if ($dataPtr == null) {\n            return null;\n        }\n\n        // load and return the region data\n        $buff = $this->read($dataPtr, $dataLen);\n        if ($buff == null) {\n            return null;\n        }\n\n        return $buff;\n    }\n\n    // read specified bytes from the specified index\n    private function read($offset, $len)\n    {\n        // check the in-memory buffer first\n        if ($this->contentBuff != null) {\n            return substr($this->contentBuff, $offset, $len);\n        }\n\n        // read from the file\n        $r = fseek($this->handle, $offset);\n        if ($r == -1) {\n            return null;\n        }\n\n        $this->ioCount++;\n        $buff = fread($this->handle, $len);\n        if ($buff === false) {\n            return null;\n        }\n\n        if (strlen($buff) != $len) {\n            return null;\n        }\n\n        return $buff;\n    }\n\n    // --- static util functions ----\n\n    // convert a string ip to long\n    public static function ip2long($ip)\n    {\n        $ip = ip2long($ip);\n        if ($ip === false) {\n            return null;\n        }\n\n        // convert signed int to unsigned int if on 32 bit operating system\n        if ($ip < 0 && PHP_INT_SIZE == 4) {\n            $ip = sprintf(\"%u\", $ip);\n        }\n\n        return $ip;\n    }\n\n    // read a 4bytes long from a byte buffer\n    public static function getLong($b, $idx)\n    {\n        $val = (ord($b[$idx])) | (ord($b[$idx + 1]) << 8)\n            | (ord($b[$idx + 2]) << 16) | (ord($b[$idx + 3]) << 24);\n\n        // convert signed int to unsigned int if on 32 bit operating system\n        if ($val < 0 && PHP_INT_SIZE == 4) {\n            $val = sprintf(\"%u\", $val);\n        }\n\n        return $val;\n    }\n\n    // read a 2bytes short from a byte buffer\n    public static function getShort($b, $idx)\n    {\n        return ((ord($b[$idx])) | (ord($b[$idx + 1]) << 8));\n    }\n\n    // load header info from a specified file handle\n    public static function loadHeader($handle)\n    {\n        if (fseek($handle, 0) == -1) {\n            return null;\n        }\n\n        $buff = fread($handle, self::HeaderInfoLength);\n        if ($buff === false) {\n            return null;\n        }\n\n        // read bytes length checking\n        if (strlen($buff) != self::HeaderInfoLength) {\n            return null;\n        }\n\n        // return the decoded header info\n        return [\n            'version'       => self::getShort($buff, 0),\n            'indexPolicy'   => self::getShort($buff, 2),\n            'createdAt'     => self::getLong($buff, 4),\n            'startIndexPtr' => self::getLong($buff, 8),\n            'endIndexPtr'   => self::getLong($buff, 12)\n        ];\n    }\n\n    // load header info from the specified xdb file path\n    public static function loadHeaderFromFile($dbFile)\n    {\n        $handle = fopen($dbFile, 'r');\n        if ($handle === false) {\n            return null;\n        }\n\n        $header = self::loadHeader($handle);\n        fclose($handle);\n        return $header;\n    }\n\n    // load vector index from a file handle\n    public static function loadVectorIndex($handle)\n    {\n        if (fseek($handle, self::HeaderInfoLength) == -1) {\n            return null;\n        }\n\n        $rLen = self::VectorIndexRows * self::VectorIndexCols * self::SegmentIndexSize;\n        $buff = fread($handle, $rLen);\n        if ($buff === false) {\n            return null;\n        }\n\n        if (strlen($buff) != $rLen) {\n            return null;\n        }\n\n        return $buff;\n    }\n\n    // load vector index from a specified xdb file path\n    public static function loadVectorIndexFromFile($dbFile)\n    {\n        $handle = fopen($dbFile, 'r');\n        if ($handle === false) {\n            return null;\n        }\n\n        $vIndex = self::loadVectorIndex($handle);\n        fclose($handle);\n        return $vIndex;\n    }\n\n    // load the xdb content from a file handle\n    public static function loadContent($handle)\n    {\n        if (fseek($handle, 0, SEEK_END) == -1) {\n            return null;\n        }\n\n        $size = ftell($handle);\n        if ($size === false) {\n            return null;\n        }\n\n        // seek to the head for reading\n        if (fseek($handle, 0) == -1) {\n            return null;\n        }\n\n        $buff = fread($handle, $size);\n        if ($buff === false) {\n            return null;\n        }\n\n        // read length checking\n        if (strlen($buff) != $size) {\n            return null;\n        }\n\n        return $buff;\n    }\n\n    // load the xdb content from a file path\n    public static function loadContentFromFile($dbFile)\n    {\n        $str = file_get_contents($dbFile, false);\n        if ($str === false) {\n            return null;\n        } else {\n            return $str;\n        }\n    }\n\n    public static function now()\n    {\n        return (microtime(true) * 1000);\n    }\n\n}"
        },
        {
          "name": "_test.php",
          "type": "blob",
          "size": 1.587890625,
          "content": "<?php\n\n// 建议使用 php _test.php 命令行运行测试文件\n\nrequire 'Ip2Region.php';\n\n$ip2region = new Ip2Region();\n\n// array (\n//     'city_id' => 1713,\n//     'region' => '中国|0|广东省|广州市|电信',\n// )\n\nfor ($i = 0; $i < 10; $i++) {\n    test();\n}\n\nfunction getIp()\n{\n    $ip_long = array(\n        array('607649792', '608174079'), // 36.56.0.0-36.63.255.255\n        array('1038614528', '1039007743'), // 61.232.0.0-61.237.255.255\n        array('1783627776', '1784676351'), // 106.80.0.0-106.95.255.255\n        array('2035023872', '2035154943'), // 121.76.0.0-121.77.255.255\n        array('2078801920', '2079064063'), // 123.232.0.0-123.235.255.255\n        array('-1950089216', '-1948778497'), // 139.196.0.0-139.215.255.255\n        array('-1425539072', '-1425014785'), // 171.8.0.0-171.15.255.255\n        array('-1236271104', '-1235419137'), // 182.80.0.0-182.92.255.255\n        array('-770113536', '-768606209'), // 210.25.0.0-210.47.255.255\n        array('-569376768', '-564133889'), // 222.16.0.0-222.95.255.255\n    );\n    $rkey = mt_rand(0, 9);\n    return long2ip(mt_rand($ip_long[$rkey][0], $ip_long[$rkey][1]));\n}\n\nfunction test()\n{\n    $ip = getIp();\n    global $ip2region;\n\n    echo PHP_EOL . \"===============================\";\n    echo PHP_EOL . \"测试 IP 地址: {$ip}\";\n    echo PHP_EOL . \"--------【完整查询】------------\" . PHP_EOL;\n    $info = $ip2region->memorySearch($ip);\n    var_export($info);\n\n    echo PHP_EOL . \"---------【简易查询】----------\" . PHP_EOL;\n    var_export($ip2region->simple($ip));\n    echo PHP_EOL . \"===============================\" . PHP_EOL . PHP_EOL;\n}"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.4677734375,
          "content": "{\n  \"type\": \"library\",\n  \"name\": \"zoujingli/ip2region\",\n  \"homepage\": \"https://github.com/zoujingli/Ip2Region\",\n  \"description\": \"Ip2Region for PHP\",\n  \"license\": \"Apache-2.0\",\n  \"authors\": [\n    {\n      \"name\": \"Anyon\",\n      \"email\": \"zoujingli@qq.com\",\n      \"homepage\": \"https://thinkadmin.top\"\n    }\n  ],\n  \"require\": {\n    \"php\": \">=5.4\"\n  },\n  \"keywords\": [\n    \"Ip2Region\"\n  ],\n  \"autoload\": {\n    \"classmap\": [\n      \"Ip2Region.php\",\n      \"XdbSearcher.php\"\n    ]\n  }\n}\n"
        },
        {
          "name": "ip2region.xdb",
          "type": "blob",
          "size": 10810.6279296875,
          "content": ""
        }
      ]
    }
  ]
}