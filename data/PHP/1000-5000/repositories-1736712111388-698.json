{
  "metadata": {
    "timestamp": 1736712111388,
    "page": 698,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kohana/kohana",
      "stars": 1541,
      "defaultBranch": "3.3/master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1181640625,
          "content": "Icon?\n.DS_Store\n.svn\ncode_coverage\n*~\n*.swp\ncoverage\nkohana_release\nnbproject\nbuild\ncomposer.lock\ncomposer.phar\nvendor/*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.9287109375,
          "content": "[submodule \"system\"]\n\tpath = system\n\turl = https://github.com/kohana/core.git\n[submodule \"modules/codebench\"]\n\tpath = modules/codebench\n\turl = https://github.com/kohana/codebench.git\n[submodule \"modules/database\"]\n\tpath = modules/database\n\turl = https://github.com/kohana/database.git\n[submodule \"modules/image\"]\n\tpath = modules/image\n\turl = https://github.com/kohana/image.git\n[submodule \"modules/orm\"]\n\tpath = modules/orm\n\turl = https://github.com/kohana/orm.git\n[submodule \"modules/auth\"]\n\tpath = modules/auth\n\turl = https://github.com/kohana/auth.git\n[submodule \"modules/userguide\"]\n\tpath = modules/userguide\n\turl = https://github.com/kohana/userguide.git\n[submodule \"modules/cache\"]\n\tpath = modules/cache\n\turl = https://github.com/kohana/cache.git\n[submodule \"modules/unittest\"]\n\tpath = modules/unittest\n\turl = https://github.com/kohana/unittest.git\n[submodule \"modules/minion\"]\n\tpath = modules/minion\n\turl = https://github.com/kohana/minion.git\n"
        },
        {
          "name": ".gitmodules-dev",
          "type": "blob",
          "size": 0.8271484375,
          "content": "[submodule \"system\"]\n\tpath = system\n\turl = git@github.com:kohana/core.git\n[submodule \"modules/codebench\"]\n\tpath = modules/codebench\n\turl = git@github.com:kohana/codebench.git\n[submodule \"modules/database\"]\n\tpath = modules/database\n\turl = git@github.com:kohana/database.git\n[submodule \"modules/image\"]\n\tpath = modules/image\n\turl = git@github.com:kohana/image.git\n[submodule \"modules/orm\"]\n\tpath = modules/orm\n\turl = git@github.com:kohana/orm.git\n[submodule \"modules/auth\"]\n\tpath = modules/auth\n\turl = git@github.com:kohana/auth.git\n[submodule \"modules/userguide\"]\n\tpath = modules/userguide\n\turl = git@github.com:kohana/userguide.git\n[submodule \"modules/cache\"]\n        path = modules/cache\n        url = git@github.com:kohana/cache.git\n[submodule \"modules/unittest\"]\n        path = modules/unittest\n        url = git@github.com:kohana/unittest.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.88671875,
          "content": "sudo: false\n\nlanguage: php\n\n# Only build the main develop/master branches - feature branches will be covered by PRs\nbranches:\n  only:\n    - /^[0-9\\.]+\\/(develop|master)$/\n\ncache:\n  directories:\n    - $HOME/.composer/cache/files\n\nphp:\n  - 5.3\n  - 5.4\n  - 5.5\n  - 5.6\n  - 7.0\n  - hhvm\n\nmatrix:\n  include:\n    - php: 5.3\n      env: 'COMPOSER_PHPUNIT=\"lowest\"'\n\nbefore_install:\n  - \"git submodule update --init --recursive\"\n\nbefore_script:\n  - composer self-update\n  - composer install --prefer-dist --no-interaction\n  - if [ \"$COMPOSER_PHPUNIT\" = \"lowest\" ]; then composer update --prefer-lowest --with-dependencies --prefer-dist --no-interaction phpunit/phpunit; fi;\n\nscript:\n  - vendor/bin/phing test\n\nnotifications:\n  irc:\n    channels:\n      - \"irc.freenode.org#kohana\"\n    template:\n      - \"%{repository}/%{branch} (%{commit}) - %{author}: %{message}\"\n      - \"Build details: %{build_url}\"\n  email: false\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.4970703125,
          "content": "# Developing locally\n\nSince Kohana maintains many concurrent versions at once, there is no single `master` branch. All versions have branches named with a prefix of its version:\n\n - 3.2/master\n - 3.2/develop\n - 3.3/master\n - 3.3/develop\n\nand so on. All development of versions happens in the develop branch of that version. Before a release, new features are added here. After a major release is actually released, only bugfixes can happen here. New features and API changes must happen in the develop branch of the next version.\n\n## Branch name meanings\n\n - **3.3/master** - master branches are for releases. Only release merge commits can be applied to this branch. You should never make a non-merge commit to this branch, and all merge commits should come from the release branch or hotfix branch (detailed below). This branch lasts forever.\n - **3.3/hotfix/*** - hotfix branches are for emergency maintenance after a release. If an important security or other kind of important issue is discovered after a release, it should be done here, and merged to master. This branch should be created from master and merged back into master and develop when complete. This branch is deleted after it's done.\n - **3.3/develop** - If a version is not released, this branch is for merging features into. If the version is released, this branch is for applying bugfix commits to. This branch lasts forever.\n - **3.3/release/*** - release branches are for maintenance work before a release. This branch should be branched from the develop branch only. Change the version number/code name here, and apply any other maintenance items needed before actually releasing. Merges from master should only come from this branch. It should be merged to develop when it's complete as well. This branch is deleted after it's done.\n - **3.3/feature/*** - Details on these branches are outlined below. This branch is deleted after it's done.\n\nIf an bug/issue applies to multiple versions of Kohana, it is first fixed in the lowest supported version it applies to, then merged to each higher branch it applies to. Each merge should only happen one version up. 3.1 should merge to 3.2, and 3.2 should merge to 3.3. 3.1 should not merge directly to 3.3.\n\nTo work on a specific release branch you need to check it out then check out the appropriate system branch.\nRelease branch names follow the same convention in both kohana/kohana and kohana/core.\n\nTo work on 3.3.x you'd do the following:\n\n  > git clone git://github.com/kohana/kohana.git\n  # ....\n  \n  > cd kohana\n  > git submodule update --init\n  # ....\n\n  > git checkout 3.3/develop\n  # Switched to branch '3.3/develop'\n  \n  > git submodule foreach \"git fetch && git checkout 3.3/develop\"\n        # ...\n\nIt's important that you follow the last step, because unlike SVN, Git submodules point at a\nspecific commit rather than the tip of a branch.  If you cd into the system folder after\na `git submodule update` and run `git status` you'll be told:\n\n  # Not currently on any branch.\n  nothing to commit (working directory clean)\n\n***\n\n# Contributing to the project\n\nAll features and bugfixes must be fully tested and reference an issue in  [GitHub](https://github.com/kohana/kohana/issues), **there are absolutely no exceptions**.\n\nIt's highly recommended that you write/run unit tests during development as it can help you pick up on issues early on.  See the Unit Testing section below.\n\n## Creating new features\n\nNew features or API breaking modifications should be developed in separate branches so as to isolate them\nuntil they're stable.\n\n**Features without tests written will be rejected! There are NO exceptions.**\n\nThe naming convention for feature branches is:\n\n  {version}/feature/{issue number}-{short hyphenated description}\n  \n  // e.g.\n\n  3.2/feature/4045-rewriting-config-system\n  \nWhen a new feature is complete and fully tested it can be merged into its respective release branch using\n`git pull --no-ff`. The `--no-ff` switch is important as it tells Git to always create a commit\ndetailing what branch you're merging from. This makes it a lot easier to analyse a feature's history.\n\nHere's a quick example:\n\n  > git status\n  # On branch 3.2/feature/4045-rewriting-everything\n  \n  > git checkout 3.1/develop\n  # Switched to branch '3.1/develop'\n\n  > git merge --no-ff 3.2/feature/4045-rewriting-everything\n\n**If a change you make intentionally breaks the API then please correct the relevant tests before pushing!**\n\n## Bug fixing \n\nIf you're making a bugfix then before you start create a unit test which reproduces the bug,\nusing the `@ticket` notation in the test to reference the bug's issue number\n(e.g. `@ticket 4045` for issue #4045). \n\nIf you run the unit tests then the one you've just made should fail.\n\nOnce you've written the bugfix, run the tests again before you commit to make sure that the\nfix actually works, then commit both the fix and the test.\n\n**Bug fixes without tests written will be rejected! There are NO exceptions.**\n\nThere is no need to create separate branches for bugfixes, creating them in the main develop\nbranch is perfectly acceptable.\n\n## Tagging releases\n\nTag names should be prefixed with a `v`, this helps to separate tag references from branch references in Git.\n\nFor example, if you were creating a tag for the `3.1.0` release the tag name would be `v3.1.0`\n\n# Merging changes from remote repositories\n\nNow that you have a remote repository, you can pull changes in the remote \"kohana\" repository\ninto your local repository:\n\n    > git pull kohana 3.1/master\n\n**Note:** Before you pull changes you should make sure that any modifications you've made locally\nhave been committed.\n\nSometimes a commit you've made locally will conflict with one made in the remote \"kohana\" repo.\n\nThere are a couple of scenarios where this might happen:\n\n## The conflict is due to a few unrelated commits and you want to keep changes made in both commits\n\nYou'll need to manually modify the files to resolve the conflict, see the \"Resolving a merge\"\nsection [in the Git SCM book](http://book.git-scm.com/3_basic_branching_and_merging.html) for more info\n\n## You've fixed something locally which someone else has already done in the remote repo\n\nThe simplest way to fix this is to remove all the changes that you've made locally.\n\nYou can do this using \n\n    > git reset --hard kohana\n\n## You've fixed something locally which someone else has already fixed but you also have separate commits you'd like to keep\n\nIf this is the case then you'll want to use a tool called rebase.  First of all we need to\nget rid of the conflicts created due to the merge:\n\n    > git reset --hard HEAD\n\nThen find the hash of the offending local commit and run:\n\n    > git rebase -i {offending commit hash}\n\ni.e.\n\n  > git rebase -i 57d0b28\n\nA text editor will open with a list of commits. Delete the line containing the offending commit\nbefore saving the file & closing your editor.\n\nGit will remove the commit and you can then pull/merge the remote changes.\n\n# Unit Testing\n\nKohana currently uses PHPUnit for unit testing. This is installed with composer.\n\n## How to run the tests\n\n * Install [Phing](http://phing.info)\n * Make sure you have the [unittest](http://github.com/kohana/unittest) module enabled.\n * Install [Composer](http://getcomposer.org)\n * Run `php composer.phar install` from the root of this repository\n * Finally, run `phing test`\n\nThis will run the unit tests for core and all the modules and tell you if anything failed. If you haven't changed anything and you get failures, please create a new issue on [the tracker](http://dev.kohanaframework.org) and paste the output (including the error) in the issue.  \n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.669921875,
          "content": "# Kohana License Agreement\n\nThis license is a legal agreement between you and the Kohana Team for the use of Kohana Framework (the \"Software\"). By obtaining the Software you agree to comply with the terms and conditions of this license.\n\nCopyright (c) 2007-2011 Kohana Team  \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of the Kohana nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.2421875,
          "content": "# Kohana PHP Framework\n\n[Kohana](http://kohanaframework.org/) is an elegant, open source, and object oriented HMVC framework built using PHP5, by a team of volunteers. It aims to be swift, secure, and small.\n\nReleased under a [BSD license](http://kohanaframework.org/license), Kohana can be used legally for any open source, commercial, or personal project.\n\n## Documentation\nKohana's documentation can be found at <http://kohanaframework.org/documentation> which also contains an API browser.\n\nThe `userguide` module included in all Kohana releases also allows you to view the documentation locally. Once the `userguide` module is enabled in the bootstrap, it is accessible from your site via `/index.php/guide` (or just `/guide` if you are rewriting your URLs).\n\n## Reporting bugs\nIf you've stumbled across a bug, please help us out by [reporting the bug](http://dev.kohanaframework.org/projects/kohana3/) you have found. Simply log in or register and submit a new issue, leaving as much information about the bug as possible, e.g.\n\n* Steps to reproduce\n* Expected result\n* Actual result\n\nThis will help us to fix the bug as quickly as possible, and if you'd like to fix it yourself feel free to [fork us on GitHub](https://github.com/kohana) and submit a pull request!\n"
        },
        {
          "name": "application",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 9.560546875,
          "content": "<?xml version=\"1.0\" ?>\n<project name=\"kohana\" default=\"help\">\n\t<property environment=\"env\"/>\n\n\t<property name=\"basedir\" value=\"${project.basedir}\"/>\n\t<property name=\"builddir\" value=\"${basedir}/build\"/>\n\n\t<property name=\"branch\" value=\"3.3/develop\"/>\n\n\t<property name=\"submodules\" value=\"system,modules/auth,modules/cache,modules/codebench,modules/database,modules/image,modules/orm,modules/unittest,modules/userguide\"/>\n\n\t<!-- Shows the help message -->\n\t<target name=\"help\">\n\t\t<echo message=\"General Targets\"/>\n\t\t<echo message=\"===============\"/>\n\t\t<echo message=\"phing test              Run unit tests.\"/>\n\t\t<echo message=\"phing test-log          Run unit tests with logging enabled.\"/>\n\t\t<echo message=\"phing phpcs             Run phpcs.\"/>\n\t\t<echo message=\"phing phpcs-log         Run phpcs with logging enabled.\"/>\n\t\t<echo message=\"phing phpmd             Run phpmd.\"/>\n\t\t<echo message=\"phing phpmd-log         Run phpmd with logging enabled.\"/>\n\t\t<echo message=\"phing phpcb-log         Run phpcb with logging enabled.\"/>\n\t\t<echo message=\"\"/>\n\t\t<echo message=\"Kohana Developer Targets\"/>\n\t\t<echo message=\"========================\"/>\n\t\t<echo message=\"phing dev-setup         Setup for development on Kohana itself.\"/>\n\t\t<echo message=\"phing git-status        Show the git status of each submodule.\"/>\n\t\t<echo message=\"phing git-checkout      Checkout a branch accross all submodules.\"/>\n\t\t<echo message=\"phing git-pull          Perform a pull for each submodule.\"/>\n\t\t<echo message=\"phing git-push          Perform a push for each submodule.\"/>\n\t\t<echo message=\"\"/>\n\t\t<echo message=\"Misc Targets\"/>\n\t\t<echo message=\"============\"/>\n\t\t<echo message=\"phing ci                Alias task for continuous integration servers\"/>\n\t\t<echo message=\"phing dist              Build a release .zip\"/>\n\t</target>\n\n\t<!-- Clean up -->\n\t<target name=\"clean\">\n\t\t<delete dir=\"${builddir}\"/>\n\t\t<!-- Create build directories -->\n\t\t<mkdir dir=\"${builddir}/coverage\"/>\n\t\t<mkdir dir=\"${builddir}/logs\"/>\n\t\t<mkdir dir=\"${builddir}/release\"/>\n\t\t<mkdir dir=\"${builddir}/code-browser\"/>\n\t</target>\n\n\t<target name=\"dev-setup\">\n\t\t<property name=\"git-checkout-branch\" value=\"${branch}\"/> <!-- Prevents git-checkout asking for a branch name -->\n\t\t<exec command=\"git submodule update --init --recursive\" dir=\"${basedir}\" />\n\t\t<phingcall target=\"_dev-setup-remotes\" />\n\t\t<phingcall target=\"git-pull\" />\n\t\t<phingcall target=\"git-checkout\" />\n\t</target>\n\n\t<target name=\"git-pull\">\n\t\t<phingcall target=\"_git-pull\">\n\t\t\t<property name=\"dir\" value=\".\" />\n\t\t</phingcall>\n\t\t<foreach list=\"${submodules}\" param=\"dir\" target=\"_git-pull\"/>\n\t</target>\n\n\t<target name=\"_git-pull\">\n\t\t<exec command=\"git pull dev\" dir=\"${dir}\"/>\n\t</target>\n\n\t<target name=\"git-checkout\">\n\t\t<if>\n\t\t\t<not>\n\t\t\t\t<isset property=\"git-checkout-branch\"/>\n\t\t\t</not>\n\t\t\t<then>\n\t\t\t\t<propertyprompt propertyName=\"git-checkout-branch\" defaultValue=\"${branch}\" promptText=\"Branch name:\" />\n\t\t\t</then>\n\t\t</if>\n\n\t\t<phingcall target=\"_git-checkout\">\n\t\t\t<property name=\"dir\" value=\".\" />\n\t\t</phingcall>\n\n\t\t<foreach list=\"${submodules}\" param=\"dir\" target=\"_git-checkout\"/>\n\t</target>\n\n\t<target name=\"_git-checkout\">\n\t\t<exec returnProperty=\"git-checkout-branch-exists\" command=\"git show-ref --quiet --verify -- 'refs/remotes/dev/${git-checkout-branch}'\" dir=\"${dir}\"  passthru=\"true\"/>\n\t\t<if>\n\t\t\t<equals arg1=\"${git-checkout-branch-exists}\" arg2=\"0\"/>\n\t\t\t<then>\n\t\t\t\t<exec command=\"git checkout --track -b ${git-checkout-branch} dev/${git-checkout-branch}\" dir=\"${dir}\" passthru=\"true\"/>\n\t\t\t</then>\n\t\t\t<else>\n\t\t\t\t<exec command=\"git checkout -b ${git-checkout-branch}\" dir=\"${dir}\" passthru=\"true\"/>\n\t\t\t</else>\n\t\t</if>\n\t</target>\n\n\t<target name=\"git-push\">\n\t\t<foreach list=\"${submodules}\" param=\"dir\" target=\"_git-push\"/>\n\t\t<phingcall target=\"_git-push\">\n\t\t\t<property name=\"dir\" value=\".\" />\n\t\t</phingcall>\n\t</target>\n\n\t<target name=\"_git-push\">\n\t\t<exec command=\"git push dev\" dir=\"${dir}\" passthru=\"true\"/>\n\t</target>\n\n\t<target name=\"git-status\">\n\t\t<foreach list=\"${submodules}\" param=\"dir\" target=\"_git-status\"/>\n\t\t<phingcall target=\"_git-status\">\n\t\t\t<property name=\"dir\" value=\".\" />\n\t\t</phingcall>\n\t</target>\n\n\t<target name=\"_git-status\">\n\t\t<exec command=\"git status\" dir=\"${dir}\" passthru=\"true\"/>\n\t</target>\n\n\t<target name=\"_dev-setup-remotes\">\n\t\t<!-- TODO: Clean up... -->\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/kohana.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/core.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/system\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/auth.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/auth\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/cache.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/cache\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/codebench.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/codebench\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/database.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/database\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/image.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/image\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/orm.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/orm\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/unittest.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/unittest\" />\n\t\t</phingcall>\n\t\t<phingcall target=\"_dev-setup-remote\">\n\t\t\t<property name=\"repository\" value=\"git@github.com:kohana/userguide.git\" />\n\t\t\t<property name=\"dir\"        value=\"${basedir}/modules/userguide\" />\n\t\t</phingcall>\n\t</target>\n\n\t<target name=\"_dev-setup-remote\">\n\t\t<exec command=\"git remote rm dev\" dir=\"${dir}\"/>\n\t\t<exec command=\"git remote add dev ${repository}\" dir=\"${dir}\"/>\n\t</target>\n\n\t<!-- Run unit tests -->\n\t<target name=\"test\">\n\t\t<exec command=\"./vendor/bin/phpunit --bootstrap=modules/unittest/bootstrap_all_modules.php modules/unittest/tests.php\" checkreturn=\"true\" passthru=\"true\"/>\n\t</target>\n\n\n\t<!-- Run unit tests and generate junit.xml and clover.xml -->\n\t<target name=\"test-log\">\n\t\t<exec command=\"./vendor/bin/phpunit --bootstrap=modules/unittest/bootstrap_all_modules.php --coverage-html='${builddir}/coverage' --log-junit='${builddir}/logs/junit.xml' --coverage-clover='${builddir}/logs/clover.xml' modules/unittest/tests.php\" checkreturn=\"true\" passthru=\"true\"/>\n\t</target>\n\n\t<!-- Run PHP Code Sniffer -->\n\t<target name=\"phpcs\">\n\t\t<phpcodesniffer standard=\"Kohana\" showSniffs=\"true\" showWarnings=\"true\">\n\t\t\t<fileset dir=\"${basedir}\">\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t\t<exclude name=\"**/vendor/**\" />\n\t\t\t\t<exclude name=\"**/tests/**\" />\n\t\t\t</fileset>\n\t\t\t<formatter type=\"default\" usefile=\"false\"/>\n\t\t</phpcodesniffer>\n\t</target>\n\n\t<!-- Run PHP Code Sniffer and generate checkstyle.xml -->\n\t<target name=\"phpcs-log\">\n\t\t<phpcodesniffer standard=\"Kohana\" showSniffs=\"true\" showWarnings=\"true\">\n\t\t\t<fileset dir=\"${basedir}\">\n\t\t\t\t<include name=\"**/*.php\" />\n\t\t\t\t<exclude name=\"**/vendor/**\" />\n\t\t\t\t<exclude name=\"**/tests/**\" />\n\t\t\t</fileset>\n\t\t\t<formatter type=\"default\" usefile=\"false\"/>\n\t\t\t<formatter type=\"checkstyle\" outfile=\"${builddir}/logs/checkstyle.xml\"/>\n\t\t</phpcodesniffer>\n\t</target>\n\n\t<!-- Run PHP Mess Detector -->\n\t<target name=\"phpmd\">\n\t\t<exec command=\"phpmd '${basedir}' text codesize,unusedcode --exclude=**/vendor/**\"  passthru=\"true\"/>\n\t</target>\n\n\t<!-- Run PHP Mess Detector and generate pmd.xml -->\n\t<target name=\"phpmd-log\">\n\t\t<exec command=\"phpmd '${basedir}' xml codesize,unusedcode --exclude=**/vendor/** --reportfile '${builddir}/logs/pmd.xml'\"  passthru=\"true\"/>\n\t</target>\n\n\t<!-- Run PHP CodeBrowser and generate output -->\n\t<target name=\"phpcb-log\">\n\t\t<exec command=\"phpcb --exclude='${builddir}/**' --log='${builddir}/logs' --source='${basedir}' --output='${builddir}/code-browser'\"  passthru=\"true\"/>\n\t</target>\n\n\t<!-- Build a release .zip -->\n\t<target name=\"dist\">\n\t\t<!-- Pick an appropriate dist filename -->\n\t\t<if>\n\t\t\t<isset property=\"dist.filename\" />\n\t\t\t<else>\n\t\t\t\t<if>\n\t\t\t\t\t<and>\n\t\t\t\t\t\t<!-- basically - are we running inside hudson? -->\n\t\t\t\t\t\t<isset property=\"env.BUILD_NUMBER\" />\n\t\t\t\t\t\t<isset property=\"env.JOB_NAME\" />\n\t\t\t\t\t</and>\n\t\t\t\t\t<then>\n\t\t\t\t\t\t<property name=\"dist.filename\" value=\"${env.JOB_NAME}-${env.BUILD_NUMBER}\" />\n\t\t\t\t\t</then>\n\t\t\t\t\t<else>\n\t\t\t\t\t\t<property name=\"dist.filename\" value=\"kohana\" />\n\t\t\t\t\t</else>\n\t\t\t\t</if>\n\t\t\t</else>\n\t\t</if>\n\n\t\t<zip destfile=\"${builddir}/${dist.filename}.zip\" prefix=\"${dist.filename}/\">\n\t\t\t<fileset dir=\"${basedir}\">\n\t\t\t\t<include name=\"**/**\"/>\n\t\t\t\t<!-- Build Files -->\n\t\t\t\t<exclude name=\"*.zip\" />\n\t\t\t\t<exclude name=\"build/**\" />\n\t\t\t\t<!-- Dev Files -->\n\t\t\t\t<exclude name=\"build.xml\" />\n\t\t\t\t<exclude name=\"phpunit.xml\" />\n\t\t\t\t<!-- SCM Files -->\n\t\t\t\t<exclude name=\"**/.git/**\" />\n\t\t\t\t<exclude name=\"**/.git*\" />\n\t\t\t</fileset>\n\t\t</zip>\n\t</target>\n\n\t<!-- Hudson CI target -->\n\t<target name=\"ci\" depends=\"clean\">\n\t\t<phingcall target=\"test-log\"/>\n\t\t<phingcall target=\"pdepend-log\"/>\n\t\t<phingcall target=\"phpmd-log\"/>\n\t\t<phingcall target=\"phpcpd-log\"/>\n\t\t<phingcall target=\"phpcs-log\"/>\n\t\t<phingcall target=\"phpcb-log\"/>\n\t</target>\n</project>\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.083984375,
          "content": "{\n\t\"require\": {\n\t\t\"phpunit/phpunit\": \"3.7.24 - 4\",\n\t\t\"phing/phing\": \"dev-master\"\n\t}\n}\n"
        },
        {
          "name": "example.htaccess",
          "type": "blob",
          "size": 0.5048828125,
          "content": "# Turn on URL rewriting\nRewriteEngine On\n\n# Installation directory\nRewriteBase /\n\n# Protect hidden files from being viewed\n<Files .*>\n\tOrder Deny,Allow\n\tDeny From All\n</Files>\n\n# Protect application and system files from being viewed\nRewriteRule ^(?:application|modules|system)\\b.* index.php/$0 [L]\n\n# Allow any files or directories that exist to be displayed directly\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\n\n# Rewrite all other URLs to index.php/URL\nRewriteRule .* index.php/$0 [PT]\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 3.5458984375,
          "content": "<?php\n\n/**\n * The directory in which your application specific resources are located.\n * The application directory must contain the bootstrap.php file.\n *\n * @link http://kohanaframework.org/guide/about.install#application\n */\n$application = 'application';\n\n/**\n * The directory in which your modules are located.\n *\n * @link http://kohanaframework.org/guide/about.install#modules\n */\n$modules = 'modules';\n\n/**\n * The directory in which the Kohana resources are located. The system\n * directory must contain the classes/kohana.php file.\n *\n * @link http://kohanaframework.org/guide/about.install#system\n */\n$system = 'system';\n\n/**\n * The default extension of resource files. If you change this, all resources\n * must be renamed to use the new extension.\n *\n * @link http://kohanaframework.org/guide/about.install#ext\n */\ndefine('EXT', '.php');\n\n/**\n * Set the PHP error reporting level. If you set this in php.ini, you remove this.\n * @link http://www.php.net/manual/errorfunc.configuration#ini.error-reporting\n *\n * When developing your application, it is highly recommended to enable notices\n * and strict warnings. Enable them by using: E_ALL | E_STRICT\n *\n * In a production environment, it is safe to ignore notices and strict warnings.\n * Disable them by using: E_ALL ^ E_NOTICE\n *\n * When using a legacy application with PHP >= 5.3, it is recommended to disable\n * deprecated notices. Disable with: E_ALL & ~E_DEPRECATED\n */\nerror_reporting(E_ALL | E_STRICT);\n\n/**\n * End of standard configuration! Changing any of the code below should only be\n * attempted by those with a working knowledge of Kohana internals.\n *\n * @link http://kohanaframework.org/guide/using.configuration\n */\n\n// Set the full path to the docroot\ndefine('DOCROOT', realpath(dirname(__FILE__)).DIRECTORY_SEPARATOR);\n\n// Make the application relative to the docroot, for symlink'd index.php\nif ( ! is_dir($application) AND is_dir(DOCROOT.$application))\n\t$application = DOCROOT.$application;\n\n// Make the modules relative to the docroot, for symlink'd index.php\nif ( ! is_dir($modules) AND is_dir(DOCROOT.$modules))\n\t$modules = DOCROOT.$modules;\n\n// Make the system relative to the docroot, for symlink'd index.php\nif ( ! is_dir($system) AND is_dir(DOCROOT.$system))\n\t$system = DOCROOT.$system;\n\n// Define the absolute paths for configured directories\ndefine('APPPATH', realpath($application).DIRECTORY_SEPARATOR);\ndefine('MODPATH', realpath($modules).DIRECTORY_SEPARATOR);\ndefine('SYSPATH', realpath($system).DIRECTORY_SEPARATOR);\n\n// Clean up the configuration vars\nunset($application, $modules, $system);\n\nif (file_exists('install'.EXT))\n{\n\t// Load the installation check\n\treturn include 'install'.EXT;\n}\n\n/**\n * Define the start time of the application, used for profiling.\n */\nif ( ! defined('KOHANA_START_TIME'))\n{\n\tdefine('KOHANA_START_TIME', microtime(TRUE));\n}\n\n/**\n * Define the memory usage at the start of the application, used for profiling.\n */\nif ( ! defined('KOHANA_START_MEMORY'))\n{\n\tdefine('KOHANA_START_MEMORY', memory_get_usage());\n}\n\n// Bootstrap the application\nrequire APPPATH.'bootstrap'.EXT;\n\nif (PHP_SAPI == 'cli') // Try and load minion\n{\n\tclass_exists('Minion_Task') OR die('Please enable the Minion module for CLI support.');\n\tset_exception_handler(array('Minion_Exception', 'handler'));\n\n\tMinion_Task::factory(Minion_CLI::options())->execute();\n}\nelse\n{\n\t/**\n\t * Execute the main request. A source of the URI can be passed, eg: $_SERVER['PATH_INFO'].\n\t * If no source is specified, the URI will be automatically detected.\n\t */\n\techo Request::factory(TRUE, array(), FALSE)\n\t\t->execute()\n\t\t->send_headers(TRUE)\n\t\t->body();\n}\n"
        },
        {
          "name": "install.php",
          "type": "blob",
          "size": 8.2138671875,
          "content": "<?php\n\n// Sanity check, install should only be checked from index.php\ndefined('SYSPATH') or exit('Install tests must be loaded from within index.php!');\n\nif (version_compare(PHP_VERSION, '5.3', '<'))\n{\n\t// Clear out the cache to prevent errors. This typically happens on Windows/FastCGI.\n\tclearstatcache();\n}\nelse\n{\n\t// Clearing the realpath() cache is only possible PHP 5.3+\n\tclearstatcache(TRUE);\n}\n\n?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<title>Kohana Installation</title>\n\n\t<style type=\"text/css\">\n\tbody { width: 42em; margin: 0 auto; font-family: sans-serif; background: #fff; font-size: 1em; }\n\th1 { letter-spacing: -0.04em; }\n\th1 + p { margin: 0 0 2em; color: #333; font-size: 90%; font-style: italic; }\n\tcode { font-family: monaco, monospace; }\n\ttable { border-collapse: collapse; width: 100%; }\n\t\ttable th,\n\t\ttable td { padding: 0.4em; text-align: left; vertical-align: top; }\n\t\ttable th { width: 12em; font-weight: normal; }\n\t\ttable tr:nth-child(odd) { background: #eee; }\n\t\ttable td.pass { color: #191; }\n\t\ttable td.fail { color: #911; }\n\t#results { padding: 0.8em; color: #fff; font-size: 1.5em; }\n\t#results.pass { background: #191; }\n\t#results.fail { background: #911; }\n\t</style>\n\n</head>\n<body>\n\n\t<h1>Environment Tests</h1>\n\n\t<p>\n\t\tThe following tests have been run to determine if <a href=\"http://kohanaframework.org/\">Kohana</a> will work in your environment.\n\t\tIf any of the tests have failed, consult the <a href=\"http://kohanaframework.org/guide/about.install\">documentation</a>\n\t\tfor more information on how to correct the problem.\n\t</p>\n\n\t<?php $failed = FALSE ?>\n\n\t<table cellspacing=\"0\">\n\t\t<tr>\n\t\t\t<th>PHP Version</th>\n\t\t\t<?php if (version_compare(PHP_VERSION, '5.3.3', '>=')): ?>\n\t\t\t\t<td class=\"pass\"><?php echo PHP_VERSION ?></td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">Kohana requires PHP 5.3.3 or newer, this version is <?php echo PHP_VERSION ?>.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>System Directory</th>\n\t\t\t<?php if (is_dir(SYSPATH) AND is_file(SYSPATH.'classes/Kohana'.EXT)): ?>\n\t\t\t\t<td class=\"pass\"><?php echo SYSPATH ?></td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The configured <code>system</code> directory does not exist or does not contain required files.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Application Directory</th>\n\t\t\t<?php if (is_dir(APPPATH) AND is_file(APPPATH.'bootstrap'.EXT)): ?>\n\t\t\t\t<td class=\"pass\"><?php echo APPPATH ?></td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The configured <code>application</code> directory does not exist or does not contain required files.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Cache Directory</th>\n\t\t\t<?php if (is_dir(APPPATH) AND is_dir(APPPATH.'cache') AND is_writable(APPPATH.'cache')): ?>\n\t\t\t\t<td class=\"pass\"><?php echo APPPATH.'cache/' ?></td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <code><?php echo APPPATH.'cache/' ?></code> directory is not writable.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Logs Directory</th>\n\t\t\t<?php if (is_dir(APPPATH) AND is_dir(APPPATH.'logs') AND is_writable(APPPATH.'logs')): ?>\n\t\t\t\t<td class=\"pass\"><?php echo APPPATH.'logs/' ?></td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <code><?php echo APPPATH.'logs/' ?></code> directory is not writable.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>PCRE UTF-8</th>\n\t\t\t<?php if ( ! @preg_match('/^.$/u', 'ñ')): $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\"><a href=\"http://php.net/pcre\">PCRE</a> has not been compiled with UTF-8 support.</td>\n\t\t\t<?php elseif ( ! @preg_match('/^\\pL$/u', 'ñ')): $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\"><a href=\"http://php.net/pcre\">PCRE</a> has not been compiled with Unicode property support.</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>SPL Enabled</th>\n\t\t\t<?php if (function_exists('spl_autoload_register')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">PHP <a href=\"http://www.php.net/spl\">SPL</a> is either not loaded or not compiled in.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Reflection Enabled</th>\n\t\t\t<?php if (class_exists('ReflectionClass')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">PHP <a href=\"http://www.php.net/reflection\">reflection</a> is either not loaded or not compiled in.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Filters Enabled</th>\n\t\t\t<?php if (function_exists('filter_list')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <a href=\"http://www.php.net/filter\">filter</a> extension is either not loaded or not compiled in.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Iconv Extension Loaded</th>\n\t\t\t<?php if (extension_loaded('iconv')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <a href=\"http://php.net/iconv\">iconv</a> extension is not loaded.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<?php if (extension_loaded('mbstring')): ?>\n\t\t<tr>\n\t\t\t<th>Mbstring Not Overloaded</th>\n\t\t\t<?php if (ini_get('mbstring.func_overload') & MB_OVERLOAD_STRING): $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <a href=\"http://php.net/mbstring\">mbstring</a> extension is overloading PHP's native string functions.</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<?php endif ?>\n\t\t<tr>\n\t\t\t<th>Character Type (CTYPE) Extension</th>\n\t\t\t<?php if ( ! function_exists('ctype_digit')): $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">The <a href=\"http://php.net/ctype\">ctype</a> extension is not enabled.</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>URI Determination</th>\n\t\t\t<?php if (isset($_SERVER['REQUEST_URI']) OR isset($_SERVER['PHP_SELF']) OR isset($_SERVER['PATH_INFO'])): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: $failed = TRUE ?>\n\t\t\t\t<td class=\"fail\">Neither <code>$_SERVER['REQUEST_URI']</code>, <code>$_SERVER['PHP_SELF']</code>, or <code>$_SERVER['PATH_INFO']</code> is available.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t</table>\n\n\t<?php if ($failed === TRUE): ?>\n\t\t<p id=\"results\" class=\"fail\">✘ Kohana may not work correctly with your environment.</p>\n\t<?php else: ?>\n\t\t<p id=\"results\" class=\"pass\">✔ Your environment passed all requirements.<br />\n\t\t\tRemove or rename the <code>install<?php echo EXT ?></code> file now.</p>\n\t<?php endif ?>\n\n\t<h1>Optional Tests</h1>\n\n\t<p>\n\t\tThe following extensions are not required to run the Kohana core, but if enabled can provide access to additional classes.\n\t</p>\n\n\t<table cellspacing=\"0\">\n\t\t<tr>\n\t\t\t<th>PECL HTTP Enabled</th>\n\t\t\t<?php if (extension_loaded('http')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana can use the <a href=\"http://php.net/http\">http</a> extension for the Request_Client_External class.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>cURL Enabled</th>\n\t\t\t<?php if (extension_loaded('curl')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana can use the <a href=\"http://php.net/curl\">cURL</a> extension for the Request_Client_External class.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>mcrypt Enabled</th>\n\t\t\t<?php if (extension_loaded('mcrypt')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana requires <a href=\"http://php.net/mcrypt\">mcrypt</a> for the Encrypt class.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>GD Enabled</th>\n\t\t\t<?php if (function_exists('gd_info')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana requires <a href=\"http://php.net/gd\">GD</a> v2 for the Image class.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>MySQL Enabled</th>\n\t\t\t<?php if (function_exists('mysql_connect')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana can use the <a href=\"http://php.net/mysql\">MySQL</a> extension to support MySQL databases.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>PDO Enabled</th>\n\t\t\t<?php if (class_exists('PDO')): ?>\n\t\t\t\t<td class=\"pass\">Pass</td>\n\t\t\t<?php else: ?>\n\t\t\t\t<td class=\"fail\">Kohana can use <a href=\"http://php.net/pdo\">PDO</a> to support additional databases.</td>\n\t\t\t<?php endif ?>\n\t\t</tr>\n\t</table>\n\n</body>\n</html>\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "system",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}