{
  "metadata": {
    "timestamp": 1736711885697,
    "page": 247,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FriendsOfSymfony/FOSRestBundle",
      "stars": 2797,
      "defaultBranch": "3.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.21484375,
          "content": "/Tests export-ignore\n/phpunit export-ignore\n/phpunit.xml.dist export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.php-cs-fixer.php export-ignore\n/.styleci.yml export-ignore\n/.travis.yml export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": ".phpunit\nphpunit.xml\nvendor\ncomposer.lock\ncomposer.phar\n.php-cs-fixer.cache\n/.phpunit.result.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 0.572265625,
          "content": "<?php\n\n$header = <<<EOF\nThis file is part of the FOSRestBundle package.\n\n(c) FriendsOfSymfony <http://friendsofsymfony.github.com/>\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        'psr_autoloading' => true,\n        'header_comment' => ['header' => $header],\n        'nullable_type_declaration_for_default_null_value' => true,\n    ])\n    ->setRiskyAllowed(true)\n    ->setFinder(\n        PhpCsFixer\\Finder::create()\n            ->in(__DIR__)\n    )\n;\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.126953125,
          "content": "version: 2\n\nsphinx:\n  configuration: Resources/doc/conf.py\n\npython:\n  install:\n    - requirements: Resources/doc/requirements.txt\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "preset: symfony\n\nversion: 8"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 22.5908203125,
          "content": "CHANGELOG\n=========\n\n3.0.3\n-----\n\n* fixed being able to configure exception codes and messages based on interfaces (e.g.\n  `Throwable`)\n\n3.0.2\n-----\n\n* fixed the `ViewHandler` to not override an already set `status_code` in the serialization context\n* fixed embedding status codes in the response body when a mapping of exception classes to status\n  codes is configured\n\n3.0.1\n-----\n\n* fixed handling requests without a content type inside the `RequestBodyParamConverter`\n* `FlattenExceptionNormalizer` does no longer implement the `CacheableSupportsMethodInterface` to\n  ensure compatibility with older versions of the Symfony Serializer component\n\n3.0.0\n-----\n\n### Features\n\n* added support for Symfony 5 compatibility\n\n### BC Breaks\n\n* the route generation feature was removed, setting it to another value than `false` leads to an\n  exception\n* support for serializing exceptions was removed, setting the `fos_rest.exception.serialize_exceptions`\n  option to anything else than `false` leads to an exception\n* support for returning anything other than `string` or `null` from `resolve()` when implementing\n  the `VersionResolverInterface` was removed\n* removed support for passing version numbers as integers to `Context::setVersion()`\n* removed the `isFormatTemplating()`, `renderTemplate()`, and `prepareTemplateParameters()` methods\n  from the `ViewHandler` class and the `ViewHandlerInterface`\n* the constructor of the `ViewHandler` class is `private` now, use the static `create()` factory\n  method instead\n* removed the `setTemplateVar()`, `setPopulateDefaultVars()`, `getTemplateVar()`, and\n  `isPopulateDefaultVars()` methods from the `Controller\\Annotations\\View` class\n* removed the `setEngine()`, `setTemplate()`, `setTemplateData()`, `setTemplateVar()`, `getEngine()`,\n  `getTemplate()`, `getTemplateData()`, and `getTemplateVar()` methods from the `View\\View` class\n* changed the default value of the `fos_rest.body_listener` option to `false`\n* removed the `setMaxDepth()`/`getMaxDepth()` methods from the `Context` class, use\n  `enableMaxDepth()`/`disableMaxDepth()` instead\n* dropped support for Symfony components < 4.4\n* removed the following options:\n\n  * `fos_rest.access_denied_listener`\n  * `fos_rest.exception.exception_controller`\n  * `fos_rest.exception.exception_listener`\n  * `fos_rest.exception.service`\n  * `fos_rest.service.inflector`\n  * `fos_rest.service.router`\n  * `fos_rest.service.templating`\n  * `fos_rest.view.default_engine`\n  * `fos_rest.view.force_redirects`\n  * `fos_rest.view.templating_formats`\n\n* removed the following classes and interfaces:\n\n  * `FOS\\RestBundle\\Controller\\Annotations\\NamePrefix`\n  * `FOS\\RestBundle\\Controller\\Annotations\\NoRoute`\n  * `FOS\\RestBundle\\Controller\\Annotations\\Prefix`\n  * `FOS\\RestBundle\\Controller\\Annotations\\RouteResource`\n  * `FOS\\RestBundle\\Controller\\Annotations\\Version`\n  * `FOS\\RestBundle\\Controller\\ExceptionController`\n  * `FOS\\RestBundle\\Controller\\TemplatingExceptionController`\n  * `FOS\\RestBundle\\Controller\\TwigExceptionController`\n  * `FOS\\RestBundle\\EventListener\\AccessDeniedListener`\n  * `FOS\\RestBundle\\EventListener\\ExceptionListener`\n  * `FOS\\RestBundle\\Inflector\\DoctrineInflector`\n  * `FOS\\RestBundle\\Inflector\\InflectorInterface`\n  * `FOS\\RestBundle\\Routing\\Loader\\DirectoryRouteLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestActionReader`\n  * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestControllerReader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestRouteLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestRouteProcessor`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestXmlCollectionLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestYamlCollectionLoader`\n  * `FOS\\RestBundle\\Routing\\ClassResourceInterface`\n  * `FOS\\RestBundle\\Routing\\RestRouteCollection`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionHandler`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionNormalizer`\n\n* removed the following services and aliases:\n\n  * `fos_rest.access_denied_listener`\n  * `fos_rest.exception_listener`\n  * `fos_rest.exception.controller`\n  * `fos_rest.exception.twig_controller`\n  * `fos_rest.inflector`\n  * `fos_rest.router`\n  * `fos_rest.routing.loader.controller`\n  * `fos_rest.routing.loader.directory`\n  * `fos_rest.routing.loader.processor`\n  * `fos_rest.routing.loader.reader.controller`\n  * `fos_rest.routing.loader.reader.action`\n  * `fos_rest.routing.loader.xml_collection`\n  * `fos_rest.routing.loader.yaml_collection`\n  * `fos_rest.serializer.exception_normalizer.jms`\n  * `fos_rest.serializer.exception_normalizer.symfony`\n  * `fos_rest.templating`\n\n* the following classes are marked as `internal` (backwards compatibility will no longer be guaranteed):\n\n  * `FOS\\RestBundle\\DependencyInjection\\Compiler\\HandlerRegistryDecorationPass`\n  * `FOS\\RestBundle\\DependencyInjection\\FOSRestExtension`\n  * `FOS\\RestBundle\\Form\\Extension\\DisableCSRFExtension`\n  * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n  * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizer`\n  * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizerWithLeadingUnderscore`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorHandler`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorNormalizer`\n  * `FOS\\RestBundle\\Util\\ExceptionValueMap`\n\n* the following classes are now `final`:\n\n  * `FOS\\RestBundle\\Decoder\\ContainerDecoderProvider`\n  * `FOS\\RestBundle\\Decoder\\JsonDecoder`\n  * `FOS\\RestBundle\\Decoder\\JsonToFormDecoder`\n  * `FOS\\RestBundle\\Decoder\\XmlDecoder`\n  * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n  * `FOS\\RestBundle\\Negotiation\\FormatNegotiator`\n  * `FOS\\RestBundle\\Request\\ParamFetcher`\n  * `FOS\\RestBundle\\Request\\ParamReader`\n  * `FOS\\RestBundle\\Request\\RequestBodyParamConverter`\n  * `FOS\\RestBundle\\Response\\AllowMethodsLoader\\AllowedMethodsRouterLoader`\n  * `FOS\\RestBundle\\Serializer\\JMSSerializerAdapter`\n  * `FOS\\RestBundle\\Serializer\\SymfonySerializerAdapter`\n  * `FOS\\RestBundle\\Version\\ChainVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\HeaderVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\MediaTypeVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\QueryParameterVersionResolver`\n  * `FOS\\RestBundle\\View\\JsonpHandler`\n  * `FOS\\RestBundle\\View\\View`\n  * `FOS\\RestBundle\\View\\ViewHandler`\n\n2.8.3\n-----\n\n* fixed being able to configure exception codes and messages based on interfaces (e.g.\n  `Throwable`)\n\n2.8.2\n-----\n\n* fixed the `ViewHandler` to not override an already set `status_code` in the serialization context\n* fixed embedding status codes in the response body when a mapping of exception classes to status\n  codes is configured\n\n2.8.1\n-----\n\n* fixed handling requests without a content type inside the `RequestBodyParamConverter`\n* `FlattenExceptionNormalizer` does no longer implement the `CacheableSupportsMethodInterface` to\n  ensure compatibility with older versions of the Symfony Serializer component\n\n2.8.0\n-----\n\n### Features\n\n* added a `SerializerErrorHandler` that leverages the `FOS\\RestBundle\\Serializer\\Serializer` interface\n  to hook into the error rendering process provided by the ErrorHandler component since Symfony 4.4\n* added a new normalizer (for the Symfony serializer) and a new handler (for the JMS serializer) to\n  serialize `FlattenException` instances, for backwards compatibility the resulting format by default\n  is the same as was used for exceptions/errors before, use the `flatten_exception_format` to opt-in\n  to a format compatible with the API Problem spec (RFC 7807):\n\n   ```yaml\n   fos_rest:\n       exception:\n           flatten_exception_format: 'rfc7807'\n   ```\n* added a new `ResponseStatusCodeListener` that maps exception/error codes to response status codes,\n  enable it by setting the new `map_exception_codes` option to `true`\n\n### Deprecations\n\n* the route generation feature is deprecated, disable it explicitly:\n\n   ```yaml\n   fos_rest:\n       routing_loader: false\n   ```\n\n   You need to configure your routes explicitly, e.g. using the Symfony Core annotations or the FOSRestBundle\n   shortcuts like `FOS\\RestBundle\\Controller\\Annotations\\Get`. You can use\n   `bin/console debug:router --show-controllers` to help with the migration and compare routes before and after it.\n   Change the routing loading:\n\n   Before:\n   ```\n   Acme\\Controller\\TestController:\n       type: rest\n       resource: Acme\\Controller\\TestController\n   ```\n\n   After:\n   ```\n   Acme\\Controller\\TestController:\n       type: annotation\n       resource: Acme\\Controller\\TestController\n   ```\n\n   When using the Symfony Core route loading, route names might change as the FOSRestBundle used a different naming\n   convention. Mind the `.{_format}` suffix if you used the `fos_rest.routing_loader.include_format` option.\n\n   In case you have OpenAPI/Swagger annotations, you can also use [OpenAPI-Symfony-Routing](https://github.com/Tobion/OpenAPI-Symfony-Routing)\n   which removes the need to have routing information duplicated. It also allows to add the `.{_format}` suffix automatically as before.\n\n   If migration to explicit routes is not possible or feasible, consider using\n   [RestRoutingBundle](https://github.com/handcraftedinthealps/RestRoutingBundle) which extracted the auto-generation of routes\n   in a BC way.\n* deprecated support for serializing exceptions, disable it by setting the `serialize_exceptions`\n  option to false:\n\n   ```yaml\n   fos_rest:\n       exception:\n           serialize_exceptions: false\n   ```\n* deprecated returning anything other than `string` or `null` from `resolve()` when implementing   the `VersionResolverInterface`.\n* deprecated support for passing version numbers as integers to `Context::setVersion()` (strings\n  will be enforced as of 3.0)\n* deprecated the `isFormatTemplating()`, `renderTemplate()`, and `prepareTemplateParameters()`\n  methods of the `ViewHandler` class and the `ViewHandlerInterface`\n* deprecated the constructor of the `ViewHandler` class, use the static `create()` factory method\n  instead\n* deprecated the `setTemplateVar()`, `setPopulateDefaultVars()`, `getTemplateVar()`, and\n  `isPopulateDefaultVars()` methods of the `Controller\\Annotations\\View` class\n* deprecated the `setEngine()`, `setTemplate()`, `setTemplateData()`, `setTemplateVar()`, `getEngine()`,\n  `getTemplate()`, `getTemplateData()`, and `getTemplateVar()` methods of the `View\\View` class\n* deprecated not enabling the `fos_rest.body_listener` option explicitly, it will be disabled by default\n  in 3.0\n* deprecated the following options:\n\n  * `fos_rest.access_denied_listener`\n  * `fos_rest.exception.exception_controller`\n  * `fos_rest.exception.exception_listener`\n  * `fos_rest.exception.service`\n  * `fos_rest.service.inflector`\n  * `fos_rest.service.router`\n  * `fos_rest.service.templating`\n  * `fos_rest.view.default_engine`\n  * `fos_rest.view.force_redirects`\n  * `fos_rest.view.templating_formats`\n\n* the following classes and interfaces are marked as `deprecated`, they will be removed in  3.0:\n\n  * `FOS\\RestBundle\\Controller\\Annotations\\NamePrefix`\n  * `FOS\\RestBundle\\Controller\\Annotations\\NoRoute`\n  * `FOS\\RestBundle\\Controller\\Annotations\\Prefix`\n  * `FOS\\RestBundle\\Controller\\Annotations\\RouteResource`\n  * `FOS\\RestBundle\\Controller\\Annotations\\Version`\n  * `FOS\\RestBundle\\Controller\\ExceptionController`\n  * `FOS\\RestBundle\\Controller\\TemplatingExceptionController`\n  * `FOS\\RestBundle\\Controller\\TwigExceptionController`\n  * `FOS\\RestBundle\\EventListener\\AccessDeniedListener`\n  * `FOS\\RestBundle\\EventListener\\ExceptionListener`\n  * `FOS\\RestBundle\\Inflector\\DoctrineInflector`\n  * `FOS\\RestBundle\\Inflector\\InflectorInterface`\n  * `FOS\\RestBundle\\Routing\\Loader\\DirectoryRouteLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestActionReader`\n  * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestControllerReader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestRouteLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestRouteProcessor`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestXmlCollectionLoader`\n  * `FOS\\RestBundle\\Routing\\Loader\\RestYamlCollectionLoader`\n  * `FOS\\RestBundle\\Routing\\ClassResourceInterface`\n  * `FOS\\RestBundle\\Routing\\RestRouteCollection`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionHandler`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionNormalizer`\n\n* the following services and aliases are marked as `deprecated`, they will be removed in  3.0:\n\n  * `fos_rest.access_denied_listener`\n  * `fos_rest.exception_listener`\n  * `fos_rest.exception.controller`\n  * `fos_rest.exception.twig_controller`\n  * `fos_rest.inflector`\n  * `fos_rest.router`\n  * `fos_rest.routing.loader.controller`\n  * `fos_rest.routing.loader.directory`\n  * `fos_rest.routing.loader.processor`\n  * `fos_rest.routing.loader.reader.controller`\n  * `fos_rest.routing.loader.reader.action`\n  * `fos_rest.routing.loader.xml_collection`\n  * `fos_rest.routing.loader.yaml_collection`\n  * `fos_rest.serializer.exception_normalizer.jms`\n  * `fos_rest.serializer.exception_normalizer.symfony`\n  * `fos_rest.templating`\n\n* the following classes are marked as `internal` (backwards compatibility will no longer be guaranteed\n  starting with FOSRestBundle 3.0):\n\n  * `FOS\\RestBundle\\DependencyInjection\\Compiler\\HandlerRegistryDecorationPass`\n  * `FOS\\RestBundle\\DependencyInjection\\FOSRestExtension`\n  * `FOS\\RestBundle\\Form\\Extension\\DisableCSRFExtension`\n  * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n  * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizer`\n  * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizerWithLeadingUnderscore`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorHandler`\n  * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorNormalizer`\n  * `FOS\\RestBundle\\Util\\ExceptionValueMap`\n\n* the following classes are marked as `final` (extending them will not be supported as of 3.0):\n\n  * `FOS\\RestBundle\\Decoder\\ContainerDecoderProvider`\n  * `FOS\\RestBundle\\Decoder\\JsonDecoder`\n  * `FOS\\RestBundle\\Decoder\\JsonToFormDecoder`\n  * `FOS\\RestBundle\\Decoder\\XmlDecoder`\n  * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n  * `FOS\\RestBundle\\Negotiation\\FormatNegotiator`\n  * `FOS\\RestBundle\\Request\\ParamFetcher`\n  * `FOS\\RestBundle\\Request\\ParamReader`\n  * `FOS\\RestBundle\\Request\\RequestBodyParamConverter`\n  * `FOS\\RestBundle\\Response\\AllowMethodsLoader\\AllowedMethodsRouterLoader`\n  * `FOS\\RestBundle\\Serializer\\JMSSerializerAdapter`\n  * `FOS\\RestBundle\\Serializer\\SymfonySerializerAdapter`\n  * `FOS\\RestBundle\\Version\\ChainVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\HeaderVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\MediaTypeVersionResolver`\n  * `FOS\\RestBundle\\Version\\Resolver\\QueryParameterVersionResolver`\n  * `FOS\\RestBundle\\View\\JsonpHandler`\n  * `FOS\\RestBundle\\View\\View`\n  * `FOS\\RestBundle\\View\\ViewHandler`\n\n2.7.4\n-----\n\n* fixed compatibility with JMS Serializer with explicitly disabled max\n  depth checks (#2060)\n* fixed config validation when mapping `Throwable` instances of classes\n  that do not extend PHP's `Exception` class (#2131)\n\n2.7.3\n-----\n\n* harden the `JsonToFormDecoder` to not error on non-array input (#2145)\n\n2.7.2\n-----\n\n* fixed serializing Error instances when the Symfony Serializer is used (#2110)\n* fixed serializing Error instances when JMS Serializer is used (#2105)\n* fixed compatibility with `null` owner returned by SensioFrameworkExtraBundle (#2097)\n* completely fixed handling `Throwable` objects in `ExceptionController::showAction()`,\n  continues #2093 (#2096)\n\n2.7.1\n-----\n\n* fixed handling all `Throwable` objects in `ExceptionController::showAction()` (#2093)\n* fixed `ViewHandlerInterface` alias definition (#2085)\n\n2.7.0\n-----\n\n* ignore `SessionInterface` and `UserInterface` controller action arguments\n* fixed `ExceptionListener` deprecation warning\n* fixed `ControllerNameParser` deprecation warning\n* fixed `DisableCSRFExtension::getExtendedTypes()` return type\n* improved `EngineInterface` error message in `ViewHandler`\n* improved Symfony 4.4 compatibility\n* automatically use Twig as templating engine when available\n\n2.6.0\n-----\n\n* ensure compatibility with the `FlattenException` from the new ErrorRenderer component\n* fix handling the `serialize_null` option with the Symfony serializer\n* added support for using multiple constraints for the `requirements` option of the `@RequestParam`\n  annotation\n* drop support for PHP 5.5, 5.6 and 7.0\n* drop support for SF 4.0, 4.1 and 4.2 (3.4 LTS is still supported)\n* deprecated using the `ParamFetcher` class without passing a validator as the third argument, this\n  argument will become mandatory in 3.0\n* fix compatiblity without the deprecated templating in Symfony 4.3; see #2012 on how to configure the FOSRestBundle\n* removed symfony/templating from the dependencies; if you still use it you need to require it in your app\n\n2.5.0\n-----\n\n* compatibility with Symfony 4.2\n* deprecated the `FOSRestController` base class, use the new `AbstractFOSRestController` instead\n* dropped support for Symfony 2.7 to 3.3\n* compatibility with JMS Serializer 2 and JMSSerializerBundle 3\n* overwrite rules when they are defined in different config files instead of throwing exceptions\n* fixed using the `nullable` option of the param annotations when the `map` option is enabled\n* ensure a predictable order of routes by sorting controllers by name when loading classes from a directory\n* reset the internal state of the view handler to fix compatibility with PHP-PM\n* fix different bugs related to the handling of API versions (see #1491, #1529, #1691)\n\n2.4.0\n-----\n\n* [BC BREAK] The `@Route` annotation and all its children no longer extend SensioFrameworkExtraBundle's annotation.\n  The main effect is that `@Route::$service` is no longer available. Instead, define your controllers using the FQCN\n  as service IDs or create an alias in the container using the FQCN.\n\n2.3.1\n-----\n\n* improved Symfony 4 compatibility\n\n* manually decorate the core JMS handler registry\n\n* run checks after SensioFrameworkExtraBundle\n\n* made the view handler alias public\n\n* check for definitions before they might be removed\n\n* added Yaml routing resource support\n\n* refactored several unit tests\n\n2.3.0\n-----\n\n* added support for file paths to the directory route loader\n\n* added support for context factories when using JMS Serializer\n\n* the `RequestBodyParamConverter` ignores unrelated controller arguments to not conflict with Symfony's built-in\n  argument resolver\n\n* made the bundle compatible with SensioFrameworkExtraBundle 4.x\n\n* added some interface aliases to support by ID autowiring\n\n* added support for custom keys for groups when using JMSSerializerBundle\n\n* allow to load FOSRestBundle inside the kernel before JMSSerializerBundle\n\n* added the `fos_rest.routing_loader.prefix_methods` option to disable method name prefixes in generated route names\n\n* removed newline characters from exception messages\n\n1.8.0\n-----\n\n* added a new `InvalidParameterException` as a specialization of the `BadRequestHttpException`\n\n* deprecated the `FOS\\RestBundle\\Util\\ViolationFormatter` class and the\n  `FOS\\RestBundle\\Util\\ViolationFormatterInterface`\n\n* deprecated the `ViolationFormatterInterface` argument of the `ParamFetcher` class constructor\n\n* deprecated the `RedirectView` and `RouteRedirectView` classes, use `View::createRedirect()` and\n  `View::createRouteRedirect()` instead\n\n* added a `fos_rest.exception.debug` config option that defaults to the `kernel.debug` container\n  parameter and can be turned on to include the caught exception message in the exception controller's\n  response\n\n* introduced the concept of REST zones which makes it possible to disable all REST listeners\n  when a request matches certain attributes\n\n* fixed that serialization groups are always passed to the constructor as an array\n\n* added annotations to support additional HTTP methods defined by RFC 2518 (WebDAV)\n\n* added a new loader that allows to extract REST routes from all controller classes from a\n  directory\n\n* introduced a serializer adapter layer to ease the integration of custom serialization\n  implementations\n\n* deprecated the getter methods of the `ViewHandler` class\n\n* fixed an issue that prevented decoration of the `TemplateReferenceInterface` from the Symfony\n  Templating component\n\n* fixed: no longer overwrite an explicitly configured template in the view response listener\n\n* added support for API versioning in URL parameters, the `Accept` header or using a custom header\n\n* marked some classes and methods as internal, do no longer use them in your code as they are likely\n  to be removed in future releases\n\n* deprecated the `DoctrineInflector` class and the `InflectorInterface` from the\n  `FOS\\RestBundle\\Util\\Inflector`in favor of their replacements in the `FOS\\RestBundle\\Inflector`\n  namespace\n\n* deprecated the `FormatNegotiator` class and the `FormatNegotiatorInterface` from the\n  `FOS\\RestBundle\\Util` namespace in favor of the new `FOS\\RestBundle\\Negotiation\\FormatNegotiator`\n  class\n\n* deprecated the `FOS\\RestBundle\\Util\\MediaTypeNegotiatorInterface` which should no longer be used\n\n1.7.9\n-----\n\n* handle `\\Throwable` instances in the `ExceptionController`\n\n* fixed that the default exclusion strategy groups for the serializer are not the empty string\n\n* fixed a BC break that prevented the `CamelKeysNormalizer` from removing leading underscores\n\n* fixed the `AllowedMethodsRouteLoader` to work with Symfony 3.0\n\n1.7.8\n-----\n\n* removed uses of the reflection API in favor of faster solutions when possible\n\n* fixed the configuration to use serialization groups and versions at the same time\n\n1.7.7\n-----\n\n* when using Symfony 3.x, the bundle doesn't call methods anymore that have been deprecated in\n  Symfony 2.x and were removed in Symfony 3.0\n\n* the `ViewResponseListener` does not overwrite explicitly configured templates anymore\n\n* fixed the `ParamFetcher` class to properly handle sub requests\n\n1.7.6\n-----\n\n* added a `CamelKeysNormalizerWithLeadingUnderscore` that keeps leading underscores when\n  converting snake case to camel case (for example, leaving `_username` unchanged)\n\n1.7.5\n-----\n\n**CAUTION:** Accidentally, this patch release was never published.\n\n1.7.4\n-----\n\n* removed some code from the `ViewResponseListener` class that was already present in the parent\n  `TemplateListener` class\n\n1.7.3\n-----\n\n* made it possible to use the bundle with Symfony 3.x and fixed some compatibility issues with\n  Symfony 3.0\n\n* fixed the exception controller to return a 406 (Not Acceptable) response when the format\n  negotiator throws an exception\n\n1.7.2\n-----\n\n* fixed loading XML schema definition files in case the paths contain special characters (like\n  spaces)\n\n* return the FQCN in the form type extension's `getExtendedType()` method to be compatible with\n  Symfony >= 2.8\n\n* added the `extended-type` attribute to the `form.type_extension` tag to be compatible with\n  Symfony >= 2.8\n\n* fixed some code examples in the documentation\n\n* fixed exception message when using non-numeric identifiers (like UUID or GUID)\n\n* allow version 1.x of `jms/serializer` and `jms/serializer-bundle`\n\n* allow to use the Symfony serializer even if the JMS serializer is present\n\n1.7.1\n-----\n\n* fix regression when handling methods in `@Route` annotations\n"
        },
        {
          "name": "Context",
          "type": "tree",
          "content": null
        },
        {
          "name": "Controller",
          "type": "tree",
          "content": null
        },
        {
          "name": "Decoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "DependencyInjection",
          "type": "tree",
          "content": null
        },
        {
          "name": "ErrorRenderer",
          "type": "tree",
          "content": null
        },
        {
          "name": "EventListener",
          "type": "tree",
          "content": null
        },
        {
          "name": "Exception",
          "type": "tree",
          "content": null
        },
        {
          "name": "FOSRestBundle.php",
          "type": "blob",
          "size": 1.7314453125,
          "content": "<?php\n\n/*\n * This file is part of the FOSRestBundle package.\n *\n * (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace FOS\\RestBundle;\n\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\ConfigurationCheckPass;\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\HandlerRegistryDecorationPass;\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\JMSFormErrorHandlerPass;\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\JMSHandlersPass;\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\FormatListenerRulesPass;\nuse FOS\\RestBundle\\DependencyInjection\\Compiler\\SerializerConfigurationPass;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\DependencyInjection\\Compiler\\PassConfig;\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\n/**\n * @author Lukas Kahwe Smith <smith@pooteeweet.org>\n * @author Eriksen Costa <eriksencosta@gmail.com>\n */\nclass FOSRestBundle extends Bundle\n{\n    const VIEW_ATTRIBUTE = '_fos_rest_view';\n    const ZONE_ATTRIBUTE = '_fos_rest_zone';\n\n    /**\n     * {@inheritdoc}\n     */\n    public function build(ContainerBuilder $container): void\n    {\n        $container->addCompilerPass(new SerializerConfigurationPass());\n        $container->addCompilerPass(new ConfigurationCheckPass(), PassConfig::TYPE_BEFORE_OPTIMIZATION, -10);\n        $container->addCompilerPass(new FormatListenerRulesPass());\n        $container->addCompilerPass(new JMSFormErrorHandlerPass());\n        $container->addCompilerPass(new JMSHandlersPass(), PassConfig::TYPE_BEFORE_REMOVING, -10);\n        $container->addCompilerPass(new HandlerRegistryDecorationPass(), PassConfig::TYPE_AFTER_REMOVING);\n    }\n}\n"
        },
        {
          "name": "Form",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0771484375,
          "content": "Copyright (c) 2011-2021 FriendsOfSymfony <http://friendsofsymfony.github.com/>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Negotiation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Normalizer",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.07421875,
          "content": "FOSRestBundle\n=============\n\nThis bundle provides various tools to rapidly develop RESTful API's &\napplications with Symfony. Features include:\n\n- A View layer to enable output and format agnostic Controllers\n- Accept header format negotiation including handling for custom mime types\n- RESTful decoding of HTTP request body and Accept headers\n- Map exception codes to HTTP response status codes\n- A serializer error renderer that returns exceptions and errors in a format\n  compatible with RFC 7807 using the Symfony Serializer component or the\n  JMS Serializer\n\n[![Build Status](https://img.shields.io/github/workflow/status/FriendsOfSymfony/FOSRestBundle/CI?style=flat-square)](https://github.com/FriendsOfSymfony/FOSRestBundle/actions?query=workflow:CI)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/FriendsOfSymfony/FOSRestBundle/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/FriendsOfSymfony/FOSRestBundle/?branch=master)\n[![Code Coverage](https://scrutinizer-ci.com/g/FriendsOfSymfony/FOSRestBundle/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/FriendsOfSymfony/FOSRestBundle/?branch=master)\n[![Total Downloads](https://poser.pugx.org/FriendsOfSymfony/rest-bundle/downloads.svg)](https://packagist.org/packages/FriendsOfSymfony/rest-bundle)\n[![Latest Stable Version](https://poser.pugx.org/FriendsOfSymfony/rest-bundle/v/stable.svg)](https://packagist.org/packages/FriendsOfSymfony/rest-bundle)\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/0be23389-2e85-49cf-b333-caaa36d11c62/mini.png)](https://insight.sensiolabs.com/projects/0be23389-2e85-49cf-b333-caaa36d11c62)\n\nDocumentation\n-------------\n\n[Read the Documentation](https://fosrestbundle.readthedocs.io/)\n\nPlease see the upgrade files (`UPGRADING-X.X.md`) for any relevant instructions when upgrading to a newer version.\n\nInstallation\n------------\n\nAll the installation instructions are located in the [documentation](https://fosrestbundle.readthedocs.io/en/3.x/1-setting_up_the_bundle.html).\n\nLicense\n-------\n\nThis bundle is under the MIT license. See the complete license [in the bundle](LICENSE).\n"
        },
        {
          "name": "Request",
          "type": "tree",
          "content": null
        },
        {
          "name": "Resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "Response",
          "type": "tree",
          "content": null
        },
        {
          "name": "Serializer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "UPGRADING-3.0.md",
          "type": "blob",
          "size": 7.06640625,
          "content": "Upgrading From 2.x To 3.0\n=========================\n\n * Enabling the `fos_rest.routing_loader` option is not supported anymore. Setting\n   it to another value than `false` leads to an exception:\n\n   ```yaml\n   fos_rest:\n       routing_loader: false\n   ```\n\n   You need to configure your routes explicitly, e.g. using the Symfony Core annotations or the FOSRestBundle\n   shortcuts like `FOS\\RestBundle\\Controller\\Annotations\\Get`. You can use\n   `bin/console debug:router --show-controllers` to help with the migration and compare routes before and after it.\n   Change the routing loading:\n\n   Before:\n   ```\n   Acme\\Controller\\TestController:\n       type: rest\n       resource: Acme\\Controller\\TestController\n   ```\n\n   After:\n   ```\n   Acme\\Controller\\TestController:\n       type: annotation\n       resource: Acme\\Controller\\TestController\n   ```\n\n   When using the Symfony Core route loading, route names might change as the FOSRestBundle used a different naming\n   convention. Mind the `.{_format}` suffix if you used the `fos_rest.routing_loader.include_format` option.\n\n   In case you have OpenAPI/Swagger annotations, you can also use [OpenAPI-Symfony-Routing](https://github.com/Tobion/OpenAPI-Symfony-Routing)\n   which removes the need to have routing information duplicated. It also allows to add the `.{_format}` suffix automatically as before.\n\n   If migration to explicit routes is not possible or feasible, consider using\n   [RestRoutingBundle](https://github.com/handcraftedinthealps/RestRoutingBundle) which extracted the auto-generation of routes\n   in a BC way.\n\n * Support for serializing exceptions has been removed. Setting the\n `fos_rest.exception.serialize_exceptions` option to anything else than `false` leads to an exception.\n\n * Support for returning anything other than `string` or `null` from `resolve()` when implementing\n   the `VersionResolverInterface` has been removed.\n\n * `Context::setVersion()` does not accept integers anymore.\n\n * The `isFormatTemplating()`, `renderTemplate()`, and `prepareTemplateParameters()` methods of the\n   `ViewHandler` class and the `ViewHandlerInterface` have been removed.\n\n * The constructor of the `ViewHandler` class has been changed to `private`. Use the static `create()`\n   factory method instead.\n\n * The `setTemplateVar()`, `setPopulateDefaultVars()`, `getTemplateVar()`, and `isPopulateDefaultVars()`\n   methods of the `Controller\\Annotations\\View` class have been removed.\n\n * The `setEngine()`, `setTemplate()`, `setTemplateData()`, `setTemplateVar()`, `getEngine()`,\n   `getTemplate()`, `getTemplateData()`, and `getTemplateVar()` methods of the `View\\View` class\n   have been removed.\n\n * The default value of the `fos_rest.body_listener` option has been changed from enabled to disabled.\n\n * The `setMaxDepth()` method has been removed from the `Context` class. Use the\n   `enableMaxDepth()` and `disableMaxDepth()` methods instead.\n\n * The `getMaxDepth()` method has been removed from the `Context` class. Use the\n   `isMaxDepthEnabled()` method instead.\n\n * The following options have been removed:\n\n   * `fos_rest.access_denied_listener`\n   * `fos_rest.exception.exception_controller`\n   * `fos_rest.exception.exception_listener`\n   * `fos_rest.exception.service`\n   * `fos_rest.service.inflector`\n   * `fos_rest.service.router`\n   * `fos_rest.service.templating`\n   * `fos_rest.view.default_engine`\n   * `fos_rest.view.force_redirects`\n   * `fos_rest.view.templating_formats`\n\n * The following classes and interfaces have been removed:\n\n   * `FOS\\RestBundle\\Controller\\Annotations\\NamePrefix`\n   * `FOS\\RestBundle\\Controller\\Annotations\\NoRoute`\n   * `FOS\\RestBundle\\Controller\\Annotations\\Prefix`\n   * `FOS\\RestBundle\\Controller\\Annotations\\RouteResource`\n   * `FOS\\RestBundle\\Controller\\Annotations\\Version`\n   * `FOS\\RestBundle\\Controller\\ExceptionController`\n   * `FOS\\RestBundle\\Controller\\FOSRestController`\n   * `FOS\\RestBundle\\Controller\\TemplatingExceptionController`\n   * `FOS\\RestBundle\\Controller\\TwigExceptionController`\n   * `FOS\\RestBundle\\EventListener\\AccessDeniedListener`\n   * `FOS\\RestBundle\\EventListener\\ExceptionListener`\n   * `FOS\\RestBundle\\Inflector\\DoctrineInflector`\n   * `FOS\\RestBundle\\Inflector\\InflectorInterface`\n   * `FOS\\RestBundle\\Routing\\Loader\\DirectoryRouteLoader`\n   * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestActionReader`\n   * `FOS\\RestBundle\\Routing\\Loader\\Reader\\RestControllerReader`\n   * `FOS\\RestBundle\\Routing\\Loader\\RestRouteLoader`\n   * `FOS\\RestBundle\\Routing\\Loader\\RestRouteProcessor`\n   * `FOS\\RestBundle\\Routing\\Loader\\RestXmlCollectionLoader`\n   * `FOS\\RestBundle\\Routing\\Loader\\RestYamlCollectionLoader`\n   * `FOS\\RestBundle\\Routing\\ClassResourceInterface`\n   * `FOS\\RestBundle\\Routing\\RestRouteCollection`\n   * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionHandler`\n   * `FOS\\RestBundle\\Serializer\\Normalizer\\ExceptionNormalizer`\n\n * The following services and aliases have been removed:\n\n   * `fos_rest.access_denied_listener`\n   * `fos_rest.exception_listener`\n   * `fos_rest.exception.controller`\n   * `fos_rest.exception.twig_controller`\n   * `fos_rest.routing.loader.controller`\n   * `fos_rest.routing.loader.directory`\n   * `fos_rest.routing.loader.processor`\n   * `fos_rest.routing.loader.reader.controller`\n   * `fos_rest.routing.loader.reader.action`\n   * `fos_rest.routing.loader.xml_collection`\n   * `fos_rest.routing.loader.yaml_collection`\n   * `fos_rest.serializer.exception_normalizer.jms`\n   * `fos_rest.serializer.exception_normalizer.symfony`\n   * `fos_rest.templating`\n\n * The following classes are marked as `internal` (backwards compatibility will no longer be guaranteed):\n\n   * `FOS\\RestBundle\\DependencyInjection\\Compiler\\HandlerRegistryDecorationPass`\n   * `FOS\\RestBundle\\DependencyInjection\\FOSRestExtension`\n   * `FOS\\RestBundle\\Form\\Extension\\DisableCSRFExtension`\n   * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n   * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizer`\n   * `FOS\\RestBundle\\Normalizer\\CamelKeysNormalizerWithLeadingUnderscore`\n   * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorHandler`\n   * `FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorNormalizer`\n   * `FOS\\RestBundle\\Util\\ExceptionValueMap`\n\n * The following classes are now `final`:\n\n   * `FOS\\RestBundle\\Decoder\\ContainerDecoderProvider`\n   * `FOS\\RestBundle\\Decoder\\JsonDecoder`\n   * `FOS\\RestBundle\\Decoder\\JsonToFormDecoder`\n   * `FOS\\RestBundle\\Decoder\\XmlDecoder`\n   * `FOS\\RestBundle\\Form\\Transformer\\EntityToIdObjectTransformer`\n   * `FOS\\RestBundle\\Negotiation\\FormatNegotiator`\n   * `FOS\\RestBundle\\Request\\ParamFetcher`\n   * `FOS\\RestBundle\\Request\\ParamReader`\n   * `FOS\\RestBundle\\Request\\RequestBodyParamConverter`\n   * `FOS\\RestBundle\\Response\\AllowMethodsLoader\\AllowedMethodsRouterLoader`\n   * `FOS\\RestBundle\\Serializer\\JMSSerializerAdapter`\n   * `FOS\\RestBundle\\Serializer\\SymfonySerializerAdapter`\n   * `FOS\\RestBundle\\Version\\ChainVersionResolver`\n   * `FOS\\RestBundle\\Version\\Resolver\\HeaderVersionResolver`\n   * `FOS\\RestBundle\\Version\\Resolver\\MediaTypeVersionResolver`\n   * `FOS\\RestBundle\\Version\\Resolver\\QueryParameterVersionResolver`\n   * `FOS\\RestBundle\\View\\JsonpHandler`\n   * `FOS\\RestBundle\\View\\View`\n   * `FOS\\RestBundle\\View\\ViewHandler`\n"
        },
        {
          "name": "Util",
          "type": "tree",
          "content": null
        },
        {
          "name": "Validator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Version",
          "type": "tree",
          "content": null
        },
        {
          "name": "View",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.166015625,
          "content": "{\n    \"name\": \"friendsofsymfony/rest-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"This Bundle provides various tools to rapidly develop RESTful API's with Symfony\",\n    \"keywords\": [\"rest\"],\n    \"homepage\": \"http://friendsofsymfony.github.com\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Lukas Kahwe Smith\",\n            \"email\": \"smith@pooteeweet.org\"\n        },\n        {\n            \"name\": \"Konstantin Kudryashov\",\n            \"email\": \"ever.zet@gmail.com\"\n        },\n        {\n            \"name\": \"FriendsOfSymfony Community\",\n            \"homepage\": \"https://github.com/friendsofsymfony/FOSRestBundle/contributors\"\n        }\n    ],\n    \"autoload\":{\n        \"psr-4\":{\n            \"FOS\\\\RestBundle\\\\\": \"\"\n        },\n        \"exclude-from-classmap\": [\n            \"Resources/\",\n            \"Tests/\"\n        ]\n    },\n    \"require\": {\n        \"php\": \"^7.4|^8.0\",\n        \"symfony/config\": \"^5.4|^6.4|^7.0\",\n        \"symfony/dependency-injection\": \"^5.4|^6.4|^7.0\",\n        \"symfony/deprecation-contracts\": \"^2.1|^3.0\",\n        \"symfony/event-dispatcher\": \"^5.4|^6.4|^7.0\",\n        \"symfony/framework-bundle\": \"^5.4|^6.4|^7.0\",\n        \"symfony/http-foundation\": \"^5.4|^6.4|^7.0\",\n        \"symfony/http-kernel\": \"^5.4|^6.4|^7.0\",\n        \"symfony/routing\": \"^5.4|^6.4|^7.0\",\n        \"symfony/security-core\": \"^5.4|^6.4|^7.0\",\n        \"willdurand/jsonp-callback-validator\": \"^1.0|^2.0\",\n        \"willdurand/negotiation\": \"^2.0|^3.0\"\n    },\n    \"require-dev\": {\n        \"doctrine/annotations\": \"^1.13.2|^2.0\",\n        \"friendsofphp/php-cs-fixer\": \"^3.43\",\n        \"jms/serializer\": \"^1.13|^2.0|^3.0\",\n        \"jms/serializer-bundle\": \"^2.4.3|^3.0.1|^4.0|^5.0\",\n        \"psr/http-message\": \"^1.0\",\n        \"psr/log\": \"^1.0|^2.0|^3.0\",\n        \"sensio/framework-extra-bundle\": \"^6.1\",\n        \"symfony/asset\": \"^5.4|^6.4|^7.0\",\n        \"symfony/browser-kit\": \"^5.4|^6.4|^7.0\",\n        \"symfony/css-selector\": \"^5.4|^6.4|^7.0\",\n        \"symfony/expression-language\": \"^5.4|^6.4|^7.0\",\n        \"symfony/form\": \"^5.4|^6.4|^7.0\",\n        \"symfony/mime\": \"^5.4|^6.4|^7.0\",\n        \"symfony/phpunit-bridge\": \"^7.0.1\",\n        \"symfony/security-bundle\": \"^5.4|^6.4|^7.0\",\n        \"symfony/serializer\": \"^5.4|^6.4|^7.0\",\n        \"symfony/twig-bundle\": \"^5.4|^6.4|^7.0\",\n        \"symfony/validator\": \"^5.4|^6.4|^7.0\",\n        \"symfony/web-profiler-bundle\": \"^5.4|^6.4|^7.0\",\n        \"symfony/yaml\": \"^5.4|^6.4|^7.0\"\n    },\n    \"suggest\": {\n        \"jms/serializer-bundle\": \"Add support for advanced serialization capabilities, recommended\",\n        \"sensio/framework-extra-bundle\": \"Add support for the request body converter and the view response listener, not supported with Symfony >=7.0\",\n        \"symfony/serializer\": \"Add support for basic serialization capabilities and xml decoding\",\n        \"symfony/validator\": \"Add support for validation capabilities in the ParamFetcher\"\n    },\n    \"conflict\": {\n        \"doctrine/annotations\": \"<1.12\",\n        \"sensio/framework-extra-bundle\": \"<6.1\",\n        \"jms/serializer-bundle\": \"<2.4.3|3.0.0\",\n        \"jms/serializer\": \"<1.13.0\"\n    },\n    \"minimum-stability\":  \"dev\",\n    \"extra\": {\n        \"branch-alias\": {\n            \"3.x-dev\": \"3.1-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpunit",
          "type": "blob",
          "size": 0.3896484375,
          "content": "#!/usr/bin/env php\n<?php\nif (!file_exists(__DIR__.'/vendor/symfony/phpunit-bridge/bin/simple-phpunit')) {\n    echo \"Unable to find the `simple-phpunit` script in `vendor/symfony/phpunit-bridge/bin/`.\\nPlease run `composer update` before running this command.\\n\";\n    exit(1);\n}\nputenv('SYMFONY_PHPUNIT_DIR='.__DIR__.'/.phpunit');\nrequire __DIR__.'/vendor/symfony/phpunit-bridge/bin/simple-phpunit';\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.9462890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        bootstrap=\"vendor/autoload.php\"\n        colors=\"true\"\n        xsi:noNamespaceSchemaLocation=\".phpunit/phpunit.xsd\"\n>\n    <php>\n        <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"max[self]=120&amp;max[indirect]=243\"/>\n        <env name=\"SYMFONY_PHPUNIT_VERSION\" value=\"9.6\"/>\n        <ini name=\"error_reporting\" value=\"-1\"/>\n        <server name=\"SHELL_VERBOSITY\" value=\"-1\"/>\n    </php>\n\n    <testsuites>\n        <testsuite name=\"FOSRestBundle test suite\">\n            <directory suffix=\"Test.php\">./Tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage>\n        <include>\n            <directory>./</directory>\n        </include>\n        <exclude>\n            <directory>./Resources</directory>\n            <directory>./Tests</directory>\n            <directory>./vendor</directory>\n        </exclude>\n    </coverage>\n</phpunit>\n"
        }
      ]
    }
  ]
}