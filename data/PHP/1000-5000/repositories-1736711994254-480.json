{
  "metadata": {
    "timestamp": 1736711994254,
    "page": 480,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lstrojny/functional-php",
      "stars": 1982,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.236328125,
          "content": "root = true\n\n[*]\nend_of_line = lf\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.php, *.xml]\nindent_size = 4\n\n[*.md]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.091796875,
          "content": "build/\nvendor/\n.php_cs.cache\ncomposer.lock\nphpcs.xml\nphpunit.xml\n.idea/\n.phpunit.result.cache\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.1943359375,
          "content": "<?php\n\nreturn PhpCsFixer\\Config::create()\n    ->setRiskyAllowed(true)\n    ->setRules([\n        'native_function_invocation' => true,\n    ])\n    ->setFinder(PhpCsFixer\\Finder::create()->in(__DIR__));\n"
        },
        {
          "name": ".phpstorm.meta.php",
          "type": "blob",
          "size": 0.7529296875,
          "content": "<?php\n\n// see https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata\n\nnamespace PHPSTORM_META;\n\noverride(\\Functional\\but_last(0), type(0));\noverride(\\Functional\\drop_first(0), type(0));\noverride(\\Functional\\drop_last(0), type(0));\noverride(\\Functional\\filter(0), type(0));\noverride(\\Functional\\first(0), elementType(0));\noverride(\\Functional\\head(0), elementType(0));\noverride(\\Functional\\id(0), type(0));\noverride(\\Functional\\last(0), elementType(0));\noverride(\\Functional\\pick(0), elementType(0));\noverride(\\Functional\\reindex(0), type(0));\noverride(\\Functional\\reject(0), type(0));\noverride(\\Functional\\select(0), type(0));\noverride(\\Functional\\sort(0), type(0));\noverride(\\Functional\\tail(0), type(0));\noverride(\\Functional\\unique(0), type(0));\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.1328125,
          "content": "checks:\n  php:\n    code_rating: true\n    duplication: true\n\nfilter:\n  excluded_paths:\n    - tests/*\n    - vendor/*\n  paths:\n    - src/*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "MIT License\n\nCopyright (c) 2011-2021 Lars Strojny\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3408203125,
          "content": "# Functional PHP: Functional primitives for PHP\n\n[![Test](https://github.com/lstrojny/functional-php/actions/workflows/test.yaml/badge.svg)](https://github.com/lstrojny/functional-php/actions/workflows/test.yaml)\n\n*NOTE:* functional-php used to come with a C extension that implemented most of the functions natively. As the\nperformance differences weren’t that huge compared to the maintenance cost it has been removed.\n\nA set of functional primitives for PHP, heavily inspired by [Scala’s traversable\ncollection](http://www.scala-lang.org/archives/downloads/distrib/files/nightly/docs/library/scala/collection/Traversable.html),\n[Dojo’s array functions](http://dojotoolkit.org/reference-guide/quickstart/arrays.html) and\n[Underscore.js](http://underscorejs.org/)\n\n- Works with arrays and everything implementing interface `Traversable`\n- Consistent interface: for functions taking collections and callbacks, first parameter is always the collection, then the callback.\n  Callbacks are always passed `$value`, `$index`, `$collection`. Strict comparison is the default but can be changed\n- Calls 5.3 closures as well as usual callbacks\n- All functions reside in namespace `Functional` to not raise conflicts with any other extension or library\n\n[![Functional Comic](http://imgs.xkcd.com/comics/functional.png)](http://xkcd.com/1270/)\n\n## Installation\n\nRun the following command in your project root:\n\n    composer require lstrojny/functional-php\n\n## Docs\n\n[Read the docs](docs/functional-php.md)\n\n## Contributing\n\n1. Fork and `git clone` the project\n2. Install dependencies via `composer install`\n3. Run the tests via `composer run tests`\n4. Write code and create a PR\n\n## Mailing lists\n\n- General help and development list: http://groups.google.com/group/functional-php\n- Commit list: http://groups.google.com/group/functional-php-commits\n\n## Thank you\n\n- [Richard Quadling](https://github.com/RQuadling) and [Pierre Joye](https://github.com/pierrejoye) for Windows build\n   help\n- [David Soria Parra](https://github.com/dsp) for various ideas and the userland version of `Functional\\flatten()`\n- [Max Beutel](https://github.com/maxbeutel) for `Functional\\unique()`, `Functional\\invoke_first()`,\n   `Functional\\invoke_last()` and all the discussions\n- [An Phan](https://github.com/phanan) for [many](https://github.com/lstrojny/functional-php/pulls?q=author%3Aphanan)\n  great contributions\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 5.0458984375,
          "content": "{\n    \"name\": \"lstrojny/functional-php\",\n    \"description\": \"Functional primitives for PHP\",\n    \"keywords\": [\n        \"functional\"\n    ],\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Lars Strojny\",\n            \"email\": \"lstrojny@php.net\",\n            \"homepage\": \"https://usrportage.de\"\n        },\n        {\n            \"name\": \"Max Beutel\",\n            \"email\": \"nash12@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.1|~8\"\n    },\n    \"require-dev\": {\n        \"squizlabs/php_codesniffer\": \"~3.0\",\n        \"phpunit/phpunit\": \"^7.0 || ^8.0 || ^9.5\",\n        \"friendsofphp/php-cs-fixer\": \"^2.17\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Functional\\\\\": \"src/Functional\"\n        },\n        \"files\": [\n            \"src/Functional/Ary.php\",\n            \"src/Functional/Average.php\",\n            \"src/Functional/ButLast.php\",\n            \"src/Functional/Capture.php\",\n            \"src/Functional/ConstFunction.php\",\n            \"src/Functional/CompareOn.php\",\n            \"src/Functional/CompareObjectHashOn.php\",\n            \"src/Functional/Compose.php\",\n            \"src/Functional/Concat.php\",\n            \"src/Functional/Contains.php\",\n            \"src/Functional/Converge.php\",\n            \"src/Functional/Curry.php\",\n            \"src/Functional/CurryN.php\",\n            \"src/Functional/Difference.php\",\n            \"src/Functional/DropFirst.php\",\n            \"src/Functional/DropLast.php\",\n            \"src/Functional/Each.php\",\n            \"src/Functional/Entries.php\",\n            \"src/Functional/Equal.php\",\n            \"src/Functional/ErrorToException.php\",\n            \"src/Functional/Every.php\",\n            \"src/Functional/False.php\",\n            \"src/Functional/Falsy.php\",\n            \"src/Functional/Filter.php\",\n            \"src/Functional/First.php\",\n            \"src/Functional/FirstIndexOf.php\",\n            \"src/Functional/FlatMap.php\",\n            \"src/Functional/Flatten.php\",\n            \"src/Functional/Flip.php\",\n            \"src/Functional/FromEntries.php\",\n            \"src/Functional/GreaterThan.php\",\n            \"src/Functional/GreaterThanOrEqual.php\",\n            \"src/Functional/Group.php\",\n            \"src/Functional/Head.php\",\n            \"src/Functional/Id.php\",\n            \"src/Functional/IfElse.php\",\n            \"src/Functional/Identical.php\",\n            \"src/Functional/IndexesOf.php\",\n            \"src/Functional/Intersperse.php\",\n            \"src/Functional/Invoke.php\",\n            \"src/Functional/InvokeFirst.php\",\n            \"src/Functional/InvokeIf.php\",\n            \"src/Functional/InvokeLast.php\",\n            \"src/Functional/Invoker.php\",\n            \"src/Functional/Last.php\",\n            \"src/Functional/LastIndexOf.php\",\n            \"src/Functional/LessThan.php\",\n            \"src/Functional/LessThanOrEqual.php\",\n            \"src/Functional/LexicographicCompare.php\",\n            \"src/Functional/Map.php\",\n            \"src/Functional/Matching.php\",\n            \"src/Functional/Maximum.php\",\n            \"src/Functional/Memoize.php\",\n            \"src/Functional/Minimum.php\",\n            \"src/Functional/None.php\",\n            \"src/Functional/Noop.php\",\n            \"src/Functional/Not.php\",\n            \"src/Functional/OmitKeys.php\",\n            \"src/Functional/PartialAny.php\",\n            \"src/Functional/PartialLeft.php\",\n            \"src/Functional/PartialMethod.php\",\n            \"src/Functional/PartialRight.php\",\n            \"src/Functional/Partition.php\",\n            \"src/Functional/Pick.php\",\n            \"src/Functional/Pluck.php\",\n            \"src/Functional/Poll.php\",\n            \"src/Functional/Product.php\",\n            \"src/Functional/Ratio.php\",\n            \"src/Functional/ReduceLeft.php\",\n            \"src/Functional/ReduceRight.php\",\n            \"src/Functional/Reindex.php\",\n            \"src/Functional/Reject.php\",\n            \"src/Functional/Repeat.php\",\n            \"src/Functional/Retry.php\",\n            \"src/Functional/Select.php\",\n            \"src/Functional/SelectKeys.php\",\n            \"src/Functional/SequenceConstant.php\",\n            \"src/Functional/SequenceExponential.php\",\n            \"src/Functional/SequenceLinear.php\",\n            \"src/Functional/Some.php\",\n            \"src/Functional/Sort.php\",\n            \"src/Functional/Sum.php\",\n            \"src/Functional/SuppressError.php\",\n            \"src/Functional/Tap.php\",\n            \"src/Functional/Tail.php\",\n            \"src/Functional/TailRecursion.php\",\n            \"src/Functional/TakeLeft.php\",\n            \"src/Functional/TakeRight.php\",\n            \"src/Functional/True.php\",\n            \"src/Functional/Truthy.php\",\n            \"src/Functional/Unique.php\",\n            \"src/Functional/ValueToKey.php\",\n            \"src/Functional/With.php\",\n            \"src/Functional/Zip.php\",\n            \"src/Functional/ZipAll.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Functional\\\\Tests\\\\\": \"tests/Functional\"\n        }\n    },\n    \"scripts\": {\n        \"tests\": \"vendor/bin/phpunit\",\n        \"coding-style\": \"vendor/bin/phpcs && vendor/bin/php-cs-fixer fix --dry-run --diff --config=.php_cs.dist\",\n        \"clear\": \"rm -rf vendor/\"\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 0.6953125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         name=\"PHP_CodeSniffer\"\n         xsi:noNamespaceSchemaLocation=\"vendor/squizlabs/php_codesniffer/phpcs.xsd\">\n    <description>Functional PHP coding style configuration</description>\n\n    <file>src/</file>\n    <file>tests/</file>\n\n    <arg name=\"colors\" />\n    <arg value=\"n\" />\n\n    <rule ref=\"PSR12\" />\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MultipleClasses\">\n        <exclude-pattern>tests/*</exclude-pattern>\n    </rule>\n\n    <rule ref=\"Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase\">\n        <exclude-pattern>src/Functional/Functional.php</exclude-pattern>\n    </rule>\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 2.0888671875,
          "content": "<?xml version=\"1.0\"?>\n<!--\n * Copyright (C) 2011-2021 by Lars Strojny <lstrojny@php.net>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n -->\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         convertDeprecationsToExceptions=\"true\"\n         beStrictAboutOutputDuringTests=\"true\"\n         verbose=\"true\"\n         colors=\"true\">\n  <coverage>\n    <include>\n      <directory suffix=\".php\">src/Functional</directory>\n    </include>\n    <report>\n      <clover outputFile=\"build/logs/clover.xml\"/>\n      <html outputDirectory=\"build/coverage\" lowUpperBound=\"35\" highLowerBound=\"70\"/>\n    </report>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"unit-tests\">\n      <directory>tests/Functional/</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/logs/junit.xml\"/>\n  </logging>\n  <php>\n    <ini name=\"error_reporting\" value=\"-1\"/>\n    <ini name=\"date.timezone\" value=\"UTC\"/>\n    <ini name=\"display_errors\" value=\"on\"/>\n  </php>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}