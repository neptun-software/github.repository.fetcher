{
  "metadata": {
    "timestamp": 1736711814488,
    "page": 105,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kriswallsmith/assetic",
      "stars": 3746,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1796875,
          "content": "/docs export-ignore\n/tests export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.travis.yml export-ignore\nphpunit.travis.xml export-ignore\nphpunit.xml.dist export-ignore"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.078125,
          "content": "bin/\ncomposer.lock\ncomposer.phar\nphpunit.xml\nvendor/\nnode_modules/\nGemfile.lock\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.6630859375,
          "content": "language: php\n\naddons:\n    apt:\n        packages:\n            - jpegoptim\n            - libjpeg-progs\n            - optipng\n\nsudo: false\n\ncache:\n    directories:\n        - $HOME/.composer/cache/files\n\nphp:\n    - 5.3\n    - 5.4\n    - 5.5\n    - 5.6\n    - 7.0\n    - 7.1\n    - hhvm\n\nmatrix:\n    allow_failures:\n        - php: hhvm\n        - php: 7.1\n    include:\n        - php: 5.3\n          env: COMPOSER_FLAGS='--prefer-lowest --prefer-stable' SYMFONY_DEPRECATIONS_HELPER=weak\n        - php: 5.6\n          env: DEPENDENCIES=dev\n\nbefore_script:\n    # php deps\n    - composer self-update\n    - if [ \"$DEPENDENCIES\" = \"dev\" ]; then perl -pi -e 's/^}$/,\"minimum-stability\":\"dev\"}/' composer.json; fi;\n    - composer update $COMPOSER_FLAGS\n\n    # node deps\n    - npm install uglify-js@1 && mkdir -p vendor/uglifyjs && mv node_modules vendor/uglifyjs\n    - npm install\n    - export NODE_VERSION=$(node -v | egrep -o \"[0-9]+.[0-9]+.[0-9]+\")\n    - export UGLIFYJS_BIN=vendor/uglifyjs/node_modules/uglify-js/bin/uglifyjs\n    - if [[ \"$NODE_VERSION\" =~ ^0.[0-9].[0-9]+$|^0.10.[0-9]+$|^0.11.[0-9]$|^0.11.1[0-2]$ ]]; then export AUTOPREFIXER_BIN=node_modules/.bin/autoprefixer; else export AUTOPREFIXER_BIN=node_modules/.bin/autoprefixer-cli; fi;\n\n    # java deps\n    - mkdir -p vendor/java\n    - wget http://dl.google.com/closure-compiler/compiler-latest.zip && unzip compiler-latest.zip -d vendor/java/compiler && mv vendor/java/compiler/closure-compiler-*.jar vendor/java/compiler/compiler.jar\n    - export CLOSURE_JAR=vendor/java/compiler/compiler.jar\n    - wget https://github.com/google/closure-stylesheets/releases/download/v1.4.0/closure-stylesheets.jar && mv closure-stylesheets.jar vendor/java\n    - export GSS_JAR=vendor/java/closure-stylesheets.jar\n#    TODO find the new URL for the cssembed JAR\n#    - wget https://github.com/downloads/nzakas/cssembed/cssembed-0.4.5.jar && mv cssembed-0.4.5.jar vendor/java\n#    - export CSSEMBED_JAR=vendor/java/cssembed-0.4.5.jar\n    - wget http://yui.zenfs.com/releases/yuicompressor/yuicompressor-2.4.7.zip && unzip yuicompressor-2.4.7.zip -d vendor/java\n    - export YUI_COMPRESSOR_JAR=vendor/java/yuicompressor-2.4.7/build/yuicompressor-2.4.7.jar\n\n    # ruby deps\n    - bundle install\n\n    # other deps\n\n    - wget -q http://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-x64-release.zip && unzip dartsdk-linux-x64-release.zip && mv dart-sdk vendor\n    - export DART_BIN=vendor/dart-sdk/bin/dart2js\n\n    - wget -q http://static.jonof.id.au/dl/kenutils/pngout-20130221-linux.tar.gz && tar -xzf pngout-20130221-linux.tar.gz && mv pngout-20130221-linux vendor\n    - export PNGOUT_BIN=vendor/pngout-20130221-linux/x86_64/pngout\n\nscript: ./bin/phpunit -v\n"
        },
        {
          "name": "CHANGELOG-1.0.md",
          "type": "blob",
          "size": 0.8828125,
          "content": "1.0.4 (August 28, 2012)\n-----------------------\n\n * Fixed the Twig tag to avoid a fatal error when left unclosed\n * Added the HashableInterface for non-serialiable filters\n * Fixed a bug for compass on windows\n\n1.0.3 (March 2, 2012)\n---------------------\n\n * Added \"boring\" option to Compass filter\n * Fixed accumulation of load paths in Compass filter\n * Fixed issues in CssImport and CssRewrite filters\n\n1.0.2 (August 26, 2011)\n-----------------------\n\n * Twig 1.2 compatibility\n * Fixed filtering of large LessCSS assets\n * Fixed escaping of commands on Windows\n * Misc fixes to Compass filter\n * Removed default CssEmbed charset\n\n1.0.1 (July 15, 2011)\n---------------------\n\n * Fixed Twig error handling\n * Removed use of STDIN\n * Added inheritance of environment variables\n * Fixed Compass on Windows\n * Improved escaping of commands\n\n1.0.0 (July 10, 2011)\n---------------------\n\n * Initial release\n"
        },
        {
          "name": "CHANGELOG-1.1.md",
          "type": "blob",
          "size": 2.2431640625,
          "content": "1.1.2 (July 18, 2013)\n-------------------\n\n * Fixed deep mtime on asset collections\n * `CallablesFilter` now implements `DependencyExtractorInterface`\n * Fixed detection of \"partial\" children in subfolders in `SassFilter`\n * Restored `PathUtils` for BC\n\n1.1.1 (June 1, 2013)\n--------------------\n\n * Fixed cloning of asset collections\n * Fixed environment var inheritance\n * Replaced `AssetWriter::getCombinations()` for BC, even though we don't use it\n * Added support for `@import-once` to Less filters\n\n1.1.0 (May 15, 2013)\n--------------------\n\n * Added LazyAssetManager::getLastModified() for determining \"deep\" mtime\n * Added DartFilter\n * Added EmberPrecompile\n * Added GssFilter\n * Added PhpCssEmbedFilter\n * Added RooleFilter\n * Added TypeScriptFilter\n * Added the possibility to configure additional load paths for less and lessphp\n * Added the UglifyCssFilter\n * Fixed the handling of directories in the GlobAsset. #256\n * Added Handlebars support\n * Added Scssphp-compass support\n * Added the CacheBustingWorker\n * Added the UglifyJs2Filter\n\n1.1.0-alpha1 (August 28, 2012)\n------------------------------\n\n * Added pure php css embed filter\n * Added Scssphp support\n * Added support for Google Closure language option\n * Added a way to set a specific ruby path for CompassFilter and SassFilter\n * Ensure uniqueness of temporary files created by the compressor filter. Fixed #61\n * Added Compass option for generated_images_path (for generated Images/Sprites)\n * Added PackerFilter\n * Add the way to contact closure compiler API using curl, if available and allow_url_fopen is off\n * Added filters for JSMin and JSMinPlus\n * Added the UglifyJsFilter\n * Improved the error message in getModifiedTime when a file asset uses an invalid file\n * added support for asset variables:\n\n       Asset variables allow you to pre-compile your assets for a finite set of known\n       variable values, and then to simply deliver the correct asset version at runtime.\n       For example, this is helpful for assets with language, or browser-specific code.\n * Removed the copy-paste of the Symfony2 Process component and use the original one\n * Added ability to pass variables into lessphp filter\n * Added google closure stylesheets jar filter\n * Added the support of `--bare` for the CoffeeScriptFilter\n"
        },
        {
          "name": "CHANGELOG-1.2.md",
          "type": "blob",
          "size": 1.8701171875,
          "content": "1.2.0 (2014-10-14)\n------------------\n\n### New features\n\n* Added the autoprefixer filter\n* Added --no-header option for Coffeescript\n* Implemented the extraction of dependencies for the compass filter\n* Allow custom functions to be registered on the Lessphp filter\n* Added MinifyCssCompressor filter based on `mrclay/minify`\n* Added `setVariables` in the ScssPhpFilter\n* Improved the support of the compress options for UglifyJS2\n* Added CssCacheBustingFilter to apply cache busting on URLs in the CSS\n* Added support for `--relative-assets` option for the compass filter\n\n### Bug fixes\n\n* Allow functions.php to be included many times\n* Updated the ScssPhpFilter for upstream class renaming\n\n1.2.0-alpha1 (2014-07-08)\n-------------------------\n\n### BC breaks\n\n* Added `AssetFactory` instance as second argument for `WorkerInterface::process()`\n* Removed `LazyAssetManager` from `CacheBustingWorker` constructor\n* A new `getSourceDirectory()` method was added on the AssetInterface\n* Removed limit and count arguments from CssUtils functions\n* Removed the deprecated `PathUtils` class\n\n### New features\n\n* added `CssUtils::filterCommentless()`\n* Added `DependencyExtractorInterface` for filters to report other files they import\n* Added the support of nib in the stylus filter\n* Added `registerFunction` and `setFormatter` to the scssphp filter\n* Added the support of flag file for the ClosureCompilerJarFilter\n* Added the JsSqueeze filter\n* Added support of the define option for uglifyjs (1 & 2) filters\n* Added logging for Twig errors in the extractor\n\n### Bug fixes\n\n* Fixed the detection of protocol-relative CSS imports\n* Updated AssetCollection to not add several time the same variable in path\n* Fixed the merging of the environment variables to keep the configuration of the NODE_PATH working\n* Fixed the support of ``{% embed %}`` in the Twig extractor\n* Fixed the support of asset variables in GlobAsset\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.08203125,
          "content": "source \"https://rubygems.org\"\n\ngem \"sprockets\", \"~> 1.0.0\"\ngem \"sass\"\ngem \"compass\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2010-2015 OpenSky Project Inc\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.380859375,
          "content": "# Assetic [![Build Status](https://travis-ci.org/kriswallsmith/assetic.png?branch=master)](https://travis-ci.org/kriswallsmith/assetic)\n\nAssetic is an asset management framework for PHP.\n\nProject status\n--------------\n\nThis project is not maintained anymore. Development has been taken over at https://github.com/assetic-php/assetic under the package name `assetic/framework`.\n\nExample\n-------\n\n``` php\n<?php\n\nuse Assetic\\Asset\\AssetCollection;\nuse Assetic\\Asset\\FileAsset;\nuse Assetic\\Asset\\GlobAsset;\n\n$js = new AssetCollection(array(\n    new GlobAsset('/path/to/js/*'),\n    new FileAsset('/path/to/another.js'),\n));\n\n// the code is merged when the asset is dumped\necho $js->dump();\n```\n\nAssets\n------\n\nAn Assetic asset is something with filterable content that can be loaded and\ndumped. An asset also includes metadata, some of which can be manipulated and\nsome of which is immutable.\n\n| **Property** | **Accessor**    | **Mutator**   |\n|--------------|-----------------|---------------|\n| content      | getContent      | setContent    |\n| mtime        | getLastModified | n/a           |\n| source root  | getSourceRoot   | n/a           |\n| source path  | getSourcePath   | n/a           |\n| target path  | getTargetPath   | setTargetPath |\n\nThe \"target path\" property denotes where an asset (or an collection of assets) should be dumped.\n\nFilters\n-------\n\nFilters can be applied to manipulate assets.\n\n``` php\n<?php\n\nuse Assetic\\Asset\\AssetCollection;\nuse Assetic\\Asset\\FileAsset;\nuse Assetic\\Asset\\GlobAsset;\nuse Assetic\\Filter\\LessFilter;\nuse Assetic\\Filter\\Yui;\n\n$css = new AssetCollection(array(\n    new FileAsset('/path/to/src/styles.less', array(new LessFilter())),\n    new GlobAsset('/path/to/css/*'),\n), array(\n    new Yui\\CssCompressorFilter('/path/to/yuicompressor.jar'),\n));\n\n// this will echo CSS compiled by LESS and compressed by YUI\necho $css->dump();\n```\n\nThe filters applied to the collection will cascade to each asset leaf if you\niterate over it.\n\n``` php\n<?php\n\nforeach ($css as $leaf) {\n    // each leaf is compressed by YUI\n    echo $leaf->dump();\n}\n```\n\nThe core provides the following filters in the `Assetic\\Filter` namespace:\n\n * `AutoprefixerFilter`: Parse and update vendor-specific properties using autoprefixer\n * `CoffeeScriptFilter`: compiles CoffeeScript into Javascript\n * `CompassFilter`: Compass CSS authoring framework\n * `CssEmbedFilter`: embeds image data in your stylesheets\n * `CssImportFilter`: inlines imported stylesheets\n * `CssMinFilter`: minifies CSS\n * `CleanCssFilter`: minifies CSS\n * `CssRewriteFilter`: fixes relative URLs in CSS assets when moving to a new URL\n * `DartFilter`: compiles Javascript using dart2js\n * `EmberPrecompileFilter`: precompiles Handlebars templates into Javascript for use in the Ember.js framework\n * `GoogleClosure\\CompilerApiFilter`: compiles Javascript using the Google Closure Compiler API\n * `GoogleClosure\\CompilerJarFilter`: compiles Javascript using the Google Closure Compiler JAR\n * `GssFilter`: compliles CSS using the Google Closure Stylesheets Compiler\n * `HandlebarsFilter`: compiles Handlebars templates into Javascript\n * `JpegoptimFilter`: optimize your JPEGs\n * `JpegtranFilter`: optimize your JPEGs\n * `JSMinFilter`: minifies Javascript\n * `JSMinPlusFilter`: minifies Javascript\n * `JSqueezeFilter`: compresses Javascript\n * `LessFilter`: parses LESS into CSS (using less.js with node.js)\n * `LessphpFilter`: parses LESS into CSS (using lessphp)\n * `OptiPngFilter`: optimize your PNGs\n * `PackagerFilter`: parses Javascript for packager tags\n * `PackerFilter`: compresses Javascript using Dean Edwards's Packer\n * `PhpCssEmbedFilter`: embeds image data in your stylesheet\n * `PngoutFilter`: optimize your PNGs\n * `ReactJsxFilter`: compiles React JSX into JavaScript\n * `Sass\\SassFilter`: parses SASS into CSS\n * `Sass\\ScssFilter`: parses SCSS into CSS\n * `SassphpFilter`: parses Sass into CSS using the sassphp bindings for Libsass\n * `ScssphpFilter`: parses SCSS using scssphp\n * `SeparatorFilter`: inserts a separator between assets to prevent merge failures\n * `SprocketsFilter`: Sprockets Javascript dependency management\n * `StylusFilter`: parses STYL into CSS\n * `TypeScriptFilter`: parses TypeScript into Javascript\n * `UglifyCssFilter`: minifies CSS\n * `UglifyJs2Filter`: minifies Javascript\n * `UglifyJsFilter`: minifies Javascript\n * `Yui\\CssCompressorFilter`: compresses CSS using the YUI compressor\n * `Yui\\JsCompressorFilter`: compresses Javascript using the YUI compressor\n\nAsset Manager\n-------------\n\nAn asset manager is provided for organizing assets.\n\n``` php\n<?php\n\nuse Assetic\\AssetManager;\nuse Assetic\\Asset\\FileAsset;\nuse Assetic\\Asset\\GlobAsset;\n\n$am = new AssetManager();\n$am->set('jquery', new FileAsset('/path/to/jquery.js'));\n$am->set('base_css', new GlobAsset('/path/to/css/*'));\n```\n\nThe asset manager can also be used to reference assets to avoid duplication.\n\n``` php\n<?php\n\nuse Assetic\\Asset\\AssetCollection;\nuse Assetic\\Asset\\AssetReference;\nuse Assetic\\Asset\\FileAsset;\n\n$am->set('my_plugin', new AssetCollection(array(\n    new AssetReference($am, 'jquery'),\n    new FileAsset('/path/to/jquery.plugin.js'),\n)));\n```\n\nFilter Manager\n--------------\n\nA filter manager is also provided for organizing filters.\n\n``` php\n<?php\n\nuse Assetic\\FilterManager;\nuse Assetic\\Filter\\Sass\\SassFilter;\nuse Assetic\\Filter\\Yui;\n\n$fm = new FilterManager();\n$fm->set('sass', new SassFilter('/path/to/parser/sass'));\n$fm->set('yui_css', new Yui\\CssCompressorFilter('/path/to/yuicompressor.jar'));\n```\n\nAsset Factory\n-------------\n\nIf you'd rather not create all these objects by hand, you can use the asset\nfactory, which will do most of the work for you.\n\n``` php\n<?php\n\nuse Assetic\\Factory\\AssetFactory;\n\n$factory = new AssetFactory('/path/to/asset/directory/');\n$factory->setAssetManager($am);\n$factory->setFilterManager($fm);\n$factory->setDebug(true);\n\n$css = $factory->createAsset(array(\n    '@reset',         // load the asset manager's \"reset\" asset\n    'css/src/*.scss', // load every scss files from \"/path/to/asset/directory/css/src/\"\n), array(\n    'scss',           // filter through the filter manager's \"scss\" filter\n    '?yui_css',       // don't use this filter in debug mode\n));\n\necho $css->dump();\n```\n\nThe `AssetFactory` is constructed with a root directory which is used as the base directory for relative asset paths.\n\nPrefixing a filter name with a question mark, as `yui_css` is here, will cause\nthat filter to be omitted when the factory is in debug mode.\n\nYou can also register [Workers](src/Assetic/Factory/Worker/WorkerInterface.php) on the factory and all assets created\nby it will be passed to the worker's `process()` method before being returned. See _Cache Busting_ below for an example.\n\nDumping Assets to static files\n------------------------------\n\nYou can dump all the assets an AssetManager holds to files in a directory. This will probably be below your webserver's document root\nso the files can be served statically.\n\n``` php\n<?php\n\nuse Assetic\\AssetWriter;\n\n$writer = new AssetWriter('/path/to/web');\n$writer->writeManagerAssets($am);\n```\n\nThis will make use of the assets' target path.\n\nCache Busting\n-------------\n\nIf you serve your assets from static files as just described, you can use the CacheBustingWorker to rewrite the target\npaths for assets. It will insert an identifier before the filename extension that is unique for a particular version\nof the asset.\n\nThis identifier is based on the modification time of the asset and will also take depended-on assets into\nconsideration if the applied filters support it.\n\n``` php\n<?php\n\nuse Assetic\\Factory\\AssetFactory;\nuse Assetic\\Factory\\Worker\\CacheBustingWorker;\n\n$factory = new AssetFactory('/path/to/asset/directory/');\n$factory->setAssetManager($am);\n$factory->setFilterManager($fm);\n$factory->setDebug(true);\n$factory->addWorker(new CacheBustingWorker());\n\n$css = $factory->createAsset(array(\n    '@reset',         // load the asset manager's \"reset\" asset\n    'css/src/*.scss', // load every scss files from \"/path/to/asset/directory/css/src/\"\n), array(\n    'scss',           // filter through the filter manager's \"scss\" filter\n    '?yui_css',       // don't use this filter in debug mode\n));\n\necho $css->dump();\n```\n\nInternal caching\n-------\n\nA simple caching mechanism is provided to avoid unnecessary work.\n\n``` php\n<?php\n\nuse Assetic\\Asset\\AssetCache;\nuse Assetic\\Asset\\FileAsset;\nuse Assetic\\Cache\\FilesystemCache;\nuse Assetic\\Filter\\Yui;\n\n$yui = new Yui\\JsCompressorFilter('/path/to/yuicompressor.jar');\n$js = new AssetCache(\n    new FileAsset('/path/to/some.js', array($yui)),\n    new FilesystemCache('/path/to/cache')\n);\n\n// the YUI compressor will only run on the first call\n$js->dump();\n$js->dump();\n$js->dump();\n```\n\nTwig\n----\n\nTo use the Assetic [Twig][3] extension you must register it to your Twig\nenvironment:\n\n``` php\n<?php\n\n$twig->addExtension(new AsseticExtension($factory));\n```\n\nOnce in place, the extension exposes a stylesheets and a javascripts tag with a syntax similar\nto what the asset factory uses:\n\n``` html+jinja\n{% stylesheets '/path/to/sass/main.sass' filter='sass,?yui_css' output='css/all.css' %}\n    <link href=\"{{ asset_url }}\" type=\"text/css\" rel=\"stylesheet\" />\n{% endstylesheets %}\n```\n\nThis example will render one `link` element on the page that includes a URL\nwhere the filtered asset can be found.\n\nWhen the extension is in debug mode, this same tag will render multiple `link`\nelements, one for each asset referenced by the `css/src/*.sass` glob. The\nspecified filters will still be applied, unless they are marked as optional\nusing the `?` prefix.\n\nThis behavior can also be triggered by setting a `debug` attribute on the tag:\n\n``` html+jinja\n{% stylesheets 'css/*' debug=true %} ... {% stylesheets %}\n```\n\nThese assets need to be written to the web directory so these URLs don't\nreturn 404 errors.\n\n``` php\n<?php\n\nuse Assetic\\AssetWriter;\nuse Assetic\\Extension\\Twig\\TwigFormulaLoader;\nuse Assetic\\Extension\\Twig\\TwigResource;\nuse Assetic\\Factory\\LazyAssetManager;\n\n$am = new LazyAssetManager($factory);\n\n// enable loading assets from twig templates\n$am->setLoader('twig', new TwigFormulaLoader($twig));\n\n// loop through all your templates\nforeach ($templates as $template) {\n    $resource = new TwigResource($twigLoader, $template);\n    $am->addResource($resource, 'twig');\n}\n\n$writer = new AssetWriter('/path/to/web');\n$writer->writeManagerAssets($am);\n```\n\n---\n\nAssetic is based on the Python [webassets][1] library (available on\n[GitHub][2]).\n\n[1]: http://elsdoerfer.name/docs/webassets\n[2]: https://github.com/miracle2k/webassets\n[3]: http://twig.sensiolabs.org\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.8623046875,
          "content": "{\n    \"name\": \"kriswallsmith/assetic\",\n    \"description\": \"Asset Management for PHP\",\n    \"keywords\": [ \"assets\", \"compression\", \"minification\" ],\n    \"homepage\": \"https://github.com/kriswallsmith/assetic\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Kris Wallsmith\",\n            \"email\": \"kris.wallsmith@gmail.com\",\n            \"homepage\": \"http://kriswallsmith.net/\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.3.1\",\n        \"symfony/process\": \"~2.1|~3.0\"\n    },\n    \"conflict\": {\n        \"twig/twig\": \"<1.27\"\n    },\n    \"require-dev\": {\n        \"leafo/lessphp\": \"^0.3.7\",\n        \"leafo/scssphp\": \"~0.1\",\n        \"meenie/javascript-packer\": \"^1.1\",\n        \"mrclay/minify\": \"<2.3\",\n        \"natxet/cssmin\": \"3.0.4\",\n        \"patchwork/jsqueeze\": \"~1.0|~2.0\",\n        \"phpunit/phpunit\": \"~4.8 || ^5.6\",\n        \"psr/log\": \"~1.0\",\n        \"ptachoire/cssembed\": \"~1.0\",\n        \"symfony/phpunit-bridge\": \"~2.7|~3.0\",\n        \"twig/twig\": \"~1.23|~2.0\",\n        \"yfix/packager\": \"dev-master\"\n    },\n    \"suggest\": {\n        \"twig/twig\": \"Assetic provides the integration with the Twig templating engine\",\n        \"leafo/lessphp\": \"Assetic provides the integration with the lessphp LESS compiler\",\n        \"leafo/scssphp\": \"Assetic provides the integration with the scssphp SCSS compiler\",\n        \"ptachoire/cssembed\": \"Assetic provides the integration with phpcssembed to embed data uris\",\n        \"leafo/scssphp-compass\": \"Assetic provides the integration with the SCSS compass plugin\",\n        \"patchwork/jsqueeze\": \"Assetic provides the integration with the JSqueeze JavaScript compressor\"\n    },\n    \"autoload\": {\n        \"psr-0\": { \"Assetic\": \"src/\" },\n        \"files\": [ \"src/functions.php\" ]\n    },\n    \"config\": {\n        \"bin-dir\": \"bin\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"1.4-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3662109375,
          "content": "{\n  \"devDependencies\": {\n    \"uglifycss\": \"*\",\n    \"coffee-script\": \"*\",\n    \"stylus\": \"*\",\n    \"nib\": \"*\",\n    \"ember-precompile\": \"*\",\n    \"typescript\": \"*\",\n    \"less\": \"*\",\n    \"handlebars\": \"*\",\n    \"uglify-js\": \"*\",\n    \"autoprefixer\": \"*\",\n    \"autoprefixer-5\": \"^1.x\",\n    \"autoprefixer-cli\": \"*\",\n    \"roole\": \"*\",\n    \"react-tools\": \"*\",\n    \"clean-css\": \"*\"\n  }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.9091796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<phpunit bootstrap=\"./tests/bootstrap.php\" colors=\"true\">\n    <testsuites>\n        <testsuite name=\"Assetic Test Suite\">\n            <directory suffix=\"Test.php\">./tests/Assetic/Test/</directory>\n        </testsuite>\n    </testsuites>\n\n    <php>\n        <server name=\"NODE_PATH\" value=\"./node_modules/\" />\n\n        <!-- <server name=\"CLOSURE_JAR\" value=\"/path/to/google-closure/compiler.jar\" /> -->\n        <!-- <server name=\"CSSEMBED_JAR\" value=\"/path/to/cssembed.jar\" /> -->\n        <!-- <server name=\"GSS_JAR\" value=\"/path/to/closure-stylesheets.jar\" /> -->\n        <!-- <server name=\"SPROCKETS_LIB\" value=\"/path/to/sprockets/lib\" /> -->\n        <!-- <server name=\"YUI_COMPRESSOR_JAR\" value=\"/path/to/yuicompressor-2.4.2.jar\" /> -->\n    </php>\n\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">./src/Assetic/</directory>\n        </whitelist>\n    </filter>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}