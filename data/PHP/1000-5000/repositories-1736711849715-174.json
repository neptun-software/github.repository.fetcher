{
  "metadata": {
    "timestamp": 1736711849715,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bobthecow/mustache.php",
      "stars": 3248,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.208984375,
          "content": "/test export-ignore\n/CONTRIBUTING.md export-ignore\n/.php_cs export-ignore\n/phpunit.xml.dist export-ignore\n/.travis.yml export-ignore\n/.styleci.yml export-ignore\n/.gitmodules export-ignore\n/.gitignore export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": ".php_cs.cache\ncomposer.lock\nmustache.php\nvendor\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.087890625,
          "content": "[submodule \"vendor/spec\"]\n\tpath = vendor/spec\n\turl = https://github.com/mustache/spec.git\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 0.5556640625,
          "content": "<?php\n\nuse Symfony\\CS\\Config\\Config;\nuse Symfony\\CS\\FixerInterface;\n\n$config = Config::create()\n    // use symfony level and extra fixers:\n    ->level(Symfony\\CS\\FixerInterface::SYMFONY_LEVEL)\n    ->fixers(array(\n        '-concat_without_spaces',\n        '-pre_increment',\n        '-unalign_double_arrow',\n        '-unalign_equals',\n        'align_double_arrow',\n        'concat_with_spaces',\n        'ordered_use',\n        'strict',\n    ))\n    ->setUsingLinter(false);\n\n$finder = $config->getFinder()\n    ->in('bin')\n    ->in('src')\n    ->in('test');\n\nreturn $config;\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.193359375,
          "content": "preset: symfony\n\nenabled:\n  - align_double_arrow\n  - concat_with_spaces\n  - ordered_use\n  - strict\n\ndisabled:\n  - concat_without_spaces\n  - pre_increment\n  - unalign_double_arrow\n  - unalign_equals\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5263671875,
          "content": "language: php\n\nsudo: false\n\nmatrix:\n  include:\n    - php: 5.2\n      dist: precise\n    - php: 5.3\n      dist: precise\n    - php: 5.4\n      dist: trusty\n    - php: 5.5\n      dist: trusty\n    - php: 5.6\n    - php: 7.0\n    - php: 7.1\n    - php: 7.2\n    - php: 7.3\n    - php: 7.4snapshot\n    - php: hhvm\n      dist: trusty\n  allow_failures:\n    - php: hhvm\n    - php: 7.4snapshot\n\nscript:\n  - '[[ \"$TRAVIS_PHP_VERSION\" = 5.2* ]] && phpunit || vendor/bin/phpunit --verbose'\n\ninstall:\n  - '[[ \"$TRAVIS_PHP_VERSION\" = 5.2* ]] || composer install'\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3955078125,
          "content": "# Contributions welcome!\n\n 1. [Fork the repo on GitHub](https://github.com/bobthecow/mustache.php).\n 2. Update submodules: `git submodule update --init`\n 3. Run the test suite. `composer install` then run `vendor/bin/phpunit` from the project directory.\n 4. Please add tests tests for your change!\n 5. Make the tests pass.\n 6. Push your fork to GitHub and submit a pull request against the `main` branch.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2010-2015 Justin Hileman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.857421875,
          "content": "Mustache.php\n============\n\nA [Mustache](https://mustache.github.io/) implementation in PHP.\n\n[![Package version](http://img.shields.io/packagist/v/mustache/mustache.svg?style=flat-square)](https://packagist.org/packages/mustache/mustache)\n[![Monthly downloads](http://img.shields.io/packagist/dm/mustache/mustache.svg?style=flat-square)](https://packagist.org/packages/mustache/mustache)\n\nInstallation\n------------\n```\ncomposer require mustache/mustache\n```\n\nUsage\n-----\n\nA quick example:\n\n```php\n<?php\n$m = new Mustache_Engine(array('entity_flags' => ENT_QUOTES));\necho $m->render('Hello {{planet}}', array('planet' => 'World!')); // \"Hello World!\"\n```\n\n\nAnd a more in-depth example -- this is the canonical Mustache template:\n\n```html+jinja\nHello {{name}}\nYou have just won {{value}} dollars!\n{{#in_ca}}\nWell, {{taxed_value}} dollars, after taxes.\n{{/in_ca}}\n```\n\n\nCreate a view \"context\" object -- which could also be an associative array, but those don't do functions quite as well:\n\n```php\n<?php\nclass Chris {\n    public $name  = \"Chris\";\n    public $value = 10000;\n\n    public function taxed_value() {\n        return $this->value - ($this->value * 0.4);\n    }\n\n    public $in_ca = true;\n}\n```\n\n\nAnd render it:\n\n```php\n<?php\n$m = new Mustache_Engine(array('entity_flags' => ENT_QUOTES));\n$chris = new Chris;\necho $m->render($template, $chris);\n```\n\n*Note:* we recommend using `ENT_QUOTES` as a default of [entity_flags](https://github.com/bobthecow/mustache.php/wiki#entity_flags) to decrease the chance of Cross-site scripting vulnerability.\n\nAnd That's Not All!\n-------------------\n\nRead [the Mustache.php documentation](https://github.com/bobthecow/mustache.php/wiki/Home) for more information.\n\n\nSee Also\n--------\n\n * [mustache(5)](http://mustache.github.io/mustache.5.html) man page.\n * [Readme for the Ruby Mustache implementation](http://github.com/defunkt/mustache/blob/master/README.md).\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.6416015625,
          "content": "{\n    \"name\": \"mustache/mustache\",\n    \"description\": \"A Mustache implementation in PHP.\",\n    \"keywords\": [\"templating\", \"mustache\"],\n    \"homepage\": \"https://github.com/bobthecow/mustache.php\",\n    \"type\": \"library\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Justin Hileman\",\n            \"email\": \"justin@justinhileman.info\",\n            \"homepage\": \"http://justinhileman.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.2.4\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"~3.7|~4.0|~5.0\",\n        \"friendsofphp/php-cs-fixer\": \"~1.11\"\n    },\n    \"autoload\": {\n        \"psr-0\": { \"Mustache\": \"src/\" }\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.537109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\" colors=\"true\" bootstrap=\"./test/bootstrap.php\">\n\t<testsuite name=\"Mustache\">\n\t\t<directory suffix=\"Test.php\">./test</directory>\n\t\t<exclude>./test/Mustache/Test/FiveThree</exclude>\n\t</testsuite>\n\n\t<testsuite name=\"Mustache FiveThree\">\n\t\t<directory suffix=\"Test.php\" phpVersion=\"5.3.0\" phpVersionOperator=\">=\">./test/Mustache/Test/FiveThree</directory>\n\t</testsuite>\n\n\t<filter>\n\t\t<whitelist>\n\t\t\t<directory suffix=\".php\">./src/Mustache</directory>\n\t\t</whitelist>\n\t</filter>\n</phpunit>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}