{
  "metadata": {
    "timestamp": 1736711802916,
    "page": 81,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "geocoder-php/Geocoder",
      "stars": 3949,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05859375,
          "content": ".gitattributes export-ignore\nphpunit.xml.dist export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0947265625,
          "content": "vendor/\ncomposer.lock\ncomposer.phar\nphpunit.xml\n.phpunit.result.cache\n.php-cs-fixer.cache\n.puli/\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 0.16796875,
          "content": "<?php\n\n$finder = (new PhpCsFixer\\Finder())\n    ->in('src')\n;\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@Symfony' => true,\n    ])\n    ->setFinder($finder);"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.1181640625,
          "content": "preset: symfony\n\nfinder:\n    path:\n        - \"src\"\n        - \"tests\"\n\ndisabled:\n    - no_superfluous_phpdoc_tags_symfony\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.32421875,
          "content": "# CHANGELOG\n\n## 5.0.0 (2025-01-01)\n\n* Removed: Support for PHP < 8.2\n* Added: Support for PHP 8.2, 8.3, 8.4\n* Added: Method `AbstractHttpProvider::createRequest()`\n* Added: PHPStan Level 6\n* Changed: Method `AbstractHttpProvider::getMessageFactory()` is now deprecated\n* Changed: Run \"Subtree Split\" using GitHub Actions\n\n## 4.3.0 (2022-07-30)\n\n* Removed: Support for PHP 7.3\n* Added: Support for PHP 8.1\n* Added: GitHub Actions workflows\n* Changed: Migrate from PHP-HTTP to PSR-18 client\n\n## 4.2.0 (2020-12-22)\n\n* Removed: Support for PHP 7.2\n* Added: Support for PHP 8.0\n* Changed: Upgrade to PHPUnit 9\n\n## 4.1.0 (2020-07-04)\n\n* Removed: support for PHP < 7.2\n* Added: `Coordinates::toArray`\n* Changed: Update namespaces\n* Changed: Make sure we never use a country with name AND code as null\n\n## 4.0.0 (2017-08-01)\n\n* Removed: Support for PHP < 7\n* Introduced `GeocodeQuery` and `ReverseQuery`.\n* `Provider` and `Geocoder` interfaces has been updated to use query objects\n* All providers are stateless and immutable.\n* Moved **all** providers to new namespaces. Previous `Geocoder\\Provider\\BingMaps` is now located at `Geocoder\\Provider\\BingMaps\\BingMaps`\n* Added: Interface for `Geocoder\\Model\\AddressCollection` called `Geocoder\\Collection`. Public APIs are updated to type hint for `Geocoder\\GeocoderResult`.\n* Added: Interface for `Geocoder\\Model\\Address` called `Geocoder\\Location`. Public APIs are updated to type hint for `Geocoder\\Location`.\n* Added: GeoArray dumper\n* Added: `Collection::isEmpty`\n* Changed: `Location::getCoordinates` will return null or a `Coordinates` object with coordinates data. It will never return `Coordinates` without data.\n* Changed: `Location::getBounds` will return null or a `Bounds` object with coordinates data. It will never return `Bounds` without data.\n* Changed: Support for unsecure transfer protocol was removed. The providers only support HTTPS.\n* Changed: Using PSR-4 instead of PSR-0 for autoloading.  \n* Fixed: ArcGISOnline's street address should not contain city and country.\n* Removed: `AdminLevel::toString` in favor for `AdminLevel::__toString`.\n* Removed: `Country::toString` in favor for `Country::__toString`.\n* Removed: `Address::getCountryCode` in favor for `Address::getCountry()->getCode()`.\n* Removed: `Address::getLongitude` in favor for `Address::getCoordinates()->getLongitude()`.\n* Removed: `Address::getLatitude` in favor for `Address::getCoordinates()->getLatitude()`.\n* Removed: `Bounds::isDefined` as it is always defined.\n* Removed: The following exception was removed: `ZeroResults`, `ChainZeroResults`, `HttpError`, `UnexpectedValue`\n\n## 3.3.0 (2015-12-06)\n\n* Added: timezone field for `FreeGeoIp` provider\n* Added: guess method for street and suburb\n* Added: use city, town village or hamlet as locality\n* Added: return ISO 3166-2 region codes for the US and the rest of the world\n* Fixed: `AdminLevelCollection::checkLevel()` (#468)\n\n## 3.2.0 (2015-10-09)\n\n* Added: add __toString() methods in AdminLevel and Country\n* Added: __toString to StreamInterface mock\n* Fixed: postal code for GeoIP2 provider\n* Fixed: Make sure we check for an error in the response of the Yandex provider\n* Fixed: emergency message \"You need to specify the country and region codes.\"\n\n## 3.1.0 (2015-08-13)\n\n* Added: show more API error messages in `GoogleMaps`\n* Fixed: require `http-adapter` `~0.8`\n* Fixed: use `https` transport in Yandex provider (#431)\n* Updated: documentation\n\n## 3.0.0 (2015-04-20)\n\n* Added: Introduce a `CollectionIsEmpty` exception, thrown when `AddressCollection` is empty. (Fix #412)\n* Added: countrycode to Bing api calls\n* Added: allow locale change with chain\n\n## 3.0.0-alpha3 (2015-02-13)\n\n* Added: `LocaleTrait` to reduce code duplication\n* Added: introduce admin levels concept (see PR #398)\n* Fixed: GeoIP2 results use underscore case\n* Merged: branch '2.x' (see releases 2.8.1 and 2.8.2 for more details)\n\n## 3.0.0-alpha2 (2014-12-22)\n\n* Added: Introduce `AddressCollection` class\n* Added: new documentation\n\n## 3.0.0-alpha1 (2014-12-18)\n\n* Added: `using()` method now throws an exception if provider not found\n* Added: new Result classes (`Address`, `Bounds`, `Region`, `Country`, `County`, `Coordinates`)\n* Added: new named exceptions\n* Added: better exception messages\n* Added: new HTTP layer thanks to `egeloen/http-adapter` library\n* Added: `TimedGeocoder` implementation (works with StopWatch Symfony component)\n* Added: `AbstractHttpProvider` (extending `AbstractProvider`)\n* Added: provide a way to use IpInfoDB country precision\n* Added: cached responses for BingMaps provider (tests)\n* Added: cached reponse for GoogleMaps provider (tests)\n* Added: `ProviderAggregator` (replacing the former `Geocoder` class)\n* Added: ability to change providers locale at runtime\n* Documentation: almost entirely rewritten\n* Documentation: a note on versioning has been added\n* Documentation: a Contributor Code of Conduct has been added for the entire\n  Geocoder project\n* Fixed: phpdoc, wording\n* Fixed: providers are now highly configurable, even at runtime\n* Fixed: `FreeGeoIp` property because of an API change\n* Moved: IGN OpenLS provider to geocoder-extra (#339)\n* Moved: OIORest provider to geocoder-extra (#336)\n* Moved: GeoCoder.us provider to geocoder-extra (#338)\n* Moved: GeoCoder.ca provider to geocoder-extra (#337)\n* Moved: DataScienceToolkit provider to geocoder-extra (#340)\n* Moved: Baidu provider to geocoder-extra (#341)\n* Moved: IpGeoBase provider to geocoder-extra (#342)\n* Renamed: properties such as:\n  * city => locality\n  * cityDistrict => subLocality\n  * zipcode => postalCode\n* Refactored: dumpers (remove Interface suffix, define a new method signature)\n* Refactored: class names!\n* Refactored: all providers now implement the `Geocoder` interface\n* Refactored: exception messages are a bit more verbose\n* Removed: `Provider`, `Dumper`, `Interface`, and `Exception` suffixes\n* Removed: `autoload.php` file\n* Removed: `OpenStreetMapsProvider` class (#335)\n* Removed: HTTP adapters layer\n* Removed: the `Geocoder` class does not exist anymore and has been replaced by\n  the `ProviderAggregator` class\n\n## 2.x\n\n## 2.8.2 (2015-01-07)\n\n* Fixed: encoding issue for `maxmind` provider\n\n## 2.8.1 (2014-12-08)\n\n* Fixed: freegeoip `zip_code` property because of an API change\n\n## 2.8.0 (2014-10-03)\n\n* Added: Allow for greater flexibility in setting curl parameters by passing in\n  an array.\n* Removed: GeoIP2 Omni support\n* Removed: Cloudmade provider. They discontinued their service Apr/2014\n\n## 2.7.0 (2014-09-14)\n\n* Added: **new** provider: `OpenCageProvider`\n  [geocoder.opencagedata.com](http://geocoder.opencagedata.com/)\n* Fixed: `MapQuestProvider` when no relevant data are fetched\n* Fixed: Ensure mb `formatString` is congruent to standard `ucwords()`\n  functionality\n\n## 2.6.0 (2014-09-02)\n\n* Added: `region` and `regionCode` to GeoIP2Provider\n* Added: throw `InvalidCredentialsException` with GoogleMapsBusinessProvider\n* Added: support in MapQuestProvider for licensed endpoints (#318)\n* Added: it is now possible to set the user agent in `CurlHttpAdapter`\n* Fixed: google maps provider test\n* Fixed: GeoPlugin returns 206 for anonymous proxies\n* Removed: Google's sensor parameter\n* Updated: Travis-CI config, doc, tests\n\n## 2.5.0 (2014-05-16)\n\n* Added: ability to set timeouts for `CurlHttpAdapter`\n* Added: support for a Google Maps API key\n* Added: premium support to `GeocoderCaProvider` + tests\n* Added: test against `hhvm-nightly` on Travis-CI\n* Updated: documentation\n\n## 2.4.2 (2014-01-05)\n\n* Fixed: GeoIPs provider expects a single location response due to recent API\n  changes (#283).\n\n## 2.4.1 (2013-12-16)\n\n* Fixed: MapQuestProvider now works with API keys\n* Fixed: ProviderInterface (bad argument name)\n\n## 2.4.0 (2013-12-12)\n\n* Added: MapQuest ApiKey required for open services\n* Removed: unused class constants\n* Removed: deprecated class that is not used anymore since 2.0.0\n\n## 2.3.2 (2013-11-06)\n\n* Fixed: GeoIPs provider stopped working due to api changes (#267)\n* Fixed: installation guidelines\n\n## 2.3.1 (2013-10-22)\n\n* Fixed: GeoipProvider and MaxMindBinaryProvider now return a result set\n* Added: fixEncoding() method in AbstractProvider (merged from 1.7)\n\n## 2.3.0 (2013-10-17)\n\n* Added: Reintroduce OpenStreetMapsProvider for BC purpose\n* Fixed: Rename OpenStreetMaps => OpenStreetMap\n         The `OpenStreetMapsProvider` is now **deprecated**, use the\n         `OpenStreetMapProvider` instead.\n* Fixed: replace extension_exists() by function_exists() for mbstring\n\n## 2.2.0 (2013-09-16)\n\n* Added: ChainNoResultException for aggregating ChainProvider exceptions.\n* Added: CachedResponseAdapter for the test suite + cached responses\n* Updated: composer installation to the current recommendation from\n  <http://getcomposer.org/download/>\n\n## 2.1.0 (2013-08-27)\n\n* Added: Generic NominatimProvider\n* Fixed: GoogleBusinessProvider \"client_id\" parameter back to just \"client\".\n  This reverts commit 532345bbd41221d2460591844dfffb04194c66\n\n## 2.0.1 (2013-08-08)\n\n* Fixed: tests due to data changes\n* Fixed: use OpenStreetMap pedestrian tag for street name if road tag is not available\n* Updated: replace zendframework with zend-http\n\n## 2.0.0 (2013-07-08)\n\n* Fixed: tests due to data changes\n* Added: more doc. Fix #242\n* Added: setMaxResults method\n* Added support for cities in Yandex Provider\n* Fixed: GoogleMapsBusinessProvider provider (`client_id`)\n* Refactored: providers to leverage ResultFactories - fix #232 - POTENTIAL BC BREAK\n\n## 1.7.0 (2013-05-28)\n\n* Updated: Geocoder now uses the official geoip library\n* Added: LocaleAwareProviderInterface\n\n## 1.6.0 (2013-05-22)\n\n* Added: API key to MapQuestProvider\n* Fixed: DataScienceToolkitProvider test\n\n## 1.5.1 (2013-05-15)\n\n* Fixed: BC break by reintroducing the ResultFactory class\n* Added: MaxMind's binary provider\n\n## 1.5.0 (2013-05-03)\n\n* Added: DefaultResultFactory and MultipleResultFactory classes - Fix #223\n* Fixed: provider's tests\n* Fixed: encoding for geoip provider\n* fixed: inspection values\n* Fixed: tests and enhanced test cover\n* Fixed: branch-alias (composer)\n\n## 1.4.0 (2013-03-16)\n\n* Updated: doc with an exemple of the ChainProvider\n* Updated: doc about result object\n* Refactored: adapters and its tests\n* Updated: readme for new ArcGIS Online Provider\n* Added: ArcGIS Online provider\n* Fixed: OpenStreetMaps test\n* Updated: Set a custom result factory via a setter\n* Fixed: compatibility php 5.3\n* Fixed: Yandex test\n* Added: TomTom Provider\n\n## 1.3.0 (2013-03-04)\n\n* Fixed: ipgeobase url\n* Fixed: MapQuest test\n* Added: BaiduProvider + test\n* Fixed: OpenStreetMaps test\n* Added: IpGeoBase-ru as a provider + test\n* Fixed: travis-ci config\n* Added: adress support for datascience\n* Fixed: FreeGeoIp provider's tests\n* Updated: documentation about Geocoder::using()\n\n## 1.2.1 (2013-02-03)\n\n* Updated: documentation - Google Maps Business and MaxMind providers\n* Added: SSL support to Google Maps Business provider + test\n* Added: SSL support to MaxMind provider\n* Added: locale parameter test to Yahoo provider\n* Updated: BingMaps provider has a locale parameter\n* Added: Omni service + tests - thanks @lox\n* Added: MaxMind provider support IPv6 + tests\n* Added: City District in formatter\n* Fixed: MaxMind provider - fix #183\n* Updated: precise which api key works with MaxMind provider\n* Fixed: test to make it compatible against different databse\n* Added missing test\n* Fixed REVERSE_ENDPOINT_URL\n* Added tests for Geonames Provider\n* Added Geonames Provider\n* Added: AbstractResult class\n* Fixed: Yandex provider's tests\n* Add a ResultFactory to easily create ResultInterface instances\n\n## 1.2.0 (2013-01-15)\n\n* Fix SocketHttpAdapter which did not take care of query string\n* Fix tests/CS\n* Fix response interpretation in GeopIPs Provider considering error and ok response\n* Update tests\n* Change wording from 'splitted' to 'split'\n* Fix response processing in GeoIPsProvider\n* Added exception for status code = OVER_QUERY_LIMIT\n\n## 1.1.6 (2013-01-08)\n\n* Restore OIORestProvider tests - fix #169\n* Skip OIORest tests\n\n## 1.1.5 (2012-12-29)\n\n* Add PHP 5.5 to travis-ci config\n* Correct property reference.\n* Option to use SSL when communicating with end point\n* Fix some tests due to data changed\n* Complete exemple's outputs in README\n* Throws InvalidCredentialsException on invalid api key + test\n* Added UnsupportedException to ProviderInterface\n\n## 1.1.4 (2012-12-04)\n\n* Fixed indentation in OIORestProvider\n* Added countyCode to the Geocoded result object for county short name\n* Added reverse geocoding to OIORestProvider + test\n* fix tests\n* fix code inspection\n* make adapter and locale mutable within provider\n\n## 1.1.3 (2012-11-17)\n\n* Replace urlencode() by rawurlencode() in GoogleMapsProvider\n* Removed redundant if statement\n* Removed not reliable place_rank and limit result to one + test - fix #129\n* Use sf2 coding standard\n* Fixed some CS in providers\n* Fix ArrayAccess methods in Geocoded class. Fix #150\n* add failing test for mixed case array access\n* Fix timezone in IpInfoDbProviderTest\n* Adding MaxMindProvider + Tests\n* Refactored providers result with array_merge + tests - fix #145\n* Added: HttpException and ExtensionNotLoadedException\n* Fix CS - start to use sf2 coding standard + closes #147\n* Fixed: use identical comparison operator\n* Fixed CS, logic and tests in some providers\n* Use exception interface to respect convention\n* Issue #81: Added Google Maps for Business provider\n\n## 1.1.2 (2012-11-13)\n\n* Removed useless contructor\n* Use short class name instead of FQCN\n* Add GeoIPsProvider provider + Tests\n* Add GeoPluginProvider + Tests\n* Optimized and tested OSM reverse data error catching\n* Fixed: YandexProvider test\n* Check result element exists\n* Added: YandexProvider, test and updated README\n* Update README\n* Rename SocketAdapter to SocketHttpAdapter to respect conventions\n* Fixed: DataScienceToolkit provider and its test\n* Fix PR #118\n* fix cs adn ipv6\n* unit test datasciencetoolkitprovider\n* fixing broken tests case in a fr_FR localized environment : made tests now PHP's locale-aware\n* Fix CS, remove var_dump\n* fix typo\n* Updated: tests bootstrap - check cURL and dependencies\n* DataScienceToolkitProvider\n* Added: IGNOpenLSProvider + tests\n* Fixed: tests should only use cURL as HttpAdapter\n* Fixed: casts in GeocoderUsProvider\n\n## 1.1.1 (2012-10-23)\n\n* Add more tests thanks to Antoine Corcy (@toin0u)\n* Updated: README.md - need cURL to run unit tests\n* Fix README + CS\n* Updated: README\n* Added: GeocoderUsProvider\n* Added: GeocoderCaProvider\n* Fix Geoip provider\n* [Provider] fixed indentation.\n* Fixed: sprintf type specifier in ChainProvider\n* Fixed: tests\n* Updated: providers tests getName()\n\n## 1.1.0 (2012-10-16)\n\n* Remove useless use statements\n* fix tests due to a change in the exception message\n* Fix README\n* Fix tests\n* Fix README\n* Fix some tests\n* Fix YahooProvider\n* Fix OpenStreetMapsProvider\n* Fix IpInfoDbProvider\n* Fix HostIpProvider\n* Fix GoogleMapsProvider\n* Fix GeoipProvider\n* Fix FreeGeoIpProvider\n* Fix BingMapsProvider\n* Add more named exceptions\n* Fix CS\n* Minor fixes\n* Refactor the error handling - BC BREAK\n* Bump version to 1.1.0-dev\n* Updated: IPv4 and IPv6 informations to README.md\n* Fixed: BingMapsProvider and CloudMadeProvider tests which need API keys\n* Fixed: Guzzle v3.0.0 moved plugins from Guzzle\\Http\\Plugin to Guzzle\\Plugin\n* Added: IPv6 control to providers\n* Added: Add filter_var checks on Address based only providers - BC BREAK\n\n## 1.0.x\n\nThe most stable version of the Geocoder `1.0.x` versions is **1.0.14**\n(2012-10-15). If you don't use it yet, it's recommended to upgrade. There won't\nbe any support on this set of versions as it's considered stable.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.4140625,
          "content": "\nContributor Code of Conduct\n---------------------------\n\nAs contributors and maintainers of this project, we pledge to respect all people\nwho contribute through reporting issues, posting feature requests, updating\ndocumentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual\nlanguage or imagery, derogatory comments or personal attacks, trolling, public\nor private harassment, insults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct. Project maintainers who do not follow the\nCode of Conduct may be removed from the project team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by opening an issue or contacting one or more of the project\nmaintainers.\n\nThis Code of Conduct is adapted from the [Contributor\nCovenant](http:contributor-covenant.org), version 1.0.0, available at\n[http://contributor-covenant.org/version/1/0/0/](http://contributor-covenant.org/version/1/0/0/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0556640625,
          "content": "Contributing\n============\n\nFirst of all, **thank you** for contributing, **you are awesome**!\n\nHere are a few rules to follow in order to ease code reviews, and discussions before\nmaintainers accept and merge your work.\n\nYou MUST follow the [PSR-1](http://www.php-fig.org/psr/psr-1/) and\n[PSR-2](http://www.php-fig.org/psr/psr-2/). If you don't know about any of them, you\nshould really read the recommendations. Can't wait? Use the [PHP-CS-Fixer\ntool](http://cs.sensiolabs.org/).\n\nYou MUST run the test suite.\n\nYou MUST write (or update) unit tests.\n\nYou SHOULD write documentation.\n\nPlease, write [commit messages that make\nsense](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html),\nand [rebase your branch](http://git-scm.com/book/en/Git-Branching-Rebasing)\nbefore submitting your Pull Request.\n\nOne may ask you to [squash your\ncommits](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html)\ntoo. This is used to \"clean\" your Pull Request before merging it (we don't want\ncommits such as `fix tests`, `fix 2`, `fix 3`, etc.).\n\nThank you!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0703125,
          "content": "Copyright (c) Since 2011 — William Durand <william.durand1@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 36.5712890625,
          "content": "# Geocoder\n\n[![Geocoder](https://github.com/geocoder-php/Geocoder/actions/workflows/php.yml/badge.svg)](https://github.com/geocoder-php/Geocoder/actions/workflows/php.yml)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n\n> **Important:** You are browsing the documentation of Geocoder **4.x**.\n>\n> Documentation for version **3.x** is available here: [Geocoder 3.x\n> documentation](https://github.com/geocoder-php/Geocoder/blob/3.x/README.md).\n>\n> Documentation for version **2.x** is available here: [Geocoder 2.x\n> documentation](https://github.com/geocoder-php/Geocoder/blob/2.x/README.md).\n\n---\n\n**Geocoder** is a PHP library which helps you build geo-aware applications by\nproviding a powerful abstraction layer for geocoding manipulations.\n\n* [Installation](#installation)\n* [Cookbook](#cookbook)\n* [Usage](#usage)\n* [Providers](#providers)\n* [Special Geocoders and Providers](#special-geocoders-and-providers)\n* [Dumpers](#dumpers)\n* [Formatters](#formatters)\n* [Versioning](#versioning)\n\n## Installation\n\nTo install a Geocoder there are two things you need to know:\n\n1) What [Geocoder provider](https://packagist.org/providers/geocoder-php/provider-implementation) you want to use\n2) What [HTTP client/adapter](https://packagist.org/providers/psr/http-client-implementation) you want to use.\n\n### Geocoder providers\n\nSince 4.0 we do not include providers by default. You need to select a *geocoder provider*. You will see a list of\nproviders [at Packagist](https://packagist.org/providers/geocoder-php/provider-implementation)\n\n### HTTP Clients\n\nIn order to talk to geocoding APIs, you need HTTP adapters. While it was part of\nthe library in Geocoder before, Geocoder 4.x and upper now relies on [PSR-18](https://www.php-fig.org/psr/psr-18/)\nwhich defines how HTTP message should be sent and received. You can use any library to send HTTP messages\nthat implements [psr/http-client-implementation](https://packagist.org/providers/psr/http-client-implementation).\n\nRead more about PSR-18 in [this blog](https://www.php-fig.org/blog/2018/11/psr-18-the-php-standard-for-http-clients/).\n\n### Summary (Just give me the command)\n\nTo install Google Maps geocoder with Guzzle 7 you may run the following command:\n\n```cmd\ncomposer require geocoder-php/google-maps-provider guzzlehttp/guzzle\n```\n\nOr using the curl client (you'll need to provide a PSR7 implementation such as `nyholm/psr7` if not using Guzzle)\n\n```cmd\ncomposer require geocoder-php/google-maps-provider php-http/curl-client nyholm/psr7\n```\n\n### Framework integration\n\nIf you are using a framework then you may be interested in our excellent framework integrations.\n\nFramework      | Package   | Stats\n:------------- |:--------- |:-------\n[Laravel](https://github.com/geocoder-php/GeocoderLaravel) | `geocoder-php/GeocoderLaravel` | [![GitHub release](https://poser.pugx.org/toin0u/geocoder-laravel/v/stable)](https://packagist.org/packages/toin0u/geocoder-laravel) [![Packagist](https://poser.pugx.org/toin0u/geocoder-laravel/downloads)](https://packagist.org/packages/toin0u/geocoder-laravel)\n[Symfony](https://github.com/geocoder-php/BazingaGeocoderBundle) | `geocoder-php/BazingaGeocoderBundle` | [![Latest Stable Version](https://poser.pugx.org/willdurand/geocoder-bundle/v/stable)](https://packagist.org/packages/willdurand/geocoder-bundle) [![Total Downloads](https://poser.pugx.org/willdurand/geocoder-bundle/downloads)](https://packagist.org/packages/willdurand/geocoder-bundle)\n\n## Cookbook\n\nWe have a small cookbook where you can find examples on common use cases:\n\n* [Caching responses](/docs/cookbook/cache.md)\n* [Configuring the HTTP client](/docs/cookbook/http-client.md)\n* [Rate limiting API requests](/docs/cookbook/rate-limiting.md)\n\n## Usage\n\nIn the code snippet below we use GoogleMaps and Guzzle 7.\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\nuse Geocoder\\Query\\ReverseQuery;\n\n$httpClient = new \\GuzzleHttp\\Client();\n$provider = new \\Geocoder\\Provider\\GoogleMaps\\GoogleMaps($httpClient, null, 'your-api-key');\n$geocoder = new \\Geocoder\\StatefulGeocoder($provider, 'en');\n\n$result = $geocoder->geocodeQuery(GeocodeQuery::create('Buckingham Palace, London'));\n$result = $geocoder->reverseQuery(ReverseQuery::fromCoordinates(...));\n```\n\nThe `Provider` interface has three methods:\n\n* `geocodeQuery(GeocodeQuery $query):AddressCollection`\n* `reverseQuery(ReverseQuery $query):AddressCollection`\n* `getName():string`\n\nThe `Geocoder` interface extends the `Provider` interface and exposes two additional methods. They will\nmake migration from 3.x smoother.\n\n* `geocode($streetOrIpAddress)`\n* `reverse($latitude, $longitude)`\n\n## Providers\n\nProviders perform the geocoding black magic for you (talking to the APIs, fetching results, dealing with errors, etc.)\nand are highly configurable.\n\n### Special providers\n\nProvider       | Package | Features | Stats\n:------------- |:------- |:-------- |:-------\n[Cache](https://github.com/geocoder-php/cache-provider) | `geocoder-php/cache-provider` | Wraps a provider and cached the results | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/cache-provider/v/stable)](https://packagist.org/packages/geocoder-php/cache-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/cache-provider/downloads)](https://packagist.org/packages/geocoder-php/cache-provider)\n[Chain](https://github.com/geocoder-php/chain-provider) | `geocoder-php/chain-provider` | Iterates over multiple providers | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/chain-provider/v/stable)](https://packagist.org/packages/geocoder-php/chain-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/chain-provider/downloads)](https://packagist.org/packages/geocoder-php/chain-provider)\n\n### Address\n\n#### World\n\nProvider       | Package | Features | Stats\n:------------- |:------- |:-------- |:-------\n[Algolia Places](https://github.com/geocoder-php/algolia-places-provider) | `geocoder-php/algolia-places-provider` | address <br> [Website](https://community.algolia.com/places/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/algolia-places-provider/v/stable)](https://packagist.org/packages/geocoder-php/algolia-places-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/algolia-places-provider/downloads)](https://packagist.org/packages/geocoder-php/algolia-places-provider)\n[ArcGIS Online](https://github.com/geocoder-php/arcgis-online-provider) | `geocoder-php/arcgis-online-provider` | address, reverse <br> [Website](https://developers.arcgis.com/en/features/geocoding/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/arcgis-online-provider/v/stable)](https://packagist.org/packages/geocoder-php/arcgis-online-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/arcgis-online-provider/downloads)](https://packagist.org/packages/geocoder-php/arcgis-online-provider)\n[Azure Maps](https://github.com/geocoder-php/azure-maps-provider) | `geocoder-php/azure-maps-provider` | address, reverse <br> [Website](https://docs.microsoft.com/en-us/azure/azure-maps/tutorial-search-location) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/azure-maps-provider/v/stable)](https://packagist.org/packages/geocoder-php/azure-maps-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/azure-maps-provider/downloads)](https://packagist.org/packages/geocoder-php/azure-maps-provider)\n[Bing Maps](https://github.com/geocoder-php/bing-maps-provider) | `geocoder-php/bing-maps-provider` | address, reverse <br> [Website](http://msdn.microsoft.com/en-us/library/ff701713.aspx) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/bing-maps-provider/v/stable)](https://packagist.org/packages/geocoder-php/bing-maps-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/bing-maps-provider/downloads)](https://packagist.org/packages/geocoder-php/bing-maps-provider)\n[Geocode Earth](https://github.com/geocoder-php/geocode-earth-provider) | `geocoder-php/geocode-earth-provider` | address, reverse <br> [Website](https://geocode.earth/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/geocode-earth-provider/v/stable)](https://packagist.org/packages/geocoder-php/geocode-earth-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/geocode-earth-provider/downloads)](https://packagist.org/packages/geocoder-php/geocode-earth-provider)\n[Geonames](https://github.com/geocoder-php/geonames-provider) | `geocoder-php/geonames-provider` | address, reverse <br> [Website](http://www.geonames.org/commercial-webservices.html) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/geonames-provider/v/stable)](https://packagist.org/packages/geocoder-php/geonames-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/geonames-provider/downloads)](https://packagist.org/packages/geocoder-php/geonames-provider)\n[Google Maps](https://github.com/geocoder-php/google-maps-provider) <br> Google Maps for business | `geocoder-php/google-maps-provider` | address, reverse <br> [Website](https://developers.google.com/maps/documentation/geocoding/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/google-maps-provider/v/stable)](https://packagist.org/packages/geocoder-php/google-maps-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/google-maps-provider/downloads)](https://packagist.org/packages/geocoder-php/google-maps-provider)\n[Google Maps Places](https://github.com/geocoder-php/google-maps-places-provider) | `geocoder-php/google-maps-places-provider` | address, reverse <br> [Website](https://developers.google.com/places/web-service/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/google-maps-places-provider/v/stable)](https://packagist.org/packages/geocoder-php/google-maps-places-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/google-maps-places-provider/downloads)](https://packagist.org/packages/geocoder-php/google-maps-places-provider)\n[GraphHopper](https://github.com/geocoder-php/graphhopper-provider) | `geocoder-php/graphhopper-provider` | address, reverse <br> [Website](https://docs.graphhopper.com/#tag/Geocoding-API) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/graphhopper-provider/v/stable)](https://packagist.org/packages/geocoder-php/graphhopper-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/graphhopper-provider/downloads)](https://packagist.org/packages/geocoder-php/graphhopper-provider)\n[Here](https://github.com/geocoder-php/here-provider) | `geocoder-php/here-provider` | address, reverse <br> [Website](https://developer.here.com/documentation/geocoder/topics/quick-start-geocode.html) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/here-provider/v/stable)](https://packagist.org/packages/geocoder-php/here-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/here-provider/downloads)](https://packagist.org/packages/geocoder-php/here-provider)\n[LocationIQ](https://github.com/geocoder-php/locationiq-provider) | `geocoder-php/locationiq-provider` | address, reverse <br> [Website](https://locationiq.org/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/locationiq-provider/v/stable)](https://packagist.org/packages/geocoder-php/locationiq-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/locationiq-provider/downloads)](https://packagist.org/packages/geocoder-php/locationiq-provider)\n[Mapbox](https://github.com/geocoder-php/mapbox-provider) | `geocoder-php/mapbox-provider` | address, reverse <br> [Website](https://www.mapbox.com/geocoding/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/mapbox-provider/v/stable)](https://packagist.org/packages/geocoder-php/mapbox-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/mapbox-provider/downloads)](https://packagist.org/packages/geocoder-php/mapbox-provider)\n[MapQuest](https://github.com/geocoder-php/mapquest-provider) | `geocoder-php/mapquest-provider` | address, reverse <br> [Website](http://developer.mapquest.com/web/products/dev-services/geocoding-ws) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/mapquest-provider/v/stable)](https://packagist.org/packages/geocoder-php/mapquest-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/mapquest-provider/downloads)](https://packagist.org/packages/geocoder-php/mapquest-provider)\n[MapTiler](https://github.com/geocoder-php/maptiler-provider) | `geocoder-php/maptiler-provider` | address, reverse <br> [Website](https://www.maptiler.com/cloud/geocoding/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/maptiler-provider/v/stable)](https://packagist.org/packages/geocoder-php/maptiler-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/maptiler-provider/downloads)](https://packagist.org/packages/geocoder-php/maptiler-provider)\n[Nominatim](https://github.com/geocoder-php/nominatim-provider) <br> (OpenStreetMap) | `geocoder-php/nominatim-provider` | address, reverse <br> [Website](http://wiki.openstreetmap.org/wiki/Nominatim) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/nominatim-provider/v/stable)](https://packagist.org/packages/geocoder-php/nominatim-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/nominatim-provider/downloads)](https://packagist.org/packages/geocoder-php/nominatim-provider)\n[OpenCage](https://github.com/geocoder-php/open-cage-provider) | `geocoder-php/open-cage-provider` | address, reverse <br> [Website](https://opencagedata.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/open-cage-provider/v/stable)](https://packagist.org/packages/geocoder-php/open-cage-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/open-cage-provider/downloads)](https://packagist.org/packages/geocoder-php/open-cage-provider)\n[OpenRouteService](https://github.com/geocoder-php/openrouteservice-provider) | `geocoder-php/openrouteservice-provider` | address, reverse <br> [Website](https://openrouteservice.org/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/openrouteservice-provider/v/stable)](https://packagist.org/packages/geocoder-php/openrouteservice-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/openrouteservice-provider/downloads)](https://packagist.org/packages/geocoder-php/openrouteservice-provider)\n[Pelias](https://github.com/geocoder-php/pelias-provider) | `geocoder-php/pelias-provider` | address, reverse <br> [Website](https://pelias.io/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/pelias-provider/v/stable)](https://packagist.org/packages/geocoder-php/pelias-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/pelias-provider/downloads)](https://packagist.org/packages/geocoder-php/pelias-provider)\n[Photon](https://github.com/geocoder-php/photon-provider) | `geocoder-php/photon-provider` | address, reverse <br> [Website](https://photon.komoot.de/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/photon-provider/v/stable)](https://packagist.org/packages/geocoder-php/photon-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/photon-provider/downloads)](https://packagist.org/packages/geocoder-php/photon-provider)\n[PickPoint](https://github.com/geocoder-php/pickpoint-provider) | `geocoder-php/pickpoint-provider` | address, reverse <br> [Website](https://pickpoint.io/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/pickpoint-provider/v/stable)](https://packagist.org/packages/geocoder-php/pickpoint-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/pickpoint-provider/downloads)](https://packagist.org/packages/geocoder-php/pickpoint-provider)\n[TomTom](https://github.com/geocoder-php/tomtom-provider) | `geocoder-php/tomtom-provider` | address, reverse <br> [Website](https://geocoder.tomtom.com/app/view/index) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/tomtom-provider/v/stable)](https://packagist.org/packages/geocoder-php/tomtom-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/tomtom-provider/downloads)](https://packagist.org/packages/geocoder-php/tomtom-provider)\n[Yandex](https://github.com/geocoder-php/yandex-provider) | `geocoder-php/yandex-provider` | address, reverse <br> [Website](http://api.yandex.com/maps/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/yandex-provider/v/stable)](https://packagist.org/packages/geocoder-php/yandex-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/yandex-provider/downloads)](https://packagist.org/packages/geocoder-php/yandex-provider)\n\n#### Local\n\nRegion  | Provider      | Package | Features | Stats\n:------ |:------------- |:------- |:-------- |:-------\n:belgium: | [bpost](https://github.com/geo6/geocoder-php-bpost-provider) (third-party package*) | `geo6/geocoder-php-bpost-provider` | address <br> [Website](https://www.bpost.be/site/en/webservice-address) | [![Latest Stable Version](https://poser.pugx.org/geo6/geocoder-php-bpost-provider/v/stable)](https://packagist.org/packages/geo6/geocoder-php-bpost-provider) <br>[![Total Downloads](https://poser.pugx.org/geo6/geocoder-php-bpost-provider/downloads)](https://packagist.org/packages/geo6/geocoder-php-bpost-provider)\n:belgium: | [GeoPunt](https://github.com/geo6/geocoder-php-geopunt-provider) (third-party package*) | `geo6/geocoder-php-geopunt-provider` | address, reverse <br> [Website](http://loc.geopunt.be/) | [![Latest Stable Version](https://poser.pugx.org/geo6/geocoder-php-geopunt-provider/v/stable)](https://packagist.org/packages/geo6/geocoder-php-geopunt-provider) <br>[![Total Downloads](https://poser.pugx.org/geo6/geocoder-php-geopunt-provider/downloads)](https://packagist.org/packages/geo6/geocoder-php-geopunt-provider)\n:belgium: | [Service Public de Wallonie](https://github.com/geo6/geocoder-php-spw-provider) (third-party package*) | `geo6/geocoder-php-spw-provider` | address, reverse <br> [Website](http://geoservices.wallonie.be/geolocalisation/doc/ws/index.xhtml) | [![Latest Stable Version](https://poser.pugx.org/geo6/geocoder-php-spw-provider/v/stable)](https://packagist.org/packages/geo6/geocoder-php-spw-provider) <br>[![Total Downloads](https://poser.pugx.org/geo6/geocoder-php-spw-provider/downloads)](https://packagist.org/packages/geo6/geocoder-php-spw-provider)\n:belgium: | [UrbIS](https://github.com/geo6/geocoder-php-urbis-provider) (third-party package*) | `geo6/geocoder-php-urbis-provider` | address, reverse <br> [Website](http://geoservices.irisnet.be/localization/) | [![Latest Stable Version](https://poser.pugx.org/geo6/geocoder-php-urbis-provider/v/stable)](https://packagist.org/packages/geo6/geocoder-php-urbis-provider) <br>[![Total Downloads](https://poser.pugx.org/geo6/geocoder-php-urbis-provider/downloads)](https://packagist.org/packages/geo6/geocoder-php-urbis-provider)\n:fr: | [Addok](https://github.com/geo6/geocoder-php-addok-provider) (third-party package*) | `geo6/geocoder-php-addok-provider` | address, reverse <br> [Website](https://adresse.data.gouv.fr/) | [![Latest Stable Version](https://poser.pugx.org/geo6/geocoder-php-addok-provider/v/stable)](https://packagist.org/packages/geo6/geocoder-php-addok-provider) <br>[![Total Downloads](https://poser.pugx.org/geo6/geocoder-php-addok-provider/downloads)](https://packagist.org/packages/geo6/geocoder-php-addok-provider)\n:luxembourg: | [Geoportail.lu](https://github.com/frantzmiccoli/geocoder-php-geoportail-lu) (third-party package*) | `frantzmicccoli/geocoder-php-geoportail-lu` | address, reverse <br> [Website](https://geoportail.lu/en/) | [![Latest Stable Version](https://poser.pugx.org/frantzmicccoli/geocoder-php-geoportail-lu/v/stable)](https://poser.pugx.org/frantzmicccoli/geocoder-php-geoportail-lu) <br>[![Total Downloads](https://poser.pugx.org/frantzmicccoli/geocoder-php-geoportail-lu/downloads)](https://packagist.org/packages/frantzmicccoli/geocoder-php-geoportail-lu)\n:netherlands: | [Nationaal Georegister](https://github.com/swisnl/geocoder-php-nationaal-georegister-provider) (third-party package*) | `swisnl/geocoder-php-nationaal-georegister-provider` | address, reverse <br> [Website](https://geodata.nationaalgeoregister.nl/) | [![Latest Stable Version](https://poser.pugx.org/swisnl/geocoder-php-nationaal-georegister-provider/v/stable)](https://packagist.org/packages/swisnl/geocoder-php-nationaal-georegister-provider) <br>[![Total Downloads](https://poser.pugx.org/swisnl/geocoder-php-nationaal-georegister-provider/downloads)](https://packagist.org/packages/swisnl/geocoder-php-nationaal-georegister-provider)\n:ru: | [Sputnik](https://github.com/demollc/sputnik-provider) (third-party package*) | `demollc/sputnik-provider` | address, reverse <br> [Website](http://api.sputnik.ru/maps/) | [![Latest Stable Version](https://poser.pugx.org/demollc/sputnik-provider/v/stable)](https://packagist.org/packages/demollc/sputnik-provider) <br>[![Total Downloads](https://poser.pugx.org/demollc/sputnik-provider/downloads)](https://packagist.org/packages/demollc/sputnik-provider)\n\n\\* *Third-party package: Those providers are not official, i.e. not from the Geocoder core team.*\n\n### IP\n\nProvider       | Package | Features | Stats\n:------------- |:------- |:-------- |:-------\n[FreeGeoIp](https://github.com/geocoder-php/free-geoip-provider) | `geocoder-php/free-geoip-provider` | IPv4, IPv6 <br> [Website](https://freegeoip.app/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/free-geoip-provider/v/stable)](https://packagist.org/packages/geocoder-php/free-geoip-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/free-geoip-provider/downloads)](https://packagist.org/packages/geocoder-php/free-geoip-provider)\n[GeoIP2](https://github.com/geocoder-php/geoip2-provider) | `geocoder-php/geoip2-provider` | IPv4 <br> [Website](https://www.maxmind.com/en/geoip2-databases) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/geoip2-provider/v/stable)](https://packagist.org/packages/geocoder-php/geoip2-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/geoip2-provider/downloads)](https://packagist.org/packages/geocoder-php/geoip2-provider)\n[GeoPlugin](https://github.com/geocoder-php/geo-plugin-provider) | `geocoder-php/geo-plugin-provider` | IPv4, IPv6 <br> [Website](http://www.geoplugin.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/geo-plugin-provider/v/stable)](https://packagist.org/packages/geocoder-php/geo-plugin-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/geo-plugin-provider/downloads)](https://packagist.org/packages/geocoder-php/geo-plugin-provider)\n[HostIp](https://github.com/geocoder-php/host-ip-provider) | `geocoder-php/host-ip-provider` | IPv4 <br> [Website](http://www.hostip.info/use.html) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/host-ip-provider/v/stable)](https://packagist.org/packages/geocoder-php/host-ip-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/host-ip-provider/downloads)](https://packagist.org/packages/geocoder-php/host-ip-provider)\n[IP2Location](https://github.com/geocoder-php/ip2location-provider) | `geocoder-php/ip2location-provider` | IPv4, IPv6 <br> [Website](https://www.ip2location.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/ip2location-provider/v/stable)](https://packagist.org/packages/geocoder-php/ip2location-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/ip2location-provider/downloads)](https://packagist.org/packages/geocoder-php/ip2location-provider)\n[IP2Location Binary](https://github.com/geocoder-php/ip2location-binary-provider) | `geocoder-php/ip2location-binary-provider` | IPv4, IPv6 <br> [Website](https://www.ip2location.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/ip2location-binary-provider/v/stable)](https://packagist.org/packages/geocoder-php/ip2location-binary-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/ip2location-binary-provider/downloads)](https://packagist.org/packages/geocoder-php/ip2location-binary-provider)\n[IpInfo](https://github.com/geocoder-php/ip-info-provider) | `geocoder-php/ip-info-provider` | IPv4, IPv6 <br> [Website](https://ipinfo.io/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/ip-info-provider/v/stable)](https://packagist.org/packages/geocoder-php/ip-info-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/ip-info-provider/downloads)](https://packagist.org/packages/geocoder-php/ip-info-provider)\n[IpInfoDB](https://github.com/geocoder-php/ip-info-db-provider) | `geocoder-php/ip-info-db-provider` | IPv4 <br> [Website](http://ipinfodb.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/ip-info-db-provider/v/stable)](https://packagist.org/packages/geocoder-php/ip-info-db-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/ip-info-db-provider/downloads)](https://packagist.org/packages/geocoder-php/ip-info-db-provider)\n[ipstack](https://github.com/geocoder-php/ipstack-provider) | `geocoder-php/ipstack-provider` | IPv4, IPv6 <br> [Website](https://ipstack.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/ipstack-provider/v/stable)](https://packagist.org/packages/geocoder-php/ipstack-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/ipstack-provider/downloads)](https://packagist.org/packages/geocoder-php/ipstack-provider)\n[MaxMind](https://github.com/geocoder-php/maxmind-provider) | `geocoder-php/maxmind-provider` | IPv4, IPv6 <br> [Website](https://www.maxmind.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/maxmind-provider/v/stable)](https://packagist.org/packages/geocoder-php/maxmind-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/maxmind-provider/downloads)](https://packagist.org/packages/geocoder-php/maxmind-provider)\n[MaxMind Binary](https://github.com/geocoder-php/maxmind-binary-provider) | `geocoder-php/maxmind-binary-provider` | IPv4, IPv6 <br> [Website](https://www.maxmind.com/) | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/maxmind-binary-provider/v/stable)](https://packagist.org/packages/geocoder-php/maxmind-binary-provider) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/maxmind-binary-provider/downloads)](https://packagist.org/packages/geocoder-php/maxmind-binary-provider)\n\n### Other packages\n\nThere are two \"*abstract*\" or \"*base*\" packages that most providers depend on.\n\nName       | Package | Features | Stats\n:--------- |:------- |:-------- |:-------\n[PHP common](https://github.com/geocoder-php/php-common) | `willdurand/geocoder` | Models, interfaces, exceptions etc | [![Latest Stable Version](https://poser.pugx.org/willdurand/geocoder/v/stable)](https://packagist.org/packages/willdurand/geocoder) <br>[![Total Downloads](https://poser.pugx.org/willdurand/geocoder/downloads)](https://packagist.org/packages/willdurand/geocoder)\n[HTTP common](https://github.com/geocoder-php/php-common-http) | `geocoder-php/common-http` | `AbstractHttpProvider`, HTTPlug | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/common-http/v/stable)](https://packagist.org/packages/geocoder-php/common-http) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/common-http/downloads)](https://packagist.org/packages/geocoder-php/common-http)\n[Plugin](https://github.com/geocoder-php/plugin) | `geocoder-php/plugin` | Plugin provider | [![Latest Stable Version](https://poser.pugx.org/geocoder-php/plugin/v/stable)](https://packagist.org/packages/geocoder-php/plugin) <br>[![Total Downloads](https://poser.pugx.org/geocoder-php/plugin/downloads)](https://packagist.org/packages/geocoder-php/plugin)\n\n## Special Geocoders and Providers\n\n### The Chain Provider\n\nThe `Chain` provider is a special provider that takes a list of providers and\niterates over this list to get information. Note that it **stops** its iteration\nwhen a provider returns a result. The result is returned by `GoogleMaps` because\n`FreeGeoIp` and `HostIp` cannot geocode street addresses. `BingMaps` is ignored.\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\n\n$geocoder = new \\Geocoder\\ProviderAggregator();\n$client  = new \\GuzzleHttp\\Client();\n\n$chain = new \\Geocoder\\Provider\\Chain\\Chain([\n    new \\Geocoder\\Provider\\FreeGeoIp\\FreeGeoIp($client),\n    new \\Geocoder\\Provider\\HostIp\\HostIp($client),\n    new \\Geocoder\\Provider\\GoogleMaps\\GoogleMaps($client, 'France'),\n    new \\Geocoder\\Provider\\BingMaps\\BingMaps($client, '<API_KEY>'),\n    // ...\n]);\n\n$geocoder->registerProvider($chain);\n\n$result = $geocoder->geocodeQuery(GeocodeQuery::create('10 rue Gambetta, Paris, France'));\nvar_export($result);\n```\n\nEverything is ok, enjoy!\n\n### The ProviderAggregator\n\nThe `ProviderAggregator` is used to register several providers so that you can\ndecide which provider to use later on.\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\nuse Geocoder\\Query\\ReverseQuery;\n\n$client  = new \\GuzzleHttp\\Client();\n$geocoder = new \\Geocoder\\ProviderAggregator();\n\n$geocoder->registerProviders([\n    new \\Geocoder\\Provider\\GoogleMaps\\GoogleMaps($client),\n    new \\Geocoder\\Provider\\GoogleMaps\\GoogleMapsBusiness($client, '<CLIENT_ID>'),\n    new \\Geocoder\\Provider\\Yandex\\Yandex($client),\n    new \\Geocoder\\Provider\\MaxMind\\MaxMind($client, '<MAXMIND_API_KEY>'),\n    new \\Geocoder\\Provider\\ArcGISOnline\\ArcGISOnline($client),\n]);\n\n$geocoder->registerProvider(new \\Geocoder\\Provider\\Nominatim\\Nominatim($adapter, 'https://your.nominatim.server'));\n\n$geocoder\n    ->using('google_maps')\n    ->geocodeQuery(GeocodeQuery::create( ... ));\n\n$geocoder\n    ->limit(10)\n    ->reverseQuery(ReverseQuery::fromCoordinates($lat, $lng));\n```\n\nThe `ProviderAggregator`'s API is fluent, meaning you can write:\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\n\n$locations = $geocoder\n    ->registerProvider(new \\My\\Provider\\Custom($adapter))\n    ->using('custom')\n    ->limit(10)\n    ->geocodeQuery(GeocodeQuery::create( ... ));\n```\n\nThe `using()` method allows you to choose the `provider` to use by its name.\nWhen you deal with multiple providers, you may want to choose one of them.  The\ndefault behavior is to use the first one but it can be annoying.\n\nThe `limit()` method allows you to configure the maximum number of results being\nreturned. Depending on the provider you may not get as many results as expected,\nit is a maximum limit, not the expected number of results.\n\n### TimedGeocoder\n\nThe `TimedGeocoder` class profiles each `geocode` and `reverse` call. So you can\neasily figure out how many time/memory was spent for each geocoder/reverse call.\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\n\n// configure your provider\n$provider = // ...\n\n$stopwatch = new \\Symfony\\Component\\Stopwatch\\Stopwatch();\n$geocoder = new \\Geocoder\\TimedGeocoder($provider, $stopwatch);\n\n$geocoder->geocodeQuery(GeocodeQuery::create('Paris, France'));\n\n// Now you can debug your application\n```\n\nWe use the [symfony/stopwatch](http://symfony.com/doc/current/components/stopwatch.html)\ncomponent under the hood. Which means, if you use the Symfony framework the\ngeocoder calls will appear in your timeline section in the Web Profiler.\n\n### StatefulGeocoder\n\nThe `StatefulGeocoder` class is great when you want your Geocoder to hold state. Say you want to configure locale,\nlimit or bounds in runtime. The `StatefulGeocoder` will append these values on each query.\n\n```php\nuse Geocoder\\Query\\GeocodeQuery;\n\n// configure your provider\n$provider = // ...\n$geocoder = new \\Geocoder\\StatefulGeocoder($provider);\n\n$geocoder->setLocale('en');\n$results = $geocoder->geocodeQuery(GeocodeQuery::create('London'));\necho $results->first()->getLocality(); // London\n\n$geocoder->setLocale('es');\n$results = $geocoder->geocodeQuery(GeocodeQuery::create('London'));\necho $results->first()->getLocality(); // Londres\n```\n\n## Dumpers\n\n**Geocoder** provides dumpers that aim to transform a `Location` object in\nstandard formats.\n\n### GPS eXchange Format (GPX)\n\nThe **GPS eXchange** format is designed to share geolocated data like point of\ninterests, tracks, ways, but also coordinates. **Geocoder** provides a dumper to\nconvert a `Location` object in an GPX compliant format.\n\nAssuming we got a `$location` object as seen previously:\n\n```php\n$dumper = new \\Geocoder\\Dumper\\Gpx();\n$strGpx = $dumper->dump($location);\n\necho $strGpx;\n```\n\nIt will display:\n\n```xml\n<gpx\n    version=\"1.0\"\n    creator=\"Geocoder\" version=\"1.0.1-dev\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"http://www.topografix.com/GPX/1/0\"\n    xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd\">\n    <bounds minlat=\"2.388911\" minlon=\"48.863151\" maxlat=\"2.388911\" maxlon=\"48.863151\"/>\n    <wpt lat=\"48.8631507\" lon=\"2.3889114\">\n        <name><![CDATA[Paris]]></name>\n        <type><![CDATA[Address]]></type>\n    </wpt>\n</gpx>\n```\n\n### GeoJSON\n\n[GeoJSON](http://geojson.org/) is a format for encoding a variety of geographic\ndata structures.\n\n### GeoArray\n\nSimple PHP array format for using with your own encoders.\n\n### Keyhole Markup Language (KML)\n\n[Keyhole Markup Language](http://en.wikipedia.org/wiki/Keyhole_Markup_Language)\nis an XML notation for expressing geographic annotation and visualization within\nInternet-based, two-dimensional maps and three-dimensional Earth browsers.\n\n### Well-Known Binary (WKB)\n\nThe Well-Known Binary (WKB) representation for geometric values is defined by\nthe OpenGIS specification.\n\n### Well-Known Text (WKT)\n\nWell-known text (WKT) is a text markup language for representing vector geometry\nobjects on a map, spatial reference systems of spatial objects and\ntransformations between spatial reference systems.\n\n## Formatters\n\nA common use case is to print geocoded data. Thanks to the `StringFormatter`\nclass, it's simple to format a `Location` object as a string:\n\n```php\n// $location is an instance of Location\n$formatter = new \\Geocoder\\Formatter\\StringFormatter();\n\n$formatter->format($location, '%S %n, %z %L');\n// 'Badenerstrasse 120, 8001 Zuerich'\n\n$formatter->format($location, '<p>%S %n, %z %L</p>');\n// '<p>Badenerstrasse 120, 8001 Zuerich</p>'\n```\n\nHere is the mapping:\n\n* Street Number: `%n`\n* Street Name: `%S`\n* City (Locality): `%L`\n* City District (Sub-Locality): `%D`\n* Zipcode (Postal Code): `%z`\n* Admin Level Name: `%A1`, `%A2`, `%A3`, `%A4`, `%A5`\n* Admin Level Code: `%a1`, `%a2`, `%a3`, `%a4`, `%a5`\n* Country: `%C`\n* Country Code: `%c`\n* Timezone: `%T`\n\n## Versioning\n\nGeocoder follows [Semantic Versioning](http://semver.org/).\n\n### End Of Life\n\n#### 1.x\n\nAs of December 2014, branch `1.7` is not officially supported anymore, meaning\nmajor version `1` reached end of life. Last version is:\n[1.7.1](https://github.com/geocoder-php/Geocoder/releases/tag/1.7.1).\n\n#### 2.x\n\nAs of December 2014, version [2.x](https://github.com/geocoder-php/Geocoder/tree/2.x)\nis in a **feature frozen** state. All new features should be contributed to version 3.0\nand upper. Last version is:\n[2.8.1](https://github.com/geocoder-php/Geocoder/releases/tag/2.8.1).\n\nMajor version `2` will reach **end of life on December 2015**.\n\n#### 3.x\n\nAs of January 2017, version [3.x](https://github.com/geocoder-php/Geocoder/tree/3.x)\nis in a **feature frozen** state. All new features should be contributed to version 4.0\nand upper. Last version is:\n[3.3.2](https://github.com/geocoder-php/php-common/releases/tag/v3.3.2).\n\nMajor version `3` will reach **end of life on October 2017**.\n\n### Stable Version\n\nVersion `4.x` is the current major stable version of Geocoder.\n\n### Next version\n\nThere is no new major version planned at this time.\n\n## Contributing\n\nSee [`CONTRIBUTING`](https://github.com/geocoder-php/Geocoder/blob/master/CONTRIBUTING.md#contributing) file.\n\n## Unit Tests\n\nIn order to run the test suite, install the development dependencies:\n\n```cmd\ncomposer install --dev\n```\n\nThen, run the following command:\n\n```cmd\ncomposer test\n```\n\nYou'll obtain some _skipped_ unit tests due to the need of API keys.\n\nRename the `phpunit.xml.dist` file to `phpunit.xml`, then uncomment the\nfollowing lines and add your own API keys:\n\n```xml\n<php>\n    <!-- <server name=\"IPINFODB_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"BINGMAPS_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"GEOIPS_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"MAXMIND_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"GEONAMES_USERNAME\" value=\"YOUR_USERNAME\" /> -->\n    <!-- <server name=\"TOMTOM_MAP_KEY\" value=\"YOUR_MAP_KEY\" /> -->\n    <!-- <server name=\"GOOGLE_GEOCODING_KEY\" value=\"YOUR_GEOCODING_KEY\" /> -->\n    <!-- <server name=\"OPENCAGE_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"PICKPOINT_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"LOCATIONIQ_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n    <!-- <server name=\"IPSTACK_API_KEY\" value=\"YOUR_API_KEY\" /> -->\n</php>\n```\n\nYou're done.\n\n## Credits\n\n* William Durand <will+git@drnd.me>\n* Tobias Nyholm <tobias.nyholm@gmail.com>\n* [All contributors](https://github.com/geocoder-php/Geocoder/contributors)\n\n## License\n\nGeocoder is released under the MIT License. See the bundled LICENSE file for details.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 2.732421875,
          "content": "{\n    \"name\": \"geocoder-php/geocoder\",\n    \"description\": \"A development package for all providers\",\n    \"license\": \"MIT\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"geocoder\",\n        \"geocoding\",\n        \"abstraction\",\n        \"geoip\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"William Durand\",\n            \"email\": \"william.durand1@gmail.com\"\n        }\n    ],\n    \"homepage\": \"http://geocoder-php.org\",\n    \"require\": {\n        \"php\": \">=8.2\",\n        \"igorw/get-in\": \"^1.0\",\n        \"php-http/discovery\": \"^1.17\",\n        \"php-http/promise\": \"^1.0\",\n        \"psr/http-client-implementation\": \"^1.0\",\n        \"psr/http-factory-implementation\": \"^1.0\",\n        \"psr/log\": \"^1.0 || ^2.0 || ^3.0\",\n        \"psr/simple-cache\": \"^1.0 || ^2.0 || ^3.0\"\n    },\n    \"require-dev\": {\n        \"cache/array-adapter\": \"^1.0\",\n        \"cache/simple-cache-bridge\": \"^1.0\",\n        \"cache/void-adapter\": \"^1.0\",\n        \"geocoder-php/provider-integration-tests\": \"^1.6.3\",\n        \"geoip2/geoip2\": \"^2.0|^3.0\",\n        \"nyholm/nsa\": \"^1.1\",\n        \"nyholm/psr7\": \"^1.0\",\n        \"php-cs-fixer/shim\": \"^3.22\",\n        \"php-http/message\": \"^1.0\",\n        \"php-http/message-factory\": \"^1.0.2\",\n        \"php-http/mock-client\": \"^1.0\",\n        \"phpstan/extension-installer\": \"^1.3\",\n        \"phpstan/phpstan\": \"^1.10\",\n        \"phpstan/phpstan-phpunit\": \"^1.3\",\n        \"phpunit/phpunit\": \"^9.6\",\n        \"symfony/http-client\": \"^5.4.45 || ^6.4 || ^7.0\",\n        \"symfony/stopwatch\": \"^5.4 || ^6.4 || ^7.0\"\n    },\n    \"suggest\": {\n        \"ext-geoip\": \"Enabling the geoip extension allows you to use the MaxMindProvider.\",\n        \"ext-json\": \"If you want to use HostIp\",\n        \"ext-simplexml\": \"If you want to use HostIpXml\",\n        \"geoip/geoip\": \"If you are going to use the MaxMindBinaryProvider (conflict with geoip extension).\",\n        \"geoip2/geoip2\": \"If you are going to use the GeoIP2DatabaseProvider.\",\n        \"symfony/stopwatch\": \"If you want to use the TimedGeocoder\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"Geocoder\\\\\": [\n                \"src/Common\",\n                \"src/\"\n            ]\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Geocoder\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"phpstan/extension-installer\": true,\n            \"php-http/discovery\": false\n        },\n        \"sort-packages\": true\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"4.0-dev\"\n        }\n    },\n    \"scripts\": {\n        \"analyse\": \"vendor/bin/phpstan analyse\",\n        \"cs\": \"vendor/bin/php-cs-fixer fix -v --dry-run\",\n        \"cs:fix\": \"vendor/bin/php-cs-fixer fix -v\",\n        \"test\": \"vendor/bin/phpunit\"\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 2.8798828125,
          "content": "parameters:\n    ignoreErrors:\n        -\n            message: \"#^Static method Geocoder\\\\\\\\ProviderAggregator\\\\:\\\\:getProvider\\\\(\\\\) is unused\\\\.$#\"\n            count: 1\n            path: src/Common/ProviderAggregator.php\n\n        -\n            message: \"#^Method Geocoder\\\\\\\\TimedGeocoder\\\\:\\\\:__call\\\\(\\\\) has parameter \\\\$args with no value type specified in iterable type array\\\\.$#\"\n            count: 1\n            path: src/Common/TimedGeocoder.php\n\n        -\n            message: \"#^Method Geocoder\\\\\\\\Provider\\\\\\\\Cache\\\\\\\\ProviderCache\\\\:\\\\:__call\\\\(\\\\) has parameter \\\\$args with no value type specified in iterable type array\\\\.$#\"\n            count: 1\n            path: src/Provider/Cache/ProviderCache.php\n\n        -\n            message: \"#^Parameter \\\\#1 \\\\$locations of class Geocoder\\\\\\\\Model\\\\\\\\AddressCollection constructor expects array\\\\<Geocoder\\\\\\\\Location\\\\>, array\\\\<string, string\\\\> given\\\\.$#\"\n            count: 2\n            path: src/Provider/Chain/Tests/ChainTest.php\n\n        -\n            message: \"#^Parameter \\\\#1 \\\\$geoIpProvider of class Geocoder\\\\\\\\Provider\\\\\\\\GeoIP2\\\\\\\\GeoIP2Adapter constructor expects GeoIp2\\\\\\\\ProviderInterface, PHPUnit\\\\\\\\Framework\\\\\\\\MockObject\\\\\\\\MockObject given\\\\.$#\"\n            count: 4\n            path: src/Provider/GeoIP2/Tests/GeoIP2AdapterTest.php\n\n        -\n            message: \"#^Access to constant ALL on an unknown class IP2Location\\\\\\\\Database\\\\.$#\"\n            count: 1\n            path: src/Provider/IP2LocationBinary/IP2LocationBinary.php\n\n        -\n            message: \"#^Call to method lookup\\\\(\\\\) on an unknown class IP2Location\\\\\\\\Database\\\\.$#\"\n            count: 1\n            path: src/Provider/IP2LocationBinary/IP2LocationBinary.php\n\n        -\n            message: \"#^Instantiated class IP2Location\\\\\\\\Database not found\\\\.$#\"\n            count: 1\n            path: src/Provider/IP2LocationBinary/IP2LocationBinary.php\n\n        -\n            message: \"#^Access to constant FILE_IO on an unknown class IP2Location\\\\\\\\Database\\\\.$#\"\n            count: 1\n            path: src/Provider/IP2LocationBinary/Tests/IntegrationTest.php\n\n        -\n            message: \"#^Access to property \\\\$[a-zA-Z_]+ on an unknown class GeoIpRecord\\\\.$#\"\n            count: 10\n            path: src/Provider/MaxMindBinary/MaxMindBinary.php\n\n        -\n            message: \"#^Class GeoIpRecord not found\\\\.$#\"\n            count: 1\n            path: src/Provider/MaxMindBinary/MaxMindBinary.php\n\n        -\n            message: \"#^Constant GEOIP_STANDARD not found\\\\.$#\"\n            count: 1\n            path: src/Provider/MaxMindBinary/MaxMindBinary.php\n\n        -\n            message: \"#^Function GeoIP_record_by_addr not found\\\\.$#\"\n            count: 1\n            path: src/Provider/MaxMindBinary/MaxMindBinary.php\n\n        -\n            message: \"#^Function geoip_(open|close) not found\\\\.$#\"\n            count: 2\n            path: src/Provider/MaxMindBinary/MaxMindBinary.php\n"
        },
        {
          "name": "phpstan.neon",
          "type": "blob",
          "size": 0.2119140625,
          "content": "includes:\n    - phpstan-baseline.neon\nparameters:\n    level: 6\n    paths:\n        - src\n    excludePaths:\n        - **/vendor/**\n    treatPhpDocTypesAsCertain: false\n    checkGenericClassInNonGenericObjectType: false\n"
        },
        {
          "name": "phpunit",
          "type": "blob",
          "size": 0.45703125,
          "content": "#!/usr/bin/env php\n<?php\n\n$found = false;\n$candidates = [\\getcwd(), __DIR__];\n// Find a good path\nforeach ($candidates as $path) {\n    if (file_exists($path.'/vendor/phpunit/phpunit/phpunit')) {\n        require $path.'/vendor/phpunit/phpunit/phpunit';\n        $found = true;\n        break;\n    }\n}\n\nif (!$found) {\n    echo \"Unable to find the `PHPUnit` script in `vendor/phpunit/phpunit/`.\\nPlease run `composer update` before running this command.\\n\";\n    exit(1);\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 2.87109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\"\n  backupGlobals=\"false\"\n  backupStaticAttributes=\"false\"\n  colors=\"true\"\n  convertErrorsToExceptions=\"true\"\n  convertNoticesToExceptions=\"true\"\n  convertWarningsToExceptions=\"true\"\n  processIsolation=\"false\"\n  stopOnFailure=\"false\"\n  bootstrap=\"vendor/autoload.php\"\n  >\n  <coverage>\n    <include>\n      <directory>./src/</directory>\n    </include>\n    <exclude>\n      <directory>./src/Common/Tests</directory>\n      <directory>./src/Http/Tests</directory>\n      <directory>./src/Provider/*/Tests</directory>\n      <directory>./src/Common/vendor</directory>\n      <directory>./src/Http/vendor</directory>\n      <directory>./src/Provider/*/vendor</directory>\n    </exclude>\n  </coverage>\n  <php>\n    <!--\n        Turn this parameter to 'false' or comment it to bypass\n        the caching layer. See the `CachedResponseAdapter` class.\n        -->\n    <server name=\"USE_CACHED_RESPONSES\" value=\"true\"/>\n    <!-- API Keys -->\n    <server name=\"ALGOLIA_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"ALGOLIA_APP_ID\" value=\"YOUR_APP_ID\"/>\n    <server name=\"BINGMAPS_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"GEOIPS_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"GEONAMES_USERNAME\" value=\"YOUR_USERNAME\"/>\n    <server name=\"GOOGLE_GEOCODING_KEY\" value=\"YOUR_GEOCODING_KEY\"/>\n    <server name=\"GRAPHHOPPER_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"HERE_APP_CODE\" value=\"YOUR_APP_CODE\"/>\n    <server name=\"HERE_APP_ID\" value=\"YOUR_APP_ID\"/>\n    <server name=\"HERE_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"IPINFODB_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"IP2LOCATION_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"IPSTACK_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"LOCATIONIQ_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"MAPBOX_GEOCODING_KEY\" value=\"YOUR_GEOCODING_KEY\"/>\n    <server name=\"MAPQUEST_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"MAPZEN_API_KEY\" value=\"YOUR_MAPZEN_API_KEY\"/>\n    <server name=\"OPENCAGE_API_KEY\" value=\"YOUR_GEOCODING_KEY\"/>\n    <server name=\"PICKPOINT_API_KEY\" value=\"YOUR_API_KEY\"/>\n    <server name=\"TOMTOM_MAP_KEY\" value=\"YOUR_MAP_KEY\"/>\n    <server name=\"GEOCODE_EARTH_API_KEY\" value=\"YOUR_GEOCODE_EARTH_API_KEY\"/>\n    <server name=\"OPEN_ROUTE_SERVICE_API_KEY\" value=\"YOUR_OPEN_ROUTE_SERVICE_API_KEY\"/>\n    <server name=\"AZURE_MAPS_SUBSCRIPTION_KEY\" value=\"YOUR_AZURE_MAPS_SUBSCRIPTION_KEY\"/>\n    <server name=\"MAPTILER_KEY\" value=\"YOUR_MAPTILER_KEY\"/>\n    <!--<server name=\"MAXMIND_API_KEY\" value=\"YOUR_API_KEY\" />-->\n  </php>\n  <testsuites>\n    <testsuite name=\"Geocoder Test Suite\">\n      <directory>./src/Common/Tests/</directory>\n      <directory>./src/Http/Tests/</directory>\n      <directory>./src/Provider/*/Tests/</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}