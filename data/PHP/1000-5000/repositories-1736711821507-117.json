{
  "metadata": {
    "timestamp": 1736711821507,
    "page": 117,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WordPress/Requests",
      "stars": 3573,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.333984375,
          "content": "codecov:\n  notify:\n    after_n_builds: 2\n\ncoverage:\n  round: nearest\n  # Status will be green when coverage is between 85 and 100%.\n  range: \"85...100\"\n  status:\n    project:\n      default:\n        threshold: 1%\n        paths:\n          - \"src\"\n    patch:\n      default:\n        threshold: 3%\n        paths:\n          - \"src\"\n\ncomment: false\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2197265625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = tab\n\n[{*.json,*.yml}]\nindent_style = space\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8984375,
          "content": "#\n# Exclude these files from release archives.\n# This will also make them unavailable when using Composer with `--prefer-dist`.\n# If you develop for this repo using Composer, use `--prefer-source`.\n# https://www.reddit.com/r/PHP/comments/2jzp6k/i_dont_need_your_tests_in_my_production/\n# https://blog.madewithlove.be/post/gitattributes/\n#\n.github/           export-ignore\nbuild/             export-ignore\ndocs/              export-ignore\nexamples/          export-ignore\ntests/             export-ignore\n.codecov.yml       export-ignore\n.editorconfig      export-ignore\n.gitattributes     export-ignore\n.gitignore         export-ignore\n.phpcs.xml.dist    export-ignore\nphpdoc.dist.xml    export-ignore\nphpunit.xml.dist   export-ignore\nphpunit10.xml.dist export-ignore\n\n#\n# Auto detect text files and perform LF normalization\n# https://pablorsk.medium.com/be-a-git-ninja-the-gitattributes-file-e58c07c9e915\n#\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6103515625,
          "content": "# Ignore coverage report\ntests/coverage/*\n\n# Ignore composer related files\n/composer.lock\n/vendor\nbuild/ghpages/composer.lock\nbuild/ghpages/vendor\n\n# Ignore local overrides of the PHPCS config file.\n.phpcs.xml\nphpcs.xml\n\n# Ignore PHPUnit results cache file and local config overrides.\n.phpunit.result.cache\nphpunit.xml\nphpunit10.xml\n\n# Ignore temporary files for ghpages builds.\nphpdoc.xml\nbuild/ghpages/.phpdoc\nbuild/ghpages/artifacts\n\n# Ignore temporary files for certificate downloads.\ncertificates/etag-*.txt\n\n# Ignore temporary files generated by the testing proxy.\ntests/utils/proxy/__pycache__\ntests/utils/proxy/*.pid\n"
        },
        {
          "name": ".phpcs.xml.dist",
          "type": "blob",
          "size": 9.76171875,
          "content": "<?xml version=\"1.0\"?>\n<ruleset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\tname=\"Requests\"\n\txsi:noNamespaceSchemaLocation=\"./vendor/squizlabs/php_codesniffer/phpcs.xsd\">\n\n\t<description>Requests rules for PHP_CodeSniffer</description>\n\n\t<!--\n\t#############################################################################\n\tCOMMAND LINE ARGUMENTS\n\thttps://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml\n\t#############################################################################\n\t-->\n\n\t<!-- Scan all files. -->\n\t<file>.</file>\n\n\t<!-- Third party files and build files don't need to comply with these coding standards. -->\n\t<exclude-pattern>*/src/Iri\\.php$</exclude-pattern>\n\t<exclude-pattern>*/tests/Iri/IriTest\\.php$</exclude-pattern>\n\t<exclude-pattern>*/vendor/*</exclude-pattern>\n\t<exclude-pattern>*/tests/coverage/</exclude-pattern>\n\n\t<!-- Only check PHP files. -->\n\t<arg name=\"extensions\" value=\"php\"/>\n\n\t<!-- Show progress, show the error codes for each message (source). -->\n\t<arg value=\"ps\"/>\n\n\t<!-- Strip the filepaths down to the relevant bit. -->\n\t<arg name=\"basepath\" value=\"./\"/>\n\n\t<!-- Check up to 8 files simultaneously. -->\n\t<arg name=\"parallel\" value=\"8\"/>\n\n\n\t<!--\n\t#############################################################################\n\tCHECK FOR PHP CROSS-VERSION COMPATIBILITY\n\t#############################################################################\n\t-->\n\n\t<config name=\"testVersion\" value=\"5.6-\"/>\n\t<rule ref=\"PHPCompatibility\"/>\n\n\n\t<!--\n\t#############################################################################\n\tCODING STYLE RULES\n\t#############################################################################\n\t-->\n\n\t<!-- Use the WordPress Coding Standards as a basis, but with tweaks. -->\n\t<rule ref=\"WordPress-Extra\">\n\t\t<!-- No need for this sniff as PHP linting is included in the CI builds against\n\t\t\t multiple PHP versions (which is the better solution). -->\n\t\t<exclude name=\"Generic.PHP.Syntax\"/>\n\n\t\t<!-- ==========================================================================\n\t\t\t No \"nacin-spacing\". I.e. don't enforce whitespace on the inside of braces and such.\n\t\t\t ========================================================================== -->\n\n\t\t<!-- Replace by the Squiz version of the sniff which is space-poor in contrast\n\t\t\t to the space-rich WPCS sniff. -->\n\t\t<exclude name=\"WordPress.WhiteSpace.ControlStructureSpacing\"/>\n\n\t\t<!-- Replaced by the Squiz version of the sniff which doesn't enforce whitespace\n\t\t\t around the boolean not `!` operator and enforcement via the Generic sniff. -->\n\t\t<exclude name=\"WordPress.WhiteSpace.OperatorSpacing\"/>\n\n\t\t<!-- Replaced by the Squiz version of the sniff which doesn't enforce whitespace around array index keys. -->\n\t\t<exclude name=\"WordPress.Arrays.ArrayKeySpacingRestrictions\"/>\n\n\t\t<!-- Let spacing before a cast be determined by the operator/parentheses whitespace rule\n\t\t\t of the preceding character. -->\n\t\t<exclude name=\"WordPress.WhiteSpace.CastStructureSpacing\"/>\n\n\t\t<!-- ==========================================================================\n\t\t\t Forbid \"assignments in conditions\" instead of enforcing Yoda conditions.\n\t\t\t ========================================================================== -->\n\t\t<exclude name=\"WordPress.PHP.YodaConditions\"/>\n\t\t<!-- A while loop is the only valid control structure where an assignment can be justified. -->\n\t\t<exclude name=\"Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition\"/>\n\n\t\t<!-- ==========================================================================\n\t\t\t Miscellaneous other exclusions.\n\t\t\t ========================================================================== -->\n\n\t\t<!-- This repo complies with PSR 4 for filename conventions. -->\n\t\t<exclude name=\"WordPress.Files.FileName\"/>\n\n\t\t<!-- WPCS demands long arrays. We'll be using short arrays from now on. -->\n\t\t<exclude name=\"Universal.Arrays.DisallowShortArraySyntax\"/>\n\n\t\t<!-- Ignore WP specific sniffs as Requests is also used outside of a WP context. -->\n\t\t<exclude name=\"WordPress.WP\"/>\n\t\t<exclude name=\"WordPress.DateTime\"/>\n\t\t<exclude name=\"WordPress.Security\"/>\n\t\t<exclude name=\"WordPress.PHP.DiscouragedPHPFunctions\"/>\n\t</rule>\n\n\n\t<!-- ==========================================================================\n\t\t Enforcement of space-poor code style.\n\t\t ========================================================================== -->\n\n\t<!-- Overrule the properties set in the WP Core ruleset for several sniffs. -->\n\t<rule ref=\"Squiz.Functions.FunctionDeclarationArgumentSpacing\">\n\t\t<properties>\n\t\t\t<property name=\"requiredSpacesAfterOpen\" value=\"0\"/>\n\t\t\t<property name=\"requiredSpacesBeforeClose\" value=\"0\"/>\n\t\t</properties>\n\t\t<!-- Undo the WPCS severity change (exclusion) for spacing before close -->\n\t\t<severity>5</severity>\n\t</rule>\n\n\t<rule ref=\"PEAR.Functions.FunctionCallSignature\">\n\t\t<properties>\n\t\t\t<property name=\"requiredSpacesAfterOpen\" value=\"0\"/>\n\t\t\t<property name=\"requiredSpacesBeforeClose\" value=\"0\"/>\n\t\t</properties>\n\t</rule>\n\n\t<rule ref=\"Generic.WhiteSpace.ArbitraryParenthesesSpacing\">\n\t\t<properties>\n\t\t\t<property name=\"spacing\" value=\"0\"/>\n\t\t</properties>\n\t</rule>\n\n\t<rule ref=\"NormalizedArrays.Arrays.ArrayBraceSpacing\">\n\t\t<properties>\n\t\t\t<property name=\"spacesSingleLine\" value=\"0\"/>\n\t\t</properties>\n\t</rule>\n\n\t<!-- Include replacement sniffs which enforce the opposite of WPCS for several excluded sniffs. -->\n\t<rule ref=\"Squiz.WhiteSpace.ControlStructureSpacing\">\n\t\t<exclude name=\"Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose\"/>\n\t</rule>\n\n\t<rule ref=\"Squiz.WhiteSpace.OperatorSpacing\">\n\t\t<properties>\n\t\t\t<property name=\"ignoreNewlines\" value=\"true\"/>\n\t\t</properties>\n\t</rule>\n\n\t<rule ref=\"Squiz.Arrays.ArrayBracketSpacing\"/>\n\n\t<!-- Enforce no space after the boolean not `!` operator. -->\n\t<rule ref=\"Generic.Formatting.SpaceAfterNot\">\n\t\t<properties>\n\t\t\t<property name=\"spacing\" value=\"0\"/>\n\t\t</properties>\n\t</rule>\n\n\t<!-- ==========================================================================\n\t\t Disallow Yoda conditions.\n\t\t ========================================================================== -->\n\t<rule ref=\"Generic.ControlStructures.DisallowYodaConditions\"/>\n\n\t<!-- ==========================================================================\n\t\t Enforce short arrays.\n\t\t ========================================================================== -->\n\t<rule ref=\"Generic.Arrays.DisallowLongArraySyntax\"/>\n\n\n\t<!--\n\t#############################################################################\n\tSNIFF SPECIFIC CONFIGURATION\n\t#############################################################################\n\t-->\n\n\t<!-- Allow error silencing only for a select group of functions. -->\n\t<rule ref=\"WordPress.PHP.NoSilencedErrors\">\n\t\t<properties>\n\t\t\t<property name=\"customAllowedFunctionsList\" type=\"array\">\n\t\t\t\t<element value=\"gzdecode\"/>\n\t\t\t\t<element value=\"gzinflate\"/>\n\t\t\t\t<element value=\"gzuncompress\"/>\n\t\t\t</property>\n\t\t</properties>\n\t</rule>\n\n\t<!-- Make sure everything in the global namespace is prefixed. -->\n\t<rule ref=\"WordPress.NamingConventions.PrefixAllGlobals\">\n\t\t<properties>\n\t\t\t<property name=\"prefixes\" type=\"array\">\n\t\t\t\t<element value=\"Requests\"/>\n\t\t\t\t<element value=\"WpOrg\\Requests\"/>\n\t\t\t</property>\n\t\t</properties>\n\t\t\n\t\t<exclude-pattern>*/examples/*\\.php$</exclude-pattern>\n\t\t<exclude-pattern>*/tests/bootstrap\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- Simplify alignment rules for multiline arrays. -->\n\t<rule ref=\"WordPress.Arrays.MultipleStatementAlignment\">\n\t\t<properties>\n\t\t\t<!-- No need to adjust alignment of large arrays when the item with the largest key is removed. -->\n\t\t\t<property name=\"exact\" value=\"false\"/>\n\t\t\t<!-- Don't align multi-line items if ALL items in the array are multi-line. -->\n\t\t\t<property name=\"alignMultilineItems\" value=\"!=100\"/>\n\t\t\t<!-- The array assignment operator should always be on the same line as the array key. -->\n\t\t\t<property name=\"ignoreNewlines\" value=\"false\"/>\n\t\t</properties>\n\t</rule>\n\n\t<!-- In contrast to WPCS (40%), we allow a slightly higher percentage. -->\n\t<rule ref=\"Squiz.PHP.CommentedOutCode\">\n\t\t<properties>\n\t\t\t<property name=\"maxPercentage\" value=\"50\"/>\n\t\t</properties>\n\t</rule>\n\n\n\t<!--\n\t#############################################################################\n\tSELECTIVE EXCLUSIONS\n\tExclude specific files for specific sniffs.\n\t#############################################################################\n\t-->\n\n\t<!-- ==========================================================================\n\t\t Example code\n\t\t ========================================================================== -->\n\n\t<!-- Using var_dump() in example code is fine. -->\n\t<rule ref=\"WordPress.PHP.DevelopmentFunctions.error_log_var_dump\">\n\t\t<exclude-pattern>/examples/[^/]+\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- ==========================================================================\n\t\t Test code\n\t\t ========================================================================== -->\n\n\t<!-- Overloaded methods to make the expected exceptions more specific. -->\n\t<rule ref=\"Generic.CodeAnalysis.UselessOverridingMethod\">\n\t\t<exclude-pattern>/tests/Transport/*\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- Allow single-line multi-item associative arrays in the unit tests. -->\n\t<rule ref=\"WordPress.Arrays.ArrayDeclarationSpacing.AssociativeArrayFound\">\n\t\t<exclude-pattern>/tests/*\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- Method declarations in test classes can use camelCase for compatibility with PHPUnit and consistency. -->\n\t<rule ref=\"WordPress.NamingConventions.ValidFunctionName\">\n\t\t<exclude-pattern>/tests/*\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- Using var_export() in test code is fine. -->\n\t<rule ref=\"WordPress.PHP.DevelopmentFunctions.error_log_var_export\">\n\t\t<exclude-pattern>/tests/*\\.php$</exclude-pattern>\n\t</rule>\n\n\t<!-- Using set_error_handler() in test code is fine. -->\n\t<rule ref=\"WordPress.PHP.DevelopmentFunctions.error_log_set_error_handler\">\n\t\t<exclude-pattern>/tests/*\\.php$</exclude-pattern>\n\t</rule>\n\n</ruleset>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 53.5361328125,
          "content": "Changelog\n=========\n\n2.0.14\n------\n\n### Overview of changes\n- Update bundled certificates as of 2024-11-26. [#910]\n- Confirmed compatibility with PHP 8.4.\n    No new changes were needed, so Request 2.0.11 and higher can be considered compatible with PHP 8.4.\n- Various other general housekeeping.\n\n[#910]: https://github.com/WordPress/Requests/pull/910\n\n2.0.13\n------\n\n### Overview of changes\n- Update bundled certificates as of 2024-09-24. [#900]\n- Various minor documentation improvements and other general housekeeping.\n\n[#900]: https://github.com/WordPress/Requests/pull/900\n\n2.0.12\n------\n\n### Overview of changes\n- Update bundled certificates as of 2024-07-02. [#877]\n\n[#877]: https://github.com/WordPress/Requests/pull/877\n\n2.0.11\n------\n\n### Overview of changes\n- Update bundled certificates as of 2024-03-11. [#864]\n- Fixed: PHP 8.4 deprecation of the two parameter signature of `stream_context_set_option()`. [#822] Props [@jrfnl][gh-jrfnl]\n- Fixed: PHP 8.4 deprecation of implicitly nullable parameter. [#865] Props [@Ayesh][gh-ayesh], [@jrfnl][gh-jrfnl]\n    Note: this fix constitutes an, albeit small, breaking change to the signature of the `Cookie::parse_from_headers()` method.\n    Classes which extend the `Cookie` class and overload the `parse_from_headers()` method should be updated for the new method signature.\n    Additionally, if code calling the `Cookie::parse_from_headers()` method would be wrapped in a `try - catch` to catch a potential PHP `TypeError` (PHP 7.0+) or `Exception` (PHP < 7.0) for when invalid data was passed as the `$origin` parameter, this code will need to be updated to now also catch a potential `WpOrg\\Requests\\Exception\\InvalidArgumentException`.\n    As due diligence could not find any classes which would be affected by this BC-break, we have deemed it acceptable to include this fix in the 2.0.11 release.\n\n[#822]: https://github.com/WordPress/Requests/pull/822\n[#864]: https://github.com/WordPress/Requests/pull/864\n[#865]: https://github.com/WordPress/Requests/pull/865\n\n2.0.10\n------\n\n### Overview of changes\n- Update bundled certificates as of 2023-12-04. [#850]\n\n[#850]: https://github.com/WordPress/Requests/pull/850\n\n2.0.9\n-----\n\n### Overview of changes\n- Hotfix: Rollback changes from PR [#657]. [#839] Props [@tomsommer][gh-tomsommer] & [@laszlof][gh-laszlof]\n\n[#839]: https://github.com/WordPress/Requests/pull/839\n\n2.0.8\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2023-08-22. [#823]\n- Fixed: only force close cURL connection when needed (cURL < 7.22). [#656], [#657] Props [@mircobabini][gh-mircobabini]\n- Composer: updated list of suggested PHP extensions to enable. [#821]\n- README: add information about the PSR-7/PSR-18 wrapper for Requests. [#827]\n\n[#656]: https://github.com/WordPress/Requests/pull/656\n[#657]: https://github.com/WordPress/Requests/pull/657\n[#821]: https://github.com/WordPress/Requests/pull/821\n[#823]: https://github.com/WordPress/Requests/pull/823\n[#827]: https://github.com/WordPress/Requests/pull/827\n\n2.0.7\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2023-05-30. [#809]\n\n[#809]: https://github.com/WordPress/Requests/pull/809\n\n2.0.6\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2023-01-10. [#791]\n- Fix typo in deprecation notice. [#785] Props [@costdev][gh-costdev]\n- Minor internal improvements for passing the correct type to function calls. [#779]\n- Confirmed compatibility with PHP 8.2.\n    No changes were needed, so Request 2.0.1 and higher can be considered compatible with PHP 8.2.\n- Various documentation improvements and other general housekeeping.\n\n[#779]: https://github.com/WordPress/Requests/pull/779\n[#785]: https://github.com/WordPress/Requests/pull/785\n[#791]: https://github.com/WordPress/Requests/pull/791\n\n2.0.5\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2022-10-11. [#769]\n\n[#769]: https://github.com/WordPress/Requests/pull/769\n\n2.0.4\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2022-07-19. [#763]\n\n[#763]: https://github.com/WordPress/Requests/pull/763\n\n2.0.3\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2022-04-26. [#731]\n\n[#731]: https://github.com/WordPress/Requests/pull/731\n\n2.0.2\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2022-03-18. [#697]\n\n[#697]: https://github.com/WordPress/Requests/pull/697\n\n2.0.1\n-----\n\n### Overview of changes\n- Update bundled certificates as of 2022-02-01. [#670]\n- Bug fix: Hook priority should be respected. [#452], [#647]\n- Docs: the Hook documentation has been updated to reflect the current available hooks. [#646]\n- General housekeeping. [#635], [#649], [#650], [#653], [#655], [#658], [#660], [#661], [#662], [#669], [#671], [#672], [#674]\n\nProps [@alpipego][gh-alpipego], [@costdev][gh-costdev], [@jegrandet][gh-jegrandet], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera]\n\n[#674]: https://github.com/WordPress/Requests/pull/674\n[#672]: https://github.com/WordPress/Requests/pull/672\n[#671]: https://github.com/WordPress/Requests/pull/671\n[#670]: https://github.com/WordPress/Requests/pull/670\n[#669]: https://github.com/WordPress/Requests/pull/669\n[#662]: https://github.com/WordPress/Requests/pull/662\n[#661]: https://github.com/WordPress/Requests/pull/661\n[#660]: https://github.com/WordPress/Requests/pull/660\n[#658]: https://github.com/WordPress/Requests/pull/658\n[#655]: https://github.com/WordPress/Requests/pull/655\n[#653]: https://github.com/WordPress/Requests/pull/653\n[#650]: https://github.com/WordPress/Requests/pull/650\n[#649]: https://github.com/WordPress/Requests/pull/649\n[#647]: https://github.com/WordPress/Requests/pull/647\n[#646]: https://github.com/WordPress/Requests/pull/646\n[#635]: https://github.com/WordPress/Requests/issues/635\n[#452]: https://github.com/WordPress/Requests/issues/452\n\n\n2.0.0\n-----\n\n### BREAKING CHANGES\n\nAs Requests 2.0.0 is a major release, this version contains breaking changes. There is an [upgrade guide](https://requests.ryanmccue.info/docs/upgrading.html) available to guide you through making the necessary changes in your own code.\n\n### Overview of changes\n\n- **New minimum PHP version**\n\n  Support for PHP 5.2 - 5.5 has been dropped. The new minimum supported PHP version is now 5.6.\n\n  Support for HHVM has also been dropped formally now.\n\n  (props [@datagutten][gh-datagutten], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#378][gh-378], [#470][gh-470], [#509][gh-509])\n\n- **New release branch name**\n\n  The stable version of Requests can be found in the `stable` branch (was `master`).\n  Development of Requests happens in the `develop` branch.\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#463][gh-463], [#490][gh-490])\n\n- **All code is now namespaced (PSR-4)**\n\n  The code within the Requests library has all been namespaced and now lives in the `WpOrg\\Requests` namespace.\n\n  The namespaced classes can be found in the `src` directory. The old `library` directory and the files within are deprecated.\n\n  For a number of classes, some subtle changes have also been made to their base class name, like renaming the `Hooker` interface to `HookManager`.\n\n  A full backward-compatibility layer is available and using the non-namespaced class names will still work during the 2.x and 3.x release cycles, though a deprecation notice will be thrown the first time a class using one of the old PSR-0 based class names is requested.\n  For the lifetime of Requests 2.x, the deprecation notices can be disabled by defining a global `REQUESTS_SILENCE_PSR0_DEPRECATIONS` constant and\nsetting the value of this constant to `true`.\n\n  A complete \"translation table\" between the Requests 1.x and 2.x class names is available in the [upgrade guide](https://requests.ryanmccue.info/docs/upgrading.html).\n\n  Users of the Requests native custom autoloader will need to adjust their code to initialize the autoloader:\n  ```php\n  // OLD: Using the custom autoloader in Requests 1.x.\n  require_once 'path/to/Requests/library/Requests.php';\n  Requests::register_autoloader();\n\n  // NEW: Using the custom autoloader in Requests 2.x.\n  require_once 'path/to/Requests/src/Autoload.php';\n  WpOrg\\Requests\\Autoload::register();\n  ```\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#503][gh-503], [#519][gh-519], [#586][gh-586], [#587][gh-587], [#594][gh-594])\n\n- **A large number of classes have been marked as `final`**\n\n  Marking a class as `final` prohibits extending it.\n\n  These changes were made after researching which classes were being extended in userland code and due diligence has been applied before making these changes. If this change is causing a problem we didn't anticipate, please [open an issue to report it](https://github.com/WordPress/Requests/issues/new/choose).\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#514][gh-514], [#534][gh-534])\n\n- **Input validation**\n\n  All typical entry point methods in Requests will now, directly or indirectly, validate the received input parameters for being of the correct type.\n  When an incorrect parameter type is received, a catchable `WpOrg\\Requests\\Exception\\InvalidArgument` exception will be thrown.\n\n  The input validation has been set up to be reasonably liberal, so if Requests was being used as per the documentation, this change should not affect you.\n  If you still find the input validation to be too strict and you have a good use-case of why it should be loosened for a particular entry point, please [open an issue to discuss this](https://github.com/WordPress/Requests/issues/new/choose).\n\n  The code within Requests itself has also received various improvements to be more type safe.\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#499][gh-499], [#542][gh-542], [#547][gh-547], [#558][gh-558], [#572][gh-572], [#573][gh-573], [#574][gh-574], [#591][gh-591], [#592][gh-592], [#593][gh-593], [#601][gh-601], [#602][gh-602], [#603][gh-603], [#604][gh-604], [#605][gh-605], [#609][gh-609], [#610][gh-610], [#611][gh-611], [#613][gh-613], [#614][gh-614], [#615][gh-615], [#620][gh-620], [#621][gh-621], [#629][gh-629])\n\n- **Update bundled certificates**\n\n  The bundled certificates were updated with the latest version available (published 2021-10-26).\n\n  Previously the bundled certificates in Requests would include a small subset of expired certificates for legacy reasons.\n  This is no longer the case as of Requests 2.0.0.\n\n  > :warning: **Note**: the included certificates bundle is only intended as a fallback.\n  >\n  > This fallback should only be used for servers that are not properly configured for SSL verification. A continuously managed server should provide a more up-to-date certificate authority list than a software library which only gets updates once in a while.\n  >\n  > Setting the `$options['verify']` key to `true` when initiating a request enables certificate verification using the certificate authority list provided by the server environment, which is recommended.\n\n  The [documentation regarding Secure Requests with SSL](https://requests.ryanmccue.info/docs/usage-advanced.html#secure-requests-with-ssl) has also been updated to reflect this and it is recommended to have a read through.\n\n  The included certificates _file_ has now also been moved to a dedicated `/certificates` directory off the project root.\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [@wojsmol][gh-wojsmol], [@ZsgsDesign][gh-ZsgsDesign], [#535][gh-535], [#571][gh-571], [#577][gh-577], [#622][gh-622], [#632][gh-632])\n\n- **New functionality**\n\n  The following new functionality has been added:\n  - A `public static` `WpOrg\\Requests\\Requests::has_capabilities($capabilities = array())` method is now available to check whether there is a transport available which supports the requested capabilities.\n  - A `public` `WpOrg\\Requests\\Response::decode_body($associative = true, $depth = 512, $options = 0)` method is now available to handle JSON-decoding a response body.\n    The method parameters correspond to the parameters of the PHP native [`json_decode()`](https://php.net/json-decode) function.\n    The method will throw an `WpOrg\\Requests\\Exception` when the response body is not valid JSON.\n  - A `WpOrg\\Requests\\Capability` interface. This interface provides constants for the known capabilities. Transports can be tested whether or not they support these capabilities.\n    Currently, the only capability supported is `Capability::SSL`.\n  - A `WpOrg\\Requests\\Port` class. This class encapsulates typical port numbers as constants and offers a `static` `Port::get($type)` method to retrieve a port number based on a request type.\n    Using this class when referring to port numbers is recommended.\n  - An `WpOrg\\Requests\\Exceptions\\InvalidArgument` class. This class is intended for internal use only.\n  - An `WpOrg\\Requests\\Utility\\InputValidator` class with helper methods for input validation. This class is intended for internal use only.\n\n  (props [@ccrims0n][gh-ccrims0n], [@dd32][gh-dd32], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#167][gh-167], [#214][gh-214], [#250][gh-250], [#251][gh-251], [#492][gh-492], [#499][gh-499], [#538][gh-538], [#542][gh-542], [#547][gh-547], [#559][gh-559])\n\n- **Changed functionality**\n\n  - The `WpOrg\\Requests\\Requests::decompress()` method has been fixed to recognize more compression levels and handle these correctly.\n  - The method signature of the `WpOrg\\Requests\\Transport::test()` interface method has been adjusted to enforce support for an optional `$capabilities` parameter.\n    The Request native `WpOrg\\Requests\\Transport\\Curl::test()` and `WpOrg\\Requests\\Transport\\Fsockopen::test()` methods both already supported this parameter.\n  - The `WpOrg\\Requests\\Transport\\Curl::request()` and the `WpOrg\\Requests\\Transport\\Fsockopen::request()` methods will now throw an `WpOrg\\Requests\\Exception` when the `$options['filename']` contains an invalid path.\n  - The `WpOrg\\Requests\\Transport\\Curl::request()` method will no longer set the `CURLOPT_REFERER` option.\n  - The default value of the `$key` parameter in the `WpOrg\\Requests\\Cookie\\Jar::normalize_cookie()` method has been changed from `null` to an empty string.\n\n  (props [@datagutten][gh-datagutten], [@dustinrue][gh-dustinrue], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [@soulseekah][gh-soulseekah], [@twdnhfr][gh-twdnhfr], [#301][gh-301], [#309][gh-309], [#379][gh-379], [#444][gh-444], [#492][gh-492], [#610][gh-610])\n\n- **Removed functionality**\n\n  The following methods, which were deprecated during the 1.x cycle, have now been removed:\n  - `Requests::flattern()`, use `WpOrg\\Requests\\Requests::flatten()` instead.\n  - `Requests_Cookie::formatForHeader()`, use `WpOrg\\Requests\\Cookie::format_for_header()` instead.\n  - `Requests_Cookie::formatForSetCookie()`, use `WpOrg\\Requests\\Cookie::format_for_set_cookie()` instead.\n  - `Requests_Cookie::parseFromHeaders()`, use `WpOrg\\Requests\\Cookie::parse_from_headers()` instead.\n  - `Requests_Cookie_Jar::normalizeCookie()`, use `WpOrg\\Requests\\Cookie\\Jar::normalize_cookie()` instead\n\n  A duplicate method has been removed:\n  - `Requests::match_domain()`, use `WpOrg\\Requests\\Ssl::match_domain()` instead.\n\n  A redundant method has been removed:\n  - `Hooks::__construct()`.\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#510][gh-510], [#525][gh-525], [#617][gh-617])\n\n- **Compatibility with PHP 8.0 named parameters**\n\n  All parameter names have been reviewed to prevent issues for users using PHP 8.0 named parameters and where relevant, a number of parameter names have been changed.\n\n  After this release, a parameter name rename will be treated as a breaking change (reserved for major releases) and will be marked as such in the changelog.\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#533][gh-533], [#560][gh-560], [#561][gh-561], [#599][gh-599], [#612][gh-612])\n\n- **PHP 8.1 compatibility**\n\n  All known PHP 8.1 compatibility issues have been fixed and tests are now running (and passing) against PHP 8.1.\n\n  In case you still run into a PHP 8.1 deprecation notice or other PHP 8.1 related issue, please [open an issue to report it](https://github.com/WordPress/Requests/issues/new/choose).\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#498][gh-498], [#499][gh-499], [#500][gh-500], [#501][gh-501], [#505][gh-505], [#634][gh-634])\n\n- **Updated documentation**\n\n  The [documentation website](https://requests.ryanmccue.info/) has been updated to reflect all the changes in Requests 2.0.0.\n\n  The [API documentation for Requests 2.x](https://requests.ryanmccue.info/api-2.x/) is now generated using [phpDocumentor](https://www.phpdoc.org/) :heart: and available on the website.\n  For the time being, the [Requests 1.x API documentation](https://requests.ryanmccue.info/api/) will still be available on the website as well.\n\n  (props [@costdev][gh-costdev], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [@szepeviktor][gh-szepeviktor], [#476][gh-476], [#480][gh-480], [#489][gh-489], [#495][gh-495], [#526][gh-526], [#528][gh-528], [#532][gh-532], [#543][gh-543], [#562][gh-562], [#578][gh-578], [#590][gh-590], [#606][gh-606], [#607][gh-607], [#608][gh-608], [#618][gh-618], [#622][gh-622], [#625][gh-625], [#626][gh-626], [#630][gh-630], [#642][gh-642])\n\n- **General housekeeping**\n\n  - In a number of places, code modernizations, possible now the minimum PHP version has gone up to PHP 5.6, have been applied.\n    ([#504][gh-504], [#506][gh-506], [#512][gh-512], [#539][gh-539], [#541][gh-541], [#599][gh-599], [#623][gh-623])\n\n  - Lots of improvements were made to render the tests more reliable and increase the coverage.\n    ([#446][gh-446], [#459][gh-459], [#472][gh-472], [#503][gh-503], [#508][gh-508], [#511][gh-511], [#520][gh-520], [#521][gh-521], [#548][gh-548], [#549][gh-549], [#550][gh-550], [#551][gh-551], [#552][gh-552], [#553][gh-553], [#554][gh-554], [#555][gh-555], [#556][gh-556], [#557][gh-557], [#558][gh-558], [#566][gh-566], [#581][gh-581], [#591][gh-591], [#595][gh-595], [#640][gh-640])\n\n  - The move for all CI to GitHub Actions has been finalized. Travis is dead, long live Travis and thanks for all the fish.\n    ([#447][gh-447], [#575][gh-575], [#579][gh-579])\n\n  - A GitHub Actions workflow has been put in place to allow for automatically updating the website on releases.\n    This should allow for more rapid releases from now on.\n    ([#466][gh-466], [#544][gh-544], [#545][gh-545], [#563][gh-563], [#569][gh-569], [#583][gh-583], [#626][gh-626])\n\n  - Development-only dependencies have been updated.\n    ([#516][gh-516], [#517][gh-517])\n\n  - Various other general housekeeping and improvements for contributors.\n    ([#488][gh-488], [#491][gh-491], [#523][gh-523], [#513][gh-513], [#515][gh-515], [#522][gh-522], [#524][gh-524], [#531][gh-531], [#535][gh-535], [#536][gh-536], [#537][gh-537], [#540][gh-540], [#588][gh-588], [#616][gh-616])\n\n  (props [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera])\n\n[gh-642]: https://github.com/WordPress/Requests/pull/642\n[gh-640]: https://github.com/WordPress/Requests/pull/640\n[gh-634]: https://github.com/WordPress/Requests/pull/634\n[gh-632]: https://github.com/WordPress/Requests/pull/632\n[gh-630]: https://github.com/WordPress/Requests/pull/630\n[gh-629]: https://github.com/WordPress/Requests/pull/629\n[gh-626]: https://github.com/WordPress/Requests/pull/626\n[gh-625]: https://github.com/WordPress/Requests/pull/625\n[gh-623]: https://github.com/WordPress/Requests/pull/623\n[gh-622]: https://github.com/WordPress/Requests/pull/622\n[gh-621]: https://github.com/WordPress/Requests/pull/621\n[gh-620]: https://github.com/WordPress/Requests/pull/620\n[gh-618]: https://github.com/WordPress/Requests/pull/618\n[gh-617]: https://github.com/WordPress/Requests/pull/617\n[gh-616]: https://github.com/WordPress/Requests/pull/616\n[gh-615]: https://github.com/WordPress/Requests/pull/615\n[gh-614]: https://github.com/WordPress/Requests/pull/614\n[gh-613]: https://github.com/WordPress/Requests/pull/613\n[gh-612]: https://github.com/WordPress/Requests/pull/612\n[gh-611]: https://github.com/WordPress/Requests/pull/611\n[gh-610]: https://github.com/WordPress/Requests/pull/610\n[gh-609]: https://github.com/WordPress/Requests/pull/609\n[gh-608]: https://github.com/WordPress/Requests/pull/608\n[gh-607]: https://github.com/WordPress/Requests/pull/607\n[gh-606]: https://github.com/WordPress/Requests/pull/606\n[gh-605]: https://github.com/WordPress/Requests/pull/605\n[gh-604]: https://github.com/WordPress/Requests/pull/604\n[gh-603]: https://github.com/WordPress/Requests/pull/603\n[gh-602]: https://github.com/WordPress/Requests/pull/602\n[gh-601]: https://github.com/WordPress/Requests/pull/601\n[gh-599]: https://github.com/WordPress/Requests/pull/599\n[gh-595]: https://github.com/WordPress/Requests/pull/595\n[gh-594]: https://github.com/WordPress/Requests/pull/594\n[gh-593]: https://github.com/WordPress/Requests/issues/593\n[gh-592]: https://github.com/WordPress/Requests/pull/592\n[gh-591]: https://github.com/WordPress/Requests/pull/591\n[gh-590]: https://github.com/WordPress/Requests/issues/590\n[gh-588]: https://github.com/WordPress/Requests/pull/588\n[gh-587]: https://github.com/WordPress/Requests/pull/587\n[gh-586]: https://github.com/WordPress/Requests/pull/586\n[gh-583]: https://github.com/WordPress/Requests/pull/583\n[gh-581]: https://github.com/WordPress/Requests/pull/581\n[gh-579]: https://github.com/WordPress/Requests/pull/579\n[gh-578]: https://github.com/WordPress/Requests/pull/578\n[gh-577]: https://github.com/WordPress/Requests/pull/577\n[gh-575]: https://github.com/WordPress/Requests/pull/575\n[gh-574]: https://github.com/WordPress/Requests/pull/574\n[gh-573]: https://github.com/WordPress/Requests/pull/573\n[gh-572]: https://github.com/WordPress/Requests/pull/572\n[gh-571]: https://github.com/WordPress/Requests/pull/571\n[gh-569]: https://github.com/WordPress/Requests/pull/569\n[gh-566]: https://github.com/WordPress/Requests/pull/566\n[gh-563]: https://github.com/WordPress/Requests/pull/563\n[gh-562]: https://github.com/WordPress/Requests/pull/562\n[gh-561]: https://github.com/WordPress/Requests/pull/561\n[gh-560]: https://github.com/WordPress/Requests/pull/560\n[gh-559]: https://github.com/WordPress/Requests/pull/559\n[gh-558]: https://github.com/WordPress/Requests/pull/558\n[gh-557]: https://github.com/WordPress/Requests/pull/557\n[gh-556]: https://github.com/WordPress/Requests/pull/556\n[gh-555]: https://github.com/WordPress/Requests/pull/555\n[gh-554]: https://github.com/WordPress/Requests/pull/554\n[gh-553]: https://github.com/WordPress/Requests/pull/553\n[gh-552]: https://github.com/WordPress/Requests/pull/552\n[gh-551]: https://github.com/WordPress/Requests/pull/551\n[gh-550]: https://github.com/WordPress/Requests/pull/550\n[gh-549]: https://github.com/WordPress/Requests/pull/549\n[gh-548]: https://github.com/WordPress/Requests/pull/548\n[gh-547]: https://github.com/WordPress/Requests/pull/547\n[gh-545]: https://github.com/WordPress/Requests/pull/545\n[gh-544]: https://github.com/WordPress/Requests/pull/544\n[gh-543]: https://github.com/WordPress/Requests/pull/543\n[gh-542]: https://github.com/WordPress/Requests/pull/542\n[gh-541]: https://github.com/WordPress/Requests/pull/541\n[gh-540]: https://github.com/WordPress/Requests/pull/540\n[gh-539]: https://github.com/WordPress/Requests/pull/539\n[gh-538]: https://github.com/WordPress/Requests/pull/538\n[gh-537]: https://github.com/WordPress/Requests/pull/537\n[gh-536]: https://github.com/WordPress/Requests/pull/536\n[gh-535]: https://github.com/WordPress/Requests/pull/535\n[gh-534]: https://github.com/WordPress/Requests/pull/534\n[gh-533]: https://github.com/WordPress/Requests/issues/533\n[gh-532]: https://github.com/WordPress/Requests/pull/532\n[gh-531]: https://github.com/WordPress/Requests/pull/531\n[gh-528]: https://github.com/WordPress/Requests/pull/528\n[gh-526]: https://github.com/WordPress/Requests/pull/526\n[gh-525]: https://github.com/WordPress/Requests/pull/525\n[gh-524]: https://github.com/WordPress/Requests/pull/524\n[gh-523]: https://github.com/WordPress/Requests/pull/523\n[gh-522]: https://github.com/WordPress/Requests/pull/522\n[gh-521]: https://github.com/WordPress/Requests/pull/521\n[gh-520]: https://github.com/WordPress/Requests/pull/520\n[gh-519]: https://github.com/WordPress/Requests/pull/519\n[gh-517]: https://github.com/WordPress/Requests/pull/517\n[gh-516]: https://github.com/WordPress/Requests/pull/516\n[gh-515]: https://github.com/WordPress/Requests/issues/515\n[gh-514]: https://github.com/WordPress/Requests/issues/514\n[gh-513]: https://github.com/WordPress/Requests/issues/513\n[gh-512]: https://github.com/WordPress/Requests/issues/512\n[gh-511]: https://github.com/WordPress/Requests/pull/511\n[gh-510]: https://github.com/WordPress/Requests/pull/510\n[gh-509]: https://github.com/WordPress/Requests/pull/509\n[gh-508]: https://github.com/WordPress/Requests/pull/508\n[gh-506]: https://github.com/WordPress/Requests/pull/506\n[gh-505]: https://github.com/WordPress/Requests/pull/505\n[gh-504]: https://github.com/WordPress/Requests/pull/504\n[gh-503]: https://github.com/WordPress/Requests/pull/503\n[gh-501]: https://github.com/WordPress/Requests/pull/501\n[gh-500]: https://github.com/WordPress/Requests/pull/500\n[gh-499]: https://github.com/WordPress/Requests/pull/499\n[gh-498]: https://github.com/WordPress/Requests/issues/498\n[gh-498]: https://github.com/WordPress/Requests/issues/495\n[gh-492]: https://github.com/WordPress/Requests/pull/492\n[gh-491]: https://github.com/WordPress/Requests/pull/491\n[gh-490]: https://github.com/WordPress/Requests/pull/490\n[gh-489]: https://github.com/WordPress/Requests/pull/489\n[gh-488]: https://github.com/WordPress/Requests/pull/488\n[gh-480]: https://github.com/WordPress/Requests/issues/480\n[gh-476]: https://github.com/WordPress/Requests/issues/476\n[gh-472]: https://github.com/WordPress/Requests/issues/472\n[gh-470]: https://github.com/WordPress/Requests/pull/470\n[gh-466]: https://github.com/WordPress/Requests/issues/466\n[gh-463]: https://github.com/WordPress/Requests/issues/463\n[gh-460]: https://github.com/WordPress/Requests/issues/460\n[gh-459]: https://github.com/WordPress/Requests/issues/459\n[gh-447]: https://github.com/WordPress/Requests/pull/447\n[gh-446]: https://github.com/WordPress/Requests/pull/446\n[gh-444]: https://github.com/WordPress/Requests/pull/444\n[gh-379]: https://github.com/WordPress/Requests/pull/379\n[gh-378]: https://github.com/WordPress/Requests/issues/378\n[gh-309]: https://github.com/WordPress/Requests/pull/309\n[gh-301]: https://github.com/WordPress/Requests/issues/301\n[gh-251]: https://github.com/WordPress/Requests/pull/251\n[gh-250]: https://github.com/WordPress/Requests/issues/250\n[gh-214]: https://github.com/WordPress/Requests/pull/214\n[gh-167]: https://github.com/WordPress/Requests/issues/167\n\n1.8.1\n-----\n\n### Overview of changes\n- The `Requests::VERSION` constant has been updated to reflect the actual version for the release. [@jrfnl][gh-jrfnl], [#485][gh-485]\n- Update the `.gitattributes` file to include fewer files in the distribution. [@mbabker][gh-mbabker], [#484][gh-484]\n- Added a release checklist. [@jrfnl][gh-jrfnl], [#483][gh-483]\n- Various minor updates to the documentation and the website. [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#477][gh-477], [#478][gh-478], [#479][gh-479], [#481][gh-481], [#482][gh-482]\n\n[gh-477]: https://github.com/WordPress/Requests/issues/477\n[gh-478]: https://github.com/WordPress/Requests/issues/478\n[gh-479]: https://github.com/WordPress/Requests/issues/479\n[gh-481]: https://github.com/WordPress/Requests/issues/481\n[gh-482]: https://github.com/WordPress/Requests/issues/482\n[gh-483]: https://github.com/WordPress/Requests/issues/483\n[gh-484]: https://github.com/WordPress/Requests/issues/484\n[gh-485]: https://github.com/WordPress/Requests/issues/485\n\n\n1.8.0\n-----\n\n### IMPORTANT NOTES\n\n#### Last release supporting PHP 5.2 - 5.5\n\n  Release 1.8.0 will be the last release with compatibility for PHP 5.2 - 5.5. With the next release (v2.0.0), the minimum PHP version will be bumped to 5.6.\n\n#### Last release supporting PEAR distribution\n\n  Release 1.8.0 will be the last release to be distributed via PEAR. From release 2.0.0 onwards, consumers of this library will have to switch to Composer to receive updates.\n\n### Overview of changes\n\n- **[SECURITY FIX] Disable deserialization in `FilteredIterator`**\n\n  A `Deserialization of Untrusted Data` weakness was found in the `FilteredIterator` class.\n\n  This security vulnerability was first reported to the WordPress project. The security fix applied to WordPress has been ported back into the library.\n\n  GitHub security advisory: [Insecure Deserialization of untrusted data](https://github.com/WordPress/Requests/security/advisories/GHSA-52qp-jpq7-6c54)\n\n  CVE: [CVE-2021-29476 - Deserialization of Untrusted Data](https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-29476)\n\n  Related WordPress CVE: [https://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-28032](https://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-28032)\n\n  (props [@dd32][gh-dd32], [@desrosj][gh-desrosj], [@jrfnl][gh-jrfnl], [@peterwilsoncc][gh-peterwilsoncc], [@SergeyBiryukov][gh-SergeyBiryukov], [@whyisjake][gh-whyisjake], [@xknown][gh-xknown], [#421][gh-421], [#422][gh-422])\n\n\n- **Repository moved to `WordPress\\Requests`**\n\n  The `Requests` library has been moved to the WordPress GitHub organization and can now be found under `https://github.com/WordPress/Requests`.\n\n  All links in code and documentation were updated accordingly.\n\n  Note: the Composer package name remains unchanged ([`rmccue/requests`](https://packagist.org/packages/rmccue/requests)), as well as the documentation site ([requests.ryanmccue.info](https://requests.ryanmccue.info/)).\n\n  (props [@dd32][gh-dd32], [@JustinyAhin][gh-JustinyAhin], [@jrfnl][gh-jrfnl], [@rmccue][gh-rmccue], [#440][gh-440], [#441][gh-441], [#448][gh-448])\n\n\n- **Manage `\"Expect\"` header with `cURL` transport**\n\n  By default, `cURL` adds a `Expect: 100-Continue` header to certain requests. This can add as much as a second delay to requests done using `cURL`. This is [discussed on the cURL mailing list](https://curl.se/mail/lib-2017-07/0013.html).\n\n  To prevent this, `Requests` now adds an empty `\"Expect\"` header to requests that are smaller than 1 MB and use HTTP/1.1.\n\n  (props [@carlalexander][gh-carlalexander], [@schlessera][gh-schlessera], [@TimothyBJacobs][gh-TimothyBJacobs], [#453][gh-453], [#454][gh-454], [#469][gh-469])\n\n\n- **Update bundled certificates as of 2021-02-12**\n\n  The bundled certificates were updated. A small subset of expired certificates are still included for legacy reasons (and support).\n\n  (props [@ozh][gh-ozh], [@patmead][gh-patmead], [@schlessera][gh-schlessera], [@todeveni][gh-todeveni], [#385][gh-385], [#398][gh-398], [#451][gh-451])\n\n\n- **Add required `Content-*` headers for empty `POST` requests**\n\n  Sends the `Content-Length` and `Content-Type` headers even for empty `POST` requests, as the length is expected as per [RFC2616 Section 14.13](https://tools.ietf.org/html/rfc2616#section-14.13):\n  ```\n  Content-Length header \"SHOULD\" be included. In practice, it is not\n  used for GET nor HEAD requests, but is expected for POST requests.\n  ```\n\n  (props [@dd32][gh-dd32], [@gstrauss][gh-gstrauss], [@jrfnl][gh-jrfnl], [@soulseekah][gh-soulseekah], [#248][gh-248], [#249][gh-249], [#318][gh-318], [#368][gh-368])\n\n\n- **Ignore locale when creating the HTTP version string from a float**\n\n  The previous behavior allowed for the locale to mess up the float to string conversion resulting in a `GET / HTTP/1,1` instead of `GET / HTTP/1.1` request.\n\n  (props [@tonebender][gh-tonebender], [@Zegnat][gh-Zegnat], [#335][gh-335], [#339][gh-339])\n\n\n- **Make `verify => false` work with `fsockopen`**\n\n  This allows the `fsockopen` transport now to ignore SSL failures when requested.\n\n  (props [@soulseekah][gh-soulseekah], [#310][gh-310], [#311][gh-311])\n\n\n- **Only include port number in the `Host` header if it differs from the default**\n\n  The code was not violating the RFC per se, but also not following standard practice of leaving the port off when it is the default port for the scheme, which could lead to connectivity issues.\n\n  (props [@amandato][gh-amandato], [@dd32][gh-dd32], [#238][gh-238])\n\n\n- **Fix PHP cross-version compatibility**\n\n  Important fixes have been made to improve cross-version compatibility of the code across all supported PHP versions.\n\n  - Use documented order for `implode()` arguments.\n  - Harden type handling when no domain was passed.\n  - Explicitly cast `$url` property to `string` in `Requests::parse_response()`.\n  - Initialize `$body` property to an empty string in `Requests::parse_response()`.\n  - Ensure the stream handle is valid before trying to close it.\n  - Ensure the `$callback` in the `FilteredIterator` is callable before calling it.\n\n  (props [@aaronjorbin][gh-aaronjorbin], [@jrfnl][gh-jrfnl], [#346][gh-346], [#370][gh-370], [#425][gh-425], [#426][gh-426], [#456][gh-456], [#457][gh-457])\n\n\n- **Improve testing**\n\n  Lots of improvements were made to render the tests more reliable and increase the coverage.\n\n  And to top it all off, all tests are now run against all supported PHP versions, including PHP 8.0.\n\n  (props [@datagutten][gh-datagutten], [@jrfnl][gh-jrfnl], [@schlessera][gh-schlessera], [#345][gh-345], [#351][gh-351], [#355][gh-355], [#366][gh-366], [#412][gh-412], [#414][gh-414], [#445][gh-445], [#458][gh-458], [#464][gh-464])\n\n\n- **Improve code quality and style**\n\n  A whole swoop of changes has been made to harden the code and make it more consistent.\n\n  The code style has been made consistent across both code and tests and is now enforced via a custom PHPCS rule set.\n\n  The WordPress Coding Standards were chosen as the basis for the code style checks as most contributors to this library originate from the WordPress community and will be familiar with this code style.\n\n  Main differences from the WordPress Coding Standards based on discussions and an analysis of the code styles already in use:\n\n  - No whitespace on the inside of parentheses.\n  - No Yoda conditions.\n\n  A more detailed overview of the decisions that went into the final code style rules can be found at [#434][gh-434].\n\n  (props [@jrfnl][gh-jrfnl], [@KasperFranz][gh-KasperFranz], [@ozh][gh-ozh], [@schlessera][gh-schlessera], [@TysonAndre][gh-TysonAndre], [#263][gh-263], [#296][gh-296], [#328][gh-328], [#358][gh-358], [#359][gh-359], [#360][gh-360], [#361][gh-361], [#362][gh-362], [#363][gh-363], [#364][gh-364], [#386][gh-386], [#396][gh-396], [#399][gh-399], [#400][gh-400], [#401][gh-401], [#402][gh-402], [#403][gh-403], [#404][gh-404], [#405][gh-405], [#406][gh-406], [#408][gh-408], [#409][gh-409], [#410][gh-410], [#411][gh-411], [#413][gh-413], [#415][gh-415], [#416][gh-416], [#417][gh-417], [#423][gh-423], [#424][gh-424], [#434][gh-434])\n\n\n- **Replace Travis CI with GitHub Actions (partial)**\n\n  The entire CI setup is gradually being moved from Travis CI to GitHub Actions.\n\n  At this point, GitHub Actions takes over the CI from PHP 5.5 onwards, leaving Travis CI as a fallback for lower PHP versions.\n\n  This move will be completed after the planned minimum version bump to PHP 5.6+ with the next release, at which point we will get rid of all the remaining Travis CI integrations.\n\n  (props [@dd32][gh-dd32], [@desrosj][gh-desrosj], [@jrfnl][gh-jrfnl], [@ntwb][gh-ntwb], [@ozh][gh-ozh], [@schlessera][gh-schlessera], [@TimothyBJacobs][gh-TimothyBJacobs], [@TysonAndre][gh-TysonAndre], [#280][gh-280], [#298][gh-298], [#302][gh-302], [#303][gh-303], [#352][gh-352], [#353][gh-353], [#354][gh-354], [#356][gh-356], [#388][gh-388], [#397][gh-397], [#428][gh-428], [#436][gh-436], [#439][gh-439], [#461][gh-461], [#467][gh-467])\n\n\n- **Update and improve documentation**\n  - Use clearer and more inclusive language.\n  - Update the GitHub Pages site.\n  - Update content and various tweaks to the markdown.\n  - Fix code blocks in `README.md` file.\n  - Add pagination to documentation pages.\n\n  (props [@desrosj][gh-desrosj], [@jrfnl][gh-jrfnl], [@JustinyAhin][gh-JustinyAhin], [@tnorthcutt][gh-tnorthcutt], [#334][gh-334], [#367][gh-367], [#387][gh-387], [#443][gh-443], [#462][gh-462], [#465][gh-465], [#468][gh-468], [#471][gh-471] )\n\n[gh-194]: https://github.com/WordPress/Requests/issues/194\n[gh-238]: https://github.com/WordPress/Requests/issues/238\n[gh-248]: https://github.com/WordPress/Requests/issues/248\n[gh-249]: https://github.com/WordPress/Requests/issues/249\n[gh-263]: https://github.com/WordPress/Requests/issues/263\n[gh-280]: https://github.com/WordPress/Requests/issues/280\n[gh-296]: https://github.com/WordPress/Requests/issues/296\n[gh-298]: https://github.com/WordPress/Requests/issues/298\n[gh-302]: https://github.com/WordPress/Requests/issues/302\n[gh-303]: https://github.com/WordPress/Requests/issues/303\n[gh-310]: https://github.com/WordPress/Requests/issues/310\n[gh-311]: https://github.com/WordPress/Requests/issues/311\n[gh-318]: https://github.com/WordPress/Requests/issues/318\n[gh-328]: https://github.com/WordPress/Requests/issues/328\n[gh-334]: https://github.com/WordPress/Requests/issues/334\n[gh-335]: https://github.com/WordPress/Requests/issues/335\n[gh-339]: https://github.com/WordPress/Requests/issues/339\n[gh-345]: https://github.com/WordPress/Requests/issues/345\n[gh-346]: https://github.com/WordPress/Requests/issues/346\n[gh-351]: https://github.com/WordPress/Requests/issues/351\n[gh-352]: https://github.com/WordPress/Requests/issues/352\n[gh-353]: https://github.com/WordPress/Requests/issues/353\n[gh-354]: https://github.com/WordPress/Requests/issues/354\n[gh-355]: https://github.com/WordPress/Requests/issues/355\n[gh-356]: https://github.com/WordPress/Requests/issues/356\n[gh-358]: https://github.com/WordPress/Requests/issues/358\n[gh-359]: https://github.com/WordPress/Requests/issues/359\n[gh-360]: https://github.com/WordPress/Requests/issues/360\n[gh-361]: https://github.com/WordPress/Requests/issues/361\n[gh-362]: https://github.com/WordPress/Requests/issues/362\n[gh-363]: https://github.com/WordPress/Requests/issues/363\n[gh-364]: https://github.com/WordPress/Requests/issues/364\n[gh-366]: https://github.com/WordPress/Requests/issues/366\n[gh-367]: https://github.com/WordPress/Requests/issues/367\n[gh-367]: https://github.com/WordPress/Requests/issues/367\n[gh-368]: https://github.com/WordPress/Requests/issues/368\n[gh-370]: https://github.com/WordPress/Requests/issues/370\n[gh-385]: https://github.com/WordPress/Requests/issues/385\n[gh-386]: https://github.com/WordPress/Requests/issues/386\n[gh-387]: https://github.com/WordPress/Requests/issues/387\n[gh-388]: https://github.com/WordPress/Requests/issues/388\n[gh-396]: https://github.com/WordPress/Requests/issues/396\n[gh-397]: https://github.com/WordPress/Requests/issues/397\n[gh-398]: https://github.com/WordPress/Requests/issues/398\n[gh-399]: https://github.com/WordPress/Requests/issues/399\n[gh-400]: https://github.com/WordPress/Requests/issues/400\n[gh-401]: https://github.com/WordPress/Requests/issues/401\n[gh-402]: https://github.com/WordPress/Requests/issues/402\n[gh-403]: https://github.com/WordPress/Requests/issues/403\n[gh-404]: https://github.com/WordPress/Requests/issues/404\n[gh-405]: https://github.com/WordPress/Requests/issues/405\n[gh-406]: https://github.com/WordPress/Requests/issues/406\n[gh-408]: https://github.com/WordPress/Requests/issues/408\n[gh-409]: https://github.com/WordPress/Requests/issues/409\n[gh-410]: https://github.com/WordPress/Requests/issues/410\n[gh-411]: https://github.com/WordPress/Requests/issues/411\n[gh-412]: https://github.com/WordPress/Requests/issues/412\n[gh-413]: https://github.com/WordPress/Requests/issues/413\n[gh-414]: https://github.com/WordPress/Requests/issues/414\n[gh-415]: https://github.com/WordPress/Requests/issues/415\n[gh-416]: https://github.com/WordPress/Requests/issues/416\n[gh-417]: https://github.com/WordPress/Requests/issues/417\n[gh-421]: https://github.com/WordPress/Requests/issues/421\n[gh-422]: https://github.com/WordPress/Requests/issues/422\n[gh-423]: https://github.com/WordPress/Requests/issues/423\n[gh-424]: https://github.com/WordPress/Requests/issues/424\n[gh-425]: https://github.com/WordPress/Requests/issues/425\n[gh-426]: https://github.com/WordPress/Requests/issues/426\n[gh-428]: https://github.com/WordPress/Requests/issues/428\n[gh-434]: https://github.com/WordPress/Requests/issues/434\n[gh-436]: https://github.com/WordPress/Requests/issues/436\n[gh-439]: https://github.com/WordPress/Requests/issues/439\n[gh-440]: https://github.com/WordPress/Requests/issues/440\n[gh-441]: https://github.com/WordPress/Requests/issues/441\n[gh-443]: https://github.com/WordPress/Requests/issues/443\n[gh-445]: https://github.com/WordPress/Requests/issues/445\n[gh-448]: https://github.com/WordPress/Requests/issues/448\n[gh-451]: https://github.com/WordPress/Requests/issues/451\n[gh-453]: https://github.com/WordPress/Requests/issues/453\n[gh-454]: https://github.com/WordPress/Requests/issues/454\n[gh-456]: https://github.com/WordPress/Requests/issues/456\n[gh-457]: https://github.com/WordPress/Requests/issues/457\n[gh-458]: https://github.com/WordPress/Requests/issues/458\n[gh-461]: https://github.com/WordPress/Requests/issues/461\n[gh-462]: https://github.com/WordPress/Requests/issues/462\n[gh-464]: https://github.com/WordPress/Requests/issues/464\n[gh-465]: https://github.com/WordPress/Requests/issues/465\n[gh-467]: https://github.com/WordPress/Requests/issues/467\n[gh-468]: https://github.com/WordPress/Requests/issues/468\n[gh-469]: https://github.com/WordPress/Requests/issues/469\n[gh-471]: https://github.com/WordPress/Requests/issues/471\n\n1.7.0\n-----\n\n- Add support for HHVM and PHP 7\n\n  Requests is now tested against both HHVM and PHP 7, and they are supported as\n  first-party platforms.\n\n  (props [@rmccue][gh-rmccue], [#106][gh-106], [#176][gh-176])\n\n- Transfer & connect timeouts, in seconds & milliseconds\n\n  cURL is unable to handle timeouts under a second in DNS lookups, so we round\n  those up to ensure 1-999ms isn't counted as an instant failure.\n\n  (props [@ozh][gh-ozh], [@rmccue][gh-rmccue], [#97][gh-97], [#216][gh-216])\n\n- Rework cookie handling to be more thorough.\n\n  Cookies are now restricted to the same-origin by default, expiration is checked.\n\n  (props [@catharsisjelly][gh-catharsisjelly], [@rmccue][gh-rmccue], [#120][gh-120], [#124][gh-124], [#130][gh-130], [#132][gh-132], [#156][gh-156])\n\n- Improve testing\n\n  Tests are now run locally to speed them up, as well as further general\n  improvements to the quality of the testing suite. There are now also\n  comprehensive proxy tests to ensure coverage there.\n\n  (props [@rmccue][gh-rmccue], [#75][gh-75], [#107][gh-107], [#170][gh-170], [#177][gh-177], [#181][gh-181], [#183][gh-183], [#185][gh-185], [#196][gh-196], [#202][gh-202], [#203][gh-203])\n\n- Support custom HTTP methods\n\n  Previously, custom HTTP methods were only supported on sockets; they are now\n  supported across all transports.\n\n  (props [@ocean90][gh-ocean90], [#227][gh-227])\n\n- Add byte limit option\n\n  (props [@rmccue][gh-rmccue], [#172][gh-172])\n\n- Support a Requests_Proxy_HTTP() instance for the proxy setting.\n\n  (props [@ocean90][gh-ocean90], [#223][gh-223])\n\n- Add progress hook\n\n  (props [@rmccue][gh-rmccue], [#180][gh-180])\n\n- Add a before_redirect hook to alter redirects\n\n  (props [@rmccue][gh-rmccue], [#205][gh-205])\n\n- Pass cURL info to after_request\n\n  (props [@rmccue][gh-rmccue], [#206][gh-206])\n\n- Remove explicit autoload in Composer installation instructions\n\n  (props [@SlikNL][gh-SlikNL], [#86][gh-86])\n\n- Restrict CURLOPT_PROTOCOLS on `defined()` instead of `version_compare()`\n\n  (props [@ozh][gh-ozh], [#92][gh-92])\n\n- Fix doc - typo in \"Authentication\"\n\n  (props [@remik][gh-remik], [#99][gh-99])\n\n- Contextually check for a valid transport\n\n  (props [@ozh][gh-ozh], [#101][gh-101])\n\n- Follow relative redirects correctly\n\n  (props [@ozh][gh-ozh], [#103][gh-103])\n\n- Use cURL's version_number\n\n  (props [@mishan][gh-mishan], [#104][gh-104])\n\n- Removed duplicated option docs\n\n  (props [@staabm][gh-staabm], [#112][gh-112])\n\n- code styling fixed\n\n  (props [@imsaintx][gh-imsaintx], [#113][gh-113])\n\n- Fix IRI \"normalization\"\n\n  (props [@ozh][gh-ozh], [#128][gh-128])\n\n- Mention two PHP extension dependencies in the README.\n\n  (props [@orlitzky][gh-orlitzky], [#136][gh-136])\n\n- Ignore coverage report files\n\n  (props [@ozh][gh-ozh], [#148][gh-148])\n\n- drop obsolete \"return\" after throw\n\n  (props [@staabm][gh-staabm], [#150][gh-150])\n\n- Updated exception message to specify both http + https\n\n  (props [@beutnagel][gh-beutnagel], [#162][gh-162])\n\n- Sets `stream_headers` method to public to allow calling it from other\nplaces.\n\n  (props [@adri][gh-adri], [#158][gh-158])\n\n- Remove duplicated stream_get_meta_data call\n\n  (props [@rmccue][gh-rmccue], [#179][gh-179])\n\n- Transmits $errno from stream_socket_client in exception\n\n  (props [@laurentmartelli][gh-laurentmartelli], [#174][gh-174])\n\n- Correct methods to use snake_case\n\n  (props [@rmccue][gh-rmccue], [#184][gh-184])\n\n- Improve code quality\n\n  (props [@rmccue][gh-rmccue], [#186][gh-186])\n\n- Update Build Status image\n\n  (props [@rmccue][gh-rmccue], [#187][gh-187])\n\n- Fix/Rationalize transports (v2)\n\n  (props [@rmccue][gh-rmccue], [#188][gh-188])\n\n- Surface cURL errors\n\n  (props [@ifwe][gh-ifwe], [#194][gh-194])\n\n- Fix for memleak and curl_close() never being called\n\n  (props [@kwuerl][gh-kwuerl], [#200][gh-200])\n\n- addex how to install with composer\n\n  (props [@royopa][gh-royopa], [#164][gh-164])\n\n- Uppercase the method to ensure compatibility\n\n  (props [@rmccue][gh-rmccue], [#207][gh-207])\n\n- Store default certificate path\n\n  (props [@rmccue][gh-rmccue], [#210][gh-210])\n\n- Force closing keep-alive connections on old cURL\n\n  (props [@rmccue][gh-rmccue], [#211][gh-211])\n\n- Docs: Updated HTTP links with HTTPS links where applicable\n\n  (props [@ntwb][gh-ntwb], [#215][gh-215])\n\n- Remove the executable bit\n\n  (props [@ocean90][gh-ocean90], [#224][gh-224])\n\n- Change more links to HTTPS\n\n  (props [@rmccue][gh-rmccue], [#217][gh-217])\n\n- Bail from cURL when either `curl_init()` OR `curl_exec()` are unavailable\n\n  (props [@dd32][gh-dd32], [#230][gh-230])\n\n- Disable OpenSSL's internal peer_name checking when `verifyname` is disabled.\n\n  (props [@dd32][gh-dd32], [#239][gh-239])\n\n- Only include the port number in the `Host` header when it differs from\ndefault\n\n  (props [@dd32][gh-dd32], [#238][gh-238])\n\n- Respect port if specified for HTTPS connections\n\n  (props [@dd32][gh-dd32], [#237][gh-237])\n\n- Allow paths starting with a double-slash\n\n  (props [@rmccue][gh-rmccue], [#240][gh-240])\n\n- Fixes bug in rfc2616 #3.6.1 implementation.\n\n  (props [@stephenharris][gh-stephenharris], [#236][gh-236], [#3][gh-3])\n\n- CURLOPT_HTTPHEADER在php7接受空数组导致php-fpm奔溃\n\n  (props [@qibinghua][gh-qibinghua], [#219][gh-219])\n\n[gh-3]: https://github.com/WordPress/Requests/issues/3\n[gh-75]: https://github.com/WordPress/Requests/issues/75\n[gh-86]: https://github.com/WordPress/Requests/issues/86\n[gh-92]: https://github.com/WordPress/Requests/issues/92\n[gh-97]: https://github.com/WordPress/Requests/issues/97\n[gh-99]: https://github.com/WordPress/Requests/issues/99\n[gh-101]: https://github.com/WordPress/Requests/issues/101\n[gh-103]: https://github.com/WordPress/Requests/issues/103\n[gh-104]: https://github.com/WordPress/Requests/issues/104\n[gh-106]: https://github.com/WordPress/Requests/issues/106\n[gh-107]: https://github.com/WordPress/Requests/issues/107\n[gh-112]: https://github.com/WordPress/Requests/issues/112\n[gh-113]: https://github.com/WordPress/Requests/issues/113\n[gh-120]: https://github.com/WordPress/Requests/issues/120\n[gh-124]: https://github.com/WordPress/Requests/issues/124\n[gh-128]: https://github.com/WordPress/Requests/issues/128\n[gh-130]: https://github.com/WordPress/Requests/issues/130\n[gh-132]: https://github.com/WordPress/Requests/issues/132\n[gh-136]: https://github.com/WordPress/Requests/issues/136\n[gh-148]: https://github.com/WordPress/Requests/issues/148\n[gh-150]: https://github.com/WordPress/Requests/issues/150\n[gh-156]: https://github.com/WordPress/Requests/issues/156\n[gh-158]: https://github.com/WordPress/Requests/issues/158\n[gh-162]: https://github.com/WordPress/Requests/issues/162\n[gh-164]: https://github.com/WordPress/Requests/issues/164\n[gh-170]: https://github.com/WordPress/Requests/issues/170\n[gh-172]: https://github.com/WordPress/Requests/issues/172\n[gh-174]: https://github.com/WordPress/Requests/issues/174\n[gh-176]: https://github.com/WordPress/Requests/issues/176\n[gh-177]: https://github.com/WordPress/Requests/issues/177\n[gh-179]: https://github.com/WordPress/Requests/issues/179\n[gh-180]: https://github.com/WordPress/Requests/issues/180\n[gh-181]: https://github.com/WordPress/Requests/issues/181\n[gh-183]: https://github.com/WordPress/Requests/issues/183\n[gh-184]: https://github.com/WordPress/Requests/issues/184\n[gh-185]: https://github.com/WordPress/Requests/issues/185\n[gh-186]: https://github.com/WordPress/Requests/issues/186\n[gh-187]: https://github.com/WordPress/Requests/issues/187\n[gh-188]: https://github.com/WordPress/Requests/issues/188\n[gh-194]: https://github.com/WordPress/Requests/issues/194\n[gh-196]: https://github.com/WordPress/Requests/issues/196\n[gh-200]: https://github.com/WordPress/Requests/issues/200\n[gh-202]: https://github.com/WordPress/Requests/issues/202\n[gh-203]: https://github.com/WordPress/Requests/issues/203\n[gh-205]: https://github.com/WordPress/Requests/issues/205\n[gh-206]: https://github.com/WordPress/Requests/issues/206\n[gh-207]: https://github.com/WordPress/Requests/issues/207\n[gh-210]: https://github.com/WordPress/Requests/issues/210\n[gh-211]: https://github.com/WordPress/Requests/issues/211\n[gh-215]: https://github.com/WordPress/Requests/issues/215\n[gh-216]: https://github.com/WordPress/Requests/issues/216\n[gh-217]: https://github.com/WordPress/Requests/issues/217\n[gh-219]: https://github.com/WordPress/Requests/issues/219\n[gh-223]: https://github.com/WordPress/Requests/issues/223\n[gh-224]: https://github.com/WordPress/Requests/issues/224\n[gh-227]: https://github.com/WordPress/Requests/issues/227\n[gh-230]: https://github.com/WordPress/Requests/issues/230\n[gh-236]: https://github.com/WordPress/Requests/issues/236\n[gh-237]: https://github.com/WordPress/Requests/issues/237\n[gh-238]: https://github.com/WordPress/Requests/issues/238\n[gh-239]: https://github.com/WordPress/Requests/issues/239\n[gh-240]: https://github.com/WordPress/Requests/issues/240\n\n1.6.0\n-----\n- [Add multiple request support][#23] - Send multiple HTTP requests with both\n  fsockopen and cURL, transparently falling back to synchronous when\n  not supported.\n\n- [Add proxy support][#70] - HTTP proxies are now natively supported via a\n  [high-level API][docs/proxy]. Major props to Ozh for his fantastic work\n  on this.\n\n- [Verify host name for SSL requests][#63] - Requests is now the first and only\n  standalone HTTP library to fully verify SSL hostnames even with socket\n  connections. Thanks to Michael Adams, Dion Hulse, Jon Cave, and Pádraic Brady\n  for reviewing the crucial code behind this.\n\n- [Add cookie support][#64] - Adds built-in support for cookies (built entirely\n  as a high-level API)\n\n- [Add sessions][#62] - To compliment cookies, [sessions][docs/usage-advanced]\n  can be created with a base URL and default options, plus a shared cookie jar.\n\n- Add [PUT][#1], [DELETE][#3], and [PATCH][#2] request support\n\n- [Add Composer support][#6] - You can now install Requests via the\n  `rmccue/requests` package on Composer\n\n[docs/proxy]: https://requests.ryanmccue.info/docs/proxy.html\n[docs/usage-advanced]: https://requests.ryanmccue.info/docs/usage-advanced.html\n\n[#1]: https://github.com/WordPress/Requests/issues/1\n[#2]: https://github.com/WordPress/Requests/issues/2\n[#3]: https://github.com/WordPress/Requests/issues/3\n[#6]: https://github.com/WordPress/Requests/issues/6\n[#9]: https://github.com/WordPress/Requests/issues/9\n[#23]: https://github.com/WordPress/Requests/issues/23\n[#62]: https://github.com/WordPress/Requests/issues/62\n[#63]: https://github.com/WordPress/Requests/issues/63\n[#64]: https://github.com/WordPress/Requests/issues/64\n[#70]: https://github.com/WordPress/Requests/issues/70\n\n[View all changes][https://github.com/WordPress/Requests/compare/v1.5.0...v1.6.0]\n\n1.5.0\n-----\nInitial release!\n\n[gh-aaronjorbin]: https://github.com/aaronjorbin\n[gh-adri]: https://github.com/adri\n[gh-alpipego]: https://github.com/alpipego/\n[gh-amandato]: https://github.com/amandato\n[gh-ayesh]: https://github.com/Ayesh\n[gh-beutnagel]: https://github.com/beutnagel\n[gh-carlalexander]: https://github.com/carlalexander\n[gh-catharsisjelly]: https://github.com/catharsisjelly\n[gh-ccrims0n]: https://github.com/ccrims0n\n[gh-costdev]: https://github.com/costdev\n[gh-datagutten]: https://github.com/datagutten\n[gh-dustinrue]: https://github.com/dustinrue\n[gh-dd32]: https://github.com/dd32\n[gh-desrosj]: https://github.com/desrosj\n[gh-gstrauss]: https://github.com/gstrauss\n[gh-ifwe]: https://github.com/ifwe\n[gh-imsaintx]: https://github.com/imsaintx\n[gh-jegrandet]: https://github.com/jegrandet\n[gh-JustinyAhin]: https://github.com/JustinyAhin\n[gh-jrfnl]: https://github.com/jrfnl\n[gh-KasperFranz]: https://github.com/KasperFranz\n[gh-kwuerl]: https://github.com/kwuerl\n[gh-laszlof]: https://github.com/laszlof\n[gh-laurentmartelli]: https://github.com/laurentmartelli\n[gh-mbabker]: https://github.com/mbabker\n[gh-mircobabini]: https://github.com/mircobabini\n[gh-mishan]: https://github.com/mishan\n[gh-ntwb]: https://github.com/ntwb\n[gh-ocean90]: https://github.com/ocean90\n[gh-orlitzky]: https://github.com/orlitzky\n[gh-ozh]: https://github.com/ozh\n[gh-patmead]: https://github.com/patmead\n[gh-peterwilsoncc]: https://github.com/peterwilsoncc\n[gh-qibinghua]: https://github.com/qibinghua\n[gh-remik]: https://github.com/remik\n[gh-rmccue]: https://github.com/rmccue\n[gh-royopa]: https://github.com/royopa\n[gh-schlessera]: https://github.com/schlessera\n[gh-SergeyBiryukov]: https://github.com/SergeyBiryukov\n[gh-SlikNL]: https://github.com/SlikNL\n[gh-soulseekah]: https://github.com/soulseekah\n[gh-staabm]: https://github.com/staabm\n[gh-stephenharris]: https://github.com/stephenharris\n[gh-szepeviktor]: https://github.com/szepeviktor\n[gh-TimothyBJacobs]: https://github.com/TimothyBJacobs\n[gh-tnorthcutt]: https://github.com/tnorthcutt\n[gh-todeveni]: https://github.com/todeveni\n[gh-tomsommer]: https://github.com/tomsommer\n[gh-tonebender]: https://github.com/tonebender\n[gh-twdnhfr]: https://github.com/twdnhfr\n[gh-TysonAndre]: https://github.com/TysonAndre\n[gh-whyisjake]: https://github.com/whyisjake\n[gh-wojsmol]: https://github.com/wojsmol\n[gh-xknown]: https://github.com/xknown\n[gh-Zegnat]: https://github.com/Zegnat\n[gh-ZsgsDesign]: https://github.com/ZsgsDesign\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 2.3037109375,
          "content": "Requests\n========\n\nCopyright (c) 2010-2012 Ryan McCue and contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\nComplexPie IRI Parser\n=====================\n\nCopyright (c) 2007-2010, Geoffrey Sneddon and Steve Minutillo.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n * Neither the name of the SimplePie Team nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7509765625,
          "content": "Requests for PHP\n================\n\n[![CS](https://github.com/WordPress/Requests/actions/workflows/cs.yml/badge.svg)](https://github.com/WordPress/Requests/actions/workflows/cs.yml)\n[![Lint](https://github.com/WordPress/Requests/actions/workflows/lint.yml/badge.svg)](https://github.com/WordPress/Requests/actions/workflows/lint.yml)\n[![Test](https://github.com/WordPress/Requests/actions/workflows/test.yml/badge.svg)](https://github.com/WordPress/Requests/actions/workflows/test.yml)\n[![codecov.io](https://codecov.io/gh/WordPress/Requests/branch/stable/graph/badge.svg?token=AfpxK7WMxj&branch=stable)](https://codecov.io/gh/WordPress/Requests?branch=stable)\n\nRequests is a HTTP library written in PHP, for human beings. It is roughly\nbased on the API from the excellent [Requests Python\nlibrary](http://python-requests.org/). Requests is [ISC\nLicensed](https://github.com/WordPress/Requests/blob/stable/LICENSE) (similar to\nthe new BSD license) and has no dependencies, except for PHP 5.6.20+.\n\nDespite PHP's use as a language for the web, its tools for sending HTTP requests\nare severely lacking. cURL has an\n[interesting API](https://www.php.net/curl-setopt), to say the\nleast, and you can't always rely on it being available. Sockets provide only low\nlevel access, and require you to build most of the HTTP response parsing\nyourself.\n\nWe all have better things to do. That's why Requests was born.\n\n```php\n$headers = array('Accept' => 'application/json');\n$options = array('auth' => array('user', 'pass'));\n$request = WpOrg\\Requests\\Requests::get('https://api.github.com/gists', $headers, $options);\n\nvar_dump($request->status_code);\n// int(200)\n\nvar_dump($request->headers['content-type']);\n// string(31) \"application/json; charset=utf-8\"\n\nvar_dump($request->body);\n// string(26891) \"[...]\"\n```\n\nRequests allows you to send  **HEAD**, **GET**, **POST**, **PUT**, **DELETE**, \nand **PATCH** HTTP requests. You can add headers, form data, multipart files, \nand parameters with basic arrays, and access the response data in the same way.\nRequests uses cURL and fsockopen, depending on what your system has available, \nbut abstracts all the nasty stuff out of your way, providing a consistent API.\n\n\nFeatures\n--------\n\n- International Domains and URLs\n- Browser-style SSL Verification\n- Basic/Digest Authentication\n- Automatic Decompression\n- Connection Timeouts\n\n\nInstallation\n------------\n\n### Install with Composer\nIf you're using [Composer](https://getcomposer.org/) to manage\ndependencies, you can add Requests with it.\n\n```sh\ncomposer require rmccue/requests\n```\n\nor\n```json\n{\n    \"require\": {\n        \"rmccue/requests\": \"^2.0\"\n    }\n}\n```\n\n### Install source from GitHub\nTo install the source code:\n```bash\n$ git clone git://github.com/WordPress/Requests.git\n```\n\nNext, include the autoloader in your scripts:\n```php\nrequire_once '/path/to/Requests/src/Autoload.php';\n```\n\nYou'll probably also want to register the autoloader:\n```php\nWpOrg\\Requests\\Autoload::register();\n```\n\n### Install source from zip/tarball\nAlternatively, you can fetch a [tarball][] or [zipball][]:\n\n```bash\n$ curl -L https://github.com/WordPress/Requests/tarball/stable | tar xzv\n(or)\n$ wget https://github.com/WordPress/Requests/tarball/stable -O - | tar xzv\n```\n\n[tarball]: https://github.com/WordPress/Requests/tarball/stable\n[zipball]: https://github.com/WordPress/Requests/zipball/stable\n\n\n### Using a Class Loader\nIf you're using a class loader (e.g., [Symfony Class Loader][]) for\n[PSR-4][]-style class loading:\n```php\n$loader = new Psr4ClassLoader();\n$loader->addPrefix('WpOrg\\\\Requests\\\\', 'path/to/vendor/Requests/src');\n$loader->register();\n```\n\n[Symfony Class Loader]: https://github.com/symfony/ClassLoader\n[PSR-4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4.md\n\n\nDocumentation\n-------------\nThe best place to start is our [prose-based documentation][], which will guide\nyou through using Requests.\n\nAfter that, take a look at [the documentation for\n`\\WpOrg\\Requests\\Requests::request()`][request_method], where all the parameters are fully\ndocumented.\n\nRequests is [100% documented with PHPDoc](https://requests.ryanmccue.info/api-2.x/).\nIf you find any problems with it, [create a new\nissue](https://github.com/WordPress/Requests/issues/new)!\n\n[prose-based documentation]: https://github.com/WordPress/Requests/blob/stable/docs/README.md\n[request_method]: https://requests.ryanmccue.info/api-2.x/classes/WpOrg-Requests-Requests.html#method_request\n\n\nTest Coverage\n-------------\n\nRequests strives to have 100% code-coverage of the library with an extensive\nset of tests. We're not quite there yet, but [we're getting close][codecov].\n\n[codecov]: https://codecov.io/github/WordPress/Requests/\n\n\nRequests and PSR-7/PSR-18\n-------------------------\n\n[PSR-7][psr-7] describes common interfaces for representing HTTP messages.\n[PSR-18][psr-18] describes a common interface for sending HTTP requests and receiving HTTP responses.\n\nBoth PSR-7 as well as PSR-18 were created after Requests' conception.\nAt this time, there is no intention to add a native PSR-7/PSR-18 implementation to the Requests library.\n\nHowever, the amazing [Artur Weigandt][art4] has created a [package][requests-psr-18], which allows you to use Requests as a PSR-7 compatible PSR-18 HTTP Client.\nIf you are interested in a PSR-7/PSR-18 compatible version of Requests, we highly recommend you check out [this package][requests-psr-18].\n\n[psr-7]:           https://www.php-fig.org/psr/psr-7/\n[psr-18]:          https://www.php-fig.org/psr/psr-18/\n[art4]:            https://github.com/Art4\n[requests-psr-18]: https://packagist.org/packages/art4/requests-psr18-adapter\n\n\nContribute\n----------\n\nContributions to this library are very welcome. Please read the [Contributing guidelines][] to get started.\n\n[Contributing guidelines]: https://github.com/WordPress/Requests/blob/develop/.github/CONTRIBUTING.md\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "certificates",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.123046875,
          "content": "{\n  \"name\": \"rmccue/requests\",\n  \"description\": \"A HTTP library written in PHP, for human beings.\",\n  \"license\": \"ISC\",\n  \"type\": \"library\",\n  \"keywords\": [\n    \"http\",\n    \"idna\",\n    \"iri\",\n    \"ipv6\",\n    \"curl\",\n    \"sockets\",\n    \"fsockopen\"\n  ],\n  \"authors\": [\n    {\n      \"name\": \"Ryan McCue\",\n      \"homepage\": \"https://rmccue.io/\"\n    },\n    {\n      \"name\": \"Alain Schlesser\",\n      \"homepage\": \"https://github.com/schlessera\"\n    },\n    {\n      \"name\": \"Juliette Reinders Folmer\",\n      \"homepage\": \"https://github.com/jrfnl\"\n    },\n    {\n      \"name\": \"Contributors\",\n      \"homepage\": \"https://github.com/WordPress/Requests/graphs/contributors\"\n    }\n  ],\n  \"homepage\": \"https://requests.ryanmccue.info/\",\n  \"support\": {\n    \"issues\": \"https://github.com/WordPress/Requests/issues\",\n    \"source\": \"https://github.com/WordPress/Requests\",\n    \"docs\": \"https://requests.ryanmccue.info/\"\n  },\n  \"require\": {\n    \"php\": \">=5.6.20\",\n    \"ext-json\": \"*\"\n  },\n  \"require-dev\": {\n    \"php-parallel-lint/php-console-highlighter\": \"^1.0.0\",\n    \"php-parallel-lint/php-parallel-lint\": \"^1.3.2\",\n    \"phpcompatibility/php-compatibility\": \"^9.0\",\n    \"requests/test-server\": \"dev-main\",\n    \"roave/security-advisories\": \"dev-latest\",\n    \"wp-coding-standards/wpcs\": \"^3.0\",\n    \"yoast/phpunit-polyfills\": \"^2.0.0\"\n  },\n  \"suggest\": {\n    \"ext-curl\": \"For improved performance\",\n    \"ext-openssl\": \"For secure transport support\",\n    \"ext-zlib\": \"For improved performance when decompressing encoded streams\",\n    \"art4/requests-psr18-adapter\": \"For using Requests as a PSR-18 HTTP Client\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"WpOrg\\\\Requests\\\\\": \"src/\"\n    },\n    \"classmap\": [\n      \"library/Requests.php\"\n    ],\n    \"files\": [\n      \"library/Deprecated.php\"\n    ]\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"WpOrg\\\\Requests\\\\Tests\\\\\": \"tests/\"\n    }\n  },\n  \"config\": {\n    \"allow-plugins\": {\n      \"dealerdirect/phpcodesniffer-composer-installer\": true\n    }\n  },\n  \"scripts\": {\n    \"lint\": [\n      \"@php ./vendor/php-parallel-lint/php-parallel-lint/parallel-lint . --show-deprecated -e php --exclude vendor --exclude .git\"\n    ],\n    \"checkcs\": [\n      \"@php ./vendor/squizlabs/php_codesniffer/bin/phpcs\"\n    ],\n    \"fixcs\": [\n      \"@php ./vendor/squizlabs/php_codesniffer/bin/phpcbf\"\n    ],\n    \"test\": [\n      \"@php ./vendor/phpunit/phpunit/phpunit --no-coverage\"\n    ],\n    \"test10\": [\n      \"@php ./vendor/phpunit/phpunit/phpunit -c phpunit10.xml.dist --no-coverage\"\n    ],\n    \"coverage\": [\n      \"@php ./vendor/phpunit/phpunit/phpunit\"\n    ],\n    \"coverage10\": [\n      \"@php ./vendor/phpunit/phpunit/phpunit -c phpunit10.xml.dist\"\n    ]\n  },\n  \"scripts-descriptions\": {\n    \"lint\": \"Lint PHP files to find parse errors.\",\n    \"checkcs\": \"Check the entire codebase for code-style issues.\",\n    \"fixcs\": \"Fix all auto-fixable code-style issues in the entire codebase.\",\n    \"test\": \"Run the unit tests on PHPUnit 5.x - 9.x without code coverage.\",\n    \"test10\": \"Run the unit tests on PHPUnit 10.x without code coverage.\",\n    \"coverage\": \"Run the unit tests on PHPUnit 5.x - 9.x with code coverage.\",\n    \"coverage10\": \"Run the unit tests on PHPUnit 10.x with code coverage.\"\n  }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpdoc.dist.xml",
          "type": "blob",
          "size": 0.916015625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<phpdocumentor\n    configVersion=\"3\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://www.phpdoc.org\"\n    xsi:noNamespaceSchemaLocation=\"https://docs.phpdoc.org/latest/phpdoc.xsd\"\n>\n\n    <title>Requests #.#.# API</title>\n\n    <paths>\n        <output>build/ghpages/artifacts/api-2.x/</output>\n        <cache>build/ghpages/.phpdoc/</cache>\n    </paths>\n\n    <version number=\"latest\">\n        <api format=\"php\">\n            <source dsn=\".\">\n                <path>src</path>\n            </source>\n            <visibility>public</visibility>\n            <visibility>protected</visibility>\n            <ignore-tags>\n                <ignore-tag>codeCoverageIgnore</ignore-tag>\n                <ignore-tag>phpcs</ignore-tag>\n                <ignore-tag>todo</ignore-tag>\n            </ignore-tags>\n        </api>\n    </version>\n\n    <template name=\"default\"/>\n\n</phpdocumentor>\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.7275390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/7.5/phpunit.xsd\"\n\tbackupGlobals=\"true\"\n\tbootstrap=\"tests/bootstrap.php\"\n\tbeStrictAboutTestsThatDoNotTestAnything=\"true\"\n\tconvertDeprecationsToExceptions=\"true\"\n\tcolors=\"true\"\n\tverbose=\"true\"\n\t>\n\t<testsuites>\n\t\t<testsuite name=\"RequestsTests\">\n\t\t\t<directory suffix=\"Test.php\">tests</directory>\n\t\t</testsuite>\n\t</testsuites>\n\n\t<logging>\n\t\t<log type=\"coverage-html\" target=\"tests/coverage\" lowUpperBound=\"35\" highLowerBound=\"90\"/>\n\t</logging>\n\n\t<filter>\n\t\t<whitelist addUncoveredFilesFromWhitelist=\"true\">\n\t\t\t<directory suffix=\".php\">src</directory>\n\t\t</whitelist>\n\t</filter>\n</phpunit>\n"
        },
        {
          "name": "phpunit10.xml.dist",
          "type": "blob",
          "size": 1.044921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de/10.1/phpunit.xsd\"\n\tbackupGlobals=\"true\"\n\tbootstrap=\"tests/bootstrap.php\"\n\tbeStrictAboutTestsThatDoNotTestAnything=\"true\"\n\tcolors=\"true\"\n\tdisplayDetailsOnTestsThatTriggerErrors=\"true\"\n\tdisplayDetailsOnTestsThatTriggerWarnings=\"true\"\n\tdisplayDetailsOnTestsThatTriggerNotices=\"true\"\n\tdisplayDetailsOnTestsThatTriggerDeprecations=\"true\"\n\tdisplayDetailsOnIncompleteTests=\"true\"\n\tdisplayDetailsOnSkippedTests=\"true\"\n\tfailOnWarning=\"true\"\n\tfailOnNotice=\"true\"\n\tfailOnDeprecation=\"true\"\n\t>\n\t<testsuites>\n\t\t<testsuite name=\"RequestsTests\">\n\t\t\t<directory suffix=\"Test.php\">tests</directory>\n\t\t</testsuite>\n\t</testsuites>\n\n\t<source>\n\t\t<include>\n\t\t\t<directory suffix=\".php\">./src/</directory>\n\t\t</include>\n\t</source>\n\n\t<coverage includeUncoveredFiles=\"true\" ignoreDeprecatedCodeUnits=\"true\">\n\t\t<report>\n\t\t\t<html outputDirectory=\"tests/coverage\" lowUpperBound=\"35\" highLowerBound=\"90\"/>\n\t\t</report>\n\t</coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}