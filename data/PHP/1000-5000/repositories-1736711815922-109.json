{
  "metadata": {
    "timestamp": 1736711815922,
    "page": 109,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/oauth2-client",
      "stars": 3675,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4921875,
          "content": "/.gitattributes             export-ignore\n/.github/                   export-ignore\n/.gitignore                 export-ignore\n/CHANGELOG.md               export-ignore\n/codecov.yml                export-ignore\n/CODE_OF_CONDUCT.md         export-ignore\n/CONTRIBUTING.md            export-ignore\n/CREDITS.md                 export-ignore\n/docs/                      export-ignore\n/phpunit.xml                export-ignore\n/README.PROVIDER-GUIDE.md   export-ignore\n/test/                      export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.109375,
          "content": "vendor/\ncomposer.lock\ncomposer.phar\n.DS_Store\ntesting/\nnbproject/private/\ntest/log\nbuild\n/.phpunit.result.cache\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.3671875,
          "content": "# OAuth 2.0 Client Changelog\n\n## 2.8.0\n\n_Released: 2024-12-11_\n\n* This version is certified for PHP 8.3 and PHP 8.4! ðŸŽ‰\n* Fix cases where `expires` is not a number [#929](https://github.com/thephpleague/oauth2-client/pull/929)\n* Add `SettableRefreshTokenInterface` to support setting the refresh token\n  [#994](https://github.com/thephpleague/oauth2-client/pull/994)\n* Set minimum version of Guzzle to 6.5.8 and 7.4.5, due to security vulnerabilities\n  reported in earlier versions [#1022](https://github.com/thephpleague/oauth2-client/issues/1022)\n* Fix parameter docblock type hint for `AbstractProvider::prepareAccessTokenResponse()`\n  [#1025](https://github.com/thephpleague/oauth2-client/pull/1025)\n  * Take note, this might affect static analysis reports for downstream providers\n* Send scopes with access token request [#1029](https://github.com/thephpleague/oauth2-client/issues/1029)\n  [#1030](https://github.com/thephpleague/oauth2-client/pull/1030)\n* Explicitly mark nullable parameter [#1034](https://github.com/thephpleague/oauth2-client/pull/1034)\n  [#1039](https://github.com/thephpleague/oauth2-client/pull/1039)\n  * This change requires PHP 7.1 as the minimum version for this library\n* Plus a number of test and documentation improvements; see the\n  [commit log](https://github.com/thephpleague/oauth2-client/compare/2.7.0...2.8.0)\n  for more details\n\n## 2.7.0\n\n_Released: 2023-04-16_\n\n* Add support for PKCE (Proof Key for Code Exchange,\n  [RFC 7636](https://www.rfc-editor.org/rfc/rfc7636))\n  [#901](https://github.com/thephpleague/oauth2-client/pull/901)\n* Various type improvements for static analysis\n  [#939](https://github.com/thephpleague/oauth2-client/pull/939)\n  [#959](https://github.com/thephpleague/oauth2-client/pull/959)\n  [#972](https://github.com/thephpleague/oauth2-client/pull/972)\n  [#997](https://github.com/thephpleague/oauth2-client/pull/997)\n\n## 2.6.1\n\n_Released: 2021-12-22_\n\n* Fix deprecation notices, providing full support for PHP 8.1\n  [#919](https://github.com/thephpleague/oauth2-client/pull/919)\n  [#920](https://github.com/thephpleague/oauth2-client/pull/920)\n\n## 2.6.0\n\n_Released: 2020-10-27_\n\n* Indicate support for PHP 8\n* Allow time to be set for testing purposes\n  [#852](https://github.com/thephpleague/oauth2-client/pull/852)\n\n## 2.5.0\n\n_Released: 2020-07-18_\n\n* Allow Guzzle 7.x to be used [#847](https://github.com/thephpleague/oauth2-client/pull/847)\n\n## 2.4.1\n\n_Released: 2018-11-22_\n\n* Revert to use of `AccessToken` in type hints to preserve backwards\n  compatibility; this fixes the issue reported in [#752](https://github.com/thephpleague/oauth2-client/issues/752)\n  and [#753](https://github.com/thephpleague/oauth2-client/issues/753)\n\n## 2.4.0\n\n_Released: 2018-11-21_\n\n* Add `HttpBasicAuthOptionProvider` to ease implementation for providers\n  requiring HTTP basic auth\n* Add `GuardedPropertyTrait` to allow providers the ability to specify\n  properties that may not be overridden by user-defined values passed to the\n  provider constructor\n* Add `AccessTokenInterface` and `ResourceOwnerAccessTokenInterface` to allow\n  providers the ability to override the default `AccessToken`\n\n## 2.3.1\n\n_Released: 2018-11-19_\n\n* Allow paragonie/random_compat's empty 9.99.99 placeholder\n* Throw an `UnexpectedValueException` on non-JSON responses from access token\n  request (when calling `AbstractProvider::getAccessToken()`)\n\n## 2.3.0\n\n_Released: 2018-01-13_\n\n* Add `ProviderRedirectTrait` tool for 3rd-party provider libraries to use when\n  handling provider redirections\n* Fix TypeError thrown because `getResourceOwner()` receives a non-JSON Response\n* Gracefully handle non-standard errors received from providers\n* Update README to reflect official support of PHP 7.2\n\n## 2.2.1\n\n_Released: 2017-04-25_\n\n* Fix potential type error when HTTP 500 errors are encountered\n* Allow broader range of `random_compat` versions\n\n## 2.2.0\n\n_Released: 2017-02-01_\n\n* Allow base URLs to contain query parameters\n* Protect against `+` being improperly encoded in URL parameters\n* Remove misleading `state` option from authorization parameters\n* Stop generating more random bytes than necessary\n\n## 2.1.0\n\n_Released: 2017-01-24_\n\n* Allow `expires_in` with a value of `0`\n\n## 2.0.0\n\n_Released: 2017-01-12_\n\n* Rename `getResponse()` to `getParsedResponse()`\n* Add `getResponse()` method that returns the unparsed PSR-7 `Response` instance\n* Removed `RandomFactory`, switched to native random functions\n\n## 1.4.1\n\n_Released: 2016-04-29_\n\n* Add `QueryBuilderTrait` to standardize query string generation.\n\n## 1.4.0\n\n_Released: 2016-04-19_\n\n* Add `AccessToken::getValues()` to access additional vendor data provided with tokens.\n\n## 1.3.0\n\n_Released: 2016-02-13_\n\n* Enable dynamic parameters being passed into the authorization URL.\n* Minor documentation updates.\n\n## 1.2.0\n\n_Released: 2016-01-23_\n\n* Add `resource_owner_id` to the JSON-serialized representation of the access token.\n* Minor documentation updates and improved test coverage.\n\n## 1.1.0\n\n_Released: 2015-11-13_\n\n* Add `ArrayAccessorTrait`, update `AbstractProvider` to utilize.\n* Use `expires` to serialize access tokens.\n* Documentation updates.\n\n## 1.0.2\n\n_Released: 2015-09-22_\n\n* Allow access tokens to be created from storage (see #431).\n* Minor fixes and documentation updates.\n\n## 1.0.1\n\n_Released: 2015-08-26_\n\n* Allow required parameters checked using the `RequiredParameterTrait` to be set as `false`, `null`, `\"0\"`, etc.\n\n## 1.0.0\n\n_Released: 2015-08-19_\n\n* We are running code-quality builds through Scrutinizer, and we are running unit test builds on the new Travis CI container-based infrastructure.\n* Cleaned up code, as recommended by Scrutinizer.\n* Documentation updates.\n\n## 1.0.0-beta2\n\n_Released: 2015-08-12_\n\n* BREAK: Add toArray() to ResourceOwnerInterface.\n* Always attempt to parse responses as JSON and fallback on failure.\n* Add dot notation support to access token resource owner ID.\n* Use the Bearer authorization header for the generic provider.\n* Documentation updates.\n\n## 1.0.0-beta1\n\n_Released: 2015-07-16_\n\n* API for 1.0 is now frozen!\n* BREAK: Convert all uses of \"User\" to \"ResourceOwner\" to more closely match the OAuth 2.0 specification.\n* BREAK: Rename `StandardProvider` to `GenericProvider`.\n* BREAK: Move access token creation to the `AbstractProvider`. It was previously handled in the `AbstractGrant`.\n* FIX: Add `Content-Type` header with value of `application/x-www-form-urlencoded` to the request header when retrieving access tokens. This adheres to the OAuth 2.0 specification and fixes issues where certain OAuth servers expect this header.\n* Enhanced `json_encode()` serialization of AccessToken; when using `json_encode()` on an AccessToken, it will return a JSON object with these properties: `access_token`, `refresh_token`, and `expires_in`.\n\n## 1.0.0-alpha2\n\n_Released: 2015-07-04_\n\n* BREAK: Renamed `AbstractProvider::ACCESS_TOKEN_METHOD_GET` to `AbstractProvider::METHOD_GET`.\n* BREAK: Renamed `AbstractProvider::ACCESS_TOKEN_METHOD_POST` to `AbstractProvider::METHOD_POST`.\n* BREAK: Renamed `AbstractProvider::prepareUserDetails()` to `AbstractProvider::createUser()`.\n* BREAK: Renamed `AbstractProvider::getUserDetails()` to `AbstractProvider::getUser()`.\n* BREAK: Removed `$token` parameter from `AbstractProvider::getDefaultHeaders()`.\n* BREAK: Modify `AbstractProvider::getBaseAccessTokenUrl()` to accept a required array of parameters, allowing providers the ability to vary the access token URL, based on the parameters.\n* Removed newline characters from MAC Authorization header.\n* Documentation updates, notably:\n  - Moved list of providers to `README.PROVIDERS.md`.\n  - Moved provider creation notes to `README.PROVIDER-GUIDE.md`.\n\n## 1.0.0-alpha1\n\n_Released: 2015-06-25_\n\nThis release contains numerous BC breaks from the 0.x series. Please note these breaks and refer to the [upgrade guide](GUIDE-UPGRADING.md).\n\n* BREAK: Requires PHP 5.5.0 and greater.\n* BREAK: All providers have been moved to separate repositories, one for each provider.\n* BREAK: All `public` properties have been set as `protected` or `private` and getters/setters have been introduced for access to these properties.\n* BREAK: The `Provider\\ProviderInterface` has been removed. Please extend from and override `Provider\\AbstractProvider`.\n* BREAK: The `Entity\\User` has been removed. Providers should implement the `Provider\\UserInterface` and provide user functionality instead of expecting it in this base library.\n* BREAK: The `Grant\\GrantInterface` has been removed. Providers needing to provide a new grant type should extend from and override `Grant\\AbstractGrant`.\n* A generic `Provider\\StandardProvider` has been introduced, which may be used as a client to integrate with most OAuth 2.0 compatible servers.\n* A `Grant\\GrantFactory` has been introduced as a means to register and retrieve singleton grants from a registry.\n* Introduced traits for bearer and MAC authorization (`Tool\\BearerAuthorizationTrait` and `Tool\\MacAuthorizationTrait`), which providers may use to enable these header authorization types.\n\n## 0.12.1\n\n_Released: 2015-06-20_\n\n* FIX: Scope separators for LinkedIn and Instagram are now correctly a single space\n\n## 0.12.0\n\n_Released: 2015-06-15_\n\n* BREAK: LinkedIn Provider: Default scopes removed from LinkedIn Provider. See \"[Managing LinkedIn Scopes](https://github.com/thephpleague/oauth2-client/blob/9cea9864c2e89bce1b922d1e37ba5378b3b0b264/README.md#managing-linkedin-scopes)\" in the README for information on how to set scopes. See [#327](https://github.com/thephpleague/oauth2-client/pull/327) and [#307](https://github.com/thephpleague/oauth2-client/pull/307) for details on this change.\n* FIX: LinkedIn Provider: A scenario existed in which `publicProfileUrl` was not set, generating a PHP notice; this has been fixed.\n* FIX: Instagram Provider: Fixed scope separator.\n* Documentation updates and corrections.\n\n\n## 0.11.0\n\n_Released: 2015-04-25_\n\n* Identity Provider: Better handling of error responses\n* Documentation updates\n\n\n## 0.10.1\n\n_Released: 2015-04-02_\n\n* FIX: Invalid JSON triggering fatal error\n* FIX: Sending headers along with auth `getAccessToken()` requests\n* Now running Travis CI tests on PHP 7\n* Documentation updates\n\n\n## 0.10.0\n\n_Released: 2015-03-10_\n\n* Providers: Added `getHeaders()` to ProviderInterface and updated AbstractProvider to provide the method\n* Providers: Updated all bundled providers to support new `$authorizationHeader` property\n* Identity Provider: Update IDPException to account for empty strings\n* Identity Provider: Added `getResponseBody()` method to IDPException\n* Documentation updates, minor bug fixes, and coding standards fixes\n\n\n## 0.9.0\n\n_Released: 2015-02-24_\n\n* Add `AbstractProvider::prepareAccessTokenResult()` to provide additional token response preparation to providers\n* Remove custom provider code from AccessToken\n* Add links to README for Dropbox and Square providers\n\n\n## 0.8.1\n\n_Released: 2015-02-12_\n\n* Allow `approval_prompt` to be set by providers. This fixes an issue where some providers have problems if the `approval_prompt` is present in the query string.\n\n\n## 0.8.0\n\n_Released: 2015-02-10_\n\n* Facebook Provider: Upgrade to Graph API v2.2\n* Google Provider: Add `access_type` parameter for Google authorization URL\n* Get a more reliable response body on errors\n\n\n## 0.7.2\n\n_Released: 2015-02-03_\n\n* GitHub Provider: Fix regression\n* Documentation updates\n\n\n## 0.7.1\n\n_Released: 2015-01-06_\n\n* Google Provider: fixed issue where Google API was not returning the user ID\n\n\n## 0.7.0\n\n_Released: 2014-12-29_\n\n* Improvements to Provider\\AbstractProvider (addition of `userUid()`, `userEmail()`, and `userScreenName()`)\n* GitHub Provider: Support for GitHub Enterprise\n* GitHub Provider: Methods to allow fetching user email addresses\n* Google Provider: Updated scopes and endpoints to remove deprecated values\n* Documentation updates, minor bug fixes, and coding standards fixes\n\n\n## 0.6.0\n\n_Released: 2014-12-03_\n\n* Added ability to specify a redirect handler for providers through use of a callback (see [Provider\\AbstractProvider::setRedirectHandler()](https://github.com/thephpleague/oauth2-client/blob/55de45401eaa21f53c0b2414091da6f3b0f3fcb7/src/Provider/AbstractProvider.php#L314-L317))\n* Updated authorize and token URLs for the Microsoft provider; the old URLs had been phased out and were no longer working (see #146)\n* Increased test coverage\n* Documentation updates, minor bug fixes, and coding standards fixes\n\n\n## 0.5.0\n\n_Released: 2014-11-28_\n\n* Added `ClientCredentials` and `Password` grants\n* Added support for providers to set their own `uid` parameter key name\n* Added support for Google's `hd` (hosted domain) parameter\n* Added support for providing a custom `state` parameter to the authorization URL\n* LinkedIn `pictureUrl` is now an optional response element\n* Added Battle.net provider package link to README\n* Added Meetup provider package link to README\n* Added `.gitattributes` file\n* Increased test coverage\n* A number of documentation fixes, minor bug fixes, and coding standards fixes\n\n\n## 0.4.0\n\n_Released: 2014-10-28_\n\n* Added  `ProviderInterface` and removed `IdentityProvider`.\n* Expose generated state to allow for CSRF validation.\n* Renamed `League\\OAuth2\\Client\\Provider\\User` to `League\\OAuth2\\Client\\Entity\\User`.\n* Entity: User: added `gender` and `locale` properties\n* Updating logic for populating the token expiration time.\n\n\n## 0.3.0\n\n_Released: 2014-04-26_\n\n* This release made some huge leaps forward, including 100% unit-coverage and a bunch of new features.\n\n\n## 0.2.0\n\n_Released: 2013-05-28_\n\n* No release notes available.\n\n\n## 0.1.0\n\n_Released: 2013-05-25_\n\n* Initial release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.28515625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at https://twitter.com/thephpleague. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.857421875,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/thephpleague/oauth2-client).\n\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](http://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the README and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow SemVer. Randomly breaking public APIs is not an option.\n\n- **Create topic branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting.\n\n- **Ensure tests pass!** - Please run the tests (see below) before submitting your pull request, and make sure they pass. We won't accept a patch until all tests pass.\n\n- **Ensure no coding standards violations** - Please run PHP Code Sniffer using the PSR-2 standard (see below) before submitting your pull request. A violation will cause the build to fail, so please make sure there are no violations. We can't accept a patch if the build fails.\n\n\n## Testing\n\nThe following tests must pass for a build to be considered successful. If contributing, please ensure these pass before submitting a pull request.\n\n``` bash\n$ ./vendor/bin/parallel-lint src test\n$ ./vendor/bin/phpunit --coverage-text\n$ ./vendor/bin/phpcs src --standard=psr2 -sp\n```\n\n**Happy coding**!\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 0.55859375,
          "content": "# OAuth 2.0 Client\n\n## Authors\n\nAlso see <https://github.com/thephpleague/oauth2-client/contributors>.\n\n### Current Maintainers\n\n- [Ben Ramsey](https://github.com/ramsey)\n- [Woody Gilk](https://github.com/shadowhand)\n\n### Contributors\n\n- [Alex Bilbie](https://github.com/alexbilbie)\n- [Ben Corlett](https://github.com/bencorlett)\n- [Ben Ramsey](https://github.com/ramsey)\n- [James Mills](https://github.com/jamesmills)\n- [Phil Sturgeon](https://github.com/philsturgeon)\n- [Rudi Theunissen](https://github.com/rtheunissen)\n- [Tom Anderson](https://github.com/TomHAnderson)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.080078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013-2023 Alex Bilbie <hello@alexbilbie.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2705078125,
          "content": "# OAuth 2.0 Client\n\nThis package provides a base for integrating with [OAuth 2.0](http://oauth.net/2/) service providers.\n\n[![Gitter Chat](https://img.shields.io/badge/gitter-join_chat-brightgreen.svg?style=flat-square)](https://gitter.im/thephpleague/oauth2-client)\n[![Source Code](https://img.shields.io/badge/source-thephpleague/oauth2--client-blue.svg?style=flat-square)](https://github.com/thephpleague/oauth2-client)\n[![Latest Version](https://img.shields.io/github/release/thephpleague/oauth2-client.svg?style=flat-square)](https://github.com/thephpleague/oauth2-client/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](https://github.com/thephpleague/oauth2-client/blob/master/LICENSE)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/thephpleague/oauth2-client/continuous-integration.yml?label=CI&logo=github&style=flat-square)](https://github.com/thephpleague/oauth2-client/actions?query=workflow%3ACI)\n[![Codecov Code Coverage](https://img.shields.io/codecov/c/gh/thephpleague/oauth2-client?label=codecov&logo=codecov&style=flat-square)](https://codecov.io/gh/thephpleague/oauth2-client)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/oauth2-client.svg?style=flat-square)](https://packagist.org/packages/league/oauth2-client)\n\n---\n\nThe OAuth 2.0 login flow, seen commonly around the web in the form of \"Connect with Facebook/Google/etc.\" buttons, is a common integration added to web applications, but it can be tricky and tedious to do right. To help, we've created the `league/oauth2-client` package, which provides a base for integrating with various OAuth 2.0 providers, without overburdening your application with the concerns of [RFC 6749](http://tools.ietf.org/html/rfc6749).\n\nThis OAuth 2.0 client library will work with any OAuth 2.0 provider that conforms to the OAuth 2.0 Authorization Framework. Out-of-the-box, we provide a `GenericProvider` class to connect to any service provider that uses [Bearer tokens](http://tools.ietf.org/html/rfc6750). See our [basic usage guide](https://oauth2-client.thephpleague.com/usage/) for examples using `GenericProvider`.\n\nMany service providers provide additional functionality above and beyond the OAuth 2.0 specification. For this reason, you may extend and wrap this library to support additional behavior. There are already many [official](https://oauth2-client.thephpleague.com/providers/league/) and [third-party](https://oauth2-client.thephpleague.com/providers/thirdparty/) provider clients available (e.g., Facebook, GitHub, Google, Instagram, LinkedIn, etc.). If your provider isn't in the list, feel free to add it.\n\nThis package is compliant with [PSR-1][], [PSR-2][], [PSR-4][], and [PSR-7][]. If you notice compliance oversights, please send a patch via pull request. If you're interested in contributing to this library, please take a look at our [contributing guidelines](https://github.com/thephpleague/oauth2-client/blob/master/CONTRIBUTING.md).\n\n## Requirements\n\nWe support the following versions of PHP:\n\n* PHP 8.4\n* PHP 8.3\n* PHP 8.2\n* PHP 8.1\n* PHP 8.0\n* PHP 7.4\n* PHP 7.3\n* PHP 7.2\n* PHP 7.1\n\n## Provider Clients\n\nWe provide a list of [official PHP League provider clients](https://oauth2-client.thephpleague.com/providers/league/), as well as [third-party provider clients](https://oauth2-client.thephpleague.com/providers/thirdparty/).\n\nTo build your own provider client, please refer to \"[Implementing a Provider Client](https://oauth2-client.thephpleague.com/providers/implementing/).\"\n\n## Usage\n\nFor usage and code examples, check out our [basic usage guide](https://oauth2-client.thephpleague.com/usage/).\n\n## Contributing\n\nPlease see [our contributing guidelines](https://github.com/thephpleague/oauth2-client/blob/master/CONTRIBUTING.md) for details.\n\n## License\n\nThe MIT License (MIT). Please see [LICENSE](https://github.com/thephpleague/oauth2-client/blob/master/LICENSE) for more information.\n\n\n[PSR-1]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md\n[PSR-2]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md\n[PSR-4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md\n[PSR-7]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-7-http-message.md\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.435546875,
          "content": "codecov:\n  require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 0%\n    patch:\n      default:\n        target: auto\n        threshold: 0%\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"reach,diff,flags,tree\"\n  behavior: default\n  require_changes: false\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.251953125,
          "content": "{\n    \"name\": \"league/oauth2-client\",\n    \"description\": \"OAuth 2.0 Client Library\",\n    \"license\": \"MIT\",\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"require\": {\n        \"php\": \"^7.1 || >=8.0.0 <8.5.0\",\n        \"ext-json\": \"*\",\n        \"guzzlehttp/guzzle\": \"^6.5.8 || ^7.4.5\"\n    },\n    \"require-dev\": {\n        \"mockery/mockery\": \"^1.3.5\",\n        \"php-parallel-lint/php-parallel-lint\": \"^1.4\",\n        \"phpunit/phpunit\": \"^7 || ^8 || ^9 || ^10 || ^11\",\n        \"squizlabs/php_codesniffer\": \"^3.11\"\n    },\n    \"keywords\": [\n        \"oauth\",\n        \"oauth2\",\n        \"authorization\",\n        \"authentication\",\n        \"idp\",\n        \"identity\",\n        \"sso\",\n        \"single sign on\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Alex Bilbie\",\n            \"email\": \"hello@alexbilbie.com\",\n            \"homepage\": \"http://www.alexbilbie.com\",\n            \"role\": \"Developer\"\n        },\n        {\n            \"name\": \"Woody Gilk\",\n            \"homepage\": \"https://github.com/shadowhand\",\n            \"role\": \"Contributor\"\n        }\n\n    ],\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\OAuth2\\\\Client\\\\\": \"src/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"League\\\\OAuth2\\\\Client\\\\Test\\\\\": \"test/src/\"\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.900390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"./vendor/autoload.php\"\n         colors=\"true\"\n         cacheDirectory=\"build/phpunit\">\n\n    <coverage>\n        <report>\n            <clover outputFile=\"build/logs/clover.xml\"/>\n            <html outputDirectory=\"build/coverage\"/>\n            <text outputFile=\"php://stdout\"/>\n        </report>\n    </coverage>\n\n    <testsuites>\n        <testsuite name=\"all\">\n            <directory>test</directory>\n        </testsuite>\n    </testsuites>\n\n    <logging>\n        <junit outputFile=\"build/report.junit.xml\"/>\n    </logging>\n\n    <source>\n        <include>\n            <directory suffix=\".php\">src</directory>\n        </include>\n    </source>\n\n    <php>\n        <env name=\"XDEBUG_MODE\" value=\"coverage\"/>\n    </php>\n\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}