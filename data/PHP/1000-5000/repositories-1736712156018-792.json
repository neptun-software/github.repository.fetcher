{
  "metadata": {
    "timestamp": 1736712156018,
    "page": 792,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/laravel-sluggable",
      "stars": 1411,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3046875,
          "content": "; This file is for unifying the coding style for different editors and IDEs.\n; More information at http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3525390625,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/.travis.yml        export-ignore\n/phpunit.xml.dist   export-ignore\n/.scrutinizer.yml   export-ignore\n/tests              export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.12109375,
          "content": "build\ncomposer.lock\ndocs\nvendor\ntests/Integration/temp\n.phpunit.result.cache\n.php-cs-fixer.cache\ntests/temp/database.sqlite\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 1.1875,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->notPath('bootstrap/*')\n    ->notPath('storage/*')\n    ->notPath('storage/*')\n    ->notPath('resources/view/mail/*')\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config)\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ]\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.0185546875,
          "content": "# Changelog\n\nAll notable changes to `laravel-sluggable` will be documented in this file\n\n## 3.7.2 - 2024-12-30\n\n### What's Changed\n\n* Fix query for translatable slug by @andrii-trush in https://github.com/spatie/laravel-sluggable/pull/285\n\n### New Contributors\n\n* @andrii-trush made their first contribution in https://github.com/spatie/laravel-sluggable/pull/285\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.7.1...3.7.2\n\n## 3.7.1 - 2024-12-23\n\n### What's Changed\n\n* Add explicit nullable type for additionalQuery parameter by @RomkaLTU in https://github.com/spatie/laravel-sluggable/pull/286\n\n### New Contributors\n\n* @RomkaLTU made their first contribution in https://github.com/spatie/laravel-sluggable/pull/286\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.7.0...3.7.1\n\n## 3.7.0 - 2024-12-09\n\n### What's Changed\n\n* Changing reference to Laravel docs without Laravel version by @abishekrsrikaanth in https://github.com/spatie/laravel-sluggable/pull/274\n* Bump dependabot/fetch-metadata from 1.6.0 to 2.1.0 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/278\n* Bump dependabot/fetch-metadata from 2.1.0 to 2.2.0 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/281\n* Add Fallback Locale and Additional Query Support to `findBySlug` by @mkeremcansev in https://github.com/spatie/laravel-sluggable/pull/284\n\n### New Contributors\n\n* @abishekrsrikaanth made their first contribution in https://github.com/spatie/laravel-sluggable/pull/274\n* @mkeremcansev made their first contribution in https://github.com/spatie/laravel-sluggable/pull/284\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.6.0...3.7.0\n\n## 3.6.0 - 2024-02-26\n\n### What's Changed\n\n* Bump dependabot/fetch-metadata from 1.4.0 to 1.5.1 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/257\n* Bump dependabot/fetch-metadata from 1.5.1 to 1.6.0 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/261\n* Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/264\n* Add laravel 11 support by @mokhosh in https://github.com/spatie/laravel-sluggable/pull/271\n\n### New Contributors\n\n* @mokhosh made their first contribution in https://github.com/spatie/laravel-sluggable/pull/271\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.5.0...3.6.0\n\n## 3.5.0 - 2023-05-29\n\n### What's Changed\n\n- Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/250\n- Fix badge with `build` status in `README.md` by @gomzyakov in https://github.com/spatie/laravel-sluggable/pull/252\n- Bump dependabot/fetch-metadata from 1.3.6 to 1.4.0 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/255\n- feat: add findBySlug alias by @IsraelOrtuno in https://github.com/spatie/laravel-sluggable/pull/256\n\n### New Contributors\n\n- @gomzyakov made their first contribution in https://github.com/spatie/laravel-sluggable/pull/252\n- @IsraelOrtuno made their first contribution in https://github.com/spatie/laravel-sluggable/pull/256\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.4.2...3.5.0\n\n## 3.4.2 - 2023-01-23\n\n- update for Laravel 10\n\n## 3.4.1 - 2022-12-07\n\n### What's Changed\n\n- Update README.md by @furiouskj in https://github.com/spatie/laravel-sluggable/pull/240\n- composer allow-plugins config by @hotsaucejake in https://github.com/spatie/laravel-sluggable/pull/241\n- Normalize composer.json by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/247\n- Add Dependabot Automation by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/246\n- Add PHP 8.2 Support by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/245\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/248\n- Allow set slug suffix starting number by @Vediovis in https://github.com/spatie/laravel-sluggable/pull/249\n\n### New Contributors\n\n- @furiouskj made their first contribution in https://github.com/spatie/laravel-sluggable/pull/240\n- @hotsaucejake made their first contribution in https://github.com/spatie/laravel-sluggable/pull/241\n- @dependabot made their first contribution in https://github.com/spatie/laravel-sluggable/pull/248\n- @Vediovis made their first contribution in https://github.com/spatie/laravel-sluggable/pull/249\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.4.0...3.4.1\n\n## 3.4.0 - 2022-03-28\n\n## What's Changed\n\n- Converts Test cases to Pest tests by @marvin-wtt in https://github.com/spatie/laravel-sluggable/pull/223\n- Add ability to skip the slug generation by a condition by @masterix21 in https://github.com/spatie/laravel-sluggable/pull/227\n\n## New Contributors\n\n- @masterix21 made their first contribution in https://github.com/spatie/laravel-sluggable/pull/227\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.3.1...3.4.0\n\n## 3.3.1 - 2022-03-09\n\n## What's Changed\n\n- Add support for spatie/laravel-translatable:^6.0 by @mziraki in https://github.com/spatie/laravel-sluggable/pull/224\n\n## New Contributors\n\n- @mziraki made their first contribution in https://github.com/spatie/laravel-sluggable/pull/224\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.3.0...3.3.1\n\n## 3.3.0 - 2022-01-13\n\n- support Laravel 9\n\n## 3.2.0 - 2021-12-15\n\n## What's Changed\n\n- Adds support for implicit route model binding with translated slugs by @marvin-wtt in https://github.com/spatie/laravel-sluggable/pull/213\n\n## New Contributors\n\n- @marvin-wtt made their first contribution in https://github.com/spatie/laravel-sluggable/pull/213\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.1.1...3.2.0\n\n## 3.1.1 - 2021-12-13\n\n## What's Changed\n\n- Migrate to PHP-CS-Fixer 3.x by @shuvroroy in https://github.com/spatie/laravel-sluggable/pull/203\n- Adds test case for replicate method by @eduarguz in https://github.com/spatie/laravel-sluggable/pull/212\n- Fix Deprecation: currentSlug is null by @phh in https://github.com/spatie/laravel-sluggable/pull/218\n\n## New Contributors\n\n- @shuvroroy made their first contribution in https://github.com/spatie/laravel-sluggable/pull/203\n- @eduarguz made their first contribution in https://github.com/spatie/laravel-sluggable/pull/212\n- @phh made their first contribution in https://github.com/spatie/laravel-sluggable/pull/218\n\n**Full Changelog**: https://github.com/spatie/laravel-sluggable/compare/3.1.0...3.1.1\n\n## 3.1.0 - 2021-06-04\n\n- add extra scope callback option (#201)\n\n## 3.0.2 - 2021-05-07\n\n- bugfix for updating slugs generated from a callback (#200)\n\n## 3.0.1 - 2021-04-22\n\n- update slug on non unique names (#195)\n\n## 3.0.0 - 2021-03-01\n\n- require PHP 8+\n- drop support for PHP 7.x\n- convert syntax to PHP 8\n- move Exceptions to `Exceptions` folder to match structure of other packages\n\n## 2.6.2 - 2021-03-20\n\n- Added translatable slug overriding (#190)\n\n## 2.6.1 - 2020-01-31\n\n- fix Eloquent model checking (#186)\n\n## 2.6.0 - 2020-10-28\n\n- add `preventOverwrite`\n- add support for PHP 8\n\n## 2.5.2 - 2020-10-01\n\n- fixed an incompatibility bug with postgresql uuid column (#173)\n\n## 2.5.1 - 2020-09-07\n\n- add support for Laravel 8\n\n## 2.5.0 - 2020-06-15\n\n- add helper trait to integrate with `laravel-translatable` #155\n\n## 2.4.2 - 2020-04-20\n\n- fix bug that causes empty slugs when dealing with multi-bytes chars (#152)\n\n## 2.4.1 - 2020-04-09\n\n- use method for retrieving incrementing status of the model (#151)\n\n## 2.4.0 - 2020-03-03\n\n- add support for Laravel 7, drop support for Laravel 6\n\n## 2.3.0 - 2019-12-06\n\n- drop support for anything below PHP 7.4 and Laravel 6\n\n## 2.2.1 - 2019-09-16\n\n- Changed: Updated Laravel 6 compatibility for future versions\n\n## 2.2.0 - 2019-09-04\n\n- Drop support for PHP 7.1\n- Add support for Laravel 6.0\n\n## 2.1.8 - 2019-06-08\n\n- ensure slugs are unique when using soft deletes\n\n## 2.1.7 - 2019-02-26\n\n- Add support for Laravel 5.8\n\n## 2.1.6 - 2018-02-14\n\n- performance improvements\n\n## 2.1.5 - 2018-01-10\n\n- improve compatibility with json fields\n\n## 2.1.4 - 2018-08-28\n\n- add support for Laravel 5.7\n\n## 2.1.3 - 2018-02-15\n\n- fix for models with non incrementing primary keys\n\n## 2.1.2 - 2018-02-08\n\n- Support Laravel 5.6\n\n## 2.1.1 - 2017-01-28\n\n- improve compatibility with Lumen\n\n## 2.1.0 - 2017-09-13\n\n- add `usingLanguage`\n\n## 2.0.0 - 2017-08-31\n\n- add support for Laravel 5.5, drop support for all older versions of the framework\n\n## 1.5.2 - 2018-05-08\n\n- make compatible with PHP 7.2\n\n## 1.5.1 - 2017-08-19\n\n- fix bugs when using a custom separator\n\n## 1.5.0 - 2017-04-13\n\n- add `usingSeparator()`\n\n## 1.4.1 - 2017-04-11\n\n- ignore global scopes when determining a unique slug\n\n## 1.4.0 - 2017-01-24\n\n- add support for Laravel 5.4\n\n## 1.3.0 - 2016-11-14\n\n- add `doNotGenerateSlugsOnCreate` and `doNotGenerateSlugsOnUpdate`\n\n## 1.2.0 - 2016-06-13\n\n- Added the ability to generate slugs from a callable\n\n## 1.1.0 - 2016-01-24\n\n- Allow custom slugs\n\n## 1.0.2 - 2016-01-12\n\n- Fix bug when creating slugs from null values\n\n## 1.0.1 - 2015-12-27\n\n- Fix Postgres bug\n\n## 1.0.0 - 2015-12-24\n\n- Initial release\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.064453125,
          "content": "The MIT License (MIT)\n\nCopyright (c) Spatie bvba <info@spatie.be>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.5537109375,
          "content": "# Generate slugs when saving Eloquent models\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-sluggable.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-sluggable)\n[![MIT Licensed](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/spatie/laravel-sluggable/run-tests.yml)](https://github.com/spatie/laravel-sluggable/actions)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-sluggable.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-sluggable)\n\nThis package provides a trait that will generate a unique slug when saving any Eloquent model.\n\n```php\n$model = new EloquentModel();\n$model->name = 'activerecord is awesome';\n$model->save();\n\necho $model->slug; // outputs \"activerecord-is-awesome\"\n```\n\nThe slugs are generated with Laravels `Str::slug` method, whereby spaces are converted to '-'.\n\nSpatie is a webdesign agency based in Antwerp, Belgium. You'll find an overview of all our open source projects [on our website](https://spatie.be/opensource).\n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/laravel-sluggable.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/laravel-sluggable)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\nYou can install the package via composer:\n``` bash\ncomposer require spatie/laravel-sluggable\n```\n\n## Usage\n\nYour Eloquent models should use the `Spatie\\Sluggable\\HasSlug` trait and the `Spatie\\Sluggable\\SlugOptions` class.\n\nThe trait contains an abstract method `getSlugOptions()` that you must implement yourself.\n\nYour models' migrations should have a field to save the generated slug to.\n\nHere's an example of how to implement the trait:\n\n```php\nnamespace App;\n\nuse Spatie\\Sluggable\\HasSlug;\nuse Spatie\\Sluggable\\SlugOptions;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass YourEloquentModel extends Model\n{\n    use HasSlug;\n\n    /**\n     * Get the options for generating the slug.\n     */\n    public function getSlugOptions() : SlugOptions\n    {\n        return SlugOptions::create()\n            ->generateSlugsFrom('name')\n            ->saveSlugsTo('slug');\n    }\n}\n```\n\nWith its migration:\n\n```php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateYourEloquentModelTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('your_eloquent_models', function (Blueprint $table) {\n            $table->increments('id');\n            $table->string('slug'); // Field name same as your `saveSlugsTo`\n            $table->string('name');\n            $table->timestamps();\n        });\n    }\n}\n\n```\n\n### Using slugs in routes\n\nTo use the generated slug in routes, remember to use Laravel's [implicit route model binding](https://laravel.com/docs/routing#implicit-binding):\n\n```php\nnamespace App;\n\nuse Spatie\\Sluggable\\HasSlug;\nuse Spatie\\Sluggable\\SlugOptions;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass YourEloquentModel extends Model\n{\n    use HasSlug;\n\n    /**\n     * Get the options for generating the slug.\n     */\n    public function getSlugOptions() : SlugOptions\n    {\n        return SlugOptions::create()\n            ->generateSlugsFrom('name')\n            ->saveSlugsTo('slug');\n    }\n\n    /**\n     * Get the route key for the model.\n     *\n     * @return string\n     */\n    public function getRouteKeyName()\n    {\n        return 'slug';\n    }\n}\n```\n\n### Using multiple fields to create the slug\n\nWant to use multiple field as the basis for a slug? No problem!\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom(['first_name', 'last_name'])\n        ->saveSlugsTo('slug');\n}\n```\n\n### Customizing slug generation\n\nYou can also pass a `callable` to `generateSlugsFrom`.\n\nBy default the package will generate unique slugs by appending '-' and a number, to a slug that already exists.\n\nYou can disable this behaviour by calling `allowDuplicateSlugs`.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->allowDuplicateSlugs();\n}\n```\n\n### Limiting the length of a slug\n\nYou can also put a maximum size limit on the created slug:\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->slugsShouldBeNoLongerThan(50);\n}\n```\n\nThe slug may be slightly longer than the value specified, due to the suffix which is added to make it unique.\n\nYou can also use a custom separator by calling `usingSeparator`\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->usingSeparator('_');\n}\n```\n\n### Setting the slug language\n\nTo set the language used by `Str::slug` you may call `usingLanguage`\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->usingLanguage('nl');\n}\n```\n\n### Overriding slugs\n\nYou can also override the generated slug just by setting it to another value than the generated slug.\n\n```php\n$model = EloquentModel::create(['name' => 'my name']); //slug is now \"my-name\";\n$model->slug = 'my-custom-url';\n$model->save(); //slug is now \"my-custom-url\";\n```\n\n## Prevents slugs from being generated on some conditions\n\nIf you don't want to create the slug when the model has a state, you can use the `skipGenerateWhen` function.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->skipGenerateWhen(fn () => $this->state === 'draft');\n}\n```\n\n### Prevent slugs from being generated on creation\n\nIf you don't want to create the slug when the model is initially created you can set use the `doNotGenerateSlugsOnCreate()` function.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->doNotGenerateSlugsOnCreate();\n}\n```\n\n### Prevent slug updates\n\nSimilarly, if you want to prevent the slug from being updated on model updates, call `doNotGenerateSlugsOnUpdate()`.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->doNotGenerateSlugsOnUpdate();\n}\n```\n\nThis can be helpful for creating permalinks that don't change until you explicitly want it to.\n\n```php\n$model = EloquentModel::create(['name' => 'my name']); //slug is now \"my-name\";\n$model->save();\n\n$model->name = 'changed name';\n$model->save(); //slug stays \"my-name\"\n```\n\n### Regenerating slugs\n\nIf you want to explicitly update the slug on the model you can call `generateSlug()` on your model at any time to make the slug according to your other options. Don't forget to `save()` the model to persist the update to your database.\n\n### Preventing overwrites\n\nYou can prevent slugs from being overwritten.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->preventOverwrite();\n}\n```\n\n### Using scopes\n\n\nIf you have a global scope that should be taken into account, you can define this as well with `extraScope`. For example if you have a pages table containing pages of multiple websites and every website has it's own unique slugs.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->extraScope(fn ($builder) => $builder->where('scope_id', $this->scope_id));\n}\n```\n\n### Setting the slug suffix starting index\n\nBy default, suffix index starts from 1, you can set starting number.\n\n```php\npublic function getSlugOptions() : SlugOptions\n{\n    return SlugOptions::create()\n        ->generateSlugsFrom('name')\n        ->saveSlugsTo('slug')\n        ->startSlugSuffixFrom(2);\n}\n```\n\n### Integration with laravel-translatable\n\nYou can use this package along with [laravel-translatable](https://github.com/spatie/laravel-translatable) to generate a slug for each locale. Instead of using the `HasSlug` trait, you must use the `HasTranslatableSlug` trait, and add the name of the slug field to the `$translatable` array. For slugs that are generated from a single field _or_ multiple fields, you don't have to change anything else.\n\n```php\nnamespace App;\n\nuse Spatie\\Sluggable\\HasTranslatableSlug;\nuse Spatie\\Sluggable\\SlugOptions;\nuse Spatie\\Translatable\\HasTranslations;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass YourEloquentModel extends Model\n{\n    use HasTranslations, HasTranslatableSlug;\n\n    public $translatable = ['name', 'slug'];\n\n    /**\n     * Get the options for generating the slug.\n     */\n    public function getSlugOptions() : SlugOptions\n    {\n        return SlugOptions::create()\n            ->generateSlugsFrom('name')\n            ->saveSlugsTo('slug');\n    }\n}\n```\n\nFor slugs that are generated from a callable, you need to instantiate the `SlugOptions` with the `createWithLocales` method. The callable now takes two arguments instead of one. Both the `$model` and the `$locale` are available to generate a slug from.\n\n```php\nnamespace App;\n\nuse Spatie\\Sluggable\\HasTranslatableSlug;\nuse Spatie\\Sluggable\\SlugOptions;\nuse Spatie\\Translatable\\HasTranslations;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass YourEloquentModel extends Model\n{\n    use HasTranslations, HasTranslatableSlug;\n\n    public $translatable = ['name', 'slug'];\n\n    /**\n     * Get the options for generating the slug.\n     */\n    public function getSlugOptions() : SlugOptions\n    {\n        return SlugOptions::createWithLocales(['en', 'nl'])\n            ->generateSlugsFrom(function($model, $locale) {\n                return \"{$locale} {$model->id}\";\n            })\n            ->saveSlugsTo('slug');\n    }\n}\n\n```\n\n#### Implicit route model binding\n\nYou can also use Laravels [implicit route model binding](https://laravel.com/docs/routing#implicit-binding) inside your controller to automatically resolve the model. To use this feature, make sure that the slug column matches the `routeNameKey`.  \nCurrently, only some database types support JSON operations. Further information about which databases support JSON can be found in the [Laravel docs](https://laravel.com/docs/queries#json-where-clauses).\n\n```php\nnamespace App;\n\nuse Spatie\\Sluggable\\HasSlug;\nuse Spatie\\Sluggable\\SlugOptions;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass YourEloquentModel extends Model\n{\n    use HasTranslations, HasTranslatableSlug;\n\n    public $translatable = ['name', 'slug'];\n\n    /**\n     * Get the options for generating the slug.\n     */\n    public function getSlugOptions() : SlugOptions\n    {\n        return SlugOptions::create()\n            ->generateSlugsFrom('name')\n            ->saveSlugsTo('slug');\n    }\n\n    /**\n     * Get the route key for the model.\n     *\n     * @return string\n     */\n    public function getRouteKeyName()\n    {\n        return 'slug';\n    }\n}\n```\n\n### Find models by slug\n\nFor convenience, you can use the alias `findBySlug` to retrieve a model. The query will compare against the field passed to `saveSlugsTo` when defining the `SlugOptions`.\n\n```php\n$model = Article::findBySlug('my-article');\n```\n\n`findBySlug` also accepts a second parameter `$columns` just like the default Eloquent `find` method.\n\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Testing\n\n``` bash\ncomposer test\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you've found a bug regarding security please mail [security@spatie.be](mailto:security@spatie.be) instead of using the issue tracker.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.2548828125,
          "content": "{\n    \"name\": \"spatie/laravel-sluggable\",\n    \"description\": \"Generate slugs when saving Eloquent models\",\n    \"license\": \"MIT\",\n    \"keywords\": [\n        \"spatie\",\n        \"laravel-sluggable\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"homepage\": \"https://github.com/spatie/laravel-sluggable\",\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"illuminate/database\": \"^8.0|^9.0|^10.0|^11.0\",\n        \"illuminate/support\": \"^8.0|^9.0|^10.0|^11.0\"\n    },\n    \"require-dev\": {\n        \"orchestra/testbench\": \"^6.23|^7.0|^8.0|^9.0\",\n        \"pestphp/pest\": \"^1.20|^2.0\",\n        \"spatie/laravel-translatable\": \"^5.0|^6.0\"\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true,\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\Sluggable\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\Sluggable\\\\Tests\\\\\": \"tests\"\n        }\n    },\n    \"config\": {\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    },\n    \"scripts\": {\n        \"format\": \"vendor/bin/php-cs-fixer fix --allow-risky=yes\",\n        \"test\": \"vendor/bin/pest\"\n    }\n}\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.6630859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" bootstrap=\"vendor/autoload.php\" backupGlobals=\"false\" backupStaticAttributes=\"false\" colors=\"true\" verbose=\"true\" convertErrorsToExceptions=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n  <coverage>\n    <include>\n      <directory suffix=\".php\">src/</directory>\n    </include>\n  </coverage>\n  <testsuites>\n    <testsuite name=\"League Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}