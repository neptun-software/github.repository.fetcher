{
  "metadata": {
    "timestamp": 1736711824395,
    "page": 123,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thephpleague/fractal",
      "stars": 3527,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3076171875,
          "content": "* text=auto\n\n/test export-ignore\n/.gitattributes export-ignore\n/.gitignore export-ignore\n/.scrutinizer.yml export-ignore\n/.travis.yml export-ignore\n/Guardfile export-ignore\n/phpunit.xml.dist export-ignore\n/CONDUCT.md export-ignore\n/CHANGELOG.md export-ignore\n/CONTRIBUTING.md export-ignore\n/README.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "composer.lock\nbuild\nvendor\n.phpunit.result.cache"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.2744140625,
          "content": "## Next\n\n### Enhancements\n- Add links for all available includes to `JsonApiSerializer` #331 - Thanks @matt-allan\n- Implement interface `\\JsonSerializable` in Scopes to allow for direct usage with `json_encode()`\n\n\n\n## 0.18.0 - 2019-05-09\n\n### Enhancements\n- Allow PHPUnit 7+ where available - Thanks @ramsey\n- Changed the paginator to not call `$paginator->getPaginate()` in `PhalconFrameworkPaginatorAdapter` constructor - Thanks @niden\n- Output an object for `attributes` when none are provided instead of an array in `JsonApiSerializer` - Thanks @BastianHofmann\n- Include `meta` key for relationships in `JsonApiSerializer` - Thanks @rawaludin\n- Allow `self` link to override defaults in `JsonApiSerializer` - Thanks @biggator\n- Preserve numeric keys when converting `Scope`s to arrays by using array union instead of array_merge - Thanks @andrewtweber\n- Output an object for `links` when none are provided instead of an array in `ArraySerializer` pagination - Thanks @basavind\n- Allow arrays for field lists in `$fractal->parseFieldsets()` - Thanks @flugger\n\n\n## 0.17.0 - 2017-08-18\n\n### Enhancements\n\n- Add ScopeFactoryInterface and ScopeFactory\n- Add $options parameter to toJson\n- Added Serializer interface to SerializerAbstract\n- Add Primitive resource type, allows to use primitives\n- optimized primitive transformation when transformer is not given\n\n\n\n## 0.16.0 - 2017-03-12\n\n### Enhancements\n\n- #358 Allow the ability to define meta on each object in collection\n- #362 Add DoctrinePaginatorAdapter to interface with Doctrine pagination\n- Implement sparse fieldset\n\n## 0.15.0 - 2016-12-28\n\n### Enhancements\n\n- Custom links in serializer\n- PhalconPHP Paginator\n- tested on 7.1\n\n## 0.14.0 - 2016-07-21\n\n### Added\n\n- `null()` method for serializing null resource.\n- Adds pagination to `JsonApiSerializer`\n- Added JSON-API serializer collection links\n\n### Enhancements\n\n- Fix issue including relationships on collections\n- `TransformerAbstract` now returns a `ResourceInterface`\n- `getIncludeParams` now always return `ParamBag`\n- cody styling, method naming and docs\n\n## 0.13.0 - 2015-10-16\n\n### Added\n\n- `->setData(...)` and `->setTransformer(...)` methods to resources\n- able to set url include parameters with no set variables, ie. `include=comments:limit(5|1):new`\n\n### Changed\n\n- Finally, much improved JSON-API support thanks to @felixkiss\n\n### Enhancements\n\n- Short array syntax throughout\n- Test improvements\n\n## 0.12.0 - 2015-03-19\n\n### Added\n\n- Added PHP 7.0-dev support.\n- Add the support for Laravel 5 paginator. [Issue #153]\n\n### Changed\n\n- Now accessing the default and available includes in Transformers via getters [Issue #158]\n\n### Removed\n\n- Dropped PHP 5.3 support. Use [v0.11] if you're still stuck on PHP 5.3.\n- Removed `getData()` and `getTransformer()` from `League\\Fractal\\Resource\\Collection` as they were already\n  defined in `ResourceAbstract`.\n\n[Issue #153]: https://github.com/thephpleague/fractal/pull/153\n[Issue #158]: https://github.com/thephpleague/fractal/pull/158\n[v0.11]: https://github.com/thephpleague/fractal/releases/tag/0.11.0\n\n## 0.11.0 - 2014-12-10\n\n### Added\n\n- Added `League\\Fractal\\Pagination\\PagerfantaPaginatorAdapter` to support [Pagerfanta]\n- Added `League\\Fractal\\Pagination\\ZendFrameworkPaginatorAdapter` to support [Zend Framework Paginator]\n\n### Fixed\n\n- Now JSON-API linked items will be unique based on their ID [Issue #126]\n\n[Pagerfanta]: https://packagist.org/packages/pagerfanta/pagerfanta\n[Zend Framework Paginator]: https://packagist.org/packages/zendframework/zend-paginator\n[Issue #126]: https://github.com/thephpleague/fractal/issues/126\n\n## 0.10.0 - 2014-10-17\n\n### Added\n\n- Added `ParamBag` to replace the array passed to includes. It implements array access so keep using it as you were, or play with the new methods.\n\n### Fixed\n\n- Removed `PaginatorInterface::getPaginator()` as it was used anymore. [Issue #101]\n- `Manager::createData()` argument 1 now hints against `ResourceInterface` not `ResourceAbstract`.\n\n[Issue #101]: https://github.com/thephpleague/fractal/issues/101\n\n## 0.9.1 - 2014-07-06\n\n### Fixed\n\n- Using ArraySerializer without a resource key would lead to an empty string as a key in JSON. [Issue #78]\n\n[Issue #78]: https://github.com/thephpleague/fractal/issues/78\n\n## 0.9.0 - 2014-07-06\n\n### Added\n\n- Implemented serializer methods for item and collection separately [Issue #71]\n\n[Issue #71]: https://github.com/thephpleague/fractal/issues/71\n\n## 0.8.3 - 2014-06-14\n\n### Added\n\n- Default Includes no longer need to be in Available Includes. [Issue #58]\n\n[Issue #58]: https://github.com/thephpleague/fractal/issues/58\n\n## 0.8.2 - 2014-06-09\n\n### Fixed\n\n- A `null` value for `Manager::parseIncludes()` could have weird results\n\n## 0.8.1 - 2014-06-05\n\n### Added\n\n- Make `ResourceAbstract` implement `ResourceInterface`\n\n### Fixed\n\n- Fixed tests for Laravel 4.2 usage\n\n\n## 0.8.0 - 2014-05-27\n\n### Added\n\n- Added Serializers with ArraySerializer, DataArraySerializer (default) and a provisional JsonApiSerializer. See [Issue #47]\n- Added `ResourceAbstract::setMeta('foo', mixed)` to allow custom meta data\n- Replaced `Manager::setRequestedScopes()` with `Manager::parseIncludes('foo,bar')` which can be an array or CSV string. It can also take \"Smart Syntax\" such as `Manager::parseIncludes('bars:limit(5|1):order(-something)')`, which can come from a URL query param: `/foo?include=bars:limit(5|1):order(-something)`\n- Made all pagination (paginators and cursors) use meta output logic, so it sits with your custom meta data\n- Moved `League\\Fractal\\Cursor\\Cursor` and `League\\Fractal\\Cursor\\CursorInterface` into `League\\Fractal\\Pagination`\n\n[Issue #27]: https://github.com/thephpleague/fractal/issues/27\n[Issue #47]: https://github.com/thephpleague/fractal/pull/47\n\n## 0.7.0 - 2014-02-01\n\n### Added\n\n- Added Cursor, as a different approach to paginating large data sets\n- Switched from PSR-0 to PSR-4\n\n## 0.6.0 - 2013-12-27\n\n### Added\n\n- Adds a `PaginatorInterface`, with a `IlluminatePaginatorAdapter` to let Fractal be framework agnostic\n\n## 0.5.1 - 2013-12-13\n\n### Fixed\n\n- Fixed PHP 5.3 support. Short array syntax will be the death of me\n\n## 0.5.0 - 2013-12-13\n\n### Added\n\n- Added `Collection::setPaginator()`.\n\n### Removed\n\n- Removed `PaginatedCollection`, use `Collection::setPaginator()` instead.\n\n## 0.4.6 - 2013-12-13\n\n### Added\n\n- Allow `$defaultEmbed` to be enabled in a transformer, to always embed without requesting\n"
        },
        {
          "name": "CONDUCT.md",
          "type": "blob",
          "size": 1.9345703125,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.166015625,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/thephpleague/fractal).\n\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](http://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the README and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow semver. Randomly breaking public APIs is not an option.\n\n- **Create topic branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting.\n\n\n## Running Tests\n\n``` bash\n$ phpunit\n```\n\n\n**Happy coding**!\n"
        },
        {
          "name": "Guardfile",
          "type": "blob",
          "size": 0.216796875,
          "content": "guard 'phpunit2', :tests_path => 'tests', :cli => '--colors' do\n  # Watch tests files\n  watch(%r{^.+Test\\.php$})\n\n  # Watch library files and run their tests\n  watch(%r{^src/(.+)\\.php}) { |m| \"tests/#{m[1]}Test.php\" }\nend\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0751953125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Phil Sturgeon <me@philsturgeon.uk>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0810546875,
          "content": "# Fractal\n\n[![Latest Version](https://img.shields.io/github/release/thephpleague/fractal.svg?style=flat-square)](https://github.com/thephpleague/fractal/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n![The PHP League Tests](https://github.com/thephpleague/fractal/workflows/The%20PHP%20League%20Tests/badge.svg)\n[![Total Downloads](https://img.shields.io/packagist/dt/league/fractal.svg?style=flat-square)](https://packagist.org/packages/league/fractal)\n\nFractal provides a presentation and transformation layer for complex data output, the like found in\nRESTful APIs, and works really well with JSON. Think of this as a view layer for your JSON/YAML/etc.\n\nWhen building an API it is common for people to just grab stuff from the database and pass it\nto `json_encode()`. This might be passable for \"trivial\" APIs but if they are in use by the public,\nor used by mobile applications then this will quickly lead to inconsistent output.\n\n## Goals\n\n* Create a protective shield between source data and output, so schema changes do not affect users\n* Systematic type-casting of data, to avoid `foreach()`ing through and `(bool)`ing everything\n* Include (a.k.a embedding, nesting or side-loading) relationships for complex data structures\n* Work with standards like HAL and JSON-API but also allow custom serialization\n* Support the pagination of data results, for small and large data sets alike\n* Generally ease the subtle complexities of outputting data in a non-trivial API\n\nThis package is compliant with [PSR-1], [PSR-2] and [PSR-4]. If you notice compliance oversights,\nplease send a patch via pull request.\n\n[PSR-1]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md\n[PSR-2]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md\n[PSR-4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md\n\n\n## Install\n\nVia Composer\n\n``` bash\n$ composer require league/fractal\n```\n\n## Requirements\n\nThe following versions of PHP are supported by this version:\n\n&gt;= PHP 7.4\n\n## Documentation\n\nFractal has [full documentation](http://fractal.thephpleague.com), powered by [Jekyll](http://jekyllrb.com/).\n\nContribute to this documentation in the [gh-pages branch](https://github.com/thephpleague/fractal/tree/gh-pages/).\n\n## Todo\n\n- add HAL serializers\n\n## Testing\n\n``` bash\n$ phpunit\n```\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/thephpleague/fractal/blob/master/CONTRIBUTING.md) and [CONDUCT](https://github.com/thephpleague/fractal/blob/master/CONDUCT.md) for details.\n\n\n## Maintainers\n\n- [Korvin Szanto](https://github.com/korvinszanto)\n- [Matt Trask](https://github.com/matthewtrask)\n\n## Credits\n\n- [Graham Daniels](https://github.com/greydnls)\n- [Andrew Willis](https://github.com/willishq)\n- [Phil Sturgeon](https://github.com/philsturgeon)\n- [All Contributors](https://github.com/thephpleague/fractal/contributors)\n\n\n## License\n\nThe MIT License (MIT). Please see [License File](https://github.com/thephpleague/fractal/blob/master/LICENSE) for more information.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.646484375,
          "content": "{\n    \"name\": \"league/fractal\",\n    \"description\": \"Handle the output of complex data structures ready for API output.\",\n    \"keywords\": [\n        \"league\",\n        \"api\",\n        \"json\",\n        \"rest\"\n    ],\n    \"homepage\": \"http://fractal.thephpleague.com/\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Phil Sturgeon\",\n            \"email\": \"me@philsturgeon.uk\",\n            \"homepage\": \"http://philsturgeon.uk/\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"require\": {\n        \"php\": \">=7.4\"\n    },\n    \"require-dev\": {\n        \"doctrine/orm\": \"^2.5\",\n        \"illuminate/contracts\": \"~5.0\",\n        \"mockery/mockery\": \"^1.3\",\n        \"pagerfanta/pagerfanta\": \"~1.0.0\",\n        \"phpstan/phpstan\": \"^1.4\",\n        \"phpunit/phpunit\": \"^9.5\",\n        \"squizlabs/php_codesniffer\": \"~3.4\",\n        \"vimeo/psalm\": \"^4.22\",\n        \"zendframework/zend-paginator\": \"~2.3\"\n    },\n    \"suggest\": {\n        \"illuminate/pagination\": \"The Illuminate Pagination component.\",\n        \"pagerfanta/pagerfanta\": \"Pagerfanta Paginator\",\n        \"zendframework/zend-paginator\": \"Zend Framework Paginator\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"League\\\\Fractal\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"League\\\\Fractal\\\\Test\\\\\": \"test\"\n        }\n    },\n    \"scripts\": {\n        \"check\": \"vendor/bin/phpcs src/\",\n        \"test\": \"vendor/bin/phpunit --testdox --colors=always\",\n        \"test:coverage\": \"vendor/bin/phpunit --coverage-html build/coverage\"\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"0.20.x-dev\"\n        }\n    }\n}\n"
        },
        {
          "name": "phpcs.xml.dist",
          "type": "blob",
          "size": 0.3466796875,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"fractal\">\n    <description>Fractal Coding Standards</description>\n    <arg value=\"p\" />\n\n    <config name=\"ignore_warnings_on_exit\" value=\"1\" />\n    <config name=\"ignore_errors_on_exit\" value=\"1\" />\n\n    <arg name=\"colors\" />\n    <arg value=\"s\" />\n\n    <!-- Use the PSR2 Standard-->\n    <rule ref=\"PSR2\" />\n</ruleset>\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 2.611328125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$separator of function explode expects non\\\\-empty\\\\-string, string given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Manager.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method Illuminate\\\\\\\\Contracts\\\\\\\\Pagination\\\\\\\\LengthAwarePaginator\\\\:\\\\:count\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Pagination/IlluminatePaginatorAdapter.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method League\\\\\\\\Fractal\\\\\\\\Resource\\\\\\\\ResourceInterface\\\\:\\\\:getMeta\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Scope.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to an undefined method League\\\\\\\\Fractal\\\\\\\\TransformerAbstract\\\\:\\\\:transform\\\\(\\\\)\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Scope.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function is_null\\\\(\\\\) with array will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Scope.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$includeKey\\\\)\\\\: Unexpected token \\\"\\\\$includeKey\\\", expected type at offset 18$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$includeObject\\\\)\\\\: Unexpected token \\\"\\\\$includeObject\\\", expected type at offset 18$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$includeObject\\\\)\\\\: Unexpected token \\\"\\\\$includeObject\\\", expected type at offset 73$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$includeObjects\\\\)\\\\: Unexpected token \\\"\\\\$includeObjects\\\", expected type at offset 18$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$key\\\\)\\\\: Unexpected token \\\"\\\\$key\\\", expected type at offset 102$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$linkedIds\\\\)\\\\: Unexpected token \\\"\\\\$linkedIds\\\", expected type at offset 48$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$relationship\\\\)\\\\: Unexpected token \\\"\\\\$relationship\\\", expected type at offset 47$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$relationships\\\\)\\\\: Unexpected token \\\"\\\\$relationships\\\", expected type at offset 44$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n\t\t-\n\t\t\tmessage: \"#^PHPDoc tag @param has invalid value \\\\(\\\\$serializedData\\\\)\\\\: Unexpected token \\\"\\\\$serializedData\\\", expected type at offset 73$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Serializer/JsonApiSerializer.php\n\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.1162109375,
          "content": "includes:\n  - ./phpstan-baseline.neon\n\nparameters:\n  level: 5\n  reportUnmatchedIgnoredErrors: false\n  paths:\n    - src\n"
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.8447265625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit colors=\"true\" convertNoticesToExceptions=\"true\" convertWarningsToExceptions=\"true\" stopOnError=\"false\" stopOnFailure=\"false\" stopOnIncomplete=\"false\" stopOnSkipped=\"false\" bootstrap=\"test/Bootstrap.php\">\n    <testsuites>\n        <testsuite name=\"all\">\n            <directory suffix=\"Test.php\">test/</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist>\n            <directory suffix=\".php\">src/</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"tap\" target=\"build/report.tap\"/>\n        <log type=\"junit\" target=\"build/report.junit.xml\"/>\n        <log type=\"coverage-html\" target=\"build/coverage\"/>\n        <log type=\"coverage-text\" target=\"build/coverage.txt\"/>\n        <log type=\"coverage-clover\" target=\"build/logs/clover.xml\"/>\n    </logging>\n</phpunit>\n"
        },
        {
          "name": "psalm.baseline.xml",
          "type": "blob",
          "size": 0.833984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<files psalm-version=\"4.22.0@fc2c6ab4d5fa5d644d8617089f012f3bb84b8703\">\n  <file src=\"src/Pagination/DoctrinePaginatorAdapter.php\">\n    <InvalidNullableReturnType occurrences=\"1\">\n      <code>int</code>\n    </InvalidNullableReturnType>\n    <NullableReturnStatement occurrences=\"1\">\n      <code>$this-&gt;paginator-&gt;getQuery()-&gt;getMaxResults()</code>\n    </NullableReturnStatement>\n  </file>\n  <file src=\"src/Pagination/IlluminatePaginatorAdapter.php\">\n    <UndefinedInterfaceMethod occurrences=\"1\">\n      <code>count</code>\n    </UndefinedInterfaceMethod>\n  </file>\n  <file src=\"src/Scope.php\">\n    <UndefinedInterfaceMethod occurrences=\"1\">\n      <code>getMeta</code>\n    </UndefinedInterfaceMethod>\n    <UndefinedMethod occurrences=\"1\">\n      <code>transform</code>\n    </UndefinedMethod>\n  </file>\n</files>\n"
        },
        {
          "name": "psalm.xml",
          "type": "blob",
          "size": 0.4716796875,
          "content": "<?xml version=\"1.0\"?>\n<psalm\n    errorLevel=\"5\"\n    resolveFromConfigFile=\"true\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"https://getpsalm.org/schema/config\"\n    xsi:schemaLocation=\"https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd\"\n    errorBaseline=\"psalm.baseline.xml\"\n>\n    <projectFiles>\n        <directory name=\"src\" />\n        <ignoreFiles>\n            <directory name=\"vendor\" />\n        </ignoreFiles>\n    </projectFiles>\n</psalm>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}