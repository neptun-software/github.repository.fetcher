{
  "metadata": {
    "timestamp": 1736712193126,
    "page": 874,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "php-http/message",
      "stars": 1308,
      "defaultBranch": "1.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.43359375,
          "content": ".editorconfig          export-ignore\n.gitattributes         export-ignore\n/.github/              export-ignore\n.gitignore             export-ignore\n/.php_cs.dist          export-ignore\n/phpspec.ci.yml        export-ignore\n/phpspec.yml.dist      export-ignore\n/phpstan-baseline.neon export-ignore\n/phpstan.neon.dist     export-ignore\n/phpunit.xml.dist      export-ignore\n/spec/                 export-ignore\n/tests/                export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.107421875,
          "content": ".php-cs-fixer.php\n.php-cs-fixer.cache\n/build/\n/composer.lock\n/phpspec.yml\n/phpstan.neon\n/phpunit.xml\n/vendor/\n"
        },
        {
          "name": ".php-cs-fixer.dist.php",
          "type": "blob",
          "size": 0.3935546875,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__.'/src')\n    ->in(__DIR__.'/spec')\n    ->name('*.php')\n;\n\n$config = new PhpCsFixer\\Config();\n\nreturn $config\n    ->setRiskyAllowed(true)\n    ->setRules([\n        '@Symfony' => true,\n\t'single_line_throw' => false,\n        'trailing_comma_in_multiline' => false, // for methods this is incompatible with PHP 7\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.1376953125,
          "content": "# Changelog\n\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [1.16.1] - 2024-03-07\n\n- Adjust phpdoc to avoid warnings about return types.\n\n## [1.16.0] - 2023-05-17\n\n- Remove direct dependency on `php-http/message-factory` as it is only needed for the deprecated Httplug factories.\n  Upgrade to PSR-17 message factories provided by your HTTP client implementation.\n  If you need the Httplug factories for the time being, you can `composer require php-http/message-factory` in your application.\n\n## [1.15.0] - 2023-05-10\n\n**If you use the decorator classes, you might need to adjust your code to the parameter and return type declarations added in PSR-7**\n\n- Actually make compatible with PSR-7 1.1 and 2.0\n- Drop support for PHP 7.1\n\n## [1.14.0] - 2023-04-14 (broken)\n\n**This release is not actually compatible with PSR-7 1.1 or 2.0**\n\n- Allow installation with http-message (PSR-7) version 2 in addition to version 1.\n- Support for PHP 8.2\n\n## [1.13.0] - 2022-02-11\n\n- Added `Formatter::formatResponseForRequest()` to allow the formatter to get context from the request to decide what of the response to output.\n- Deprecated `Formatter::formatResponse()` in favor of the new `formatResponseForRequest` method.\n\n## [1.12.0] - 2021-08-29\n\n- Added support for adjusting binary detection regex in FullHttpMessageFormatter.\n\n## [1.11.2] - 2021-08-03\n\n- Support GuzzleHttp/Psr7 version 2.0 in the (deprecated) GuzzleStreamFactory.\n\n## [1.11.1] - 2021-05-24\n\n- Support GuzzleHttp/Psr7 version 2.0 in the (deprecated) GuzzleUriFactory.\n\n## [1.11.0] - 2020-02-01\n\n- Migrated from `zendframework/zend-diactoros` to `laminas/laminas-diactoros`.\n   Users are encouraged to update their dependencies by simply replacing the Zend package with the Laminas package.\n   Due to the [laminas-zendframework-brige](https://github.com/laminas/laminas-zendframework-bridge), BC changes\n   are not expected and legacy code does not need to be refactored (though it is\n   [recommended and simple](https://docs.laminas.dev/migration/)).\n- The diactoros factories of `php-http/message` will return objects from the `Laminas\\Diactoros\\` namespace, if\n   the respective classes are available via autoloading, but continue to return objects from `Zend\\Diactoros\\`\n   namespace otherwise.\n\n- Allow to specify the hashing algorithm for WSSE authentication.\n\n## [1.10.0] - 2020-11-11\n\n- Added support for PHP 8.0.\n\n## [1.9.1] - 2020-10-13\n\n- Improved detection of binary stream to not consider newlines, carriage return or tabs as binary.\n\n## [1.9.0] - 2020-08-17\n\n- Omitted binary body in FullHttpMessageFormatter and CurlCommandFormatter.\n  `[binary stream omitted]` will be shown instead.\n\n### Added\n\n- New Header authentication method for arbitrary header authentication.\n\n## [1.8.0] - 2019-08-05\n\n### Changed\n\n- Raised minimum PHP version to 7.1\n\n### Fixed\n\n- Fatal error on `CurlCommandFormatter` when body is larger than `escapeshellarg` allowed length.\n- Do not read stream in message formatter if stream is not seekable.\n\n## [1.7.2] - 2018-10-30\n\n### Fixed\n\n- FilteredStream uses `@trigger_error` instead of throwing exceptions to not\n  break careless users. You still need to fix your stream code to respect\n  `isSeekable`. Seeking does not work as expected, and we will add exceptions\n  in version 2.\n\n## [1.7.1] - 2018-10-29\n\n### Fixed\n\n- FilteredStream is not actually seekable\n\n\n## [1.7.0] - 2018-08-15\n\n### Fixed\n\n- Fix CurlCommandFormatter for binary request payloads\n- Fix QueryParam authentication to assemble proper URL regardless of PHP `arg_separator.output` directive\n- Do not pass `null` parameters to `Clue\\StreamFilter\\fun`\n\n### Changed\n\n- Dropped tests on HHVM\n\n\n## [1.6.0] - 2017-07-05\n\n### Added\n\n- CookieUtil::parseDate to create a date from cookie date string\n\n### Fixed\n\n- Fix curl command of CurlFormatter when there is an user-agent header\n\n\n## [1.5.0] - 2017-02-14\n\n### Added\n\n- Check for empty string in Stream factories\n- Cookie::createWithoutValidation Static constructor to create a cookie. Will not perform any attribute validation during instantiation.\n- Cookie::isValid Method to check if cookie attributes are valid.\n\n### Fixed\n\n- FilteredStream::getSize returns null because the contents size is unknown.\n- Stream factories does not rewinds streams. The previous behavior was not coherent between factories and inputs.\n\n### Deprecated\n\n- FilteredStream::getReadFilter The read filter is internal and should never be used by consuming code.\n- FilteredStream::getWriteFilter We did not implement writing to the streams at all. And if we do, the filter is an internal information and should not be used by consuming code.\n\n\n## [1.4.1] - 2016-12-16\n\n### Fixed\n\n- Cookie::matchPath Cookie with root path (`/`) will not match sub path (e.g. `/cookie`).\n\n\n## [1.4.0] - 2016-10-20\n\n### Added\n\n- Message, stream and URI factories for [Slim Framework](https://github.com/slimphp/Slim)\n- BufferedStream that allow you to decorate a non-seekable stream with a seekable one.\n- cUrlFormatter to be able to redo the request with a cURL command\n\n\n## [1.3.1] - 2016-07-15\n\n### Fixed\n\n- FullHttpMessageFormatter will not read from streams that you cannot rewind (non-seekable)\n- FullHttpMessageFormatter will not read from the stream if $maxBodyLength is zero\n- FullHttpMessageFormatter rewinds streams after they are read\n\n\n## [1.3.0] - 2016-07-14\n\n### Added\n\n- FullHttpMessageFormatter to include headers and body in the formatted message\n\n### Fixed\n\n- #41: Response builder broke header value\n\n\n## [1.2.0] - 2016-03-29\n\n### Added\n\n- The RequestMatcher is built after the Symfony RequestMatcher and separates\n   scheme, host and path expressions and provides an option to filter on the\n   method\n- New RequestConditional authentication method using request matchers\n- Add automatic basic auth info detection based on the URL\n\n### Changed\n\n- Improved ResponseBuilder\n\n### Deprecated\n\n- RegexRequestMatcher, use RequestMatcher instead\n- Matching authenitcation method, use RequestConditional instead\n\n\n## [1.1.0] - 2016-02-25\n\n### Added\n\n - Add a request matcher interface and regex implementation\n - Add a callback request matcher implementation\n - Add a ResponseBuilder, to create PSR7 Response from a string\n\n### Fixed\n\n - Fix casting string on a FilteredStream not filtering the output\n\n\n## [1.0.0] - 2016-01-27\n\n\n## [0.2.0] - 2015-12-29\n\n### Added\n\n- Autoregistration of stream filters using Composer autoload\n- Cookie\n- [Apigen](http://www.apigen.org/) configuration\n\n\n## [0.1.2] - 2015-12-26\n\n### Added\n\n- Request and response factory bindings\n\n### Fixed\n\n- Chunk filter namespace in Dechunk stream\n\n\n## [0.1.1] - 2015-12-25\n\n### Added\n\n- Formatter\n\n\n## 0.1.0 - 2015-12-24\n\n### Added\n\n- Authentication\n- Encoding\n- Message decorator\n- Message factory (Guzzle, Diactoros)\n\n\n[Unreleased]: https://github.com/php-http/message/compare/1.10.0...HEAD\n[1.10.0]: https://github.com/php-http/message/compare/1.9.1...1.10.0\n[1.9.1]: https://github.com/php-http/message/compare/1.9.0...1.9.1\n[1.9.0]: https://github.com/php-http/message/compare/1.8.0...1.9.0\n[1.8.0]: https://github.com/php-http/message/compare/1.7.2...1.8.0\n[1.7.2]: https://github.com/php-http/message/compare/v1.7.1...1.7.2\n[1.7.1]: https://github.com/php-http/message/compare/1.7.0...v1.7.1\n[1.7.0]: https://github.com/php-http/message/compare/1.6.0...1.7.0\n[1.6.0]: https://github.com/php-http/message/compare/1.5.0...1.6.0\n[1.5.0]: https://github.com/php-http/message/compare/v1.4.1...1.5.0\n[1.4.1]: https://github.com/php-http/message/compare/v1.4.0...v1.4.1\n[1.4.0]: https://github.com/php-http/message/compare/v1.3.1...v1.4.0\n[1.3.1]: https://github.com/php-http/message/compare/v1.3.0...v1.3.1\n[1.3.0]: https://github.com/php-http/message/compare/v1.2.0...v1.3.0\n[1.2.0]: https://github.com/php-http/message/compare/v1.1.0...v1.2.0\n[1.1.0]: https://github.com/php-http/message/compare/v1.0.0...v1.1.0\n[1.0.0]: https://github.com/php-http/message/compare/0.2.0...v1.0.0\n[0.2.0]: https://github.com/php-http/message/compare/v0.1.2...0.2.0\n[0.1.2]: https://github.com/php-http/message/compare/v0.1.1...v0.1.2\n[0.1.1]: https://github.com/php-http/message/compare/v0.1.0...v0.1.1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "Copyright (c) 2015-2016 PHP HTTP Team <team@php-http.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.349609375,
          "content": "# HTTP Message\n\n[![Latest Version](https://img.shields.io/github/release/php-http/message.svg?style=flat-square)](https://github.com/php-http/message/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![tests](https://img.shields.io/github/actions/workflow/status/php-http/message/tests.yml?branch=1.x&label=tests&style=flat-square)](https://github.com/php-http/message/actions/workflows/tests.yml)\n[![Total Downloads](https://img.shields.io/packagist/dt/php-http/message.svg?style=flat-square)](https://packagist.org/packages/php-http/message)\n\n**HTTP Message related tools.**\n\n\n## Install\n\nVia Composer\n\n``` bash\n$ composer require php-http/message\n```\n\n\n## Intro\n\nThis package contains various PSR-7 tools which might be useful in an HTTP workflow:\n\n- Authentication method implementations\n- Various Stream encoding tools\n- Message decorators\n- Message factory implementations for Guzzle PSR-7 and Diactoros\n- Cookie implementation\n- Request matchers\n\n\n## Documentation\n\nPlease see the [official documentation](http://docs.php-http.org/en/latest/message.html).\n\n\n## Testing\n\n``` bash\n$ composer test\n```\n\n\n## Credits\n\nThanks to [Cuzzle](https://github.com/namshi/cuzzle) for inpiration for the `CurlCommandFormatter`.\n\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.\n"
        },
        {
          "name": "apigen.neon",
          "type": "blob",
          "size": 0.068359375,
          "content": "source:\n    - src/\n\ndestination: build/api/\n\ntemplateTheme: bootstrap\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.666015625,
          "content": "{\n    \"name\": \"php-http/message\",\n    \"description\": \"HTTP Message related tools\",\n    \"keywords\": [\n        \"message\",\n        \"http\",\n        \"psr-7\"\n    ],\n    \"homepage\": \"http://php-http.org\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Márk Sági-Kazár\",\n            \"email\": \"mark.sagikazar@gmail.com\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"clue/stream-filter\": \"^1.5\",\n        \"psr/http-message\": \"^1.1 || ^2.0\"\n    },\n    \"provide\": {\n        \"php-http/message-factory-implementation\": \"1.0\"\n    },\n    \"require-dev\": {\n        \"ext-zlib\": \"*\",\n        \"ergebnis/composer-normalize\": \"^2.6\",\n        \"guzzlehttp/psr7\": \"^1.0 || ^2.0\",\n        \"php-http/message-factory\": \"^1.0.2\",\n        \"phpspec/phpspec\": \"^5.1 || ^6.3 || ^7.1\",\n        \"slim/slim\": \"^3.0\",\n        \"laminas/laminas-diactoros\": \"^2.0 || ^3.0\"\n    },\n    \"suggest\": {\n        \"ext-zlib\": \"Used with compressor/decompressor streams\",\n        \"guzzlehttp/psr7\": \"Used with Guzzle PSR-7 Factories\",\n        \"laminas/laminas-diactoros\": \"Used with Diactoros Factories\",\n        \"slim/slim\": \"Used with Slim Framework PSR-7 implementation\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"ergebnis/composer-normalize\": true\n        }\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Http\\\\Message\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/filters.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"spec\\\\Http\\\\Message\\\\\": \"spec/\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpspec run\",\n        \"test-ci\": \"vendor/bin/phpspec run -c phpspec.ci.yml\"\n    }\n}\n"
        },
        {
          "name": "phpspec.ci.yml",
          "type": "blob",
          "size": 0.2919921875,
          "content": "suites:\n    message_suite:\n        namespace: Http\\Message\n        psr4_prefix: Http\\Message\nformatter.name: pretty\nextensions:\n    FriendsOfPhpSpec\\PhpSpec\\CodeCoverage\\CodeCoverageExtension: ~\ncode_coverage:\n    format: clover\n    output: build/coverage.xml\nrunner.maintainers.errors.level: 16383\n"
        },
        {
          "name": "phpspec.yml.dist",
          "type": "blob",
          "size": 0.1513671875,
          "content": "suites:\n    message_suite:\n        namespace: Http\\Message\n        psr4_prefix: Http\\Message\nformatter.name: pretty\nrunner.maintainers.errors.level: 16383\n"
        },
        {
          "name": "phpstan-baseline.neon",
          "type": "blob",
          "size": 6.67578125,
          "content": "parameters:\n\tignoreErrors:\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\Authentication\\\\\\\\QueryParam\\\\:\\\\:\\\\$params type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Authentication/QueryParam.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Authentication\\\\\\\\QueryParam\\\\:\\\\:__construct\\\\(\\\\) has parameter \\\\$params with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Authentication/QueryParam.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$statusLine of method Http\\\\\\\\Message\\\\\\\\Builder\\\\\\\\ResponseBuilder\\\\:\\\\:setStatus\\\\(\\\\) expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Builder/ResponseBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Result of \\\\|\\\\| is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Builder/ResponseBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Else branch is unreachable because ternary operator condition is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Builder/ResponseBuilder.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Cookie\\\\:\\\\:createWithoutValidation\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#2 \\\\$string2 of function strcasecmp expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$str of function preg_quote expects string, string\\\\|null given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Cookie\\\\:\\\\:validateName\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Cookie\\\\:\\\\:validateValue\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Cookie\\\\:\\\\:validateMaxAge\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\Cookie\\\\:\\\\:normalizeDomain\\\\(\\\\) should return string but returns string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Cookie.php\n\n\t\t-\n\t\t\tmessage: \"#^Class Http\\\\\\\\Message\\\\\\\\CookieJar implements generic interface IteratorAggregate but does not specify its types\\\\: TKey, TValue$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:addCookie\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:removeCookie\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:setCookies\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:addCookies\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:removeCookies\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:removeMatchingCookies\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Left side of && is always true\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\CookieJar\\\\:\\\\:clear\\\\(\\\\) has no return type specified\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieJar.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\CookieUtil\\\\:\\\\:\\\\$dateFormats type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/CookieUtil.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\DiactorosMessageFactory\\\\:\\\\:createRequest\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/DiactorosMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\DiactorosMessageFactory\\\\:\\\\:createResponse\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/DiactorosMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\GuzzleMessageFactory\\\\:\\\\:createRequest\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/GuzzleMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\GuzzleMessageFactory\\\\:\\\\:createResponse\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/GuzzleMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\SlimMessageFactory\\\\:\\\\:createRequest\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/SlimMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Method Http\\\\\\\\Message\\\\\\\\MessageFactory\\\\\\\\SlimMessageFactory\\\\:\\\\:createResponse\\\\(\\\\) has parameter \\\\$headers with no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/MessageFactory/SlimMessageFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\RequestMatcher\\\\\\\\RequestMatcher\\\\:\\\\:\\\\$methods type has no value type specified in iterable type array\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/RequestMatcher/RequestMatcher.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\RequestMatcher\\\\\\\\RequestMatcher\\\\:\\\\:\\\\$path \\\\(string\\\\) does not accept string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/RequestMatcher/RequestMatcher.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\RequestMatcher\\\\\\\\RequestMatcher\\\\:\\\\:\\\\$host \\\\(string\\\\) does not accept string\\\\|null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/RequestMatcher/RequestMatcher.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\Stream\\\\\\\\BufferedStream\\\\:\\\\:\\\\$resource \\\\(resource\\\\) does not accept resource\\\\|false\\\\.$#\"\n\t\t\tcount: 2\n\t\t\tpath: src/Stream/BufferedStream.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\Stream\\\\\\\\BufferedStream\\\\:\\\\:\\\\$stream \\\\(Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\StreamInterface\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Stream/BufferedStream.php\n\n\t\t-\n\t\t\tmessage: \"#^Property Http\\\\\\\\Message\\\\\\\\Stream\\\\\\\\BufferedStream\\\\:\\\\:\\\\$resource \\\\(resource\\\\) does not accept null\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/Stream/BufferedStream.php\n\n\t\t-\n\t\t\tmessage: \"#^Parameter \\\\#1 \\\\$stream of class Slim\\\\\\\\Http\\\\\\\\Stream constructor expects resource, resource\\\\|false given\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/StreamFactory/SlimStreamFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Unreachable statement \\\\- code above always terminates\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/UriFactory/SlimUriFactory.php\n\n\t\t-\n\t\t\tmessage: \"#^Call to function array_key_exists\\\\(\\\\) with 'chunk' and array<int, string> will always evaluate to false\\\\.$#\"\n\t\t\tcount: 1\n\t\t\tpath: src/filters.php\n"
        },
        {
          "name": "phpstan.neon.dist",
          "type": "blob",
          "size": 0.296875,
          "content": "includes:\n    - phpstan-baseline.neon\n\nparameters:\n    level: max\n    paths:\n        - src\n    excludePaths:\n        analyse:\n            - %currentWorkingDirectory%/src/MessageFactory/*\n            - %currentWorkingDirectory%/src/StreamFactory/*\n            - %currentWorkingDirectory%/src/UriFactory/*\n"
        },
        {
          "name": "puli.json",
          "type": "blob",
          "size": 4.693359375,
          "content": "{\n    \"version\": \"1.0\",\n    \"name\": \"php-http/message\",\n    \"bindings\": {\n        \"064d003d-78a1-48c4-8f3b-1f92ff25da69\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\DiactorosMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\MessageFactory\",\n            \"parameters\": {\n                \"depends\": \"Zend\\\\Diactoros\\\\Request\"\n            }\n        },\n        \"0836751e-6558-4d1b-8993-4a52012947c3\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\SlimMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\ResponseFactory\"\n        },\n        \"1d127622-dc61-4bfa-b9da-d221548d72c3\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\SlimMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\RequestFactory\"\n        },\n        \"2438c2d0-0658-441f-8855-ddaf0f87d54d\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\GuzzleMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\MessageFactory\",\n            \"parameters\": {\n                \"depends\": \"GuzzleHttp\\\\Psr7\\\\Request\"\n            }\n        },\n        \"253aa08c-d705-46e7-b1d2-e28c97eef792\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\GuzzleMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\RequestFactory\",\n            \"parameters\": {\n                \"depends\": \"GuzzleHttp\\\\Psr7\\\\Request\"\n            }\n        },\n        \"273a34f9-62f4-4ba1-9801-b1284d49ff89\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\StreamFactory\\\\GuzzleStreamFactory\",\n            \"type\": \"Http\\\\Message\\\\StreamFactory\",\n            \"parameters\": {\n                \"depends\": \"GuzzleHttp\\\\Psr7\\\\Stream\"\n            }\n        },\n        \"304b83db-b594-4d83-ae75-1f633adf92f7\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\UriFactory\\\\GuzzleUriFactory\",\n            \"type\": \"Http\\\\Message\\\\UriFactory\",\n            \"parameters\": {\n                \"depends\": \"GuzzleHttp\\\\Psr7\\\\Uri\"\n            }\n        },\n        \"3f4bc1cd-aa95-4702-9fa7-65408e471691\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\UriFactory\\\\DiactorosUriFactory\",\n            \"type\": \"Http\\\\Message\\\\UriFactory\",\n            \"parameters\": {\n                \"depends\": \"Zend\\\\Diactoros\\\\Uri\"\n            }\n        },\n        \"4672a6ee-ad9e-4109-a5d1-b7d46f26c7a1\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\SlimMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\MessageFactory\"\n        },\n        \"6234e947-d3bd-43eb-97d5-7f9e22e6bb1b\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\DiactorosMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\ResponseFactory\",\n            \"parameters\": {\n                \"depends\": \"Zend\\\\Diactoros\\\\Response\"\n            }\n        },\n        \"6a9ad6ce-d82c-470f-8e30-60f21d9d95bf\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\UriFactory\\\\SlimUriFactory\",\n            \"type\": \"Http\\\\Message\\\\UriFactory\"\n        },\n        \"72c2afa0-ea56-4d03-adb6-a9f241a8a734\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\StreamFactory\\\\SlimStreamFactory\",\n            \"type\": \"Http\\\\Message\\\\StreamFactory\"\n        },\n        \"95c1be8f-39fe-4abd-8351-92cb14379a75\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\StreamFactory\\\\DiactorosStreamFactory\",\n            \"type\": \"Http\\\\Message\\\\StreamFactory\",\n            \"parameters\": {\n                \"depends\": \"Zend\\\\Diactoros\\\\Stream\"\n            }\n        },\n        \"a018af27-7590-4dcf-83a1-497f95604cd6\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\GuzzleMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\ResponseFactory\",\n            \"parameters\": {\n                \"depends\": \"GuzzleHttp\\\\Psr7\\\\Response\"\n            }\n        },\n        \"c07955b1-de46-43db-923b-d07fae9382cb\": {\n            \"_class\": \"Puli\\\\Discovery\\\\Binding\\\\ClassBinding\",\n            \"class\": \"Http\\\\Message\\\\MessageFactory\\\\DiactorosMessageFactory\",\n            \"type\": \"Http\\\\Message\\\\RequestFactory\",\n            \"parameters\": {\n                \"depends\": \"Zend\\\\Diactoros\\\\Request\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}