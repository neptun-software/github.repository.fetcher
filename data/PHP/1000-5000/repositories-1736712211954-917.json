{
  "metadata": {
    "timestamp": 1736712211954,
    "page": 917,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "emoncms/emoncms",
      "stars": 1252,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3466796875,
          "content": ".project\n.buildpath\n.settings*\ndebian/emoncms*\nsettings.php\nsettings.ini\nold.settings.php\nemoncms.log\n.idea\n.vagrant/\n.env\n.vscode/*\n.*.sw*\n\n# Ignore all modules except core ones\nModules/*\nModules/*/\n!Modules/admin/\n!Modules/feed/\n!Modules/eventp/\n!Modules/input/\n!Modules/process/\n!Modules/schedule/\n!Modules/time/\n!Modules/user/\n!Modules/vis/\n\n/vendor/\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 8.7578125,
          "content": "#\n# Apache/PHP/Emoncms settings:\n#\n\n# Set the default handler.\nDirectoryIndex index.php\n\n# Various rewrite rules.\n<IfModule mod_rewrite.c>\n  RewriteEngine on\n \n  #RewriteBase /sites/emon/\n  RewriteRule ^emoncms/(.*)$ $1 [L]\n\n  # Rewrite URLs of the form 'x' to the form 'index.php?q=x'.\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteCond %{REQUEST_FILENAME} !-s\n  # Skip rewrites for known files, folders and 4xx/5xx errors so we know if something is wrong\n  RewriteCond %{REQUEST_URI} !=/favicon.ico\n  RewriteCond %{REQUEST_URI} !=/robots.txt\n  RewriteCond %{REQUEST_URI} !^/.well-known/.*$\n  RewriteCond %{REQUEST_URI} !^/?docs.*$\n  RewriteCond %{REQUEST_URI} !^/?Lib.*$\n  RewriteCond %{REQUEST_URI} !^/?Modules.*$\n  RewriteCond %{REQUEST_URI} !^/?scripts.*$\n  RewriteCond %{REQUEST_URI} !^/?Theme.*$\n  RewriteCond %{ENV:REDIRECT_STATUS} ![45]0[0-9]\n  RewriteRule ^(.*)$ index.php?q=$1 [L,QSA]\n</IfModule>\n\n# ------------------------------------------------------------------------------\n# Rewrite auth header. Fix Authorization: Bearer\n# https://cweiske.de/tagebuch/php-apache-authorization.htm\n# ------------------------------------------------------------------------------\n<IfModule mod_setenvif.c>\n  SetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=$1\n</IfModule>\n\n# ------------------------------------------------------------------------------\n# The following are taken from html5 boilerplate\n# url: https://github.com/h5bp/html5-boilerplate/blob/master/.htaccess\n# ------------------------------------------------------------------------------\n\n# ------------------------------------------------------------------------------\n# | Proper MIME types for all files                                            |\n# ------------------------------------------------------------------------------\n\n<IfModule mod_mime.c>\n\n  # Audio\n    AddType audio/mp4                                   m4a f4a f4b\n    AddType audio/ogg                                   oga ogg opus\n\n  # Data interchange\n    AddType application/json                            json map\n    AddType application/ld+json                         jsonld\n\n  # JavaScript\n    # Normalize to standard type.\n    # http://tools.ietf.org/html/rfc4329#section-7.2\n    AddType application/javascript                      js\n\n  # Video\n    AddType video/mp4                                   f4v f4p m4v mp4\n    AddType video/ogg                                   ogv\n    AddType video/webm                                  webm\n    AddType video/x-flv                                 flv\n\n  # Web fonts\n    AddType application/font-woff                       woff\n    AddType application/vnd.ms-fontobject               eot\n\n    # Browsers usually ignore the font MIME types and simply sniff the bytes\n    # to figure out the font type.\n    # http://mimesniff.spec.whatwg.org/#matching-a-font-type-pattern\n\n    # Chrome however, shows a warning if any other MIME types are used for\n    # the following fonts.\n\n    AddType application/x-font-ttf                      ttc ttf\n    AddType font/opentype                               otf\n\n    # Make SVGZ fonts work on the iPad.\n    # https://twitter.com/FontSquirrel/status/14855840545\n    AddType     image/svg+xml                           svgz\n    AddEncoding gzip                                    svgz\n\n  # Other\n    AddType application/octet-stream                    safariextz\n    AddType application/x-chrome-extension              crx\n    AddType application/x-opera-extension               oex\n    AddType application/x-web-app-manifest+json         webapp\n    AddType application/x-xpinstall                     xpi\n    AddType application/xml                             atom rdf rss xml\n    AddType image/webp                                  webp\n    AddType image/x-icon                                cur\n    AddType text/cache-manifest                         appcache manifest\n    AddType text/vtt                                    vtt\n    AddType text/x-component                            htc\n    AddType text/x-vcard                                vcf\n\n</IfModule>\n\n# ------------------------------------------------------------------------------\n# | UTF-8 encoding                                                             |\n# ------------------------------------------------------------------------------\n\n# Use UTF-8 encoding for anything served as `text/html` or `text/plain`.\nAddDefaultCharset utf-8\n\n# Force UTF-8 for certain file formats.\n<IfModule mod_mime.c>\n    AddCharset utf-8 .atom .css .js .json .jsonld .rss .vtt .webapp .xml\n</IfModule>\n\n# ------------------------------------------------------------------------------\n# | Compression                                                                |\n# ------------------------------------------------------------------------------\n\n<IfModule mod_deflate.c>\n\n    # Force compression for mangled headers.\n    # http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping\n    <IfModule mod_setenvif.c>\n        <IfModule mod_headers.c>\n            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\\s*,?\\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding\n            RequestHeader append Accept-Encoding \"gzip,deflate\" env=HAVE_Accept-Encoding\n        </IfModule>\n    </IfModule>\n\n    # Compress all output labeled with one of the following MIME-types\n    # (for Apache versions below 2.3.7, you don't need to enable `mod_filter`\n    #  and can remove the `<IfModule mod_filter.c>` and `</IfModule>` lines\n    #  as `AddOutputFilterByType` is still in the core directives).\n    <IfModule mod_filter.c>\n        AddOutputFilterByType DEFLATE application/atom+xml \\\n                                      application/javascript \\\n                                      application/json \\\n                                      application/ld+json \\\n                                      application/rss+xml \\\n                                      application/vnd.ms-fontobject \\\n                                      application/x-font-ttf \\\n                                      application/x-web-app-manifest+json \\\n                                      application/xhtml+xml \\\n                                      application/xml \\\n                                      font/opentype \\\n                                      image/svg+xml \\\n                                      image/x-icon \\\n                                      text/css \\\n                                      text/html \\\n                                      text/plain \\\n                                      text/x-component \\\n                                      text/xml\n    </IfModule>\n\n</IfModule>\n\n# ------------------------------------------------------------------------------\n# | File access                                                                |\n# ------------------------------------------------------------------------------\n\n# Block access to directories without a default document.\n# You should leave the following uncommented, as you shouldn't allow anyone to\n# surf through every directory on your server (which may includes rather private\n# places such as the CMS's directories).\n# CHAVEIRO: documentation needs this disabled\n<IfModule mod_autoindex.c>\n#    Options -Indexes\n</IfModule>\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n# Block access to hidden files and directories.\n# This includes directories used by version control systems such as Git and SVN.\n\n<IfModule mod_rewrite.c>\n    RewriteCond %{SCRIPT_FILENAME} -d [OR]\n    RewriteCond %{SCRIPT_FILENAME} -f\n    RewriteCond %{REQUEST_URI} !^/.well-known/.*$\n    RewriteRule \"(^|/)\\.\" - [F]\n</IfModule>\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n# Block access to files that can expose sensitive information.\n\n# By default, block access to backup and source files that may be left by some\n# text editors and can pose a security risk when anyone has access to them.\n# http://feross.org/cmsploit/\n\n# IMPORTANT: Update the `<FilesMatch>` regular expression from below to include\n# any files that might end up on your production server and can expose sensitive\n# information about your website. These files may include: configuration files,\n# files that contain metadata about the project (e.g.: project dependencies),\n# build scripts, etc..\n\n<FilesMatch \"(^#.*#|\\.(bak|config|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$\">\n\n    # Apache < 2.3\n    <IfModule !mod_authz_core.c>\n        Order allow,deny\n        Deny from all\n        Satisfy All\n    </IfModule>\n\n    # Apache â‰¥ 2.3\n    <IfModule mod_authz_core.c>\n        Require all denied\n    </IfModule>\n\n</FilesMatch>\n\n# protect phpinfo, only allow localhost and local network access\n<Files php-info.php>\n    # LOCAL ACCESS ONLY\n    # Require local \n\n    # LOCAL AND LAN ACCESS\n    Require ip 10 172 192.168\n</Files>\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.2177734375,
          "content": "{\n    \"browser\": true,\n    \"esnext\": true,\n    \"globals\": {\n        \"$\": false\n    },\n    \"globalstrict\": true,\n    \"quotmark\": \"double\",\n    \"smarttabs\": true,\n    \"trailing\": true,\n    \"undef\": true,\n    \"unused\": true\n}\n"
        },
        {
          "name": "COPYRIGHT.txt",
          "type": "blob",
          "size": 1.0009765625,
          "content": "    Emoncms - open source energy visualisation\n    Part of the openenergymonitor.org project\n\n    Copyright (C) 2011,2012,2013,2014,2015,2016,2017,2018,2019 the OpenEnergyMonitor researchers (see individual contributions from github commits)\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n    Contact:\n\n    Trystan Lea\n    trystan.lea@openenergymonitor.org\n    http://openenergymonitor.org\n    http://emoncms.org\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 31.626953125,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "Modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.25390625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nTo report a vulnerability privately, please email Trystan Lea the main project contact on trystanlea@openenergymonitor.org\n\nAlternatively please create a github issue describing the vulnerability.\n\nThanks a lot\n"
        },
        {
          "name": "Theme",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.900390625,
          "content": "{\n    \"name\": \"emoncms/emoncms\",\n    \"homepage\": \"https://emoncms.org\",\n    \"description\": \"Web-app for processing, logging and visualising energy, temperature and other environmental data\",\n    \"type\": \"project\",\n    \"support\": {\n        \"forum\": \"https://community.openenergymonitor.org/\"\n    },\n    \"require-dev\": {\n        \"php-parallel-lint/php-parallel-lint\": \"^1.2.0\"\n    },\n    \"scripts\": {\n        \"test\": [\n            \"parallel-lint . --exclude vendor\"\n        ]\n    },\n    \"license\": \"AGPL-3.0-or-later\",\n    \"require\": {\n        \"ext-ctype\": \"*\",\n        \"ext-curl\": \"*\",\n        \"ext-gettext\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-mysqli\": \"*\",\n        \"ext-openssl\": \"*\",\n        \"ext-zlib\": \"*\"\n    },\n    \"suggest\": {\n        \"ext-cassandra\": \"Cassandra storage engine\",\n        \"ext-mosquitto-php\": \"Mosquitto MQTT\",\n        \"ext-redis\": \"Redis storage engine\"\n    }\n}\n"
        },
        {
          "name": "core.php",
          "type": "blob",
          "size": 10.6787109375,
          "content": "<?php\n\n/*\n\n    All Emoncms code is released under the GNU Affero General Public License.\n    See COPYRIGHT.txt and LICENSE.txt.\n\n    ---------------------------------------------------------------------\n    Emoncms - open source energy visualisation\n    Part of the OpenEnergyMonitor project:\n    http://openenergymonitor.org\n\n*/\n\n// no direct access\ndefined('EMONCMS_EXEC') or die('Restricted access');\n\nfunction is_https() {\n    // Detect if we are running HTTPS or proxied HTTPS\n    if (server('HTTPS') == 'on') {\n        // Web server is running native HTTPS\n        return true;\n    } elseif (server('HTTP_X_FORWARDED_PROTO') == \"https\") {\n        // Web server is running behind a proxy which is running HTTPS\n        return true;\n    } elseif (server('HTTP_X_FORWARDED_PORT') == 443) {\n        // Web server is running behind a proxy which is running HTTPS\n        return true;\n    } elseif (request_header('HTTP_X_FORWARDED_PROTO') == \"https\") {\n        return true;\n    }\n    return false;\n}\n\nfunction get_application_path($manual_domain=false)\n{\n    if (is_https()) {\n        $proto = \"https\";\n    } else {\n        $proto = \"http\";\n    }\n\n    if ($manual_domain) {\n        return \"$proto://\".$manual_domain.\"/\";\n    }\n\n    if (isset($_SERVER['HTTP_X_FORWARDED_HOST'])) {\n        $filepath = \"$proto://\" . server('HTTP_X_FORWARDED_HOST');\n        if (isset($_SERVER['HTTP_X_INGRESS_PATH'])) {\n            // web server is running in ingress mode in home assistant\n            $filepath .= server('HTTP_X_INGRESS_PATH');\n        }\n        $filepath .= server('SCRIPT_NAME');\n        $path = dirname($filepath) . \"/\";\n    } else {\n        $path = dirname(\"$proto://\" . server('HTTP_HOST') . server('SCRIPT_NAME')) . \"/\";\n    }\n\n    return $path;\n}\n\nfunction db_check($mysqli, $database)\n{\n    $result = $mysqli->query(\"SELECT count(table_schema) from information_schema.tables WHERE table_schema = '$database'\");\n    $row = $result->fetch_array();\n    return $row['0'] > 0;\n}\n\nfunction controller($controller_name)\n{\n    $output = array('content'=>EMPTY_ROUTE);\n\n    if ($controller_name) {\n        $controller = $controller_name.\"_controller\";\n        $controllerScript = \"Modules/\".$controller_name.\"/\".$controller.\".php\";\n        if (is_file($controllerScript)) {\n            load_language_files(\"Modules/\".$controller_name.\"/locale\");\n\n            require_once $controllerScript;\n            $output = $controller();\n            if (!is_array($output) || !isset($output[\"content\"])) {\n                $output = array(\"content\"=>$output);\n            }\n            $output['is_controller'] = true;\n        } else {\n            $output['is_controller'] = false;\n        }\n    }\n    return $output;\n}\n\nfunction view($filepath, array $args = array())\n{\n    global $path;\n    $args['path'] = $path;\n    $content = '';\n    if (file_exists($filepath)) {\n        extract($args);\n        ob_start();\n        include \"$filepath\";\n        $content = ob_get_clean();\n    }\n    return $content;\n}\n/**\n * strip slashes from GET values or null if not set\n *\n * @param string $index name of $_GET item\n *\n **/\nfunction get($index,$error_if_missing=false,$default=null)\n{\n    $val = $default;\n    if (isset($_GET[$index])) {\n        $val = rawurldecode($_GET[$index]);\n    } elseif ($error_if_missing) {\n        header('Content-Type: text/plain');\n        die(\"missing $index parameter\");\n    }\n    if (!is_null($val)) {\n        $val = stripslashes($val);\n    }\n    return $val;\n}\n/**\n * strip slashes from POST values or null if not set\n *\n * @param string $index name of $_POST item\n *\n **/\nfunction post($index,$error_if_missing=false,$default=null)\n{\n    $val = $default;\n    if (isset($_POST[$index])) {\n        // PHP automatically converts POST names with brackets `field[]` to type array\n        if (!is_array($_POST[$index])) {\n            $val = rawurldecode($_POST[$index]); // does not decode the plus symbol into spaces\n        } else {\n            $val = htmlspecialchars(json_encode($_POST[$index]));\n        }\n    } elseif ($error_if_missing) {\n        header('Content-Type: text/plain');\n        die(\"missing $index parameter\");\n    }\n\n    if (!is_null($val)) {\n        if (is_array($val)) {\n            $val = array_map(\"stripslashes\", $val);\n        } else {\n            $val = stripslashes($val);\n        }\n    }\n    return $val;\n}\n/**\n * strip slashes from POST or GET values or null if not set\n *\n * @param string $index name of $_POST or $_GET item\n *\n **/\nfunction prop($index,$error_if_missing=false,$default=null)\n{\n    $val = $default;\n    if (isset($_GET[$index])) {\n        $val = $_GET[$index];\n    } elseif (isset($_POST[$index])) {\n        $val = $_POST[$index];\n    } elseif ($error_if_missing) {\n        header('Content-Type: text/plain');\n        die(\"missing $index parameter\");\n    }\n\n    if(!is_null($val)) {\n        if (is_array($val)) {\n            $val = array_map(\"stripslashes\", $val);\n        } else {\n            $val = stripslashes($val);\n        }\n    }\n    return $val;\n}\n\nfunction request_header($index)\n{\n   $val = null;\n   $headers = apache_request_headers();\n   if (isset($headers[$index])) {\n        $val = $headers[$index];\n  }\n  return $val;\n}\n\n\nfunction server($index)\n{\n    $val = null;\n    if (isset($_SERVER[$index])) {\n        $val = $_SERVER[$index];\n    }\n    return $val;\n}\n\nfunction delete($index)\n{\n    parse_str(file_get_contents(\"php://input\"), $_DELETE);//create array with posted (DELETE) method) values\n    $val = null;\n    if (isset($_DELETE[$index])) {\n        $val = $_DELETE[$index];\n    }\n\n    if (is_array($val)) {\n        $val = array_map(\"stripslashes\", $val);\n    } else {\n        $val = stripslashes($val);\n    }\n    return $val;\n}\nfunction put($index)\n{\n    parse_str(file_get_contents(\"php://input\"), $_PUT);//create array with posted (PUT method) values\n    $val = null;\n    if (isset($_PUT[$index])) {\n        $val = $_PUT[$index];\n    }\n\n    if (is_array($val)) {\n        $val = array_map(\"stripslashes\", $val);\n    } else {\n        $val = stripslashes($val);\n    }\n    return $val;\n}\n\nfunction version()\n{\n    $version_file = json_decode(file_get_contents('./version.json'));\n    return $version_file->version;\n}\n\n\nfunction load_db_schema()\n{\n    $schema = array();\n    $dir = scandir(\"Modules\");\n    for ($i=2; $i<count($dir); $i++) {\n        if (filetype(\"Modules/\".$dir[$i])=='dir' || filetype(\"Modules/\".$dir[$i])=='link') {\n            if (is_file(\"Modules/\".$dir[$i].\"/\".$dir[$i].\"_schema.php\")) {\n                require \"Modules/\".$dir[$i].\"/\".$dir[$i].\"_schema.php\";\n            }\n        }\n    }\n    return $schema;\n}\n/**\n * binds the gettext translations to the correct file and domain/type\n *\n * @param string $path path to the directory containing the .mo files for each language\n * @param [string] $domain\n * @return void\n */\nfunction load_language_files($path, $domain = 'messages')\n{\n    // Load language files for module\n    bind_textdomain_codeset($domain, 'UTF-8');\n    bindtextdomain($domain, $path);\n    textdomain($domain);\n}\n\nfunction load_menu()\n{\n    global $menu;\n    $dir = scandir(\"Modules\");\n    for ($i=2; $i<count($dir); $i++)\n    {\n        if (filetype(\"Modules/\".$dir[$i])=='dir' || filetype(\"Modules/\".$dir[$i])=='link')\n        {\n            if (is_file(\"Modules/\".$dir[$i].\"/\".$dir[$i].\"_menu.php\"))\n            {\n                if (is_file(\"Modules/\".$dir[$i].\"/locale/\".$dir[$i].\"_messages.pot\")) {\n                    load_language_files(\"Modules/\".$dir[$i].\"/locale\",$dir[$i].\"_messages\"); // management of domains beginning with the name of the module\n                } else {\n                    load_language_files(\"Modules/\".$dir[$i].\"/locale\");\n                }\n                require \"Modules/\".$dir[$i].\"/\".$dir[$i].\"_menu.php\";\n            }\n        }\n    }\n}\n\nfunction http_request($method, $url, $data)\n{\n    $options = array();\n\n    if ($method==\"GET\") {\n        $urlencoded = http_build_query($data);\n        $url = \"$url?$urlencoded\";\n    } elseif ($method==\"POST\") {\n        $options[CURLOPT_POST] = 1;\n        $options[CURLOPT_POSTFIELDS] = $data;\n    }\n\n    $options[CURLOPT_URL] = $url;\n    $options[CURLOPT_RETURNTRANSFER] = 1;\n    $options[CURLOPT_CONNECTTIMEOUT] = 2;\n    $options[CURLOPT_TIMEOUT] = 5;\n\n    $curl = curl_init();\n    curl_setopt_array($curl, $options);\n    $resp = curl_exec($curl);\n    curl_close($curl);\n    return $resp;\n}\n\nfunction emoncms_error($message)\n{\n    return array(\"success\"=>false, \"message\"=>$message);\n}\n\nfunction call_hook($function_name, $args)\n{\n    // @todo: make args parameter optional\n    $dir = scandir(\"Modules\");\n    for ($i=2; $i<count($dir); $i++) {\n        if (filetype(\"Modules/\".$dir[$i])=='dir' || filetype(\"Modules/\".$dir[$i])=='link') {\n            if (is_file(\"Modules/\".$dir[$i].\"/\".$dir[$i].\"_hooks.php\")) {\n                require \"Modules/\".$dir[$i].\"/\".$dir[$i].\"_hooks.php\";\n                if (function_exists($dir[$i].'_'.$function_name)==true) {\n                    $hook = $dir[$i].'_'.$function_name;\n                    return $hook($args);\n                }\n            }\n        }\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------\n/**\n * return ip address of requesting machine\n * the ip address can be stored in different variables by the system.\n * which variable name may change dependant on different system setups.\n * this function *should return an acceptible value in most cases\n * @todo: more testing on different hardware/opperating systems/proxy servers etc.\n *\n * @return string\n */\nfunction get_client_ip_env()\n{\n    $ipaddress = filter_var(getenv('REMOTE_ADDR'), FILTER_VALIDATE_IP);\n    if (empty($ipaddress)) {\n        $ipaddress = '';\n    }\n    return $ipaddress;\n}\n\n// ---------------------------------------------------------------------------------------------------------\n// Generate secure key\n// ---------------------------------------------------------------------------------------------------------\nfunction generate_secure_key($length) {\n    if (function_exists('random_bytes')) {\n        return bin2hex(random_bytes($length));\n    } else {\n        return bin2hex(openssl_random_pseudo_bytes($length));\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------\n// Generate a 16 bytes (128 bits) UUID - RFC 4122 compliant Version 4\n// ---------------------------------------------------------------------------------------------------------\nfunction guidv4() {\n    if (function_exists('random_bytes')) {\n        $data = random_bytes(16);\n    } else {\n        $data = openssl_random_pseudo_bytes(16);\n    }\n    // Set version to 0100\n    $data[6] = chr(ord($data[6]) & 0x0f | 0x40);\n    // Set bits 6-7 to 10\n    $data[8] = chr(ord($data[8]) & 0x3f | 0x80);\n\n    // Output the 36 character UUID.\n    return vsprintf('%s%s-%s-%s-%s-%s%s%s', str_split(bin2hex($data), 4));\n}\n\n"
        },
        {
          "name": "default-settings.ini",
          "type": "blob",
          "size": 6.673828125,
          "content": "; ------------------------------------------------------------\n; Default emoncms settings.ini - DO NOT EDIT!!\n;\n; 1. copy example.settings.ini and rename to settings.ini\n; 2. edit entries in settings.ini as required\n; 3. copy settings from below into settings.ini as required\n;    The items in [] are sections. Any new setting must be \n;    within the right section in the settings.ini file\n; ------------------------------------------------------------\n\n; Set Emoncms installation domain here to secure installation e.g domain = myemoncmsinstall.org\ndomain = false\n; Suggested installation path for symlinked emoncms modules /opt/emoncms/modules\nemoncms_dir = \"/opt/emoncms\"\n; Suggested installation path for emonpi and EmonScripts repository:\nopenenergymonitor_dir = \"/opt/openenergymonitor\"\n\n; Show all fatal PHP errors\ndisplay_errors = true\n\n; Set to true to run database update without logging in\n; URL Example: http://localhost/emoncms/admin/db\nupdatelogin = false\n\n; Mysql database settings\n[sql]\nserver   = \"localhost\"\ndatabase = \"emoncms\"\nusername = \"_DB_USER_\"\npassword = \"_DB_PASSWORD_\"\nport     = 3306\n; Skip database setup test - set to false once database has been setup.\ndbtest   = true\n\n\n; Redis\n[redis]\nenabled = false\nhost = 'localhost'\nport = 6379\nauth = ''\ndbnum = ''\n; Only a prefix of 'emoncms' or '' will be recognised by service-runner\nprefix = 'emoncms'\n\n\n; MQTT\n[mqtt]\n; The 'subscriber' topic format is rx/* - where * is the emoncms input node number.\n; The 'publisher' topic format is user selectable from the 'Publish to MQTT' input process, for example power/solar\n; Activate MQTT by changing to true\nenabled = false\nhost = 'localhost'\nport = 1883\nuser = ''\npassword = ''\nbasetopic = 'emon'\nclient_id = 'emoncms'\nuserid = 1\nmultiuser = false\n\n; secure MQTT parameters\n; capath must be defined to enable SSL usage.\n; This is the only setting required to connect to a SSL mqtt broker.\n;capath = '/etc/ssl/certs'\n; The following settigs are related to your CLIENT certificate, if your broker requires client authentication.\n; certpath must point to your client certificate\n;certpath = '/etc/letsencrypt/live/yoursite/fullkey.pem'\n; keypath must point to your client private key\n;keypath = '/etc/letsencrypt/live/yoursite/privatekey.pem'\n; keypw is the client private key password.\n; do not define if your private key is not password protected\n;keypw = ''\n\n; Input\n[input]\n; Max number of allowed different inputs per user. For limiting garbage rf data\nmax_node_id_limit = 32\n\n\n; Feed settings\n[feed]\n; Supported engines. List engines by id to disable feed creation.\n; Existing feeds with a hidden engine still work\n; MYSQL:0, MYSQLMEMORY:8, PHPTIMESERIES:2, PHPFINA:5, CASSANDRA:10\nengines_hidden = [0,8,10]\n\n; Redis Low-write mode\n; If enabled is true, requires redis enabled and feedwriter service running\nredisbuffer[enabled] = false\n; Number of seconds to wait before write buffer to disk - user selectable option\nredisbuffer[sleep] = 60\n\n; Engines working folder. Default is /var/lib/phpfina,phptimeseries\n; On windows or shared hosting you will likely need to specify a different data directory--\n; Make sure that emoncms has write permission's to the datadirectory folders\nphpfina[datadir] = '/var/lib/phpfina/'\nphptimeseries[datadir] = '/var/lib/phptimeseries/'\ncassandra[keyspace] = 'emoncms'\n; experimental feature for virtual feeds average, default is true, set to false to activate average agregation with all data points, will be slower\nvirtualfeed[data_sampling] = false\nmysqltimeseries[data_sampling] = false\n; Datapoint limit. Increasing this effects system performance but allows for more data points to be read from one api call\nmax_datapoints = 8928\n\n; Minimum feed interval\nmin_feed_interval = 10\n\n; CSV export options for the number of decimal_places, decimal_place_separator\n; and field_separator\n; The thousands separator is not used (specified as \"nothing\")\n; NOTE: don't make $csv_decimal_place_separator == $csv_field_separator\n; Adjust as appropriate for your location\n; number of decimal places\ncsv_decimal_places = 2\n\n; decimal place separator\ncsv_decimal_place_separator = \".\"\n\n; field separator\ncsv_field_separator = \",\"\n\n; Max csv download size in MB\ncsv_downloadlimit_mb = 25\n\n; User Interface settings\n[interface]\n\n; Applicaton name\nappname = \"emoncms\"\n\n; gettext  translations are found under each Module's locale directory\ndefault_language = 'en_GB'\n\n; Theme location (folder located under Theme/, and must have the same structure as the basic one)\ntheme = \"basic\"\n\n; Theme colour options: \"standard\", \"blue\", \"sun\"\nthemecolor = \"blue\"\n\n; Favicon filenme in Theme/$theme\nfavicon = \"favicon.png\"\n\n; Main menu collapses on lower screen widths\nmenucollapses = false\n\n; Show menu titles\nshow_menu_titles = true\n\n; Default controller and action if none are specified and user is anonymous\ndefault_controller = \"user\"\ndefault_action = \"login\"\n\n; Default controller and action if none are specified and user is logged in\ndefault_controller_auth = \"feed\"\ndefault_action_auth = \"list\"\n\n; Default feed viewer: \"vis/auto?feedid=\" or \"graph/\" - requires module https://github.com/emoncms/graph\nfeedviewpath = \"graph/\"\n\n; Enable multi user emoncms.\n; If set to false, emoncms will automatically remove the register form and\n; ability to create further users after the first user has been created\nenable_multi_user = false\n\n; Enable remember me feature\nenable_rememberme = true\n\n; Allow user to reset password\nenable_password_reset = false\n\n; If installed on Emonpi, allow admin menu tools\nenable_admin_ui = false\n\n; Show update section in admin\nenable_update_ui = true\n\n; Email verification\nemail_verification = false\n\n\n[public_profile]\n; Public profile functionality\n; Allows http:; yourdomain.com/[username]/[dash alias] or ?id=[dash id]\n; Alternative to http:; yourdomain.com/dashboard/view?id=[dash id]\n; Add optional '&embed=1' in the end to remove header and footer\nenabled = true\ncontroller = \"dashboard\"\naction = \"view\"\n\n\n; (OPTIONAL) Email SMTP, used for password reset or other email functions\n; Requires SwiftMailer v5.4.8, To install:\n; git -C /opt/emoncms/modules clone -b 'v5.4.8' --single-branch https://github.com/swiftmailer/swiftmailer.git\n[smtp]\n; Email address to email proccessed input values\ndefault_emailto = ''\n\nhost = \"\"\n; 25, 465, 587\nport = \"\"\nfrom_email = ''\nfrom_name = ''\n; sendmail, when enabled we use local email server instead smtp relay\nsendmail = false\n; Comment lines below that dont apply\n; ssl, tls\nencryption = \"\"\nusername = \"\"\npassword = \"\"\n\n\n; Log file configuration\n[log]\nenabled = true\n; On windows or shared hosting you will likely need to specify a \n; different logfile directory\nlocation = '/var/log/emoncms'\n; Log Level: 1=INFO, 2=WARN, 3=ERROR\nlevel = 2\n\n[device]\nenable_UDP_broadcast = true\n\n[cydynni]\n\n[postprocess]\ncron_enabled = 0\n"
        },
        {
          "name": "default-settings.php",
          "type": "blob",
          "size": 7.125,
          "content": "<?php\n# ------------------------------------------------------------\n# Default emoncms settings.php - DO NOT EDIT!!\n# ------------------------------------------------------------\n    \n$_settings = array(\n// Set Emoncms installation domain here to secure installation e.g domain = myemoncmsinstall.org\n\"domain\" => false,\n// Suggested installation path for symlinked emoncms modules /opt/emoncms\n\"emoncms_dir\" => \"/opt/emoncms\",\n// Suggested installation path for emonpi and EmonScripts repository: /opt/openenergymonitor\n\"openenergymonitor_dir\" => \"/opt/openenergymonitor\",\n\n// Show all fatal PHP errors\n\"display_errors\" => true,\n\n// Set to true to run database update without logging in\n// URL Example: http://localhost/emoncms/admin/db\n\"updatelogin\" => false,\n\n// Mysql database settings\n\"sql\"=>array(\n    \"server\"   => \"localhost\",\n    \"database\" => \"emoncms\",\n    \"username\" => \"_DB_USER_\",\n    \"password\" => \"_DB_PASSWORD_\",\n    \"port\"     => 3306,\n     // Skip database setup test - set to false once database has been setup.\n    \"dbtest\"   => true\n),\n\n// Redis\n\"redis\"=>array(\n    'enabled' => false,\n    'host'    => 'localhost',\n    'port'    => 6379,\n    'auth'    => '',\n    'dbnum'   => '',\n    'prefix'  => 'emoncms'\n),\n\n// MQTT\n\"mqtt\"=>array(\n    // The 'subscriber' topic format is rx/* - where * is the emoncms input node number.\n    // The 'publisher' topic format is user selectable from the 'Publish to MQTT' input process, for example power/solar\n    // Activate MQTT by changing to true\n    'enabled'   => false,\n    'host'      => 'localhost',\n    'port'      => 1883,\n    'user'      => '',\n    'password'  => '',\n    'basetopic' => 'emon',\n    'client_id' => 'emoncms',\n    'userid'    => 1,\n    'multiuser' => false\n),\n\n// Input\n\"input\"=>array(\n    // Max number of allowed different inputs per user. For limiting garbage rf data\n    'max_node_id_limit' => 32\n),\n\n// Feed settings\n\"feed\"=>array(\n    // Supported engines. Uncommented engines will not be available for user to create a new feed using it. Existing feeds with a hidden engine still work.\n    // Place a ',' as the first character on all uncommented engines lines but first.\n    'engines_hidden'=>array(\n     Engine::MYSQL         // 0  Mysql traditional\n    ,Engine::MYSQLMEMORY   // 8  Mysql with MEMORY tables on RAM. All data is lost on shutdown\n    //,Engine::PHPTIMESERIES // 2\n    //,Engine::PHPFINA      // 5\n    ,Engine::CASSANDRA    // 10 Apache Cassandra\n    ),\n\n    // Redis Low-write mode\n    'redisbuffer'   => array(\n        // If enabled is true, requires redis enabled and feedwriter service running\n        'enabled' => false,\n        // Number of seconds to wait before write buffer to disk - user selectable option\n        'sleep' => 60\n    ),\n    \n    // Engines working folder. Default is /var/lib/phpfina,phptimeseries\n    // On windows or shared hosting you will likely need to specify a different data directory--\n    // Make sure that emoncms has write permission's to the datadirectory folders\n    'phpfina'       => array('datadir'  => '/var/lib/phpfina/'),\n    'phptimeseries' => array('datadir'  => '/var/lib/phptimeseries/'),\n    'cassandra'     => array('keyspace' => 'emoncms'),\n    // experimental feature for virtual feeds average, default is true, set to false to activate average agregation with all data points, will be slower\n    'virtualfeed'   => array('data_sampling' => false),\n    'mysqltimeseries'   => array('data_sampling' => false),\n    // Datapoint limit. Increasing this effects system performance but allows for more data points to be read from one api call\n    'max_datapoints'        => 8928,\n    \n    // Minumum feed interval\n    'min_feed_interval' => 10,\n    \n    // CSV export options for the number of decimal_places, decimal_place_separator and field_separator\n    // The thousands separator is not used (specified as \"nothing\")\n    // NOTE: don't make $csv_decimal_place_separator == $csv_field_separator\n    // Adjust as appropriate for your location\n    // number of decimal places\n    'csv_decimal_places' => 2,\n\n    // decimal place separator\n    'csv_decimal_place_separator' => \".\",\n\n    // field separator\n    'csv_field_separator' => \",\",\n    \n    // Max csv download size in MB\n    'csv_downloadlimit_mb' => 25\n),\n\n// User Interface settings\n\"interface\"=>array(\n\n    // Applicaton name\n    'appname' => \"emoncms\",\n\n    // gettext  translations are found under each Module's locale directory\n    'default_language' => 'en_GB',\n\n    // Theme location (folder located under Theme/, and must have the same structure as the basic one)\n    'theme' => \"basic\",\n    \n    // Theme colour options: \"standard\", \"blue\", \"sun\"\n    'themecolor' => \"blue\",\n\n    // Favicon filenme in Theme/$theme\n    'favicon' => \"favicon.png\",\n\n    // Main menu collapses on lower screen widths\n    'menucollapses' => false,\n    \n    // Show menu titles\n    'show_menu_titles' => true,\n    \n    // Default controller and action if none are specified and user is anonymous\n    'default_controller' => \"user\",\n    'default_action' => \"login\",\n\n    // Default controller and action if none are specified and user is logged in\n    'default_controller_auth' => \"feed\",\n    'default_action_auth' => \"list\",\n    \n    // Default feed viewer: \"vis/auto?feedid=\" or \"graph/\" - requires module https://github.com/emoncms/graph\n    'feedviewpath' => \"vis/auto?feedid=\",\n\n    // Enable multi user emoncms.\n    // If set to false, emoncms will automatically remove the register form and\n    // ability to create further users after the first user has been created\n    'enable_multi_user' => false,\n\n    // Enable remember me feature\n    'enable_rememberme' => true,\n\n    // Allow user to reset password\n    'enable_password_reset' => false,\n    \n    // If installed on Emonpi, allow admin menu tools\n    'enable_admin_ui' => false,\n    \n    // Show update section in admin\n    'enable_update_ui' => true,\n    \n    // Email verification\n    'email_verification' => false\n),\n\n\"public_profile\"=>array(\n    // Public profile functionality\n    // Allows http://yourdomain.com/[username]/[dash alias] or ?id=[dash id]\n    // Alternative to http://yourdomain.com/dashboard/view?id=[dash id]\n    // Add optional '&embed=1' in the end to remove header and footer\n    'enabled' => true,\n    'controller' => \"dashboard\",\n    'action' => \"view\"\n),\n\n// (OPTIONAL) Email SMTP, used for password reset or other email functions\n\"smtp\"=>array(\n    // Email address to email proccessed input values\n    'default_emailto' => '',\n    'from_email' => '',\n    'from_name' => '',\n    // sendmail, when enabled we use local email server instead smtp relay\n    'sendmail' => false,\n    // lines below are ignored when sendmail is enabled\n    'host'=>\"\",\n    // 25, 465, 587\n    'port'=>\"\",\n    // comment lines below that dont apply\n    // ssl, tls\n    'encryption'=>\"\",\n    'username'=>\"\",\n    'password'=>\"\"\n),\n\n// Log file configuration\n\"log\"=>array(\n    \"enabled\" => true,\n    // On windows or shared hosting you will likely need to specify a\n    // different logfile directory\n    \"location\" => \"/var/log/emoncms\",\n    // Log Level: 1=INFO, 2=WARN, 3=ERROR\n    \"level\" => 2\n),\n\n\"device\"=>array(\n    \"enable_UDP_broadcast\" => true\n),\n\n\"cydynni\"=>array(),\n\n\"postprocess\"=>array(\n    \"cron_enabled\"=>0\n)\n);\n"
        },
        {
          "name": "default.emonpi.settings.php",
          "type": "blob",
          "size": 6.556640625,
          "content": "<?php\n\n//1 #### Mysql database settings\n    $server   = \"127.0.0.1\";\n    $database = \"emoncms\";\n    $username = \"emoncms\";\n    $password = \"emonpiemoncmsmysql2016\";\n    $port     = \"3306\";\n    // Skip database setup test - set to false once database has been setup.\n    $dbtest = true;\n\n\n//2 #### Redis\n    $redis_enabled = true;\n    $redis_server = array( 'host'   => 'localhost',\n                           'port'   => 6379,\n                           'auth'   => '',\n                           'prefix' => '');\n\n\n//3 #### MQTT\n    // The 'subscriber' topic format is rx/* - where * is the emoncms input node number.\n    // The 'publisher' topic format is user selectable from the 'Publish to MQTT' input process, for example power/solar\n    $mqtt_enabled = true;            // Activate MQTT by changing to true\n    $mqtt_server = array( 'host'     => 'localhost',\n                          'port'     => 1883,\n                          'user'     => 'emonpi',\n                          'password' => 'emonpimqtt2016',\n                          'basetopic'=> 'emon',\n                          'client_id' => 'emoncms'\n                          );\n\n\n//4 #### Engine settings\n    $feed_settings = array(\n        // Supported engines. Uncommented engines will not be available for user to create a new feed using it. Existing feeds with a hidden engine still work.\n        // Place a ',' as the first character on all uncommented engines lines but first.\n        'engines_hidden'=>array(\n            Engine::MYSQL,           // 0  Mysql traditional\n            //Engine::MYSQLMEMORY,   // 8  Mysql with MEMORY tables on RAM. All data is lost on shutdown\n            //Engine::PHPTIMESERIES, // 2\n            //Engine::PHPFINA,       // 5\n            Engine::CASSANDRA        // 10 Apache Cassandra disabled by default for emonpi, enable if you wish to use\n        ),\n\n        // Redis Low-write mode\n        'redisbuffer'=>array(\n            'enabled' => true      // If enabled is true, requires redis enabled and feedwriter service running\n            ,'sleep' => 60          // Number of seconds to wait before write buffer to disk - user selectable option\n        ),\n\n        'csvdownloadlimit_mb' => 25,     // Max csv download size in MB\n\n        // Engines working folder. Default is /var/lib/phpfina,phptimeseries\n        // On windows or shared hosting you will likely need to specify a different data directory--\n        // Make sure that emoncms has write permission's to the datadirectory folders\n        'phpfina'=>array(\n            'datadir' => '/home/pi/data/phpfina/'\n        ),\n        'phptimeseries'=>array(\n            'datadir' => '/home/pi/data/phptimeseries/'\n        ),\n        'cassandra'=>array(\n            'keyspace' => 'emoncms'\n        )\n    );\n\n    $homedir = \"/home/pi\";\n\n    // Max number of allowed different inputs per user. For limiting garbage rf data\n    $max_node_id_limit = 32;\n    // Datapoint limit. Increasing this effects system performance but allows for more data points to be read from one api call\n    $max_datapoints = 8928;\n\n\n//5 #### User Interface settings\n    // gettext  translations are found under each Module's locale directory\n    $default_language = 'en_GB';\n    \n    // Theme location (folder located under Theme/, and must have the same structure as the basic one)\n    $theme = \"basic\";\n    // Theme colour options: \"standard\", \"blue\", \"sun\"\n    $themecolor = \"blue\";\n\n    // Favicon filenme in Theme/$theme\n    $favicon = \"favicon_emonpi.png\";\n\n    // Use full screen width\n    $fullwidth = true;\n\n    // Main menu collapses on lower screen widths\n    $menucollapses = false;\n\n    // Enable multi user emoncms.\n    // If set to false, emoncms will automatically remove the register form and\n    // ability to create further users after the first user has been created\n    $enable_multi_user = false;\n\n    // Enable remember me feature\n    $enable_rememberme = true;\n\n    // Allow user to reset his password\n    $enable_password_reset = false;\n\n    // Email address to email proccessed input values\n    $default_emailto = 'root@localhost';\n\n    // (OPTIONAL) Email SMTP, used for password reset or other email functions\n    $smtp_email_settings = array(\n      'host'=>\"smtp.gmail.com\",\n      'port'=>\"465\",  // 25, 465, 587\n      'from'=>array('noreply@emoncms.org' => 'EmonCMS'),\n      // comment lines below that dont apply\n      'encryption'=>\"ssl\", // ssl, tls\n      'username'=>\"yourusername@gmail.com\",\n      'password'=>\"yourpassword\"\n    );\n\n    // Default controller and action if none are specified and user is anonymous\n    $default_controller = \"user\";\n    $default_action = \"login\";\n\n    // Default controller and action if none are specified and user is logged in\n    $default_controller_auth = \"feed\";\n    $default_action_auth = \"list\";\n\n    // Public profile functionality\n    // Allows http://yourdomain.com/[username]/[dash alias] or ?id=[dash id]\n    // Alternative to http://yourdomain.com/dashboard/view?id=[dash id]\n    // Add optional '&embed=1' in the end to remove header and footer\n    $public_profile_enabled = true;\n    $public_profile_controller = \"dashboard\";\n    $public_profile_action = \"view\";\n    \n    // Default feed viewer: \"vis/auto?feedid=\" or \"graph/\" - requires module https://github.com/emoncms/graph\n    $feedviewpath = \"graph/\";\n\n\n//6 #### Other settings\n    // Log file configuration\n    $log_enabled = true;\n    $log_location = \"/var/log/emoncms\";\n    // Log Level: 1=INFO, 2=WARN, 3=ERROR\n    $log_level = 2;\n\n    // If installed on Emonpi, allow admin menu tools\n    $allow_emonpi_admin = true;\n\n    //experimental feature for virtual feeds average, default is true, set to false to activate average agregation with all data points, will be slower\n    $data_sampling = false;\n\n    // Show all fatal PHP errors\n    $display_errors = true;\n\n    // CSV export options for the number of decimal_places, decimal_place_separator and field_separator\n    // The thousands separator is not used (specified as \"nothing\")\n    // NOTE: don't make $csv_decimal_place_separator == $csv_field_separator\n    // Adjust as appropriate for your location\n    // number of decimal places\n    $csv_decimal_places = 2;\n\n    // decimal place separator\n    $csv_decimal_place_separator = \".\";\n\n    // field separator\n    $csv_field_separator = \",\";\n\n    // set true on docker installations\n    $allow_config_env_vars = false;\n\n    // Dont change - developer updates this when the config format changes\n    $config_file_version = \"10\";\n    \n    // Set to true to run database update without logging in\n    // URL Example: http://localhost/emoncms/admin/db\n    $updatelogin = false;\n\n    // Applicaton name\n    $appname = \"emoncms\";\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "emoncms_graphic.png",
          "type": "blob",
          "size": 161.37109375,
          "content": null
        },
        {
          "name": "example.settings.ini",
          "type": "blob",
          "size": 2.1865234375,
          "content": "; -----------------------------------------------------\n; Example emoncms settings.ini file\n;\n; default-settings.ini contains the default settings.\n; \n; Settings entered here override the default settings.\n; Enter only the settings you wish to customise here.\n;\n; The following is a barebones example, copy across\n; other settings from default-settings.ini as required\n; Maintain the section structure (items in [])\n; -----------------------------------------------------\n\n; Set Emoncms installation domain here to secure installation e.g domain = myemoncmsinstall.org\ndomain = false\n\n; MYSQL Database settings\n[sql]\nserver = \"localhost\"\ndatabase = \"emoncms\"\nusername = \"emoncms\"\npassword = \"password\"\n; Skip database setup test - set to false once database has been setup.\ndbtest   = true\n\n; Redis Database (used as a cache for improved performance)\n[redis]\nenabled = true\n\n; MQTT Used with emoncms_mqtt service to send and receive data over MQTT\n; If MQTT settings are changed reboot or execute \"sudo systemctl restart emoncms_mqtt.service\"\n[mqtt]\nenabled = false\nuser = 'username'\npassword = 'password'\n\n; Feed engine settings\n[feed]\n; Supported engines. List engines by id to disable feed creation.\n; Existing feeds with a hidden engine still work\n; Recommended emoncms feed engines are PHPFINA and PHPTIMESERIES\n; MYSQL:0, MYSQLMEMORY:8, PHPTIMESERIES:2, PHPFINA:5, CASSANDRA:10\nengines_hidden = [0,10]\n; Buffer data to be written to\nredisbuffer[enabled] = false\nphpfina[datadir] = '/var/opt/emoncms/phpfina/'\nphptimeseries[datadir] = '/var/opt/emoncms/phptimeseries/'\n\n; Enable the graph module if you have it installed\n[interface]\nfeedviewpath = \"graph/\"\n\n[public_profile]\n\n; Emailer\n; Requires SwiftMailer v5.4.8, To install:\n; git -C /opt/emoncms/modules clone -b 'v5.4.8' --single-branch https://github.com/swiftmailer/swiftmailer.git\n[smtp]\n; Email address to email proccessed input values\n;default_emailto = 'root@localhost'\n;host = \"smtp.gmail.com\"\n\n; 25, 465, 587\n;port = \"465\"\n;from_email = 'noreply@emoncms.org'\n;from_name = 'EmonCMS'\n\n; Comment lines below that dont apply\n; ssl, tls\n;encryption = \"ssl\"\n;username = \"yourusername@gmail.com\"\n;password = \"yourpassword\"\n\n[log]\n; Log Level: 1=INFO, 2=WARN, 3=ERROR\nlevel = 2\n"
        },
        {
          "name": "example.settings.php",
          "type": "blob",
          "size": 2.509765625,
          "content": "<?php\n// -----------------------------------------------------\n// Example emoncms settings.php file\n//\n// default-settings.php contains the default settings.\n//\n// Settings entered here override the default settings.\n// Enter only the settings you wish to customise here.\n//\n// The following is a barebones example, copy across\n// other settings from default-settings.php as required\n// Maintain the section structure (items in [])\n// -----------------------------------------------------\n\n$settings = array(\n// Set Emoncms installation domain here to secure installation e.g domain = myemoncmsinstall.org\n\"domain\" => false,\n\n// MYSQL Database settings\n\"sql\"=>array(\n    \"server\"   => \"localhost\",\n    \"database\" => \"emoncms\",\n    \"username\" => \"_DB_USER_\",\n    \"password\" => \"_DB_PASSWORD_\",\n    \"port\"     => 3306,\n     // Skip database setup test - set to false once database has been setup.\n    \"dbtest\"   => true\n),\n\n// Redis Database (used as a cache for improved performance)\n\"redis\"=>array(\n    'enabled' => false\n),\n\n// MQTT Used with emoncms_mqtt service to send and receive data over MQTT\n// If MQTT settings are changed reboot or execute \"sudo systemctl restart emoncms_mqtt.service\"\n\"mqtt\"=>array(\n    'enabled'   => false,\n    'user'      => '',\n    'password'  => ''\n),\n\n// Feed engine settings\n\"feed\"=>array(\n    // Supported engines. List engines by id to disable feed creation.\n    // Existing feeds with a hidden engine still work\n\n    // MYSQL:0, MYSQLMEMORY:8, PHPTIMESERIES:2, PHPFINA:5, CASSANDRA:10\n    // 5:phpfina and 2:phptimeseries are the recommended emoncms feed engines\n    'engines_hidden'=>array(0,8,10),\n    // Buffer data to be written to\n    'redisbuffer'   => array(\n        'enabled' => false,\n        'sleep' => 60\n    ),\n    'phpfina'       => array('datadir'  => '/var/opt/emoncms/phpfina/'),\n    'phptimeseries' => array('datadir'  => '/var/opt/emoncms/phptimeseries/')\n),\n\n// Enable the graph module if you have it installed\n\"interface\"=>array(\n    'feedviewpath' => \"graph/\"\n),\n\n\"public_profile\"=>array(\n\n),\n\n\"smtp\"=>array(\n    // Email address to email proccessed input values\n    // 'default_emailto' => 'root@localhost',\n    // 'host'=>\"smtp.gmail.com\",\n    // 25, 465, 587\n    // 'port'=>\"465\",\n    // 'from_email' => 'noreply@emoncms.org',\n    // 'from_name' => 'EmonCMS',\n    // comment lines below that dont apply\n    // ssl, tls\n    // 'encryption'=>\"ssl\",\n    // 'username'=>\"yourusername@gmail.com\",\n    // 'password'=>\"yourpassword\"\n),\n\n\"log\"=>array(\n    // Log Level: 1=INFO, 2=WARN, 3=ERROR\n    \"level\" => 2\n)\n);\n"
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 15.22265625,
          "content": "<?php\n/*\n\nAll Emoncms code is released under the GNU Affero General Public License.\nSee COPYRIGHT.txt and LICENSE.txt.\n\n---------------------------------------------------------------------\nEmoncms - open source energy visualisation\nPart of the OpenEnergyMonitor project:\nhttp://openenergymonitor.org\n\n*/\n\ndefine('EMONCMS_EXEC', 1);\n\n// 1) Load settings and core scripts\nrequire \"process_settings.php\";\nrequire \"core.php\";\nrequire \"route.php\";\nrequire \"param.php\";\nrequire \"locale.php\";\n\n$emoncms_version = ($settings['feed']['redisbuffer']['enabled'] ? \"low-write \" : \"\") . version();\n\n$path = get_application_path($settings[\"domain\"]);\n$sidebarFixed = true;\n\nrequire \"Lib/EmonLogger.php\";\n$log = new EmonLogger(__FILE__);\n\n// 2) Database\nif ($settings['redis']['enabled']) {\n    # Check Redis PHP modules is loaded\n    if (!extension_loaded('redis')) {\n        echo \"Your PHP installation appears to be missing the <b>Redis</b> extension which is required by Emoncms current settings. <br> See <a href='\". $path. \"php-info.php'>PHP Info</a> (restricted to local access)\";\n        die;\n    }\n    $redis = new Redis();\n    $connected = $redis->connect($settings['redis']['host'], $settings['redis']['port']);\n    if (!$connected) {\n        echo \"Can't connect to redis at \".$settings['redis']['host'].\":\".$settings['redis']['port'].\" , it may be that redis-server is not installed or started see readme for redis installation\";\n        die;\n    }\n    if (!empty($settings['redis']['prefix'])) {\n        $redis->setOption(Redis::OPT_PREFIX, $settings['redis']['prefix']);\n    }\n    if (!empty($settings['redis']['auth'])) {\n        if (!$redis->auth($settings['redis']['auth'])) {\n            echo \"Can't connect to redis at \".$settings['redis']['host'].\", autentication failed\";\n            die;\n        }\n    }\n    if (!empty($settings['redis']['dbnum'])) {\n        $redis->select($settings['redis']['dbnum']);\n    }\n} else {\n    $redis = false;\n}\n\n$mqtt = false;\n\n# Check MySQL PHP modules are loaded\nif (!extension_loaded('mysql') && !extension_loaded('mysqli')) {\n    echo \"Your PHP installation appears to be missing the <b>MySQL extension(s)</b> which are required by Emoncms. <br> See <a href='\". $path. \"php-info.php'>PHP Info</a> (restricted to local access)\";\n    die;\n}\n\n# Check Gettext PHP  module is loaded\nif (!extension_loaded('gettext')) {\n    echo \"Your PHP installation appears to be missing the <b>gettext</b> extension which is required by Emoncms. <br> See <a href='\". $path. \"php-info.php'>PHP Info</a> (restricted to local access)\";\n    die;\n}\n\n$mysqli = @new mysqli(\n    $settings[\"sql\"][\"server\"],\n    $settings[\"sql\"][\"username\"],\n    $settings[\"sql\"][\"password\"],\n    $settings[\"sql\"][\"database\"],\n    $settings[\"sql\"][\"port\"]\n);\n\nif ($mysqli->connect_error) {\n    echo \"Can't connect to database, please verify credentials/configuration in settings.ini<br />\";\n    if ($settings[\"display_errors\"]) {\n        echo \"Error message: <b>\" . $mysqli->connect_error . \"</b>\";\n    }\n    die();\n}\n// Set charset to utf8\n$mysqli->set_charset(\"utf8\");\n\nif (!$mysqli->connect_error && $settings[\"sql\"][\"dbtest\"]==true) {\n    require \"Lib/dbschemasetup.php\";\n    if (!db_check($mysqli, $settings[\"sql\"][\"database\"])) {\n        db_schema_setup($mysqli, load_db_schema(), true);\n    }\n}\n\n// 3) User sessions\nrequire(\"Modules/user/user_model.php\");\n$user = new User($mysqli, $redis);\n\n$apikey = false;\n$devicekey = false;\nif (isset($_GET['apikey'])) {\n    $apikey = $_GET['apikey'];\n} elseif (isset($_POST['apikey'])) {\n    $apikey = $_POST['apikey'];\n} elseif (isset($_GET['devicekey'])) {\n    $devicekey = $_GET['devicekey'];\n} elseif (isset($_POST['devicekey'])) {\n    $devicekey = $_POST['devicekey'];\n} elseif (isset($_SERVER[\"HTTP_AUTHORIZATION\"])) {\n    // Support passing apikey on Authorization header per rfc6750, like example:\n    //      GET /resource HTTP/1.1\n    //      Host: server.example.com\n    //      Authorization: Bearer THE_API_KEY_HERE\n\n    if (isset($_SERVER[\"CONTENT_TYPE\"]) && ($_SERVER[\"CONTENT_TYPE\"]==\"aes128cbc\" || $_SERVER[\"CONTENT_TYPE\"]==\"aes128cbcgz\")) {\n        // If content_type is AES128CBC\n    } else {\n        $apikey = str_replace('Bearer ', '', $_SERVER[\"HTTP_AUTHORIZATION\"]);\n    }\n}\n\n$device = false;\nif ($apikey) {\n    $session = $user->apikey_session($apikey);\n    if (empty($session)) {\n          header($_SERVER[\"SERVER_PROTOCOL\"].\" 401 Unauthorized\");\n          header('WWW-Authenticate: Bearer realm=\"API KEY\", error=\"invalid_apikey\", error_description=\"Invalid API key\"');\n          print \"Invalid API key\";\n          $log->error(\"Invalid API key | \".$_SERVER[\"REMOTE_ADDR\"]);\n          exit();\n    }\n} elseif ($devicekey && (@include \"Modules/device/device_model.php\")) {\n    $device = new Device($mysqli, $redis);\n    $session = $device->devicekey_session($devicekey);\n    if (empty($session)) {\n          header($_SERVER[\"SERVER_PROTOCOL\"].\" 401 Unauthorized\");\n          header('WWW-Authenticate: Bearer realm=\"Device KEY\", error=\"invalid_devicekey\", error_description=\"Invalid device key\"');\n          print \"Invalid device key\";\n          $log->error(\"Invalid device key\");\n          exit();\n    }\n} else {\n    $session = $user->emon_session_start();\n}\n\n// 4) Language\nif (!isset($session['lang'])) {\n    $session['lang']='';\n}\nset_emoncms_lang($session['lang']);\n\n// 5) Get route and load controller\n\n// output string if controller or action not found. used to return error.\ndefine('EMPTY_ROUTE', \"#UNDEFINED#\");\n\n$route = new Route(get('q'), server('DOCUMENT_ROOT'), server('REQUEST_METHOD'));\n\n// Load get/post/encrypted parameters - only used by input/post and input/bulk API's\n$param = new Param($route, $user);\n\n// --------------------------------------------------------------------------------------\n// Special routes\n\n// Captive portal (android working, no luck on iOS yet)\nif ($route->controller==\"generate_204\" || $route->controller==\"hotspot-detect\") {\n    header('Location: http://192.168.42.1');\n    exit;\n}\n// if (get('q')==\"library/test/success.html\") { header('Location: /'); exit; }\n\n\n// Return brief device descriptor for hub detection\nif ($route->controller==\"describe\") {\n    header('Content-Type: text/plain');\n    header('Access-Control-Allow-Origin: *');\n    if ($redis && $redis->exists(\"describe\")) {\n        $type = $redis->get(\"describe\");\n    } else {\n        $type = 'emoncms';\n    }\n    echo $type;\n    die;\n}\n// read the version file and return the value;\nif ($route->controller==\"version\") {\n    header('Content-Type: text/plain; charset=utf-8');\n    echo version();\n    exit;\n}\n\nif (get('embed')==1) {\n    $embed = 1;\n} else {\n    $embed = 0;\n}\n\n// If no route specified use defaults\nif ($route->isRouteNotDefined()) {\n    // EmonPi Setup Wizard\n    if ($settings[\"interface\"][\"enable_admin_ui\"]) {\n        if (file_exists(\"Modules/setup\")) {\n            require \"Modules/setup/setup_model.php\";\n            $setup = new Setup($mysqli);\n            \n            if ($setup->status()==\"unconfigured\") {\n                // Provide special setup access to WIFI module functions\n                $_SESSION['setup_access'] = true;\n            } else {\n                $_SESSION['setup_access'] = false;\n            }\n            \n            // Either show setup interface if unconfigured or if access point login\n            if ($setup->status()==\"unconfigured\" || $route->is_ap) {\n                $settings[\"interface\"][\"default_controller\"] = \"setup\";\n                $settings[\"interface\"][\"default_action\"] = \"\";\n            }\n        }\n    }\n\n    if (!isset($session['read']) || (isset($session['read']) && !$session['read'])) {\n        // Non authenticated defaults\n        $route->controller = $settings[\"interface\"][\"default_controller\"];\n        $route->action = $settings[\"interface\"][\"default_action\"];\n        $route->subaction = \"\";\n    } else {\n        if (isset($session[\"startingpage\"]) && $session[\"startingpage\"]!=\"\") {\n            header('Location: '.$session[\"startingpage\"]);\n            die;\n        } else {\n            // Authenticated defaults\n            $route->controller = $settings[\"interface\"][\"default_controller_auth\"];\n            $route->action = $settings[\"interface\"][\"default_action_auth\"];\n            $route->subaction = \"\";\n        }\n    }\n}\n\nif ($devicekey && !($route->controller == 'input' && ($route->action == 'bulk' || $route->action == 'post'))) {\n    header($_SERVER[\"SERVER_PROTOCOL\"].\" 401 Unauthorized\");\n    print \"Unauthorized. Device key autentication only permits input post or bulk actions\";\n    $log->error(\"Unauthorized. Device key autentication only permits input post or bulk actions\");\n    exit();\n}\n\nif ($route->controller == 'input' && $route->action == 'bulk') {\n    $route->format = 'json';\n} elseif ($route->controller == 'input' && $route->action == 'post') {\n    $route->format = 'json';\n}\n\n// 6) Load the main page controller\n$output = controller($route->controller);\n// If no controller of this name - then try username\nif (!$output['is_controller'] && $settings[\"public_profile\"][\"enabled\"] && $route->controller!='admin') {\n    $userid = $user->get_id($route->controller);\n    if ($userid) {\n        // Set public access\n        $session['public_userid'] = $userid;\n        $session['public_username'] = $route->controller;\n        // Disable standard access\n        $session['admin'] = 0;\n        $session['write'] = 0;\n        $session['read'] = 0;\n        // Move route up\n        $route->controller = $route->action;\n        $route->action = $route->subaction;\n        $route->subaction = $route->subaction2;\n        // Try again\n        $output = controller($route->controller);\n\n        // If no content, try showing any public dashboards\n        if ($output['content'] === EMPTY_ROUTE) {\n            $route->subaction = $route->controller;\n            $route->controller = \"dashboard\";\n            $route->action = \"view\";\n            $output = controller($route->controller);\n        }\n        // If no content or dashboards, try showing any public apps\n        if ($output['content'] === EMPTY_ROUTE) {\n            $route->subaction = $route->controller;\n            $route->controller = \"app\";\n            $route->action = \"view\";\n            $output = controller($route->controller);\n        }\n    }\n}\n\n// If no controller found or nothing is returned, give friendly error\nif ($output['content'] === EMPTY_ROUTE) {\n    // alter output is $route has $action\n    $actions = implode(\"/\", array_filter(array($route->action, $route->subaction)));\n    $message = sprintf(_('%s cannot respond to %s'), sprintf(\"<strong>%s</strong>\", ucfirst($route->controller)), sprintf('<strong>\"%s\"</strong>', $actions));\n    // alter the http header code\n    header($_SERVER[\"SERVER_PROTOCOL\"].\" 406 Not Acceptable\");\n    $title = _('406 Not Acceptable');\n    $plain_text = _('Route not found');\n    $intro = sprintf('%s %s', _('URI not acceptable.'), $message);\n    $text = _('Try another link from the menu.');\n    // return the formatted string\n    if ($route->format==='html') {\n        $output['content'] = sprintf('<h2>%s</h2><p class=\"lead\">%s.</p><p>%s</p>', $title, $intro, $text);\n    } else {\n        $output['content'] = array(\n            'success'=> false,\n            'message'=> sprintf('%s. %s', $title, $plain_text)\n        );\n    }\n    $log->warn(sprintf('%s|%s', $title, implode('/', array_filter(array($route->controller,$route->action,$route->subaction)))));\n}\n\n// If not authenticated and no ouput, asks for login\nif ($output['content'] === \"\" && (!isset($session['read']) || (isset($session['read']) && !$session['read']))) {\n    $log->error(sprintf('%s|%s', _('Not Authenticated'), implode('/', array_filter(array($route->controller,$route->action,$route->subaction)))));\n    $route->controller = \"user\";\n    $route->action = \"login\";\n    $route->subaction = \"\";\n    $message = urlencode(_('Authentication Required'));\n    $referrer = urlencode(base64_encode(filter_var($_SERVER['REQUEST_URI'], FILTER_SANITIZE_URL)));\n    $route->query = sprintf(\"msg=%s&ref=%s\", $message, $referrer);\n    $output = controller($route->controller);\n}\n\n$output['route'] = $route;\n$output['session'] = $session;\n\n// 7) Output\nif ($route->format == 'json') {\n    if ($route->controller=='time') {\n        header('Content-Type: text/plain');\n        print $output['content'];\n    } elseif ($route->controller=='input' && $route->action=='post') {\n        header('Content-Type: text/plain');\n        print $output['content'];\n    } elseif ($route->controller=='input' && $route->action=='bulk') {\n        header('Content-Type: text/plain');\n        print $output['content'];\n    } else {\n        header('Content-Type: application/json');\n        if (!empty($output['message'])) {\n            header(sprintf('X-emoncms-message: %s', $output['message']));\n        }\n        print json_encode($output['content']);\n        if (json_last_error()!=JSON_ERROR_NONE) {\n            switch (json_last_error()) {\n                case JSON_ERROR_DEPTH:\n                    $log->error(\"json_encode - $route->controller: Maximum stack depth exceeded\");\n                    break;\n                case JSON_ERROR_STATE_MISMATCH:\n                    $log->error(\"json_encode - $route->controller: Underflow or the modes mismatch\");\n                    break;\n                case JSON_ERROR_CTRL_CHAR:\n                    $log->error(\"json_encode - $route->controller: Unexpected control character found\");\n                    break;\n                case JSON_ERROR_SYNTAX:\n                    $log->error(\"json_encode - $route->controller: Syntax error, malformed JSON\");\n                    break;\n                case JSON_ERROR_UTF8:\n                    $log->error(\"json_encode - $route->controller: Malformed UTF-8 characters, possibly incorrectly encoded\");\n                    break;\n                default:\n                    $log->error(\"json_encode - $route->controller: Unknown error\");\n                    break;\n            }\n        }\n    }\n} elseif ($route->format == 'html') {\n    if ($embed == 1) {\n        print view(\"Theme/embed.php\", $output);\n    } else {\n        // Menu\n        $menu = array();\n        // Create initial entry for setup menu\n        $menu[\"setup\"] = array(\"name\"=>\"Setup\", \"order\"=>1, \"icon\"=>\"menu\", \"default\"=>\"feed/view\", \"l2\"=>array());\n        if ($session[\"public_userid\"]) {\n            $menu[\"setup\"][\"name\"] = ucfirst($session[\"public_username\"]);\n        }\n\n        // Itterates through installed modules to load module menus\n        load_menu();\n        // Pass menu through to output view - passed on the js based builder\n\n        // Hide menu if nothing to see\n        if (!$menu[\"setup\"][\"l2\"]) $menu = array();\n\n        $output['menu'] = $menu;\n\n        $output['svg_icons'] = view(\"Theme/svg_icons.svg\", array());\n\n        // add css class names to <body> tag based on controller's options\n        $output['page_classes'][] = $route->controller;\n\n        if (!$session['read']) {\n            $output['page_classes'][] = 'collapsed manual';\n        } else {\n            if (!in_array(\"manual\",$output['page_classes'])) $output['page_classes'][] = 'auto';\n        }\n        print view(\"Theme/theme.php\", $output);\n    }\n\n} elseif ($route->format == 'text') {\n    header('Content-Type: text/plain');\n    print $output['content'];\n} elseif ($route->format == 'csv') {\n    header('Content-Type: text/csv');\n    print $output['content'];\n} else {\n    header($_SERVER[\"SERVER_PROTOCOL\"].\" 406 Not Acceptable\");\n    print \"URI not acceptable. Unknown format '\".$route->format.\"'.\";\n}\n"
        },
        {
          "name": "locale.php",
          "type": "blob",
          "size": 4.5068359375,
          "content": "<?php\n/*\n  All Emoncms code is released under the GNU Affero General Public License.\n  See COPYRIGHT.txt and LICENSE.txt.\n\n  ---------------------------------------------------------------------\n  Emoncms - open source energy visualisation\n  Part of the OpenEnergyMonitor project:\n  http://openenergymonitor.org\n*/\n\n// no direct access\ndefined('EMONCMS_EXEC') or die('Restricted access');\n\n// Return all locale directory from all modules.\n// If one module has a language it will be detected\nfunction directoryLocaleScan($dir)\n{\n    $directoryList = array();\n\n    if (isset($dir) && is_readable($dir)) {\n\n        $dir = realpath($dir);\n\n        $directoryList = glob($dir.\"/Modules/*/locale/*\", GLOB_ONLYDIR);\n        $directoryList = array_merge($directoryList, glob($dir.\"/Theme/*/locale/*\", GLOB_ONLYDIR));\n\n        $directoryList = array_map(\n            function ($item) {\n                return basename($item);\n            },\n            $directoryList\n        );\n    }\n\n    return array_unique($directoryList);\n}\n\nfunction get_available_languages()\n{\n    return directoryLocaleScan(dirname(__FILE__));\n}\n\nfunction get_available_languages_with_names()\n{\n    $available_languages = get_available_languages();\n    \n    static $language_names = null;\n    if ($language_names === null) {\n        $json_data = file_get_contents(__DIR__.'/Lib/language_country.json');\n        $language_names = json_decode($json_data, true);\n    }\n    \n    $available_languages_with_names = array();\n    \n    foreach ($available_languages as $code){\n        \n        $available_languages_with_names[$code] = $language_names[$code];\n    }\n    return $available_languages_with_names;\n}\n\nfunction languagecode_to_name($langs) {\n    static $lang_names = null;\n    if ($lang_names === null) {\n        $json_data = file_get_contents(__DIR__.'/Lib/language_country.json');\n        $lang_names = json_decode($json_data, true);\n    }\n    foreach ($langs as $key=>$val){\n      $lang[$key]=$lang_names[$val];\n    }\n   asort($lang);\n   return $lang;\n}\n\n\nfunction lang_http_accept()\n{\n    $langs = array();\n\n    if (!$http_accept_language = server('HTTP_ACCEPT_LANGUAGE')) {\n        return $langs;\n    }\n    \n    foreach (explode(',',$http_accept_language) as $lang) {\n        $pattern = '/^(?P<primarytag>[a-zA-Z]{2,8})'.\n        '(?:-(?P<subtag>[a-zA-Z]{2,8}))?(?:(?:;q=)'.\n        '(?P<quantifier>\\d\\.\\d))?$/';\n\n        $splits = array();\n\n        if (preg_match($pattern, $lang, $splits)) {\n            $langs[] = !empty($splits['subtag']) ? $splits[\"primarytag\"] . \"_\" . $splits['subtag'] : $splits[\"primarytag\"];\n        }\n    }\n    return $langs;\n}\n\n/***\n * take the values from the given list and save it as the user's language\n * only takes supported language values.\n * @param array $language - array returned by lang_http_accept() - without the validating values\n */\nfunction set_lang($language)\n{\n    global $settings;\n    // DEFAULT - from settings.php (if not in file use 'en_GB')\n    $fallback_language = $settings['interface']['default_language'];\n\n    $supported_languages = array(\n        'cy' => 'cy_GB',\n        'da' => 'da_DK',\n        'es' => 'es_ES',\n        'fr' => 'fr_FR',\n        'it' => 'it_IT',\n        'nl' => 'nl_NL',\n        'en' => 'en_GB'\n    );\n\n/**\n * ORDER OF PREFERENCE WITH LANGUAGE SELECTION\n * -------------------------------------------\n * 1. non logged in users use the browser's language\n * 2. logged in users use their saved language preference\n * 3. logged in users without language saved uses `$default_language` from settings.php\n * 4. else fallback is set to 'en_GB'\n*/\n\n    $lang = $fallback_language; // if not found use fallback\n\n    // loop through all given $language values\n    // if given language is a key or value in the above list use it\n    foreach ($language as $lang_code) {\n        $lang_code = htmlspecialchars($lang_code);\n        if (isset($supported_languages[$lang_code])) { // key check\n            $lang = $supported_languages[$lang_code];\n            break;\n        } elseif (in_array($lang_code, $supported_languages)) { // value check\n            $lang = $lang_code;\n            break;\n        }\n    }\n    set_lang_by_user($lang);\n}\n\nfunction set_lang_by_user($lang)\n{\n    $locale = $lang.'.UTF8';\n    define(LC_MESSAGES, $locale);\n    putenv(\"LC_ALL=$locale\");\n    setlocale(LC_ALL, $locale);\n}\n\nfunction set_emoncms_lang($lang)\n{\n    // If no language defined use the browser language\n    if ($lang == '') {\n        $browser_languages = lang_http_accept();\n        set_lang($browser_languages);\n    } else {\n        set_lang_by_user($lang);\n    }\n    global $session;\n}\n"
        },
        {
          "name": "param.php",
          "type": "blob",
          "size": 4.818359375,
          "content": "<?php\n\n/*\n\n    All Emoncms code is released under the GNU Affero General Public License.\n    See COPYRIGHT.txt and LICENSE.txt.\n\n    ---------------------------------------------------------------------\n    Emoncms - open source energy visualisation\n    Part of the OpenEnergyMonitor project:\n    http://openenergymonitor.org\n\n*/\n\n// no direct access\ndefined('EMONCMS_EXEC') or die('Restricted access');\n\nclass Param\n{\n    private $route;\n    private $user;\n    private $params = array();\n    \n    // Associative array to make search fast\n    private $allowed_apis = array(\"input/post\",\"input/bulk\");\n    \n    public $sha256base64_response = false;\n\n    public function __construct($route, $user)\n    {\n        $this->route = $route;\n        $this->user = $user;\n        $this->load();\n    }\n\n    public function load()\n    {\n        $this->params = array();\n        \n        foreach ($_GET as $key => $val) {\n            if (is_array($val)) {\n                $val = array_map(\"stripslashes\", $val);\n            } else {\n                $val = stripslashes($val);\n            }\n            $this->params[$key] = $val;\n        }\n        foreach ($_POST as $key => $val) {\n            if (is_array($val)) {\n                $val = array_map(\"stripslashes\", $val);\n            } else {\n                $val = stripslashes($val);\n            }\n            $this->params[$key] = $val;\n        }\n        \n        // Temporary restriction on allowed api's for encrypted method\n        $allowed_apis = array_flip($this->allowed_apis);\n        $api = $this->route->controller.\"/\".$this->route->action;\n        if (!isset($allowed_apis[$api])) {\n            return false;\n        }\n        \n        // Decode encrypted parameters\n        \n        if (isset($_SERVER[\"CONTENT_TYPE\"]) && ($_SERVER[\"CONTENT_TYPE\"]==\"aes128cbc\" || $_SERVER[\"CONTENT_TYPE\"]==\"aes128cbcgz\")) {\n            // Fetch authorization header\n            if (!isset($_SERVER[\"HTTP_AUTHORIZATION\"])) {\n                echo \"missing authorization header\";\n                die;\n            }\n            $authorization = explode(\":\", $_SERVER[\"HTTP_AUTHORIZATION\"]);\n            if (count($authorization)!=2) {\n                echo \"authorization header format should be userid:hmac\";\n                die;\n            }\n            $userid = $authorization[0];\n            $hmac1 = $authorization[1];\n            \n            // Fetch user\n            $apikey = $this->user->get_apikey_write($userid);\n            if ($apikey===false) {\n                echo \"User not found\";\n                die;\n            }\n\n            // Fetch encrypted data from POST body\n            $base64EncryptedData = file_get_contents('php://input');\n            if ($base64EncryptedData==\"\") {\n                echo \"no content in post body\";\n                die;\n            }\n\n            // The base64 is converted from \"URL safe\" code to standard base64 (RFC2045 etc),\n            // then it is decoded into the binary encrypted data\n            $encryptedData = base64_decode(str_replace(array('-','_'), array('+','/'), $base64EncryptedData));\n\n            // The binary encrypted data is decrypted using the apikey.\n            // Note that the first 16 bytes of the encrypted data string are the IV and\n            // the actual data follows\n            $decrypted = @openssl_decrypt(substr($encryptedData, 16), 'AES-128-CBC', hex2bin($apikey), OPENSSL_RAW_DATA, substr($encryptedData, 0, 16));\n            \n            // HMAC generated from decoded data\n            $hmac2 = hash_hmac('sha256', $decrypted, hex2bin($apikey));\n            \n            if (!hash_equals($hmac1, $hmac2)) {\n                echo \"invalid data\";\n                die;\n            }\n            \n            global $session; // USE OF GLOBAL HERE!\n            $session[\"write\"] = true;\n            $session[\"read\"] = true;\n            $session[\"userid\"] = $userid;\n            \n            if ($_SERVER[\"CONTENT_TYPE\"]==\"aes128cbcgz\") {\n                $dataString = gzuncompress($decrypted);\n            } else {\n                $dataString = $decrypted;\n            }\n            \n            foreach (explode('&', $dataString) as $chunk) {\n                $param = explode(\"=\", $chunk);\n                if (count($param)==2) {\n                    $key = $param[0];\n                    $val = $param[1];\n                    $this->params[$key] = $val;\n                }\n            }\n            \n            $this->sha256base64_response = str_replace(array('+','/'), array('-','_'), base64_encode(hash(\"sha256\", $decrypted, true)));\n        }\n    }\n    \n    public function val($index)\n    {\n        if (isset($this->params[$index])) {\n            return $this->params[$index];\n        } else {\n            return null;\n        }\n    }\n\n    public function exists($index)\n    {\n        if (isset($this->params[$index])) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
        },
        {
          "name": "php-info.php",
          "type": "blob",
          "size": 0.08984375,
          "content": "<?php\n# protected and only access from localhost & local network (see .htaccess)\nphpinfo();\n"
        },
        {
          "name": "process_settings.php",
          "type": "blob",
          "size": 4.4541015625,
          "content": "<?php\n/*\n    All Emoncms code is released under the GNU Affero General Public License.\n    See COPYRIGHT.txt and LICENSE.txt.\n\n    ---------------------------------------------------------------------\n    Emoncms - open source energy visualisation\n    Part of the OpenEnergyMonitor project:\n    http://openenergymonitor.org\n*/\n\n// no direct access\ndefined('EMONCMS_EXEC') or die('Restricted access');\n\nrequire_once('Lib/enum.php');\n\n// Load settings.php\n$settings_error = false;\n\nif (file_exists(dirname(__FILE__).\"/settings.php\")) {\n    require_once('default-settings.php');\n    require_once('settings.php');\n    if (!isset($settings)) {\n        require_once('Lib/process_old_settings.php');\n        //$settings_error = true;\n        //$settings_error_title = \"settings.php file error\";\n        //$settings_error_message = \"It looks like you are using an old version of settings.php try re-creating your settings.php file from default-settings.php\";\n    } else {\n        $settings = array_replace_recursive($_settings, $settings);\n    }\n} elseif (file_exists(dirname(__FILE__).\"/settings.ini\")) {\n    $CONFIG_INI = parse_ini_file(\"default-settings.ini\", true, INI_SCANNER_TYPED);\n    $CUSTOM_INI = parse_ini_file(\"settings.ini\", true, INI_SCANNER_TYPED);\n#    $CONFIG_INI = parse_ini_file(\"default-settings.ini\", true);\n#    $CUSTOM_INI = parse_ini_file(\"settings.ini\", true);\n    $settings = ini_merge($CONFIG_INI, $CUSTOM_INI);\n    // $settings = ini_check_envvars($settings);\n    if (is_string($settings['feed']['engines_hidden'])) {\n        $settings['feed']['engines_hidden'] = json_decode($settings['feed']['engines_hidden']);\n    }\n} else {\n    $settings_error = true;\n    $settings_error_title = \"missing settings file\";\n    $settings_error_message = \"Create a settings.ini file from a example.settings.ini template\";\n}\n\nif ($settings_error) {\n    if (PHP_SAPI === 'cli') {\n        echo \"$settings_error_title\\n\";\n        echo \"$settings_error_message\\n\";\n    } else {\n        echo \"<div style='width:600px; background-color:#eee; padding:20px; font-family:arial,serif;'>\";\n        echo \"<h3>$settings_error_title</h3>\";\n        echo \"<p>$settings_error_message</p>\";\n        echo \"</div>\";\n    }\n    die;\n}\n\n// ---------------------------------------------------------------------------------------\nif (is_dir($settings[\"emoncms_dir\"].\"/modules\")) {\n    $linked_modules_dir = $settings[\"emoncms_dir\"].\"/modules\";\n} else {\n    $linked_modules_dir = $settings[\"emoncms_dir\"];\n}\n\n// Set display errors\nif (isset($settings[\"display_errors\"]) && ($settings[\"display_errors\"])) {\n    error_reporting(E_ALL);\n    ini_set('display_errors', 'on');\n}\n\n// ---------------------------------------------------------------------------------------\n// FUNCTIONS\n// ---------------------------------------------------------------------------------------\n\n// This function takes two arrays of settings and merges them, using\n// the value from $overrides where it differs from the one in $defaults.\nfunction ini_merge($defaults, $overrides)\n{\n    foreach ($overrides as $k => $v) {\n        if (is_array($v)) {\n            $defaults[$k] = ini_merge($defaults[$k], $v);\n        } else {\n            $defaults[$k] = resolve_env_vars($v, $defaults[$k]);\n#            $defaults[$k] = $v;\n        }\n    }\n\n    return $defaults;\n}\n\n// This function iterates over all the config file entries, replacing values\n// of the format {{VAR_NAME}} with the environment variable 'VAR_NAME'.\n//\n// This can be useful in containerised setups, or testing environments.\n\nfunction resolve_env_vars($value)\n{\n    // To do any processing we need a string, and at least one pair of {{ }}\n    // Otherwise just return what we got.\n    if (!is_string($value) ||\n            strpos($value, '{{') === false ||\n            strpos($value, '}}') === false) {\n        return $value;\n    }\n\n    preg_match_all('/{{([^}]+)}}/', $value, $matches);\n    foreach ($matches[1] as $match) {\n        $env_name = $match;\n        $env_value = getenv($env_name);\n        if ($env_value === false) {\n            echo \"<p>Error: environment var '{$env_name}' not defined</p>\";\n            return $value;\n        }\n\n        $value = str_replace('{{'.$env_name.'}}', $env_value, $value);\n    }\n\n    // Convert booleans from strings\n    if (strcasecmp($value, \"true\") == 0) {\n        $value = true;\n    } elseif (strcasecmp($value, 'false') == 0) {\n        $value = false;\n\n    // Convert numbers from strings\n    } elseif (is_numeric($value)) {\n        $value += 0;\n    }\n\n    // Set the new value\n    return $value;\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 9.396484375,
          "content": "# Emoncms\n\nEmoncms is an open-source web application for processing, logging and visualising energy, temperature and other environmental data and is part of the [OpenEnergyMonitor project](http://openenergymonitor.org).\n\n![Emoncms](emoncms_graphic.png)\n\n## Requirements\n\n- PHP (tested with 8.1.12) \n- MySQL or MariaDB (tested with 10.5.15) \n- Apache (tested with 2.4.54)\n- Redis* (tested with 6.0.16)\n\n_*Redis is recommended because it reduces the number of disk writes and therefore prolongs disk life (noticeably on SD cards e.g. Raspberry Pi). Some input-processors also require Redis and fail silently if Redis is not installed. Some environments such as shared hosting or as far as we have tried Windows servers don't support Redis hence why Emoncms has a fall back mode that allows core operation without Redis._\n\n## Documentation\n\n**View the Emoncms documentation at: [https://docs.openenergymonitor.org/emoncms](https://docs.openenergymonitor.org/emoncms)**\n\n- [Getting started emonPi/Base](https://docs.openenergymonitor.org/emoncms/intro-rpi.html)\n- [Getting started emoncms.org](https://docs.openenergymonitor.org/emoncms/intro-remote.html)\n- [Emoncms Core Concepts](https://docs.openenergymonitor.org/emoncms/coreconcepts.html)\n- [Posting data](https://docs.openenergymonitor.org/emoncms/postingdata.html)\n- [MQTT](https://docs.openenergymonitor.org/emoncms/mqtt.html)\n- [View Graphs](https://docs.openenergymonitor.org/emoncms/graphs.html)\n- [Dashboard Builder](https://docs.openenergymonitor.org/emoncms/dashboards.html)\n- [Application dashboards](https://docs.openenergymonitor.org/emoncms/dashboards.html)\n- [Octopus Agile app](https://docs.openenergymonitor.org/emoncms/agileapp.html)\n- [Calculating Daily kWh](https://docs.openenergymonitor.org/emoncms/daily-kwh.html)\n- [Calculating Averages](https://docs.openenergymonitor.org/emoncms/daily-averages.html)\n- [Pulse counting](https://docs.openenergymonitor.org/emoncms/pulse-counting.html)\n- [Exporting CSV](https://docs.openenergymonitor.org/emoncms/export-csv.html)\n- [Histograms](https://docs.openenergymonitor.org/emoncms/histograms.html)\n- [Post Process module](https://docs.openenergymonitor.org/emoncms/postprocess.html)\n- [DemandShaper module](https://docs.openenergymonitor.org/emoncms/demandshaper.html)\n- [Import / Backup](https://docs.openenergymonitor.org/emoncms/import.html)\n- [Update & Upgrade](https://docs.openenergymonitor.org/emoncms/update.html)\n- [Remote Access](https://docs.openenergymonitor.org/emoncms/remoteaccess.html)\n- [Troubleshooting](https://docs.openenergymonitor.org/emoncms/troubleshooting.html)\n\n**Design**\n\n- [Emoncms architecture](docs/design/architecture.md)\n- [Input processing implementation](docs/design/input-processing.md)\n- [Developing a new Module](docs/design/developing-a-new-module.md)\n- [Global variables in Emoncms](docs/design/global-variables.md)\n\n**Emoncms timeseries database design (feed storage)**\n\n- [Emoncms time series database development history](docs/timeseries/History.md)\n- [Fixed interval time series](docs/timeseries/Fixed-interval.md)\n- [Variable interval time series](docs/timeseries/Variable-interval.md)\n- [Improving write performance with buffering](docs/timeseries/Write-load-investigation.md)\n\n**Other**\n\n- [Backup](docs/Backup.md)\n- [CLI](docs/CLI.md)\n- [Encrypted Input](docs/input_encrypted.md)\n\n**Emoncms Terminology**\n\n- **Input:** An incoming datasource. Each input has an associated \"node\" identifier and a \"key\" sub-identifier. Inputs are entry points, only the last value and time of the input is recorded. To record historic data a feed needs to be created from an input.\n- **Input: Node:** A grouping identifier for an input or feed.\n- **Input: Key:** A sub-identifier for items within each Node.\n- **Input process list (or input processing):** A list of processes* performed sequentially on each input value as it is received on that input.\n- **Process:** A function that can be attached to the process list of an input to change the value or to save the value to a feed*.\n- **Feed:** A place where data is recorded, a time-series of datapoints. The standard time-series databases used by Emoncms are PHPFina and PHPTimeSeries and were written as part of the Emoncms project.\n\n* For a description of what each input process does in Emoncms, see the helper note within the Emoncms input processing configuration interface.\n\n**Emoncms.org API Reference**\n\n- [Input API reference](https://emoncms.org/site/api#input)\n- [Feed API reference](https://emoncms.org/site/api#feed)\n\n## Install\n\nEmoncms is designed and tested to run on either Ubuntu Linux (Local, Dedicated machine or VPS) or RaspberryPi OS. It should work on other Debian Linux systems though we dont test or provide documentation for installation on these. \n\nWe do not recommend and are unable to support installation on shared hosting or XAMPP servers, shared hosting in particular has no or limited capabilities for running some of the scripts used by emoncms. There is now a large choice of low cost miniature Linux VPS hosting solutions that provide a much better installation environment at similar cost.\n\nRecommended: \n\n* [Install with emonScripts](https://docs.openenergymonitor.org/emonsd/install.html)\n* [Pre built emonSD SD-card Image Download](https://docs.openenergymonitor.org/emonsd/download.html)\n* [Purchase pre-loaded SD card](http://shop.openenergymonitor.com/emonsd-pre-loaded-raspberry-pi-sd-card/)\n\n## docker standalone container\n\nAn easy way to start with emoncms is to use the [all-in-one docker container](https://hub.docker.com/r/alexjunk/emoncms) \n\nA pipeline using github actions is producing builds with latest emoncms stable version for different architectures : amd64, arm64, arm/v7 \n\nThese docker images, based on the [alpine linux](https://www.alpinelinux.org) distribution, are designed for iot. Images are tagged using alpine and emoncms versions, for example alpine3.19_emoncms11.4.11. \n\nThe images have onboard :\n- the mariadb and redis databases,\n- the mosquitto mqtt broker,\n- the main modules : graph, sync, backup, dashboard and app,\n- the workers : emoncms_mqtt, service-runner and feedwriter. \n\nYou can easily : \n* deactivate the low-write\n* use an external broker. \n\nTo pull the latest image for testing : \n\n```\nsudo docker pull alexjunk/emoncms\n```\nMore on https://emoncms-docker.github.io\n\n\n### Experimental\n\nnot currently up to date\n\n[Multi-platform using Docker Container](https://github.com/emoncms/emoncms-docker)\n\n## Modules\n\nModules can be installed by downloading or git cloning into the emoncms/Modules folder. Be sure to check for database updates in Administration menu after installing new modules. The following core modules are included on the emonSD image:\n\n- [Graph module](https://github.com/emoncms/graph) - Advanced graphing module that integrates with the emoncms feed list, highly recommended; examples of use can be found in emoncms guide [[1]](http://guide.openenergymonitor.org/setup/daily-kwh)[[2]](http://guide.openenergymonitor.org/setup/daily-averages/)[[3]](http://guide.openenergymonitor.org/setup/export-csv/)[[4]](http://guide.openenergymonitor.org/setup/histograms).\n\n- [Device module](https://github.com/emoncms/device) - Automatically configure inputs and feeds using device templates.\n\n- [Dashboards module](https://github.com/emoncms/dashboard) - Required for creating, viewing and publishing dashboards.\n\n- [App module](https://github.com/emoncms/app.git) - Application specific dashboards e.g. MyElectric, MySolar.\n\n- [Config]( https://github.com/emoncms/config.git) - In-browser emonhub.conf editor and emonhub.log log viewer. Use `git clone` to install.\n\n- [Wifi module]( https://github.com/emoncms/wifi.git) - [Wifi configuration interface designed for use on the emonPi](https://guide.openenergymonitor.org/setup/connect/)\n\n- [Raspberry Pi Backup / Restore module](https://github.com/emoncms/backup) (emonPi / emonBase)\n\n- [Sync module](https://github.com/emoncms/sync)\n\n- [Usefulscripts](https://github.com/emoncms/usefulscripts): Not strictly a module, more a collection of useful scripts for use with emoncms.\n\n- [DemandShaper module]( http://github.com/emoncms/demandshaper) - Schedule smartplugs, EmonEVSE smart EV chargers, heatpumps to run at best time in terms of: carbon, cost, grid strain. Based on day ahead forecasts.\n\nThere are many other available modules such as the event module and openbem (open source building energy modelling module): check out the [Emoncms repo list](https://github.com/emoncms).\n\n## Branches\n\n* [master](https://github.com/emoncms/emoncms) - The latest and greatest developments. Potential bugs, use at your own risk! All pull-requests should be made to the *master* branch.\n\n* [stable](https://github.com/emoncms/emoncms/tree/stable) - emonPi/emonBase release branch, regularly merged from master. Slightly more tried and tested. [See release change log](https://github.com/emoncms/emoncms/releases).\n\n## Tools\n\n* [PHPFina data file viewer](https://github.com/trystanlea/phpfinaview) - Easily explore phpfina timeseries feed engine data files directly without a full Emoncms installation. Useful for checking backups and archived data.\n\n#### Android App\n\n[Google Play](https://play.google.com/store/apps/details?id=org.emoncms.myapps&hl=en_GB)\n\n[GitHub Repo](https://github.com/emoncms/AndroidApp)\n\n[Development Forum](https://community.openenergymonitor.org/c/emoncms/mobile-app)\n\n## More information\n\n- Cloud hosted platform - http://emoncms.org\n- [OpenEnergyMonitor Forums](https://community.openenergymonitor.org)\n- [OpenEnergyMonitor Homepage](https://openenergymonitor.org)\n"
        },
        {
          "name": "route.php",
          "type": "blob",
          "size": 4.9765625,
          "content": "<?php\n\n/*\n\n    All Emoncms code is released under the GNU Affero General Public License.\n    See COPYRIGHT.txt and LICENSE.txt.\n\n    ---------------------------------------------------------------------\n    Emoncms - open source energy visualisation\n    Part of the OpenEnergyMonitor project:\n    http://openenergymonitor.org\n\n*/\n\n// no direct access\ndefined('EMONCMS_EXEC') or die('Restricted access');\n\nclass Route\n{\n    /**\n     * @var string\n     */\n    public $controller = '';\n\n    /**\n     * @var string\n     */\n    public $action = '';\n\n    /**\n     * @var string\n     */\n    public $subaction = '';\n\n    /**\n     * @var string\n     */\n    public $subaction2 = '';\n\n    /**\n     * @var string\n     */\n    public $query = '';\n\n    /**\n     * @var string\n     */\n    public $method = 'GET';\n\n    /**\n     * @var string\n     */\n    public $format = 'html';\n\n    /**\n     * @var bool\n     */\n    public $is_ajax = false;\n\n    /**\n     * @var bool\n     */\n    public $is_ap = false;\n    \n    /**\n     * @param string $q\n     * @param string $documentRoot\n     * @param string $requestMethod\n     */\n    public function __construct($q, $documentRoot, $requestMethod)\n    {\n        $this->decode($q, $documentRoot, $requestMethod);\n        //this can be faked by the client. not to be trusted.\n        $this->is_ajax = !empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest';\n        \n        // is this an access point login?\n        if ($_SERVER['SERVER_ADDR']==\"192.168.42.1\") {\n            $this->is_ap = true;\n        }\n    }\n\n    /**\n     * @param  string $q\n     * @param string $documentRoot\n     * @param string $requestMethod\n     */\n    public function decode($q, $documentRoot, $requestMethod)\n    {\n        if(is_null($q)){\n\t\t\t$q=\"\";\n\t\t}\n\t\t// filter out the applications relative root\n\n        // If we're running in a subdirectory \"emoncms\", $q would look like '/emoncms/user/view' instead or just 'user/view'\n        // for the example of viewing a users profile. We need to remove the first directory to get the \"clean\" routing path\n        // within the application no matter at which path it's hosted.\n\n        // First get the absolute physical path\n        // Example running at root: '/var/www' or subdirectory: '/var/www/emoncms'\n        $absolutePath = realpath(dirname(__FILE__));\n\n        // Next up, we need to find the relative path to the www root and remove everything except the part we will use to route\n        // for example this will perform the following:\n        // Running at root: str_replace('/var/www', '', '/var/www') => ''\n        // Running at subdirectory: str_replace('/var/www', '', '/var/www/emoncms') => '/emoncms'\n\t\tif (!is_null($documentRoot)) {\n        $relativeApplicationPath = str_replace($documentRoot, '', $absolutePath);\n\t\t}\n\n        // Next up we will need to remove the '/emoncms' from the route path '/emoncms/user/view'\n        // str_replace('/emoncms', '', '/emoncms/user/view') => '/user/view'\n        // running at root path it will just perform nothing: str_replace('', '', '/emoncms/user/view') so it can be skipped\n        if (!empty($relativeApplicationPath)) {\n            $q = str_replace($relativeApplicationPath, '', $q);\n        }\n\n        // trim slashes: '/user/view' => 'user/view'\n        $q = trim($q, '/');\n\n        // filter out all except alphanumerics and / . _ -\n        $q = preg_replace('/[^.\\/_A-Za-z0-9-]/', '', $q);\n\n        // Split by /\n        $args = preg_split('/[\\/]/', $q);\n\n        // get format (part of last argument after . i.e view.json)\n        $lastArgIndex = count($args) - 1;\n        $lastArgSplit = preg_split('/[.]/', $args[$lastArgIndex]);\n        if (count($lastArgSplit) > 1) {\n            $this->format = $lastArgSplit[1];\n        }\n        $args[$lastArgIndex] = $lastArgSplit[0];\n\n        if (count($args) > 0) {\n            $this->controller = $args[0];\n        }\n        if (count($args) > 1) {\n            $this->action = $args[1];\n        }\n        if (count($args) > 2) {\n            $this->subaction = $args[2];\n        }\n        if (count($args) > 3) {\n            $this->subaction2 = $args[3];\n        }\n        $this->query = parse_url($_SERVER['REQUEST_URI'], PHP_URL_QUERY);\n\n        // allow for method to be added as post variable\n        if (post('_method')=='DELETE') {\n            $this->method = 'DELETE';\n        } elseif (post('_method')=='PUT') {\n            $this->method = 'PUT';\n        } elseif (in_array($requestMethod, array('POST', 'DELETE', 'PUT'))) {\n            $this->method = $requestMethod;\n        } elseif ($requestMethod === 'OPTIONS') {\n            // \"CORS PREFLIGHT REQUESTS\" EXPECT THESE HEADERS. no content required\n            header('Access-Control-Allow-Origin: *');\n            header('Access-Control-Allow-Headers: Authorization');\n            header('Access-Control-Allow-Methods: GET');\n            exit();\n        }\n    }\n\n    /**\n     * @return bool\n     */\n    public function isRouteNotDefined()\n    {\n        return empty($this->controller) && empty($this->action);\n    }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.env.ini",
          "type": "blob",
          "size": 0.3125,
          "content": "; An example file showing how to load settings from environment variables\n\n[sql]\nserver = {{MYSQL_HOST}}\ndatabase = {{MYSQL_DATABASE}}\nusername = {{MYSQL_USER}}\npassword = {{MYSQL_PASSWORD}}\nport = {{MYSQL_PORT}}\n\n[redis]\nenabled = {{REDIS_ENABLED}}\nhost = {{REDIS_HOST}}\nport = {{REDIS_PORT}}\nprefix = {{REDIS_PREFIX}}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.json",
          "type": "blob",
          "size": 0.1484375,
          "content": "{\n    \"name\"         : \"Emoncms Core\",\n    \"version\"      : \"11.6.11\",\n    \"location\"     : \"/var/www\",\n    \"branches_available\": [\"stable\",\"master\"]\n}\n"
        }
      ]
    }
  ]
}