{
  "metadata": {
    "timestamp": 1736712223751,
    "page": 943,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tenancy/tenancy",
      "stars": 1206,
      "defaultBranch": "2.x",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.4404296875,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"90...100\"\n\n  status:\n    project:\n        default:\n            threshold: 1%\n    patch: yes\n    changes: no\n\n  ignore:\n    - \"src/Testing/**/*\"\n    - \"src/Testing\"\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n\n"
        },
        {
          "name": ".dev",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2099609375,
          "content": "root = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n[*.{md,yml,yaml}]\nindent_size = 2\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07421875,
          "content": ".phpunit.result.cache\n.subsplit\ncomposer.lock\nvendor/\n.tmp/\n.phpunit.cache/\n"
        },
        {
          "name": ".styleci.yml",
          "type": "blob",
          "size": 0.064453125,
          "content": "preset: recommended\nrisky: true\nenabled:\n  - declare_strict_types\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.2578125,
          "content": "# ![Tenancy logo](https://avatars3.githubusercontent.com/u/33319474?s=25&v=4) Tenancy Ecosystem (for Laravel)\n\nEnabling awesome Software as a Service with the Laravel framework.\n\nThis is the successor of [hyn/multi-tenant](https://github.com/tenancy/multi-tenant). \n\nFeel free to show support by starring the project\nfollowing progress via [twitter](https://twitter.com/tenancydev) and\nbacking its development over at [OpenCollective](https://opencollective.com/tenancy) or [GitHub Sponsors](https://github.com/sponsors/tenancy).\n\n![Tests](https://github.com/tenancy/tenancy/actions/workflows/tests.yaml/badge.svg)\n<!-- ![Code Style](https://github.com/tenancy/tenancy/workflows/Code%20Style/badge.svg) -->\n[![Code Coverage](https://codecov.io/gh/tenancy/tenancy/branch/master/graph/badge.svg)](https://codecov.io/gh/tenancy/tenancy)\n![Subsplit](https://github.com/tenancy/tenancy/workflows/Subsplit/badge.svg)\n\n> Before you start, we highly recommend you to read the extensive [online documentation](https://tenancy.dev/docs/tenancy/2.x).\n\n# Installation\n\nTo give this package a spin, install all components at once:\n\n```bash\n$ composer require tenancy/tenancy\n```\n\nOtherwise make sure to selectively install the components you need and at least the framework:\n\n```bash\n$ composer require tenancy/framework\n```\n\nAfter that you'll need to decide on and configure:\n\n- [Database drivers](https://tenancy.dev/docs/tenancy/2.x/database-drivers)\n- [Identification drivers](https://tenancy.dev/docs/tenancy/2.x/identification-drivers)\n- [Affects](https://tenancy.dev/docs/tenancy/2.x/affects)\n- [Hooks](https://tenancy.dev/docs/tenancy/2.x/hooks)\n\n# Contributions\n\nThis repository is used for developing all tenancy packages.\n\nContributors need to use this repository for implementing code. All other repositories\nare READ-ONLY and overwritten on each subsplit push.\n\nPlease read our [Governance documentation](https://tenancy.dev/docs/governance/tenancy) in\ncase you'd like to get involved.\n\n## Local Testing\nTesting the ecosystem locally is possible when:\n- You have Docker (and docker-compose) installed\n- You have Bash installed\n\nWhen you have those requirements, you can simply run `./test` in order to run the test in Docker containers. By default they will run the most recent versions of all our dependencies \n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 3.95703125,
          "content": "{\n    \"name\": \"tenancy/tenancy\",\n    \"description\": \"Creating multi tenant saas from your Laravel app with ease\",\n    \"keywords\": [\"laravel\", \"multi-tenant\", \"saas\", \"tenancy\", \"aws\", \"gce\"],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"laravel/framework\": \"^9.0 | ^10.0 | ^11.0\",\n        \"doctrine/dbal\": \"^3.3 | ^4.0\"\n    },\n    \"require-dev\": {\n        \"fakerphp/faker\": \"^1.9\",\n        \"laravel/laravel\": \"*\",\n        \"phpunit/phpunit\": \"^9.0 | ^10.0\",\n        \"mockery/mockery\": \"^1.5.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Tenancy\\\\\": \"src/Tenancy\",\n            \"Tenancy\\\\Affects\\\\\": \"src/Affects\",\n            \"Tenancy\\\\Database\\\\Drivers\\\\\": \"src/Database\",\n            \"Tenancy\\\\Hooks\\\\\": \"src/Hooks\",\n            \"Tenancy\\\\Identification\\\\Drivers\\\\\": \"src/Identification\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tenancy\\\\Testing\\\\\": \"src/Testing\",\n            \"Tenancy\\\\Tests\\\\\": \"tests/\",\n            \"Tenancy\\\\Tests\\\\Framework\\\\\": \"tests/Tenancy\",\n            \"Tenancy\\\\Tests\\\\Affects\\\\\": \"tests/Affects\",\n            \"Tenancy\\\\Tests\\\\Database\\\\\": \"tests/Database\",\n            \"Tenancy\\\\Tests\\\\Hooks\\\\\": \"tests/Hooks\",\n            \"Tenancy\\\\Tests\\\\Identification\\\\\": \"tests/Identification\"\n        }\n    },\n    \"replace\": {\n        \"tenancy/framework\": \"self.version\",\n        \"tenancy/testing\": \"self.version\",\n        \"tenancy/affects-broadcasts\": \"self.version\",\n        \"tenancy/affects-cache\": \"self.version\",\n        \"tenancy/affects-configs\": \"self.version\",\n        \"tenancy/affects-connections\": \"self.version\",\n        \"tenancy/affects-filesystems\": \"self.version\",\n        \"tenancy/affects-logs\": \"self.version\",\n        \"tenancy/affects-mails\": \"self.version\",\n        \"tenancy/affects-models\": \"self.version\",\n        \"tenancy/affects-routes\": \"self.version\",\n        \"tenancy/affects-urls\": \"self.version\",\n        \"tenancy/affects-views\": \"self.version\",\n        \"tenancy/hooks-database\": \"self.version\",\n        \"tenancy/hooks-migration\": \"self.version\",\n        \"tenancy/db-driver-mysql\": \"self.version\",\n        \"tenancy/db-driver-sqlite\": \"self.version\",\n        \"tenancy/identification-driver-console\": \"self.version\",\n        \"tenancy/identification-driver-environment\": \"self.version\",\n        \"tenancy/identification-driver-http\": \"self.version\",\n        \"tenancy/identification-driver-queue\": \"self.version\"\n    },\n    \"funding\": [\n        {\n            \"type\": \"opencollective\",\n            \"url\": \"https://opencollective.com/tenancy\"\n        },\n        {\n            \"type\": \"github\",\n            \"url\": \"https://github.com/sponsors/tenancy\"\n        }\n    ],\n    \"authors\": [\n        {\n            \"name\": \"Arlon Antonius\",\n            \"email\": \"opensource@arlon.dev\",\n            \"homepage\": \"https://arlon.dev\"\n        }\n    ],\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Tenancy\\\\Providers\\\\TenancyProvider\",\n                \"Tenancy\\\\Affects\\\\Broadcasts\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Cache\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Configs\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Connections\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Filesystems\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Logs\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Mails\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Models\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Routes\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\URLs\\\\Provider\",\n                \"Tenancy\\\\Affects\\\\Views\\\\Provider\",\n                \"Tenancy\\\\Identification\\\\Drivers\\\\Console\\\\Providers\\\\IdentificationProvider\",\n                \"Tenancy\\\\Identification\\\\Drivers\\\\Environment\\\\Providers\\\\IdentificationProvider\",\n                \"Tenancy\\\\Identification\\\\Drivers\\\\Http\\\\Providers\\\\IdentificationProvider\",\n                \"Tenancy\\\\Identification\\\\Drivers\\\\Queue\\\\Providers\\\\IdentificationProvider\"\n            ],\n            \"aliases\": {\n                \"Tenancy\": \"Tenancy\\\\Facades\\\\Tenancy\"\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "dead-mans-switch.md",
          "type": "blob",
          "size": 1.2763671875,
          "content": "# Dead mans switch\n\nHi,\n\nMy name is Arlon Antonius, also known as @ArlonAntonius, I am the owner\nof project Tenancy. This document guarantees the survival of the Tenancy project by\ntransferring ownership to a valid successor in case I am no longer able to fulfil my\nobligations in maintaining this package due to unforeseen circumstances (eg death).\n\nOwnership is transferred to the candidate appointed by his peers\nor last active candidate on the project of the following list:\n\n- Eric Fletcher (USA), @fletch3555\n- Bertrand Kintanar (PHIL), @bkintanar\n\nIn order to transfer ownership the following requirements have to be met:\n\n1. Inactivity of the Owner for at least three months, based on:\n  - GitHub activity.\n  - Chat activity.\n  - Forum activity.\n2. Failed attempts of the Candidate to reach out to the Owner via phone and email\nevery day for two weeks.\n\nOnce both of these requirements have been met, the project is automatically transferred\nto the Candidate and parties involved in this project should do everything in their power\nto assist in this transfer.\n\nThe Candidate then is obligated to update this document to name him- or herself Owner\nand appoint at least two new Candidates.\n\nHereby signed and committed as a legally binding agreement,\n\nArlon Antonius\n\n_Utrecht (NLD), March 2nd, 2020_\n"
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 1.0947265625,
          "content": "The MIT License (MIT)\n\nCopyright (c) Tenancy for Laravel & Arlon Antonius <opensource@arlon.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "phpunit-10.*.xml",
          "type": "blob",
          "size": 1.3154296875,
          "content": "<?xml version=\"1.0\"?>\n<phpunit\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  backupGlobals=\"false\"\n  bootstrap=\"vendor/autoload.php\"\n  colors=\"true\"\n  processIsolation=\"false\"\n  stopOnFailure=\"false\"\n  cacheDirectory=\".phpunit.cache\"\n  backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"Test Suite\">\n      <directory suffix=\"Test.php\">./tests/</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <env name=\"APP_KEY\" value=\"base64:aYWlZmotmdYnjvN9AAhDXSBl7Vo6RkZCu7eJ9pYJyt8=\"/>\n    <env name=\"APP_ENV\" value=\"testing\"/>\n    <env name=\"CACHE_DRIVER\" value=\"array\"/>\n    <env name=\"SESSION_DRIVER\" value=\"array\"/>\n    <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    <env name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n    <env name=\"DB_CONNECTION\" value=\"sqlite\"/>\n    <env name=\"DB_DATABASE\" value=\":memory:\"/>\n    <env name=\"TENANCY_MYSQL_HOST\" value=\"mysql\"/>\n    <env name=\"TENANCY_DB\" value=\"testing\"/>\n    <env name=\"TENANCY_USERNAME\" value=\"mysql_admin\"/>\n    <env name=\"TENANCY_PASSWORD\" value=\"mysql_admin_password\"/>\n  </php>\n  <coverage>\n      <include>\n          <directory suffix=\".php\">./src/</directory>\n      </include>\n      <exclude>\n          <directory suffix=\".php\">./src/*/*/resources</directory>\n          <directory suffix=\".php\">./src/*/*/*/Legacy</directory>\n      </exclude>\n  </coverage>\n</phpunit>\n"
        },
        {
          "name": "phpunit-9.*.xml",
          "type": "blob",
          "size": 1.5810546875,
          "content": "<phpunit  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          backupGlobals=\"false\"\n          backupStaticAttributes=\"false\"\n          bootstrap=\"vendor/autoload.php\"\n          colors=\"true\"\n          convertErrorsToExceptions=\"true\"\n          convertNoticesToExceptions=\"true\"\n          convertWarningsToExceptions=\"true\"\n          processIsolation=\"false\"\n          stopOnFailure=\"false\"\n          xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/9.3/phpunit.xsd\">\n    <coverage processUncoveredFiles=\"true\">\n        <include>\n            <directory suffix=\".php\">./src/</directory>\n        </include>\n        <exclude>\n            <directory suffix=\".php\">./src/*/*/resources</directory>\n            <directory suffix=\".php\">./src/*/*/*/Legacy</directory>\n        </exclude>\n    </coverage>\n    <testsuites>\n        <testsuite name=\"Test Suite\">\n            <directory suffix=\"Test.php\">./tests/</directory>\n        </testsuite>\n    </testsuites>\n    <php>\n        <env name=\"APP_KEY\" value=\"base64:aYWlZmotmdYnjvN9AAhDXSBl7Vo6RkZCu7eJ9pYJyt8=\"/>\n        <env name=\"APP_ENV\" value=\"testing\"/>\n        <env name=\"CACHE_DRIVER\" value=\"array\"/>\n        <env name=\"SESSION_DRIVER\" value=\"array\"/>\n        <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n        <env name=\"DB_CONNECTION\" value=\"sqlite\"/>\n        <env name=\"DB_DATABASE\" value=\":memory:\"/>\n        <env name=\"TENANCY_MYSQL_HOST\" value=\"mysql\"/>\n        <env name=\"TENANCY_DB\" value=\"testing\"/>\n        <env name=\"TENANCY_USERNAME\" value=\"mysql_admin\"/>\n        <env name=\"TENANCY_PASSWORD\" value=\"mysql_admin_password\"/>\n    </php>\n</phpunit>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 1.3154296875,
          "content": "<?xml version=\"1.0\"?>\n<phpunit\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  backupGlobals=\"false\"\n  bootstrap=\"vendor/autoload.php\"\n  colors=\"true\"\n  processIsolation=\"false\"\n  stopOnFailure=\"false\"\n  cacheDirectory=\".phpunit.cache\"\n  backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"Test Suite\">\n      <directory suffix=\"Test.php\">./tests/</directory>\n    </testsuite>\n  </testsuites>\n  <php>\n    <env name=\"APP_KEY\" value=\"base64:aYWlZmotmdYnjvN9AAhDXSBl7Vo6RkZCu7eJ9pYJyt8=\"/>\n    <env name=\"APP_ENV\" value=\"testing\"/>\n    <env name=\"CACHE_DRIVER\" value=\"array\"/>\n    <env name=\"SESSION_DRIVER\" value=\"array\"/>\n    <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    <env name=\"QUEUE_CONNECTION\" value=\"sync\"/>\n    <env name=\"DB_CONNECTION\" value=\"sqlite\"/>\n    <env name=\"DB_DATABASE\" value=\":memory:\"/>\n    <env name=\"TENANCY_MYSQL_HOST\" value=\"mysql\"/>\n    <env name=\"TENANCY_DB\" value=\"testing\"/>\n    <env name=\"TENANCY_USERNAME\" value=\"mysql_admin\"/>\n    <env name=\"TENANCY_PASSWORD\" value=\"mysql_admin_password\"/>\n  </php>\n  <coverage>\n      <include>\n          <directory suffix=\".php\">./src/</directory>\n      </include>\n      <exclude>\n          <directory suffix=\".php\">./src/*/*/resources</directory>\n          <directory suffix=\".php\">./src/*/*/*/Legacy</directory>\n      </exclude>\n  </coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "blob",
          "size": 1.76171875,
          "content": "#!/bin/bash\n\nCOMMAND=$1\n\nPHP_VERSION=8.2\nDB_VERSION=8\nLARAVEL_VERSION=11.*\nPHPUNIT_VERSION=10.*\nDEPENDENCY_VERSIONS=prefer-stable\n\nPHPUNIT_PREPEND=\nPHPUNIT_APPEND=\n\nwhile [[ \"$#\" -gt 0 ]]; do\n    case $1 in\n        --php) PHP_VERSION=\"$2\"; shift ;;\n        --db) DB_VERSION=\"$2\"; shift ;;\n        --laravel) LARAVEL_VERSION=\"$2\"; shift ;;\n        --phpunit) PHPUNIT_VERSION=\"$2\" PHPUNIT_APPEND=\"--configuration phpunit-$2.xml\"; shift ;;\n        --dependencies) DEPENDENCY_VERSIONS=\"$2\"; shift ;;\n        --coverage) PHPUNIT_APPEND=\"${PHPUNIT_APPEND} --coverage-clover=coverage.xml\" PHPUNIT_PREPEND=\"${PHPUNIT_PREPEND} XDEBUG_MODE=coverage\";;\n        *) echo \"Unknown parameter passed: $1\"; exit 1 ;;\n    esac\n    shift\ndone\n\nRUNCOMMAND=\"composer require 'laravel/framework:$LARAVEL_VERSION' --no-interaction --no-update\"\n\n# If LARAVEL_VERSION is 9.*, then we need to install doctrine/dbal 3.0^\nif [[ $LARAVEL_VERSION == 9.* ]]; then\n    RUNCOMMAND=\"${RUNCOMMAND} && composer require 'doctrine/dbal:^3.0' --no-interaction --no-update\"\nfi\n\nRUNCOMMAND=\"${RUNCOMMAND} && composer require 'laravel/laravel:$LARAVEL_VERSION' --dev --no-interaction --no-update\"\nRUNCOMMAND=\"${RUNCOMMAND} && composer require 'phpunit/phpunit:$PHPUNIT_VERSION' --dev --no-interaction --no-update\"\nRUNCOMMAND=\"${RUNCOMMAND} && composer update --no-ansi --no-interaction --$DEPENDENCY_VERSIONS\"\nRUNCOMMAND=\"${RUNCOMMAND} && composer update --no-ansi --no-interaction nesbot/carbon\"\nRUNCOMMAND=\"${RUNCOMMAND} && /ops/wait-for-it.sh mysql:3306 --timeout=120\"\nRUNCOMMAND=\"${RUNCOMMAND} && $PHPUNIT_PREPEND vendor/bin/phpunit $PHPUNIT_APPEND\"\n\necho \"${RUNCOMMAND}\"\nPHP_VERSION=$PHP_VERSION DB_VERSION=$DB_VERSION docker compose -f ./.dev/docker/docker-compose.yaml run -T --rm --service-ports --use-aliases php bash -c \"${RUNCOMMAND}\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}