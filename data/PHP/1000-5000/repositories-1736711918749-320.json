{
  "metadata": {
    "timestamp": 1736711918749,
    "page": 320,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spatie/laravel-responsecache",
      "stars": 2521,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.21484375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5185546875,
          "content": "# Path-based git attributes\n# https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html\n\n# Ignore all test and documentation with \"export-ignore\".\n/.github            export-ignore\n/.gitattributes     export-ignore\n/.gitignore         export-ignore\n/phpunit.xml.dist   export-ignore\n/tests              export-ignore\n/.editorconfig      export-ignore\n/.php_cs.dist       export-ignore\n/psalm.xml          export-ignore\n/psalm.xml.dist     export-ignore\n/testbench.yaml     export-ignore\n/art                export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.15625,
          "content": ".idea\n.php_cs\n.php-cs-fixer.cache\n.phpunit.result.cache\nbuild\ncomposer.lock\ncoverage\ndocs\nphpunit.xml\npsalm.xml\ntestbench.yaml\ntests/temp\nvendor\n.phpunit.cache\n"
        },
        {
          "name": ".php-cs-fixer.php",
          "type": "blob",
          "size": 1.123046875,
          "content": "<?php\n\n$finder = Symfony\\Component\\Finder\\Finder::create()\n    ->in([\n        __DIR__ . '/src',\n        __DIR__ . '/tests',\n    ])\n    ->name('*.php')\n    ->notName('*.blade.php')\n    ->ignoreDotFiles(true)\n    ->ignoreVCS(true);\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n        '@PSR12' => true,\n        'array_syntax' => ['syntax' => 'short'],\n        'ordered_imports' => ['sort_algorithm' => 'alpha'],\n        'no_unused_imports' => true,\n        'not_operator_with_successor_space' => true,\n        'trailing_comma_in_multiline' => true,\n        'phpdoc_scalar' => true,\n        'unary_operator_spaces' => true,\n        'binary_operator_spaces' => true,\n        'blank_line_before_statement' => [\n            'statements' => ['break', 'continue', 'declare', 'return', 'throw', 'try'],\n        ],\n        'phpdoc_single_line_var_spacing' => true,\n        'phpdoc_var_without_name' => true,\n        'method_argument_space' => [\n            'on_multiline' => 'ensure_fully_multiline',\n            'keep_multiple_spaces_after_comma' => true,\n        ],\n        'single_trait_insert_per_statement' => true,\n    ])\n    ->setFinder($finder);\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.6220703125,
          "content": "# Changelog\n\nAll notable changes to `laravel-responsecache` will be documented in this file.\n\n## 7.6.3 - 2024-12-11\n\n### What's Changed\n\n* Fix ResponseCache Facade docblock for forget() by @alexcanana in https://github.com/spatie/laravel-responsecache/pull/486\n\n### New Contributors\n\n* @alexcanana made their first contribution in https://github.com/spatie/laravel-responsecache/pull/486\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.6.2...7.6.3\n\n## 7.6.2 - 2024-12-09\n\n### What's Changed\n\n* CsrfTokenReplacer avoid str_replace():  by @thyseus in https://github.com/spatie/laravel-responsecache/pull/482\n\n### New Contributors\n\n* @thyseus made their first contribution in https://github.com/spatie/laravel-responsecache/pull/482\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.6.1...7.6.2\n\n## 7.6.1 - 2024-11-18\n\n### What's Changed\n\n* Add PHPDoc for ResponseCache Facade by @alies-dev in https://github.com/spatie/laravel-responsecache/pull/485\n\n### New Contributors\n\n* @alies-dev made their first contribution in https://github.com/spatie/laravel-responsecache/pull/485\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.6.0...7.6.1\n\n## 7.6.0 - 2024-08-05\n\n### What's Changed\n\n* Bump stefanzweifel/git-auto-commit-action from 5.0.0 to 5.0.1 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/470\n* Fix incorrect grammar by @SebKay in https://github.com/spatie/laravel-responsecache/pull/472\n* Add missing Laravel 11.x Documentation by @omaratpxt in https://github.com/spatie/laravel-responsecache/pull/474\n* Bump dependabot/fetch-metadata from 1.6.0 to 2.2.0 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/475\n* Switch DefaultHasher to xxh128 for a faster alternative to MD5. by @marcell-ferenc in https://github.com/spatie/laravel-responsecache/pull/478\n\n### New Contributors\n\n* @SebKay made their first contribution in https://github.com/spatie/laravel-responsecache/pull/472\n* @omaratpxt made their first contribution in https://github.com/spatie/laravel-responsecache/pull/474\n* @marcell-ferenc made their first contribution in https://github.com/spatie/laravel-responsecache/pull/478\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.5.2...7.6.0\n\n## 7.5.2 - 2024-04-03\n\n### What's Changed\n\n* Cast cache lifetime to integer by default by @dwightwatson in https://github.com/spatie/laravel-responsecache/pull/468\n\n### New Contributors\n\n* @dwightwatson made their first contribution in https://github.com/spatie/laravel-responsecache/pull/468\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.5.1...7.5.2\n\n## 7.5.1 - 2024-03-23\n\n- allow Carbon 3\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.5.0...7.5.1\n\n## 7.5.0 - 2024-03-11\n\n### What's Changed\n\n* Add php 8.3 matrix by @binbyz in https://github.com/spatie/laravel-responsecache/pull/460\n* Support Laravel 11\n\n### New Contributors\n\n* @binbyz made their first contribution in https://github.com/spatie/laravel-responsecache/pull/460\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.10...7.5.0\n\n## 7.4.10 - 2023-10-28\n\n### What's Changed\n\n- Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/449\n- Bump stefanzweifel/git-auto-commit-action from 4.16.0 to 5.0.0 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/452\n- Do not enable cache time header by default by @francoism90 in https://github.com/spatie/laravel-responsecache/pull/456\n\n### New Contributors\n\n- @francoism90 made their first contribution in https://github.com/spatie/laravel-responsecache/pull/456\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.9...7.4.10\n\n## 7.4.9 - 2023-10-02\n\n- Fix docblock\n\n## 7.4.8 - 2023-09-27\n\n### What's Changed\n\n- Change PHPDoc for method clear(array ) in Facade by @kra-so in https://github.com/spatie/laravel-responsecache/pull/451\n\n### New Contributors\n\n- @gomzyakov made their first contribution in https://github.com/spatie/laravel-responsecache/pull/437\n- @kra-so made their first contribution in https://github.com/spatie/laravel-responsecache/pull/451\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.7...7.4.8\n\n## 7.4.7 - 2023-04-07\n\n### What's Changed\n\n- Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/427\n- Property name changed by @Fot0n in https://github.com/spatie/laravel-responsecache/pull/428\n- Typo fix in config responsecache by @dorqa95 in https://github.com/spatie/laravel-responsecache/pull/431\n- Issue #342: CacheResponse race condition with has and get by @swichers in https://github.com/spatie/laravel-responsecache/pull/434\n\n### New Contributors\n\n- @Fot0n made their first contribution in https://github.com/spatie/laravel-responsecache/pull/428\n- @dorqa95 made their first contribution in https://github.com/spatie/laravel-responsecache/pull/431\n- @swichers made their first contribution in https://github.com/spatie/laravel-responsecache/pull/434\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.6...7.4.7\n\n## 7.4.6 - 2023-01-23\n\n- add support for L10\n\n## 7.4.5 - 2023-01-23\n\n### What's Changed\n\n- Bump stefanzweifel/git-auto-commit-action from 4.15.4 to 4.16.0 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/424\n- Normalize query string parameters before hashing by @cosmastech in https://github.com/spatie/laravel-responsecache/pull/426\n\n### New Contributors\n\n- @cosmastech made their first contribution in https://github.com/spatie/laravel-responsecache/pull/426\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.4...7.4.5\n\n## 7.4.4 - 2022-11-25\n\n### What's Changed\n\n- Refactor tests to pest by @AyoobMH in https://github.com/spatie/laravel-responsecache/pull/418\n- Add PHP 8.2 Support to tests workflow by @patinthehat in https://github.com/spatie/laravel-responsecache/pull/421\n- Add Dependabot Automation by @patinthehat in https://github.com/spatie/laravel-responsecache/pull/420\n- Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/423\n- Bump stefanzweifel/git-auto-commit-action from 2.3.0 to 4.15.4 by @dependabot in https://github.com/spatie/laravel-responsecache/pull/422\n- Catch CouldNotUnserialize exception and continue returning a response by @roberttolton in https://github.com/spatie/laravel-responsecache/pull/408\n\n### New Contributors\n\n- @AyoobMH made their first contribution in https://github.com/spatie/laravel-responsecache/pull/418\n- @dependabot made their first contribution in https://github.com/spatie/laravel-responsecache/pull/423\n- @roberttolton made their first contribution in https://github.com/spatie/laravel-responsecache/pull/408\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.3...7.4.4\n\n## 7.4.3 - 2022-09-24\n\n### What's Changed\n\n- Dispatch clear events when using facade by @mateusjunges in https://github.com/spatie/laravel-responsecache/pull/413\n\n### New Contributors\n\n- @mateusjunges made their first contribution in https://github.com/spatie/laravel-responsecache/pull/413\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.2...7.4.3\n\n## 7.4.2 - 2022-09-02\n\n### What's Changed\n\n- Always prepend app url to requests by @apeisa in https://github.com/spatie/laravel-responsecache/pull/409\n\n### New Contributors\n\n- @apeisa made their first contribution in https://github.com/spatie/laravel-responsecache/pull/409\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.1...7.4.2\n\n## 7.4.1 - 2022-08-09\n\n### What's Changed\n\n- Cache bypass header now also prevents an already cached response from being returned by @fgilio in https://github.com/spatie/laravel-responsecache/pull/407\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.4.0...7.4.1\n\n## 7.4.0 - 2022-08-01\n\n### What's Changed\n\n- Add cache bypass header by @fgilio in https://github.com/spatie/laravel-responsecache/pull/406\n\n### New Contributors\n\n- @fgilio made their first contribution in https://github.com/spatie/laravel-responsecache/pull/406\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.3.1...7.4.0\n\n## 7.3.1 - 2022-05-30\n\n### What's Changed\n\n- Handle missed cache gracefully by @antennaio in https://github.com/spatie/laravel-responsecache/pull/383\n\n### New Contributors\n\n- @antennaio made their first contribution in https://github.com/spatie/laravel-responsecache/pull/383\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.3.0...7.3.1\n\n## 7.3.0 - 2022-05-16\n\n## What's Changed\n\n- Add option to output cache age header by @it-can in https://github.com/spatie/laravel-responsecache/pull/385\n\n## New Contributors\n\n- @it-can made their first contribution in https://github.com/spatie/laravel-responsecache/pull/385\n\n**Full Changelog**: https://github.com/spatie/laravel-responsecache/compare/7.2.0...7.3.0\n\n## 7.2.0 - 2022-01-13\n\n- support Laravel 9\n\n## 7.1.0 - 2021-04-27\n\n- add `CacheItemSelector`\n\n## 7.0.1 - 2021-04-13\n\n- add `url` option to `ClearCommand` (#348)\n\n## 7.0.0 - 2021-04-02\n\n- require PHP 8+\n- drop support for PHP 7.x\n- use PHP 8 syntax where possible\n\n## 6.6.9 - 2021-03-30\n\n- fix for issue #331 (#344)\n\n## 6.6.8 - 2020-01-25\n\n- use package service provider\n\n## 6.6.7 - 2020-11-28\n\n- add support for PHP 8\n\n## 6.6.6 - 2020-09-27\n\n- fix clearing tagged cache\n\n## 6.6.5 - 2020-09-22\n\n- fix tagged responsecache:clear (#316)\n\n## 6.6.4 - 2020-09-09\n\n- Support Laravel 8\n\n## 6.6.3 - 2020-08-24\n\n- replace Laravel/framework with individual packages (#304)\n\n## 6.6.2 - 2020-06-03\n\n- support JSON types other than application/json (#299)\n\n## 6.6.1 - 2020-04-22\n\n- change to the proper way of setting app URL on runtime (#290)\n\n## 6.6.0 - 2020-03-02\n\n- drop support for Laravel 6 to fix the test suite (namespace of `TestResponse` has changed)\n\n## 6.5.0 - 2020-03-02\n\n- add support for Laravel 7\n\n## 6.4.0 - 2019-12-01\n\n- drop support for all non-current PHP and Laravel versions\n\n## 6.3.0 - 2019-09-01\n\n- add support for custom serializers\n\n## 6.2.1 - 2020-03-07\n\n- make compatible with Laravel 7, so the package can be used on PHP 7.3\n\n## 6.2.0 - 2019-09-01\n\n- make compatible with Laravel 6\n\n## 6.1.1 - 2019-08-08\n\n- restore laravel 5.7 compatibility\n\n## 6.1.0 - 2019-08-01\n\n- add support for cache tags\n\n## 6.0.2 - 2019-07-31\n\n- make json responses cacheable\n\n## 6.0.1 - 2019-07-09\n\n- use Rfc2822S formatted date in cache time header\n\n## 6.0.0 - 2019-05-20\n\n- added support for replacers\n- you can now swap out `RequestHasher` in favor of a custom one\n- `CacheAllSuccessfulGetRequests` will only cache responses of which the content type starts with `text`\n- removed deprecated `Flush` command\n- `\\Spatie\\ResponseCache\\ResponseCacheFacade` has been removed\n- dropped support for carbon v1\n- dropped support for PHP 7.2\n\n## 5.0.3 - 2019-05-10\n\n- make sure the request starts with the app url - fixes #177\n\n## 5.0.2 - 2019-04-05\n\n- make host specific caches\n\n## 5.0.1 - 2019-03-15\n\n- fix cache lifetime in config file\n\n## 5.0.0 - 2019-02-27\n\n- drop support for Laravel 5.7 and lower\n- drop support for PHP 7.0 and lower\n- change all cache time parameters to seconds (see UPGRADING.md)\n\n## 4.4.5 - 2019-02-27\n\n- add support for Laravel 5.8\n- you can no longer add multiple `CacheResponse` middleware to one route\n\n## 4.4.4 - 2018-09-23\n\n- fix for caching urls with query parameters\n\n## 4.4.3 - 2018-09-23\n\n- fix for forgetting a specific url\n\n## 4.4.2 - 2018-08-24\n\n- add support for Laravel 5.7\n\n## 4.4.1 - 2018-07-26\n\n- fix for issue #123\n\n## 4.4.0 - 2018-04-30\n\n- add support for Lumen\n\n## 4.3.0 - 2018-03-01\n\n- add `forget`\n\n## 4.2.1 - 2018-02-08\n\n- add support for L5.6\n\n## 4.2.0 - 2018-01-30\n\n- Added: `clear()` method and `responsecache:clear` command\n- Deprecated: `flush()` method and `responsecache:flush` command\n\nDeprecated features will still work until the next major version.\n\n## 4.1.1 - 2018-01-30\n\n- Added: Better exception handling when something goes wrong unserializing the response\n\n## 4.1.0 - 2017-09-26\n\n- Added: Support for specific lifetimes on routes\n\n## 4.0.1 - 2017-08-30\n\n- Fixed: Artisan command registration\n\n## 4.0.0 - 2017-08-30\n\n- Added: Support for Laravel 5.5\n- Removed: Support for all older Laravel versions\n- Changed: Renamed facade class\n\n## 3.2.0 - 2017-06-19\n\n- Added: Support for `BinaryFileResponse`\n\n## 3.1.0 - 2017-04-28\n\n- Added: Support for taggable cache\n\n## 3.0.1 - 2017-03-16\n\n- Fixed: Php version dependency in `composer.json`\n\n## 3.0.0 - 2017-03-16\n\n- Added: `enabled` method on cache profiles\n- Added: Events\n- Changed: Middleware won't automatically be registered anymore\n- Changed: Renamed config file\n- Changed: Renamed various methods for readability\n- Removed: Dropped PHP 5.6 support\n\n## 2.0.0 - 2017-01-24\n\n- Added: Support for Laravel 5.4\n- Removed: Dropped support for all older Laravel versions\n\n## 1.1.7 - 2016-10-10\n\n- Added: Usage of `RESPONSE_CACHE_LIFETIME` env var to config file\n\n## 1.1.6 - 2016-08-07\n\n- Changed: Debug headers will not be sent when `APP_DEBUG` is set to false\n\n## 1.1.5 - 2015-08-28\n\n- Fixed: Issue where the cache middleware couldn't correctly determine the currently authenticated user\n\n## 1.1.4 - 2015-08-12\n\n- Fixed: An issue where cached request were still served even if the package was disabled via the config file\n\n## 1.1.3 - 2015-08-11\n\n- Fixed: An issue where the cache header could not be set\n\n## 1.1.2 - 2015-07-22\n\n- Fixed: BaseCacheProfile has been made abstract (as it should have been all along)\n\n## 1.1.1 - 2015-07-20\n\n- Fixed: Default cachetime\n\n## 1.1.0 - 2015-07-20\n\n- Added: A command to flush the response cache\n\n## 1.0.0 - 2015-07-20\n\n- Initial release\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.064453125,
          "content": "The MIT License (MIT)\n\nCopyright (c) Spatie bvba <info@spatie.be>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.658203125,
          "content": "<p align=\"center\"><img src=\"/art/socialcard.png\" alt=\"Social Card of Laravel Response Cache\"></p>\n\n# Speed up an app by caching the entire response\n\n[![Latest Version on Packagist](https://img.shields.io/packagist/v/spatie/laravel-responsecache.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-responsecache)\n[![MIT Licensed](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\n![Tests](https://github.com/spatie/laravel-responsecache/actions/workflows/run-tests.yml/badge.svg)\n[![Total Downloads](https://img.shields.io/packagist/dt/spatie/laravel-responsecache.svg?style=flat-square)](https://packagist.org/packages/spatie/laravel-responsecache)\n\nThis Laravel package can cache an entire response. By default it will cache all successful get-requests that return text based content (such as html and json) for a week. This could potentially speed up the response quite considerably.\n\nSo the first time a request comes in the package will save the response before sending it to the users. When the same request comes in again we're not going through the entire application but just respond with the saved response.\n\nAre you a visual learner? Then watch [this video](https://spatie.be/videos/laravel-package-training/laravel-responsecache) that covers how you can use laravel-responsecache and how it works under the hood.\n\n## Support us\n\n[<img src=\"https://github-ads.s3.eu-central-1.amazonaws.com/laravel-responsecache.jpg?t=1\" width=\"419px\" />](https://spatie.be/github-ad-click/laravel-responsecache)\n\nWe invest a lot of resources into creating [best in class open source packages](https://spatie.be/open-source). You can support us by [buying one of our paid products](https://spatie.be/open-source/support-us).\n\nWe highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on [our contact page](https://spatie.be/about-us). We publish all received postcards on [our virtual postcard wall](https://spatie.be/open-source/postcards).\n\n## Installation\n\n> If you're using PHP 7, install v6.x of this package.\n\nYou can install the package via composer:\n```bash\ncomposer require spatie/laravel-responsecache\n```\n\nThe package will automatically register itself.\n\nYou can publish the config file with:\n```bash\nphp artisan vendor:publish --tag=\"responsecache-config\"\n```\n\nThis is the contents of the published config file:\n\n```php\n// config/responsecache.php\n\nreturn [\n    /*\n     * Determine if the response cache middleware should be enabled.\n     */\n    'enabled' => env('RESPONSE_CACHE_ENABLED', true),\n\n    /*\n     *  The given class will determinate if a request should be cached. The\n     *  default class will cache all successful GET-requests.\n     *\n     *  You can provide your own class given that it implements the\n     *  CacheProfile interface.\n     */\n    'cache_profile' => Spatie\\ResponseCache\\CacheProfiles\\CacheAllSuccessfulGetRequests::class,\n\n    /*\n     *  Optionally, you can specify a header that will force a cache bypass.\n     *  This can be useful to monitor the performance of your application.\n     */\n    'cache_bypass_header' => [\n        'name' => env('CACHE_BYPASS_HEADER_NAME', null),\n        'value' => env('CACHE_BYPASS_HEADER_VALUE', null),\n    ],\n\n    /*\n     * When using the default CacheRequestFilter this setting controls the\n     * default number of seconds responses must be cached.\n     */\n    'cache_lifetime_in_seconds' => env('RESPONSE_CACHE_LIFETIME', 60 * 60 * 24 * 7),\n\n    /*\n     * This setting determines if a http header named with the cache time\n     * should be added to a cached response. This can be handy when\n     * debugging.\n     */\n    'add_cache_time_header' => env('APP_DEBUG', true),\n\n    /*\n     * This setting determines the name of the http header that contains\n     * the time at which the response was cached\n     */\n    'cache_time_header_name' => env('RESPONSE_CACHE_HEADER_NAME', 'laravel-responsecache'),\n\n    /*\n     * This setting determines if a http header named with the cache age\n     * should be added to a cached response. This can be handy when\n     * debugging.\n     * ONLY works when \"add_cache_time_header\" is also active!\n     */\n    'add_cache_age_header' => env('RESPONSE_CACHE_AGE_HEADER', false),\n\n    /*\n     * This setting determines the name of the http header that contains\n     * the age of cache\n     */\n    'cache_age_header_name' => env('RESPONSE_CACHE_AGE_HEADER_NAME', 'laravel-responsecache-age'),\n\n    /*\n     * Here you may define the cache store that should be used to store\n     * requests. This can be the name of any store that is\n     * configured in app/config/cache.php\n     */\n    'cache_store' => env('RESPONSE_CACHE_DRIVER', 'file'),\n\n    /*\n     * Here you may define replacers that dynamically replace content from the response.\n     * Each replacer must implement the Replacer interface.\n     */\n    'replacers' => [\n        \\Spatie\\ResponseCache\\Replacers\\CsrfTokenReplacer::class,\n    ],\n\n    /*\n     * If the cache driver you configured supports tags, you may specify a tag name\n     * here. All responses will be tagged. When clearing the responsecache only\n     * items with that tag will be flushed.\n     *\n     * You may use a string or an array here.\n     */\n    'cache_tag' => '',\n\n    /*\n     * This class is responsible for generating a hash for a request. This hash\n     * is used to look up an cached response.\n     */\n    'hasher' => \\Spatie\\ResponseCache\\Hasher\\DefaultHasher::class,\n\n    /*\n     * This class is responsible for serializing responses.\n     */\n    'serializer' => \\Spatie\\ResponseCache\\Serializers\\DefaultSerializer::class,\n];\n```\n\nAnd finally you should install the provided middlewares `\\Spatie\\ResponseCache\\Middlewares\\CacheResponse::class` and `\\Spatie\\ResponseCache\\Middlewares\\DoNotCacheResponse`.\n\n\n**For laravel 11.x and newer:**\n\nAdd the middleware definitions to the bootstrap app.\n\n```php\n// bootstrap/app.php\n\n\n->withMiddleware(function (Middleware $middleware) {\n    ...\n    $middleware->web(append: [\n        ...\n        \\Spatie\\ResponseCache\\Middlewares\\CacheResponse::class,\n    ]);\n\n    ...\n\n    $middleware->alias([\n        ...\n        'doNotCacheResponse' => \\Spatie\\ResponseCache\\Middlewares\\DoNotCacheResponse::class,\n    ]);\n})\n\n```\n\n**For laravel 10.x and earlier:**\n\nAdd the middleware definitions to the http kernel.\n\n\n```php\n// app/Http/Kernel.php\n\n...\n\nprotected $middlewareGroups = [\n   'web' => [\n       ...\n       \\Spatie\\ResponseCache\\Middlewares\\CacheResponse::class,\n   ],\n\n...\n\nprotected $middlewareAliases = [\n   ...\n   'doNotCacheResponse' => \\Spatie\\ResponseCache\\Middlewares\\DoNotCacheResponse::class,\n];\n\n```\n\n## Usage\n\n### Basic usage\n\nBy default, the package will cache all successful `GET` requests for a week.\nLogged in users will each have their own separate cache. If this behaviour is what you\n need, you're done: installing the `ResponseCacheServiceProvider` was enough.\n\n### Clearing the cache\n\n#### Manually\n\nThe entire cache can be cleared with:\n```php\nResponseCache::clear();\n```\nThis will clear everything from the cache store specified in the config file.\n\n#### Using a console command\n\nThe same can be accomplished by issuing this artisan command:\n\n```bash\nphp artisan responsecache:clear\n```\n\n#### Using model events\n\nYou can leverage model events to clear the cache whenever a model is saved or deleted. Here's an example.\n```php\nnamespace App\\Traits;\n\nuse Spatie\\ResponseCache\\Facades\\ResponseCache;\n\ntrait ClearsResponseCache\n{\n    public static function bootClearsResponseCache()\n    {\n        self::created(function () {\n            ResponseCache::clear();\n        });\n\n        self::updated(function () {\n            ResponseCache::clear();\n        });\n\n        self::deleted(function () {\n            ResponseCache::clear();\n        });\n    }\n}\n```\n\n### Forget one or several specific URIs\n\nYou can forget specific URIs with:\n```php\n// Forget one\nResponseCache::forget('/some-uri');\n\n// Forget several\nResponseCache::forget(['/some-uri', '/other-uri']);\n\n// Equivalent to the example above\nResponseCache::forget('/some-uri', '/other-uri');\n```\n\nThe `ResponseCache::forget` method only works when you're not using a `cacheNameSuffix` in your cache profile, \nuse `ResponseCache::selectCachedItems` to deal with `cacheNameSuffix`.\n\n### Forgetting a selection of cached items\n\nYou can use `ResponseCache::selectCachedItems()` to specify which cached items should be forgotten.\n\n```php\n\n// forgetting all PUT responses of /some-uri\nResponseCache::selectCachedItems()->withPutMethod()->forUrls('/some-uri')->forget();\n\n// forgetting all PUT responses of multiple endpoints\nResponseCache::selectCachedItems()->withPutMethod()->forUrls(['/some-uri','/other-uri'])->forget();\n\n// this is equivalent to the example above\nResponseCache::selectCachedItems()->withPutMethod()->forUrls('/some-uri','/other-uri')->forget();\n\n// forget /some-uri cached with \"100\" suffix (by default suffix is user->id or \"\")\nResponseCache::selectCachedItems()->usingSuffix('100')->forUrls('/some-uri')->forget();\n\n// all options combined\nResponseCache::selectCachedItems()\n    ->withPutMethod()\n    ->withHeaders(['foo'=>'bar'])\n    ->withCookies(['cookie1' => 'value'])\n    ->withParameters(['param1' => 'value'])\n    ->withRemoteAddress('127.0.0.1')\n    ->usingSuffix('100') \n    ->usingTags('tag1', 'tag2')\n    ->forUrls('/some-uri', '/other-uri')\n    ->forget();\n\n```\n\nThe `cacheNameSuffix` depends by your cache profile, by default is the user ID or an empty string if not authenticated.\n\n### Preventing a request from being cached\n\nRequests can be ignored by using the `doNotCacheResponse` middleware.\nThis middleware [can be assigned to routes and controllers](http://laravel.com/docs/master/controllers#controller-middleware).\n\nUsing the middleware our route could be exempt from being cached.\n\n```php\n// app/Http/routes.php\n\nRoute::get('/auth/logout', ['middleware' => 'doNotCacheResponse', 'uses' => 'AuthController@getLogout']);\n```\n\nAlternatively, you can add the middleware to a controller:\n\n```php\nclass UserController extends Controller\n{\n    public function __construct()\n    {\n        $this->middleware('doNotCacheResponse', ['only' => ['fooAction', 'barAction']]);\n    }\n}\n```\n\n### Purposefully bypassing the cache\n\nIt's possible to purposefully and securely bypass the cache and ensure you always receive a fresh response. This may be useful in case you want to profile some endpoint or in case you need to debug a response.\nIn any case, all you need to do is fill the `CACHE_BYPASS_HEADER_NAME` and `CACHE_BYPASS_HEADER_VALUE` environment variables and then use that custom header when performing the requests.\n\n### Creating a custom cache profile\nTo determine which requests should be cached, and for how long, a cache profile class is used.\nThe default class that handles these questions is `Spatie\\ResponseCache\\CacheProfiles\\CacheAllSuccessfulGetRequests`.\n\nYou can create your own cache profile class by implementing the `\nSpatie\\ResponseCache\\CacheProfiles\\CacheProfile` interface. Let's take a look at the interface:\n\n```php\ninterface CacheProfile\n{\n    /*\n     * Determine if the response cache middleware should be enabled.\n     */\n    public function enabled(Request $request): bool;\n\n    /*\n     * Determine if the given request should be cached.\n     */\n    public function shouldCacheRequest(Request $request): bool;\n\n    /*\n     * Determine if the given response should be cached.\n     */\n    public function shouldCacheResponse(Response $response): bool;\n\n    /*\n     * Return the time when the cache must be invalidated.\n     */\n    public function cacheRequestUntil(Request $request): DateTime;\n\n    /**\n     * Return a string to differentiate this request from others.\n     *\n     * For example: if you want a different cache per user you could return the id of\n     * the logged in user.\n     *\n     * @param \\Illuminate\\Http\\Request $request\n     *\n     * @return mixed\n     */\n    public function useCacheNameSuffix(Request $request);\n}\n```\n\n### Caching specific routes\nInstead of registering the `cacheResponse` middleware globally, you can also register it as route middleware.\n\n```php\nprotected $middlewareAliases = [\n   ...\n   'cacheResponse' => \\Spatie\\ResponseCache\\Middlewares\\CacheResponse::class,\n];\n```\n\nWhen using the route middleware you can specify the number of seconds these routes should be cached:\n\n```php\n// cache this route for 5 minutes\nRoute::get('/my-special-snowflake', 'SnowflakeController@index')->middleware('cacheResponse:300');\n\n// cache all these routes for 10 minutes\nRoute::group(function() {\n   Route::get('/another-special-snowflake', 'AnotherSnowflakeController@index');\n\n   Route::get('/yet-another-special-snowflake', 'YetAnotherSnowflakeController@index');\n})->middleware('cacheResponse:600');\n```\n\n### Using tags\n\nIf the [cache driver you configured supports tags](https://laravel.com/docs/5.8/cache#cache-tags), you can specify a list of tags when applying the middleware.\n\n```php\n// add a \"foo\" tag to this route with a 300 second lifetime\nRoute::get('/test1', 'SnowflakeController@index')->middleware('cacheResponse:300,foo');\n\n// add a \"bar\" tag to this route\nRoute::get('/test2', 'SnowflakeController@index')->middleware('cacheResponse:bar');\n\n// add both \"foo\" and \"bar\" tags to these routes\nRoute::group(function() {\n   Route::get('/test3', 'AnotherSnowflakeController@index');\n\n   Route::get('/test4', 'YetAnotherSnowflakeController@index');\n})->middleware('cacheResponse:foo,bar');\n```\n\n#### Clearing tagged content\n\nYou can clear responses which are assigned a tag or list of tags. For example, this statement would remove the `'/test3'` and `'/test4'` routes above:\n\n```php\nResponseCache::clear(['foo', 'bar']);\n```\n\nIn contrast, this statement would remove only the `'/test2'` route:\n\n```php\nResponseCache::clear(['bar']);\n```\n\nNote that this uses [Laravel's built in cache tags](https://laravel.com/docs/master/cache#cache-tags) functionality, meaning\nroutes can also be cleared in the usual way:\n\n```php\nCache::tags('special')->flush();\n```\n\n### Events\n\nThere are several events you can use to monitor and debug response caching in your application.\n\n#### ResponseCacheHit\n\n`Spatie\\ResponseCache\\Events\\ResponseCacheHit`\n\nThis event is fired when a request passes through the `ResponseCache` middleware and a cached response was found and returned.\n\n#### CacheMissed\n\n`Spatie\\ResponseCache\\Events\\CacheMissed`\n\nThis event is fired when a request passes through the `ResponseCache` middleware but no cached response was found or returned.\n\n#### ClearingResponseCache and ClearedResponseCache\n\n`Spatie\\ResponseCache\\Events\\ClearingResponseCache`\n\n`Spatie\\ResponseCache\\Events\\ClearedResponseCache`\n\nThese events are fired respectively when the `responsecache:clear` is started and finished.\n\n### Creating a Replacer\n\nTo replace cached content by dynamic content, you can create a replacer.\nBy default we add a `CsrfTokenReplacer` in the config file.\n\nYou can create your own replacers by implementing the `Spatie\\ResponseCache\\Replacers\\Replacer` interface. Let's take a look at the interface:\n\n```php\ninterface Replacer\n{\n    /*\n     * Prepare the initial response before it gets cached.\n     *\n     * For example: replace a generated csrf_token by '<csrf-token-here>' that you can\n     * replace with its dynamic counterpart when the cached response is returned.\n     */\n    public function prepareResponseToCache(Response $response): void;\n\n    /*\n     * Replace any data you want in the cached response before it gets\n     * sent to the browser.\n     *\n     * For example: replace '<csrf-token-here>' by a call to csrf_token()\n     */\n    public function replaceInCachedResponse(Response $response): void;\n}\n```\n\nAfterwards you can define your replacer in the `responsecache.php` config file:\n\n```\n/*\n * Here you may define replacers that dynamically replace content from the response.\n * Each replacer must implement the Replacer interface.\n */\n'replacers' => [\n    \\Spatie\\ResponseCache\\Replacers\\CsrfTokenReplacer::class,\n],\n```\n\n### Customizing the serializer\n\nA serializer is responsible from serializing a response so it can be stored in the cache. It is also responsible for rebuilding the response from the cache.\n\nThe default serializer `Spatie\\ResponseCache\\Serializer\\DefaultSerializer` will just work in most cases.\n\nIf you have some special serialization needs you can specify a custom serializer in the `serializer` key of the config file. Any class that implements `Spatie\\ResponseCache\\Serializers\\Serializer` can be used. This is how that interface looks like:\n\n```php\nnamespace Spatie\\ResponseCache\\Serializers;\n\nuse Symfony\\Component\\HttpFoundation\\Response;\n\ninterface Serializer\n{\n    public function serialize(Response $response): string;\n\n    public function unserialize(string $serializedResponse): Response;\n}\n```\n## Testing\n\nYou can run the tests with:\n``` bash\ncomposer test\n```\n\n## Alternatives\n\n- [Barry Vd. Heuvel](https://twitter.com/barryvdh) made [a package that caches responses by leveraging HttpCache](https://github.com/barryvdh/laravel-httpcache).\n- [Joseph Silber](https://twitter.com/joseph_silber) created [Laravel Page Cache](https://github.com/JosephSilber/page-cache) that can write it's cache to disk and let Nginx read them, so PHP doesn't even have to start up anymore.\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.\n\n## Contributing\n\nPlease see [CONTRIBUTING](https://github.com/spatie/.github/blob/main/CONTRIBUTING.md) for details.\n\n## Security\n\nIf you've found a bug regarding security please mail [security@spatie.be](mailto:security@spatie.be) instead of using the issue tracker.\n\n## Credits\n\n- [Freek Van der Herten](https://github.com/freekmurze)\n- [All Contributors](../../contributors)\n\nAnd a special thanks to [Caneco](https://twitter.com/caneco) for the logo ✨\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 0.990234375,
          "content": "# Upgrading\n\nBecause there are many breaking changes an upgrade is not that easy. There are many edge cases this guide does not cover. We accept PRs to improve this guide.\n\n## 6.0.0\n\nIf you're using the default settings you can upgrade without any problems.\n\n- By default the `CsrfTokenReplacer` will be applied before caching the request. For most users, this will be harmless\n- The `flush` method has been removed, use `clear` instead\n- The `Flush` command has been removed. Use `ClearCommand` instead\n\n\n## 5.0.0\n\nAs of Laravel 5.8 defining cache time in seconds is supported. All mentions of response cache time should be changed from minutes to seconds:\n\n- If you've published to config file, change `cache_lifetime_in_minutes` to `cache_lifetime_in_seconds`\n- If you're using the `cacheResponse` middleware, change the optional time parameter to seconds (value * 60)\n- If you're extending `CacheResponse`, `ResponseCacheRepository`, `BaseCacheProfile` or `CacheResponse` you should check the relevant methods\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.81640625,
          "content": "{\n    \"name\": \"spatie/laravel-responsecache\",\n    \"description\": \"Speed up a Laravel application by caching the entire response\",\n    \"keywords\": [\n        \"spatie\",\n        \"laravel-responsecache\",\n        \"laravel\",\n        \"cache\",\n        \"response\",\n        \"performance\"\n    ],\n    \"homepage\": \"https://github.com/spatie/laravel-responsecache\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Freek Van der Herten\",\n            \"email\": \"freek@spatie.be\",\n            \"homepage\": \"https://spatie.be\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^8.2\",\n        \"illuminate/cache\": \"^10.0|^11.0\",\n        \"illuminate/container\": \"^10.0|^11.0\",\n        \"illuminate/console\": \"^10.0|^11.0\",\n        \"illuminate/http\": \"^10.0|^11.0\",\n        \"illuminate/support\": \"^10.0|^11.0\",\n        \"nesbot/carbon\": \"^2.63|^3.0\",\n        \"spatie/laravel-package-tools\": \"^1.9\"\n    },\n    \"require-dev\": {\n        \"laravel/framework\": \"^10.0|^11.0\",\n        \"mockery/mockery\": \"^1.4\",\n        \"orchestra/testbench\": \"^8.0|^9.0\",\n        \"pestphp/pest\": \"^2.22\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Spatie\\\\ResponseCache\\\\\": \"src\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Spatie\\\\ResponseCache\\\\Test\\\\\": \"tests\"\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/pest\"\n    },\n    \"config\": {\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp/pest-plugin\": true\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Spatie\\\\ResponseCache\\\\ResponseCacheServiceProvider\"\n            ],\n            \"aliases\": {\n                \"ResponseCache\": \"Spatie\\\\ResponseCache\\\\Facades\\\\ResponseCache\"\n            }\n        }\n    },\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.xml.dist",
          "type": "blob",
          "size": 0.837890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.5/phpunit.xsd\" backupGlobals=\"false\" bootstrap=\"vendor/autoload.php\" colors=\"true\" processIsolation=\"false\" stopOnFailure=\"false\" executionOrder=\"random\" failOnWarning=\"true\" failOnRisky=\"true\" failOnEmptyTestSuite=\"true\" beStrictAboutOutputDuringTests=\"true\" cacheDirectory=\".phpunit.cache\" backupStaticProperties=\"false\">\n  <testsuites>\n    <testsuite name=\"VendorName Test Suite\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n  <logging>\n    <junit outputFile=\"build/report.junit.xml\"/>\n  </logging>\n  <php>\n    <env name=\"APP_DEBUG\" value=\"true\"/>\n  </php>\n  <source>\n    <include>\n      <directory suffix=\".php\">./src</directory>\n    </include>\n  </source>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}