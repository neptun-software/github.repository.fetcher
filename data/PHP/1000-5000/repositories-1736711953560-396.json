{
  "metadata": {
    "timestamp": 1736711953560,
    "page": 396,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PHPGangsta/GoogleAuthenticator",
      "stars": 2270,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": "# PHPStorm\n.idea\n\n# Composer\ncomposer.lock\nvendor"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1806640625,
          "content": "language: php\n\nphp:\n  - 5.5\n  - 5.6\n\ninstall:\n  - export PATH=\"$HOME/.composer/vendor/bin:$PATH\"\n  - composer install\n\nscript: phpunit --coverage-text --configuration tests/phpunit.xml\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.2626953125,
          "content": "Copyright (c) 2012, Michael Kliewe All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PHPGangsta",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.7509765625,
          "content": "Google Authenticator PHP class\n==============================\n\n* Copyright (c) 2012-2016, [http://www.phpgangsta.de](http://www.phpgangsta.de)\n* Author: Michael Kliewe, [@PHPGangsta](http://twitter.com/PHPGangsta) and [contributors](https://github.com/PHPGangsta/GoogleAuthenticator/graphs/contributors)\n* Licensed under the BSD License.\n\n[![Build Status](https://travis-ci.org/PHPGangsta/GoogleAuthenticator.png?branch=master)](https://travis-ci.org/PHPGangsta/GoogleAuthenticator)\n\nThis PHP class can be used to interact with the Google Authenticator mobile app for 2-factor-authentication. This class\ncan generate secrets, generate codes, validate codes and present a QR-Code for scanning the secret. It implements TOTP \naccording to [RFC6238](https://tools.ietf.org/html/rfc6238)\n\nFor a secure installation you have to make sure that used codes cannot be reused (replay-attack). You also need to\nlimit the number of verifications, to fight against brute-force attacks. For example you could limit the amount of\nverifications to 10 tries within 10 minutes for one IP address (or IPv6 block). It depends on your environment.\n\nUsage:\n------\n\nSee following example:\n\n```php\n<?php\nrequire_once 'PHPGangsta/GoogleAuthenticator.php';\n\n$ga = new PHPGangsta_GoogleAuthenticator();\n$secret = $ga->createSecret();\necho \"Secret is: \".$secret.\"\\n\\n\";\n\n$qrCodeUrl = $ga->getQRCodeGoogleUrl('Blog', $secret);\necho \"Google Charts URL for the QR-Code: \".$qrCodeUrl.\"\\n\\n\";\n\n$oneCode = $ga->getCode($secret);\necho \"Checking Code '$oneCode' and Secret '$secret':\\n\";\n\n$checkResult = $ga->verifyCode($secret, $oneCode, 2);    // 2 = 2*30sec clock tolerance\nif ($checkResult) {\n    echo 'OK';\n} else {\n    echo 'FAILED';\n}\n```\nRunning the script provides the following output:\n```\nSecret is: OQB6ZZGYHCPSX4AK\n\nGoogle Charts URL for the QR-Code: https://www.google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/infoATphpgangsta.de%3Fsecret%3DOQB6ZZGYHCPSX4AK\n\nChecking Code '848634' and Secret 'OQB6ZZGYHCPSX4AK':\nOK\n```\n\nInstallation:\n-------------\n\n- Use [Composer](https://getcomposer.org/doc/01-basic-usage.md) to\n  install the package\n\n- From project root directory execute following\n\n```composer install```\n\n- [Composer](https://getcomposer.org/doc/01-basic-usage.md) will take care of autoloading\n  the library. Just include the following at the top of your file\n\n  `require_once __DIR__ . '/../vendor/autoload.php';`\n\nRun Tests:\n----------\n\n- All tests are inside `tests` folder.\n- Execute `composer install` and then run the tests from project root\n  directory\n- Run as `phpunit tests` from the project root directory\n\n\nToDo:\n-----\n- ??? What do you need?\n\nNotes:\n------\n\nIf you like this script or have some features to add: contact me, visit my blog, fork this project, send pull requests, you know how it works.\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7412109375,
          "content": "{\n    \"name\": \"phpgangsta/googleauthenticator\",\n    \"description\": \"Google Authenticator 2-factor authentication\",\n    \"version\": \"1.0.0\",\n    \"type\": \"library\",\n    \"keywords\": [\"GoogleAuthenticator\", \"TOTP\", \"rfc6238\"],\n    \"license\": \"BSD-4-Clause\",\n    \"authors\": [\n        {\n            \"name\": \"Michael Kliewe\",\n            \"email\": \"info@phpgangsta.de\",\n            \"homepage\": \"http://www.phpgangsta.de/\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"support\": {\n        \"source\": \"https://github.com/PHPGangsta/GoogleAuthenticator\",\n        \"issues\": \"https://github.com/PHPGangsta/GoogleAuthenticator/issues\"\n    },\n    \"require\": {\n        \"php\": \">=5.3\"\n    },\n\t\"autoload\": {\n\t\t\"classmap\": [\"PHPGangsta/GoogleAuthenticator.php\"]\n\t}\n}\n\n\n\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}