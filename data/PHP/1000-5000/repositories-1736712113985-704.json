{
  "metadata": {
    "timestamp": 1736712113985,
    "page": 704,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zoujingli/WeChatDeveloper",
      "stars": 1534,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0849609375,
          "content": "/.git\n/.idea\n/.DS_Store\n/vendor\n/Cache\n/Test/cert\n/nbproject\n/composer.lock\n/_test/cert"
        },
        {
          "name": "AliPay",
          "type": "tree",
          "content": null
        },
        {
          "name": "We.php",
          "type": "blob",
          "size": 7.205078125,
          "content": "<?php\n\n// +----------------------------------------------------------------------\n// | WeChatDeveloper\n// +----------------------------------------------------------------------\n// | 版权所有 2014~2024 ThinkAdmin [ thinkadmin.top ]\n// +----------------------------------------------------------------------\n// | 官方网站: https://thinkadmin.top\n// +----------------------------------------------------------------------\n// | 开源协议 ( https://mit-license.org )\n// | 免责声明 ( https://thinkadmin.top/disclaimer )\n// +----------------------------------------------------------------------\n// | gitee 代码仓库：https://gitee.com/zoujingli/WeChatDeveloper\n// | github 代码仓库：https://github.com/zoujingli/WeChatDeveloper\n// +----------------------------------------------------------------------\n\nuse WeChat\\Contracts\\DataArray;\nuse WeChat\\Exceptions\\InvalidInstanceException;\n\n/**\n * 加载缓存器\n *\n * Class We\n * @library WeChatDeveloper\n * @author Anyon<zoujingli@qq.com>\n * @date 2018/05/24 13:23\n *\n * ----- AliPay ----\n * @method \\AliPay\\App AliPayApp($options) static 支付宝App支付网关\n * @method \\AliPay\\Bill AliPayBill($options) static 支付宝电子面单下载\n * @method \\AliPay\\Pos AliPayPos($options) static 支付宝刷卡支付\n * @method \\AliPay\\Scan AliPayScan($options) static 支付宝扫码支付\n * @method \\AliPay\\Trade AliPayTrade($options) static 支付宝标准接口\n * @method \\AliPay\\Transfer AliPayTransfer($options) static 支付宝转账到账户\n * @method \\AliPay\\Wap AliPayWap($options) static 支付宝手机网站支付\n * @method \\AliPay\\Web AliPayWeb($options) static 支付宝网站支付\n *\n * ----- WeChat -----\n * @method \\WeChat\\Card WeChatCard($options = []) static 微信卡券管理\n * @method \\WeChat\\Custom WeChatCustom($options = []) static 微信客服消息\n * @method \\WeChat\\Limit WeChatLimit($options = []) static 接口调用频次限制\n * @method \\WeChat\\Media WeChatMedia($options = []) static 微信素材管理\n * @method \\WeChat\\Menu WeChatMenu($options = []) static 微信菜单管理\n * @method \\WeChat\\Oauth WeChatOauth($options = []) static 微信网页授权\n * @method \\WeChat\\Pay WeChatPay($options = []) static 微信支付商户\n * @method \\WeChat\\Product WeChatProduct($options = []) static 微信商店管理\n * @method \\WeChat\\Qrcode WeChatQrcode($options = []) static 微信二维码管理\n * @method \\WeChat\\Receive WeChatReceive($options = [], $showEchoStr = true) static 微信推送管理\n * @method \\WeChat\\Scan WeChatScan($options = []) static 微信扫一扫接入管理\n * @method \\WeChat\\Script WeChatScript($options = []) static 微信前端支持\n * @method \\WeChat\\Shake WeChatShake($options = []) static 微信揺一揺周边\n * @method \\WeChat\\Tags WeChatTags($options = []) static 微信用户标签管理\n * @method \\WeChat\\Template WeChatTemplate($options = []) static 微信模板消息\n * @method \\WeChat\\User WeChatUser($options = []) static 微信粉丝管理\n * @method \\WeChat\\Wifi WeChatWifi($options = []) static 微信门店WIFI管理\n * @method \\WeChat\\Draft WeChatDraft($options = []) static 微信草稿箱\n * @method \\WeChat\\Freepublish WeChatFreepublish($options = []) static 微信发布能力\n *\n * ----- WeMini -----\n * @method \\WeMini\\Crypt WeMiniCrypt($options = []) static 小程序数据加密处理\n * @method \\WeMini\\Delivery WeMiniDelivery($options = []) static 小程序即时配送\n * @method \\WeMini\\Shipping WeMiniShipping($options = []) satic 小程序发货信息\n * @method \\WeMini\\Guide WeMiniGuide($options = []) static 小程序导购助手\n * @method \\WeMini\\Image WeMiniImage($options = []) static 小程序图像处理\n * @method \\WeMini\\Live WeMiniLive($options = []) static 小程序直播接口\n * @method \\WeMini\\Logistics WeMiniLogistics($options = []) static 小程序物流助手\n * @method \\WeMini\\Message WeMiniMessage($options = []) static 小程序动态消息\n * @method \\WeMini\\Newtmpl WeMiniNewtmpl($options = []) static 小程序订阅消息\n * @method \\WeMini\\Ocr WeMiniOcr($options = []) static 小程序ORC服务\n * @method \\WeMini\\Operation WeMiniOperation($options = []) static 小程序运维中心\n * @method \\WeMini\\Plugs WeMiniPlugs($options = []) static 小程序插件管理\n * @method \\WeMini\\Poi WeMiniPoi($options = []) static 小程序地址管理\n * @method \\WeMini\\Qrcode WeMiniQrcode($options = []) static 小程序二维码管理\n * @method \\WeMini\\Scheme WeMiniScheme($options = []) static 小程序 URL-Scheme\n * @method \\WeMini\\Search WeMiniSearch($options = []) static 小程序搜索\n * @method \\WeMini\\Security WeMiniSecurity($options = []) static 小程序内容安全\n * @method \\WeMini\\Soter WeMiniSoter($options = []) static 小程序生物认证\n * @method \\WeMini\\Template WeMiniTemplate($options = []) static 小程序模板消息支持\n * @method \\WeMini\\Total WeMiniTotal($options = []) static 小程序数据接口\n *\n * ----- WePay -----\n * @method \\WePay\\Bill WePayBill($options = []) static 微信商户账单及评论\n * @method \\WePay\\Order WePayOrder($options = []) static 微信商户订单\n * @method \\WePay\\Coupon WePayCoupon($options = []) static 微信商户代金券\n * @method \\WePay\\Custom WePayCustom($options = []) static 微信商户海关\n * @method \\WePay\\Refund WePayRefund($options = []) static 微信商户退款\n * @method \\WePay\\Redpack WePayRedpack($options = []) static 微信红包支持\n * @method \\WePay\\Transfers WePayTransfers($options = []) static 微信商户打款到零钱\n * @method \\WePay\\TransfersBank WePayTransfersBank($options = []) static 微信商户打款到银行卡\n * @method \\WePay\\ProfitSharing WePayProfitSharing($options = []) static 微信分账\n */\nclass We\n{\n    /**\n     * 定义当前版本\n     * @var string\n     */\n    const VERSION = '1.2.54';\n\n    /**\n     * 静态配置\n     * @var DataArray\n     */\n    private static $config;\n\n    /**\n     * 设置及获取参数\n     * @param array $option\n     * @return array\n     */\n    public static function config($option = null)\n    {\n        if (is_array($option)) {\n            self::$config = new DataArray($option);\n        }\n        if (self::$config instanceof DataArray) {\n            return self::$config->get();\n        }\n        return [];\n    }\n\n    /**\n     * 静态魔术加载方法\n     * @param string $name 静态类名\n     * @param array $arguments 参数集合\n     * @return mixed\n     * @throws InvalidInstanceException\n     */\n    public static function __callStatic($name, $arguments)\n    {\n        if (substr($name, 0, 6) === 'WeChat') {\n            $class = 'WeChat\\\\' . substr($name, 6);\n        } elseif (substr($name, 0, 6) === 'WeMini') {\n            $class = 'WeMini\\\\' . substr($name, 6);\n        } elseif (substr($name, 0, 6) === 'AliPay') {\n            $class = 'AliPay\\\\' . substr($name, 6);\n        } elseif (substr($name, 0, 7) === 'WePayV3') {\n            $class = 'WePayV3\\\\' . substr($name, 7);\n        } elseif (substr($name, 0, 5) === 'WePay') {\n            $class = 'WePay\\\\' . substr($name, 5);\n        }\n        if (!empty($class) && class_exists($class)) {\n            $option = array_shift($arguments);\n            $config = is_array($option) ? $option : self::$config->get();\n            return new $class($config);\n        }\n        throw new InvalidInstanceException(\"class {$name} not found\");\n    }\n\n}\n"
        },
        {
          "name": "WeChat",
          "type": "tree",
          "content": null
        },
        {
          "name": "WeMini",
          "type": "tree",
          "content": null
        },
        {
          "name": "WePay",
          "type": "tree",
          "content": null
        },
        {
          "name": "WePayV3",
          "type": "tree",
          "content": null
        },
        {
          "name": "_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.880859375,
          "content": "{\n  \"type\": \"library\",\n  \"name\": \"zoujingli/wechat-developer\",\n  \"homepage\": \"https://thinkadmin.top\",\n  \"description\": \"WeChat and Alipay Platform Development\",\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Anyon\",\n      \"email\": \"zoujingli@qq.com\",\n      \"homepage\": \"https://thinkadmin.top\"\n    }\n  ],\n  \"keywords\": [\n    \"AliPay\",\n    \"WeMini\",\n    \"WeChat\",\n    \"WeChatPay\",\n    \"WeChatDeveloper\"\n  ],\n  \"require\": {\n    \"php\": \">=5.4\",\n    \"ext-xml\": \"*\",\n    \"ext-json\": \"*\",\n    \"ext-curl\": \"*\",\n    \"ext-bcmath\": \"*\",\n    \"ext-libxml\": \"*\",\n    \"ext-openssl\": \"*\",\n    \"ext-mbstring\": \"*\",\n    \"ext-simplexml\": \"*\"\n  },\n  \"autoload\": {\n    \"files\": [\n      \"helper.php\"\n    ],\n    \"classmap\": [\n      \"We.php\"\n    ],\n    \"psr-4\": {\n      \"WePay\\\\\": \"WePay\",\n      \"WeChat\\\\\": \"WeChat\",\n      \"WeMini\\\\\": \"WeMini\",\n      \"AliPay\\\\\": \"AliPay\",\n      \"WePayV3\\\\\": \"WePayV3\"\n    }\n  }\n}\n"
        },
        {
          "name": "helper.php",
          "type": "blob",
          "size": 0.625,
          "content": "<?php\n\nif (!function_exists('array_column')) {\n    /**\n     * PHP 版本兼容函数\n     * @param $input\n     * @param $columnKey\n     * @param $indexKey\n     * @return array\n     */\n    function array_column($input, $columnKey, $indexKey = null)\n    {\n        $result = array();\n        foreach ($input as $row) {\n            if (isset($row[$columnKey])) {\n                if ($indexKey !== null && isset($row[$indexKey])) {\n                    $result[$row[$indexKey]] = $row[$columnKey];\n                } else {\n                    $result[] = $row[$columnKey];\n                }\n            }\n        }\n        return $result;\n    }\n}"
        },
        {
          "name": "include.php",
          "type": "blob",
          "size": 1.3046875,
          "content": "<?php\n\n// +----------------------------------------------------------------------\n// | WeChatDeveloper\n// +----------------------------------------------------------------------\n// | 版权所有 2014~2024 ThinkAdmin [ thinkadmin.top ]\n// +----------------------------------------------------------------------\n// | 官方网站: https://thinkadmin.top\n// +----------------------------------------------------------------------\n// | 开源协议 ( https://mit-license.org )\n// | 免责声明 ( https://thinkadmin.top/disclaimer )\n// +----------------------------------------------------------------------\n// | gitee 代码仓库：https://gitee.com/zoujingli/WeChatDeveloper\n// | github 代码仓库：https://github.com/zoujingli/WeChatDeveloper\n// +----------------------------------------------------------------------\n\ninclude_once __DIR__ . '/helper.php';\n\nspl_autoload_register(function ($classname) {\n    $pathname = __DIR__ . DIRECTORY_SEPARATOR;\n    $filename = str_replace('\\\\', DIRECTORY_SEPARATOR, $classname) . '.php';\n    if (file_exists($pathname . $filename)) {\n        foreach (['AliPay', 'WeChat', 'WeMini', 'WePay', 'We'] as $prefix) {\n            if (stripos($classname, $prefix) === 0) {\n                include $pathname . $filename;\n                return true;\n            }\n        }\n    }\n    return false;\n});"
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License\n \nCopyright (c) 2014-2023 Anyon <zoujingli@qq.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 14.6123046875,
          "content": "# WeChatDeveloper for PHP\n\n[![Latest Stable Version](https://poser.pugx.org/zoujingli/wechat-developer/v/stable)](https://packagist.org/packages/zoujingli/wechat-developer)\n[![Total Downloads](https://poser.pugx.org/zoujingli/wechat-developer/downloads)](https://packagist.org/packages/zoujingli/wechat-developer)\n[![Monthly Downloads](https://poser.pugx.org/zoujingli/wechat-developer/d/monthly)](https://packagist.org/packages/zoujingli/wechat-developer)\n[![Daily Downloads](https://poser.pugx.org/zoujingli/wechat-developer/d/daily)](https://packagist.org/packages/zoujingli/wechat-developer)\n[![PHP Version Require](http://poser.pugx.org/zoujingli/wechat-developer/require/php)](https://packagist.org/packages/wechat-developer)\n[![License](https://poser.pugx.org/zoujingli/wechat-developer/license)](https://packagist.org/packages/zoujingli/wechat-developer)\n\n* WeChatDeveloper 是基于 [wechat-php-sdk](https://github.com/zoujingli/wechat-php-sdk) 重构，优化并完善；\n* 运行最底要求 PHP 版本 5.4 , 建议在 PHP7 上运行以获取最佳性能；\n* 目前 WeChatDeveloper 针对 access_token 失效增加了自动刷新机制；\n* 微信的部分接口需要缓存数据在本地，因此配置目录并需要对目录有写权限；\n* 我们鼓励大家使用 composer 来管理您的第三方库，方便后期更新操作；\n* WeChatDeveloper 已历经数个线上项目考验，欢迎 fork 或 star 此项目。\n* 微信商户已经支持 v2 和 v3 接口，未加入的接口可以使用通用方式调用。\n\n功能描述\n----\n\n* 微信小程序，服务端接口支持\n* 微信认证服务号，服务端接口支持\n* 微信支付（账单、卡券、红包、退款、转账、App支付、JSAPI支付、Web支付、扫码支付等）\n* 支付宝支付（账单、转账、App支付、刷卡支付、扫码支付、Web支付、Wap支付等）\n\n技术帮助\n----\nPHP开发技术交流（QQ群 513350915）\n\n[![PHP微信开发群 (SDK)](http://pub.idqqimg.com/wpa/images/group.png)](http://shang.qq.com/wpa/qunwpa?idkey=ae25cf789dafbef62e50a980ffc31242f150bc61a61164458216dd98c411832a)\n\nWeChatDeveloper 是基于官方接口封装，在做微信开发前，必需先阅读微信官方文档。\n\n* 微信官方文档：https://mp.weixin.qq.com/wiki\n* 商户支付文档：https://pay.weixin.qq.com/wiki/doc/api/index.html\n\n针对 WeChatDeveloper 也有一准备了帮助资料可供参考。\n\n* ThinkAdmin：https://github.com/zoujingli/ThinkAdmin\n* WeChatDeveloper：https://www.kancloud.cn/zoujingli/wechat-developer\n\n代码仓库\n----\nWeChatDeveloper 为开源项目，允许把它用于任何地方，不受任何约束，欢迎 fork 项目。\n\n我们的代码仓库已移至 **Github**，而 **Gitee** 和 **Gitcode** 则仅作为国内镜像仓库，方便广大开发者获取和使用。若想提交 **PR** 或 **ISSUE** 请在 [WeChatDeveloper](https://github.com/zoujingli/WeChatDeveloper) 仓库进行操作，如果在其他仓库操作或提交问题将无法处理！\n\n* Gitee 仓库地址：https://gitee.com/zoujingli/WeChatDeveloper\n* GitHub 仓库地址：https://github.com/zoujingli/WeChatDeveloper\n* GitCode 仓库地址：https://gitcode.com/ThinkAdmin/WeChatDeveloper\n\n文件说明（后续会根据官方文档增加文件）\n----\n\n| 文件名               | 类名                  | 描述           | 类型    | 加载 ①                      |\n|-------------------|---------------------|--------------|-------|---------------------------|\n| App.php           | AliPay\\App          | 支付宝App支付     | 支付宝支付 | \\We::AliPayApp()          |\n| Bill.php          | AliPay\\Bill         | 支付宝账单下载      | 支付宝支付 | \\We::AliPayBill()         |\n| Pos.php           | AliPay\\Pos          | 支付宝刷卡支付      | 支付宝支付 | \\We::AliPayPos()          |\n| Scan.php          | AliPay\\Scan         | 支付宝扫码支付      | 支付宝支付 | \\We::AliPayScan()         |\n| Transfer.php      | AliPay\\Transfer     | 支付宝转账        | 支付宝支付 | \\We::AliPayTransfer()     |\n| Wap.php           | AliPay\\Wap          | 支付宝Wap支付     | 支付宝支付 | \\We::AliPayWap()          |\n| Web.php           | AliPay\\Web          | 支付宝Web支付     | 支付宝支付 | \\We::AliPayWeb()          |\n| Card.php          | WeChat\\Card         | 微信卡券接口支持     | 认证服务号 | \\We::WeChatCard()         |\n| Custom.php        | WeChat\\Custom       | 微信客服消息接口支持   | 认证服务号 | \\We::WeChatCustom()       |\n| Media.php         | WeChat\\Media        | 微信媒体素材接口支持   | 认证服务号 | \\We::WeChatMedia()        |\n| Oauth.php         | WeChat\\Oauth        | 微信网页授权消息类接口  | 认证服务号 | \\We::WeChatOauth()        |\n| Pay.php           | WeChat\\Pay          | 微信支付类接口      | 认证服务号 | \\We::WeChatPay()          |\n| Product.php       | WeChat\\Product      | 微信商店类接口      | 认证服务号 | \\We::WeChatProduct()      |\n| Qrcode.php        | WeChat\\Qrcode       | 微信二维码接口支持    | 认证服务号 | \\We::WeChatQrcode()       |\n| Receive.php       | WeChat\\Receive      | 微信推送事件消息处理支持 | 认证服务号 | \\We::WeChatReceive()      |\n| Scan.php          | WeChat\\Scan         | 微信扫一扫接口支持    | 认证服务号 | \\We::WeChatScan()         |\n| Script.php        | WeChat\\Script       | 微信前端JSSDK支持  | 认证服务号 | \\We::WeChatScript()       |\n| Shake.php         | WeChat\\Shake        | 微信蓝牙设备揺一揺接口  | 认证服务号 | \\We::WeChatShake()        |\n| Tags.php          | WeChat\\Tags         | 微信粉丝标签接口支持   | 认证服务号 | \\We::WeChatTags()         |\n| Template.php      | WeChat\\Template     | 微信模板消息接口支持   | 认证服务号 | \\We::WeChatTemplate()     |\n| User.php          | WeChat\\User         | 微信粉丝管理接口支持   | 认证服务号 | \\We::WeChatCard()         |\n| Wifi.php          | WeChat\\Wifi         | 微信门店WIFI管理支持 | 认证服务号 | \\We::WeChatWifi()         |\n| Draft.php         | WeChat\\Draft        | 微信草稿箱        | 认证服务号 | \\We::WeChatDraft()        |\n| Freepublish.php   | WeChat\\Freepublish  | 微信发布能力       | 认证服务号 | \\We::WeChatFreepublish()  |\n| Bill.php          | WePay\\Bill          | 微信商户账单及评论    | 微信支付  | \\We::WePayBill()          |\n| Coupon.php        | WePay\\Coupon        | 微信商户代金券      | 微信支付  | \\We::WePayCoupon()        |\n| Order.php         | WePay\\Order         | 微信商户订单       | 微信支付  | \\We::WePayOrder()         |\n| Redpack.php       | WePay\\Redpack       | 微信红包支持       | 微信支付  | \\We::WePayRedpack()       |\n| Refund.php        | WePay\\Refund        | 微信商户退款       | 微信支付  | \\We::WePayRefund()        |\n| Transfers.php     | WePay\\Transfers     | 微信商户打款到零钱    | 微信支付  | \\We::WePayTransfers()     |\n| TransfersBank.php | WePay\\TransfersBank | 微信商户打款到银行卡   | 微信支付  | \\We::WePayTransfersBank() |\n| Crypt.php         | WeMini\\Crypt        | 微信小程序数据加密处理  | 微信小程序 | \\We::WeMiniCrypt()        |\n| Plugs.php         | WeMini\\Plugs        | 微信小程序插件管理    | 微信小程序 | \\We::WeMiniPlugs()        |\n| Poi.php           | WeMini\\Poi          | 微信小程序地址管理    | 微信小程序 | \\We::WeMiniPoi()          |\n| Qrcode.php        | WeMini\\Qrcode       | 微信小程序二维码管理   | 微信小程序 | \\We::WeMiniCrypt()        |\n| Template.php      | WeMini\\Template     | 微信小程序模板消息支持  | 微信小程序 | \\We::WeMiniTemplate()     |\n| Total.php         | WeMini\\Total        | 微信小程序数据接口    | 微信小程序 | \\We::WeMiniTotal()        |\n\n安装使用\n----\n1.1 通过 Composer 来管理安装\n\n```shell\n# 首次安装 线上版本（稳定）\ncomposer require zoujingli/wechat-developer\n\n# 首次安装 开发版本（开发）\ncomposer require zoujingli/wechat-developer dev-master\n\n# 更新 WeChatDeveloper\ncomposer update zoujingli/wechat-developer\n```\n\n1.2 如果不使用 Composer， 可以下载 WeChatDeveloper 并解压到项目中\n\n```php\n# 在项目中加载初始化文件\ninclude \"您的目录/WeChatDeveloper/include.php\";\n```\n\n2.1 接口实例所需参数\n\n```php\n// =====================================================\n// 配置缓存处理函数 ( 适配其他环境 )\n// -----------------------------------------------------\n// 数据缓存 (set|get|del) 操作可以将缓存写到任意位置或Redis\n// 文件缓存 (put) 只能写在本地服务器，还需要返回可读的文件路径\n// 未配置自定义缓存处理机制时，默认在 cache_path 写入文件缓存\n// // =====================================================\n// \\WeChat\\Contracts\\Tools::$cache_callable = [\n//    'set' => function ($name, $value, $expired = 360) {\n//        var_dump(func_get_args());\n//         return $value;\n//    },\n//    'get' => function ($name) {\n//        var_dump(func_get_args());\n//        return $value;\n//    },\n//    'del' => function ($name) {\n//        var_dump(func_get_args());\n//        return true;\n//    },\n//    'put' => function ($name) {\n//        var_dump(func_get_args());\n//        return $filePath;\n//    },\n// ];\n\n$config = [\n    'token'          => 'test',\n    'appid'          => 'wx60a43dd8161666d4',\n    'appsecret'      => '71308e96a204296c57d7cd4b21b883e8',\n    'encodingaeskey' => 'BJIUzE0gqlWy0GxfPp4J1oPTBmOrNDIGPNav1YFH5Z5',\n    // 配置商户支付参数（可选，在使用支付功能时需要）\n    'mch_id'         => \"1235704602\",\n    'mch_key'        => 'IKI4kpHjU94ji3oqre5zYaQMwLHuZPmj',\n    // 配置商户支付双向证书目录（可选，在使用退款|打款|红包时需要）\n    'ssl_key'        => '',\n    'ssl_cer'        => '',\n    // 缓存目录配置（可选，需拥有读写权限）\n    'cache_path'     => '',\n];\n```\n\n3.1 实例指定接口\n\n```php\ntry {\n\n    // 实例对应的接口对象\n    $user = new \\WeChat\\User($config);\n    \n    // 调用接口对象方法\n    $list = $user->getUserList();\n    \n    // 处理返回的结果\n    echo '<pre>';\n    var_export($list);\n    \n} catch (Exception $e) {\n\n    // 出错啦，处理下吧\n    echo $e->getMessage() . PHP_EOL;\n    \n}\n```\n\n微信支付\n---\n\n```php\n  // 创建接口实例\n  $wechat = new \\WeChat\\Pay($config);\n  \n  // 组装参数，可以参考官方商户文档\n  $options = [\n      'body'             => '测试商品',\n      'out_trade_no'     => time(),\n      'total_fee'        => '1',\n      'openid'           => 'o38gpszoJoC9oJYz3UHHf6bEp0Lo',\n      'trade_type'       => 'JSAPI',\n      'notify_url'       => 'http://a.com/text.html',\n      'spbill_create_ip' => '127.0.0.1',\n  ];\n    \ntry {\n\n    // 生成预支付码\n    $result = $wechat->createOrder($options);\n    \n    // 创建JSAPI参数签名\n    $options = $wechat->createParamsForJsApi($result['prepay_id']);\n    \n    // @todo 把 $options 传到前端用js发起支付就可以了\n    \n} catch (Exception $e) {\n\n    // 出错啦，处理下吧\n    echo $e->getMessage() . PHP_EOL;\n    \n}\n```\n\n* 更多功能请阅读测试代码或SDK封装源码\n\n支付宝支付\n----\n\n* 支付参数配置（可用沙箱模式）\n\n```php\n$config = [\n    // 沙箱模式\n    'debug'            => true,\n    // 签名类型 ( RSA|RSA2 )\n    'sign_type'        => 'RSA2',\n    // 应用ID\n    'appid'            => '2021000122667306',\n    // 应用私钥内容 ( 需1行填写，特别注意：这里的应用私钥通常由支付宝密钥管理工具生成 )\n    'private_key'      => 'MIIEowIBAAKCAQEAn...',\n    // 公钥模式，支付宝公钥内容 ( 需1行填写，特别注意：这里不是应用公钥而是支付宝公钥，通常是上传应用公钥换取支付宝公钥，在网页可以复制 )\n    'public_key'       => '',\n    // 证书模式，应用公钥证书路径 ( 新版资金类接口转 app_cert_sn，如文件 appCertPublicKey.crt )\n    'app_cert_path'    => __DIR__ . '/alipay/appPublicCert.crt', // 'app_cert' => '证书内容',\n    // 证书模式，支付宝根证书路径 ( 新版资金类接口转 alipay_root_cert_sn，如文件 alipayRootCert.crt )\n    'alipay_root_path' => __DIR__ . '/alipay/alipayRootCert.crt', // 'root_cert' => '证书内容',\n    // 证书模式，支付宝公钥证书路径 ( 未填写 public_key 时启用此参数，如文件 alipayPublicCert.crt )\n    'alipay_cert_path' => __DIR__ . '/alipay/alipayPublicCert.crt', // 'public_key' => '证书内容'\n    // 支付成功通知地址\n    'notify_url'       => '',\n    // 网页支付回跳地址\n    'return_url'       => '',\n];\n```\n\n* 支付宝发起PC网站支付\n\n```php\n// 参考公共参数  https://docs.open.alipay.com/203/107090/\n$config['notify_url'] = 'http://pay.thinkadmin.top/test/alipay-notify.php';\n$config['return_url'] = 'http://pay.thinkadmin.top/test/alipay-success.php';\n\ntry {\n    \n    // 实例支付对象\n    $pay = We::AliPayWeb($config);\n    // $pay = new \\AliPay\\Web($config);\n    \n    // 参考链接：https://docs.open.alipay.com/api_1/alipay.trade.page.pay\n    $result = $pay->apply([\n        'out_trade_no' => time(), // 商户订单号\n        'total_amount' => '1',    // 支付金额\n        'subject'      => '支付订单描述', // 支付订单描述\n    ]);\n    \n    echo $result; // 直接输出HTML（提交表单跳转)\n    \n} catch (Exception $e) {\n\n    // 异常处理\n    echo $e->getMessage();\n    \n}\n```\n\n* 支付宝发起手机网站支付\n\n```php\n// 参考公共参数  https://docs.open.alipay.com/203/107090/\n$config['notify_url'] = 'http://pay.thinkadmin.top/test/alipay-notify.php';\n$config['return_url'] = 'http://pay.thinkadmin.top/test/alipay-success.php';\n\ntry {\n\n    // 实例支付对象\n    $pay = We::AliPayWap($config);\n    // $pay = new \\AliPay\\Wap($config);\n\n    // 参考链接：https://docs.open.alipay.com/api_1/alipay.trade.wap.pay\n    $result = $pay->apply([\n        'out_trade_no' => time(), // 商户订单号\n        'total_amount' => '1',    // 支付金额\n        'subject'      => '支付订单描述', // 支付订单描述\n    ]);\n\n    echo $result; // 直接输出HTML（提交表单跳转)\n\n} catch (Exception $e) {\n\n    // 异常处理\n    echo $e->getMessage();\n\n}\n```\n\n* 更多功能请阅读测试代码或SDK封装源码\n\n## 版权说明\n\n**WeChatDeveloper** 遵循 **MIT** 开源协议发布，并免费提供使用。\n\n本项目包含的第三方源码和二进制文件的版权信息将另行标注，请在对应文件查看。\n\n版权所有 Copyright © 2014-2023 by ThinkAdmin (https://thinkadmin.top) All rights reserved。\n\n## 赞助打赏，请作者喝杯茶 ~\n\n![赞助](https://doc.thinkadmin.top/static/img/pay.png)\n"
        }
      ]
    }
  ]
}