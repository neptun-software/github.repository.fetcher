{
  "metadata": {
    "timestamp": 1736711864609,
    "page": 204,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "teamtnt/tntsearch",
      "stars": 3101,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.109375,
          "content": ".idea/*\n.phpintel/*\nvendor\nexamples\n.DS_Store\ncomposer.lock\ncoverage\ntests/_files/*.index\n.phpunit.result.cache\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2978515625,
          "content": "language: php\n\nphp:\n  - 7.1\n  - 7.2\n  - 7.3\n  - 7.4\n  - 8.0\n\naddons:\n  code_climate:\n    repo_token: e43f1f89afb5a2f6acfaea42a6a9ebd8d33538208fafa8636826c173b3f7ec26 \n\nscript:\n  - vendor/bin/phpunit\n\nbefore_script:\n  - composer self-update\n  - composer install\n\nafter_script:\n  - vendor/bin/test-reporter\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.296875,
          "content": "# Changelog\n\nAll Notable changes to `tntsearch` will be documented in this file.\n\nUpdates should follow the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## NEXT - YYYY-MM-DD\n\n### Added\n- Nothing\n\n### Deprecated\n- Nothing\n\n### Fixed\n- Nothing\n\n### Removed\n- Nothing\n\n### Security\n- Nothing\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.138671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@tntstudio.hr. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONDUCT.md",
          "type": "blob",
          "size": 2.099609375,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community in a direct capacity. Personal views, beliefs and values of individuals do not necessarily reflect those of the organisation or affiliated individuals and organisations.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.2.0, available at [http://contributor-covenant.org/version/1/2/0/](http://contributor-covenant.org/version/1/2/0/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.30078125,
          "content": "# Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nWe accept contributions via Pull Requests on [Github](https://github.com/teamtnt/tntsearch).\n\n\n## Pull Requests\n\n- **[PSR-2 Coding Standard](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md)** - The easiest way to apply the conventions is to install [PHP Code Sniffer](http://pear.php.net/package/PHP_CodeSniffer).\n\n- **Add tests!** - Your patch won't be accepted if it doesn't have tests.\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](http://semver.org/). Randomly breaking public APIs is not an option.\n\n- **Create feature branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n\n## Running Tests\n\n``` bash\n$ composer test\n```\n\n\n**Happy coding**!\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.1103515625,
          "content": "# The MIT License (MIT)\n\nCopyright (c) 2016 Nenad Tičarić <nticaric@gmail.com>\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n"
        },
        {
          "name": "PS4Ware.md",
          "type": "blob",
          "size": 0.2763671875,
          "content": "# PS4Ware\n\nTNTSearch is PS4Ware: it's free to use, but if it makes to production\nwe'd appreciate a PS4 game.\n\n\n### [Helm und Walter Team](https://helmundwalter.de/)\n\n![The Long Dark](https://user-images.githubusercontent.com/824840/66302347-0e8af800-e8f9-11e9-96d2-4bbf58532f34.png)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.048828125,
          "content": "[![Latest Version on Packagist][ico-version]][link-packagist]\n[![Total Downloads][ico-downloads]][link-downloads]\n[![Software License][ico-license]](LICENSE.md)\n[![Build Status](https://img.shields.io/travis/teamtnt/tntsearch/master.svg?style=flat-square)](https://travis-ci.org/teamtnt/tntsearch)\n[![Slack Status](https://img.shields.io/badge/slack-chat-E01563.svg?style=flat-square)](https://tntsearch.slack.com)\n\n![TNTSearch](https://i.imgur.com/aYKsNYv.png)\n\n# TNTSearch\n\nTNTSearch is a full-text search (FTS) engine written entirely in PHP. A simple configuration allows you to add an amazing search experience in just minutes. Features include:\n\n* Fuzzy search\n* Search as you type\n* Geo-search\n* Text classification\n* Stemming\n* Custom tokenizers\n* Bm25 ranking algorithm\n* Boolean search\n* Result highlighting\n* Dynamic index updates (no need to reindex each time)\n* Easily deployable via Packagist.org\n\nWe also created some demo pages that show tolerant retrieval with n-grams in action.\nThe package has a bunch of helper functions like Jaro-Winkler and Cosine similarity for distance calculations. It supports stemming for English, Croatian, Arabic, Italian, Russian, Portuguese and Ukrainian. If the built-in stemmers aren't enough, the engine lets you easily plugin any compatible snowball stemmer. Some forks of the package even support Chinese. And please contribute other languages!\n\nUnlike many other engines, the index can be easily updated without doing a reindex or using deltas. \n\n**View** [online demo](http://tntsearch.tntstudio.us/) &nbsp;|&nbsp; **Follow us** on\n[Twitter](https://twitter.com/tntstudiohr),\nor [Facebook](https://www.facebook.com/tntstudiohr) &nbsp;|&nbsp;\n**Visit our sponsors**:\n\n<p align=\"center\">\n  <a href=\"https://m.do.co/c/ddfc227b7d18\" target=\"_blank\">\n    <img src=\"https://images.prismic.io/www-static/49aa0a09-06d2-4bba-ad20-4bcbe56ac507_logo.png?auto=compress,format\" width=\"196.5\" height=\"32\">\n  </a>\n</p>\n\n---\n## Demo\n\n* [TV Shows Search](http://tntsearch.tntstudio.us/)\n* [PHPUnit Documentation Search](http://phpunit.tntstudio.us)\n* [City Search with n-grams](http://cities.tnt.studio/)\n\n## Tutorials\n\n* [Solving the search problem with Laravel and TNTSearch](https://tnt.studio/solving-the-search-problem-with-laravel-and-tntsearch)\n* [Searching for Users with Laravel Scout and TNTSearch](https://tnt.studio/searching-for-users-with-laravel-scout-and-tntsearch)\n\n## Premium products\n\nIf you're using TNT Search and finding it useful, take a look at our premium analytics tool:\n\n\n[<img src=\"https://i.imgur.com/ujagviB.png\" width=\"420px\" />](https://analytics.tnt.studio)\n\n## Support us on Open Collective\n\n- [TNTSearch](https://opencollective.com/tntsearch)\n\n## Installation\n\nThe easiest way to install TNTSearch is via [composer](http://getcomposer.org/):\n\n```\ncomposer require teamtnt/tntsearch\n```\n\n## Requirements\n\nBefore you proceed, make sure your server meets the following requirements:\n\n* PHP >= 7.1\n* PDO PHP Extension\n* SQLite PHP Extension\n* mbstring PHP Extension\n\n## Examples\n\n### Creating an index\n\nIn order to be able to make full text search queries, you have to create an index.\n\nUsage:\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig([\n    'driver'    => 'mysql',\n    'host'      => 'localhost',\n    'database'  => 'dbname',\n    'username'  => 'user',\n    'password'  => 'pass',\n    'storage'   => '/var/www/tntsearch/examples/',\n    'stemmer'   => \\TeamTNT\\TNTSearch\\Stemmer\\PorterStemmer::class//optional\n]);\n\n$indexer = $tnt->createIndex('name.index');\n$indexer->query('SELECT id, article FROM articles;');\n//$indexer->setLanguage('german');\n$indexer->run();\n\n```\n\nImportant: \"storage\" settings marks the folder where all of your indexes\nwill be saved so make sure to have permission to write to this folder otherwise\nyou might expect the following exception thrown:\n\n* [PDOException] SQLSTATE[HY000] [14] unable to open database file *\n\nNote: If your primary key is different than `id` set it like:\n\n```php\n$indexer->setPrimaryKey('article_id');\n```\n\n### Making the primary key searchable\n\nBy default, the primary key isn't searchable. If you want to make it searchable, simply run:\n\n\n```php\n$indexer->includePrimaryKey();\n```\n\n### Searching\n\nSearching for a phrase or keyword is trivial:\n\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig($config);\n$tnt->selectIndex(\"name.index\");\n\n$res = $tnt->search(\"This is a test search\", 12);\n\nprint_r($res); //returns an array of 12 document ids that best match your query\n\n// to display the results you need an additional query against your application database\n// SELECT * FROM articles WHERE id IN $res ORDER BY FIELD(id, $res);\n```\n\nThe ORDER BY FIELD clause is important, otherwise the database engine will not return\nthe results in the required order.\n\n### Boolean Search\n\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig($config);\n$tnt->selectIndex(\"name.index\");\n\n//this will return all documents that have romeo in it but not juliet\n$res = $tnt->searchBoolean(\"romeo -juliet\");\n\n//returns all documents that have romeo or hamlet in it\n$res = $tnt->searchBoolean(\"romeo or hamlet\");\n\n//returns all documents that have either romeo AND juliet or prince AND hamlet\n$res = $tnt->searchBoolean(\"(romeo juliet) or (prince hamlet)\");\n\n```\n\n### Fuzzy Search\n\nThe fuzziness can be tweaked by setting the following member variables:\n\n```php\npublic $fuzzy_prefix_length  = 2;\npublic $fuzzy_max_expansions = 50;\npublic $fuzzy_distance       = 2; //represents the Levenshtein distance;\n```\n\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig($config);\n$tnt->selectIndex(\"name.index\");\n$tnt->fuzziness(true);\n\n//when the fuzziness flag is set to true, the keyword juleit will return\n//documents that match the word juliet, the default Levenshtein distance is 2\n$res = $tnt->search(\"juleit\");\n\n```\n## Updating the index\n\nOnce you created an index, you don't need to reindex it each time you make some changes \nto your document collection. TNTSearch supports dynamic index updates.\n\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig($config);\n$tnt->selectIndex(\"name.index\");\n\n$index = $tnt->getIndex();\n\n//to insert a new document to the index\n$index->insert(['id' => '11', 'title' => 'new title', 'article' => 'new article']);\n\n//to update an existing document\n$index->update(11, ['id' => '11', 'title' => 'updated title', 'article' => 'updated article']);\n\n//to delete the document from index\n$index->delete(12);\n```\n\n## Custom Tokenizer\nFirst, create your own Tokenizer class. It should extend AbstractTokenizer class, define \nword split $pattern value and must implement TokenizerInterface:\n\n``` php\n\nuse TeamTNT\\TNTSearch\\Support\\AbstractTokenizer;\nuse TeamTNT\\TNTSearch\\Support\\TokenizerInterface;\n\nclass SomeTokenizer extends AbstractTokenizer implements TokenizerInterface\n{\n    static protected $pattern = '/[\\s,\\.]+/';\n\n    public function tokenize($text) {\n        return preg_split($this->getPattern(), strtolower($text), -1, PREG_SPLIT_NO_EMPTY);\n    }\n}\n```\n\nThis tokenizer will split words using spaces, commas and periods.\n\nAfter you have the tokenizer ready, you should pass it to `TNTIndexer` via `setTokenizer` method.\n\n``` php\n$someTokenizer = new SomeTokenizer;\n\n$indexer = new TNTIndexer;\n$indexer->setTokenizer($someTokenizer);\n```\n\nAnother way would be to pass the tokenizer via config:\n\n```php\nuse TeamTNT\\TNTSearch\\TNTSearch;\n\n$tnt = new TNTSearch;\n\n$tnt->loadConfig([\n    'driver'    => 'mysql',\n    'host'      => 'localhost',\n    'database'  => 'dbname',\n    'username'  => 'user',\n    'password'  => 'pass',\n    'storage'   => '/var/www/tntsearch/examples/',\n    'stemmer'   => \\TeamTNT\\TNTSearch\\Stemmer\\PorterStemmer::class//optional,\n    'tokenizer' => \\TeamTNT\\TNTSearch\\Support\\SomeTokenizer::class\n]);\n\n$indexer = $tnt->createIndex('name.index');\n$indexer->query('SELECT id, article FROM articles;');\n$indexer->run();\n\n```\n\n## Geo Search\n\n### Indexing\n\n```php\n$candyShopIndexer = new TNTGeoIndexer;\n$candyShopIndexer->loadConfig($config);\n$candyShopIndexer->createIndex('candyShops.index');\n$candyShopIndexer->query('SELECT id, longitude, latitude FROM candy_shops;');\n$candyShopIndexer->run();\n```\n### Searching\n\n```php\n$currentLocation = [\n    'longitude' => 11.576124,\n    'latitude'  => 48.137154\n];\n\n$distance = 2; //km\n\n$candyShopIndex = new TNTGeoSearch();\n$candyShopIndex->loadConfig($config);\n$candyShopIndex->selectIndex('candyShops.index');\n\n$candyShops = $candyShopIndex->findNearest($currentLocation, $distance, 10);\n```\n\n## Classification\n\n```php\nuse TeamTNT\\TNTSearch\\Classifier\\TNTClassifier;\n\n$classifier = new TNTClassifier();\n$classifier->learn(\"A great game\", \"Sports\");\n$classifier->learn(\"The election was over\", \"Not sports\");\n$classifier->learn(\"Very clean match\", \"Sports\");\n$classifier->learn(\"A clean but forgettable game\", \"Sports\");\n\n$guess = $classifier->predict(\"It was a close election\");\nvar_dump($guess['label']); //returns \"Not sports\"\n\n```\n\n### Saving the classifier\n\n```php\n$classifier->save('sports.cls');\n```\n\n### Loading the classifier\n\n```php\n$classifier = new TNTClassifier();\n$classifier->load('sports.cls');\n```\n\n## Drivers\n\n* [TNTSearch Driver for Laravel Scout](https://github.com/teamtnt/laravel-scout-tntsearch-driver)\n\n## PS4Ware\n\nYou're free to use this package, but if it makes it to your production environment, we would highly appreciate you sending us a PS4 game of your choice. This way you support us to further develop and add new features.\n\nOur address is: TNT Studio, Sv. Mateja 19, 10010 Zagreb, Croatia.\n\nWe'll publish all received games [here][link-ps4ware]\n\n[link-ps4ware]: https://github.com/teamtnt/tntsearch/blob/master/PS4Ware.md\n\n## Support [![OpenCollective](https://opencollective.com/tntsearch/backers/badge.svg)](#backers) [![OpenCollective](https://opencollective.com/tntsearch/sponsors/badge.svg)](#sponsors)\n\n<a href='https://ko-fi.com/O4O3K2R9' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://az743702.vo.msecnd.net/cdn/kofi4.png?v=0' border='0' alt='Buy Me a Coffee at ko-fi.com' /></a>\n\n### Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/tntsearch#backer)]\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/tntsearch#sponsor)]\n\n## Credits\n\n- [Nenad Tičarić][link-author]\n- [All Contributors][link-contributors]\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\n\n[ico-version]: https://img.shields.io/packagist/v/teamtnt/tntsearch.svg?style=flat-square\n[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\n[ico-downloads]: https://img.shields.io/packagist/dt/teamtnt/tntsearch.svg?style=flat-square\n\n[link-packagist]: https://packagist.org/packages/teamtnt/tntsearch\n[link-downloads]: https://packagist.org/packages/teamtnt/tntsearch\n[link-author]: https://github.com/nticaric\n[link-contributors]: ../../contributors\n\n---\nFrom Croatia with ♥ by TNT Studio ([@tntstudiohr](https://twitter.com/tntstudiohr), [blog](https://tnt.studio))\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.9609375,
          "content": "{\n    \"name\": \"teamtnt/tntsearch\",\n    \"type\": \"library\",\n    \"description\": \"A fully featured full text search engine written in PHP\",\n    \"keywords\": [\n        \"teamtnt\",\n        \"tntsearch\",\n        \"search\",\n        \"fulltext\",\n        \"geosearch\",\n        \"text classification\",\n        \"bm25\",\n        \"stemming\",\n        \"fuzzy search\"\n    ],\n    \"homepage\": \"https://github.com/teamtnt/tntsearch\",\n    \"license\": \"MIT\",\n    \"authors\": [{\n        \"name\": \"Nenad Tičarić\",\n        \"email\": \"nticaric@gmail.com\",\n        \"homepage\": \"http://www.tntstudio.us\",\n        \"role\": \"Developer\"\n    }],\n    \"require\": {\n        \"php\": \"~7.1|^8\",\n        \"ext-mbstring\": \"*\",\n        \"predis/predis\": \"^2.2\"\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"7.*|8.*|9.*\",\n        \"symfony/var-dumper\": \"^4|^5.2\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"TeamTNT\\\\TNTSearch\\\\\": \"src\"\n        },\n        \"files\": [\n            \"helper/helpers.php\"\n        ]\n    }\n}\n"
        },
        {
          "name": "helper",
          "type": "tree",
          "content": null
        },
        {
          "name": "phpunit.php",
          "type": "blob",
          "size": 0.5029296875,
          "content": "<?php\n\n/*\n|--------------------------------------------------------------------------\n| Register The Composer Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n */\n\nrequire __DIR__ . '/vendor/autoload.php';"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.892578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"phpunit.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"true\"\n>\n    <testsuites>\n        <testsuite name=\"TNTSearch Test Suite\">\n            <directory>./tests/</directory>\n        </testsuite>\n    </testsuites>\n<!--     <filter>\n        <whitelist>\n            <directory suffix=\".php\">./src/</directory>\n        </whitelist>\n    </filter>\n\n    <logging>\n        <log type=\"coverage-html\" target=\"./coverage\" charset=\"UTF-8\"\n            yui=\"true\" highlight=\"true\"\n            lowUpperBound=\"50\" highLowerBound=\"80\"/>\n        <log type=\"testdox-html\" target=\"./coverage/testdox.html\" />\n    </logging> -->\n</phpunit>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}