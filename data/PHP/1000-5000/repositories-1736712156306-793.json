{
  "metadata": {
    "timestamp": 1736712156306,
    "page": 793,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stefangabos/world_countries",
      "stars": 1408,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.388671875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# don't count these when determining main language used in repo\ndata/* linguist-vendored\nflags/* linguist-vendored\n\n# Don't include these files when users download a release\ndocs/ export-ignore\n.gitattributes export-ignore\n.gitignore export-ignore\n.npmignore export-ignore\npackage.json export-ignore\npackage-lock.json export-ignore"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "cache/*\nindex.php\ntodo.txt\n/vendor/\n/generator/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.125,
          "content": "cache/*\nnode_modules/*\ngenerator/*\ndocs/*\n.gitattributes\n.gitignore\n.npmignore\npackage.json\npackage-lock.json\nindex.php\ntodo.txt"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.9482421875,
          "content": "## version 2.9.0 (January 26, 2024)\n\n- added country names in Farsi; see [#12](https://github.com/stefangabos/world_countries/pull/12); thanks [Mehdi Khodayari](https://github.com/mehdikhody)!\n- updated country names in various languages\n\n## version 2.8.2 (August 18, 2023)\n\n- fixed missing flags as single JSON files; this fixes [#77](https://github.com/stefangabos/world_countries/issues/77)\n- added missing region; see [#79](https://github.com/stefangabos/world_countries/issues/79) - thanks [RD-PINGEDPNG](https://github.com/RD-PINGEDPNG)!\n- updated country names in various languages\n\n## version 2.8.1 (April 18, 2023)\n\n- updated country names for various languages\n\n## version 2.8.0 (February 08, 2023)\n\n- added Croatian language; see [#73](https://github.com/stefangabos/world_countries/issues/73); thanks to [AppyxDaniel](https://github.com/AppyxDaniel)!\n\n## version 2.7.0 (January 23, 2023)\n\n- added Serbian and Slovenian languages; see [#73](https://github.com/stefangabos/world_countries/issues/73); thanks to [AppyxDaniel](https://github.com/AppyxDaniel)!\n- udpated Mauritania's flag; see [#36](https://github.com/stefangabos/world_countries/issues/36)\n- fixed broken downloads for Chinese and Simplified Chinese languages; see [#72](https://github.com/stefangabos/world_countries/issues/72); thanks to [Roy](https://github.com/1997roylee)!\n- added typings for TypeScript users; see [#70](https://github.com/stefangabos/world_countries/issues/70); thanks to [Blake Fischer](https://github.com/bfischer1121)!\n\n## version 2.6.0 (June 19, 2022)\n\n- added country names in Armenian, see [#68](https://github.com/stefangabos/world_countries/issues/68); thanks [Tigran Grigoryan](https://github.com/t1gr4n)!\n\n## version 2.5.1 (May 10, 2022)\n\n- removed unused flag of Netherlands Antilles\n- fixed #[67](https://github.com/stefangabos/world_countries/issues/67); thanks [Dennis Wueppelmann](https://github.com/Doener48)!\n\n## version 2.5.0 (March 30, 2022)\n\n- added ISO 3166-2 codes; see [#61](https://github.com/stefangabos/world_countries/issues/61); thanks to [Alan Jones](https://github.com/asjones987) for providing the links; what we have at this point should be considered as a start - a lot of codes are missing (according to [Wikipedia](https://en.wikipedia.org/wiki/ISO_3166-2) which says there are 5047 while our list has only 3607) and names are written in their anglicized version rather than local - this will have to be updated by the community\n- added Esperanto language\n- updated formatting and usage of PHP files; thanks to [Jacek Karczmarczyk](https://github.com/jacekkarczmarczyk) for suggesting - see [#58](https://github.com/stefangabos/world_countries/issues/58)\n\n## version 2.4.0 (February 06, 2022)\n\n- added `XML` file format\n- added combined lists; see [#29](https://github.com/stefangabos/world_countries/issues/29)\n- aded a note about the fact that alpha-2 and alpha-3 codes are lowercase instead of uppercase as defined by ISO 3166-1; see [#50](https://github.com/stefangabos/world_countries/issues/50)\n- fixed `id` of Sudan for Swedish language\n- fixed broken SQL files\n- changed folder structure in preparations for adding more data to the library; for now, countries moved to their own `countries` folder inside the `data` folder and the `flags` folder was moved inside the `data` folder\n\n## version 2.3.0 (September 28, 2021)\n\n- flags are now available as JSON files with data uris; see [#41](https://github.com/stefangabos/world_countries/issues/41)\n- fixed folder name for Estonian translations; see [#52](https://github.com/stefangabos/world_countries/issues/52)\n- fixed a potential issue with the lists for German language by removing a soft-hyphen `(\\u00ad)` from country names; see [#54](https://github.com/stefangabos/world_countries/issues/54)\n- fixed broken download links for Basque\n\n## version 2.2.0 (June 06, 2021)\n\n- added Bulgarian translations\n- updated country names for various languages\n\n## version 2.1.1 (October 17, 2020)\n\n- the lists are now available as a [Composer package](https://packagist.org/packages/stefangabos/world_countries); thanks to [piotrpog](https://github.com/piotrpog) for suggesting!\n\n## version 2.1.0 (October 15, 2020)\n\n- added country names in Finnish; see [#42](https://github.com/stefangabos/world_countries/issues/42), thanks [Alex Garcia](https://github.com/alexgarciab)!\n- use official short name for Belarus for German language; see [#40](https://github.com/stefangabos/world_countries/issues/40)\n\n## version 2.0.0 (September 25, 2020)\n\n- added Basque translation; thanks [erral](https://github.com/erral)!\n- changed data folder name for **Chinese (Simplified)** from `cn` to `zh` to correctly reflect ISO-639 language codes\n- changed data folder name for **Chinese (Traditional)** from `cn` to `zh-tw` to correctly reflect ISO-639 language codes\n- changed data folder name for **Estonian** from `et` to `ee` to correctly reflect ISO-639 language codes\n- updates to some country names in Arabic, German, Ukrainian, Traditional Chinese\n\n## version 1.1.1 (August 02, 2020)\n\n- fixed issues with Traditional Chinese\n\n## version 1.1.0 (August 02, 2020)\n\n- added Trasitional Chinese translations; see [#35](https://github.com/stefangabos/world_countries/pull/35)\n- added Korean translations; see [#34](https://github.com/stefangabos/world_countries/pull/34)\n- updates to some country names in Spanish, Swedish and Thai\n\n## version 1.0.2 (May 22, 2020)\n\n- added Swedish translations\n- Chinese translations are now in simplified Chinese instead of a mix (see [#32](https://github.com/stefangabos/world_countries/pull/32)); thanks [Sun Jiao](https://github.com/sun-jiao) for the help!\n- fixed [#33](https://github.com/stefangabos/world_countries/pull/33) where the country code of Sudan, for some translations, it was saved as `string` instead of `int` in the `JSON` format - thanks [Ruben Lie King](https://github.com/rl-king) for reporting!\n- all data in files is up to date as of May 22nd, 2020\n\n## version 1.0.0 (April 02, 2019)\n\n- first re-release since moving to GitHub\n\n## version 1.2.1 (January 26, 2016)\n\n- the list is now [available on GitHub](https://github.com/stefangabos/world_countries)\n- flags are now availabel also in 24x24, 32x32, 48x48, 64x64 and 128x128 pixels\n\n## version 1.2 (December 09, 2012)\n\n- added new country and codes: \"South Sudan\" (thanks to **Jackman**)\n- changed the ISO alpha-3 code of \"Congo\" from \"cod\" to \"cog\"\n- added \"cod\" ISO alpha-3 code to \"Congo, The Democratic Republic of the\"\n- added \"ggy\" ISO alpha-3 code to \"Guernsey\"\n- added \"jey\" ISO alpha-3 code to \"Jersey\"\n- added \"myt\" ISO alpha-3 code to \"Mayotte\"\n- added \"maf\" ISO alpha-3 code to \"Saint Martin (French Part)\n- added \"sxm\" ISO alpha-3 code to \"Sint Maarten\" (Dutch Part)\n- alpha-2 and alpha-3 codes are now lowercase and the countries' names are no longer all-caps\n- replaced the old flag icons dating from 2007 and with missing images for quite a few countries, with new ones by [IconDrawer](http://icondrawer.com/free.php)\n\n## version 1.1 (June 27, 2011)\n\n- updated the list\n\n## version 1.0 (January 30, 2006)\n\n- initial release\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.0654296875,
          "content": "# These are supported funding model platforms\n\ngithub: stefangabos\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 7.4619140625,
          "content": "### GNU LESSER GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc.\n<https://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n\n#### 0. Additional Definitions.\n\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\n\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n#### 1. Exception to Section 3 of the GNU GPL.\n\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n#### 2. Conveying Modified Versions.\n\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n-   a) under this License, provided that you make a good faith effort\n    to ensure that, in the event an Application does not supply the\n    function or data, the facility still operates, and performs\n    whatever part of its purpose remains meaningful, or\n-   b) under the GNU GPL, with none of the additional permissions of\n    this License applicable to that copy.\n\n#### 3. Object Code Incorporating Material from Library Header Files.\n\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n-   a) Give prominent notice with each copy of the object code that\n    the Library is used in it and that the Library and its use are\n    covered by this License.\n-   b) Accompany the object code with a copy of the GNU GPL and this\n    license document.\n\n#### 4. Combined Works.\n\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\n-   a) Give prominent notice with each copy of the Combined Work that\n    the Library is used in it and that the Library and its use are\n    covered by this License.\n-   b) Accompany the Combined Work with a copy of the GNU GPL and this\n    license document.\n-   c) For a Combined Work that displays copyright notices during\n    execution, include the copyright notice for the Library among\n    these notices, as well as a reference directing the user to the\n    copies of the GNU GPL and this license document.\n-   d) Do one of the following:\n    -   0) Convey the Minimal Corresponding Source under the terms of\n        this License, and the Corresponding Application Code in a form\n        suitable for, and under terms that permit, the user to\n        recombine or relink the Application with a modified version of\n        the Linked Version to produce a modified Combined Work, in the\n        manner specified by section 6 of the GNU GPL for conveying\n        Corresponding Source.\n    -   1) Use a suitable shared library mechanism for linking with\n        the Library. A suitable mechanism is one that (a) uses at run\n        time a copy of the Library already present on the user's\n        computer system, and (b) will operate properly with a modified\n        version of the Library that is interface-compatible with the\n        Linked Version.\n-   e) Provide Installation Information, but only if you would\n    otherwise be required to provide such information under section 6\n    of the GNU GPL, and only to the extent that such information is\n    necessary to install and execute a modified version of the\n    Combined Work produced by recombining or relinking the Application\n    with a modified version of the Linked Version. (If you use option\n    4d0, the Installation Information must accompany the Minimal\n    Corresponding Source and Corresponding Application Code. If you\n    use option 4d1, you must provide the Installation Information in\n    the manner specified by section 6 of the GNU GPL for conveying\n    Corresponding Source.)\n\n#### 5. Combined Libraries.\n\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n-   a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities, conveyed under the terms of this License.\n-   b) Give prominent notice with the combined library that part of it\n    is a work based on the Library, and explaining where to find the\n    accompanying uncombined form of the same work.\n\n#### 6. Revised Versions of the GNU Lesser General Public License.\n\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\n\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.916015625,
          "content": "<img src=\"https://raw.githubusercontent.com/stefangabos/zebrajs/master/docs/images/logo.png\" alt=\"zebrajs\" align=\"right\">\n\n# World countries &nbsp;[![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Constantly+updated+lists+of+world+countries+with+associated+ISO+3166-1+alpha-2%2C+alpha-3+and+numeric+codes%2C+available+in+multiple+formats+and+languages%2C+with+national+flags+included&url=https://github.com/stefangabos/world_countries&via=stefangabos)\n\n*available in multiple languages, in CSV, JSON, PHP, SQL and XML formats, with associated codes as defined by the ISO 3166 standard, and with national flags included; also available are the ISO 3166-2 codes used for identifying the principal subdivisions (e.g., provinces or states) of all countries coded in ISO 3166-1*\n\n[![npm](https://img.shields.io/npm/v/world_countries_lists.svg)](https://www.npmjs.com/package/world_countries_lists) [![Total](https://img.shields.io/npm/dt/world_countries_lists.svg)](https://www.npmjs.com/package/world_countries_lists) [![Monthly](https://img.shields.io/npm/dm/world_countries_lists.svg)](https://www.npmjs.com/package/world_countries_lists) [![JSDelivr](https://data.jsdelivr.com/v1/package/npm/world_countries_lists/badge?style=rounded)](https://www.jsdelivr.com/package/npm/world_countries_lists) [![License](https://img.shields.io/github/license/stefangabos/world_countries.svg)](https://github.com/stefangabos/world_countries/blob/master/LICENSE.md)\n\nConstantly updated lists of world countries, territories and areas of geographical interest, with associated *alpha-2*, *alpha-3* and *numeric codes* as defined by the *ISO 3166-1* standard, published and maintained by the [International Organization for Standardization](https://www.iso.org/iso-3166-country-codes.html), available in `CSV`, `JSON`, `PHP`, `SQL` and `XML` formats, in multiple languages and with national flags included. Also available are the ISO 3166-2 codes used for identifying the principal subdivisions (e.g., provinces or states) of all countries coded in ISO 3166-1.\n\nIn the language folders (inside `data/countries`) you will find files named in two different ways.<br>Here's what you will find in each of them:\n\n|File names | Content |\n|:---:|:---\n| <a name=\"world\"></a>*world.** | Files named like this contain all the **249** countries, territories, and areas of geographical interest that have an officially assigned *ISO 3166-1* code.\n| <a name=\"countries\"></a>*countries.** | Files named like this contain the **193** sovereign states (commonly referred to as *countries*) that are members of the [United&nbsp;Nations (UN)](https://www.un.org/about-us/member-states) .\n\n> Note that there are 206 sovereign states in the world, the 11 states that are missing from the *countries* list being the ones having their sovereignty disputed. See the list of [sovereign states](https://en.wikipedia.org/wiki/List_of_sovereign_states) with information on their status and recognition of their sovereignty.\n\nThe files contain:\n\n- the **ISO 3166-1 numeric** country codes\n- the **ISO 3166** official short names in *English*<small><sup>[1](#footnote)</sup></small>\n- the **ISO 3166-1 alpha-2** two-letter country codes<small><sup>[2](#footnote2)</sup></small>\n- the **ISO 3166-1 alpha-3** three-letter country codes<small><sup>[2](#footnote2)</sup></small>\n\n<small><a name=\"footnote\"><sup>1</sup></a> for other languages the country names are in that particular language</small>\n<br><small><a name=\"footnote2\"><sup>2</sup></a> ISO 3166-1 alpha codes are uppercase but this library provides them in lowercase</small>\n\nThe lists are currently available in **35 languages**:\n\n- Arabic\n- Armenian\n- Basque\n- Bulgarian\n- Chinese (Simplified)\n- Chinese (Traditional)\n- Croatian\n- Czech\n- Danish\n- Dutch\n- English\n- Esperanto\n- Estonian\n- Farsi\n- Finnish\n- French\n- German\n- Greek\n- Hungarian\n- Italian\n- Japanese\n- Korean\n- Lithuanian\n- Norwegian\n- Polish\n- Portuguese\n- Romanian\n- Russian\n- Serbian\n- Slovak\n- Slovenian\n- Spanish\n- Swedish\n- Thai\n- Ukrainian\n\n> The language folders are named based on the [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) standard.\n\n## ISO 3166-2 codes\n\nThe project also tries to be a comprehensive and up-to-date source for **ISO 3166-2** which defines codes for identifying the principal subdivisions (e.g., provinces or states) of all countries coded in ISO 3166-1.\n\nThe purpose of ISO 3166-2 is to establish an international standard of short and unique alphanumeric codes to represent the relevant administrative divisions and dependent territories of all countries in a more convenient and less ambiguous form than their full names. Each complete ISO 3166-2 code consists of two parts, separated by a hyphen:\n\n`US-TX` for Texas, USA\n\nThe first part is the ISO 3166-1 alpha-2 code of the country;\nThe second part is a string of up to three alphanumeric characters, which is usually obtained from national sources and stems from coding systems already in use in the country concerned, but may also be developed by the ISO itself.\nEach complete ISO 3166-2 code can then be used to uniquely identify a country subdivision in a global context.\n\nThe list is available in `CSV`, `JSON`, `PHP`, `SQL` and `XML` formats in the `data/subdivisions` folder and the CSV one looks like this:\n\n```csv\nUS,US-AL,Alabama\nUS,US-AK,Alaska\nUS,US-AZ,Arizona\nUS,US-AR,Arkansas\nUS,US-CA,California\nUS,US-CO,Colorado\n```\n\nThe starting point of this list was the ISO 3166-2 Subdivision Code list provided by [IP2Location](https://www.ip2location.com/free/iso3166-2) but this one will be maintained by the community.\n\n## 🎂 Support the development of this project\n\nYour support means a lot and it keeps me motivated to keep working on open source projects.<br>\nIf you like this project please ⭐ it by clicking on the star button at the top of the page.<br>\nIf you are feeling generous, you can buy me a coffee by donating through PayPal, or you can become a sponsor.<br>\nEither way - **Thank you!** 🎉\n\n[<img src=\"https://img.shields.io/github/stars/stefangabos/world_countries?color=green&label=star%20it%20on%20GitHub\" width=\"132\" height=\"20\" alt=\"Star it on GitHub\">](https://github.com/stefangabos/world_countries) [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=BPBPYP293BRLC) [<img src=\"https://img.shields.io/badge/-Sponsor-fafbfc?logo=GitHub%20Sponsors\">](https://github.com/sponsors/stefangabos)\n\n## Installation\n\nThe lists are available as a [npm package](https://www.npmjs.com/package/world_countries_lists). To install it use:\n\n```bash\n# the \"--save\" argument adds the plugin as a dependency in packages.json\nnpm install world_countries_lists --save\n```\n\nYou can install the lists via [Composer](https://packagist.org/packages/stefangabos/world_countries)\n```shell\ncomposer require stefangabos/world_countries\n```\n\nAlternatively, you can load data from [JSDelivr CDN](https://www.jsdelivr.com/package/npm/world_countries_lists) like this:\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/world_countries_lists@latest/data/countries/en/countries.json\"></script>\n```\n\nOr\n> [download a customized build](http://stefangabos.github.io/world_countries/).\n\n## Data formats\n\n### SQL\n\nExcerpt from the `data/countries/en/countries.sql` file:\n\n```sql\n(250,'fr','fra','France'),\n(266,'ga','gab','Gabon'),\n(270,'gm','gmb','Gambia'),\n(268,'ge','geo','Georgia'),\n(276,'de','deu','Germany'),\n(288,'gh','gha','Ghana'),\n(300,'gr','grc','Greece'),\n(308,'gd','grd','Grenada'),\n```\n\n### CSV\n\nExcerpt from the `data/countries/en/countries.csv` file:\n\n```csv\n250,fr,fra,France\n266,ga,gab,Gabon\n270,gm,gmb,Gambia\n268,ge,geo,Georgia\n276,de,deu,Germany\n288,gh,gha,Ghana\n300,gr,grc,Greece\n308,gd,grd,Grenada\n```\n\n### JSON\n\nExcerpt from the `data/countries/en/countries.json` file:\n\n```json\n{\"id\":250,\"alpha2\":\"fr\",\"alpha3\":\"fra\",\"name\":\"France\"},\n{\"id\":266,\"alpha2\":\"ga\",\"alpha3\":\"gab\",\"name\":\"Gabon\"},\n{\"id\":270,\"alpha2\":\"gm\",\"alpha3\":\"gmb\",\"name\":\"Gambia\"},\n{\"id\":268,\"alpha2\":\"ge\",\"alpha3\":\"geo\",\"name\":\"Georgia\"},\n{\"id\":276,\"alpha2\":\"de\",\"alpha3\":\"deu\",\"name\":\"Germany\"},\n{\"id\":288,\"alpha2\":\"gh\",\"alpha3\":\"gha\",\"name\":\"Ghana\"},\n{\"id\":300,\"alpha2\":\"gr\",\"alpha3\":\"grc\",\"name\":\"Greece\"},\n{\"id\":308,\"alpha2\":\"gd\",\"alpha3\":\"grd\",\"name\":\"Grenada\"},\n```\n\nHere's a little helper function for searching for a specific country's data\n\n> The helper function assumes that the JSON with the countries data is associated with a variable named `countries` which is in the same scope as the function\n\n> The helper function is to be used with the *non-combined* data sets.<br>For the *combined* data sets you can write the function yourself.\n\n```js\n//  returns an object with the sought country's data if the search yields a result\n//  returns undefined if no results could be found or if argument is incorrect\nfunction search_country(query) {\n\n    // if argument is not valid return false\n    if (undefined === query.id && undefined === query.alpha2 && undefined === query.alpha3) return undefined;\n\n        // iterate over the array of countries\n\treturn countries.filter(function(country) {\n\n        // return country's data if\n        return (\n            // we are searching by ID and we have a match\n            (undefined !== query.id && parseInt(country.id, 10) === parseInt(query.id, 10))\n            // or we are searching by alpha2 and we have a match\n            || (undefined !== query.alpha2 && country.alpha2 === query.alpha2.toLowerCase())\n            // or we are searching by alpha3 and we have a match\n            || (undefined !== query.alpha3 && country.alpha3 === query.alpha3.toLowerCase())\n        )\n\n    // since \"filter\" returns an array we use pop to get just the data object\n    }).pop()\n\n}\n```\n\nUsage\n\n```js\nsearch_country({id: 250})\nsearch_country({alpha2: 'fr'})\nsearch_country({alpha3: 'fra'})\n```\n\n### TypeScript\n\nTypings are available ([source](types.d.ts)):\n\n```ts\nimport { Country, LanguageCode, TranslatedCountry } from 'world_countries_lists'\n```\n\n### PHP\n\nExcerpt from the `data/countries/en/countries.php` file:\n\n```php\n250 => array('id' => 250, 'alpha2' => 'fr', 'alpha3' => 'fra', 'name' => 'France'),\n266 => array('id' => 266, 'alpha2' => 'ga', 'alpha3' => 'gab', 'name' => 'Gabon'),\n270 => array('id' => 270, 'alpha2' => 'gm', 'alpha3' => 'gmb', 'name' => 'Gambia'),\n```\nHere's a little helper function for searching for a specific country's data\n\n> The helper function is to be used with the *non-combined* data sets.<br>For the *combined* data sets you can write the function yourself.\n\n```php\n//  this function assumes that you have done this:\n$countries = require 'path/to/countries.php';\n\n//  returns an array with the sought country's data if the search yields a result\n//  returns false if no results could be found or if argument is incorrect\nfunction search_country($query) {\n\n    // make the countries available in the function\n    global $countries;\n\n    // if argument is not valid return false\n    if (!isset($query['id']) && !isset($query['alpha2']) && !isset($query['alpha3'])) return false;\n\n    // iterate over the array of countries\n    $result = array_filter($countries, function($country) use ($query) {\n\n        // return country's data if\n        return (\n            // we are searching by ID and we have a match\n            (isset($query['id']) && $country['id'] == $query['id'])\n            // or we are searching by alpha2 and we have a match\n            || (isset($query['alpha2']) && $country['alpha2'] == strtolower($query['alpha2']))\n            // or we are searching by alpha3 and we have a match\n            || (isset($query['alpha3']) && $country['alpha3'] == strtolower($query['alpha3']))\n        );\n\n    });\n\n    // since \"array_filter\" returns an array we use pop to get just the data object\n    // we return false if a result was not found\n    return empty($result) ? false : array_pop($result);\n\n}\n```\nUsage\n\n```php\nsearch_country(array('id' => 250));\nsearch_country(array('alpha2' => 'fr'));\nsearch_country(array('alpha3' => 'fra'));\n```\n\n### XML\n\nExcerpt from the `data/countries/en/countries.xml` file:\n\n```xml\n<country id=\"250\" alpha2=\"fr\" alpha3=\"fra\" name=\"France\"/>\n<country id=\"266\" alpha2=\"ga\" alpha3=\"gab\" name=\"Gabon\"/>\n<country id=\"270\" alpha2=\"gm\" alpha3=\"gmb\" name=\"Gambia\"/>\n<country id=\"268\" alpha2=\"ge\" alpha3=\"geo\" name=\"Georgia\"/>\n<country id=\"276\" alpha2=\"de\" alpha3=\"deu\" name=\"Germany\"/>\n<country id=\"288\" alpha2=\"gh\" alpha3=\"gha\" name=\"Ghana\"/>\n<country id=\"300\" alpha2=\"gr\" alpha3=\"grc\" name=\"Greece\"/>\n<country id=\"308\" alpha2=\"gd\" alpha3=\"grd\" name=\"Grenada\"/>\n```\n\n## Flags\n\nThe package also contains the national flags of each country as a 16x16, 24x24, 32x32, 48x48, 64x64 and 128x128 PNG images. The image files are named using the ISO 3166-1-alpha-2 code of the country they represent, for easily pairing flags with countries.\n\n> Flag images are also available as single `JSON` files, one for each of the available sizes, containing all flag images as `data-uri`\n\n## Data sources\n\nCountry names in all languages are taken from [Wikipedia](https://en.wikipedia.org/wiki/ISO_3166-1).\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.7666015625,
          "content": "{\n    \"name\": \"stefangabos/world_countries\",\n    \"description\": \"Constantly updated lists of world countries, territories and areas of geographical interest, with associated alpha-2, alpha-3 and numeric codes as defined by the ISO 3166-1 standard, available in multiple formats and languages, with national flags included\",\n    \"type\": \"library\",\n    \"license\": \"LGPL-3.0\",\n    \"keywords\": [\n        \"world\",\n        \"countries\",\n        \"flag\",\n        \"flags\",\n        \"alpha-2\",\n        \"alpha-3\",\n        \"iso 3166\",\n        \"iso 3166-1\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"stefangabos\",\n            \"email\": \"contact@stefangabos.ro\",\n            \"homepage\": \"https://github.com/stefangabos\",\n            \"role\": \"Developer\"\n        }\n    ],\n    \"require\": {}\n}\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.8427734375,
          "content": "{\n  \"name\": \"world_countries_lists\",\n  \"version\": \"2.9.0\",\n  \"description\": \"Constantly updated lists of world countries and their associated alpha-2, alpha-3 and numeric codes as defined by the ISO 3166 standard, available in multiple formats, in multiple languages and with national flags included\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/stefangabos/world_countries.git\"\n  },\n  \"keywords\": [\n    \"countries\",\n    \"flags\",\n    \"national-flags\",\n    \"iso-3166\",\n    \"sql\",\n    \"json\",\n    \"csv\",\n    \"php\",\n    \"xml\"\n  ],\n  \"author\": \"Stefan Gabos\",\n  \"license\": \"LGPL-3.0-or-later\",\n  \"bugs\": {\n    \"url\": \"https://github.com/stefangabos/world_countries/issues\"\n  },\n  \"homepage\": \"https://github.com/stefangabos/world_countries#readme\",\n  \"main\": \"index.js\",\n  \"types\": \"types.d.ts\",\n  \"directories\": {\n    \"doc\": \"docs\"\n  }\n}\n"
        },
        {
          "name": "types.d.ts",
          "type": "blob",
          "size": 0.4931640625,
          "content": "export type LanguageCode =\n  | 'ar'\n  | 'bg'\n  | 'cs'\n  | 'da'\n  | 'de'\n  | 'el'\n  | 'en'\n  | 'eo'\n  | 'es'\n  | 'et'\n  | 'eu'\n  | 'fa'\n  | 'fi'\n  | 'fr'\n  | 'hu'\n  | 'hy'\n  | 'it'\n  | 'ja'\n  | 'ko'\n  | 'lt'\n  | 'nl'\n  | 'no'\n  | 'pl'\n  | 'pt'\n  | 'ro'\n  | 'ru'\n  | 'sk'\n  | 'sr'\n  | 'sv'\n  | 'th'\n  | 'uk'\n  | 'zh'\n  | 'zh-tw'\n\nexport interface Country {\n  id: number\n  alpha2: string\n  alpha3: string\n  name: string\n}\n\nexport type TranslatedCountry = Omit<Country, 'name'> & Record<LanguageCode, string>\n"
        }
      ]
    }
  ]
}