{
  "metadata": {
    "timestamp": 1736711971970,
    "page": 435,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rap2hpoutre/fast-excel",
      "stars": 2143,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0576171875,
          "content": "/vendor\n/.idea\n/build\n/composer.lock\n.phpunit.result.cache\n"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.6279296875,
          "content": "build:\n  nodes:\n    analysis:\n      tests:\n        override:\n          - php-scrutinizer-run\n\nfilter:\n    excluded_paths: \n      - tests\n    dependency_paths: \n      - vendor\n\nchecks:\n    php:\n        remove_extra_empty_lines: true\n        remove_php_closing_tag: true\n        remove_trailing_whitespace: true\n        fix_use_statements:\n            remove_unused: true\n            preserve_multiple: false\n            preserve_blanklines: true\n            order_alphabetically: true\n        fix_php_opening_tag: true\n        fix_linefeed: true\n        fix_line_ending: true\n        fix_identation_4spaces: true\n        fix_doc_comments: true\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1845703125,
          "content": "language: php\n\nphp:\n  - 7.1.0\n  - 7.2.0\n  - 7.3.0\n  - 7.4.0\n  - 8.0.0\n  - 8.1.0\n\ninstall:\n  - travis_retry composer install --no-interaction --prefer-source\n\nscript:\n  - vendor/bin/phpunit\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.3955078125,
          "content": "# 4.0.0\n- Move from box/spout to openspout/openspout v3 | https://github.com/openspout/openspout\n- Fix phpunit tests\n- Add support to php 8.1\n- Integrated with Github Actions\n- Add auto dependabot merge\n\n\n# 3.0.0\n- add support for PHP 8\n- update PHPUnit to 6.4 to 9.5\n- update Spout from 2 to 3\n- (breaking change) drop support for PHP 7.1\n- (breaking change) remove setEndOfLineCharacter support for CSV\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0751953125,
          "content": "MIT License\n\nCopyright (c) 2017-present RaphaÃ«l Huchet (rap2h, rap2hpoutre)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.556640625,
          "content": "<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/36028424/40173202-9a03d68a-5a03-11e8-9968-6b7e3b4f8a1b.png\">\n</p>\n\n[![Version](https://poser.pugx.org/rap2hpoutre/fast-excel/version?format=flat)](https://packagist.org/packages/rap2hpoutre/fast-excel)\n[![License](https://poser.pugx.org/rap2hpoutre/fast-excel/license?format=flat)](https://packagist.org/packages/rap2hpoutre/fast-excel)\n[![StyleCI](https://github.styleci.io/repos/128174809/shield?branch=master)](https://github.styleci.io/repos/128174809?branch=master)\n[![Tests](https://github.com/rap2hpoutre/fast-excel/actions/workflows/tests.yml/badge.svg)](https://github.com/rap2hpoutre/fast-excel/actions/workflows/tests.yml)\n[![Total Downloads](https://poser.pugx.org/rap2hpoutre/fast-excel/downloads)](https://packagist.org/packages/rap2hpoutre/fast-excel)\n\nFast Excel import/export for Laravel, thanks to [Spout](https://github.com/box/spout).\nSee [benchmarks](#benchmarks) below.\n\n## Quick start\n\nInstall via composer:\n\n```\ncomposer require rap2hpoutre/fast-excel\n```\n\nExport a Model to `.xlsx` file:\n\n```php\nuse Rap2hpoutre\\FastExcel\\FastExcel;\nuse App\\User;\n\n// Load users\n$users = User::all();\n\n// Export all users\n(new FastExcel($users))->export('file.xlsx');\n```\n\n## Export\n\nExport a Model or a **Collection**:\n\n```php\n$list = collect([\n    [ 'id' => 1, 'name' => 'Jane' ],\n    [ 'id' => 2, 'name' => 'John' ],\n]);\n\n(new FastExcel($list))->export('file.xlsx');\n```\n\nExport `xlsx`, `ods` and `csv`:\n\n```php\n$invoices = App\\Invoice::orderBy('created_at', 'DESC')->get();\n(new FastExcel($invoices))->export('invoices.csv');\n```\n\nExport only some attributes specifying columns names:\n\n```php\n(new FastExcel(User::all()))->export('users.csv', function ($user) {\n    return [\n        'Email' => $user->email,\n        'First Name' => $user->firstname,\n        'Last Name' => strtoupper($user->lastname),\n    ];\n});\n```\n\nDownload (from a controller method):\n\n```php\nreturn (new FastExcel(User::all()))->download('file.xlsx');\n```\n\n## Import\n\n`import` returns a Collection:\n\n```php\n$collection = (new FastExcel)->import('file.xlsx');\n```\n\nImport a `csv` with specific delimiter, enclosure characters and \"gbk\" encoding:\n\n```php\n$collection = (new FastExcel)->configureCsv(';', '#', 'gbk')->import('file.csv');\n```\n\nImport and insert to database:\n\n```php\n$users = (new FastExcel)->import('file.xlsx', function ($line) {\n    return User::create([\n        'name' => $line['Name'],\n        'email' => $line['Email']\n    ]);\n});\n```\n\n## Facades\n\nYou may use FastExcel with the optional Facade. Add the following line to ``config/app.php`` under the ``aliases`` key.\n\n````php\n'FastExcel' => Rap2hpoutre\\FastExcel\\Facades\\FastExcel::class,\n````\n\nUsing the Facade, you will not have access to the constructor. You may set your export data using the ``data`` method.\n\n````php\n$list = collect([\n    [ 'id' => 1, 'name' => 'Jane' ],\n    [ 'id' => 2, 'name' => 'John' ],\n]);\n\nFastExcel::data($list)->export('file.xlsx');\n````\n\n## Global helper\n\nFastExcel provides a convenient global helper to quickly instantiate the FastExcel class anywhere in a Laravel application.\n\n```php\n$collection = fastexcel()->import('file.xlsx');\nfastexcel($collection)->export('file.xlsx');\n```\n\n## Advanced usage\n\n### Export multiple sheets\n\nExport multiple sheets by creating a `SheetCollection`:\n\n```php\n$sheets = new SheetCollection([\n    User::all(),\n    Project::all()\n]);\n(new FastExcel($sheets))->export('file.xlsx');\n```\n\nUse index to specify sheet name:\n```php\n$sheets = new SheetCollection([\n    'Users' => User::all(),\n    'Second sheet' => Project::all()\n]);\n```\n\n### Import multiple sheets\n\nImport multiple sheets by using `importSheets`:\n\n```php\n$sheets = (new FastExcel)->importSheets('file.xlsx');\n```\n\nYou can also import a specific sheet by its number:\n\n```php\n$users = (new FastExcel)->sheet(3)->import('file.xlsx');\n```\n\nImport multiple sheets with sheets names:\n\n```php\n$sheets = (new FastExcel)->withSheetsNames()->importSheets('file.xlsx');\n```\n\n### Export large collections with chunk\n\nExport rows one by one to avoid `memory_limit` issues [using `yield`](https://www.php.net/manual/en/language.generators.syntax.php):\n\n```php\nfunction usersGenerator() {\n    foreach (User::cursor() as $user) {\n        yield $user;\n    }\n}\n\n// Export consumes only a few MB, even with 10M+ rows.\n(new FastExcel(usersGenerator()))->export('test.xlsx');\n```\n\n### Add header and rows style\n\nAdd header and rows style with `headerStyle` and `rowsStyle` methods.\n\n```php\nuse OpenSpout\\Common\\Entity\\Style\\Style;\n\n$header_style = (new Style())->setFontBold();\n\n$rows_style = (new Style())\n    ->setFontSize(15)\n    ->setShouldWrapText()\n    ->setBackgroundColor(\"EDEDED\");\n\nreturn (new FastExcel($list))\n    ->headerStyle($header_style)\n    ->rowsStyle($rows_style)\n    ->download('file.xlsx');\n```\n\n## Why?\n\nFastExcel is intended at being Laravel-flavoured [Spout](https://github.com/box/spout):\na simple, but elegant wrapper around [Spout](https://github.com/box/spout) with the goal\nof simplifying **imports and exports**. It could be considered as a faster (and memory friendly) alternative\nto [Laravel Excel](https://laravel-excel.com/), with less features.\nUse it only for simple tasks.\n\n## Benchmarks\n\n> Tested on a MacBook Pro 2015 2,7 GHz Intel Core i5 16 Go 1867 MHz DDR3.\nTesting a XLSX export for 10000 lines, 20 columns with random data, 10 iterations, 2018-04-05. **Don't trust benchmarks.**\n\n|   | Average memory peak usage  | Execution time |\n|---|---|---|\n| Laravel Excel  | 123.56 M  | 11.56 s |\n| FastExcel  | 2.09 M | 2.76 s |\n\nStill, remember that [Laravel Excel](https://laravel-excel.com/) **has many more features.**\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.29296875,
          "content": "{\n    \"name\": \"rap2hpoutre/fast-excel\",\n    \"type\": \"library\",\n    \"keywords\": [\n        \"laravel\",\n        \"excel\",\n        \"csv\",\n        \"xls\",\n        \"xlsx\"\n    ],\n    \"description\": \"Fast Excel import/export for Laravel\",\n    \"require\": {\n        \"php\": \"^8.0\",\n        \"illuminate/support\": \"^6.0 || ^7.0 || ^8.0 || ^9.0 || ^10.0 || ^11.0\",\n        \"openspout/openspout\": \"^4.24\"\n    },\n    \"require-dev\": {\n        \"illuminate/database\": \"^6.20.12 || ^7.30.4 || ^8.24.0 || ^9.0 || ^10.0 || ^11.0\",\n        \"phpunit/phpunit\": \"^9.5 || ^10.1\",\n        \"squizlabs/php_codesniffer\": \"3.*\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Rap2hpoutre\\\\FastExcel\\\\\": \"src/\"\n        },\n        \"files\": [\n            \"src/functions/fastexcel.php\"\n        ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Rap2hpoutre\\\\FastExcel\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"extra\": {\n        \"laravel\": {\n            \"providers\": [\n                \"Rap2hpoutre\\\\FastExcel\\\\Providers\\\\FastExcelServiceProvider\"\n            ]\n        }\n    },\n    \"scripts\": {\n        \"test\": \"vendor/bin/phpunit tests\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"rap2h\",\n            \"email\": \"raphaelht@gmail.com\"\n        }\n    ],\n    \"minimum-stability\": \"dev\",\n    \"prefer-stable\": true\n}\n"
        },
        {
          "name": "phpcs.xml",
          "type": "blob",
          "size": 5.529296875,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Laravel Standards\">\n\n    <description>The Laravel Coding Standards</description>\n\n    <rule ref=\"Generic.CodeAnalysis.EmptyStatement\"/>\n    <rule ref=\"Generic.Debug.ClosureLinter\"/>\n    <rule ref=\"Generic.Debug.JSHint\"/>\n    <rule ref=\"Generic.Debug.CSSLint\"/>\n    <rule ref=\"Generic.Formatting.NoSpaceAfterCast\"/>\n    <rule ref=\"Generic.Functions.OpeningFunctionBraceKernighanRitchie\"/>\n    <rule ref=\"Generic.NamingConventions.UpperCaseConstantName\"/>\n    <rule ref=\"Generic.NamingConventions.CamelCapsFunctionName\"/>\n    <rule ref=\"Generic.Classes.DuplicateClassName\"/>\n    <rule ref=\"Generic.CodeAnalysis.ForLoopShouldBeWhileLoop\"/>\n    <rule ref=\"Generic.CodeAnalysis.ForLoopWithTestFunctionCall\"/>\n    <rule ref=\"Generic.CodeAnalysis.JumbledIncrementer\"/>\n    <rule ref=\"Generic.CodeAnalysis.UnconditionalIfStatement\"/>\n    <rule ref=\"Generic.CodeAnalysis.UnnecessaryFinalModifier\"/>\n    <rule ref=\"Generic.CodeAnalysis.UnusedFunctionParameter\"/>\n    <rule ref=\"Generic.CodeAnalysis.UselessOverridingMethod\"/>\n    <rule ref=\"Generic.Commenting.Todo\"/>\n    <rule ref=\"Generic.Commenting.Fixme\"/>\n    <rule ref=\"Generic.ControlStructures.InlineControlStructure\"/>\n    <rule ref=\"Generic.Files.ByteOrderMark\"/>\n    <rule ref=\"Generic.Files.LineEndings\"/>\n    <rule ref=\"Generic.Files.LineLength\">\n        <properties>\n            <property name=\"lineLimit\" value=\"120\"/>\n            <property name=\"absoluteLineLimit\" value=\"150\"/>\n        </properties>\n    </rule>\n    <rule ref=\"Generic.Formatting.DisallowMultipleStatements\"/>\n    <rule ref=\"Generic.Formatting.MultipleStatementAlignment\"/>\n    <rule ref=\"Generic.Formatting.SpaceAfterCast\"/>\n    <rule ref=\"Generic.Functions.CallTimePassByReference\"/>\n    <rule ref=\"Generic.Functions.FunctionCallArgumentSpacing\"/>\n    <rule ref=\"Generic.Functions.OpeningFunctionBraceBsdAllman\"/>\n    <rule ref=\"Generic.Metrics.CyclomaticComplexity\">\n        <properties>\n            <property name=\"complexity\" value=\"50\"/>\n            <property name=\"absoluteComplexity\" value=\"100\"/>\n        </properties>\n    </rule>\n    <rule ref=\"Generic.Metrics.NestingLevel\">\n        <properties>\n            <property name=\"nestingLevel\" value=\"10\"/>\n            <property name=\"absoluteNestingLevel\" value=\"30\"/>\n        </properties>\n    </rule>\n    <rule ref=\"Generic.NamingConventions.ConstructorName\"/>\n    <rule ref=\"Generic.PHP.LowerCaseConstant\"/>\n    <rule ref=\"Generic.PHP.DeprecatedFunctions\"/>\n    <rule ref=\"Generic.PHP.DisallowShortOpenTag\"/>\n    <rule ref=\"Generic.PHP.ForbiddenFunctions\"/>\n    <rule ref=\"Generic.PHP.NoSilencedErrors\"/>\n    <rule ref=\"Generic.WhiteSpace.DisallowTabIndent\"/>\n    <rule ref=\"Generic\">\n        <exclude-pattern>*.php</exclude-pattern>\n        <exclude name=\"Generic.Strings.UnnecessaryStringConcat.Found)\"/>\n    </rule>\n    <rule ref=\"Generic.WhiteSpace.ScopeIndent\">\n        <properties>\n            <property name=\"indent\" value=\"4\"/>\n            <property name=\"tabIndent\" value=\"true\"/>\n        </properties>\n    </rule>\n\n\n    <rule ref=\"MySource.PHP.EvalObjectFactory\"/>\n    <rule ref=\"MySource.PHP.GetRequestData\"/>\n    <rule ref=\"MySource.PHP.AjaxNullComparison\"/>\n\n<!--    <rule ref=\"PHPUnitStandard.Testing.AllowedFunctionOverride\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.ClassName\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.ExtraneousClass\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.FileNameSuffix\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.NoOutputFunctions\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.NoOutputStatements\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.ProvenTestCase\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.TestOrProviderIsPublic\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.UnusedProvider\"/>-->\n<!--    <rule ref=\"PHPUnitStandard.Testing.ValidFunctionName\"/>-->\n\n    <rule ref=\"PSR1.Classes.ClassDeclaration\"/>\n    <rule ref=\"PSR1.Files.SideEffects\"/>\n    <rule ref=\"PSR1.Classes.ClassDeclaration.MissingNamespace\">\n        <exclude-pattern>database/*.php</exclude-pattern>\n    </rule>\n\n    <rule ref=\"PSR2.Classes.ClassDeclaration\"/>\n    <rule ref=\"PSR2.Classes.PropertyDeclaration\"/>\n    <rule ref=\"PSR2.ControlStructures.ControlStructureSpacing\"/>\n    <rule ref=\"PSR2.ControlStructures.ElseIfDeclaration\"/>\n    <rule ref=\"PSR2.ControlStructures.SwitchDeclaration\"/>\n    <rule ref=\"PSR2.Files.EndFileNewline\"/>\n    <rule ref=\"PSR2.Methods.MethodDeclaration\"/>\n    <rule ref=\"PSR2.Namespaces.NamespaceDeclaration\"/>\n    <rule ref=\"PSR2.Namespaces.UseDeclaration\"/>\n\n    <rule ref=\"Zend.Files.ClosingTag\"/>\n\n    <rule ref=\"Squiz\">\n        <exclude-pattern>*.php</exclude-pattern>\n        <exclude name=\"Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace\"/>\n    </rule>\n\n\n    <file>src</file>\n    <file>src/Facades</file>\n    <file>src/functions</file>\n    <file>src/Providers</file>\n\n    <exclude-pattern>*/cache/*</exclude-pattern>\n    <exclude-pattern>*/*.xml</exclude-pattern>\n    <exclude-pattern>*/*.blade.php</exclude-pattern>\n    <exclude-pattern>*/autoload.php</exclude-pattern>\n    <exclude-pattern>*/storage/*</exclude-pattern>\n    <exclude-pattern>*/docs/*</exclude-pattern>\n    <exclude-pattern>*/vendor/*</exclude-pattern>\n    <exclude-pattern>*/public/index.php</exclude-pattern>\n    <exclude-pattern>*/*.blade.php</exclude-pattern>\n    <exclude-pattern>*_ide_helper.php*</exclude-pattern>\n    <exclude-pattern>*ide-helper.php*</exclude-pattern>\n\n    <arg name=\"colors\"/>\n    <arg value=\"spvnl\"/>\n    <arg value=\"p\"/>\n    <ini name=\"memory_limit\" value=\"128M\"/>\n\n    <rule ref=\"PSR1\"/>\n    <rule ref=\"PSR2\"/>\n    <rule ref=\"PSR12\"/>\n\n</ruleset>\n"
        },
        {
          "name": "phpunit.xml",
          "type": "blob",
          "size": 0.544921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"./vendor/phpunit/phpunit/phpunit.xsd\"\n         bootstrap=\"vendor/autoload.php\"\n         colors=\"true\">\n    <testsuites>\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <coverage processUncoveredFiles=\"true\">\n        <include>\n            <directory suffix=\".php\">./app</directory>\n        </include>\n    </coverage>\n</phpunit>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}